/*
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.net.URI;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FlexV1InsightsAssessments
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:36.090607-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FlexV1InsightsAssessments {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_AGENT_ID = "agent_id";
  @SerializedName(SERIALIZED_NAME_AGENT_ID)
  private String agentId;

  public static final String SERIALIZED_NAME_ANSWER_ID = "answer_id";
  @SerializedName(SERIALIZED_NAME_ANSWER_ID)
  private String answerId;

  public static final String SERIALIZED_NAME_ANSWER_TEXT = "answer_text";
  @SerializedName(SERIALIZED_NAME_ANSWER_TEXT)
  private String answerText;

  public static final String SERIALIZED_NAME_ASSESSMENT = "assessment";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT)
  private Object assessment = null;

  public static final String SERIALIZED_NAME_ASSESSMENT_SID = "assessment_sid";
  @SerializedName(SERIALIZED_NAME_ASSESSMENT_SID)
  private String assessmentSid;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private BigDecimal offset;

  public static final String SERIALIZED_NAME_REPORT = "report";
  @SerializedName(SERIALIZED_NAME_REPORT)
  private Boolean report;

  public static final String SERIALIZED_NAME_SEGMENT_ID = "segment_id";
  @SerializedName(SERIALIZED_NAME_SEGMENT_ID)
  private String segmentId;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private BigDecimal timestamp;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_USER_EMAIL = "user_email";
  @SerializedName(SERIALIZED_NAME_USER_EMAIL)
  private String userEmail;

  public static final String SERIALIZED_NAME_USER_NAME = "user_name";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private BigDecimal weight;

  public FlexV1InsightsAssessments() {
  }

  public FlexV1InsightsAssessments accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The unique SID identifier of the Account.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public FlexV1InsightsAssessments agentId(String agentId) {
    this.agentId = agentId;
    return this;
  }

  /**
   * The id of the Agent
   * @return agentId
   */
  @javax.annotation.Nullable
  public String getAgentId() {
    return agentId;
  }

  public void setAgentId(String agentId) {
    this.agentId = agentId;
  }


  public FlexV1InsightsAssessments answerId(String answerId) {
    this.answerId = answerId;
    return this;
  }

  /**
   * The id of the answer selected by user
   * @return answerId
   */
  @javax.annotation.Nullable
  public String getAnswerId() {
    return answerId;
  }

  public void setAnswerId(String answerId) {
    this.answerId = answerId;
  }


  public FlexV1InsightsAssessments answerText(String answerText) {
    this.answerText = answerText;
    return this;
  }

  /**
   * The answer text selected by user
   * @return answerText
   */
  @javax.annotation.Nullable
  public String getAnswerText() {
    return answerText;
  }

  public void setAnswerText(String answerText) {
    this.answerText = answerText;
  }


  public FlexV1InsightsAssessments assessment(Object assessment) {
    this.assessment = assessment;
    return this;
  }

  /**
   * Assessment Details associated with an assessment
   * @return assessment
   */
  @javax.annotation.Nullable
  public Object getAssessment() {
    return assessment;
  }

  public void setAssessment(Object assessment) {
    this.assessment = assessment;
  }


  public FlexV1InsightsAssessments assessmentSid(String assessmentSid) {
    this.assessmentSid = assessmentSid;
    return this;
  }

  /**
   * The SID of the assessment
   * @return assessmentSid
   */
  @javax.annotation.Nullable
  public String getAssessmentSid() {
    return assessmentSid;
  }

  public void setAssessmentSid(String assessmentSid) {
    this.assessmentSid = assessmentSid;
  }


  public FlexV1InsightsAssessments offset(BigDecimal offset) {
    this.offset = offset;
    return this;
  }

  /**
   * Offset of the conversation
   * @return offset
   */
  @javax.annotation.Nullable
  public BigDecimal getOffset() {
    return offset;
  }

  public void setOffset(BigDecimal offset) {
    this.offset = offset;
  }


  public FlexV1InsightsAssessments report(Boolean report) {
    this.report = report;
    return this;
  }

  /**
   * The flag indicating if this assessment is part of report 
   * @return report
   */
  @javax.annotation.Nullable
  public Boolean getReport() {
    return report;
  }

  public void setReport(Boolean report) {
    this.report = report;
  }


  public FlexV1InsightsAssessments segmentId(String segmentId) {
    this.segmentId = segmentId;
    return this;
  }

  /**
   * Segment Id of conversation
   * @return segmentId
   */
  @javax.annotation.Nullable
  public String getSegmentId() {
    return segmentId;
  }

  public void setSegmentId(String segmentId) {
    this.segmentId = segmentId;
  }


  public FlexV1InsightsAssessments timestamp(BigDecimal timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Get timestamp
   * @return timestamp
   */
  @javax.annotation.Nullable
  public BigDecimal getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(BigDecimal timestamp) {
    this.timestamp = timestamp;
  }


  public FlexV1InsightsAssessments url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public FlexV1InsightsAssessments userEmail(String userEmail) {
    this.userEmail = userEmail;
    return this;
  }

  /**
   * The email id of the user.
   * @return userEmail
   */
  @javax.annotation.Nullable
  public String getUserEmail() {
    return userEmail;
  }

  public void setUserEmail(String userEmail) {
    this.userEmail = userEmail;
  }


  public FlexV1InsightsAssessments userName(String userName) {
    this.userName = userName;
    return this;
  }

  /**
   * The name of the user.
   * @return userName
   */
  @javax.annotation.Nullable
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }


  public FlexV1InsightsAssessments weight(BigDecimal weight) {
    this.weight = weight;
    return this;
  }

  /**
   * The weightage given to this comment
   * @return weight
   */
  @javax.annotation.Nullable
  public BigDecimal getWeight() {
    return weight;
  }

  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlexV1InsightsAssessments flexV1InsightsAssessments = (FlexV1InsightsAssessments) o;
    return Objects.equals(this.accountSid, flexV1InsightsAssessments.accountSid) &&
        Objects.equals(this.agentId, flexV1InsightsAssessments.agentId) &&
        Objects.equals(this.answerId, flexV1InsightsAssessments.answerId) &&
        Objects.equals(this.answerText, flexV1InsightsAssessments.answerText) &&
        Objects.equals(this.assessment, flexV1InsightsAssessments.assessment) &&
        Objects.equals(this.assessmentSid, flexV1InsightsAssessments.assessmentSid) &&
        Objects.equals(this.offset, flexV1InsightsAssessments.offset) &&
        Objects.equals(this.report, flexV1InsightsAssessments.report) &&
        Objects.equals(this.segmentId, flexV1InsightsAssessments.segmentId) &&
        Objects.equals(this.timestamp, flexV1InsightsAssessments.timestamp) &&
        Objects.equals(this.url, flexV1InsightsAssessments.url) &&
        Objects.equals(this.userEmail, flexV1InsightsAssessments.userEmail) &&
        Objects.equals(this.userName, flexV1InsightsAssessments.userName) &&
        Objects.equals(this.weight, flexV1InsightsAssessments.weight);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, agentId, answerId, answerText, assessment, assessmentSid, offset, report, segmentId, timestamp, url, userEmail, userName, weight);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlexV1InsightsAssessments {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    agentId: ").append(toIndentedString(agentId)).append("\n");
    sb.append("    answerId: ").append(toIndentedString(answerId)).append("\n");
    sb.append("    answerText: ").append(toIndentedString(answerText)).append("\n");
    sb.append("    assessment: ").append(toIndentedString(assessment)).append("\n");
    sb.append("    assessmentSid: ").append(toIndentedString(assessmentSid)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    report: ").append(toIndentedString(report)).append("\n");
    sb.append("    segmentId: ").append(toIndentedString(segmentId)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    userEmail: ").append(toIndentedString(userEmail)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("agent_id");
    openapiFields.add("answer_id");
    openapiFields.add("answer_text");
    openapiFields.add("assessment");
    openapiFields.add("assessment_sid");
    openapiFields.add("offset");
    openapiFields.add("report");
    openapiFields.add("segment_id");
    openapiFields.add("timestamp");
    openapiFields.add("url");
    openapiFields.add("user_email");
    openapiFields.add("user_name");
    openapiFields.add("weight");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FlexV1InsightsAssessments
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FlexV1InsightsAssessments.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FlexV1InsightsAssessments is not found in the empty JSON string", FlexV1InsightsAssessments.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FlexV1InsightsAssessments.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FlexV1InsightsAssessments` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("agent_id") != null && !jsonObj.get("agent_id").isJsonNull()) && !jsonObj.get("agent_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agent_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agent_id").toString()));
      }
      if ((jsonObj.get("answer_id") != null && !jsonObj.get("answer_id").isJsonNull()) && !jsonObj.get("answer_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `answer_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("answer_id").toString()));
      }
      if ((jsonObj.get("answer_text") != null && !jsonObj.get("answer_text").isJsonNull()) && !jsonObj.get("answer_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `answer_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("answer_text").toString()));
      }
      if ((jsonObj.get("assessment_sid") != null && !jsonObj.get("assessment_sid").isJsonNull()) && !jsonObj.get("assessment_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assessment_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assessment_sid").toString()));
      }
      if ((jsonObj.get("segment_id") != null && !jsonObj.get("segment_id").isJsonNull()) && !jsonObj.get("segment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `segment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("segment_id").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("user_email") != null && !jsonObj.get("user_email").isJsonNull()) && !jsonObj.get("user_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_email").toString()));
      }
      if ((jsonObj.get("user_name") != null && !jsonObj.get("user_name").isJsonNull()) && !jsonObj.get("user_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FlexV1InsightsAssessments.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FlexV1InsightsAssessments' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FlexV1InsightsAssessments> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FlexV1InsightsAssessments.class));

       return (TypeAdapter<T>) new TypeAdapter<FlexV1InsightsAssessments>() {
           @Override
           public void write(JsonWriter out, FlexV1InsightsAssessments value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FlexV1InsightsAssessments read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FlexV1InsightsAssessments given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FlexV1InsightsAssessments
   * @throws IOException if the JSON string is invalid with respect to FlexV1InsightsAssessments
   */
  public static FlexV1InsightsAssessments fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FlexV1InsightsAssessments.class);
  }

  /**
   * Convert an instance of FlexV1InsightsAssessments to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

