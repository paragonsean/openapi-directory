/*
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FlexV1InsightsQuestionnairesQuestion
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:36.090607-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FlexV1InsightsQuestionnairesQuestion {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ALLOW_NA = "allow_na";
  @SerializedName(SERIALIZED_NAME_ALLOW_NA)
  private Boolean allowNa;

  public static final String SERIALIZED_NAME_ANSWER_SET = "answer_set";
  @SerializedName(SERIALIZED_NAME_ANSWER_SET)
  private Object answerSet = null;

  public static final String SERIALIZED_NAME_ANSWER_SET_ID = "answer_set_id";
  @SerializedName(SERIALIZED_NAME_ANSWER_SET_ID)
  private String answerSetId;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private Object category = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_QUESTION = "question";
  @SerializedName(SERIALIZED_NAME_QUESTION)
  private String question;

  public static final String SERIALIZED_NAME_QUESTION_SID = "question_sid";
  @SerializedName(SERIALIZED_NAME_QUESTION_SID)
  private String questionSid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_USAGE = "usage";
  @SerializedName(SERIALIZED_NAME_USAGE)
  private Integer usage;

  public FlexV1InsightsQuestionnairesQuestion() {
  }

  public FlexV1InsightsQuestionnairesQuestion accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flex Insights resource and owns this resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public FlexV1InsightsQuestionnairesQuestion allowNa(Boolean allowNa) {
    this.allowNa = allowNa;
    return this;
  }

  /**
   * The flag  to enable for disable NA for answer.
   * @return allowNa
   */
  @javax.annotation.Nullable
  public Boolean getAllowNa() {
    return allowNa;
  }

  public void setAllowNa(Boolean allowNa) {
    this.allowNa = allowNa;
  }


  public FlexV1InsightsQuestionnairesQuestion answerSet(Object answerSet) {
    this.answerSet = answerSet;
    return this;
  }

  /**
   * Set of answers for the question
   * @return answerSet
   */
  @javax.annotation.Nullable
  public Object getAnswerSet() {
    return answerSet;
  }

  public void setAnswerSet(Object answerSet) {
    this.answerSet = answerSet;
  }


  public FlexV1InsightsQuestionnairesQuestion answerSetId(String answerSetId) {
    this.answerSetId = answerSetId;
    return this;
  }

  /**
   * The answer_set for the question.
   * @return answerSetId
   */
  @javax.annotation.Nullable
  public String getAnswerSetId() {
    return answerSetId;
  }

  public void setAnswerSetId(String answerSetId) {
    this.answerSetId = answerSetId;
  }


  public FlexV1InsightsQuestionnairesQuestion category(Object category) {
    this.category = category;
    return this;
  }

  /**
   * The Category for the question.
   * @return category
   */
  @javax.annotation.Nullable
  public Object getCategory() {
    return category;
  }

  public void setCategory(Object category) {
    this.category = category;
  }


  public FlexV1InsightsQuestionnairesQuestion description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description for the question.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public FlexV1InsightsQuestionnairesQuestion question(String question) {
    this.question = question;
    return this;
  }

  /**
   * The question.
   * @return question
   */
  @javax.annotation.Nullable
  public String getQuestion() {
    return question;
  }

  public void setQuestion(String question) {
    this.question = question;
  }


  public FlexV1InsightsQuestionnairesQuestion questionSid(String questionSid) {
    this.questionSid = questionSid;
    return this;
  }

  /**
   * The SID of the question
   * @return questionSid
   */
  @javax.annotation.Nullable
  public String getQuestionSid() {
    return questionSid;
  }

  public void setQuestionSid(String questionSid) {
    this.questionSid = questionSid;
  }


  public FlexV1InsightsQuestionnairesQuestion url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public FlexV1InsightsQuestionnairesQuestion usage(Integer usage) {
    this.usage = usage;
    return this;
  }

  /**
   * Integer value that tells a particular question is used by how many questionnaires
   * @return usage
   */
  @javax.annotation.Nullable
  public Integer getUsage() {
    return usage;
  }

  public void setUsage(Integer usage) {
    this.usage = usage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlexV1InsightsQuestionnairesQuestion flexV1InsightsQuestionnairesQuestion = (FlexV1InsightsQuestionnairesQuestion) o;
    return Objects.equals(this.accountSid, flexV1InsightsQuestionnairesQuestion.accountSid) &&
        Objects.equals(this.allowNa, flexV1InsightsQuestionnairesQuestion.allowNa) &&
        Objects.equals(this.answerSet, flexV1InsightsQuestionnairesQuestion.answerSet) &&
        Objects.equals(this.answerSetId, flexV1InsightsQuestionnairesQuestion.answerSetId) &&
        Objects.equals(this.category, flexV1InsightsQuestionnairesQuestion.category) &&
        Objects.equals(this.description, flexV1InsightsQuestionnairesQuestion.description) &&
        Objects.equals(this.question, flexV1InsightsQuestionnairesQuestion.question) &&
        Objects.equals(this.questionSid, flexV1InsightsQuestionnairesQuestion.questionSid) &&
        Objects.equals(this.url, flexV1InsightsQuestionnairesQuestion.url) &&
        Objects.equals(this.usage, flexV1InsightsQuestionnairesQuestion.usage);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, allowNa, answerSet, answerSetId, category, description, question, questionSid, url, usage);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlexV1InsightsQuestionnairesQuestion {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    allowNa: ").append(toIndentedString(allowNa)).append("\n");
    sb.append("    answerSet: ").append(toIndentedString(answerSet)).append("\n");
    sb.append("    answerSetId: ").append(toIndentedString(answerSetId)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    question: ").append(toIndentedString(question)).append("\n");
    sb.append("    questionSid: ").append(toIndentedString(questionSid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("allow_na");
    openapiFields.add("answer_set");
    openapiFields.add("answer_set_id");
    openapiFields.add("category");
    openapiFields.add("description");
    openapiFields.add("question");
    openapiFields.add("question_sid");
    openapiFields.add("url");
    openapiFields.add("usage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FlexV1InsightsQuestionnairesQuestion
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FlexV1InsightsQuestionnairesQuestion.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FlexV1InsightsQuestionnairesQuestion is not found in the empty JSON string", FlexV1InsightsQuestionnairesQuestion.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FlexV1InsightsQuestionnairesQuestion.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FlexV1InsightsQuestionnairesQuestion` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("answer_set_id") != null && !jsonObj.get("answer_set_id").isJsonNull()) && !jsonObj.get("answer_set_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `answer_set_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("answer_set_id").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("question") != null && !jsonObj.get("question").isJsonNull()) && !jsonObj.get("question").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `question` to be a primitive type in the JSON string but got `%s`", jsonObj.get("question").toString()));
      }
      if ((jsonObj.get("question_sid") != null && !jsonObj.get("question_sid").isJsonNull()) && !jsonObj.get("question_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `question_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("question_sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FlexV1InsightsQuestionnairesQuestion.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FlexV1InsightsQuestionnairesQuestion' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FlexV1InsightsQuestionnairesQuestion> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FlexV1InsightsQuestionnairesQuestion.class));

       return (TypeAdapter<T>) new TypeAdapter<FlexV1InsightsQuestionnairesQuestion>() {
           @Override
           public void write(JsonWriter out, FlexV1InsightsQuestionnairesQuestion value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FlexV1InsightsQuestionnairesQuestion read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FlexV1InsightsQuestionnairesQuestion given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FlexV1InsightsQuestionnairesQuestion
   * @throws IOException if the JSON string is invalid with respect to FlexV1InsightsQuestionnairesQuestion
   */
  public static FlexV1InsightsQuestionnairesQuestion fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FlexV1InsightsQuestionnairesQuestion.class);
  }

  /**
   * Convert an instance of FlexV1InsightsQuestionnairesQuestion to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

