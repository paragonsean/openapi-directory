/*
 * Twilio - Flex
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConfigurationEnumStatus;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FlexV1Configuration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:36.090607-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FlexV1Configuration {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_AGENT_CONV_END_METHODS = "agent_conv_end_methods";
  @SerializedName(SERIALIZED_NAME_AGENT_CONV_END_METHODS)
  private Object agentConvEndMethods = null;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Object attributes = null;

  public static final String SERIALIZED_NAME_CALL_RECORDING_ENABLED = "call_recording_enabled";
  @SerializedName(SERIALIZED_NAME_CALL_RECORDING_ENABLED)
  private Boolean callRecordingEnabled;

  public static final String SERIALIZED_NAME_CALL_RECORDING_WEBHOOK_URL = "call_recording_webhook_url";
  @SerializedName(SERIALIZED_NAME_CALL_RECORDING_WEBHOOK_URL)
  private URI callRecordingWebhookUrl;

  public static final String SERIALIZED_NAME_CHANNEL_CONFIGS = "channel_configs";
  @SerializedName(SERIALIZED_NAME_CHANNEL_CONFIGS)
  private List<Object> channelConfigs;

  public static final String SERIALIZED_NAME_CHAT_SERVICE_INSTANCE_SID = "chat_service_instance_sid";
  @SerializedName(SERIALIZED_NAME_CHAT_SERVICE_INSTANCE_SID)
  private String chatServiceInstanceSid;

  public static final String SERIALIZED_NAME_CITRIX_VOICE_VDI = "citrix_voice_vdi";
  @SerializedName(SERIALIZED_NAME_CITRIX_VOICE_VDI)
  private Object citrixVoiceVdi = null;

  public static final String SERIALIZED_NAME_CRM_ATTRIBUTES = "crm_attributes";
  @SerializedName(SERIALIZED_NAME_CRM_ATTRIBUTES)
  private Object crmAttributes = null;

  public static final String SERIALIZED_NAME_CRM_CALLBACK_URL = "crm_callback_url";
  @SerializedName(SERIALIZED_NAME_CRM_CALLBACK_URL)
  private URI crmCallbackUrl;

  public static final String SERIALIZED_NAME_CRM_ENABLED = "crm_enabled";
  @SerializedName(SERIALIZED_NAME_CRM_ENABLED)
  private Boolean crmEnabled;

  public static final String SERIALIZED_NAME_CRM_FALLBACK_URL = "crm_fallback_url";
  @SerializedName(SERIALIZED_NAME_CRM_FALLBACK_URL)
  private URI crmFallbackUrl;

  public static final String SERIALIZED_NAME_CRM_TYPE = "crm_type";
  @SerializedName(SERIALIZED_NAME_CRM_TYPE)
  private String crmType;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_DEBUGGER_INTEGRATION = "debugger_integration";
  @SerializedName(SERIALIZED_NAME_DEBUGGER_INTEGRATION)
  private Object debuggerIntegration = null;

  public static final String SERIALIZED_NAME_FLEX_INSIGHTS_DRILLDOWN = "flex_insights_drilldown";
  @SerializedName(SERIALIZED_NAME_FLEX_INSIGHTS_DRILLDOWN)
  private Boolean flexInsightsDrilldown;

  public static final String SERIALIZED_NAME_FLEX_INSIGHTS_HR = "flex_insights_hr";
  @SerializedName(SERIALIZED_NAME_FLEX_INSIGHTS_HR)
  private Object flexInsightsHr = null;

  public static final String SERIALIZED_NAME_FLEX_INSTANCE_SID = "flex_instance_sid";
  @SerializedName(SERIALIZED_NAME_FLEX_INSTANCE_SID)
  private String flexInstanceSid;

  public static final String SERIALIZED_NAME_FLEX_SERVICE_INSTANCE_SID = "flex_service_instance_sid";
  @SerializedName(SERIALIZED_NAME_FLEX_SERVICE_INSTANCE_SID)
  private String flexServiceInstanceSid;

  public static final String SERIALIZED_NAME_FLEX_UI_STATUS_REPORT = "flex_ui_status_report";
  @SerializedName(SERIALIZED_NAME_FLEX_UI_STATUS_REPORT)
  private Object flexUiStatusReport = null;

  public static final String SERIALIZED_NAME_FLEX_URL = "flex_url";
  @SerializedName(SERIALIZED_NAME_FLEX_URL)
  private URI flexUrl;

  public static final String SERIALIZED_NAME_INTEGRATIONS = "integrations";
  @SerializedName(SERIALIZED_NAME_INTEGRATIONS)
  private List<Object> integrations;

  public static final String SERIALIZED_NAME_MARKDOWN = "markdown";
  @SerializedName(SERIALIZED_NAME_MARKDOWN)
  private Object markdown = null;

  public static final String SERIALIZED_NAME_MESSAGING_SERVICE_INSTANCE_SID = "messaging_service_instance_sid";
  @SerializedName(SERIALIZED_NAME_MESSAGING_SERVICE_INSTANCE_SID)
  private String messagingServiceInstanceSid;

  public static final String SERIALIZED_NAME_NOTIFICATIONS = "notifications";
  @SerializedName(SERIALIZED_NAME_NOTIFICATIONS)
  private Object notifications = null;

  public static final String SERIALIZED_NAME_OFFLINE_CONFIG = "offline_config";
  @SerializedName(SERIALIZED_NAME_OFFLINE_CONFIG)
  private Object offlineConfig = null;

  public static final String SERIALIZED_NAME_OUTBOUND_CALL_FLOWS = "outbound_call_flows";
  @SerializedName(SERIALIZED_NAME_OUTBOUND_CALL_FLOWS)
  private Object outboundCallFlows = null;

  public static final String SERIALIZED_NAME_PLUGIN_SERVICE_ATTRIBUTES = "plugin_service_attributes";
  @SerializedName(SERIALIZED_NAME_PLUGIN_SERVICE_ATTRIBUTES)
  private Object pluginServiceAttributes = null;

  public static final String SERIALIZED_NAME_PLUGIN_SERVICE_ENABLED = "plugin_service_enabled";
  @SerializedName(SERIALIZED_NAME_PLUGIN_SERVICE_ENABLED)
  private Boolean pluginServiceEnabled;

  public static final String SERIALIZED_NAME_PUBLIC_ATTRIBUTES = "public_attributes";
  @SerializedName(SERIALIZED_NAME_PUBLIC_ATTRIBUTES)
  private Object publicAttributes = null;

  public static final String SERIALIZED_NAME_QUEUE_STATS_CONFIGURATION = "queue_stats_configuration";
  @SerializedName(SERIALIZED_NAME_QUEUE_STATS_CONFIGURATION)
  private Object queueStatsConfiguration = null;

  public static final String SERIALIZED_NAME_RUNTIME_DOMAIN = "runtime_domain";
  @SerializedName(SERIALIZED_NAME_RUNTIME_DOMAIN)
  private URI runtimeDomain;

  public static final String SERIALIZED_NAME_SERVERLESS_SERVICE_SIDS = "serverless_service_sids";
  @SerializedName(SERIALIZED_NAME_SERVERLESS_SERVICE_SIDS)
  private List<String> serverlessServiceSids;

  public static final String SERIALIZED_NAME_SERVICE_VERSION = "service_version";
  @SerializedName(SERIALIZED_NAME_SERVICE_VERSION)
  private String serviceVersion;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ConfigurationEnumStatus status;

  public static final String SERIALIZED_NAME_TASKROUTER_OFFLINE_ACTIVITY_SID = "taskrouter_offline_activity_sid";
  @SerializedName(SERIALIZED_NAME_TASKROUTER_OFFLINE_ACTIVITY_SID)
  private String taskrouterOfflineActivitySid;

  public static final String SERIALIZED_NAME_TASKROUTER_SKILLS = "taskrouter_skills";
  @SerializedName(SERIALIZED_NAME_TASKROUTER_SKILLS)
  private List<Object> taskrouterSkills;

  public static final String SERIALIZED_NAME_TASKROUTER_TARGET_TASKQUEUE_SID = "taskrouter_target_taskqueue_sid";
  @SerializedName(SERIALIZED_NAME_TASKROUTER_TARGET_TASKQUEUE_SID)
  private String taskrouterTargetTaskqueueSid;

  public static final String SERIALIZED_NAME_TASKROUTER_TARGET_WORKFLOW_SID = "taskrouter_target_workflow_sid";
  @SerializedName(SERIALIZED_NAME_TASKROUTER_TARGET_WORKFLOW_SID)
  private String taskrouterTargetWorkflowSid;

  public static final String SERIALIZED_NAME_TASKROUTER_TASKQUEUES = "taskrouter_taskqueues";
  @SerializedName(SERIALIZED_NAME_TASKROUTER_TASKQUEUES)
  private List<Object> taskrouterTaskqueues;

  public static final String SERIALIZED_NAME_TASKROUTER_WORKER_ATTRIBUTES = "taskrouter_worker_attributes";
  @SerializedName(SERIALIZED_NAME_TASKROUTER_WORKER_ATTRIBUTES)
  private Object taskrouterWorkerAttributes = null;

  public static final String SERIALIZED_NAME_TASKROUTER_WORKER_CHANNELS = "taskrouter_worker_channels";
  @SerializedName(SERIALIZED_NAME_TASKROUTER_WORKER_CHANNELS)
  private Object taskrouterWorkerChannels = null;

  public static final String SERIALIZED_NAME_TASKROUTER_WORKSPACE_SID = "taskrouter_workspace_sid";
  @SerializedName(SERIALIZED_NAME_TASKROUTER_WORKSPACE_SID)
  private String taskrouterWorkspaceSid;

  public static final String SERIALIZED_NAME_UI_ATTRIBUTES = "ui_attributes";
  @SerializedName(SERIALIZED_NAME_UI_ATTRIBUTES)
  private Object uiAttributes = null;

  public static final String SERIALIZED_NAME_UI_DEPENDENCIES = "ui_dependencies";
  @SerializedName(SERIALIZED_NAME_UI_DEPENDENCIES)
  private Object uiDependencies = null;

  public static final String SERIALIZED_NAME_UI_LANGUAGE = "ui_language";
  @SerializedName(SERIALIZED_NAME_UI_LANGUAGE)
  private String uiLanguage;

  public static final String SERIALIZED_NAME_UI_VERSION = "ui_version";
  @SerializedName(SERIALIZED_NAME_UI_VERSION)
  private String uiVersion;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public FlexV1Configuration() {
  }

  public FlexV1Configuration accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Configuration resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public FlexV1Configuration agentConvEndMethods(Object agentConvEndMethods) {
    this.agentConvEndMethods = agentConvEndMethods;
    return this;
  }

  /**
   * Agent conversation end methods.
   * @return agentConvEndMethods
   */
  @javax.annotation.Nullable
  public Object getAgentConvEndMethods() {
    return agentConvEndMethods;
  }

  public void setAgentConvEndMethods(Object agentConvEndMethods) {
    this.agentConvEndMethods = agentConvEndMethods;
  }


  public FlexV1Configuration attributes(Object attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * An object that contains application-specific data.
   * @return attributes
   */
  @javax.annotation.Nullable
  public Object getAttributes() {
    return attributes;
  }

  public void setAttributes(Object attributes) {
    this.attributes = attributes;
  }


  public FlexV1Configuration callRecordingEnabled(Boolean callRecordingEnabled) {
    this.callRecordingEnabled = callRecordingEnabled;
    return this;
  }

  /**
   * Whether call recording is enabled.
   * @return callRecordingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCallRecordingEnabled() {
    return callRecordingEnabled;
  }

  public void setCallRecordingEnabled(Boolean callRecordingEnabled) {
    this.callRecordingEnabled = callRecordingEnabled;
  }


  public FlexV1Configuration callRecordingWebhookUrl(URI callRecordingWebhookUrl) {
    this.callRecordingWebhookUrl = callRecordingWebhookUrl;
    return this;
  }

  /**
   * The call recording webhook URL.
   * @return callRecordingWebhookUrl
   */
  @javax.annotation.Nullable
  public URI getCallRecordingWebhookUrl() {
    return callRecordingWebhookUrl;
  }

  public void setCallRecordingWebhookUrl(URI callRecordingWebhookUrl) {
    this.callRecordingWebhookUrl = callRecordingWebhookUrl;
  }


  public FlexV1Configuration channelConfigs(List<Object> channelConfigs) {
    this.channelConfigs = channelConfigs;
    return this;
  }

  public FlexV1Configuration addChannelConfigsItem(Object channelConfigsItem) {
    if (this.channelConfigs == null) {
      this.channelConfigs = new ArrayList<>();
    }
    this.channelConfigs.add(channelConfigsItem);
    return this;
  }

  /**
   * Settings for different limits for Flex Conversations channels attachments.
   * @return channelConfigs
   */
  @javax.annotation.Nullable
  public List<Object> getChannelConfigs() {
    return channelConfigs;
  }

  public void setChannelConfigs(List<Object> channelConfigs) {
    this.channelConfigs = channelConfigs;
  }


  public FlexV1Configuration chatServiceInstanceSid(String chatServiceInstanceSid) {
    this.chatServiceInstanceSid = chatServiceInstanceSid;
    return this;
  }

  /**
   * The SID of the chat service this user belongs to.
   * @return chatServiceInstanceSid
   */
  @javax.annotation.Nullable
  public String getChatServiceInstanceSid() {
    return chatServiceInstanceSid;
  }

  public void setChatServiceInstanceSid(String chatServiceInstanceSid) {
    this.chatServiceInstanceSid = chatServiceInstanceSid;
  }


  public FlexV1Configuration citrixVoiceVdi(Object citrixVoiceVdi) {
    this.citrixVoiceVdi = citrixVoiceVdi;
    return this;
  }

  /**
   * Citrix voice vdi configuration and settings.
   * @return citrixVoiceVdi
   */
  @javax.annotation.Nullable
  public Object getCitrixVoiceVdi() {
    return citrixVoiceVdi;
  }

  public void setCitrixVoiceVdi(Object citrixVoiceVdi) {
    this.citrixVoiceVdi = citrixVoiceVdi;
  }


  public FlexV1Configuration crmAttributes(Object crmAttributes) {
    this.crmAttributes = crmAttributes;
    return this;
  }

  /**
   * An object that contains the CRM attributes.
   * @return crmAttributes
   */
  @javax.annotation.Nullable
  public Object getCrmAttributes() {
    return crmAttributes;
  }

  public void setCrmAttributes(Object crmAttributes) {
    this.crmAttributes = crmAttributes;
  }


  public FlexV1Configuration crmCallbackUrl(URI crmCallbackUrl) {
    this.crmCallbackUrl = crmCallbackUrl;
    return this;
  }

  /**
   * The CRM Callback URL.
   * @return crmCallbackUrl
   */
  @javax.annotation.Nullable
  public URI getCrmCallbackUrl() {
    return crmCallbackUrl;
  }

  public void setCrmCallbackUrl(URI crmCallbackUrl) {
    this.crmCallbackUrl = crmCallbackUrl;
  }


  public FlexV1Configuration crmEnabled(Boolean crmEnabled) {
    this.crmEnabled = crmEnabled;
    return this;
  }

  /**
   * Whether CRM is present for Flex.
   * @return crmEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCrmEnabled() {
    return crmEnabled;
  }

  public void setCrmEnabled(Boolean crmEnabled) {
    this.crmEnabled = crmEnabled;
  }


  public FlexV1Configuration crmFallbackUrl(URI crmFallbackUrl) {
    this.crmFallbackUrl = crmFallbackUrl;
    return this;
  }

  /**
   * The CRM Fallback URL.
   * @return crmFallbackUrl
   */
  @javax.annotation.Nullable
  public URI getCrmFallbackUrl() {
    return crmFallbackUrl;
  }

  public void setCrmFallbackUrl(URI crmFallbackUrl) {
    this.crmFallbackUrl = crmFallbackUrl;
  }


  public FlexV1Configuration crmType(String crmType) {
    this.crmType = crmType;
    return this;
  }

  /**
   * The CRM type.
   * @return crmType
   */
  @javax.annotation.Nullable
  public String getCrmType() {
    return crmType;
  }

  public void setCrmType(String crmType) {
    this.crmType = crmType;
  }


  public FlexV1Configuration dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the Configuration resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public FlexV1Configuration dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the Configuration resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public FlexV1Configuration debuggerIntegration(Object debuggerIntegration) {
    this.debuggerIntegration = debuggerIntegration;
    return this;
  }

  /**
   * Configurable parameters for Debugger Integration.
   * @return debuggerIntegration
   */
  @javax.annotation.Nullable
  public Object getDebuggerIntegration() {
    return debuggerIntegration;
  }

  public void setDebuggerIntegration(Object debuggerIntegration) {
    this.debuggerIntegration = debuggerIntegration;
  }


  public FlexV1Configuration flexInsightsDrilldown(Boolean flexInsightsDrilldown) {
    this.flexInsightsDrilldown = flexInsightsDrilldown;
    return this;
  }

  /**
   * Setting this to true will redirect Flex UI to the URL set in flex_url
   * @return flexInsightsDrilldown
   */
  @javax.annotation.Nullable
  public Boolean getFlexInsightsDrilldown() {
    return flexInsightsDrilldown;
  }

  public void setFlexInsightsDrilldown(Boolean flexInsightsDrilldown) {
    this.flexInsightsDrilldown = flexInsightsDrilldown;
  }


  public FlexV1Configuration flexInsightsHr(Object flexInsightsHr) {
    this.flexInsightsHr = flexInsightsHr;
    return this;
  }

  /**
   * Object with enabled/disabled flag with list of workspaces.
   * @return flexInsightsHr
   */
  @javax.annotation.Nullable
  public Object getFlexInsightsHr() {
    return flexInsightsHr;
  }

  public void setFlexInsightsHr(Object flexInsightsHr) {
    this.flexInsightsHr = flexInsightsHr;
  }


  public FlexV1Configuration flexInstanceSid(String flexInstanceSid) {
    this.flexInstanceSid = flexInstanceSid;
    return this;
  }

  /**
   * The SID of the Flex instance.
   * @return flexInstanceSid
   */
  @javax.annotation.Nullable
  public String getFlexInstanceSid() {
    return flexInstanceSid;
  }

  public void setFlexInstanceSid(String flexInstanceSid) {
    this.flexInstanceSid = flexInstanceSid;
  }


  public FlexV1Configuration flexServiceInstanceSid(String flexServiceInstanceSid) {
    this.flexServiceInstanceSid = flexServiceInstanceSid;
    return this;
  }

  /**
   * The SID of the Flex service instance.
   * @return flexServiceInstanceSid
   */
  @javax.annotation.Nullable
  public String getFlexServiceInstanceSid() {
    return flexServiceInstanceSid;
  }

  public void setFlexServiceInstanceSid(String flexServiceInstanceSid) {
    this.flexServiceInstanceSid = flexServiceInstanceSid;
  }


  public FlexV1Configuration flexUiStatusReport(Object flexUiStatusReport) {
    this.flexUiStatusReport = flexUiStatusReport;
    return this;
  }

  /**
   * Configurable parameters for Flex UI Status report.
   * @return flexUiStatusReport
   */
  @javax.annotation.Nullable
  public Object getFlexUiStatusReport() {
    return flexUiStatusReport;
  }

  public void setFlexUiStatusReport(Object flexUiStatusReport) {
    this.flexUiStatusReport = flexUiStatusReport;
  }


  public FlexV1Configuration flexUrl(URI flexUrl) {
    this.flexUrl = flexUrl;
    return this;
  }

  /**
   * URL to redirect to in case drilldown is enabled.
   * @return flexUrl
   */
  @javax.annotation.Nullable
  public URI getFlexUrl() {
    return flexUrl;
  }

  public void setFlexUrl(URI flexUrl) {
    this.flexUrl = flexUrl;
  }


  public FlexV1Configuration integrations(List<Object> integrations) {
    this.integrations = integrations;
    return this;
  }

  public FlexV1Configuration addIntegrationsItem(Object integrationsItem) {
    if (this.integrations == null) {
      this.integrations = new ArrayList<>();
    }
    this.integrations.add(integrationsItem);
    return this;
  }

  /**
   * A list of objects that contain the configurations for the Integrations supported in this configuration.
   * @return integrations
   */
  @javax.annotation.Nullable
  public List<Object> getIntegrations() {
    return integrations;
  }

  public void setIntegrations(List<Object> integrations) {
    this.integrations = integrations;
  }


  public FlexV1Configuration markdown(Object markdown) {
    this.markdown = markdown;
    return this;
  }

  /**
   * Configurable parameters for Markdown.
   * @return markdown
   */
  @javax.annotation.Nullable
  public Object getMarkdown() {
    return markdown;
  }

  public void setMarkdown(Object markdown) {
    this.markdown = markdown;
  }


  public FlexV1Configuration messagingServiceInstanceSid(String messagingServiceInstanceSid) {
    this.messagingServiceInstanceSid = messagingServiceInstanceSid;
    return this;
  }

  /**
   * The SID of the Messaging service instance.
   * @return messagingServiceInstanceSid
   */
  @javax.annotation.Nullable
  public String getMessagingServiceInstanceSid() {
    return messagingServiceInstanceSid;
  }

  public void setMessagingServiceInstanceSid(String messagingServiceInstanceSid) {
    this.messagingServiceInstanceSid = messagingServiceInstanceSid;
  }


  public FlexV1Configuration notifications(Object notifications) {
    this.notifications = notifications;
    return this;
  }

  /**
   * Configurable parameters for Notifications.
   * @return notifications
   */
  @javax.annotation.Nullable
  public Object getNotifications() {
    return notifications;
  }

  public void setNotifications(Object notifications) {
    this.notifications = notifications;
  }


  public FlexV1Configuration offlineConfig(Object offlineConfig) {
    this.offlineConfig = offlineConfig;
    return this;
  }

  /**
   * Presence and presence ttl configuration
   * @return offlineConfig
   */
  @javax.annotation.Nullable
  public Object getOfflineConfig() {
    return offlineConfig;
  }

  public void setOfflineConfig(Object offlineConfig) {
    this.offlineConfig = offlineConfig;
  }


  public FlexV1Configuration outboundCallFlows(Object outboundCallFlows) {
    this.outboundCallFlows = outboundCallFlows;
    return this;
  }

  /**
   * The list of outbound call flows.
   * @return outboundCallFlows
   */
  @javax.annotation.Nullable
  public Object getOutboundCallFlows() {
    return outboundCallFlows;
  }

  public void setOutboundCallFlows(Object outboundCallFlows) {
    this.outboundCallFlows = outboundCallFlows;
  }


  public FlexV1Configuration pluginServiceAttributes(Object pluginServiceAttributes) {
    this.pluginServiceAttributes = pluginServiceAttributes;
    return this;
  }

  /**
   * The plugin service attributes.
   * @return pluginServiceAttributes
   */
  @javax.annotation.Nullable
  public Object getPluginServiceAttributes() {
    return pluginServiceAttributes;
  }

  public void setPluginServiceAttributes(Object pluginServiceAttributes) {
    this.pluginServiceAttributes = pluginServiceAttributes;
  }


  public FlexV1Configuration pluginServiceEnabled(Boolean pluginServiceEnabled) {
    this.pluginServiceEnabled = pluginServiceEnabled;
    return this;
  }

  /**
   * Whether the plugin service enabled.
   * @return pluginServiceEnabled
   */
  @javax.annotation.Nullable
  public Boolean getPluginServiceEnabled() {
    return pluginServiceEnabled;
  }

  public void setPluginServiceEnabled(Boolean pluginServiceEnabled) {
    this.pluginServiceEnabled = pluginServiceEnabled;
  }


  public FlexV1Configuration publicAttributes(Object publicAttributes) {
    this.publicAttributes = publicAttributes;
    return this;
  }

  /**
   * The list of public attributes, which are visible to unauthenticated clients.
   * @return publicAttributes
   */
  @javax.annotation.Nullable
  public Object getPublicAttributes() {
    return publicAttributes;
  }

  public void setPublicAttributes(Object publicAttributes) {
    this.publicAttributes = publicAttributes;
  }


  public FlexV1Configuration queueStatsConfiguration(Object queueStatsConfiguration) {
    this.queueStatsConfiguration = queueStatsConfiguration;
    return this;
  }

  /**
   * Configurable parameters for Queues Statistics.
   * @return queueStatsConfiguration
   */
  @javax.annotation.Nullable
  public Object getQueueStatsConfiguration() {
    return queueStatsConfiguration;
  }

  public void setQueueStatsConfiguration(Object queueStatsConfiguration) {
    this.queueStatsConfiguration = queueStatsConfiguration;
  }


  public FlexV1Configuration runtimeDomain(URI runtimeDomain) {
    this.runtimeDomain = runtimeDomain;
    return this;
  }

  /**
   * The URL where the Flex instance is hosted.
   * @return runtimeDomain
   */
  @javax.annotation.Nullable
  public URI getRuntimeDomain() {
    return runtimeDomain;
  }

  public void setRuntimeDomain(URI runtimeDomain) {
    this.runtimeDomain = runtimeDomain;
  }


  public FlexV1Configuration serverlessServiceSids(List<String> serverlessServiceSids) {
    this.serverlessServiceSids = serverlessServiceSids;
    return this;
  }

  public FlexV1Configuration addServerlessServiceSidsItem(String serverlessServiceSidsItem) {
    if (this.serverlessServiceSids == null) {
      this.serverlessServiceSids = new ArrayList<>();
    }
    this.serverlessServiceSids.add(serverlessServiceSidsItem);
    return this;
  }

  /**
   * The list of serverless service SIDs.
   * @return serverlessServiceSids
   */
  @javax.annotation.Nullable
  public List<String> getServerlessServiceSids() {
    return serverlessServiceSids;
  }

  public void setServerlessServiceSids(List<String> serverlessServiceSids) {
    this.serverlessServiceSids = serverlessServiceSids;
  }


  public FlexV1Configuration serviceVersion(String serviceVersion) {
    this.serviceVersion = serviceVersion;
    return this;
  }

  /**
   * The Flex Service version.
   * @return serviceVersion
   */
  @javax.annotation.Nullable
  public String getServiceVersion() {
    return serviceVersion;
  }

  public void setServiceVersion(String serviceVersion) {
    this.serviceVersion = serviceVersion;
  }


  public FlexV1Configuration status(ConfigurationEnumStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ConfigurationEnumStatus getStatus() {
    return status;
  }

  public void setStatus(ConfigurationEnumStatus status) {
    this.status = status;
  }


  public FlexV1Configuration taskrouterOfflineActivitySid(String taskrouterOfflineActivitySid) {
    this.taskrouterOfflineActivitySid = taskrouterOfflineActivitySid;
    return this;
  }

  /**
   * The TaskRouter SID of the offline activity.
   * @return taskrouterOfflineActivitySid
   */
  @javax.annotation.Nullable
  public String getTaskrouterOfflineActivitySid() {
    return taskrouterOfflineActivitySid;
  }

  public void setTaskrouterOfflineActivitySid(String taskrouterOfflineActivitySid) {
    this.taskrouterOfflineActivitySid = taskrouterOfflineActivitySid;
  }


  public FlexV1Configuration taskrouterSkills(List<Object> taskrouterSkills) {
    this.taskrouterSkills = taskrouterSkills;
    return this;
  }

  public FlexV1Configuration addTaskrouterSkillsItem(Object taskrouterSkillsItem) {
    if (this.taskrouterSkills == null) {
      this.taskrouterSkills = new ArrayList<>();
    }
    this.taskrouterSkills.add(taskrouterSkillsItem);
    return this;
  }

  /**
   * The Skill description for TaskRouter workers.
   * @return taskrouterSkills
   */
  @javax.annotation.Nullable
  public List<Object> getTaskrouterSkills() {
    return taskrouterSkills;
  }

  public void setTaskrouterSkills(List<Object> taskrouterSkills) {
    this.taskrouterSkills = taskrouterSkills;
  }


  public FlexV1Configuration taskrouterTargetTaskqueueSid(String taskrouterTargetTaskqueueSid) {
    this.taskrouterTargetTaskqueueSid = taskrouterTargetTaskqueueSid;
    return this;
  }

  /**
   * The SID of the TaskRouter Target TaskQueue.
   * @return taskrouterTargetTaskqueueSid
   */
  @javax.annotation.Nullable
  public String getTaskrouterTargetTaskqueueSid() {
    return taskrouterTargetTaskqueueSid;
  }

  public void setTaskrouterTargetTaskqueueSid(String taskrouterTargetTaskqueueSid) {
    this.taskrouterTargetTaskqueueSid = taskrouterTargetTaskqueueSid;
  }


  public FlexV1Configuration taskrouterTargetWorkflowSid(String taskrouterTargetWorkflowSid) {
    this.taskrouterTargetWorkflowSid = taskrouterTargetWorkflowSid;
    return this;
  }

  /**
   * The SID of the TaskRouter target Workflow.
   * @return taskrouterTargetWorkflowSid
   */
  @javax.annotation.Nullable
  public String getTaskrouterTargetWorkflowSid() {
    return taskrouterTargetWorkflowSid;
  }

  public void setTaskrouterTargetWorkflowSid(String taskrouterTargetWorkflowSid) {
    this.taskrouterTargetWorkflowSid = taskrouterTargetWorkflowSid;
  }


  public FlexV1Configuration taskrouterTaskqueues(List<Object> taskrouterTaskqueues) {
    this.taskrouterTaskqueues = taskrouterTaskqueues;
    return this;
  }

  public FlexV1Configuration addTaskrouterTaskqueuesItem(Object taskrouterTaskqueuesItem) {
    if (this.taskrouterTaskqueues == null) {
      this.taskrouterTaskqueues = new ArrayList<>();
    }
    this.taskrouterTaskqueues.add(taskrouterTaskqueuesItem);
    return this;
  }

  /**
   * The list of TaskRouter TaskQueues.
   * @return taskrouterTaskqueues
   */
  @javax.annotation.Nullable
  public List<Object> getTaskrouterTaskqueues() {
    return taskrouterTaskqueues;
  }

  public void setTaskrouterTaskqueues(List<Object> taskrouterTaskqueues) {
    this.taskrouterTaskqueues = taskrouterTaskqueues;
  }


  public FlexV1Configuration taskrouterWorkerAttributes(Object taskrouterWorkerAttributes) {
    this.taskrouterWorkerAttributes = taskrouterWorkerAttributes;
    return this;
  }

  /**
   * The TaskRouter Worker attributes.
   * @return taskrouterWorkerAttributes
   */
  @javax.annotation.Nullable
  public Object getTaskrouterWorkerAttributes() {
    return taskrouterWorkerAttributes;
  }

  public void setTaskrouterWorkerAttributes(Object taskrouterWorkerAttributes) {
    this.taskrouterWorkerAttributes = taskrouterWorkerAttributes;
  }


  public FlexV1Configuration taskrouterWorkerChannels(Object taskrouterWorkerChannels) {
    this.taskrouterWorkerChannels = taskrouterWorkerChannels;
    return this;
  }

  /**
   * The TaskRouter default channel capacities and availability for workers.
   * @return taskrouterWorkerChannels
   */
  @javax.annotation.Nullable
  public Object getTaskrouterWorkerChannels() {
    return taskrouterWorkerChannels;
  }

  public void setTaskrouterWorkerChannels(Object taskrouterWorkerChannels) {
    this.taskrouterWorkerChannels = taskrouterWorkerChannels;
  }


  public FlexV1Configuration taskrouterWorkspaceSid(String taskrouterWorkspaceSid) {
    this.taskrouterWorkspaceSid = taskrouterWorkspaceSid;
    return this;
  }

  /**
   * The SID of the TaskRouter Workspace.
   * @return taskrouterWorkspaceSid
   */
  @javax.annotation.Nullable
  public String getTaskrouterWorkspaceSid() {
    return taskrouterWorkspaceSid;
  }

  public void setTaskrouterWorkspaceSid(String taskrouterWorkspaceSid) {
    this.taskrouterWorkspaceSid = taskrouterWorkspaceSid;
  }


  public FlexV1Configuration uiAttributes(Object uiAttributes) {
    this.uiAttributes = uiAttributes;
    return this;
  }

  /**
   * The object that describes Flex UI characteristics and settings.
   * @return uiAttributes
   */
  @javax.annotation.Nullable
  public Object getUiAttributes() {
    return uiAttributes;
  }

  public void setUiAttributes(Object uiAttributes) {
    this.uiAttributes = uiAttributes;
  }


  public FlexV1Configuration uiDependencies(Object uiDependencies) {
    this.uiDependencies = uiDependencies;
    return this;
  }

  /**
   * The object that defines the NPM packages and versions to be used in Hosted Flex.
   * @return uiDependencies
   */
  @javax.annotation.Nullable
  public Object getUiDependencies() {
    return uiDependencies;
  }

  public void setUiDependencies(Object uiDependencies) {
    this.uiDependencies = uiDependencies;
  }


  public FlexV1Configuration uiLanguage(String uiLanguage) {
    this.uiLanguage = uiLanguage;
    return this;
  }

  /**
   * The primary language of the Flex UI.
   * @return uiLanguage
   */
  @javax.annotation.Nullable
  public String getUiLanguage() {
    return uiLanguage;
  }

  public void setUiLanguage(String uiLanguage) {
    this.uiLanguage = uiLanguage;
  }


  public FlexV1Configuration uiVersion(String uiVersion) {
    this.uiVersion = uiVersion;
    return this;
  }

  /**
   * The Pinned UI version.
   * @return uiVersion
   */
  @javax.annotation.Nullable
  public String getUiVersion() {
    return uiVersion;
  }

  public void setUiVersion(String uiVersion) {
    this.uiVersion = uiVersion;
  }


  public FlexV1Configuration url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Configuration resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlexV1Configuration flexV1Configuration = (FlexV1Configuration) o;
    return Objects.equals(this.accountSid, flexV1Configuration.accountSid) &&
        Objects.equals(this.agentConvEndMethods, flexV1Configuration.agentConvEndMethods) &&
        Objects.equals(this.attributes, flexV1Configuration.attributes) &&
        Objects.equals(this.callRecordingEnabled, flexV1Configuration.callRecordingEnabled) &&
        Objects.equals(this.callRecordingWebhookUrl, flexV1Configuration.callRecordingWebhookUrl) &&
        Objects.equals(this.channelConfigs, flexV1Configuration.channelConfigs) &&
        Objects.equals(this.chatServiceInstanceSid, flexV1Configuration.chatServiceInstanceSid) &&
        Objects.equals(this.citrixVoiceVdi, flexV1Configuration.citrixVoiceVdi) &&
        Objects.equals(this.crmAttributes, flexV1Configuration.crmAttributes) &&
        Objects.equals(this.crmCallbackUrl, flexV1Configuration.crmCallbackUrl) &&
        Objects.equals(this.crmEnabled, flexV1Configuration.crmEnabled) &&
        Objects.equals(this.crmFallbackUrl, flexV1Configuration.crmFallbackUrl) &&
        Objects.equals(this.crmType, flexV1Configuration.crmType) &&
        Objects.equals(this.dateCreated, flexV1Configuration.dateCreated) &&
        Objects.equals(this.dateUpdated, flexV1Configuration.dateUpdated) &&
        Objects.equals(this.debuggerIntegration, flexV1Configuration.debuggerIntegration) &&
        Objects.equals(this.flexInsightsDrilldown, flexV1Configuration.flexInsightsDrilldown) &&
        Objects.equals(this.flexInsightsHr, flexV1Configuration.flexInsightsHr) &&
        Objects.equals(this.flexInstanceSid, flexV1Configuration.flexInstanceSid) &&
        Objects.equals(this.flexServiceInstanceSid, flexV1Configuration.flexServiceInstanceSid) &&
        Objects.equals(this.flexUiStatusReport, flexV1Configuration.flexUiStatusReport) &&
        Objects.equals(this.flexUrl, flexV1Configuration.flexUrl) &&
        Objects.equals(this.integrations, flexV1Configuration.integrations) &&
        Objects.equals(this.markdown, flexV1Configuration.markdown) &&
        Objects.equals(this.messagingServiceInstanceSid, flexV1Configuration.messagingServiceInstanceSid) &&
        Objects.equals(this.notifications, flexV1Configuration.notifications) &&
        Objects.equals(this.offlineConfig, flexV1Configuration.offlineConfig) &&
        Objects.equals(this.outboundCallFlows, flexV1Configuration.outboundCallFlows) &&
        Objects.equals(this.pluginServiceAttributes, flexV1Configuration.pluginServiceAttributes) &&
        Objects.equals(this.pluginServiceEnabled, flexV1Configuration.pluginServiceEnabled) &&
        Objects.equals(this.publicAttributes, flexV1Configuration.publicAttributes) &&
        Objects.equals(this.queueStatsConfiguration, flexV1Configuration.queueStatsConfiguration) &&
        Objects.equals(this.runtimeDomain, flexV1Configuration.runtimeDomain) &&
        Objects.equals(this.serverlessServiceSids, flexV1Configuration.serverlessServiceSids) &&
        Objects.equals(this.serviceVersion, flexV1Configuration.serviceVersion) &&
        Objects.equals(this.status, flexV1Configuration.status) &&
        Objects.equals(this.taskrouterOfflineActivitySid, flexV1Configuration.taskrouterOfflineActivitySid) &&
        Objects.equals(this.taskrouterSkills, flexV1Configuration.taskrouterSkills) &&
        Objects.equals(this.taskrouterTargetTaskqueueSid, flexV1Configuration.taskrouterTargetTaskqueueSid) &&
        Objects.equals(this.taskrouterTargetWorkflowSid, flexV1Configuration.taskrouterTargetWorkflowSid) &&
        Objects.equals(this.taskrouterTaskqueues, flexV1Configuration.taskrouterTaskqueues) &&
        Objects.equals(this.taskrouterWorkerAttributes, flexV1Configuration.taskrouterWorkerAttributes) &&
        Objects.equals(this.taskrouterWorkerChannels, flexV1Configuration.taskrouterWorkerChannels) &&
        Objects.equals(this.taskrouterWorkspaceSid, flexV1Configuration.taskrouterWorkspaceSid) &&
        Objects.equals(this.uiAttributes, flexV1Configuration.uiAttributes) &&
        Objects.equals(this.uiDependencies, flexV1Configuration.uiDependencies) &&
        Objects.equals(this.uiLanguage, flexV1Configuration.uiLanguage) &&
        Objects.equals(this.uiVersion, flexV1Configuration.uiVersion) &&
        Objects.equals(this.url, flexV1Configuration.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, agentConvEndMethods, attributes, callRecordingEnabled, callRecordingWebhookUrl, channelConfigs, chatServiceInstanceSid, citrixVoiceVdi, crmAttributes, crmCallbackUrl, crmEnabled, crmFallbackUrl, crmType, dateCreated, dateUpdated, debuggerIntegration, flexInsightsDrilldown, flexInsightsHr, flexInstanceSid, flexServiceInstanceSid, flexUiStatusReport, flexUrl, integrations, markdown, messagingServiceInstanceSid, notifications, offlineConfig, outboundCallFlows, pluginServiceAttributes, pluginServiceEnabled, publicAttributes, queueStatsConfiguration, runtimeDomain, serverlessServiceSids, serviceVersion, status, taskrouterOfflineActivitySid, taskrouterSkills, taskrouterTargetTaskqueueSid, taskrouterTargetWorkflowSid, taskrouterTaskqueues, taskrouterWorkerAttributes, taskrouterWorkerChannels, taskrouterWorkspaceSid, uiAttributes, uiDependencies, uiLanguage, uiVersion, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlexV1Configuration {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    agentConvEndMethods: ").append(toIndentedString(agentConvEndMethods)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    callRecordingEnabled: ").append(toIndentedString(callRecordingEnabled)).append("\n");
    sb.append("    callRecordingWebhookUrl: ").append(toIndentedString(callRecordingWebhookUrl)).append("\n");
    sb.append("    channelConfigs: ").append(toIndentedString(channelConfigs)).append("\n");
    sb.append("    chatServiceInstanceSid: ").append(toIndentedString(chatServiceInstanceSid)).append("\n");
    sb.append("    citrixVoiceVdi: ").append(toIndentedString(citrixVoiceVdi)).append("\n");
    sb.append("    crmAttributes: ").append(toIndentedString(crmAttributes)).append("\n");
    sb.append("    crmCallbackUrl: ").append(toIndentedString(crmCallbackUrl)).append("\n");
    sb.append("    crmEnabled: ").append(toIndentedString(crmEnabled)).append("\n");
    sb.append("    crmFallbackUrl: ").append(toIndentedString(crmFallbackUrl)).append("\n");
    sb.append("    crmType: ").append(toIndentedString(crmType)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    debuggerIntegration: ").append(toIndentedString(debuggerIntegration)).append("\n");
    sb.append("    flexInsightsDrilldown: ").append(toIndentedString(flexInsightsDrilldown)).append("\n");
    sb.append("    flexInsightsHr: ").append(toIndentedString(flexInsightsHr)).append("\n");
    sb.append("    flexInstanceSid: ").append(toIndentedString(flexInstanceSid)).append("\n");
    sb.append("    flexServiceInstanceSid: ").append(toIndentedString(flexServiceInstanceSid)).append("\n");
    sb.append("    flexUiStatusReport: ").append(toIndentedString(flexUiStatusReport)).append("\n");
    sb.append("    flexUrl: ").append(toIndentedString(flexUrl)).append("\n");
    sb.append("    integrations: ").append(toIndentedString(integrations)).append("\n");
    sb.append("    markdown: ").append(toIndentedString(markdown)).append("\n");
    sb.append("    messagingServiceInstanceSid: ").append(toIndentedString(messagingServiceInstanceSid)).append("\n");
    sb.append("    notifications: ").append(toIndentedString(notifications)).append("\n");
    sb.append("    offlineConfig: ").append(toIndentedString(offlineConfig)).append("\n");
    sb.append("    outboundCallFlows: ").append(toIndentedString(outboundCallFlows)).append("\n");
    sb.append("    pluginServiceAttributes: ").append(toIndentedString(pluginServiceAttributes)).append("\n");
    sb.append("    pluginServiceEnabled: ").append(toIndentedString(pluginServiceEnabled)).append("\n");
    sb.append("    publicAttributes: ").append(toIndentedString(publicAttributes)).append("\n");
    sb.append("    queueStatsConfiguration: ").append(toIndentedString(queueStatsConfiguration)).append("\n");
    sb.append("    runtimeDomain: ").append(toIndentedString(runtimeDomain)).append("\n");
    sb.append("    serverlessServiceSids: ").append(toIndentedString(serverlessServiceSids)).append("\n");
    sb.append("    serviceVersion: ").append(toIndentedString(serviceVersion)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    taskrouterOfflineActivitySid: ").append(toIndentedString(taskrouterOfflineActivitySid)).append("\n");
    sb.append("    taskrouterSkills: ").append(toIndentedString(taskrouterSkills)).append("\n");
    sb.append("    taskrouterTargetTaskqueueSid: ").append(toIndentedString(taskrouterTargetTaskqueueSid)).append("\n");
    sb.append("    taskrouterTargetWorkflowSid: ").append(toIndentedString(taskrouterTargetWorkflowSid)).append("\n");
    sb.append("    taskrouterTaskqueues: ").append(toIndentedString(taskrouterTaskqueues)).append("\n");
    sb.append("    taskrouterWorkerAttributes: ").append(toIndentedString(taskrouterWorkerAttributes)).append("\n");
    sb.append("    taskrouterWorkerChannels: ").append(toIndentedString(taskrouterWorkerChannels)).append("\n");
    sb.append("    taskrouterWorkspaceSid: ").append(toIndentedString(taskrouterWorkspaceSid)).append("\n");
    sb.append("    uiAttributes: ").append(toIndentedString(uiAttributes)).append("\n");
    sb.append("    uiDependencies: ").append(toIndentedString(uiDependencies)).append("\n");
    sb.append("    uiLanguage: ").append(toIndentedString(uiLanguage)).append("\n");
    sb.append("    uiVersion: ").append(toIndentedString(uiVersion)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("agent_conv_end_methods");
    openapiFields.add("attributes");
    openapiFields.add("call_recording_enabled");
    openapiFields.add("call_recording_webhook_url");
    openapiFields.add("channel_configs");
    openapiFields.add("chat_service_instance_sid");
    openapiFields.add("citrix_voice_vdi");
    openapiFields.add("crm_attributes");
    openapiFields.add("crm_callback_url");
    openapiFields.add("crm_enabled");
    openapiFields.add("crm_fallback_url");
    openapiFields.add("crm_type");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("debugger_integration");
    openapiFields.add("flex_insights_drilldown");
    openapiFields.add("flex_insights_hr");
    openapiFields.add("flex_instance_sid");
    openapiFields.add("flex_service_instance_sid");
    openapiFields.add("flex_ui_status_report");
    openapiFields.add("flex_url");
    openapiFields.add("integrations");
    openapiFields.add("markdown");
    openapiFields.add("messaging_service_instance_sid");
    openapiFields.add("notifications");
    openapiFields.add("offline_config");
    openapiFields.add("outbound_call_flows");
    openapiFields.add("plugin_service_attributes");
    openapiFields.add("plugin_service_enabled");
    openapiFields.add("public_attributes");
    openapiFields.add("queue_stats_configuration");
    openapiFields.add("runtime_domain");
    openapiFields.add("serverless_service_sids");
    openapiFields.add("service_version");
    openapiFields.add("status");
    openapiFields.add("taskrouter_offline_activity_sid");
    openapiFields.add("taskrouter_skills");
    openapiFields.add("taskrouter_target_taskqueue_sid");
    openapiFields.add("taskrouter_target_workflow_sid");
    openapiFields.add("taskrouter_taskqueues");
    openapiFields.add("taskrouter_worker_attributes");
    openapiFields.add("taskrouter_worker_channels");
    openapiFields.add("taskrouter_workspace_sid");
    openapiFields.add("ui_attributes");
    openapiFields.add("ui_dependencies");
    openapiFields.add("ui_language");
    openapiFields.add("ui_version");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FlexV1Configuration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FlexV1Configuration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FlexV1Configuration is not found in the empty JSON string", FlexV1Configuration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FlexV1Configuration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FlexV1Configuration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("call_recording_webhook_url") != null && !jsonObj.get("call_recording_webhook_url").isJsonNull()) && !jsonObj.get("call_recording_webhook_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `call_recording_webhook_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("call_recording_webhook_url").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("channel_configs") != null && !jsonObj.get("channel_configs").isJsonNull() && !jsonObj.get("channel_configs").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `channel_configs` to be an array in the JSON string but got `%s`", jsonObj.get("channel_configs").toString()));
      }
      if ((jsonObj.get("chat_service_instance_sid") != null && !jsonObj.get("chat_service_instance_sid").isJsonNull()) && !jsonObj.get("chat_service_instance_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chat_service_instance_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chat_service_instance_sid").toString()));
      }
      if ((jsonObj.get("crm_callback_url") != null && !jsonObj.get("crm_callback_url").isJsonNull()) && !jsonObj.get("crm_callback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `crm_callback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("crm_callback_url").toString()));
      }
      if ((jsonObj.get("crm_fallback_url") != null && !jsonObj.get("crm_fallback_url").isJsonNull()) && !jsonObj.get("crm_fallback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `crm_fallback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("crm_fallback_url").toString()));
      }
      if ((jsonObj.get("crm_type") != null && !jsonObj.get("crm_type").isJsonNull()) && !jsonObj.get("crm_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `crm_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("crm_type").toString()));
      }
      if ((jsonObj.get("flex_instance_sid") != null && !jsonObj.get("flex_instance_sid").isJsonNull()) && !jsonObj.get("flex_instance_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flex_instance_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flex_instance_sid").toString()));
      }
      if ((jsonObj.get("flex_service_instance_sid") != null && !jsonObj.get("flex_service_instance_sid").isJsonNull()) && !jsonObj.get("flex_service_instance_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flex_service_instance_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flex_service_instance_sid").toString()));
      }
      if ((jsonObj.get("flex_url") != null && !jsonObj.get("flex_url").isJsonNull()) && !jsonObj.get("flex_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flex_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flex_url").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("integrations") != null && !jsonObj.get("integrations").isJsonNull() && !jsonObj.get("integrations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `integrations` to be an array in the JSON string but got `%s`", jsonObj.get("integrations").toString()));
      }
      if ((jsonObj.get("messaging_service_instance_sid") != null && !jsonObj.get("messaging_service_instance_sid").isJsonNull()) && !jsonObj.get("messaging_service_instance_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messaging_service_instance_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messaging_service_instance_sid").toString()));
      }
      if ((jsonObj.get("runtime_domain") != null && !jsonObj.get("runtime_domain").isJsonNull()) && !jsonObj.get("runtime_domain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `runtime_domain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("runtime_domain").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("serverless_service_sids") != null && !jsonObj.get("serverless_service_sids").isJsonNull() && !jsonObj.get("serverless_service_sids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverless_service_sids` to be an array in the JSON string but got `%s`", jsonObj.get("serverless_service_sids").toString()));
      }
      if ((jsonObj.get("service_version") != null && !jsonObj.get("service_version").isJsonNull()) && !jsonObj.get("service_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_version").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        ConfigurationEnumStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("taskrouter_offline_activity_sid") != null && !jsonObj.get("taskrouter_offline_activity_sid").isJsonNull()) && !jsonObj.get("taskrouter_offline_activity_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taskrouter_offline_activity_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taskrouter_offline_activity_sid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("taskrouter_skills") != null && !jsonObj.get("taskrouter_skills").isJsonNull() && !jsonObj.get("taskrouter_skills").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `taskrouter_skills` to be an array in the JSON string but got `%s`", jsonObj.get("taskrouter_skills").toString()));
      }
      if ((jsonObj.get("taskrouter_target_taskqueue_sid") != null && !jsonObj.get("taskrouter_target_taskqueue_sid").isJsonNull()) && !jsonObj.get("taskrouter_target_taskqueue_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taskrouter_target_taskqueue_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taskrouter_target_taskqueue_sid").toString()));
      }
      if ((jsonObj.get("taskrouter_target_workflow_sid") != null && !jsonObj.get("taskrouter_target_workflow_sid").isJsonNull()) && !jsonObj.get("taskrouter_target_workflow_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taskrouter_target_workflow_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taskrouter_target_workflow_sid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("taskrouter_taskqueues") != null && !jsonObj.get("taskrouter_taskqueues").isJsonNull() && !jsonObj.get("taskrouter_taskqueues").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `taskrouter_taskqueues` to be an array in the JSON string but got `%s`", jsonObj.get("taskrouter_taskqueues").toString()));
      }
      if ((jsonObj.get("taskrouter_workspace_sid") != null && !jsonObj.get("taskrouter_workspace_sid").isJsonNull()) && !jsonObj.get("taskrouter_workspace_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taskrouter_workspace_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taskrouter_workspace_sid").toString()));
      }
      if ((jsonObj.get("ui_language") != null && !jsonObj.get("ui_language").isJsonNull()) && !jsonObj.get("ui_language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui_language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui_language").toString()));
      }
      if ((jsonObj.get("ui_version") != null && !jsonObj.get("ui_version").isJsonNull()) && !jsonObj.get("ui_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ui_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ui_version").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FlexV1Configuration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FlexV1Configuration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FlexV1Configuration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FlexV1Configuration.class));

       return (TypeAdapter<T>) new TypeAdapter<FlexV1Configuration>() {
           @Override
           public void write(JsonWriter out, FlexV1Configuration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FlexV1Configuration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FlexV1Configuration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FlexV1Configuration
   * @throws IOException if the JSON string is invalid with respect to FlexV1Configuration
   */
  public static FlexV1Configuration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FlexV1Configuration.class);
  }

  /**
   * Convert an instance of FlexV1Configuration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

