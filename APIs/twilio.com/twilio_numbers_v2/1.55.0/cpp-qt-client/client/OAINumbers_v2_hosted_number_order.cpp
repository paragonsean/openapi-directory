/**
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINumbers_v2_hosted_number_order.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINumbers_v2_hosted_number_order::OAINumbers_v2_hosted_number_order(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINumbers_v2_hosted_number_order::OAINumbers_v2_hosted_number_order() {
    this->initializeModel();
}

OAINumbers_v2_hosted_number_order::~OAINumbers_v2_hosted_number_order() {}

void OAINumbers_v2_hosted_number_order::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_address_sid_isSet = false;
    m_address_sid_isValid = false;

    m_bulk_hosting_request_sid_isSet = false;
    m_bulk_hosting_request_sid_isValid = false;

    m_capabilities_isSet = false;
    m_capabilities_isValid = false;

    m_cc_emails_isSet = false;
    m_cc_emails_isValid = false;

    m_contact_phone_number_isSet = false;
    m_contact_phone_number_isValid = false;

    m_contact_title_isSet = false;
    m_contact_title_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_failure_reason_isSet = false;
    m_failure_reason_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_incoming_phone_number_sid_isSet = false;
    m_incoming_phone_number_sid_isValid = false;

    m_next_step_isSet = false;
    m_next_step_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_signing_document_sid_isSet = false;
    m_signing_document_sid_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAINumbers_v2_hosted_number_order::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINumbers_v2_hosted_number_order::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_address_sid_isValid = ::OpenAPI::fromJsonValue(m_address_sid, json[QString("address_sid")]);
    m_address_sid_isSet = !json[QString("address_sid")].isNull() && m_address_sid_isValid;

    m_bulk_hosting_request_sid_isValid = ::OpenAPI::fromJsonValue(m_bulk_hosting_request_sid, json[QString("bulk_hosting_request_sid")]);
    m_bulk_hosting_request_sid_isSet = !json[QString("bulk_hosting_request_sid")].isNull() && m_bulk_hosting_request_sid_isValid;

    m_capabilities_isValid = ::OpenAPI::fromJsonValue(m_capabilities, json[QString("capabilities")]);
    m_capabilities_isSet = !json[QString("capabilities")].isNull() && m_capabilities_isValid;

    m_cc_emails_isValid = ::OpenAPI::fromJsonValue(m_cc_emails, json[QString("cc_emails")]);
    m_cc_emails_isSet = !json[QString("cc_emails")].isNull() && m_cc_emails_isValid;

    m_contact_phone_number_isValid = ::OpenAPI::fromJsonValue(m_contact_phone_number, json[QString("contact_phone_number")]);
    m_contact_phone_number_isSet = !json[QString("contact_phone_number")].isNull() && m_contact_phone_number_isValid;

    m_contact_title_isValid = ::OpenAPI::fromJsonValue(m_contact_title, json[QString("contact_title")]);
    m_contact_title_isSet = !json[QString("contact_title")].isNull() && m_contact_title_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_failure_reason, json[QString("failure_reason")]);
    m_failure_reason_isSet = !json[QString("failure_reason")].isNull() && m_failure_reason_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_incoming_phone_number_sid_isValid = ::OpenAPI::fromJsonValue(m_incoming_phone_number_sid, json[QString("incoming_phone_number_sid")]);
    m_incoming_phone_number_sid_isSet = !json[QString("incoming_phone_number_sid")].isNull() && m_incoming_phone_number_sid_isValid;

    m_next_step_isValid = ::OpenAPI::fromJsonValue(m_next_step, json[QString("next_step")]);
    m_next_step_isSet = !json[QString("next_step")].isNull() && m_next_step_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phone_number")]);
    m_phone_number_isSet = !json[QString("phone_number")].isNull() && m_phone_number_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_signing_document_sid_isValid = ::OpenAPI::fromJsonValue(m_signing_document_sid, json[QString("signing_document_sid")]);
    m_signing_document_sid_isSet = !json[QString("signing_document_sid")].isNull() && m_signing_document_sid_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAINumbers_v2_hosted_number_order::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINumbers_v2_hosted_number_order::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_address_sid_isSet) {
        obj.insert(QString("address_sid"), ::OpenAPI::toJsonValue(m_address_sid));
    }
    if (m_bulk_hosting_request_sid_isSet) {
        obj.insert(QString("bulk_hosting_request_sid"), ::OpenAPI::toJsonValue(m_bulk_hosting_request_sid));
    }
    if (m_capabilities.isSet()) {
        obj.insert(QString("capabilities"), ::OpenAPI::toJsonValue(m_capabilities));
    }
    if (m_cc_emails.size() > 0) {
        obj.insert(QString("cc_emails"), ::OpenAPI::toJsonValue(m_cc_emails));
    }
    if (m_contact_phone_number_isSet) {
        obj.insert(QString("contact_phone_number"), ::OpenAPI::toJsonValue(m_contact_phone_number));
    }
    if (m_contact_title_isSet) {
        obj.insert(QString("contact_title"), ::OpenAPI::toJsonValue(m_contact_title));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_failure_reason_isSet) {
        obj.insert(QString("failure_reason"), ::OpenAPI::toJsonValue(m_failure_reason));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_incoming_phone_number_sid_isSet) {
        obj.insert(QString("incoming_phone_number_sid"), ::OpenAPI::toJsonValue(m_incoming_phone_number_sid));
    }
    if (m_next_step_isSet) {
        obj.insert(QString("next_step"), ::OpenAPI::toJsonValue(m_next_step));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phone_number"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_signing_document_sid_isSet) {
        obj.insert(QString("signing_document_sid"), ::OpenAPI::toJsonValue(m_signing_document_sid));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAINumbers_v2_hosted_number_order::getAccountSid() const {
    return m_account_sid;
}
void OAINumbers_v2_hosted_number_order::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAINumbers_v2_hosted_number_order::getAddressSid() const {
    return m_address_sid;
}
void OAINumbers_v2_hosted_number_order::setAddressSid(const QString &address_sid) {
    m_address_sid = address_sid;
    m_address_sid_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_address_sid_Set() const{
    return m_address_sid_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_address_sid_Valid() const{
    return m_address_sid_isValid;
}

QString OAINumbers_v2_hosted_number_order::getBulkHostingRequestSid() const {
    return m_bulk_hosting_request_sid;
}
void OAINumbers_v2_hosted_number_order::setBulkHostingRequestSid(const QString &bulk_hosting_request_sid) {
    m_bulk_hosting_request_sid = bulk_hosting_request_sid;
    m_bulk_hosting_request_sid_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_bulk_hosting_request_sid_Set() const{
    return m_bulk_hosting_request_sid_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_bulk_hosting_request_sid_Valid() const{
    return m_bulk_hosting_request_sid_isValid;
}

OAINumbers_v2_hosted_number_order_capabilities OAINumbers_v2_hosted_number_order::getCapabilities() const {
    return m_capabilities;
}
void OAINumbers_v2_hosted_number_order::setCapabilities(const OAINumbers_v2_hosted_number_order_capabilities &capabilities) {
    m_capabilities = capabilities;
    m_capabilities_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_capabilities_Set() const{
    return m_capabilities_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_capabilities_Valid() const{
    return m_capabilities_isValid;
}

QList<QString> OAINumbers_v2_hosted_number_order::getCcEmails() const {
    return m_cc_emails;
}
void OAINumbers_v2_hosted_number_order::setCcEmails(const QList<QString> &cc_emails) {
    m_cc_emails = cc_emails;
    m_cc_emails_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_cc_emails_Set() const{
    return m_cc_emails_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_cc_emails_Valid() const{
    return m_cc_emails_isValid;
}

QString OAINumbers_v2_hosted_number_order::getContactPhoneNumber() const {
    return m_contact_phone_number;
}
void OAINumbers_v2_hosted_number_order::setContactPhoneNumber(const QString &contact_phone_number) {
    m_contact_phone_number = contact_phone_number;
    m_contact_phone_number_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_contact_phone_number_Set() const{
    return m_contact_phone_number_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_contact_phone_number_Valid() const{
    return m_contact_phone_number_isValid;
}

QString OAINumbers_v2_hosted_number_order::getContactTitle() const {
    return m_contact_title;
}
void OAINumbers_v2_hosted_number_order::setContactTitle(const QString &contact_title) {
    m_contact_title = contact_title;
    m_contact_title_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_contact_title_Set() const{
    return m_contact_title_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_contact_title_Valid() const{
    return m_contact_title_isValid;
}

QDateTime OAINumbers_v2_hosted_number_order::getDateCreated() const {
    return m_date_created;
}
void OAINumbers_v2_hosted_number_order::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAINumbers_v2_hosted_number_order::getDateUpdated() const {
    return m_date_updated;
}
void OAINumbers_v2_hosted_number_order::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAINumbers_v2_hosted_number_order::getEmail() const {
    return m_email;
}
void OAINumbers_v2_hosted_number_order::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_email_Set() const{
    return m_email_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_email_Valid() const{
    return m_email_isValid;
}

QString OAINumbers_v2_hosted_number_order::getFailureReason() const {
    return m_failure_reason;
}
void OAINumbers_v2_hosted_number_order::setFailureReason(const QString &failure_reason) {
    m_failure_reason = failure_reason;
    m_failure_reason_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_failure_reason_Set() const{
    return m_failure_reason_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_failure_reason_Valid() const{
    return m_failure_reason_isValid;
}

QString OAINumbers_v2_hosted_number_order::getFriendlyName() const {
    return m_friendly_name;
}
void OAINumbers_v2_hosted_number_order::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAINumbers_v2_hosted_number_order::getIncomingPhoneNumberSid() const {
    return m_incoming_phone_number_sid;
}
void OAINumbers_v2_hosted_number_order::setIncomingPhoneNumberSid(const QString &incoming_phone_number_sid) {
    m_incoming_phone_number_sid = incoming_phone_number_sid;
    m_incoming_phone_number_sid_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_incoming_phone_number_sid_Set() const{
    return m_incoming_phone_number_sid_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_incoming_phone_number_sid_Valid() const{
    return m_incoming_phone_number_sid_isValid;
}

QString OAINumbers_v2_hosted_number_order::getNextStep() const {
    return m_next_step;
}
void OAINumbers_v2_hosted_number_order::setNextStep(const QString &next_step) {
    m_next_step = next_step;
    m_next_step_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_next_step_Set() const{
    return m_next_step_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_next_step_Valid() const{
    return m_next_step_isValid;
}

QString OAINumbers_v2_hosted_number_order::getPhoneNumber() const {
    return m_phone_number;
}
void OAINumbers_v2_hosted_number_order::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAINumbers_v2_hosted_number_order::getSid() const {
    return m_sid;
}
void OAINumbers_v2_hosted_number_order::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAINumbers_v2_hosted_number_order::getSigningDocumentSid() const {
    return m_signing_document_sid;
}
void OAINumbers_v2_hosted_number_order::setSigningDocumentSid(const QString &signing_document_sid) {
    m_signing_document_sid = signing_document_sid;
    m_signing_document_sid_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_signing_document_sid_Set() const{
    return m_signing_document_sid_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_signing_document_sid_Valid() const{
    return m_signing_document_sid_isValid;
}

OAIHosted_number_order_enum_status OAINumbers_v2_hosted_number_order::getStatus() const {
    return m_status;
}
void OAINumbers_v2_hosted_number_order::setStatus(const OAIHosted_number_order_enum_status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_status_Set() const{
    return m_status_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_status_Valid() const{
    return m_status_isValid;
}

QString OAINumbers_v2_hosted_number_order::getUrl() const {
    return m_url;
}
void OAINumbers_v2_hosted_number_order::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAINumbers_v2_hosted_number_order::is_url_Set() const{
    return m_url_isSet;
}

bool OAINumbers_v2_hosted_number_order::is_url_Valid() const{
    return m_url_isValid;
}

bool OAINumbers_v2_hosted_number_order::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bulk_hosting_request_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_capabilities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cc_emails.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_incoming_phone_number_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_step_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_signing_document_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINumbers_v2_hosted_number_order::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
