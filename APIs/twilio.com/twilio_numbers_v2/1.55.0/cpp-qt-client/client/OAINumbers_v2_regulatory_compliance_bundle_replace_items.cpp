/**
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINumbers_v2_regulatory_compliance_bundle_replace_items.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINumbers_v2_regulatory_compliance_bundle_replace_items::OAINumbers_v2_regulatory_compliance_bundle_replace_items(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINumbers_v2_regulatory_compliance_bundle_replace_items::OAINumbers_v2_regulatory_compliance_bundle_replace_items() {
    this->initializeModel();
}

OAINumbers_v2_regulatory_compliance_bundle_replace_items::~OAINumbers_v2_regulatory_compliance_bundle_replace_items() {}

void OAINumbers_v2_regulatory_compliance_bundle_replace_items::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_regulation_sid_isSet = false;
    m_regulation_sid_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_callback_isSet = false;
    m_status_callback_isValid = false;

    m_valid_until_isSet = false;
    m_valid_until_isValid = false;
}

void OAINumbers_v2_regulatory_compliance_bundle_replace_items::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINumbers_v2_regulatory_compliance_bundle_replace_items::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_regulation_sid_isValid = ::OpenAPI::fromJsonValue(m_regulation_sid, json[QString("regulation_sid")]);
    m_regulation_sid_isSet = !json[QString("regulation_sid")].isNull() && m_regulation_sid_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_callback_isValid = ::OpenAPI::fromJsonValue(m_status_callback, json[QString("status_callback")]);
    m_status_callback_isSet = !json[QString("status_callback")].isNull() && m_status_callback_isValid;

    m_valid_until_isValid = ::OpenAPI::fromJsonValue(m_valid_until, json[QString("valid_until")]);
    m_valid_until_isSet = !json[QString("valid_until")].isNull() && m_valid_until_isValid;
}

QString OAINumbers_v2_regulatory_compliance_bundle_replace_items::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINumbers_v2_regulatory_compliance_bundle_replace_items::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_regulation_sid_isSet) {
        obj.insert(QString("regulation_sid"), ::OpenAPI::toJsonValue(m_regulation_sid));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_callback_isSet) {
        obj.insert(QString("status_callback"), ::OpenAPI::toJsonValue(m_status_callback));
    }
    if (m_valid_until_isSet) {
        obj.insert(QString("valid_until"), ::OpenAPI::toJsonValue(m_valid_until));
    }
    return obj;
}

QString OAINumbers_v2_regulatory_compliance_bundle_replace_items::getAccountSid() const {
    return m_account_sid;
}
void OAINumbers_v2_regulatory_compliance_bundle_replace_items::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QDateTime OAINumbers_v2_regulatory_compliance_bundle_replace_items::getDateCreated() const {
    return m_date_created;
}
void OAINumbers_v2_regulatory_compliance_bundle_replace_items::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAINumbers_v2_regulatory_compliance_bundle_replace_items::getDateUpdated() const {
    return m_date_updated;
}
void OAINumbers_v2_regulatory_compliance_bundle_replace_items::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAINumbers_v2_regulatory_compliance_bundle_replace_items::getEmail() const {
    return m_email;
}
void OAINumbers_v2_regulatory_compliance_bundle_replace_items::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_email_Set() const{
    return m_email_isSet;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_email_Valid() const{
    return m_email_isValid;
}

QString OAINumbers_v2_regulatory_compliance_bundle_replace_items::getFriendlyName() const {
    return m_friendly_name;
}
void OAINumbers_v2_regulatory_compliance_bundle_replace_items::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAINumbers_v2_regulatory_compliance_bundle_replace_items::getRegulationSid() const {
    return m_regulation_sid;
}
void OAINumbers_v2_regulatory_compliance_bundle_replace_items::setRegulationSid(const QString &regulation_sid) {
    m_regulation_sid = regulation_sid;
    m_regulation_sid_isSet = true;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_regulation_sid_Set() const{
    return m_regulation_sid_isSet;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_regulation_sid_Valid() const{
    return m_regulation_sid_isValid;
}

QString OAINumbers_v2_regulatory_compliance_bundle_replace_items::getSid() const {
    return m_sid;
}
void OAINumbers_v2_regulatory_compliance_bundle_replace_items::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_sid_Valid() const{
    return m_sid_isValid;
}

OAIReplace_items_enum_status OAINumbers_v2_regulatory_compliance_bundle_replace_items::getStatus() const {
    return m_status;
}
void OAINumbers_v2_regulatory_compliance_bundle_replace_items::setStatus(const OAIReplace_items_enum_status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_status_Set() const{
    return m_status_isSet;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_status_Valid() const{
    return m_status_isValid;
}

QString OAINumbers_v2_regulatory_compliance_bundle_replace_items::getStatusCallback() const {
    return m_status_callback;
}
void OAINumbers_v2_regulatory_compliance_bundle_replace_items::setStatusCallback(const QString &status_callback) {
    m_status_callback = status_callback;
    m_status_callback_isSet = true;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_status_callback_Set() const{
    return m_status_callback_isSet;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_status_callback_Valid() const{
    return m_status_callback_isValid;
}

QDateTime OAINumbers_v2_regulatory_compliance_bundle_replace_items::getValidUntil() const {
    return m_valid_until;
}
void OAINumbers_v2_regulatory_compliance_bundle_replace_items::setValidUntil(const QDateTime &valid_until) {
    m_valid_until = valid_until;
    m_valid_until_isSet = true;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_valid_until_Set() const{
    return m_valid_until_isSet;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::is_valid_until_Valid() const{
    return m_valid_until_isValid;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_regulation_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_callback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_until_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINumbers_v2_regulatory_compliance_bundle_replace_items::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
