/*
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.HostedNumberOrderEnumStatus;
import org.openapitools.client.model.NumbersV2HostedNumberOrderCapabilities;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * NumbersV2HostedNumberOrder
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:56.460230-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NumbersV2HostedNumberOrder {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ADDRESS_SID = "address_sid";
  @SerializedName(SERIALIZED_NAME_ADDRESS_SID)
  private String addressSid;

  public static final String SERIALIZED_NAME_BULK_HOSTING_REQUEST_SID = "bulk_hosting_request_sid";
  @SerializedName(SERIALIZED_NAME_BULK_HOSTING_REQUEST_SID)
  private String bulkHostingRequestSid;

  public static final String SERIALIZED_NAME_CAPABILITIES = "capabilities";
  @SerializedName(SERIALIZED_NAME_CAPABILITIES)
  private NumbersV2HostedNumberOrderCapabilities capabilities;

  public static final String SERIALIZED_NAME_CC_EMAILS = "cc_emails";
  @SerializedName(SERIALIZED_NAME_CC_EMAILS)
  private List<String> ccEmails;

  public static final String SERIALIZED_NAME_CONTACT_PHONE_NUMBER = "contact_phone_number";
  @SerializedName(SERIALIZED_NAME_CONTACT_PHONE_NUMBER)
  private String contactPhoneNumber;

  public static final String SERIALIZED_NAME_CONTACT_TITLE = "contact_title";
  @SerializedName(SERIALIZED_NAME_CONTACT_TITLE)
  private String contactTitle;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FAILURE_REASON = "failure_reason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_INCOMING_PHONE_NUMBER_SID = "incoming_phone_number_sid";
  @SerializedName(SERIALIZED_NAME_INCOMING_PHONE_NUMBER_SID)
  private String incomingPhoneNumberSid;

  public static final String SERIALIZED_NAME_NEXT_STEP = "next_step";
  @SerializedName(SERIALIZED_NAME_NEXT_STEP)
  private String nextStep;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_SIGNING_DOCUMENT_SID = "signing_document_sid";
  @SerializedName(SERIALIZED_NAME_SIGNING_DOCUMENT_SID)
  private String signingDocumentSid;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private HostedNumberOrderEnumStatus status;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public NumbersV2HostedNumberOrder() {
  }

  public NumbersV2HostedNumberOrder accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * A 34 character string that uniquely identifies the account.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public NumbersV2HostedNumberOrder addressSid(String addressSid) {
    this.addressSid = addressSid;
    return this;
  }

  /**
   * A 34 character string that uniquely identifies the Address resource that represents the address of the owner of this phone number.
   * @return addressSid
   */
  @javax.annotation.Nullable
  public String getAddressSid() {
    return addressSid;
  }

  public void setAddressSid(String addressSid) {
    this.addressSid = addressSid;
  }


  public NumbersV2HostedNumberOrder bulkHostingRequestSid(String bulkHostingRequestSid) {
    this.bulkHostingRequestSid = bulkHostingRequestSid;
    return this;
  }

  /**
   * A 34 character string that uniquely identifies the bulk hosting request associated with this HostedNumberOrder.
   * @return bulkHostingRequestSid
   */
  @javax.annotation.Nullable
  public String getBulkHostingRequestSid() {
    return bulkHostingRequestSid;
  }

  public void setBulkHostingRequestSid(String bulkHostingRequestSid) {
    this.bulkHostingRequestSid = bulkHostingRequestSid;
  }


  public NumbersV2HostedNumberOrder capabilities(NumbersV2HostedNumberOrderCapabilities capabilities) {
    this.capabilities = capabilities;
    return this;
  }

  /**
   * Get capabilities
   * @return capabilities
   */
  @javax.annotation.Nullable
  public NumbersV2HostedNumberOrderCapabilities getCapabilities() {
    return capabilities;
  }

  public void setCapabilities(NumbersV2HostedNumberOrderCapabilities capabilities) {
    this.capabilities = capabilities;
  }


  public NumbersV2HostedNumberOrder ccEmails(List<String> ccEmails) {
    this.ccEmails = ccEmails;
    return this;
  }

  public NumbersV2HostedNumberOrder addCcEmailsItem(String ccEmailsItem) {
    if (this.ccEmails == null) {
      this.ccEmails = new ArrayList<>();
    }
    this.ccEmails.add(ccEmailsItem);
    return this;
  }

  /**
   * A list of emails that LOA document for this HostedNumberOrder will be carbon copied to.
   * @return ccEmails
   */
  @javax.annotation.Nullable
  public List<String> getCcEmails() {
    return ccEmails;
  }

  public void setCcEmails(List<String> ccEmails) {
    this.ccEmails = ccEmails;
  }


  public NumbersV2HostedNumberOrder contactPhoneNumber(String contactPhoneNumber) {
    this.contactPhoneNumber = contactPhoneNumber;
    return this;
  }

  /**
   * The contact phone number of the person authorized to sign the Authorization Document.
   * @return contactPhoneNumber
   */
  @javax.annotation.Nullable
  public String getContactPhoneNumber() {
    return contactPhoneNumber;
  }

  public void setContactPhoneNumber(String contactPhoneNumber) {
    this.contactPhoneNumber = contactPhoneNumber;
  }


  public NumbersV2HostedNumberOrder contactTitle(String contactTitle) {
    this.contactTitle = contactTitle;
    return this;
  }

  /**
   * The title of the person authorized to sign the Authorization Document for this phone number.
   * @return contactTitle
   */
  @javax.annotation.Nullable
  public String getContactTitle() {
    return contactTitle;
  }

  public void setContactTitle(String contactTitle) {
    this.contactTitle = contactTitle;
  }


  public NumbersV2HostedNumberOrder dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public NumbersV2HostedNumberOrder dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date that this resource was updated, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public NumbersV2HostedNumberOrder email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Email of the owner of this phone number that is being hosted.
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public NumbersV2HostedNumberOrder failureReason(String failureReason) {
    this.failureReason = failureReason;
    return this;
  }

  /**
   * A message that explains why a hosted_number_order went to status \&quot;action-required\&quot;
   * @return failureReason
   */
  @javax.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }

  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public NumbersV2HostedNumberOrder friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * A 128 character string that is a human-readable text that describes this resource.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public NumbersV2HostedNumberOrder incomingPhoneNumberSid(String incomingPhoneNumberSid) {
    this.incomingPhoneNumberSid = incomingPhoneNumberSid;
    return this;
  }

  /**
   * A 34 character string that uniquely identifies the [IncomingPhoneNumber](https://www.twilio.com/docs/phone-numbers/api/incomingphonenumber-resource) resource that represents the phone number being hosted.
   * @return incomingPhoneNumberSid
   */
  @javax.annotation.Nullable
  public String getIncomingPhoneNumberSid() {
    return incomingPhoneNumberSid;
  }

  public void setIncomingPhoneNumberSid(String incomingPhoneNumberSid) {
    this.incomingPhoneNumberSid = incomingPhoneNumberSid;
  }


  public NumbersV2HostedNumberOrder nextStep(String nextStep) {
    this.nextStep = nextStep;
    return this;
  }

  /**
   * The next step you need to take to complete the hosted number order and request it successfully.
   * @return nextStep
   */
  @javax.annotation.Nullable
  public String getNextStep() {
    return nextStep;
  }

  public void setNextStep(String nextStep) {
    this.nextStep = nextStep;
  }


  public NumbersV2HostedNumberOrder phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Phone number to be hosted. This must be in [E.164](https://en.wikipedia.org/wiki/E.164) format, e.g., +16175551212
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public NumbersV2HostedNumberOrder sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * A 34 character string that uniquely identifies this HostedNumberOrder.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public NumbersV2HostedNumberOrder signingDocumentSid(String signingDocumentSid) {
    this.signingDocumentSid = signingDocumentSid;
    return this;
  }

  /**
   * A 34 character string that uniquely identifies the [Authorization Document](https://www.twilio.com/docs/phone-numbers/hosted-numbers/hosted-numbers-api/authorization-document-resource) the user needs to sign.
   * @return signingDocumentSid
   */
  @javax.annotation.Nullable
  public String getSigningDocumentSid() {
    return signingDocumentSid;
  }

  public void setSigningDocumentSid(String signingDocumentSid) {
    this.signingDocumentSid = signingDocumentSid;
  }


  public NumbersV2HostedNumberOrder status(HostedNumberOrderEnumStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public HostedNumberOrderEnumStatus getStatus() {
    return status;
  }

  public void setStatus(HostedNumberOrderEnumStatus status) {
    this.status = status;
  }


  public NumbersV2HostedNumberOrder url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The URL of this HostedNumberOrder.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NumbersV2HostedNumberOrder numbersV2HostedNumberOrder = (NumbersV2HostedNumberOrder) o;
    return Objects.equals(this.accountSid, numbersV2HostedNumberOrder.accountSid) &&
        Objects.equals(this.addressSid, numbersV2HostedNumberOrder.addressSid) &&
        Objects.equals(this.bulkHostingRequestSid, numbersV2HostedNumberOrder.bulkHostingRequestSid) &&
        Objects.equals(this.capabilities, numbersV2HostedNumberOrder.capabilities) &&
        Objects.equals(this.ccEmails, numbersV2HostedNumberOrder.ccEmails) &&
        Objects.equals(this.contactPhoneNumber, numbersV2HostedNumberOrder.contactPhoneNumber) &&
        Objects.equals(this.contactTitle, numbersV2HostedNumberOrder.contactTitle) &&
        Objects.equals(this.dateCreated, numbersV2HostedNumberOrder.dateCreated) &&
        Objects.equals(this.dateUpdated, numbersV2HostedNumberOrder.dateUpdated) &&
        Objects.equals(this.email, numbersV2HostedNumberOrder.email) &&
        Objects.equals(this.failureReason, numbersV2HostedNumberOrder.failureReason) &&
        Objects.equals(this.friendlyName, numbersV2HostedNumberOrder.friendlyName) &&
        Objects.equals(this.incomingPhoneNumberSid, numbersV2HostedNumberOrder.incomingPhoneNumberSid) &&
        Objects.equals(this.nextStep, numbersV2HostedNumberOrder.nextStep) &&
        Objects.equals(this.phoneNumber, numbersV2HostedNumberOrder.phoneNumber) &&
        Objects.equals(this.sid, numbersV2HostedNumberOrder.sid) &&
        Objects.equals(this.signingDocumentSid, numbersV2HostedNumberOrder.signingDocumentSid) &&
        Objects.equals(this.status, numbersV2HostedNumberOrder.status) &&
        Objects.equals(this.url, numbersV2HostedNumberOrder.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, addressSid, bulkHostingRequestSid, capabilities, ccEmails, contactPhoneNumber, contactTitle, dateCreated, dateUpdated, email, failureReason, friendlyName, incomingPhoneNumberSid, nextStep, phoneNumber, sid, signingDocumentSid, status, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NumbersV2HostedNumberOrder {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    addressSid: ").append(toIndentedString(addressSid)).append("\n");
    sb.append("    bulkHostingRequestSid: ").append(toIndentedString(bulkHostingRequestSid)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    ccEmails: ").append(toIndentedString(ccEmails)).append("\n");
    sb.append("    contactPhoneNumber: ").append(toIndentedString(contactPhoneNumber)).append("\n");
    sb.append("    contactTitle: ").append(toIndentedString(contactTitle)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    incomingPhoneNumberSid: ").append(toIndentedString(incomingPhoneNumberSid)).append("\n");
    sb.append("    nextStep: ").append(toIndentedString(nextStep)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    signingDocumentSid: ").append(toIndentedString(signingDocumentSid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("address_sid");
    openapiFields.add("bulk_hosting_request_sid");
    openapiFields.add("capabilities");
    openapiFields.add("cc_emails");
    openapiFields.add("contact_phone_number");
    openapiFields.add("contact_title");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("email");
    openapiFields.add("failure_reason");
    openapiFields.add("friendly_name");
    openapiFields.add("incoming_phone_number_sid");
    openapiFields.add("next_step");
    openapiFields.add("phone_number");
    openapiFields.add("sid");
    openapiFields.add("signing_document_sid");
    openapiFields.add("status");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NumbersV2HostedNumberOrder
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NumbersV2HostedNumberOrder.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NumbersV2HostedNumberOrder is not found in the empty JSON string", NumbersV2HostedNumberOrder.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NumbersV2HostedNumberOrder.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NumbersV2HostedNumberOrder` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("address_sid") != null && !jsonObj.get("address_sid").isJsonNull()) && !jsonObj.get("address_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_sid").toString()));
      }
      if ((jsonObj.get("bulk_hosting_request_sid") != null && !jsonObj.get("bulk_hosting_request_sid").isJsonNull()) && !jsonObj.get("bulk_hosting_request_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bulk_hosting_request_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bulk_hosting_request_sid").toString()));
      }
      // validate the optional field `capabilities`
      if (jsonObj.get("capabilities") != null && !jsonObj.get("capabilities").isJsonNull()) {
        NumbersV2HostedNumberOrderCapabilities.validateJsonElement(jsonObj.get("capabilities"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("cc_emails") != null && !jsonObj.get("cc_emails").isJsonNull() && !jsonObj.get("cc_emails").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_emails` to be an array in the JSON string but got `%s`", jsonObj.get("cc_emails").toString()));
      }
      if ((jsonObj.get("contact_phone_number") != null && !jsonObj.get("contact_phone_number").isJsonNull()) && !jsonObj.get("contact_phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contact_phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contact_phone_number").toString()));
      }
      if ((jsonObj.get("contact_title") != null && !jsonObj.get("contact_title").isJsonNull()) && !jsonObj.get("contact_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contact_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contact_title").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("failure_reason") != null && !jsonObj.get("failure_reason").isJsonNull()) && !jsonObj.get("failure_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failure_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failure_reason").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("incoming_phone_number_sid") != null && !jsonObj.get("incoming_phone_number_sid").isJsonNull()) && !jsonObj.get("incoming_phone_number_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `incoming_phone_number_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("incoming_phone_number_sid").toString()));
      }
      if ((jsonObj.get("next_step") != null && !jsonObj.get("next_step").isJsonNull()) && !jsonObj.get("next_step").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_step` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_step").toString()));
      }
      if ((jsonObj.get("phone_number") != null && !jsonObj.get("phone_number").isJsonNull()) && !jsonObj.get("phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone_number").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("signing_document_sid") != null && !jsonObj.get("signing_document_sid").isJsonNull()) && !jsonObj.get("signing_document_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signing_document_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signing_document_sid").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        HostedNumberOrderEnumStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NumbersV2HostedNumberOrder.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NumbersV2HostedNumberOrder' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NumbersV2HostedNumberOrder> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NumbersV2HostedNumberOrder.class));

       return (TypeAdapter<T>) new TypeAdapter<NumbersV2HostedNumberOrder>() {
           @Override
           public void write(JsonWriter out, NumbersV2HostedNumberOrder value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NumbersV2HostedNumberOrder read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NumbersV2HostedNumberOrder given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NumbersV2HostedNumberOrder
   * @throws IOException if the JSON string is invalid with respect to NumbersV2HostedNumberOrder
   */
  public static NumbersV2HostedNumberOrder fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NumbersV2HostedNumberOrder.class);
  }

  /**
   * Convert an instance of NumbersV2HostedNumberOrder to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

