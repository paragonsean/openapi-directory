/*
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BulkHostedNumberOrderEnumRequestStatus;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * NumbersV2BulkHostedNumberOrder
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:56.460230-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NumbersV2BulkHostedNumberOrder {
  public static final String SERIALIZED_NAME_BULK_HOSTING_SID = "bulk_hosting_sid";
  @SerializedName(SERIALIZED_NAME_BULK_HOSTING_SID)
  private String bulkHostingSid;

  public static final String SERIALIZED_NAME_DATE_COMPLETED = "date_completed";
  @SerializedName(SERIALIZED_NAME_DATE_COMPLETED)
  private OffsetDateTime dateCompleted;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_NOTIFICATION_EMAIL = "notification_email";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_EMAIL)
  private String notificationEmail;

  public static final String SERIALIZED_NAME_REQUEST_STATUS = "request_status";
  @SerializedName(SERIALIZED_NAME_REQUEST_STATUS)
  private BulkHostedNumberOrderEnumRequestStatus requestStatus;

  public static final String SERIALIZED_NAME_RESULTS = "results";
  @SerializedName(SERIALIZED_NAME_RESULTS)
  private List<Object> results;

  public static final String SERIALIZED_NAME_TOTAL_COUNT = "total_count";
  @SerializedName(SERIALIZED_NAME_TOTAL_COUNT)
  private Integer totalCount;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public NumbersV2BulkHostedNumberOrder() {
  }

  public NumbersV2BulkHostedNumberOrder bulkHostingSid(String bulkHostingSid) {
    this.bulkHostingSid = bulkHostingSid;
    return this;
  }

  /**
   * A 34 character string that uniquely identifies this BulkHostedNumberOrder.
   * @return bulkHostingSid
   */
  @javax.annotation.Nullable
  public String getBulkHostingSid() {
    return bulkHostingSid;
  }

  public void setBulkHostingSid(String bulkHostingSid) {
    this.bulkHostingSid = bulkHostingSid;
  }


  public NumbersV2BulkHostedNumberOrder dateCompleted(OffsetDateTime dateCompleted) {
    this.dateCompleted = dateCompleted;
    return this;
  }

  /**
   * The date that this resource was completed, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCompleted
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCompleted() {
    return dateCompleted;
  }

  public void setDateCompleted(OffsetDateTime dateCompleted) {
    this.dateCompleted = dateCompleted;
  }


  public NumbersV2BulkHostedNumberOrder dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public NumbersV2BulkHostedNumberOrder friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * A 128 character string that is a human-readable text that describes this resource.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public NumbersV2BulkHostedNumberOrder notificationEmail(String notificationEmail) {
    this.notificationEmail = notificationEmail;
    return this;
  }

  /**
   * Email address used for send notifications about this Bulk hosted number request.
   * @return notificationEmail
   */
  @javax.annotation.Nullable
  public String getNotificationEmail() {
    return notificationEmail;
  }

  public void setNotificationEmail(String notificationEmail) {
    this.notificationEmail = notificationEmail;
  }


  public NumbersV2BulkHostedNumberOrder requestStatus(BulkHostedNumberOrderEnumRequestStatus requestStatus) {
    this.requestStatus = requestStatus;
    return this;
  }

  /**
   * Get requestStatus
   * @return requestStatus
   */
  @javax.annotation.Nullable
  public BulkHostedNumberOrderEnumRequestStatus getRequestStatus() {
    return requestStatus;
  }

  public void setRequestStatus(BulkHostedNumberOrderEnumRequestStatus requestStatus) {
    this.requestStatus = requestStatus;
  }


  public NumbersV2BulkHostedNumberOrder results(List<Object> results) {
    this.results = results;
    return this;
  }

  public NumbersV2BulkHostedNumberOrder addResultsItem(Object resultsItem) {
    if (this.results == null) {
      this.results = new ArrayList<>();
    }
    this.results.add(resultsItem);
    return this;
  }

  /**
   * Contains a list of all the individual hosting orders and their information, for this Bulk request. Each result object is grouped by its order status. To see a complete list of order status, please check &#39;https://www.twilio.com/docs/phone-numbers/hosted-numbers/hosted-numbers-api/hosted-number-order-resource#status-values&#39;.
   * @return results
   */
  @javax.annotation.Nullable
  public List<Object> getResults() {
    return results;
  }

  public void setResults(List<Object> results) {
    this.results = results;
  }


  public NumbersV2BulkHostedNumberOrder totalCount(Integer totalCount) {
    this.totalCount = totalCount;
    return this;
  }

  /**
   * The total count of phone numbers in this Bulk hosting request.
   * @return totalCount
   */
  @javax.annotation.Nullable
  public Integer getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  public NumbersV2BulkHostedNumberOrder url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The URL of this BulkHostedNumberOrder resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NumbersV2BulkHostedNumberOrder numbersV2BulkHostedNumberOrder = (NumbersV2BulkHostedNumberOrder) o;
    return Objects.equals(this.bulkHostingSid, numbersV2BulkHostedNumberOrder.bulkHostingSid) &&
        Objects.equals(this.dateCompleted, numbersV2BulkHostedNumberOrder.dateCompleted) &&
        Objects.equals(this.dateCreated, numbersV2BulkHostedNumberOrder.dateCreated) &&
        Objects.equals(this.friendlyName, numbersV2BulkHostedNumberOrder.friendlyName) &&
        Objects.equals(this.notificationEmail, numbersV2BulkHostedNumberOrder.notificationEmail) &&
        Objects.equals(this.requestStatus, numbersV2BulkHostedNumberOrder.requestStatus) &&
        Objects.equals(this.results, numbersV2BulkHostedNumberOrder.results) &&
        Objects.equals(this.totalCount, numbersV2BulkHostedNumberOrder.totalCount) &&
        Objects.equals(this.url, numbersV2BulkHostedNumberOrder.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(bulkHostingSid, dateCompleted, dateCreated, friendlyName, notificationEmail, requestStatus, results, totalCount, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NumbersV2BulkHostedNumberOrder {\n");
    sb.append("    bulkHostingSid: ").append(toIndentedString(bulkHostingSid)).append("\n");
    sb.append("    dateCompleted: ").append(toIndentedString(dateCompleted)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    notificationEmail: ").append(toIndentedString(notificationEmail)).append("\n");
    sb.append("    requestStatus: ").append(toIndentedString(requestStatus)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bulk_hosting_sid");
    openapiFields.add("date_completed");
    openapiFields.add("date_created");
    openapiFields.add("friendly_name");
    openapiFields.add("notification_email");
    openapiFields.add("request_status");
    openapiFields.add("results");
    openapiFields.add("total_count");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NumbersV2BulkHostedNumberOrder
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NumbersV2BulkHostedNumberOrder.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NumbersV2BulkHostedNumberOrder is not found in the empty JSON string", NumbersV2BulkHostedNumberOrder.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NumbersV2BulkHostedNumberOrder.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NumbersV2BulkHostedNumberOrder` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bulk_hosting_sid") != null && !jsonObj.get("bulk_hosting_sid").isJsonNull()) && !jsonObj.get("bulk_hosting_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bulk_hosting_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bulk_hosting_sid").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("notification_email") != null && !jsonObj.get("notification_email").isJsonNull()) && !jsonObj.get("notification_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notification_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notification_email").toString()));
      }
      if ((jsonObj.get("request_status") != null && !jsonObj.get("request_status").isJsonNull()) && !jsonObj.get("request_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `request_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("request_status").toString()));
      }
      // validate the optional field `request_status`
      if (jsonObj.get("request_status") != null && !jsonObj.get("request_status").isJsonNull()) {
        BulkHostedNumberOrderEnumRequestStatus.validateJsonElement(jsonObj.get("request_status"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("results") != null && !jsonObj.get("results").isJsonNull() && !jsonObj.get("results").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `results` to be an array in the JSON string but got `%s`", jsonObj.get("results").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NumbersV2BulkHostedNumberOrder.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NumbersV2BulkHostedNumberOrder' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NumbersV2BulkHostedNumberOrder> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NumbersV2BulkHostedNumberOrder.class));

       return (TypeAdapter<T>) new TypeAdapter<NumbersV2BulkHostedNumberOrder>() {
           @Override
           public void write(JsonWriter out, NumbersV2BulkHostedNumberOrder value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NumbersV2BulkHostedNumberOrder read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NumbersV2BulkHostedNumberOrder given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NumbersV2BulkHostedNumberOrder
   * @throws IOException if the JSON string is invalid with respect to NumbersV2BulkHostedNumberOrder
   */
  public static NumbersV2BulkHostedNumberOrder fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NumbersV2BulkHostedNumberOrder.class);
  }

  /**
   * Convert an instance of NumbersV2BulkHostedNumberOrder to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

