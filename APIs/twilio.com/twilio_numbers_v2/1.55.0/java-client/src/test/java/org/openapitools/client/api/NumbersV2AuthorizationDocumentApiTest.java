/*
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AuthorizationDocumentEnumStatus;
import org.openapitools.client.model.ListAuthorizationDocumentResponse;
import org.openapitools.client.model.NumbersV2AuthorizationDocument;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NumbersV2AuthorizationDocumentApi
 */
@Disabled
public class NumbersV2AuthorizationDocumentApiTest {

    private final NumbersV2AuthorizationDocumentApi api = new NumbersV2AuthorizationDocumentApi();

    /**
     * Create an AuthorizationDocument for authorizing the hosting of phone number capabilities on Twilio&#39;s platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAuthorizationDocumentTest() throws ApiException {
        String addressSid = null;
        String contactPhoneNumber = null;
        String email = null;
        List<String> hostedNumberOrderSids = null;
        List<String> ccEmails = null;
        String contactTitle = null;
        NumbersV2AuthorizationDocument response = api.createAuthorizationDocument(addressSid, contactPhoneNumber, email, hostedNumberOrderSids, ccEmails, contactTitle);
        // TODO: test validations
    }

    /**
     * Cancel the AuthorizationDocument request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAuthorizationDocumentTest() throws ApiException {
        String sid = null;
        api.deleteAuthorizationDocument(sid);
        // TODO: test validations
    }

    /**
     * Fetch a specific AuthorizationDocument.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchAuthorizationDocumentTest() throws ApiException {
        String sid = null;
        NumbersV2AuthorizationDocument response = api.fetchAuthorizationDocument(sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of AuthorizationDocuments belonging to the account initiating the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAuthorizationDocumentTest() throws ApiException {
        String email = null;
        AuthorizationDocumentEnumStatus status = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListAuthorizationDocumentResponse response = api.listAuthorizationDocument(email, status, pageSize, page, pageToken);
        // TODO: test validations
    }

}
