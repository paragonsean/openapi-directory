/*
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HostedNumberOrderEnumStatus;
import org.openapitools.client.model.ListHostedNumberOrderResponse;
import org.openapitools.client.model.NumbersV2HostedNumberOrder;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NumbersV2HostedNumberOrderApi
 */
@Disabled
public class NumbersV2HostedNumberOrderApiTest {

    private final NumbersV2HostedNumberOrderApi api = new NumbersV2HostedNumberOrderApi();

    /**
     * Host a phone number&#39;s capability on Twilio&#39;s platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createHostedNumberOrderTest() throws ApiException {
        String addressSid = null;
        String contactPhoneNumber = null;
        String email = null;
        String phoneNumber = null;
        String accountSid = null;
        List<String> ccEmails = null;
        String contactTitle = null;
        String friendlyName = null;
        String smsApplicationSid = null;
        Boolean smsCapability = null;
        String smsFallbackMethod = null;
        URI smsFallbackUrl = null;
        String smsMethod = null;
        URI smsUrl = null;
        String statusCallbackMethod = null;
        URI statusCallbackUrl = null;
        NumbersV2HostedNumberOrder response = api.createHostedNumberOrder(addressSid, contactPhoneNumber, email, phoneNumber, accountSid, ccEmails, contactTitle, friendlyName, smsApplicationSid, smsCapability, smsFallbackMethod, smsFallbackUrl, smsMethod, smsUrl, statusCallbackMethod, statusCallbackUrl);
        // TODO: test validations
    }

    /**
     * Cancel the HostedNumberOrder (only available when the status is in &#x60;received&#x60;).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteHostedNumberOrderTest() throws ApiException {
        String sid = null;
        api.deleteHostedNumberOrder(sid);
        // TODO: test validations
    }

    /**
     * Fetch a specific HostedNumberOrder.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchHostedNumberOrderTest() throws ApiException {
        String sid = null;
        NumbersV2HostedNumberOrder response = api.fetchHostedNumberOrder(sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of HostedNumberOrders belonging to the account initiating the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listHostedNumberOrderTest() throws ApiException {
        HostedNumberOrderEnumStatus status = null;
        Boolean smsCapability = null;
        String phoneNumber = null;
        String incomingPhoneNumberSid = null;
        String friendlyName = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListHostedNumberOrderResponse response = api.listHostedNumberOrder(status, smsCapability, phoneNumber, incomingPhoneNumberSid, friendlyName, pageSize, page, pageToken);
        // TODO: test validations
    }

}
