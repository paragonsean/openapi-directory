/**
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthorizationDocumentEnumStatus from '../model/AuthorizationDocumentEnumStatus';
import ListAuthorizationDocumentResponse from '../model/ListAuthorizationDocumentResponse';
import NumbersV2AuthorizationDocument from '../model/NumbersV2AuthorizationDocument';

/**
* NumbersV2AuthorizationDocument service.
* @module api/NumbersV2AuthorizationDocumentApi
* @version 1.55.0
*/
export default class NumbersV2AuthorizationDocumentApi {

    /**
    * Constructs a new NumbersV2AuthorizationDocumentApi. 
    * @alias module:api/NumbersV2AuthorizationDocumentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createAuthorizationDocument operation.
     * @callback module:api/NumbersV2AuthorizationDocumentApi~createAuthorizationDocumentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumbersV2AuthorizationDocument} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an AuthorizationDocument for authorizing the hosting of phone number capabilities on Twilio's platform.
     * @param {String} addressSid A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.
     * @param {String} contactPhoneNumber The contact phone number of the person authorized to sign the Authorization Document.
     * @param {String} email Email that this AuthorizationDocument will be sent to for signing.
     * @param {Array.<String>} hostedNumberOrderSids A list of HostedNumberOrder sids that this AuthorizationDocument will authorize for hosting phone number capabilities on Twilio's platform.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [ccEmails] Email recipients who will be informed when an Authorization Document has been sent and signed.
     * @param {String} [contactTitle] The title of the person authorized to sign the Authorization Document for this phone number.
     * @param {module:api/NumbersV2AuthorizationDocumentApi~createAuthorizationDocumentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumbersV2AuthorizationDocument}
     */
    createAuthorizationDocument(addressSid, contactPhoneNumber, email, hostedNumberOrderSids, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'addressSid' is set
      if (addressSid === undefined || addressSid === null) {
        throw new Error("Missing the required parameter 'addressSid' when calling createAuthorizationDocument");
      }
      // verify the required parameter 'contactPhoneNumber' is set
      if (contactPhoneNumber === undefined || contactPhoneNumber === null) {
        throw new Error("Missing the required parameter 'contactPhoneNumber' when calling createAuthorizationDocument");
      }
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling createAuthorizationDocument");
      }
      // verify the required parameter 'hostedNumberOrderSids' is set
      if (hostedNumberOrderSids === undefined || hostedNumberOrderSids === null) {
        throw new Error("Missing the required parameter 'hostedNumberOrderSids' when calling createAuthorizationDocument");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'AddressSid': addressSid,
        'CcEmails': this.apiClient.buildCollectionParam(opts['ccEmails'], 'csv'),
        'ContactPhoneNumber': contactPhoneNumber,
        'ContactTitle': opts['contactTitle'],
        'Email': email,
        'HostedNumberOrderSids': this.apiClient.buildCollectionParam(hostedNumberOrderSids, 'csv')
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = NumbersV2AuthorizationDocument;
      let basePaths = ['https://numbers.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/HostedNumber/AuthorizationDocuments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAuthorizationDocument operation.
     * @callback module:api/NumbersV2AuthorizationDocumentApi~deleteAuthorizationDocumentCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel the AuthorizationDocument request.
     * @param {String} sid A 34 character string that uniquely identifies this AuthorizationDocument.
     * @param {module:api/NumbersV2AuthorizationDocumentApi~deleteAuthorizationDocumentCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteAuthorizationDocument(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteAuthorizationDocument");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://numbers.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/HostedNumber/AuthorizationDocuments/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchAuthorizationDocument operation.
     * @callback module:api/NumbersV2AuthorizationDocumentApi~fetchAuthorizationDocumentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumbersV2AuthorizationDocument} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch a specific AuthorizationDocument.
     * @param {String} sid A 34 character string that uniquely identifies this AuthorizationDocument.
     * @param {module:api/NumbersV2AuthorizationDocumentApi~fetchAuthorizationDocumentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumbersV2AuthorizationDocument}
     */
    fetchAuthorizationDocument(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchAuthorizationDocument");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NumbersV2AuthorizationDocument;
      let basePaths = ['https://numbers.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/HostedNumber/AuthorizationDocuments/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listAuthorizationDocument operation.
     * @callback module:api/NumbersV2AuthorizationDocumentApi~listAuthorizationDocumentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAuthorizationDocumentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of AuthorizationDocuments belonging to the account initiating the request.
     * @param {Object} opts Optional parameters
     * @param {String} [email] Email that this AuthorizationDocument will be sent to for signing.
     * @param {module:model/AuthorizationDocumentEnumStatus} [status] Status of an instance resource. It can hold one of the values: 1. opened 2. signing, 3. signed LOA, 4. canceled, 5. failed. See the section entitled [Status Values](https://www.twilio.com/docs/phone-numbers/hosted-numbers/hosted-numbers-api/authorization-document-resource#status-values) for more information on each of these statuses.
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/NumbersV2AuthorizationDocumentApi~listAuthorizationDocumentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAuthorizationDocumentResponse}
     */
    listAuthorizationDocument(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'Email': opts['email'],
        'Status': opts['status'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAuthorizationDocumentResponse;
      let basePaths = ['https://numbers.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/HostedNumber/AuthorizationDocuments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
