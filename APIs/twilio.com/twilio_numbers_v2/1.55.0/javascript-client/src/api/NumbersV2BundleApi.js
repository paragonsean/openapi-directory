/**
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BundleEnumEndUserType from '../model/BundleEnumEndUserType';
import BundleEnumSortBy from '../model/BundleEnumSortBy';
import BundleEnumSortDirection from '../model/BundleEnumSortDirection';
import BundleEnumStatus from '../model/BundleEnumStatus';
import ListBundleResponse from '../model/ListBundleResponse';
import NumbersV2RegulatoryComplianceBundle from '../model/NumbersV2RegulatoryComplianceBundle';

/**
* NumbersV2Bundle service.
* @module api/NumbersV2BundleApi
* @version 1.55.0
*/
export default class NumbersV2BundleApi {

    /**
    * Constructs a new NumbersV2BundleApi. 
    * @alias module:api/NumbersV2BundleApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createBundle operation.
     * @callback module:api/NumbersV2BundleApi~createBundleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumbersV2RegulatoryComplianceBundle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Bundle.
     * @param {String} email The email address that will receive updates when the Bundle resource changes status.
     * @param {String} friendlyName The string that you assigned to describe the resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/BundleEnumEndUserType} [endUserType] 
     * @param {String} [isoCountry] The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the Bundle's phone number country ownership request.
     * @param {String} [numberType] The type of phone number of the Bundle's ownership request. Can be `local`, `mobile`, `national`, or `toll free`.
     * @param {String} [regulationSid] The unique string of a regulation that is associated to the Bundle resource.
     * @param {String} [statusCallback] The URL we call to inform your application of status changes.
     * @param {module:api/NumbersV2BundleApi~createBundleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumbersV2RegulatoryComplianceBundle}
     */
    createBundle(email, friendlyName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling createBundle");
      }
      // verify the required parameter 'friendlyName' is set
      if (friendlyName === undefined || friendlyName === null) {
        throw new Error("Missing the required parameter 'friendlyName' when calling createBundle");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Email': email,
        'EndUserType': opts['endUserType'],
        'FriendlyName': friendlyName,
        'IsoCountry': opts['isoCountry'],
        'NumberType': opts['numberType'],
        'RegulationSid': opts['regulationSid'],
        'StatusCallback': opts['statusCallback']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = NumbersV2RegulatoryComplianceBundle;
      let basePaths = ['https://numbers.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/RegulatoryCompliance/Bundles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteBundle operation.
     * @callback module:api/NumbersV2BundleApi~deleteBundleCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a specific Bundle.
     * @param {String} sid The unique string that we created to identify the Bundle resource.
     * @param {module:api/NumbersV2BundleApi~deleteBundleCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteBundle(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteBundle");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://numbers.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/RegulatoryCompliance/Bundles/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchBundle operation.
     * @callback module:api/NumbersV2BundleApi~fetchBundleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumbersV2RegulatoryComplianceBundle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch a specific Bundle instance.
     * @param {String} sid The unique string that we created to identify the Bundle resource.
     * @param {module:api/NumbersV2BundleApi~fetchBundleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumbersV2RegulatoryComplianceBundle}
     */
    fetchBundle(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchBundle");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NumbersV2RegulatoryComplianceBundle;
      let basePaths = ['https://numbers.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/RegulatoryCompliance/Bundles/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listBundle operation.
     * @callback module:api/NumbersV2BundleApi~listBundleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListBundleResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of all Bundles for an account.
     * @param {Object} opts Optional parameters
     * @param {module:model/BundleEnumStatus} [status] The verification status of the Bundle resource. Please refer to [Bundle Statuses](https://www.twilio.com/docs/phone-numbers/regulatory/api/bundles#bundle-statuses) for more details.
     * @param {String} [friendlyName] The string that you assigned to describe the resource. The column can contain 255 variable characters.
     * @param {String} [regulationSid] The unique string of a [Regulation resource](https://www.twilio.com/docs/phone-numbers/regulatory/api/regulations) that is associated to the Bundle resource.
     * @param {String} [isoCountry] The 2-digit [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the Bundle's phone number country ownership request.
     * @param {String} [numberType] The type of phone number of the Bundle's ownership request. Can be `local`, `mobile`, `national`, or `tollfree`.
     * @param {Boolean} [hasValidUntilDate] Indicates that the Bundle is a valid Bundle until a specified expiration date.
     * @param {module:model/BundleEnumSortBy} [sortBy] Can be `valid-until` or `date-updated`. Defaults to `date-created`.
     * @param {module:model/BundleEnumSortDirection} [sortDirection] Default is `DESC`. Can be `ASC` or `DESC`.
     * @param {Date} [validUntilDate] Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format.
     * @param {Date} [validUntilDate2] Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format.
     * @param {Date} [validUntilDate3] Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format.
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/NumbersV2BundleApi~listBundleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListBundleResponse}
     */
    listBundle(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'Status': opts['status'],
        'FriendlyName': opts['friendlyName'],
        'RegulationSid': opts['regulationSid'],
        'IsoCountry': opts['isoCountry'],
        'NumberType': opts['numberType'],
        'HasValidUntilDate': opts['hasValidUntilDate'],
        'SortBy': opts['sortBy'],
        'SortDirection': opts['sortDirection'],
        'ValidUntilDate': opts['validUntilDate'],
        'ValidUntilDate&lt;': opts['validUntilDate2'],
        'ValidUntilDate&gt;': opts['validUntilDate3'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListBundleResponse;
      let basePaths = ['https://numbers.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/RegulatoryCompliance/Bundles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateBundle operation.
     * @callback module:api/NumbersV2BundleApi~updateBundleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumbersV2RegulatoryComplianceBundle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Bundle in an account.
     * @param {String} sid The unique string that we created to identify the Bundle resource.
     * @param {Object} opts Optional parameters
     * @param {String} [email] The email address that will receive updates when the Bundle resource changes status.
     * @param {String} [friendlyName] The string that you assigned to describe the resource.
     * @param {module:model/BundleEnumStatus} [status] 
     * @param {String} [statusCallback] The URL we call to inform your application of status changes.
     * @param {module:api/NumbersV2BundleApi~updateBundleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumbersV2RegulatoryComplianceBundle}
     */
    updateBundle(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateBundle");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Email': opts['email'],
        'FriendlyName': opts['friendlyName'],
        'Status': opts['status'],
        'StatusCallback': opts['statusCallback']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = NumbersV2RegulatoryComplianceBundle;
      let basePaths = ['https://numbers.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/RegulatoryCompliance/Bundles/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
