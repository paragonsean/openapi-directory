# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bulk_hosted_number_order_enum_request_status import BulkHostedNumberOrderEnumRequestStatus
import re
from openapi_server import util


class NumbersV2BulkHostedNumberOrder(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bulk_hosting_sid: str=None, date_completed: datetime=None, date_created: datetime=None, friendly_name: str=None, notification_email: str=None, request_status: BulkHostedNumberOrderEnumRequestStatus=None, results: List[object]=None, total_count: int=None, url: str=None):
        """NumbersV2BulkHostedNumberOrder - a model defined in OpenAPI

        :param bulk_hosting_sid: The bulk_hosting_sid of this NumbersV2BulkHostedNumberOrder.
        :param date_completed: The date_completed of this NumbersV2BulkHostedNumberOrder.
        :param date_created: The date_created of this NumbersV2BulkHostedNumberOrder.
        :param friendly_name: The friendly_name of this NumbersV2BulkHostedNumberOrder.
        :param notification_email: The notification_email of this NumbersV2BulkHostedNumberOrder.
        :param request_status: The request_status of this NumbersV2BulkHostedNumberOrder.
        :param results: The results of this NumbersV2BulkHostedNumberOrder.
        :param total_count: The total_count of this NumbersV2BulkHostedNumberOrder.
        :param url: The url of this NumbersV2BulkHostedNumberOrder.
        """
        self.openapi_types = {
            'bulk_hosting_sid': str,
            'date_completed': datetime,
            'date_created': datetime,
            'friendly_name': str,
            'notification_email': str,
            'request_status': BulkHostedNumberOrderEnumRequestStatus,
            'results': List[object],
            'total_count': int,
            'url': str
        }

        self.attribute_map = {
            'bulk_hosting_sid': 'bulk_hosting_sid',
            'date_completed': 'date_completed',
            'date_created': 'date_created',
            'friendly_name': 'friendly_name',
            'notification_email': 'notification_email',
            'request_status': 'request_status',
            'results': 'results',
            'total_count': 'total_count',
            'url': 'url'
        }

        self._bulk_hosting_sid = bulk_hosting_sid
        self._date_completed = date_completed
        self._date_created = date_created
        self._friendly_name = friendly_name
        self._notification_email = notification_email
        self._request_status = request_status
        self._results = results
        self._total_count = total_count
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NumbersV2BulkHostedNumberOrder':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The numbers.v2.bulk_hosted_number_order of this NumbersV2BulkHostedNumberOrder.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bulk_hosting_sid(self):
        """Gets the bulk_hosting_sid of this NumbersV2BulkHostedNumberOrder.

        A 34 character string that uniquely identifies this BulkHostedNumberOrder.

        :return: The bulk_hosting_sid of this NumbersV2BulkHostedNumberOrder.
        :rtype: str
        """
        return self._bulk_hosting_sid

    @bulk_hosting_sid.setter
    def bulk_hosting_sid(self, bulk_hosting_sid):
        """Sets the bulk_hosting_sid of this NumbersV2BulkHostedNumberOrder.

        A 34 character string that uniquely identifies this BulkHostedNumberOrder.

        :param bulk_hosting_sid: The bulk_hosting_sid of this NumbersV2BulkHostedNumberOrder.
        :type bulk_hosting_sid: str
        """
        if bulk_hosting_sid is not None and len(bulk_hosting_sid) > 34:
            raise ValueError("Invalid value for `bulk_hosting_sid`, length must be less than or equal to `34`")
        if bulk_hosting_sid is not None and len(bulk_hosting_sid) < 34:
            raise ValueError("Invalid value for `bulk_hosting_sid`, length must be greater than or equal to `34`")
        if bulk_hosting_sid is not None and not re.search(r'^BH[0-9a-fA-F]{32}$', bulk_hosting_sid):
            raise ValueError("Invalid value for `bulk_hosting_sid`, must be a follow pattern or equal to `/^BH[0-9a-fA-F]{32}$/`")

        self._bulk_hosting_sid = bulk_hosting_sid

    @property
    def date_completed(self):
        """Gets the date_completed of this NumbersV2BulkHostedNumberOrder.

        The date that this resource was completed, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_completed of this NumbersV2BulkHostedNumberOrder.
        :rtype: datetime
        """
        return self._date_completed

    @date_completed.setter
    def date_completed(self, date_completed):
        """Sets the date_completed of this NumbersV2BulkHostedNumberOrder.

        The date that this resource was completed, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_completed: The date_completed of this NumbersV2BulkHostedNumberOrder.
        :type date_completed: datetime
        """

        self._date_completed = date_completed

    @property
    def date_created(self):
        """Gets the date_created of this NumbersV2BulkHostedNumberOrder.

        The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this NumbersV2BulkHostedNumberOrder.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this NumbersV2BulkHostedNumberOrder.

        The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this NumbersV2BulkHostedNumberOrder.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def friendly_name(self):
        """Gets the friendly_name of this NumbersV2BulkHostedNumberOrder.

        A 128 character string that is a human-readable text that describes this resource.

        :return: The friendly_name of this NumbersV2BulkHostedNumberOrder.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this NumbersV2BulkHostedNumberOrder.

        A 128 character string that is a human-readable text that describes this resource.

        :param friendly_name: The friendly_name of this NumbersV2BulkHostedNumberOrder.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def notification_email(self):
        """Gets the notification_email of this NumbersV2BulkHostedNumberOrder.

        Email address used for send notifications about this Bulk hosted number request.

        :return: The notification_email of this NumbersV2BulkHostedNumberOrder.
        :rtype: str
        """
        return self._notification_email

    @notification_email.setter
    def notification_email(self, notification_email):
        """Sets the notification_email of this NumbersV2BulkHostedNumberOrder.

        Email address used for send notifications about this Bulk hosted number request.

        :param notification_email: The notification_email of this NumbersV2BulkHostedNumberOrder.
        :type notification_email: str
        """

        self._notification_email = notification_email

    @property
    def request_status(self):
        """Gets the request_status of this NumbersV2BulkHostedNumberOrder.


        :return: The request_status of this NumbersV2BulkHostedNumberOrder.
        :rtype: BulkHostedNumberOrderEnumRequestStatus
        """
        return self._request_status

    @request_status.setter
    def request_status(self, request_status):
        """Sets the request_status of this NumbersV2BulkHostedNumberOrder.


        :param request_status: The request_status of this NumbersV2BulkHostedNumberOrder.
        :type request_status: BulkHostedNumberOrderEnumRequestStatus
        """

        self._request_status = request_status

    @property
    def results(self):
        """Gets the results of this NumbersV2BulkHostedNumberOrder.

        Contains a list of all the individual hosting orders and their information, for this Bulk request. Each result object is grouped by its order status. To see a complete list of order status, please check 'https://www.twilio.com/docs/phone-numbers/hosted-numbers/hosted-numbers-api/hosted-number-order-resource#status-values'.

        :return: The results of this NumbersV2BulkHostedNumberOrder.
        :rtype: List[object]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this NumbersV2BulkHostedNumberOrder.

        Contains a list of all the individual hosting orders and their information, for this Bulk request. Each result object is grouped by its order status. To see a complete list of order status, please check 'https://www.twilio.com/docs/phone-numbers/hosted-numbers/hosted-numbers-api/hosted-number-order-resource#status-values'.

        :param results: The results of this NumbersV2BulkHostedNumberOrder.
        :type results: List[object]
        """

        self._results = results

    @property
    def total_count(self):
        """Gets the total_count of this NumbersV2BulkHostedNumberOrder.

        The total count of phone numbers in this Bulk hosting request.

        :return: The total_count of this NumbersV2BulkHostedNumberOrder.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this NumbersV2BulkHostedNumberOrder.

        The total count of phone numbers in this Bulk hosting request.

        :param total_count: The total_count of this NumbersV2BulkHostedNumberOrder.
        :type total_count: int
        """

        self._total_count = total_count

    @property
    def url(self):
        """Gets the url of this NumbersV2BulkHostedNumberOrder.

        The URL of this BulkHostedNumberOrder resource.

        :return: The url of this NumbersV2BulkHostedNumberOrder.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this NumbersV2BulkHostedNumberOrder.

        The URL of this BulkHostedNumberOrder resource.

        :param url: The url of this NumbersV2BulkHostedNumberOrder.
        :type url: str
        """

        self._url = url
