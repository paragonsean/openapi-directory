# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dependent_hosted_number_order_enum_status import DependentHostedNumberOrderEnumStatus
from openapi_server.models.numbers_v2_authorization_document_dependent_hosted_number_order_capabilities import NumbersV2AuthorizationDocumentDependentHostedNumberOrderCapabilities
import re
from openapi_server import util


class NumbersV2AuthorizationDocumentDependentHostedNumberOrder(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, address_sid: str=None, bulk_hosting_request_sid: str=None, capabilities: NumbersV2AuthorizationDocumentDependentHostedNumberOrderCapabilities=None, cc_emails: List[str]=None, contact_phone_number: str=None, contact_title: str=None, date_created: datetime=None, date_updated: datetime=None, email: str=None, failure_reason: str=None, friendly_name: str=None, incoming_phone_number_sid: str=None, next_step: str=None, phone_number: str=None, sid: str=None, signing_document_sid: str=None, status: DependentHostedNumberOrderEnumStatus=None):
        """NumbersV2AuthorizationDocumentDependentHostedNumberOrder - a model defined in OpenAPI

        :param account_sid: The account_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param address_sid: The address_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param bulk_hosting_request_sid: The bulk_hosting_request_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param capabilities: The capabilities of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param cc_emails: The cc_emails of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param contact_phone_number: The contact_phone_number of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param contact_title: The contact_title of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param date_created: The date_created of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param date_updated: The date_updated of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param email: The email of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param failure_reason: The failure_reason of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param friendly_name: The friendly_name of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param incoming_phone_number_sid: The incoming_phone_number_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param next_step: The next_step of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param phone_number: The phone_number of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param sid: The sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param signing_document_sid: The signing_document_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :param status: The status of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        """
        self.openapi_types = {
            'account_sid': str,
            'address_sid': str,
            'bulk_hosting_request_sid': str,
            'capabilities': NumbersV2AuthorizationDocumentDependentHostedNumberOrderCapabilities,
            'cc_emails': List[str],
            'contact_phone_number': str,
            'contact_title': str,
            'date_created': datetime,
            'date_updated': datetime,
            'email': str,
            'failure_reason': str,
            'friendly_name': str,
            'incoming_phone_number_sid': str,
            'next_step': str,
            'phone_number': str,
            'sid': str,
            'signing_document_sid': str,
            'status': DependentHostedNumberOrderEnumStatus
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'address_sid': 'address_sid',
            'bulk_hosting_request_sid': 'bulk_hosting_request_sid',
            'capabilities': 'capabilities',
            'cc_emails': 'cc_emails',
            'contact_phone_number': 'contact_phone_number',
            'contact_title': 'contact_title',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'email': 'email',
            'failure_reason': 'failure_reason',
            'friendly_name': 'friendly_name',
            'incoming_phone_number_sid': 'incoming_phone_number_sid',
            'next_step': 'next_step',
            'phone_number': 'phone_number',
            'sid': 'sid',
            'signing_document_sid': 'signing_document_sid',
            'status': 'status'
        }

        self._account_sid = account_sid
        self._address_sid = address_sid
        self._bulk_hosting_request_sid = bulk_hosting_request_sid
        self._capabilities = capabilities
        self._cc_emails = cc_emails
        self._contact_phone_number = contact_phone_number
        self._contact_title = contact_title
        self._date_created = date_created
        self._date_updated = date_updated
        self._email = email
        self._failure_reason = failure_reason
        self._friendly_name = friendly_name
        self._incoming_phone_number_sid = incoming_phone_number_sid
        self._next_step = next_step
        self._phone_number = phone_number
        self._sid = sid
        self._signing_document_sid = signing_document_sid
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NumbersV2AuthorizationDocumentDependentHostedNumberOrder':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The numbers.v2.authorization_document.dependent_hosted_number_order of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        The unique SID identifier of the Account.

        :return: The account_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        The unique SID identifier of the Account.

        :param account_sid: The account_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def address_sid(self):
        """Gets the address_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A 34 character string that uniquely identifies the Address resource that represents the address of the owner of this phone number.

        :return: The address_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._address_sid

    @address_sid.setter
    def address_sid(self, address_sid):
        """Sets the address_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A 34 character string that uniquely identifies the Address resource that represents the address of the owner of this phone number.

        :param address_sid: The address_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type address_sid: str
        """
        if address_sid is not None and len(address_sid) > 34:
            raise ValueError("Invalid value for `address_sid`, length must be less than or equal to `34`")
        if address_sid is not None and len(address_sid) < 34:
            raise ValueError("Invalid value for `address_sid`, length must be greater than or equal to `34`")
        if address_sid is not None and not re.search(r'^AD[0-9a-fA-F]{32}$', address_sid):
            raise ValueError("Invalid value for `address_sid`, must be a follow pattern or equal to `/^AD[0-9a-fA-F]{32}$/`")

        self._address_sid = address_sid

    @property
    def bulk_hosting_request_sid(self):
        """Gets the bulk_hosting_request_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A 34 character string that uniquely identifies the bulk hosting request associated with this HostedNumberOrder.

        :return: The bulk_hosting_request_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._bulk_hosting_request_sid

    @bulk_hosting_request_sid.setter
    def bulk_hosting_request_sid(self, bulk_hosting_request_sid):
        """Sets the bulk_hosting_request_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A 34 character string that uniquely identifies the bulk hosting request associated with this HostedNumberOrder.

        :param bulk_hosting_request_sid: The bulk_hosting_request_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type bulk_hosting_request_sid: str
        """
        if bulk_hosting_request_sid is not None and len(bulk_hosting_request_sid) > 34:
            raise ValueError("Invalid value for `bulk_hosting_request_sid`, length must be less than or equal to `34`")
        if bulk_hosting_request_sid is not None and len(bulk_hosting_request_sid) < 34:
            raise ValueError("Invalid value for `bulk_hosting_request_sid`, length must be greater than or equal to `34`")
        if bulk_hosting_request_sid is not None and not re.search(r'^BH[0-9a-fA-F]{32}$', bulk_hosting_request_sid):
            raise ValueError("Invalid value for `bulk_hosting_request_sid`, must be a follow pattern or equal to `/^BH[0-9a-fA-F]{32}$/`")

        self._bulk_hosting_request_sid = bulk_hosting_request_sid

    @property
    def capabilities(self):
        """Gets the capabilities of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.


        :return: The capabilities of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: NumbersV2AuthorizationDocumentDependentHostedNumberOrderCapabilities
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.


        :param capabilities: The capabilities of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type capabilities: NumbersV2AuthorizationDocumentDependentHostedNumberOrderCapabilities
        """

        self._capabilities = capabilities

    @property
    def cc_emails(self):
        """Gets the cc_emails of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        Email recipients who will be informed when an Authorization Document has been sent and signed

        :return: The cc_emails of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: List[str]
        """
        return self._cc_emails

    @cc_emails.setter
    def cc_emails(self, cc_emails):
        """Sets the cc_emails of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        Email recipients who will be informed when an Authorization Document has been sent and signed

        :param cc_emails: The cc_emails of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type cc_emails: List[str]
        """

        self._cc_emails = cc_emails

    @property
    def contact_phone_number(self):
        """Gets the contact_phone_number of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        The contact phone number of the person authorized to sign the Authorization Document.

        :return: The contact_phone_number of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._contact_phone_number

    @contact_phone_number.setter
    def contact_phone_number(self, contact_phone_number):
        """Sets the contact_phone_number of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        The contact phone number of the person authorized to sign the Authorization Document.

        :param contact_phone_number: The contact_phone_number of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type contact_phone_number: str
        """

        self._contact_phone_number = contact_phone_number

    @property
    def contact_title(self):
        """Gets the contact_title of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        The title of the person authorized to sign the Authorization Document for this phone number.

        :return: The contact_title of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._contact_title

    @contact_title.setter
    def contact_title(self, contact_title):
        """Sets the contact_title of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        The title of the person authorized to sign the Authorization Document for this phone number.

        :param contact_title: The contact_title of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type contact_title: str
        """

        self._contact_title = contact_title

    @property
    def date_created(self):
        """Gets the date_created of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        The date that this resource was updated, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        The date that this resource was updated, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def email(self):
        """Gets the email of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        Email of the owner of this phone number that is being hosted.

        :return: The email of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        Email of the owner of this phone number that is being hosted.

        :param email: The email of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type email: str
        """

        self._email = email

    @property
    def failure_reason(self):
        """Gets the failure_reason of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A message that explains why a hosted_number_order went to status \"action-required\"

        :return: The failure_reason of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A message that explains why a hosted_number_order went to status \"action-required\"

        :param failure_reason: The failure_reason of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type failure_reason: str
        """

        self._failure_reason = failure_reason

    @property
    def friendly_name(self):
        """Gets the friendly_name of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A human readable description of this resource, up to 128 characters.

        :return: The friendly_name of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A human readable description of this resource, up to 128 characters.

        :param friendly_name: The friendly_name of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def incoming_phone_number_sid(self):
        """Gets the incoming_phone_number_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A 34 character string that uniquely identifies the IncomingPhoneNumber resource created by this HostedNumberOrder.

        :return: The incoming_phone_number_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._incoming_phone_number_sid

    @incoming_phone_number_sid.setter
    def incoming_phone_number_sid(self, incoming_phone_number_sid):
        """Sets the incoming_phone_number_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A 34 character string that uniquely identifies the IncomingPhoneNumber resource created by this HostedNumberOrder.

        :param incoming_phone_number_sid: The incoming_phone_number_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type incoming_phone_number_sid: str
        """
        if incoming_phone_number_sid is not None and len(incoming_phone_number_sid) > 34:
            raise ValueError("Invalid value for `incoming_phone_number_sid`, length must be less than or equal to `34`")
        if incoming_phone_number_sid is not None and len(incoming_phone_number_sid) < 34:
            raise ValueError("Invalid value for `incoming_phone_number_sid`, length must be greater than or equal to `34`")
        if incoming_phone_number_sid is not None and not re.search(r'^PN[0-9a-fA-F]{32}$', incoming_phone_number_sid):
            raise ValueError("Invalid value for `incoming_phone_number_sid`, must be a follow pattern or equal to `/^PN[0-9a-fA-F]{32}$/`")

        self._incoming_phone_number_sid = incoming_phone_number_sid

    @property
    def next_step(self):
        """Gets the next_step of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        The next step you need to take to complete the hosted number order and request it successfully.

        :return: The next_step of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._next_step

    @next_step.setter
    def next_step(self, next_step):
        """Sets the next_step of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        The next step you need to take to complete the hosted number order and request it successfully.

        :param next_step: The next_step of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type next_step: str
        """

        self._next_step = next_step

    @property
    def phone_number(self):
        """Gets the phone_number of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        An E164 formatted phone number hosted by this HostedNumberOrder.

        :return: The phone_number of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        An E164 formatted phone number hosted by this HostedNumberOrder.

        :param phone_number: The phone_number of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def sid(self):
        """Gets the sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A 34 character string that uniquely identifies this Authorization Document

        :return: The sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A 34 character string that uniquely identifies this Authorization Document

        :param sid: The sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^HR[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^HR[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def signing_document_sid(self):
        """Gets the signing_document_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A 34 character string that uniquely identifies the LOA document associated with this HostedNumberOrder.

        :return: The signing_document_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: str
        """
        return self._signing_document_sid

    @signing_document_sid.setter
    def signing_document_sid(self, signing_document_sid):
        """Sets the signing_document_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.

        A 34 character string that uniquely identifies the LOA document associated with this HostedNumberOrder.

        :param signing_document_sid: The signing_document_sid of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type signing_document_sid: str
        """
        if signing_document_sid is not None and len(signing_document_sid) > 34:
            raise ValueError("Invalid value for `signing_document_sid`, length must be less than or equal to `34`")
        if signing_document_sid is not None and len(signing_document_sid) < 34:
            raise ValueError("Invalid value for `signing_document_sid`, length must be greater than or equal to `34`")
        if signing_document_sid is not None and not re.search(r'^PX[0-9a-fA-F]{32}$', signing_document_sid):
            raise ValueError("Invalid value for `signing_document_sid`, must be a follow pattern or equal to `/^PX[0-9a-fA-F]{32}$/`")

        self._signing_document_sid = signing_document_sid

    @property
    def status(self):
        """Gets the status of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.


        :return: The status of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :rtype: DependentHostedNumberOrderEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.


        :param status: The status of this NumbersV2AuthorizationDocumentDependentHostedNumberOrder.
        :type status: DependentHostedNumberOrderEnumStatus
        """

        self._status = status
