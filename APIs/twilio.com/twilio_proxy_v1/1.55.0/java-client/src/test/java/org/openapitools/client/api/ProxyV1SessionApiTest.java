/*
 * Twilio - Proxy
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListSessionResponse;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ProxyV1ServiceSession;
import org.openapitools.client.model.SessionEnumMode;
import org.openapitools.client.model.SessionEnumStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProxyV1SessionApi
 */
@Disabled
public class ProxyV1SessionApiTest {

    private final ProxyV1SessionApi api = new ProxyV1SessionApi();

    /**
     * Create a new Session
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSessionTest() throws ApiException {
        String serviceSid = null;
        OffsetDateTime dateExpiry = null;
        SessionEnumMode mode = null;
        List<Object> participants = null;
        SessionEnumStatus status = null;
        Integer ttl = null;
        String uniqueName = null;
        ProxyV1ServiceSession response = api.createSession(serviceSid, dateExpiry, mode, participants, status, ttl, uniqueName);
        // TODO: test validations
    }

    /**
     * Delete a specific Session.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSessionTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        api.deleteSession(serviceSid, sid);
        // TODO: test validations
    }

    /**
     * Fetch a specific Session.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchSessionTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        ProxyV1ServiceSession response = api.fetchSession(serviceSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all Sessions for the Service. A maximum of 100 records will be returned per page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSessionTest() throws ApiException {
        String serviceSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListSessionResponse response = api.listSession(serviceSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update a specific Session.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSessionTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        OffsetDateTime dateExpiry = null;
        SessionEnumStatus status = null;
        Integer ttl = null;
        ProxyV1ServiceSession response = api.updateSession(serviceSid, sid, dateExpiry, status, ttl);
        // TODO: test validations
    }

}
