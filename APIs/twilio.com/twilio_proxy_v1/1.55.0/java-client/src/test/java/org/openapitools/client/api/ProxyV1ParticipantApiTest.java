/*
 * Twilio - Proxy
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListParticipantResponse;
import org.openapitools.client.model.ProxyV1ServiceSessionParticipant;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProxyV1ParticipantApi
 */
@Disabled
public class ProxyV1ParticipantApiTest {

    private final ProxyV1ParticipantApi api = new ProxyV1ParticipantApi();

    /**
     * Add a new Participant to the Session
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createParticipantTest() throws ApiException {
        String serviceSid = null;
        String sessionSid = null;
        String identifier = null;
        String friendlyName = null;
        String proxyIdentifier = null;
        String proxyIdentifierSid = null;
        ProxyV1ServiceSessionParticipant response = api.createParticipant(serviceSid, sessionSid, identifier, friendlyName, proxyIdentifier, proxyIdentifierSid);
        // TODO: test validations
    }

    /**
     * Delete a specific Participant. This is a soft-delete. The participant remains associated with the session and cannot be re-added. Participants are only permanently deleted when the [Session](https://www.twilio.com/docs/proxy/api/session) is deleted.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteParticipantTest() throws ApiException {
        String serviceSid = null;
        String sessionSid = null;
        String sid = null;
        api.deleteParticipant(serviceSid, sessionSid, sid);
        // TODO: test validations
    }

    /**
     * Fetch a specific Participant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchParticipantTest() throws ApiException {
        String serviceSid = null;
        String sessionSid = null;
        String sid = null;
        ProxyV1ServiceSessionParticipant response = api.fetchParticipant(serviceSid, sessionSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all Participants in a Session.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listParticipantTest() throws ApiException {
        String serviceSid = null;
        String sessionSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListParticipantResponse response = api.listParticipant(serviceSid, sessionSid, pageSize, page, pageToken);
        // TODO: test validations
    }

}
