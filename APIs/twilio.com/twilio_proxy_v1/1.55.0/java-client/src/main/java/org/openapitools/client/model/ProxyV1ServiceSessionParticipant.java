/*
 * Twilio - Proxy
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProxyV1ServiceSessionParticipant
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:15.956900-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProxyV1ServiceSessionParticipant {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_DELETED = "date_deleted";
  @SerializedName(SERIALIZED_NAME_DATE_DELETED)
  private OffsetDateTime dateDeleted;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_IDENTIFIER = "identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_PROXY_IDENTIFIER = "proxy_identifier";
  @SerializedName(SERIALIZED_NAME_PROXY_IDENTIFIER)
  private String proxyIdentifier;

  public static final String SERIALIZED_NAME_PROXY_IDENTIFIER_SID = "proxy_identifier_sid";
  @SerializedName(SERIALIZED_NAME_PROXY_IDENTIFIER_SID)
  private String proxyIdentifierSid;

  public static final String SERIALIZED_NAME_SERVICE_SID = "service_sid";
  @SerializedName(SERIALIZED_NAME_SERVICE_SID)
  private String serviceSid;

  public static final String SERIALIZED_NAME_SESSION_SID = "session_sid";
  @SerializedName(SERIALIZED_NAME_SESSION_SID)
  private String sessionSid;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public ProxyV1ServiceSessionParticipant() {
  }

  public ProxyV1ServiceSessionParticipant accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public ProxyV1ServiceSessionParticipant dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was created.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ProxyV1ServiceSessionParticipant dateDeleted(OffsetDateTime dateDeleted) {
    this.dateDeleted = dateDeleted;
    return this;
  }

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date when the Participant was removed from the session.
   * @return dateDeleted
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateDeleted() {
    return dateDeleted;
  }

  public void setDateDeleted(OffsetDateTime dateDeleted) {
    this.dateDeleted = dateDeleted;
  }


  public ProxyV1ServiceSessionParticipant dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was last updated.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public ProxyV1ServiceSessionParticipant friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The string that you assigned to describe the participant. This value must be 255 characters or fewer. Supports UTF-8 characters. **This value should not have PII.**
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public ProxyV1ServiceSessionParticipant identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * The phone number or channel identifier of the Participant. This value must be 191 characters or fewer. Supports UTF-8 characters.
   * @return identifier
   */
  @javax.annotation.Nullable
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public ProxyV1ServiceSessionParticipant links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * The URLs to resources related the participant.
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public ProxyV1ServiceSessionParticipant proxyIdentifier(String proxyIdentifier) {
    this.proxyIdentifier = proxyIdentifier;
    return this;
  }

  /**
   * The phone number or short code (masked number) of the participant&#39;s partner. The participant will call or message the partner participant at this number.
   * @return proxyIdentifier
   */
  @javax.annotation.Nullable
  public String getProxyIdentifier() {
    return proxyIdentifier;
  }

  public void setProxyIdentifier(String proxyIdentifier) {
    this.proxyIdentifier = proxyIdentifier;
  }


  public ProxyV1ServiceSessionParticipant proxyIdentifierSid(String proxyIdentifierSid) {
    this.proxyIdentifierSid = proxyIdentifierSid;
    return this;
  }

  /**
   * The SID of the Proxy Identifier assigned to the Participant.
   * @return proxyIdentifierSid
   */
  @javax.annotation.Nullable
  public String getProxyIdentifierSid() {
    return proxyIdentifierSid;
  }

  public void setProxyIdentifierSid(String proxyIdentifierSid) {
    this.proxyIdentifierSid = proxyIdentifierSid;
  }


  public ProxyV1ServiceSessionParticipant serviceSid(String serviceSid) {
    this.serviceSid = serviceSid;
    return this;
  }

  /**
   * The SID of the resource&#39;s parent [Service](https://www.twilio.com/docs/proxy/api/service) resource.
   * @return serviceSid
   */
  @javax.annotation.Nullable
  public String getServiceSid() {
    return serviceSid;
  }

  public void setServiceSid(String serviceSid) {
    this.serviceSid = serviceSid;
  }


  public ProxyV1ServiceSessionParticipant sessionSid(String sessionSid) {
    this.sessionSid = sessionSid;
    return this;
  }

  /**
   * The SID of the parent [Session](https://www.twilio.com/docs/proxy/api/session) resource.
   * @return sessionSid
   */
  @javax.annotation.Nullable
  public String getSessionSid() {
    return sessionSid;
  }

  public void setSessionSid(String sessionSid) {
    this.sessionSid = sessionSid;
  }


  public ProxyV1ServiceSessionParticipant sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Participant resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public ProxyV1ServiceSessionParticipant url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Participant resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProxyV1ServiceSessionParticipant proxyV1ServiceSessionParticipant = (ProxyV1ServiceSessionParticipant) o;
    return Objects.equals(this.accountSid, proxyV1ServiceSessionParticipant.accountSid) &&
        Objects.equals(this.dateCreated, proxyV1ServiceSessionParticipant.dateCreated) &&
        Objects.equals(this.dateDeleted, proxyV1ServiceSessionParticipant.dateDeleted) &&
        Objects.equals(this.dateUpdated, proxyV1ServiceSessionParticipant.dateUpdated) &&
        Objects.equals(this.friendlyName, proxyV1ServiceSessionParticipant.friendlyName) &&
        Objects.equals(this.identifier, proxyV1ServiceSessionParticipant.identifier) &&
        Objects.equals(this.links, proxyV1ServiceSessionParticipant.links) &&
        Objects.equals(this.proxyIdentifier, proxyV1ServiceSessionParticipant.proxyIdentifier) &&
        Objects.equals(this.proxyIdentifierSid, proxyV1ServiceSessionParticipant.proxyIdentifierSid) &&
        Objects.equals(this.serviceSid, proxyV1ServiceSessionParticipant.serviceSid) &&
        Objects.equals(this.sessionSid, proxyV1ServiceSessionParticipant.sessionSid) &&
        Objects.equals(this.sid, proxyV1ServiceSessionParticipant.sid) &&
        Objects.equals(this.url, proxyV1ServiceSessionParticipant.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, dateCreated, dateDeleted, dateUpdated, friendlyName, identifier, links, proxyIdentifier, proxyIdentifierSid, serviceSid, sessionSid, sid, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProxyV1ServiceSessionParticipant {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateDeleted: ").append(toIndentedString(dateDeleted)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    proxyIdentifier: ").append(toIndentedString(proxyIdentifier)).append("\n");
    sb.append("    proxyIdentifierSid: ").append(toIndentedString(proxyIdentifierSid)).append("\n");
    sb.append("    serviceSid: ").append(toIndentedString(serviceSid)).append("\n");
    sb.append("    sessionSid: ").append(toIndentedString(sessionSid)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("date_created");
    openapiFields.add("date_deleted");
    openapiFields.add("date_updated");
    openapiFields.add("friendly_name");
    openapiFields.add("identifier");
    openapiFields.add("links");
    openapiFields.add("proxy_identifier");
    openapiFields.add("proxy_identifier_sid");
    openapiFields.add("service_sid");
    openapiFields.add("session_sid");
    openapiFields.add("sid");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProxyV1ServiceSessionParticipant
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProxyV1ServiceSessionParticipant.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProxyV1ServiceSessionParticipant is not found in the empty JSON string", ProxyV1ServiceSessionParticipant.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProxyV1ServiceSessionParticipant.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProxyV1ServiceSessionParticipant` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("identifier") != null && !jsonObj.get("identifier").isJsonNull()) && !jsonObj.get("identifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identifier").toString()));
      }
      if ((jsonObj.get("proxy_identifier") != null && !jsonObj.get("proxy_identifier").isJsonNull()) && !jsonObj.get("proxy_identifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proxy_identifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proxy_identifier").toString()));
      }
      if ((jsonObj.get("proxy_identifier_sid") != null && !jsonObj.get("proxy_identifier_sid").isJsonNull()) && !jsonObj.get("proxy_identifier_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proxy_identifier_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proxy_identifier_sid").toString()));
      }
      if ((jsonObj.get("service_sid") != null && !jsonObj.get("service_sid").isJsonNull()) && !jsonObj.get("service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_sid").toString()));
      }
      if ((jsonObj.get("session_sid") != null && !jsonObj.get("session_sid").isJsonNull()) && !jsonObj.get("session_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `session_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("session_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProxyV1ServiceSessionParticipant.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProxyV1ServiceSessionParticipant' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProxyV1ServiceSessionParticipant> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProxyV1ServiceSessionParticipant.class));

       return (TypeAdapter<T>) new TypeAdapter<ProxyV1ServiceSessionParticipant>() {
           @Override
           public void write(JsonWriter out, ProxyV1ServiceSessionParticipant value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProxyV1ServiceSessionParticipant read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProxyV1ServiceSessionParticipant given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProxyV1ServiceSessionParticipant
   * @throws IOException if the JSON string is invalid with respect to ProxyV1ServiceSessionParticipant
   */
  public static ProxyV1ServiceSessionParticipant fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProxyV1ServiceSessionParticipant.class);
  }

  /**
   * Convert an instance of ProxyV1ServiceSessionParticipant to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

