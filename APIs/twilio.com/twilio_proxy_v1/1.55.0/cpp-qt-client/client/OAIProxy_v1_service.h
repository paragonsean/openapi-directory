/**
 * Twilio - Proxy
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProxy_v1_service.h
 *
 * 
 */

#ifndef OAIProxy_v1_service_H
#define OAIProxy_v1_service_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIService_enum_geo_match_level.h"
#include "OAIService_enum_number_selection_behavior.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProxy_v1_service : public OAIObject {
public:
    OAIProxy_v1_service();
    OAIProxy_v1_service(QString json);
    ~OAIProxy_v1_service() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getCallbackUrl() const;
    void setCallbackUrl(const QString &callback_url);
    bool is_callback_url_Set() const;
    bool is_callback_url_Valid() const;

    QString getChatInstanceSid() const;
    void setChatInstanceSid(const QString &chat_instance_sid);
    bool is_chat_instance_sid_Set() const;
    bool is_chat_instance_sid_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    qint32 getDefaultTtl() const;
    void setDefaultTtl(const qint32 &default_ttl);
    bool is_default_ttl_Set() const;
    bool is_default_ttl_Valid() const;

    OAIService_enum_geo_match_level getGeoMatchLevel() const;
    void setGeoMatchLevel(const OAIService_enum_geo_match_level &geo_match_level);
    bool is_geo_match_level_Set() const;
    bool is_geo_match_level_Valid() const;

    QString getInterceptCallbackUrl() const;
    void setInterceptCallbackUrl(const QString &intercept_callback_url);
    bool is_intercept_callback_url_Set() const;
    bool is_intercept_callback_url_Valid() const;

    OAIObject getLinks() const;
    void setLinks(const OAIObject &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    OAIService_enum_number_selection_behavior getNumberSelectionBehavior() const;
    void setNumberSelectionBehavior(const OAIService_enum_number_selection_behavior &number_selection_behavior);
    bool is_number_selection_behavior_Set() const;
    bool is_number_selection_behavior_Valid() const;

    QString getOutOfSessionCallbackUrl() const;
    void setOutOfSessionCallbackUrl(const QString &out_of_session_callback_url);
    bool is_out_of_session_callback_url_Set() const;
    bool is_out_of_session_callback_url_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    QString getUniqueName() const;
    void setUniqueName(const QString &unique_name);
    bool is_unique_name_Set() const;
    bool is_unique_name_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_callback_url;
    bool m_callback_url_isSet;
    bool m_callback_url_isValid;

    QString m_chat_instance_sid;
    bool m_chat_instance_sid_isSet;
    bool m_chat_instance_sid_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    qint32 m_default_ttl;
    bool m_default_ttl_isSet;
    bool m_default_ttl_isValid;

    OAIService_enum_geo_match_level m_geo_match_level;
    bool m_geo_match_level_isSet;
    bool m_geo_match_level_isValid;

    QString m_intercept_callback_url;
    bool m_intercept_callback_url_isSet;
    bool m_intercept_callback_url_isValid;

    OAIObject m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    OAIService_enum_number_selection_behavior m_number_selection_behavior;
    bool m_number_selection_behavior_isSet;
    bool m_number_selection_behavior_isValid;

    QString m_out_of_session_callback_url;
    bool m_out_of_session_callback_url_isSet;
    bool m_out_of_session_callback_url_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    QString m_unique_name;
    bool m_unique_name_isSet;
    bool m_unique_name_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProxy_v1_service)

#endif // OAIProxy_v1_service_H
