/**
 * Twilio - Proxy
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProxy_v1_service_session_participant_message_interaction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProxy_v1_service_session_participant_message_interaction::OAIProxy_v1_service_session_participant_message_interaction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProxy_v1_service_session_participant_message_interaction::OAIProxy_v1_service_session_participant_message_interaction() {
    this->initializeModel();
}

OAIProxy_v1_service_session_participant_message_interaction::~OAIProxy_v1_service_session_participant_message_interaction() {}

void OAIProxy_v1_service_session_participant_message_interaction::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_data_isSet = false;
    m_data_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_inbound_participant_sid_isSet = false;
    m_inbound_participant_sid_isValid = false;

    m_inbound_resource_sid_isSet = false;
    m_inbound_resource_sid_isValid = false;

    m_inbound_resource_status_isSet = false;
    m_inbound_resource_status_isValid = false;

    m_inbound_resource_type_isSet = false;
    m_inbound_resource_type_isValid = false;

    m_inbound_resource_url_isSet = false;
    m_inbound_resource_url_isValid = false;

    m_outbound_participant_sid_isSet = false;
    m_outbound_participant_sid_isValid = false;

    m_outbound_resource_sid_isSet = false;
    m_outbound_resource_sid_isValid = false;

    m_outbound_resource_status_isSet = false;
    m_outbound_resource_status_isValid = false;

    m_outbound_resource_type_isSet = false;
    m_outbound_resource_type_isValid = false;

    m_outbound_resource_url_isSet = false;
    m_outbound_resource_url_isValid = false;

    m_participant_sid_isSet = false;
    m_participant_sid_isValid = false;

    m_service_sid_isSet = false;
    m_service_sid_isValid = false;

    m_session_sid_isSet = false;
    m_session_sid_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIProxy_v1_service_session_participant_message_interaction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProxy_v1_service_session_participant_message_interaction::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_inbound_participant_sid_isValid = ::OpenAPI::fromJsonValue(m_inbound_participant_sid, json[QString("inbound_participant_sid")]);
    m_inbound_participant_sid_isSet = !json[QString("inbound_participant_sid")].isNull() && m_inbound_participant_sid_isValid;

    m_inbound_resource_sid_isValid = ::OpenAPI::fromJsonValue(m_inbound_resource_sid, json[QString("inbound_resource_sid")]);
    m_inbound_resource_sid_isSet = !json[QString("inbound_resource_sid")].isNull() && m_inbound_resource_sid_isValid;

    m_inbound_resource_status_isValid = ::OpenAPI::fromJsonValue(m_inbound_resource_status, json[QString("inbound_resource_status")]);
    m_inbound_resource_status_isSet = !json[QString("inbound_resource_status")].isNull() && m_inbound_resource_status_isValid;

    m_inbound_resource_type_isValid = ::OpenAPI::fromJsonValue(m_inbound_resource_type, json[QString("inbound_resource_type")]);
    m_inbound_resource_type_isSet = !json[QString("inbound_resource_type")].isNull() && m_inbound_resource_type_isValid;

    m_inbound_resource_url_isValid = ::OpenAPI::fromJsonValue(m_inbound_resource_url, json[QString("inbound_resource_url")]);
    m_inbound_resource_url_isSet = !json[QString("inbound_resource_url")].isNull() && m_inbound_resource_url_isValid;

    m_outbound_participant_sid_isValid = ::OpenAPI::fromJsonValue(m_outbound_participant_sid, json[QString("outbound_participant_sid")]);
    m_outbound_participant_sid_isSet = !json[QString("outbound_participant_sid")].isNull() && m_outbound_participant_sid_isValid;

    m_outbound_resource_sid_isValid = ::OpenAPI::fromJsonValue(m_outbound_resource_sid, json[QString("outbound_resource_sid")]);
    m_outbound_resource_sid_isSet = !json[QString("outbound_resource_sid")].isNull() && m_outbound_resource_sid_isValid;

    m_outbound_resource_status_isValid = ::OpenAPI::fromJsonValue(m_outbound_resource_status, json[QString("outbound_resource_status")]);
    m_outbound_resource_status_isSet = !json[QString("outbound_resource_status")].isNull() && m_outbound_resource_status_isValid;

    m_outbound_resource_type_isValid = ::OpenAPI::fromJsonValue(m_outbound_resource_type, json[QString("outbound_resource_type")]);
    m_outbound_resource_type_isSet = !json[QString("outbound_resource_type")].isNull() && m_outbound_resource_type_isValid;

    m_outbound_resource_url_isValid = ::OpenAPI::fromJsonValue(m_outbound_resource_url, json[QString("outbound_resource_url")]);
    m_outbound_resource_url_isSet = !json[QString("outbound_resource_url")].isNull() && m_outbound_resource_url_isValid;

    m_participant_sid_isValid = ::OpenAPI::fromJsonValue(m_participant_sid, json[QString("participant_sid")]);
    m_participant_sid_isSet = !json[QString("participant_sid")].isNull() && m_participant_sid_isValid;

    m_service_sid_isValid = ::OpenAPI::fromJsonValue(m_service_sid, json[QString("service_sid")]);
    m_service_sid_isSet = !json[QString("service_sid")].isNull() && m_service_sid_isValid;

    m_session_sid_isValid = ::OpenAPI::fromJsonValue(m_session_sid, json[QString("session_sid")]);
    m_session_sid_isSet = !json[QString("session_sid")].isNull() && m_session_sid_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProxy_v1_service_session_participant_message_interaction::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_data_isSet) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_inbound_participant_sid_isSet) {
        obj.insert(QString("inbound_participant_sid"), ::OpenAPI::toJsonValue(m_inbound_participant_sid));
    }
    if (m_inbound_resource_sid_isSet) {
        obj.insert(QString("inbound_resource_sid"), ::OpenAPI::toJsonValue(m_inbound_resource_sid));
    }
    if (m_inbound_resource_status.isSet()) {
        obj.insert(QString("inbound_resource_status"), ::OpenAPI::toJsonValue(m_inbound_resource_status));
    }
    if (m_inbound_resource_type_isSet) {
        obj.insert(QString("inbound_resource_type"), ::OpenAPI::toJsonValue(m_inbound_resource_type));
    }
    if (m_inbound_resource_url_isSet) {
        obj.insert(QString("inbound_resource_url"), ::OpenAPI::toJsonValue(m_inbound_resource_url));
    }
    if (m_outbound_participant_sid_isSet) {
        obj.insert(QString("outbound_participant_sid"), ::OpenAPI::toJsonValue(m_outbound_participant_sid));
    }
    if (m_outbound_resource_sid_isSet) {
        obj.insert(QString("outbound_resource_sid"), ::OpenAPI::toJsonValue(m_outbound_resource_sid));
    }
    if (m_outbound_resource_status.isSet()) {
        obj.insert(QString("outbound_resource_status"), ::OpenAPI::toJsonValue(m_outbound_resource_status));
    }
    if (m_outbound_resource_type_isSet) {
        obj.insert(QString("outbound_resource_type"), ::OpenAPI::toJsonValue(m_outbound_resource_type));
    }
    if (m_outbound_resource_url_isSet) {
        obj.insert(QString("outbound_resource_url"), ::OpenAPI::toJsonValue(m_outbound_resource_url));
    }
    if (m_participant_sid_isSet) {
        obj.insert(QString("participant_sid"), ::OpenAPI::toJsonValue(m_participant_sid));
    }
    if (m_service_sid_isSet) {
        obj.insert(QString("service_sid"), ::OpenAPI::toJsonValue(m_service_sid));
    }
    if (m_session_sid_isSet) {
        obj.insert(QString("session_sid"), ::OpenAPI::toJsonValue(m_session_sid));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getAccountSid() const {
    return m_account_sid;
}
void OAIProxy_v1_service_session_participant_message_interaction::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getData() const {
    return m_data;
}
void OAIProxy_v1_service_session_participant_message_interaction::setData(const QString &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_data_Set() const{
    return m_data_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_data_Valid() const{
    return m_data_isValid;
}

QDateTime OAIProxy_v1_service_session_participant_message_interaction::getDateCreated() const {
    return m_date_created;
}
void OAIProxy_v1_service_session_participant_message_interaction::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIProxy_v1_service_session_participant_message_interaction::getDateUpdated() const {
    return m_date_updated;
}
void OAIProxy_v1_service_session_participant_message_interaction::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getInboundParticipantSid() const {
    return m_inbound_participant_sid;
}
void OAIProxy_v1_service_session_participant_message_interaction::setInboundParticipantSid(const QString &inbound_participant_sid) {
    m_inbound_participant_sid = inbound_participant_sid;
    m_inbound_participant_sid_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_inbound_participant_sid_Set() const{
    return m_inbound_participant_sid_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_inbound_participant_sid_Valid() const{
    return m_inbound_participant_sid_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getInboundResourceSid() const {
    return m_inbound_resource_sid;
}
void OAIProxy_v1_service_session_participant_message_interaction::setInboundResourceSid(const QString &inbound_resource_sid) {
    m_inbound_resource_sid = inbound_resource_sid;
    m_inbound_resource_sid_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_inbound_resource_sid_Set() const{
    return m_inbound_resource_sid_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_inbound_resource_sid_Valid() const{
    return m_inbound_resource_sid_isValid;
}

OAIMessage_interaction_enum_resource_status OAIProxy_v1_service_session_participant_message_interaction::getInboundResourceStatus() const {
    return m_inbound_resource_status;
}
void OAIProxy_v1_service_session_participant_message_interaction::setInboundResourceStatus(const OAIMessage_interaction_enum_resource_status &inbound_resource_status) {
    m_inbound_resource_status = inbound_resource_status;
    m_inbound_resource_status_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_inbound_resource_status_Set() const{
    return m_inbound_resource_status_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_inbound_resource_status_Valid() const{
    return m_inbound_resource_status_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getInboundResourceType() const {
    return m_inbound_resource_type;
}
void OAIProxy_v1_service_session_participant_message_interaction::setInboundResourceType(const QString &inbound_resource_type) {
    m_inbound_resource_type = inbound_resource_type;
    m_inbound_resource_type_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_inbound_resource_type_Set() const{
    return m_inbound_resource_type_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_inbound_resource_type_Valid() const{
    return m_inbound_resource_type_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getInboundResourceUrl() const {
    return m_inbound_resource_url;
}
void OAIProxy_v1_service_session_participant_message_interaction::setInboundResourceUrl(const QString &inbound_resource_url) {
    m_inbound_resource_url = inbound_resource_url;
    m_inbound_resource_url_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_inbound_resource_url_Set() const{
    return m_inbound_resource_url_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_inbound_resource_url_Valid() const{
    return m_inbound_resource_url_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getOutboundParticipantSid() const {
    return m_outbound_participant_sid;
}
void OAIProxy_v1_service_session_participant_message_interaction::setOutboundParticipantSid(const QString &outbound_participant_sid) {
    m_outbound_participant_sid = outbound_participant_sid;
    m_outbound_participant_sid_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_outbound_participant_sid_Set() const{
    return m_outbound_participant_sid_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_outbound_participant_sid_Valid() const{
    return m_outbound_participant_sid_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getOutboundResourceSid() const {
    return m_outbound_resource_sid;
}
void OAIProxy_v1_service_session_participant_message_interaction::setOutboundResourceSid(const QString &outbound_resource_sid) {
    m_outbound_resource_sid = outbound_resource_sid;
    m_outbound_resource_sid_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_outbound_resource_sid_Set() const{
    return m_outbound_resource_sid_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_outbound_resource_sid_Valid() const{
    return m_outbound_resource_sid_isValid;
}

OAIMessage_interaction_enum_resource_status OAIProxy_v1_service_session_participant_message_interaction::getOutboundResourceStatus() const {
    return m_outbound_resource_status;
}
void OAIProxy_v1_service_session_participant_message_interaction::setOutboundResourceStatus(const OAIMessage_interaction_enum_resource_status &outbound_resource_status) {
    m_outbound_resource_status = outbound_resource_status;
    m_outbound_resource_status_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_outbound_resource_status_Set() const{
    return m_outbound_resource_status_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_outbound_resource_status_Valid() const{
    return m_outbound_resource_status_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getOutboundResourceType() const {
    return m_outbound_resource_type;
}
void OAIProxy_v1_service_session_participant_message_interaction::setOutboundResourceType(const QString &outbound_resource_type) {
    m_outbound_resource_type = outbound_resource_type;
    m_outbound_resource_type_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_outbound_resource_type_Set() const{
    return m_outbound_resource_type_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_outbound_resource_type_Valid() const{
    return m_outbound_resource_type_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getOutboundResourceUrl() const {
    return m_outbound_resource_url;
}
void OAIProxy_v1_service_session_participant_message_interaction::setOutboundResourceUrl(const QString &outbound_resource_url) {
    m_outbound_resource_url = outbound_resource_url;
    m_outbound_resource_url_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_outbound_resource_url_Set() const{
    return m_outbound_resource_url_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_outbound_resource_url_Valid() const{
    return m_outbound_resource_url_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getParticipantSid() const {
    return m_participant_sid;
}
void OAIProxy_v1_service_session_participant_message_interaction::setParticipantSid(const QString &participant_sid) {
    m_participant_sid = participant_sid;
    m_participant_sid_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_participant_sid_Set() const{
    return m_participant_sid_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_participant_sid_Valid() const{
    return m_participant_sid_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getServiceSid() const {
    return m_service_sid;
}
void OAIProxy_v1_service_session_participant_message_interaction::setServiceSid(const QString &service_sid) {
    m_service_sid = service_sid;
    m_service_sid_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_service_sid_Set() const{
    return m_service_sid_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_service_sid_Valid() const{
    return m_service_sid_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getSessionSid() const {
    return m_session_sid;
}
void OAIProxy_v1_service_session_participant_message_interaction::setSessionSid(const QString &session_sid) {
    m_session_sid = session_sid;
    m_session_sid_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_session_sid_Set() const{
    return m_session_sid_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_session_sid_Valid() const{
    return m_session_sid_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getSid() const {
    return m_sid;
}
void OAIProxy_v1_service_session_participant_message_interaction::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_sid_Valid() const{
    return m_sid_isValid;
}

OAIMessage_interaction_enum_type OAIProxy_v1_service_session_participant_message_interaction::getType() const {
    return m_type;
}
void OAIProxy_v1_service_session_participant_message_interaction::setType(const OAIMessage_interaction_enum_type &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_type_Set() const{
    return m_type_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIProxy_v1_service_session_participant_message_interaction::getUrl() const {
    return m_url;
}
void OAIProxy_v1_service_session_participant_message_interaction::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_url_Set() const{
    return m_url_isSet;
}

bool OAIProxy_v1_service_session_participant_message_interaction::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIProxy_v1_service_session_participant_message_interaction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inbound_participant_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inbound_resource_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inbound_resource_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_inbound_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inbound_resource_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outbound_participant_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outbound_resource_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outbound_resource_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_outbound_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outbound_resource_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_participant_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProxy_v1_service_session_participant_message_interaction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
