# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ProxyV1ServiceSessionParticipant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, date_created: datetime=None, date_deleted: datetime=None, date_updated: datetime=None, friendly_name: str=None, identifier: str=None, links: object=None, proxy_identifier: str=None, proxy_identifier_sid: str=None, service_sid: str=None, session_sid: str=None, sid: str=None, url: str=None):
        """ProxyV1ServiceSessionParticipant - a model defined in OpenAPI

        :param account_sid: The account_sid of this ProxyV1ServiceSessionParticipant.
        :param date_created: The date_created of this ProxyV1ServiceSessionParticipant.
        :param date_deleted: The date_deleted of this ProxyV1ServiceSessionParticipant.
        :param date_updated: The date_updated of this ProxyV1ServiceSessionParticipant.
        :param friendly_name: The friendly_name of this ProxyV1ServiceSessionParticipant.
        :param identifier: The identifier of this ProxyV1ServiceSessionParticipant.
        :param links: The links of this ProxyV1ServiceSessionParticipant.
        :param proxy_identifier: The proxy_identifier of this ProxyV1ServiceSessionParticipant.
        :param proxy_identifier_sid: The proxy_identifier_sid of this ProxyV1ServiceSessionParticipant.
        :param service_sid: The service_sid of this ProxyV1ServiceSessionParticipant.
        :param session_sid: The session_sid of this ProxyV1ServiceSessionParticipant.
        :param sid: The sid of this ProxyV1ServiceSessionParticipant.
        :param url: The url of this ProxyV1ServiceSessionParticipant.
        """
        self.openapi_types = {
            'account_sid': str,
            'date_created': datetime,
            'date_deleted': datetime,
            'date_updated': datetime,
            'friendly_name': str,
            'identifier': str,
            'links': object,
            'proxy_identifier': str,
            'proxy_identifier_sid': str,
            'service_sid': str,
            'session_sid': str,
            'sid': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'date_created': 'date_created',
            'date_deleted': 'date_deleted',
            'date_updated': 'date_updated',
            'friendly_name': 'friendly_name',
            'identifier': 'identifier',
            'links': 'links',
            'proxy_identifier': 'proxy_identifier',
            'proxy_identifier_sid': 'proxy_identifier_sid',
            'service_sid': 'service_sid',
            'session_sid': 'session_sid',
            'sid': 'sid',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._date_created = date_created
        self._date_deleted = date_deleted
        self._date_updated = date_updated
        self._friendly_name = friendly_name
        self._identifier = identifier
        self._links = links
        self._proxy_identifier = proxy_identifier
        self._proxy_identifier_sid = proxy_identifier_sid
        self._service_sid = service_sid
        self._session_sid = session_sid
        self._sid = sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProxyV1ServiceSessionParticipant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The proxy.v1.service.session.participant of this ProxyV1ServiceSessionParticipant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ProxyV1ServiceSessionParticipant.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resource.

        :return: The account_sid of this ProxyV1ServiceSessionParticipant.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ProxyV1ServiceSessionParticipant.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resource.

        :param account_sid: The account_sid of this ProxyV1ServiceSessionParticipant.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def date_created(self):
        """Gets the date_created of this ProxyV1ServiceSessionParticipant.

        The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was created.

        :return: The date_created of this ProxyV1ServiceSessionParticipant.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ProxyV1ServiceSessionParticipant.

        The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was created.

        :param date_created: The date_created of this ProxyV1ServiceSessionParticipant.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_deleted(self):
        """Gets the date_deleted of this ProxyV1ServiceSessionParticipant.

        The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date when the Participant was removed from the session.

        :return: The date_deleted of this ProxyV1ServiceSessionParticipant.
        :rtype: datetime
        """
        return self._date_deleted

    @date_deleted.setter
    def date_deleted(self, date_deleted):
        """Sets the date_deleted of this ProxyV1ServiceSessionParticipant.

        The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date when the Participant was removed from the session.

        :param date_deleted: The date_deleted of this ProxyV1ServiceSessionParticipant.
        :type date_deleted: datetime
        """

        self._date_deleted = date_deleted

    @property
    def date_updated(self):
        """Gets the date_updated of this ProxyV1ServiceSessionParticipant.

        The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was last updated.

        :return: The date_updated of this ProxyV1ServiceSessionParticipant.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ProxyV1ServiceSessionParticipant.

        The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was last updated.

        :param date_updated: The date_updated of this ProxyV1ServiceSessionParticipant.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ProxyV1ServiceSessionParticipant.

        The string that you assigned to describe the participant. This value must be 255 characters or fewer. Supports UTF-8 characters. **This value should not have PII.**

        :return: The friendly_name of this ProxyV1ServiceSessionParticipant.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ProxyV1ServiceSessionParticipant.

        The string that you assigned to describe the participant. This value must be 255 characters or fewer. Supports UTF-8 characters. **This value should not have PII.**

        :param friendly_name: The friendly_name of this ProxyV1ServiceSessionParticipant.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def identifier(self):
        """Gets the identifier of this ProxyV1ServiceSessionParticipant.

        The phone number or channel identifier of the Participant. This value must be 191 characters or fewer. Supports UTF-8 characters.

        :return: The identifier of this ProxyV1ServiceSessionParticipant.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this ProxyV1ServiceSessionParticipant.

        The phone number or channel identifier of the Participant. This value must be 191 characters or fewer. Supports UTF-8 characters.

        :param identifier: The identifier of this ProxyV1ServiceSessionParticipant.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def links(self):
        """Gets the links of this ProxyV1ServiceSessionParticipant.

        The URLs to resources related the participant.

        :return: The links of this ProxyV1ServiceSessionParticipant.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ProxyV1ServiceSessionParticipant.

        The URLs to resources related the participant.

        :param links: The links of this ProxyV1ServiceSessionParticipant.
        :type links: object
        """

        self._links = links

    @property
    def proxy_identifier(self):
        """Gets the proxy_identifier of this ProxyV1ServiceSessionParticipant.

        The phone number or short code (masked number) of the participant's partner. The participant will call or message the partner participant at this number.

        :return: The proxy_identifier of this ProxyV1ServiceSessionParticipant.
        :rtype: str
        """
        return self._proxy_identifier

    @proxy_identifier.setter
    def proxy_identifier(self, proxy_identifier):
        """Sets the proxy_identifier of this ProxyV1ServiceSessionParticipant.

        The phone number or short code (masked number) of the participant's partner. The participant will call or message the partner participant at this number.

        :param proxy_identifier: The proxy_identifier of this ProxyV1ServiceSessionParticipant.
        :type proxy_identifier: str
        """

        self._proxy_identifier = proxy_identifier

    @property
    def proxy_identifier_sid(self):
        """Gets the proxy_identifier_sid of this ProxyV1ServiceSessionParticipant.

        The SID of the Proxy Identifier assigned to the Participant.

        :return: The proxy_identifier_sid of this ProxyV1ServiceSessionParticipant.
        :rtype: str
        """
        return self._proxy_identifier_sid

    @proxy_identifier_sid.setter
    def proxy_identifier_sid(self, proxy_identifier_sid):
        """Sets the proxy_identifier_sid of this ProxyV1ServiceSessionParticipant.

        The SID of the Proxy Identifier assigned to the Participant.

        :param proxy_identifier_sid: The proxy_identifier_sid of this ProxyV1ServiceSessionParticipant.
        :type proxy_identifier_sid: str
        """
        if proxy_identifier_sid is not None and len(proxy_identifier_sid) > 34:
            raise ValueError("Invalid value for `proxy_identifier_sid`, length must be less than or equal to `34`")
        if proxy_identifier_sid is not None and len(proxy_identifier_sid) < 34:
            raise ValueError("Invalid value for `proxy_identifier_sid`, length must be greater than or equal to `34`")
        if proxy_identifier_sid is not None and not re.search(r'^PN[0-9a-fA-F]{32}$', proxy_identifier_sid):
            raise ValueError("Invalid value for `proxy_identifier_sid`, must be a follow pattern or equal to `/^PN[0-9a-fA-F]{32}$/`")

        self._proxy_identifier_sid = proxy_identifier_sid

    @property
    def service_sid(self):
        """Gets the service_sid of this ProxyV1ServiceSessionParticipant.

        The SID of the resource's parent [Service](https://www.twilio.com/docs/proxy/api/service) resource.

        :return: The service_sid of this ProxyV1ServiceSessionParticipant.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this ProxyV1ServiceSessionParticipant.

        The SID of the resource's parent [Service](https://www.twilio.com/docs/proxy/api/service) resource.

        :param service_sid: The service_sid of this ProxyV1ServiceSessionParticipant.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^KS[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^KS[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def session_sid(self):
        """Gets the session_sid of this ProxyV1ServiceSessionParticipant.

        The SID of the parent [Session](https://www.twilio.com/docs/proxy/api/session) resource.

        :return: The session_sid of this ProxyV1ServiceSessionParticipant.
        :rtype: str
        """
        return self._session_sid

    @session_sid.setter
    def session_sid(self, session_sid):
        """Sets the session_sid of this ProxyV1ServiceSessionParticipant.

        The SID of the parent [Session](https://www.twilio.com/docs/proxy/api/session) resource.

        :param session_sid: The session_sid of this ProxyV1ServiceSessionParticipant.
        :type session_sid: str
        """
        if session_sid is not None and len(session_sid) > 34:
            raise ValueError("Invalid value for `session_sid`, length must be less than or equal to `34`")
        if session_sid is not None and len(session_sid) < 34:
            raise ValueError("Invalid value for `session_sid`, length must be greater than or equal to `34`")
        if session_sid is not None and not re.search(r'^KC[0-9a-fA-F]{32}$', session_sid):
            raise ValueError("Invalid value for `session_sid`, must be a follow pattern or equal to `/^KC[0-9a-fA-F]{32}$/`")

        self._session_sid = session_sid

    @property
    def sid(self):
        """Gets the sid of this ProxyV1ServiceSessionParticipant.

        The unique string that we created to identify the Participant resource.

        :return: The sid of this ProxyV1ServiceSessionParticipant.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ProxyV1ServiceSessionParticipant.

        The unique string that we created to identify the Participant resource.

        :param sid: The sid of this ProxyV1ServiceSessionParticipant.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^KP[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^KP[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def url(self):
        """Gets the url of this ProxyV1ServiceSessionParticipant.

        The absolute URL of the Participant resource.

        :return: The url of this ProxyV1ServiceSessionParticipant.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ProxyV1ServiceSessionParticipant.

        The absolute URL of the Participant resource.

        :param url: The url of this ProxyV1ServiceSessionParticipant.
        :type url: str
        """

        self._url = url
