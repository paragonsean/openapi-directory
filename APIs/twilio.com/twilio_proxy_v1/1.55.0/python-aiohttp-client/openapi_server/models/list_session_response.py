# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_service_response_meta import ListServiceResponseMeta
from openapi_server.models.proxy_v1_service_session import ProxyV1ServiceSession
from openapi_server import util


class ListSessionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, meta: ListServiceResponseMeta=None, sessions: List[ProxyV1ServiceSession]=None):
        """ListSessionResponse - a model defined in OpenAPI

        :param meta: The meta of this ListSessionResponse.
        :param sessions: The sessions of this ListSessionResponse.
        """
        self.openapi_types = {
            'meta': ListServiceResponseMeta,
            'sessions': List[ProxyV1ServiceSession]
        }

        self.attribute_map = {
            'meta': 'meta',
            'sessions': 'sessions'
        }

        self._meta = meta
        self._sessions = sessions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListSessionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListSessionResponse of this ListSessionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def meta(self):
        """Gets the meta of this ListSessionResponse.


        :return: The meta of this ListSessionResponse.
        :rtype: ListServiceResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListSessionResponse.


        :param meta: The meta of this ListSessionResponse.
        :type meta: ListServiceResponseMeta
        """

        self._meta = meta

    @property
    def sessions(self):
        """Gets the sessions of this ListSessionResponse.


        :return: The sessions of this ListSessionResponse.
        :rtype: List[ProxyV1ServiceSession]
        """
        return self._sessions

    @sessions.setter
    def sessions(self, sessions):
        """Sets the sessions of this ListSessionResponse.


        :param sessions: The sessions of this ListSessionResponse.
        :type sessions: List[ProxyV1ServiceSession]
        """

        self._sessions = sessions
