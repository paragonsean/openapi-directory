# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_service_response_meta import ListServiceResponseMeta
from openapi_server.models.proxy_v1_service_short_code import ProxyV1ServiceShortCode
from openapi_server import util


class ListShortCodeResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, meta: ListServiceResponseMeta=None, short_codes: List[ProxyV1ServiceShortCode]=None):
        """ListShortCodeResponse - a model defined in OpenAPI

        :param meta: The meta of this ListShortCodeResponse.
        :param short_codes: The short_codes of this ListShortCodeResponse.
        """
        self.openapi_types = {
            'meta': ListServiceResponseMeta,
            'short_codes': List[ProxyV1ServiceShortCode]
        }

        self.attribute_map = {
            'meta': 'meta',
            'short_codes': 'short_codes'
        }

        self._meta = meta
        self._short_codes = short_codes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListShortCodeResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListShortCodeResponse of this ListShortCodeResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def meta(self):
        """Gets the meta of this ListShortCodeResponse.


        :return: The meta of this ListShortCodeResponse.
        :rtype: ListServiceResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListShortCodeResponse.


        :param meta: The meta of this ListShortCodeResponse.
        :type meta: ListServiceResponseMeta
        """

        self._meta = meta

    @property
    def short_codes(self):
        """Gets the short_codes of this ListShortCodeResponse.


        :return: The short_codes of this ListShortCodeResponse.
        :rtype: List[ProxyV1ServiceShortCode]
        """
        return self._short_codes

    @short_codes.setter
    def short_codes(self, short_codes):
        """Sets the short_codes of this ListShortCodeResponse.


        :param short_codes: The short_codes of this ListShortCodeResponse.
        :type short_codes: List[ProxyV1ServiceShortCode]
        """

        self._short_codes = short_codes
