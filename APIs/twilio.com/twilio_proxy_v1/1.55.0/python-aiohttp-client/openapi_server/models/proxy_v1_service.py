# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_enum_geo_match_level import ServiceEnumGeoMatchLevel
from openapi_server.models.service_enum_number_selection_behavior import ServiceEnumNumberSelectionBehavior
import re
from openapi_server import util


class ProxyV1Service(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, callback_url: str=None, chat_instance_sid: str=None, date_created: datetime=None, date_updated: datetime=None, default_ttl: int=None, geo_match_level: ServiceEnumGeoMatchLevel=None, intercept_callback_url: str=None, links: object=None, number_selection_behavior: ServiceEnumNumberSelectionBehavior=None, out_of_session_callback_url: str=None, sid: str=None, unique_name: str=None, url: str=None):
        """ProxyV1Service - a model defined in OpenAPI

        :param account_sid: The account_sid of this ProxyV1Service.
        :param callback_url: The callback_url of this ProxyV1Service.
        :param chat_instance_sid: The chat_instance_sid of this ProxyV1Service.
        :param date_created: The date_created of this ProxyV1Service.
        :param date_updated: The date_updated of this ProxyV1Service.
        :param default_ttl: The default_ttl of this ProxyV1Service.
        :param geo_match_level: The geo_match_level of this ProxyV1Service.
        :param intercept_callback_url: The intercept_callback_url of this ProxyV1Service.
        :param links: The links of this ProxyV1Service.
        :param number_selection_behavior: The number_selection_behavior of this ProxyV1Service.
        :param out_of_session_callback_url: The out_of_session_callback_url of this ProxyV1Service.
        :param sid: The sid of this ProxyV1Service.
        :param unique_name: The unique_name of this ProxyV1Service.
        :param url: The url of this ProxyV1Service.
        """
        self.openapi_types = {
            'account_sid': str,
            'callback_url': str,
            'chat_instance_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'default_ttl': int,
            'geo_match_level': ServiceEnumGeoMatchLevel,
            'intercept_callback_url': str,
            'links': object,
            'number_selection_behavior': ServiceEnumNumberSelectionBehavior,
            'out_of_session_callback_url': str,
            'sid': str,
            'unique_name': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'callback_url': 'callback_url',
            'chat_instance_sid': 'chat_instance_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'default_ttl': 'default_ttl',
            'geo_match_level': 'geo_match_level',
            'intercept_callback_url': 'intercept_callback_url',
            'links': 'links',
            'number_selection_behavior': 'number_selection_behavior',
            'out_of_session_callback_url': 'out_of_session_callback_url',
            'sid': 'sid',
            'unique_name': 'unique_name',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._callback_url = callback_url
        self._chat_instance_sid = chat_instance_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._default_ttl = default_ttl
        self._geo_match_level = geo_match_level
        self._intercept_callback_url = intercept_callback_url
        self._links = links
        self._number_selection_behavior = number_selection_behavior
        self._out_of_session_callback_url = out_of_session_callback_url
        self._sid = sid
        self._unique_name = unique_name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProxyV1Service':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The proxy.v1.service of this ProxyV1Service.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ProxyV1Service.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.

        :return: The account_sid of this ProxyV1Service.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ProxyV1Service.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.

        :param account_sid: The account_sid of this ProxyV1Service.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def callback_url(self):
        """Gets the callback_url of this ProxyV1Service.

        The URL we call when the interaction status changes.

        :return: The callback_url of this ProxyV1Service.
        :rtype: str
        """
        return self._callback_url

    @callback_url.setter
    def callback_url(self, callback_url):
        """Sets the callback_url of this ProxyV1Service.

        The URL we call when the interaction status changes.

        :param callback_url: The callback_url of this ProxyV1Service.
        :type callback_url: str
        """

        self._callback_url = callback_url

    @property
    def chat_instance_sid(self):
        """Gets the chat_instance_sid of this ProxyV1Service.

        The SID of the Chat Service Instance managed by Proxy Service. The Chat Service enables Proxy to forward SMS and channel messages to this chat instance. This is a one-to-one relationship.

        :return: The chat_instance_sid of this ProxyV1Service.
        :rtype: str
        """
        return self._chat_instance_sid

    @chat_instance_sid.setter
    def chat_instance_sid(self, chat_instance_sid):
        """Sets the chat_instance_sid of this ProxyV1Service.

        The SID of the Chat Service Instance managed by Proxy Service. The Chat Service enables Proxy to forward SMS and channel messages to this chat instance. This is a one-to-one relationship.

        :param chat_instance_sid: The chat_instance_sid of this ProxyV1Service.
        :type chat_instance_sid: str
        """
        if chat_instance_sid is not None and len(chat_instance_sid) > 34:
            raise ValueError("Invalid value for `chat_instance_sid`, length must be less than or equal to `34`")
        if chat_instance_sid is not None and len(chat_instance_sid) < 34:
            raise ValueError("Invalid value for `chat_instance_sid`, length must be greater than or equal to `34`")
        if chat_instance_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', chat_instance_sid):
            raise ValueError("Invalid value for `chat_instance_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._chat_instance_sid = chat_instance_sid

    @property
    def date_created(self):
        """Gets the date_created of this ProxyV1Service.

        The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was created.

        :return: The date_created of this ProxyV1Service.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ProxyV1Service.

        The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was created.

        :param date_created: The date_created of this ProxyV1Service.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ProxyV1Service.

        The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was last updated.

        :return: The date_updated of this ProxyV1Service.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ProxyV1Service.

        The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the resource was last updated.

        :param date_updated: The date_updated of this ProxyV1Service.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def default_ttl(self):
        """Gets the default_ttl of this ProxyV1Service.

        The default `ttl` value for Sessions created in the Service. The TTL (time to live) is measured in seconds after the Session's last create or last Interaction. The default value of `0` indicates an unlimited Session length. You can override a Session's default TTL value by setting its `ttl` value.

        :return: The default_ttl of this ProxyV1Service.
        :rtype: int
        """
        return self._default_ttl

    @default_ttl.setter
    def default_ttl(self, default_ttl):
        """Sets the default_ttl of this ProxyV1Service.

        The default `ttl` value for Sessions created in the Service. The TTL (time to live) is measured in seconds after the Session's last create or last Interaction. The default value of `0` indicates an unlimited Session length. You can override a Session's default TTL value by setting its `ttl` value.

        :param default_ttl: The default_ttl of this ProxyV1Service.
        :type default_ttl: int
        """

        self._default_ttl = default_ttl

    @property
    def geo_match_level(self):
        """Gets the geo_match_level of this ProxyV1Service.


        :return: The geo_match_level of this ProxyV1Service.
        :rtype: ServiceEnumGeoMatchLevel
        """
        return self._geo_match_level

    @geo_match_level.setter
    def geo_match_level(self, geo_match_level):
        """Sets the geo_match_level of this ProxyV1Service.


        :param geo_match_level: The geo_match_level of this ProxyV1Service.
        :type geo_match_level: ServiceEnumGeoMatchLevel
        """

        self._geo_match_level = geo_match_level

    @property
    def intercept_callback_url(self):
        """Gets the intercept_callback_url of this ProxyV1Service.

        The URL we call on each interaction. If we receive a 403 status, we block the interaction; otherwise the interaction continues.

        :return: The intercept_callback_url of this ProxyV1Service.
        :rtype: str
        """
        return self._intercept_callback_url

    @intercept_callback_url.setter
    def intercept_callback_url(self, intercept_callback_url):
        """Sets the intercept_callback_url of this ProxyV1Service.

        The URL we call on each interaction. If we receive a 403 status, we block the interaction; otherwise the interaction continues.

        :param intercept_callback_url: The intercept_callback_url of this ProxyV1Service.
        :type intercept_callback_url: str
        """

        self._intercept_callback_url = intercept_callback_url

    @property
    def links(self):
        """Gets the links of this ProxyV1Service.

        The URLs of resources related to the Service.

        :return: The links of this ProxyV1Service.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ProxyV1Service.

        The URLs of resources related to the Service.

        :param links: The links of this ProxyV1Service.
        :type links: object
        """

        self._links = links

    @property
    def number_selection_behavior(self):
        """Gets the number_selection_behavior of this ProxyV1Service.


        :return: The number_selection_behavior of this ProxyV1Service.
        :rtype: ServiceEnumNumberSelectionBehavior
        """
        return self._number_selection_behavior

    @number_selection_behavior.setter
    def number_selection_behavior(self, number_selection_behavior):
        """Sets the number_selection_behavior of this ProxyV1Service.


        :param number_selection_behavior: The number_selection_behavior of this ProxyV1Service.
        :type number_selection_behavior: ServiceEnumNumberSelectionBehavior
        """

        self._number_selection_behavior = number_selection_behavior

    @property
    def out_of_session_callback_url(self):
        """Gets the out_of_session_callback_url of this ProxyV1Service.

        The URL we call when an inbound call or SMS action occurs on a closed or non-existent Session. If your server (or a Twilio [function](https://www.twilio.com/en-us/serverless/functions)) responds with valid [TwiML](https://www.twilio.com/docs/voice/twiml), we will process it. This means it is possible, for example, to play a message for a call, send an automated text message response, or redirect a call to another Phone Number. See [Out-of-Session Callback Response Guide](https://www.twilio.com/docs/proxy/out-session-callback-response-guide) for more information.

        :return: The out_of_session_callback_url of this ProxyV1Service.
        :rtype: str
        """
        return self._out_of_session_callback_url

    @out_of_session_callback_url.setter
    def out_of_session_callback_url(self, out_of_session_callback_url):
        """Sets the out_of_session_callback_url of this ProxyV1Service.

        The URL we call when an inbound call or SMS action occurs on a closed or non-existent Session. If your server (or a Twilio [function](https://www.twilio.com/en-us/serverless/functions)) responds with valid [TwiML](https://www.twilio.com/docs/voice/twiml), we will process it. This means it is possible, for example, to play a message for a call, send an automated text message response, or redirect a call to another Phone Number. See [Out-of-Session Callback Response Guide](https://www.twilio.com/docs/proxy/out-session-callback-response-guide) for more information.

        :param out_of_session_callback_url: The out_of_session_callback_url of this ProxyV1Service.
        :type out_of_session_callback_url: str
        """

        self._out_of_session_callback_url = out_of_session_callback_url

    @property
    def sid(self):
        """Gets the sid of this ProxyV1Service.

        The unique string that we created to identify the Service resource.

        :return: The sid of this ProxyV1Service.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ProxyV1Service.

        The unique string that we created to identify the Service resource.

        :param sid: The sid of this ProxyV1Service.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^KS[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^KS[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def unique_name(self):
        """Gets the unique_name of this ProxyV1Service.

        An application-defined string that uniquely identifies the resource. This value must be 191 characters or fewer in length and be unique. Supports UTF-8 characters. **This value should not have PII.**

        :return: The unique_name of this ProxyV1Service.
        :rtype: str
        """
        return self._unique_name

    @unique_name.setter
    def unique_name(self, unique_name):
        """Sets the unique_name of this ProxyV1Service.

        An application-defined string that uniquely identifies the resource. This value must be 191 characters or fewer in length and be unique. Supports UTF-8 characters. **This value should not have PII.**

        :param unique_name: The unique_name of this ProxyV1Service.
        :type unique_name: str
        """

        self._unique_name = unique_name

    @property
    def url(self):
        """Gets the url of this ProxyV1Service.

        The absolute URL of the Service resource.

        :return: The url of this ProxyV1Service.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ProxyV1Service.

        The absolute URL of the Service resource.

        :param url: The url of this ProxyV1Service.
        :type url: str
        """

        self._url = url
