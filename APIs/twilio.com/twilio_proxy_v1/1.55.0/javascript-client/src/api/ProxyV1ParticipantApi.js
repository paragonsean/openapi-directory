/**
 * Twilio - Proxy
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListParticipantResponse from '../model/ListParticipantResponse';
import ProxyV1ServiceSessionParticipant from '../model/ProxyV1ServiceSessionParticipant';

/**
* ProxyV1Participant service.
* @module api/ProxyV1ParticipantApi
* @version 1.55.0
*/
export default class ProxyV1ParticipantApi {

    /**
    * Constructs a new ProxyV1ParticipantApi. 
    * @alias module:api/ProxyV1ParticipantApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createParticipant operation.
     * @callback module:api/ProxyV1ParticipantApi~createParticipantCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProxyV1ServiceSessionParticipant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a new Participant to the Session
     * @param {String} serviceSid The SID of the parent [Service](https://www.twilio.com/docs/proxy/api/service) resource.
     * @param {String} sessionSid The SID of the parent [Session](https://www.twilio.com/docs/proxy/api/session) resource.
     * @param {String} identifier The phone number of the Participant.
     * @param {Object} opts Optional parameters
     * @param {String} [friendlyName] The string that you assigned to describe the participant. This value must be 255 characters or fewer. **This value should not have PII.**
     * @param {String} [proxyIdentifier] The proxy phone number to use for the Participant. If not specified, Proxy will select a number from the pool.
     * @param {String} [proxyIdentifierSid] The SID of the Proxy Identifier to assign to the Participant.
     * @param {module:api/ProxyV1ParticipantApi~createParticipantCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProxyV1ServiceSessionParticipant}
     */
    createParticipant(serviceSid, sessionSid, identifier, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling createParticipant");
      }
      // verify the required parameter 'sessionSid' is set
      if (sessionSid === undefined || sessionSid === null) {
        throw new Error("Missing the required parameter 'sessionSid' when calling createParticipant");
      }
      // verify the required parameter 'identifier' is set
      if (identifier === undefined || identifier === null) {
        throw new Error("Missing the required parameter 'identifier' when calling createParticipant");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'SessionSid': sessionSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'FriendlyName': opts['friendlyName'],
        'Identifier': identifier,
        'ProxyIdentifier': opts['proxyIdentifier'],
        'ProxyIdentifierSid': opts['proxyIdentifierSid']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = ProxyV1ServiceSessionParticipant;
      let basePaths = ['https://proxy.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Sessions/{SessionSid}/Participants', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteParticipant operation.
     * @callback module:api/ProxyV1ParticipantApi~deleteParticipantCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a specific Participant. This is a soft-delete. The participant remains associated with the session and cannot be re-added. Participants are only permanently deleted when the [Session](https://www.twilio.com/docs/proxy/api/session) is deleted.
     * @param {String} serviceSid The SID of the parent [Service](https://www.twilio.com/docs/proxy/api/service) of the resource to delete.
     * @param {String} sessionSid The SID of the parent [Session](https://www.twilio.com/docs/proxy/api/session) of the resource to delete.
     * @param {String} sid The Twilio-provided string that uniquely identifies the Participant resource to delete.
     * @param {module:api/ProxyV1ParticipantApi~deleteParticipantCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteParticipant(serviceSid, sessionSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling deleteParticipant");
      }
      // verify the required parameter 'sessionSid' is set
      if (sessionSid === undefined || sessionSid === null) {
        throw new Error("Missing the required parameter 'sessionSid' when calling deleteParticipant");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteParticipant");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'SessionSid': sessionSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://proxy.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Sessions/{SessionSid}/Participants/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchParticipant operation.
     * @callback module:api/ProxyV1ParticipantApi~fetchParticipantCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProxyV1ServiceSessionParticipant} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch a specific Participant.
     * @param {String} serviceSid The SID of the parent [Service](https://www.twilio.com/docs/proxy/api/service) of the resource to fetch.
     * @param {String} sessionSid The SID of the parent [Session](https://www.twilio.com/docs/proxy/api/session) of the resource to fetch.
     * @param {String} sid The Twilio-provided string that uniquely identifies the Participant resource to fetch.
     * @param {module:api/ProxyV1ParticipantApi~fetchParticipantCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProxyV1ServiceSessionParticipant}
     */
    fetchParticipant(serviceSid, sessionSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling fetchParticipant");
      }
      // verify the required parameter 'sessionSid' is set
      if (sessionSid === undefined || sessionSid === null) {
        throw new Error("Missing the required parameter 'sessionSid' when calling fetchParticipant");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchParticipant");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'SessionSid': sessionSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProxyV1ServiceSessionParticipant;
      let basePaths = ['https://proxy.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Sessions/{SessionSid}/Participants/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listParticipant operation.
     * @callback module:api/ProxyV1ParticipantApi~listParticipantCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListParticipantResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of all Participants in a Session.
     * @param {String} serviceSid The SID of the parent [Service](https://www.twilio.com/docs/proxy/api/service) of the resources to read.
     * @param {String} sessionSid The SID of the parent [Session](https://www.twilio.com/docs/proxy/api/session) of the resources to read.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/ProxyV1ParticipantApi~listParticipantCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListParticipantResponse}
     */
    listParticipant(serviceSid, sessionSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling listParticipant");
      }
      // verify the required parameter 'sessionSid' is set
      if (sessionSid === undefined || sessionSid === null) {
        throw new Error("Missing the required parameter 'sessionSid' when calling listParticipant");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'SessionSid': sessionSid
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListParticipantResponse;
      let basePaths = ['https://proxy.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Sessions/{SessionSid}/Participants', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
