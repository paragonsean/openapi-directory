/**
 * Twilio - Trunking
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListCredentialListResponse from '../model/ListCredentialListResponse';
import TrunkingV1TrunkCredentialList from '../model/TrunkingV1TrunkCredentialList';

/**
* TrunkingV1CredentialList service.
* @module api/TrunkingV1CredentialListApi
* @version 1.55.0
*/
export default class TrunkingV1CredentialListApi {

    /**
    * Constructs a new TrunkingV1CredentialListApi. 
    * @alias module:api/TrunkingV1CredentialListApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createCredentialList operation.
     * @callback module:api/TrunkingV1CredentialListApi~createCredentialListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrunkingV1TrunkCredentialList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} trunkSid The SID of the Trunk to associate the credential list with.
     * @param {String} credentialListSid The SID of the [Credential List](https://www.twilio.com/docs/voice/sip/api/sip-credentiallist-resource) that you want to associate with the trunk. Once associated, we will authenticate access to the trunk against this list.
     * @param {module:api/TrunkingV1CredentialListApi~createCredentialListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrunkingV1TrunkCredentialList}
     */
    createCredentialList(trunkSid, credentialListSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'trunkSid' is set
      if (trunkSid === undefined || trunkSid === null) {
        throw new Error("Missing the required parameter 'trunkSid' when calling createCredentialList");
      }
      // verify the required parameter 'credentialListSid' is set
      if (credentialListSid === undefined || credentialListSid === null) {
        throw new Error("Missing the required parameter 'credentialListSid' when calling createCredentialList");
      }

      let pathParams = {
        'TrunkSid': trunkSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'CredentialListSid': credentialListSid
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = TrunkingV1TrunkCredentialList;
      let basePaths = ['https://trunking.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Trunks/{TrunkSid}/CredentialLists', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCredentialList operation.
     * @callback module:api/TrunkingV1CredentialListApi~deleteCredentialListCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} trunkSid The SID of the Trunk from which to delete the credential list.
     * @param {String} sid The unique string that we created to identify the CredentialList resource to delete.
     * @param {module:api/TrunkingV1CredentialListApi~deleteCredentialListCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteCredentialList(trunkSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'trunkSid' is set
      if (trunkSid === undefined || trunkSid === null) {
        throw new Error("Missing the required parameter 'trunkSid' when calling deleteCredentialList");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteCredentialList");
      }

      let pathParams = {
        'TrunkSid': trunkSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://trunking.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Trunks/{TrunkSid}/CredentialLists/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchCredentialList operation.
     * @callback module:api/TrunkingV1CredentialListApi~fetchCredentialListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrunkingV1TrunkCredentialList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} trunkSid The SID of the Trunk from which to fetch the credential list.
     * @param {String} sid The unique string that we created to identify the CredentialList resource to fetch.
     * @param {module:api/TrunkingV1CredentialListApi~fetchCredentialListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrunkingV1TrunkCredentialList}
     */
    fetchCredentialList(trunkSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'trunkSid' is set
      if (trunkSid === undefined || trunkSid === null) {
        throw new Error("Missing the required parameter 'trunkSid' when calling fetchCredentialList");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchCredentialList");
      }

      let pathParams = {
        'TrunkSid': trunkSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TrunkingV1TrunkCredentialList;
      let basePaths = ['https://trunking.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Trunks/{TrunkSid}/CredentialLists/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listCredentialList operation.
     * @callback module:api/TrunkingV1CredentialListApi~listCredentialListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListCredentialListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} trunkSid The SID of the Trunk from which to read the credential lists.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/TrunkingV1CredentialListApi~listCredentialListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListCredentialListResponse}
     */
    listCredentialList(trunkSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'trunkSid' is set
      if (trunkSid === undefined || trunkSid === null) {
        throw new Error("Missing the required parameter 'trunkSid' when calling listCredentialList");
      }

      let pathParams = {
        'TrunkSid': trunkSid
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListCredentialListResponse;
      let basePaths = ['https://trunking.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Trunks/{TrunkSid}/CredentialLists', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
