/**
 * Twilio - Trunking
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListOriginationUrlResponse from '../model/ListOriginationUrlResponse';
import TrunkingV1TrunkOriginationUrl from '../model/TrunkingV1TrunkOriginationUrl';

/**
* TrunkingV1OriginationUrl service.
* @module api/TrunkingV1OriginationUrlApi
* @version 1.55.0
*/
export default class TrunkingV1OriginationUrlApi {

    /**
    * Constructs a new TrunkingV1OriginationUrlApi. 
    * @alias module:api/TrunkingV1OriginationUrlApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createOriginationUrl operation.
     * @callback module:api/TrunkingV1OriginationUrlApi~createOriginationUrlCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrunkingV1TrunkOriginationUrl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} trunkSid The SID of the Trunk to associate the resource with.
     * @param {Boolean} enabled Whether the URL is enabled. The default is `true`.
     * @param {String} friendlyName A descriptive string that you create to describe the resource. It can be up to 64 characters long.
     * @param {Number} priority The relative importance of the URI. Can be an integer from 0 to 65535, inclusive, and the default is 10. The lowest number represents the most important URI.
     * @param {String} sipUrl The SIP address you want Twilio to route your Origination calls to. This must be a `sip:` schema.
     * @param {Number} weight The value that determines the relative share of the load the URI should receive compared to other URIs with the same priority. Can be an integer from 1 to 65535, inclusive, and the default is 10. URLs with higher values receive more load than those with lower ones with the same priority.
     * @param {module:api/TrunkingV1OriginationUrlApi~createOriginationUrlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrunkingV1TrunkOriginationUrl}
     */
    createOriginationUrl(trunkSid, enabled, friendlyName, priority, sipUrl, weight, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'trunkSid' is set
      if (trunkSid === undefined || trunkSid === null) {
        throw new Error("Missing the required parameter 'trunkSid' when calling createOriginationUrl");
      }
      // verify the required parameter 'enabled' is set
      if (enabled === undefined || enabled === null) {
        throw new Error("Missing the required parameter 'enabled' when calling createOriginationUrl");
      }
      // verify the required parameter 'friendlyName' is set
      if (friendlyName === undefined || friendlyName === null) {
        throw new Error("Missing the required parameter 'friendlyName' when calling createOriginationUrl");
      }
      // verify the required parameter 'priority' is set
      if (priority === undefined || priority === null) {
        throw new Error("Missing the required parameter 'priority' when calling createOriginationUrl");
      }
      // verify the required parameter 'sipUrl' is set
      if (sipUrl === undefined || sipUrl === null) {
        throw new Error("Missing the required parameter 'sipUrl' when calling createOriginationUrl");
      }
      // verify the required parameter 'weight' is set
      if (weight === undefined || weight === null) {
        throw new Error("Missing the required parameter 'weight' when calling createOriginationUrl");
      }

      let pathParams = {
        'TrunkSid': trunkSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Enabled': enabled,
        'FriendlyName': friendlyName,
        'Priority': priority,
        'SipUrl': sipUrl,
        'Weight': weight
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = TrunkingV1TrunkOriginationUrl;
      let basePaths = ['https://trunking.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Trunks/{TrunkSid}/OriginationUrls', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteOriginationUrl operation.
     * @callback module:api/TrunkingV1OriginationUrlApi~deleteOriginationUrlCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} trunkSid The SID of the Trunk from which to delete the OriginationUrl.
     * @param {String} sid The unique string that we created to identify the OriginationUrl resource to delete.
     * @param {module:api/TrunkingV1OriginationUrlApi~deleteOriginationUrlCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteOriginationUrl(trunkSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'trunkSid' is set
      if (trunkSid === undefined || trunkSid === null) {
        throw new Error("Missing the required parameter 'trunkSid' when calling deleteOriginationUrl");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteOriginationUrl");
      }

      let pathParams = {
        'TrunkSid': trunkSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://trunking.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Trunks/{TrunkSid}/OriginationUrls/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchOriginationUrl operation.
     * @callback module:api/TrunkingV1OriginationUrlApi~fetchOriginationUrlCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrunkingV1TrunkOriginationUrl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} trunkSid The SID of the Trunk from which to fetch the OriginationUrl.
     * @param {String} sid The unique string that we created to identify the OriginationUrl resource to fetch.
     * @param {module:api/TrunkingV1OriginationUrlApi~fetchOriginationUrlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrunkingV1TrunkOriginationUrl}
     */
    fetchOriginationUrl(trunkSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'trunkSid' is set
      if (trunkSid === undefined || trunkSid === null) {
        throw new Error("Missing the required parameter 'trunkSid' when calling fetchOriginationUrl");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchOriginationUrl");
      }

      let pathParams = {
        'TrunkSid': trunkSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TrunkingV1TrunkOriginationUrl;
      let basePaths = ['https://trunking.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Trunks/{TrunkSid}/OriginationUrls/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listOriginationUrl operation.
     * @callback module:api/TrunkingV1OriginationUrlApi~listOriginationUrlCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListOriginationUrlResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} trunkSid The SID of the Trunk from which to read the OriginationUrl.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/TrunkingV1OriginationUrlApi~listOriginationUrlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListOriginationUrlResponse}
     */
    listOriginationUrl(trunkSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'trunkSid' is set
      if (trunkSid === undefined || trunkSid === null) {
        throw new Error("Missing the required parameter 'trunkSid' when calling listOriginationUrl");
      }

      let pathParams = {
        'TrunkSid': trunkSid
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListOriginationUrlResponse;
      let basePaths = ['https://trunking.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Trunks/{TrunkSid}/OriginationUrls', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOriginationUrl operation.
     * @callback module:api/TrunkingV1OriginationUrlApi~updateOriginationUrlCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TrunkingV1TrunkOriginationUrl} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} trunkSid The SID of the Trunk from which to update the OriginationUrl.
     * @param {String} sid The unique string that we created to identify the OriginationUrl resource to update.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [enabled] Whether the URL is enabled. The default is `true`.
     * @param {String} [friendlyName] A descriptive string that you create to describe the resource. It can be up to 64 characters long.
     * @param {Number} [priority] The relative importance of the URI. Can be an integer from 0 to 65535, inclusive, and the default is 10. The lowest number represents the most important URI.
     * @param {String} [sipUrl] The SIP address you want Twilio to route your Origination calls to. This must be a `sip:` schema. `sips` is NOT supported.
     * @param {Number} [weight] The value that determines the relative share of the load the URI should receive compared to other URIs with the same priority. Can be an integer from 1 to 65535, inclusive, and the default is 10. URLs with higher values receive more load than those with lower ones with the same priority.
     * @param {module:api/TrunkingV1OriginationUrlApi~updateOriginationUrlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TrunkingV1TrunkOriginationUrl}
     */
    updateOriginationUrl(trunkSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'trunkSid' is set
      if (trunkSid === undefined || trunkSid === null) {
        throw new Error("Missing the required parameter 'trunkSid' when calling updateOriginationUrl");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateOriginationUrl");
      }

      let pathParams = {
        'TrunkSid': trunkSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Enabled': opts['enabled'],
        'FriendlyName': opts['friendlyName'],
        'Priority': opts['priority'],
        'SipUrl': opts['sipUrl'],
        'Weight': opts['weight']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = TrunkingV1TrunkOriginationUrl;
      let basePaths = ['https://trunking.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Trunks/{TrunkSid}/OriginationUrls/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
