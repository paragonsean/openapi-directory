# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.trunk_enum_transfer_caller_id import TrunkEnumTransferCallerId
from openapi_server.models.trunk_enum_transfer_setting import TrunkEnumTransferSetting
import re
from openapi_server import util


class TrunkingV1Trunk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, auth_type: str=None, auth_type_set: List[str]=None, cnam_lookup_enabled: bool=None, date_created: datetime=None, date_updated: datetime=None, disaster_recovery_method: str=None, disaster_recovery_url: str=None, domain_name: str=None, friendly_name: str=None, links: object=None, recording: object=None, secure: bool=None, sid: str=None, transfer_caller_id: TrunkEnumTransferCallerId=None, transfer_mode: TrunkEnumTransferSetting=None, url: str=None):
        """TrunkingV1Trunk - a model defined in OpenAPI

        :param account_sid: The account_sid of this TrunkingV1Trunk.
        :param auth_type: The auth_type of this TrunkingV1Trunk.
        :param auth_type_set: The auth_type_set of this TrunkingV1Trunk.
        :param cnam_lookup_enabled: The cnam_lookup_enabled of this TrunkingV1Trunk.
        :param date_created: The date_created of this TrunkingV1Trunk.
        :param date_updated: The date_updated of this TrunkingV1Trunk.
        :param disaster_recovery_method: The disaster_recovery_method of this TrunkingV1Trunk.
        :param disaster_recovery_url: The disaster_recovery_url of this TrunkingV1Trunk.
        :param domain_name: The domain_name of this TrunkingV1Trunk.
        :param friendly_name: The friendly_name of this TrunkingV1Trunk.
        :param links: The links of this TrunkingV1Trunk.
        :param recording: The recording of this TrunkingV1Trunk.
        :param secure: The secure of this TrunkingV1Trunk.
        :param sid: The sid of this TrunkingV1Trunk.
        :param transfer_caller_id: The transfer_caller_id of this TrunkingV1Trunk.
        :param transfer_mode: The transfer_mode of this TrunkingV1Trunk.
        :param url: The url of this TrunkingV1Trunk.
        """
        self.openapi_types = {
            'account_sid': str,
            'auth_type': str,
            'auth_type_set': List[str],
            'cnam_lookup_enabled': bool,
            'date_created': datetime,
            'date_updated': datetime,
            'disaster_recovery_method': str,
            'disaster_recovery_url': str,
            'domain_name': str,
            'friendly_name': str,
            'links': object,
            'recording': object,
            'secure': bool,
            'sid': str,
            'transfer_caller_id': TrunkEnumTransferCallerId,
            'transfer_mode': TrunkEnumTransferSetting,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'auth_type': 'auth_type',
            'auth_type_set': 'auth_type_set',
            'cnam_lookup_enabled': 'cnam_lookup_enabled',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'disaster_recovery_method': 'disaster_recovery_method',
            'disaster_recovery_url': 'disaster_recovery_url',
            'domain_name': 'domain_name',
            'friendly_name': 'friendly_name',
            'links': 'links',
            'recording': 'recording',
            'secure': 'secure',
            'sid': 'sid',
            'transfer_caller_id': 'transfer_caller_id',
            'transfer_mode': 'transfer_mode',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._auth_type = auth_type
        self._auth_type_set = auth_type_set
        self._cnam_lookup_enabled = cnam_lookup_enabled
        self._date_created = date_created
        self._date_updated = date_updated
        self._disaster_recovery_method = disaster_recovery_method
        self._disaster_recovery_url = disaster_recovery_url
        self._domain_name = domain_name
        self._friendly_name = friendly_name
        self._links = links
        self._recording = recording
        self._secure = secure
        self._sid = sid
        self._transfer_caller_id = transfer_caller_id
        self._transfer_mode = transfer_mode
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrunkingV1Trunk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The trunking.v1.trunk of this TrunkingV1Trunk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this TrunkingV1Trunk.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Trunk resource.

        :return: The account_sid of this TrunkingV1Trunk.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this TrunkingV1Trunk.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Trunk resource.

        :param account_sid: The account_sid of this TrunkingV1Trunk.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def auth_type(self):
        """Gets the auth_type of this TrunkingV1Trunk.

        The types of authentication mapped to the domain. Can be: `IP_ACL` and `CREDENTIAL_LIST`. If both are mapped, the values are returned in a comma delimited list. If empty, the domain will not receive any traffic.

        :return: The auth_type of this TrunkingV1Trunk.
        :rtype: str
        """
        return self._auth_type

    @auth_type.setter
    def auth_type(self, auth_type):
        """Sets the auth_type of this TrunkingV1Trunk.

        The types of authentication mapped to the domain. Can be: `IP_ACL` and `CREDENTIAL_LIST`. If both are mapped, the values are returned in a comma delimited list. If empty, the domain will not receive any traffic.

        :param auth_type: The auth_type of this TrunkingV1Trunk.
        :type auth_type: str
        """

        self._auth_type = auth_type

    @property
    def auth_type_set(self):
        """Gets the auth_type_set of this TrunkingV1Trunk.

        Reserved.

        :return: The auth_type_set of this TrunkingV1Trunk.
        :rtype: List[str]
        """
        return self._auth_type_set

    @auth_type_set.setter
    def auth_type_set(self, auth_type_set):
        """Sets the auth_type_set of this TrunkingV1Trunk.

        Reserved.

        :param auth_type_set: The auth_type_set of this TrunkingV1Trunk.
        :type auth_type_set: List[str]
        """

        self._auth_type_set = auth_type_set

    @property
    def cnam_lookup_enabled(self):
        """Gets the cnam_lookup_enabled of this TrunkingV1Trunk.

        Whether Caller ID Name (CNAM) lookup is enabled for the trunk. If enabled, all inbound calls to the SIP Trunk from the United States and Canada automatically perform a CNAM Lookup and display Caller ID data on your phone. See [CNAM Lookups](https://www.twilio.com/docs/sip-trunking#CNAM) for more information.

        :return: The cnam_lookup_enabled of this TrunkingV1Trunk.
        :rtype: bool
        """
        return self._cnam_lookup_enabled

    @cnam_lookup_enabled.setter
    def cnam_lookup_enabled(self, cnam_lookup_enabled):
        """Sets the cnam_lookup_enabled of this TrunkingV1Trunk.

        Whether Caller ID Name (CNAM) lookup is enabled for the trunk. If enabled, all inbound calls to the SIP Trunk from the United States and Canada automatically perform a CNAM Lookup and display Caller ID data on your phone. See [CNAM Lookups](https://www.twilio.com/docs/sip-trunking#CNAM) for more information.

        :param cnam_lookup_enabled: The cnam_lookup_enabled of this TrunkingV1Trunk.
        :type cnam_lookup_enabled: bool
        """

        self._cnam_lookup_enabled = cnam_lookup_enabled

    @property
    def date_created(self):
        """Gets the date_created of this TrunkingV1Trunk.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this TrunkingV1Trunk.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this TrunkingV1Trunk.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this TrunkingV1Trunk.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this TrunkingV1Trunk.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this TrunkingV1Trunk.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this TrunkingV1Trunk.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this TrunkingV1Trunk.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def disaster_recovery_method(self):
        """Gets the disaster_recovery_method of this TrunkingV1Trunk.

        The HTTP method we use to call the `disaster_recovery_url`. Can be: `GET` or `POST`.

        :return: The disaster_recovery_method of this TrunkingV1Trunk.
        :rtype: str
        """
        return self._disaster_recovery_method

    @disaster_recovery_method.setter
    def disaster_recovery_method(self, disaster_recovery_method):
        """Sets the disaster_recovery_method of this TrunkingV1Trunk.

        The HTTP method we use to call the `disaster_recovery_url`. Can be: `GET` or `POST`.

        :param disaster_recovery_method: The disaster_recovery_method of this TrunkingV1Trunk.
        :type disaster_recovery_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if disaster_recovery_method not in allowed_values:
            raise ValueError(
                "Invalid value for `disaster_recovery_method` ({0}), must be one of {1}"
                .format(disaster_recovery_method, allowed_values)
            )

        self._disaster_recovery_method = disaster_recovery_method

    @property
    def disaster_recovery_url(self):
        """Gets the disaster_recovery_url of this TrunkingV1Trunk.

        The URL we call using the `disaster_recovery_method` if an error occurs while sending SIP traffic towards the configured Origination URL. We retrieve TwiML from this URL and execute the instructions like any other normal TwiML call. See [Disaster Recovery](https://www.twilio.com/docs/sip-trunking#disaster-recovery) for more information.

        :return: The disaster_recovery_url of this TrunkingV1Trunk.
        :rtype: str
        """
        return self._disaster_recovery_url

    @disaster_recovery_url.setter
    def disaster_recovery_url(self, disaster_recovery_url):
        """Sets the disaster_recovery_url of this TrunkingV1Trunk.

        The URL we call using the `disaster_recovery_method` if an error occurs while sending SIP traffic towards the configured Origination URL. We retrieve TwiML from this URL and execute the instructions like any other normal TwiML call. See [Disaster Recovery](https://www.twilio.com/docs/sip-trunking#disaster-recovery) for more information.

        :param disaster_recovery_url: The disaster_recovery_url of this TrunkingV1Trunk.
        :type disaster_recovery_url: str
        """

        self._disaster_recovery_url = disaster_recovery_url

    @property
    def domain_name(self):
        """Gets the domain_name of this TrunkingV1Trunk.

        The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and `-` and must end with `pstn.twilio.com`. See [Termination Settings](https://www.twilio.com/docs/sip-trunking#termination) for more information.

        :return: The domain_name of this TrunkingV1Trunk.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this TrunkingV1Trunk.

        The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and `-` and must end with `pstn.twilio.com`. See [Termination Settings](https://www.twilio.com/docs/sip-trunking#termination) for more information.

        :param domain_name: The domain_name of this TrunkingV1Trunk.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def friendly_name(self):
        """Gets the friendly_name of this TrunkingV1Trunk.

        The string that you assigned to describe the resource.

        :return: The friendly_name of this TrunkingV1Trunk.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this TrunkingV1Trunk.

        The string that you assigned to describe the resource.

        :param friendly_name: The friendly_name of this TrunkingV1Trunk.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def links(self):
        """Gets the links of this TrunkingV1Trunk.

        The URLs of related resources.

        :return: The links of this TrunkingV1Trunk.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this TrunkingV1Trunk.

        The URLs of related resources.

        :param links: The links of this TrunkingV1Trunk.
        :type links: object
        """

        self._links = links

    @property
    def recording(self):
        """Gets the recording of this TrunkingV1Trunk.

        The recording settings for the trunk. Can be: `do-not-record`, `record-from-ringing`, `record-from-answer`. If set to `record-from-ringing` or `record-from-answer`, all calls going through the trunk will be recorded. The only way to change recording parameters is on a sub-resource of a Trunk after it has been created. e.g.`/Trunks/[Trunk_SID]/Recording -XPOST -d'Mode=record-from-answer'`. See [Recording](https://www.twilio.com/docs/sip-trunking#recording) for more information.

        :return: The recording of this TrunkingV1Trunk.
        :rtype: object
        """
        return self._recording

    @recording.setter
    def recording(self, recording):
        """Sets the recording of this TrunkingV1Trunk.

        The recording settings for the trunk. Can be: `do-not-record`, `record-from-ringing`, `record-from-answer`. If set to `record-from-ringing` or `record-from-answer`, all calls going through the trunk will be recorded. The only way to change recording parameters is on a sub-resource of a Trunk after it has been created. e.g.`/Trunks/[Trunk_SID]/Recording -XPOST -d'Mode=record-from-answer'`. See [Recording](https://www.twilio.com/docs/sip-trunking#recording) for more information.

        :param recording: The recording of this TrunkingV1Trunk.
        :type recording: object
        """

        self._recording = recording

    @property
    def secure(self):
        """Gets the secure of this TrunkingV1Trunk.

        Whether Secure Trunking is enabled for the trunk. If enabled, all calls going through the trunk will be secure using SRTP for media and TLS for signaling. If disabled, then RTP will be used for media. See [Secure Trunking](https://www.twilio.com/docs/sip-trunking#securetrunking) for more information.

        :return: The secure of this TrunkingV1Trunk.
        :rtype: bool
        """
        return self._secure

    @secure.setter
    def secure(self, secure):
        """Sets the secure of this TrunkingV1Trunk.

        Whether Secure Trunking is enabled for the trunk. If enabled, all calls going through the trunk will be secure using SRTP for media and TLS for signaling. If disabled, then RTP will be used for media. See [Secure Trunking](https://www.twilio.com/docs/sip-trunking#securetrunking) for more information.

        :param secure: The secure of this TrunkingV1Trunk.
        :type secure: bool
        """

        self._secure = secure

    @property
    def sid(self):
        """Gets the sid of this TrunkingV1Trunk.

        The unique string that we created to identify the Trunk resource.

        :return: The sid of this TrunkingV1Trunk.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this TrunkingV1Trunk.

        The unique string that we created to identify the Trunk resource.

        :param sid: The sid of this TrunkingV1Trunk.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^TK[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^TK[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def transfer_caller_id(self):
        """Gets the transfer_caller_id of this TrunkingV1Trunk.


        :return: The transfer_caller_id of this TrunkingV1Trunk.
        :rtype: TrunkEnumTransferCallerId
        """
        return self._transfer_caller_id

    @transfer_caller_id.setter
    def transfer_caller_id(self, transfer_caller_id):
        """Sets the transfer_caller_id of this TrunkingV1Trunk.


        :param transfer_caller_id: The transfer_caller_id of this TrunkingV1Trunk.
        :type transfer_caller_id: TrunkEnumTransferCallerId
        """

        self._transfer_caller_id = transfer_caller_id

    @property
    def transfer_mode(self):
        """Gets the transfer_mode of this TrunkingV1Trunk.


        :return: The transfer_mode of this TrunkingV1Trunk.
        :rtype: TrunkEnumTransferSetting
        """
        return self._transfer_mode

    @transfer_mode.setter
    def transfer_mode(self, transfer_mode):
        """Sets the transfer_mode of this TrunkingV1Trunk.


        :param transfer_mode: The transfer_mode of this TrunkingV1Trunk.
        :type transfer_mode: TrunkEnumTransferSetting
        """

        self._transfer_mode = transfer_mode

    @property
    def url(self):
        """Gets the url of this TrunkingV1Trunk.

        The absolute URL of the resource.

        :return: The url of this TrunkingV1Trunk.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this TrunkingV1Trunk.

        The absolute URL of the resource.

        :param url: The url of this TrunkingV1Trunk.
        :type url: str
        """

        self._url = url
