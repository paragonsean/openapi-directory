# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecordingEnumRecordingMode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DO_MINUS_NOT_MINUS_RECORD = 'do-not-record'
    RECORD_MINUS_FROM_MINUS_RINGING = 'record-from-ringing'
    RECORD_MINUS_FROM_MINUS_ANSWER = 'record-from-answer'
    RECORD_MINUS_FROM_MINUS_RINGING_MINUS_DUAL = 'record-from-ringing-dual'
    RECORD_MINUS_FROM_MINUS_ANSWER_MINUS_DUAL = 'record-from-answer-dual'

    def __init__(self):
        """RecordingEnumRecordingMode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecordingEnumRecordingMode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The recording_enum_recording_mode of this RecordingEnumRecordingMode.
        """
        return util.deserialize_model(dikt, cls)
