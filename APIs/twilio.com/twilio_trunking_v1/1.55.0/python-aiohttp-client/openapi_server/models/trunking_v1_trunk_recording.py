# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recording_enum_recording_mode import RecordingEnumRecordingMode
from openapi_server.models.recording_enum_recording_trim import RecordingEnumRecordingTrim
from openapi_server import util


class TrunkingV1TrunkRecording(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mode: RecordingEnumRecordingMode=None, trim: RecordingEnumRecordingTrim=None):
        """TrunkingV1TrunkRecording - a model defined in OpenAPI

        :param mode: The mode of this TrunkingV1TrunkRecording.
        :param trim: The trim of this TrunkingV1TrunkRecording.
        """
        self.openapi_types = {
            'mode': RecordingEnumRecordingMode,
            'trim': RecordingEnumRecordingTrim
        }

        self.attribute_map = {
            'mode': 'mode',
            'trim': 'trim'
        }

        self._mode = mode
        self._trim = trim

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrunkingV1TrunkRecording':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The trunking.v1.trunk.recording of this TrunkingV1TrunkRecording.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mode(self):
        """Gets the mode of this TrunkingV1TrunkRecording.


        :return: The mode of this TrunkingV1TrunkRecording.
        :rtype: RecordingEnumRecordingMode
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this TrunkingV1TrunkRecording.


        :param mode: The mode of this TrunkingV1TrunkRecording.
        :type mode: RecordingEnumRecordingMode
        """

        self._mode = mode

    @property
    def trim(self):
        """Gets the trim of this TrunkingV1TrunkRecording.


        :return: The trim of this TrunkingV1TrunkRecording.
        :rtype: RecordingEnumRecordingTrim
        """
        return self._trim

    @trim.setter
    def trim(self, trim):
        """Sets the trim of this TrunkingV1TrunkRecording.


        :param trim: The trim of this TrunkingV1TrunkRecording.
        :type trim: RecordingEnumRecordingTrim
        """

        self._trim = trim
