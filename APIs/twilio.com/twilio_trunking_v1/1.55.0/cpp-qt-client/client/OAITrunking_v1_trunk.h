/**
 * Twilio - Trunking
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrunking_v1_trunk.h
 *
 * 
 */

#ifndef OAITrunking_v1_trunk_H
#define OAITrunking_v1_trunk_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAITrunk_enum_transfer_caller_id.h"
#include "OAITrunk_enum_transfer_setting.h"
#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITrunking_v1_trunk : public OAIObject {
public:
    OAITrunking_v1_trunk();
    OAITrunking_v1_trunk(QString json);
    ~OAITrunking_v1_trunk() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getAuthType() const;
    void setAuthType(const QString &auth_type);
    bool is_auth_type_Set() const;
    bool is_auth_type_Valid() const;

    QList<QString> getAuthTypeSet() const;
    void setAuthTypeSet(const QList<QString> &auth_type_set);
    bool is_auth_type_set_Set() const;
    bool is_auth_type_set_Valid() const;

    bool isCnamLookupEnabled() const;
    void setCnamLookupEnabled(const bool &cnam_lookup_enabled);
    bool is_cnam_lookup_enabled_Set() const;
    bool is_cnam_lookup_enabled_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QString getDisasterRecoveryMethod() const;
    void setDisasterRecoveryMethod(const QString &disaster_recovery_method);
    bool is_disaster_recovery_method_Set() const;
    bool is_disaster_recovery_method_Valid() const;

    QString getDisasterRecoveryUrl() const;
    void setDisasterRecoveryUrl(const QString &disaster_recovery_url);
    bool is_disaster_recovery_url_Set() const;
    bool is_disaster_recovery_url_Valid() const;

    QString getDomainName() const;
    void setDomainName(const QString &domain_name);
    bool is_domain_name_Set() const;
    bool is_domain_name_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    OAIObject getLinks() const;
    void setLinks(const OAIObject &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QJsonValue getRecording() const;
    void setRecording(const QJsonValue &recording);
    bool is_recording_Set() const;
    bool is_recording_Valid() const;

    bool isSecure() const;
    void setSecure(const bool &secure);
    bool is_secure_Set() const;
    bool is_secure_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    OAITrunk_enum_transfer_caller_id getTransferCallerId() const;
    void setTransferCallerId(const OAITrunk_enum_transfer_caller_id &transfer_caller_id);
    bool is_transfer_caller_id_Set() const;
    bool is_transfer_caller_id_Valid() const;

    OAITrunk_enum_transfer_setting getTransferMode() const;
    void setTransferMode(const OAITrunk_enum_transfer_setting &transfer_mode);
    bool is_transfer_mode_Set() const;
    bool is_transfer_mode_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_auth_type;
    bool m_auth_type_isSet;
    bool m_auth_type_isValid;

    QList<QString> m_auth_type_set;
    bool m_auth_type_set_isSet;
    bool m_auth_type_set_isValid;

    bool m_cnam_lookup_enabled;
    bool m_cnam_lookup_enabled_isSet;
    bool m_cnam_lookup_enabled_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QString m_disaster_recovery_method;
    bool m_disaster_recovery_method_isSet;
    bool m_disaster_recovery_method_isValid;

    QString m_disaster_recovery_url;
    bool m_disaster_recovery_url_isSet;
    bool m_disaster_recovery_url_isValid;

    QString m_domain_name;
    bool m_domain_name_isSet;
    bool m_domain_name_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    OAIObject m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QJsonValue m_recording;
    bool m_recording_isSet;
    bool m_recording_isValid;

    bool m_secure;
    bool m_secure_isSet;
    bool m_secure_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    OAITrunk_enum_transfer_caller_id m_transfer_caller_id;
    bool m_transfer_caller_id_isSet;
    bool m_transfer_caller_id_isValid;

    OAITrunk_enum_transfer_setting m_transfer_mode;
    bool m_transfer_mode_isSet;
    bool m_transfer_mode_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrunking_v1_trunk)

#endif // OAITrunking_v1_trunk_H
