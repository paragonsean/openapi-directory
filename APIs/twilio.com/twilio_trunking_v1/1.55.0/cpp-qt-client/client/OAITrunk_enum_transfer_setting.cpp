/**
 * Twilio - Trunking
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrunk_enum_transfer_setting.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrunk_enum_transfer_setting::OAITrunk_enum_transfer_setting(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrunk_enum_transfer_setting::OAITrunk_enum_transfer_setting() {
    this->initializeModel();
}

OAITrunk_enum_transfer_setting::~OAITrunk_enum_transfer_setting() {}

void OAITrunk_enum_transfer_setting::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITrunk_enum_transfer_setting::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITrunk_enum_transfer_setting::fromJson(QString jsonString) {
    
    if ( jsonString.compare("disable-all", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrunk_enum_transfer_setting::DISABLE_ALL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("enable-all", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrunk_enum_transfer_setting::ENABLE_ALL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sip-only", Qt::CaseInsensitive) == 0) {
        m_value = eOAITrunk_enum_transfer_setting::SIP_ONLY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITrunk_enum_transfer_setting::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITrunk_enum_transfer_setting::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITrunk_enum_transfer_setting::DISABLE_ALL:
            val = "disable-all";
            break;
        case eOAITrunk_enum_transfer_setting::ENABLE_ALL:
            val = "enable-all";
            break;
        case eOAITrunk_enum_transfer_setting::SIP_ONLY:
            val = "sip-only";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITrunk_enum_transfer_setting::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITrunk_enum_transfer_setting::eOAITrunk_enum_transfer_setting OAITrunk_enum_transfer_setting::getValue() const {
    return m_value;
}

void OAITrunk_enum_transfer_setting::setValue(const OAITrunk_enum_transfer_setting::eOAITrunk_enum_transfer_setting& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITrunk_enum_transfer_setting::isSet() const {
    
    return m_value_isSet;
}

bool OAITrunk_enum_transfer_setting::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
