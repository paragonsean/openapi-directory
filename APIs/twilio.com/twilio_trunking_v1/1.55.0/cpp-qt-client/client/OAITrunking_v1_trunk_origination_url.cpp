/**
 * Twilio - Trunking
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrunking_v1_trunk_origination_url.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrunking_v1_trunk_origination_url::OAITrunking_v1_trunk_origination_url(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrunking_v1_trunk_origination_url::OAITrunking_v1_trunk_origination_url() {
    this->initializeModel();
}

OAITrunking_v1_trunk_origination_url::~OAITrunking_v1_trunk_origination_url() {}

void OAITrunking_v1_trunk_origination_url::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_sip_url_isSet = false;
    m_sip_url_isValid = false;

    m_trunk_sid_isSet = false;
    m_trunk_sid_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAITrunking_v1_trunk_origination_url::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITrunking_v1_trunk_origination_url::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_sip_url_isValid = ::OpenAPI::fromJsonValue(m_sip_url, json[QString("sip_url")]);
    m_sip_url_isSet = !json[QString("sip_url")].isNull() && m_sip_url_isValid;

    m_trunk_sid_isValid = ::OpenAPI::fromJsonValue(m_trunk_sid, json[QString("trunk_sid")]);
    m_trunk_sid_isSet = !json[QString("trunk_sid")].isNull() && m_trunk_sid_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAITrunking_v1_trunk_origination_url::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITrunking_v1_trunk_origination_url::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_sip_url_isSet) {
        obj.insert(QString("sip_url"), ::OpenAPI::toJsonValue(m_sip_url));
    }
    if (m_trunk_sid_isSet) {
        obj.insert(QString("trunk_sid"), ::OpenAPI::toJsonValue(m_trunk_sid));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

QString OAITrunking_v1_trunk_origination_url::getAccountSid() const {
    return m_account_sid;
}
void OAITrunking_v1_trunk_origination_url::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAITrunking_v1_trunk_origination_url::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAITrunking_v1_trunk_origination_url::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QDateTime OAITrunking_v1_trunk_origination_url::getDateCreated() const {
    return m_date_created;
}
void OAITrunking_v1_trunk_origination_url::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAITrunking_v1_trunk_origination_url::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAITrunking_v1_trunk_origination_url::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAITrunking_v1_trunk_origination_url::getDateUpdated() const {
    return m_date_updated;
}
void OAITrunking_v1_trunk_origination_url::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAITrunking_v1_trunk_origination_url::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAITrunking_v1_trunk_origination_url::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

bool OAITrunking_v1_trunk_origination_url::isEnabled() const {
    return m_enabled;
}
void OAITrunking_v1_trunk_origination_url::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAITrunking_v1_trunk_origination_url::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAITrunking_v1_trunk_origination_url::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAITrunking_v1_trunk_origination_url::getFriendlyName() const {
    return m_friendly_name;
}
void OAITrunking_v1_trunk_origination_url::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAITrunking_v1_trunk_origination_url::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAITrunking_v1_trunk_origination_url::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

qint32 OAITrunking_v1_trunk_origination_url::getPriority() const {
    return m_priority;
}
void OAITrunking_v1_trunk_origination_url::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAITrunking_v1_trunk_origination_url::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAITrunking_v1_trunk_origination_url::is_priority_Valid() const{
    return m_priority_isValid;
}

QString OAITrunking_v1_trunk_origination_url::getSid() const {
    return m_sid;
}
void OAITrunking_v1_trunk_origination_url::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAITrunking_v1_trunk_origination_url::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAITrunking_v1_trunk_origination_url::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAITrunking_v1_trunk_origination_url::getSipUrl() const {
    return m_sip_url;
}
void OAITrunking_v1_trunk_origination_url::setSipUrl(const QString &sip_url) {
    m_sip_url = sip_url;
    m_sip_url_isSet = true;
}

bool OAITrunking_v1_trunk_origination_url::is_sip_url_Set() const{
    return m_sip_url_isSet;
}

bool OAITrunking_v1_trunk_origination_url::is_sip_url_Valid() const{
    return m_sip_url_isValid;
}

QString OAITrunking_v1_trunk_origination_url::getTrunkSid() const {
    return m_trunk_sid;
}
void OAITrunking_v1_trunk_origination_url::setTrunkSid(const QString &trunk_sid) {
    m_trunk_sid = trunk_sid;
    m_trunk_sid_isSet = true;
}

bool OAITrunking_v1_trunk_origination_url::is_trunk_sid_Set() const{
    return m_trunk_sid_isSet;
}

bool OAITrunking_v1_trunk_origination_url::is_trunk_sid_Valid() const{
    return m_trunk_sid_isValid;
}

QString OAITrunking_v1_trunk_origination_url::getUrl() const {
    return m_url;
}
void OAITrunking_v1_trunk_origination_url::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAITrunking_v1_trunk_origination_url::is_url_Set() const{
    return m_url_isSet;
}

bool OAITrunking_v1_trunk_origination_url::is_url_Valid() const{
    return m_url_isValid;
}

qint32 OAITrunking_v1_trunk_origination_url::getWeight() const {
    return m_weight;
}
void OAITrunking_v1_trunk_origination_url::setWeight(const qint32 &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAITrunking_v1_trunk_origination_url::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAITrunking_v1_trunk_origination_url::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAITrunking_v1_trunk_origination_url::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sip_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trunk_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITrunking_v1_trunk_origination_url::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
