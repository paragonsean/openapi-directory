# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_price: float=None, current_price: float=None, friendly_name: str=None, prefixes: List[str]=None):
        """PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner - a model defined in OpenAPI

        :param base_price: The base_price of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        :param current_price: The current_price of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        :param friendly_name: The friendly_name of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        :param prefixes: The prefixes of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        """
        self.openapi_types = {
            'base_price': float,
            'current_price': float,
            'friendly_name': str,
            'prefixes': List[str]
        }

        self.attribute_map = {
            'base_price': 'base_price',
            'current_price': 'current_price',
            'friendly_name': 'friendly_name',
            'prefixes': 'prefixes'
        }

        self._base_price = base_price
        self._current_price = current_price
        self._friendly_name = friendly_name
        self._prefixes = prefixes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The pricing_v1_voice_voice_country_instance_outbound_prefix_prices_inner of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_price(self):
        """Gets the base_price of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.


        :return: The base_price of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        :rtype: float
        """
        return self._base_price

    @base_price.setter
    def base_price(self, base_price):
        """Sets the base_price of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.


        :param base_price: The base_price of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        :type base_price: float
        """

        self._base_price = base_price

    @property
    def current_price(self):
        """Gets the current_price of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.


        :return: The current_price of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        :rtype: float
        """
        return self._current_price

    @current_price.setter
    def current_price(self, current_price):
        """Sets the current_price of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.


        :param current_price: The current_price of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        :type current_price: float
        """

        self._current_price = current_price

    @property
    def friendly_name(self):
        """Gets the friendly_name of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.


        :return: The friendly_name of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.


        :param friendly_name: The friendly_name of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def prefixes(self):
        """Gets the prefixes of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.


        :return: The prefixes of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        :rtype: List[str]
        """
        return self._prefixes

    @prefixes.setter
    def prefixes(self, prefixes):
        """Sets the prefixes of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.


        :param prefixes: The prefixes of this PricingV1VoiceVoiceCountryInstanceOutboundPrefixPricesInner.
        :type prefixes: List[str]
        """

        self._prefixes = prefixes
