/**
 * Twilio - Pricing
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner() {
    this->initializeModel();
}

OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::~OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner() {}

void OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::initializeModel() {

    m_carrier_isSet = false;
    m_carrier_isValid = false;

    m_mcc_isSet = false;
    m_mcc_isValid = false;

    m_mnc_isSet = false;
    m_mnc_isValid = false;

    m_prices_isSet = false;
    m_prices_isValid = false;
}

void OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::fromJsonObject(QJsonObject json) {

    m_carrier_isValid = ::OpenAPI::fromJsonValue(m_carrier, json[QString("carrier")]);
    m_carrier_isSet = !json[QString("carrier")].isNull() && m_carrier_isValid;

    m_mcc_isValid = ::OpenAPI::fromJsonValue(m_mcc, json[QString("mcc")]);
    m_mcc_isSet = !json[QString("mcc")].isNull() && m_mcc_isValid;

    m_mnc_isValid = ::OpenAPI::fromJsonValue(m_mnc, json[QString("mnc")]);
    m_mnc_isSet = !json[QString("mnc")].isNull() && m_mnc_isValid;

    m_prices_isValid = ::OpenAPI::fromJsonValue(m_prices, json[QString("prices")]);
    m_prices_isSet = !json[QString("prices")].isNull() && m_prices_isValid;
}

QString OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_carrier_isSet) {
        obj.insert(QString("carrier"), ::OpenAPI::toJsonValue(m_carrier));
    }
    if (m_mcc_isSet) {
        obj.insert(QString("mcc"), ::OpenAPI::toJsonValue(m_mcc));
    }
    if (m_mnc_isSet) {
        obj.insert(QString("mnc"), ::OpenAPI::toJsonValue(m_mnc));
    }
    if (m_prices.size() > 0) {
        obj.insert(QString("prices"), ::OpenAPI::toJsonValue(m_prices));
    }
    return obj;
}

QString OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::getCarrier() const {
    return m_carrier;
}
void OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::setCarrier(const QString &carrier) {
    m_carrier = carrier;
    m_carrier_isSet = true;
}

bool OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::is_carrier_Set() const{
    return m_carrier_isSet;
}

bool OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::is_carrier_Valid() const{
    return m_carrier_isValid;
}

QString OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::getMcc() const {
    return m_mcc;
}
void OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::setMcc(const QString &mcc) {
    m_mcc = mcc;
    m_mcc_isSet = true;
}

bool OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::is_mcc_Set() const{
    return m_mcc_isSet;
}

bool OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::is_mcc_Valid() const{
    return m_mcc_isValid;
}

QString OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::getMnc() const {
    return m_mnc;
}
void OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::setMnc(const QString &mnc) {
    m_mnc = mnc;
    m_mnc_isSet = true;
}

bool OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::is_mnc_Set() const{
    return m_mnc_isSet;
}

bool OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::is_mnc_Valid() const{
    return m_mnc_isValid;
}

QList<OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner_prices_inner> OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::getPrices() const {
    return m_prices;
}
void OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::setPrices(const QList<OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner_prices_inner> &prices) {
    m_prices = prices;
    m_prices_isSet = true;
}

bool OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::is_prices_Set() const{
    return m_prices_isSet;
}

bool OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::is_prices_Valid() const{
    return m_prices_isValid;
}

bool OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_carrier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mcc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mnc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prices.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPricing_v1_messaging_messaging_country_instance_outbound_sms_prices_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
