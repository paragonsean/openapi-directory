/**
 * Twilio - Pricing
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPricing_v1_messaging.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPricing_v1_messaging::OAIPricing_v1_messaging(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPricing_v1_messaging::OAIPricing_v1_messaging() {
    this->initializeModel();
}

OAIPricing_v1_messaging::~OAIPricing_v1_messaging() {}

void OAIPricing_v1_messaging::initializeModel() {

    m_links_isSet = false;
    m_links_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIPricing_v1_messaging::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPricing_v1_messaging::fromJsonObject(QJsonObject json) {

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIPricing_v1_messaging::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPricing_v1_messaging::asJsonObject() const {
    QJsonObject obj;
    if (m_links_isSet) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

OAIObject OAIPricing_v1_messaging::getLinks() const {
    return m_links;
}
void OAIPricing_v1_messaging::setLinks(const OAIObject &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIPricing_v1_messaging::is_links_Set() const{
    return m_links_isSet;
}

bool OAIPricing_v1_messaging::is_links_Valid() const{
    return m_links_isValid;
}

QString OAIPricing_v1_messaging::getName() const {
    return m_name;
}
void OAIPricing_v1_messaging::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPricing_v1_messaging::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPricing_v1_messaging::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPricing_v1_messaging::getUrl() const {
    return m_url;
}
void OAIPricing_v1_messaging::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIPricing_v1_messaging::is_url_Set() const{
    return m_url_isSet;
}

bool OAIPricing_v1_messaging::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIPricing_v1_messaging::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_links_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPricing_v1_messaging::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
