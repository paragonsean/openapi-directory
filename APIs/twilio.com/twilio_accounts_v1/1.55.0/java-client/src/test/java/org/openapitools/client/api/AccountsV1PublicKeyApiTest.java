/*
 * Twilio - Accounts
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountsV1CredentialCredentialPublicKey;
import org.openapitools.client.model.ListCredentialPublicKeyResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountsV1PublicKeyApi
 */
@Disabled
public class AccountsV1PublicKeyApiTest {

    private final AccountsV1PublicKeyApi api = new AccountsV1PublicKeyApi();

    /**
     * Create a new Public Key Credential
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCredentialPublicKeyTest() throws ApiException {
        String publicKey = null;
        String accountSid = null;
        String friendlyName = null;
        AccountsV1CredentialCredentialPublicKey response = api.createCredentialPublicKey(publicKey, accountSid, friendlyName);
        // TODO: test validations
    }

    /**
     * Delete a Credential from your account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCredentialPublicKeyTest() throws ApiException {
        String sid = null;
        api.deleteCredentialPublicKey(sid);
        // TODO: test validations
    }

    /**
     * Fetch the public key specified by the provided Credential Sid
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchCredentialPublicKeyTest() throws ApiException {
        String sid = null;
        AccountsV1CredentialCredentialPublicKey response = api.fetchCredentialPublicKey(sid);
        // TODO: test validations
    }

    /**
     * Retrieves a collection of Public Key Credentials belonging to the account used to make the request
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCredentialPublicKeyTest() throws ApiException {
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListCredentialPublicKeyResponse response = api.listCredentialPublicKey(pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Modify the properties of a given Account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCredentialPublicKeyTest() throws ApiException {
        String sid = null;
        String friendlyName = null;
        AccountsV1CredentialCredentialPublicKey response = api.updateCredentialPublicKey(sid, friendlyName);
        // TODO: test validations
    }

}
