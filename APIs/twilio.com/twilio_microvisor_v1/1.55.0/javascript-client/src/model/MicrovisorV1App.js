/**
 * Twilio - Microvisor
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MicrovisorV1App model module.
 * @module model/MicrovisorV1App
 * @version 1.55.0
 */
class MicrovisorV1App {
    /**
     * Constructs a new <code>MicrovisorV1App</code>.
     * @alias module:model/MicrovisorV1App
     */
    constructor() { 
        
        MicrovisorV1App.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MicrovisorV1App</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MicrovisorV1App} obj Optional instance to populate.
     * @return {module:model/MicrovisorV1App} The populated <code>MicrovisorV1App</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MicrovisorV1App();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('hash')) {
                obj['hash'] = ApiClient.convertToType(data['hash'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('unique_name')) {
                obj['unique_name'] = ApiClient.convertToType(data['unique_name'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MicrovisorV1App</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MicrovisorV1App</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['hash'] && !(typeof data['hash'] === 'string' || data['hash'] instanceof String)) {
            throw new Error("Expected the field `hash` to be a primitive type in the JSON string but got " + data['hash']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['unique_name'] && !(typeof data['unique_name'] === 'string' || data['unique_name'] instanceof String)) {
            throw new Error("Expected the field `unique_name` to be a primitive type in the JSON string but got " + data['unique_name']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The unique SID identifier of the Account.
 * @member {String} account_sid
 */
MicrovisorV1App.prototype['account_sid'] = undefined;

/**
 * The date that this App was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_created
 */
MicrovisorV1App.prototype['date_created'] = undefined;

/**
 * The date that this App was last updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_updated
 */
MicrovisorV1App.prototype['date_updated'] = undefined;

/**
 * App manifest hash represented as `hash_algorithm:hash_value`.
 * @member {String} hash
 */
MicrovisorV1App.prototype['hash'] = undefined;

/**
 * @member {Object} links
 */
MicrovisorV1App.prototype['links'] = undefined;

/**
 * A 34-character string that uniquely identifies this App.
 * @member {String} sid
 */
MicrovisorV1App.prototype['sid'] = undefined;

/**
 * A developer-defined string that uniquely identifies the App. This value must be unique for all Apps on this Account. The `unique_name` value may be used as an alternative to the `sid` in the URL path to address the resource.
 * @member {String} unique_name
 */
MicrovisorV1App.prototype['unique_name'] = undefined;

/**
 * The URL of this resource.
 * @member {String} url
 */
MicrovisorV1App.prototype['url'] = undefined;






export default MicrovisorV1App;

