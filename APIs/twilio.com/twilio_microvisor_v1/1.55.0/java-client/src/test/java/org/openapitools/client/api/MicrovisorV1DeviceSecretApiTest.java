/*
 * Twilio - Microvisor
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListDeviceSecretResponse;
import org.openapitools.client.model.MicrovisorV1DeviceDeviceSecret;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MicrovisorV1DeviceSecretApi
 */
@Disabled
public class MicrovisorV1DeviceSecretApiTest {

    private final MicrovisorV1DeviceSecretApi api = new MicrovisorV1DeviceSecretApi();

    /**
     * Create a secret for a Microvisor Device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDeviceSecretTest() throws ApiException {
        String deviceSid = null;
        String key = null;
        String value = null;
        MicrovisorV1DeviceDeviceSecret response = api.createDeviceSecret(deviceSid, key, value);
        // TODO: test validations
    }

    /**
     * Delete a secret for a Microvisor Device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDeviceSecretTest() throws ApiException {
        String deviceSid = null;
        String key = null;
        api.deleteDeviceSecret(deviceSid, key);
        // TODO: test validations
    }

    /**
     * Retrieve a Secret for a Device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchDeviceSecretTest() throws ApiException {
        String deviceSid = null;
        String key = null;
        MicrovisorV1DeviceDeviceSecret response = api.fetchDeviceSecret(deviceSid, key);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all Secrets for a Device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listDeviceSecretTest() throws ApiException {
        String deviceSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListDeviceSecretResponse response = api.listDeviceSecret(deviceSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update a secret for a Microvisor Device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDeviceSecretTest() throws ApiException {
        String deviceSid = null;
        String key = null;
        String value = null;
        MicrovisorV1DeviceDeviceSecret response = api.updateDeviceSecret(deviceSid, key, value);
        // TODO: test validations
    }

}
