# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LookupsV1PhoneNumber(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add_ons: object=None, caller_name: object=None, carrier: object=None, country_code: str=None, national_format: str=None, phone_number: str=None, url: str=None):
        """LookupsV1PhoneNumber - a model defined in OpenAPI

        :param add_ons: The add_ons of this LookupsV1PhoneNumber.
        :param caller_name: The caller_name of this LookupsV1PhoneNumber.
        :param carrier: The carrier of this LookupsV1PhoneNumber.
        :param country_code: The country_code of this LookupsV1PhoneNumber.
        :param national_format: The national_format of this LookupsV1PhoneNumber.
        :param phone_number: The phone_number of this LookupsV1PhoneNumber.
        :param url: The url of this LookupsV1PhoneNumber.
        """
        self.openapi_types = {
            'add_ons': object,
            'caller_name': object,
            'carrier': object,
            'country_code': str,
            'national_format': str,
            'phone_number': str,
            'url': str
        }

        self.attribute_map = {
            'add_ons': 'add_ons',
            'caller_name': 'caller_name',
            'carrier': 'carrier',
            'country_code': 'country_code',
            'national_format': 'national_format',
            'phone_number': 'phone_number',
            'url': 'url'
        }

        self._add_ons = add_ons
        self._caller_name = caller_name
        self._carrier = carrier
        self._country_code = country_code
        self._national_format = national_format
        self._phone_number = phone_number
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LookupsV1PhoneNumber':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The lookups.v1.phone_number of this LookupsV1PhoneNumber.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add_ons(self):
        """Gets the add_ons of this LookupsV1PhoneNumber.

        A JSON string with the results of the Add-ons you specified in the `add_ons` parameters. For the format of the object, see [Using Add-ons](https://www.twilio.com/docs/add-ons).

        :return: The add_ons of this LookupsV1PhoneNumber.
        :rtype: object
        """
        return self._add_ons

    @add_ons.setter
    def add_ons(self, add_ons):
        """Sets the add_ons of this LookupsV1PhoneNumber.

        A JSON string with the results of the Add-ons you specified in the `add_ons` parameters. For the format of the object, see [Using Add-ons](https://www.twilio.com/docs/add-ons).

        :param add_ons: The add_ons of this LookupsV1PhoneNumber.
        :type add_ons: object
        """

        self._add_ons = add_ons

    @property
    def caller_name(self):
        """Gets the caller_name of this LookupsV1PhoneNumber.

        The name of the phone number's owner. If `null`, that information was not available.

        :return: The caller_name of this LookupsV1PhoneNumber.
        :rtype: object
        """
        return self._caller_name

    @caller_name.setter
    def caller_name(self, caller_name):
        """Sets the caller_name of this LookupsV1PhoneNumber.

        The name of the phone number's owner. If `null`, that information was not available.

        :param caller_name: The caller_name of this LookupsV1PhoneNumber.
        :type caller_name: object
        """

        self._caller_name = caller_name

    @property
    def carrier(self):
        """Gets the carrier of this LookupsV1PhoneNumber.

        The telecom company that provides the phone number.

        :return: The carrier of this LookupsV1PhoneNumber.
        :rtype: object
        """
        return self._carrier

    @carrier.setter
    def carrier(self, carrier):
        """Sets the carrier of this LookupsV1PhoneNumber.

        The telecom company that provides the phone number.

        :param carrier: The carrier of this LookupsV1PhoneNumber.
        :type carrier: object
        """

        self._carrier = carrier

    @property
    def country_code(self):
        """Gets the country_code of this LookupsV1PhoneNumber.

        The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) for the phone number.

        :return: The country_code of this LookupsV1PhoneNumber.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this LookupsV1PhoneNumber.

        The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) for the phone number.

        :param country_code: The country_code of this LookupsV1PhoneNumber.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def national_format(self):
        """Gets the national_format of this LookupsV1PhoneNumber.

        The phone number, in national format.

        :return: The national_format of this LookupsV1PhoneNumber.
        :rtype: str
        """
        return self._national_format

    @national_format.setter
    def national_format(self, national_format):
        """Sets the national_format of this LookupsV1PhoneNumber.

        The phone number, in national format.

        :param national_format: The national_format of this LookupsV1PhoneNumber.
        :type national_format: str
        """

        self._national_format = national_format

    @property
    def phone_number(self):
        """Gets the phone_number of this LookupsV1PhoneNumber.

        The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.

        :return: The phone_number of this LookupsV1PhoneNumber.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this LookupsV1PhoneNumber.

        The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.

        :param phone_number: The phone_number of this LookupsV1PhoneNumber.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def url(self):
        """Gets the url of this LookupsV1PhoneNumber.

        The absolute URL of the resource.

        :return: The url of this LookupsV1PhoneNumber.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this LookupsV1PhoneNumber.

        The absolute URL of the resource.

        :param url: The url of this LookupsV1PhoneNumber.
        :type url: str
        """

        self._url = url
