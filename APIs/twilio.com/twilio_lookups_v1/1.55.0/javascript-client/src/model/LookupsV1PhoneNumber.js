/**
 * Twilio - Lookups
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LookupsV1PhoneNumber model module.
 * @module model/LookupsV1PhoneNumber
 * @version 1.55.0
 */
class LookupsV1PhoneNumber {
    /**
     * Constructs a new <code>LookupsV1PhoneNumber</code>.
     * @alias module:model/LookupsV1PhoneNumber
     */
    constructor() { 
        
        LookupsV1PhoneNumber.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LookupsV1PhoneNumber</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LookupsV1PhoneNumber} obj Optional instance to populate.
     * @return {module:model/LookupsV1PhoneNumber} The populated <code>LookupsV1PhoneNumber</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LookupsV1PhoneNumber();

            if (data.hasOwnProperty('add_ons')) {
                obj['add_ons'] = ApiClient.convertToType(data['add_ons'], Object);
            }
            if (data.hasOwnProperty('caller_name')) {
                obj['caller_name'] = ApiClient.convertToType(data['caller_name'], Object);
            }
            if (data.hasOwnProperty('carrier')) {
                obj['carrier'] = ApiClient.convertToType(data['carrier'], Object);
            }
            if (data.hasOwnProperty('country_code')) {
                obj['country_code'] = ApiClient.convertToType(data['country_code'], 'String');
            }
            if (data.hasOwnProperty('national_format')) {
                obj['national_format'] = ApiClient.convertToType(data['national_format'], 'String');
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LookupsV1PhoneNumber</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LookupsV1PhoneNumber</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['country_code'] && !(typeof data['country_code'] === 'string' || data['country_code'] instanceof String)) {
            throw new Error("Expected the field `country_code` to be a primitive type in the JSON string but got " + data['country_code']);
        }
        // ensure the json data is a string
        if (data['national_format'] && !(typeof data['national_format'] === 'string' || data['national_format'] instanceof String)) {
            throw new Error("Expected the field `national_format` to be a primitive type in the JSON string but got " + data['national_format']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * A JSON string with the results of the Add-ons you specified in the `add_ons` parameters. For the format of the object, see [Using Add-ons](https://www.twilio.com/docs/add-ons).
 * @member {Object} add_ons
 */
LookupsV1PhoneNumber.prototype['add_ons'] = undefined;

/**
 * The name of the phone number's owner. If `null`, that information was not available.
 * @member {Object} caller_name
 */
LookupsV1PhoneNumber.prototype['caller_name'] = undefined;

/**
 * The telecom company that provides the phone number.
 * @member {Object} carrier
 */
LookupsV1PhoneNumber.prototype['carrier'] = undefined;

/**
 * The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) for the phone number.
 * @member {String} country_code
 */
LookupsV1PhoneNumber.prototype['country_code'] = undefined;

/**
 * The phone number, in national format.
 * @member {String} national_format
 */
LookupsV1PhoneNumber.prototype['national_format'] = undefined;

/**
 * The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
 * @member {String} phone_number
 */
LookupsV1PhoneNumber.prototype['phone_number'] = undefined;

/**
 * The absolute URL of the resource.
 * @member {String} url
 */
LookupsV1PhoneNumber.prototype['url'] = undefined;






export default LookupsV1PhoneNumber;

