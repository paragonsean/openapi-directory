/*
 * Twilio - Bulkexports
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BulkexportsV1ExportConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:22.958234-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BulkexportsV1ExportConfiguration {
  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "resource_type";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private String resourceType;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_WEBHOOK_METHOD = "webhook_method";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_METHOD)
  private String webhookMethod;

  public static final String SERIALIZED_NAME_WEBHOOK_URL = "webhook_url";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_URL)
  private URI webhookUrl;

  public BulkexportsV1ExportConfiguration() {
  }

  public BulkexportsV1ExportConfiguration enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * If true, Twilio will automatically generate every day&#39;s file when the day is over.
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public BulkexportsV1ExportConfiguration resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * The type of communication â€“ Messages, Calls, Conferences, and Participants
   * @return resourceType
   */
  @javax.annotation.Nullable
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }


  public BulkexportsV1ExportConfiguration url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The URL of this resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public BulkexportsV1ExportConfiguration webhookMethod(String webhookMethod) {
    this.webhookMethod = webhookMethod;
    return this;
  }

  /**
   * Sets whether Twilio should call a webhook URL when the automatic generation is complete, using GET or POST. The actual destination is set in the webhook_url
   * @return webhookMethod
   */
  @javax.annotation.Nullable
  public String getWebhookMethod() {
    return webhookMethod;
  }

  public void setWebhookMethod(String webhookMethod) {
    this.webhookMethod = webhookMethod;
  }


  public BulkexportsV1ExportConfiguration webhookUrl(URI webhookUrl) {
    this.webhookUrl = webhookUrl;
    return this;
  }

  /**
   * Stores the URL destination for the method specified in webhook_method.
   * @return webhookUrl
   */
  @javax.annotation.Nullable
  public URI getWebhookUrl() {
    return webhookUrl;
  }

  public void setWebhookUrl(URI webhookUrl) {
    this.webhookUrl = webhookUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkexportsV1ExportConfiguration bulkexportsV1ExportConfiguration = (BulkexportsV1ExportConfiguration) o;
    return Objects.equals(this.enabled, bulkexportsV1ExportConfiguration.enabled) &&
        Objects.equals(this.resourceType, bulkexportsV1ExportConfiguration.resourceType) &&
        Objects.equals(this.url, bulkexportsV1ExportConfiguration.url) &&
        Objects.equals(this.webhookMethod, bulkexportsV1ExportConfiguration.webhookMethod) &&
        Objects.equals(this.webhookUrl, bulkexportsV1ExportConfiguration.webhookUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, resourceType, url, webhookMethod, webhookUrl);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkexportsV1ExportConfiguration {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    webhookMethod: ").append(toIndentedString(webhookMethod)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enabled");
    openapiFields.add("resource_type");
    openapiFields.add("url");
    openapiFields.add("webhook_method");
    openapiFields.add("webhook_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BulkexportsV1ExportConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BulkexportsV1ExportConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BulkexportsV1ExportConfiguration is not found in the empty JSON string", BulkexportsV1ExportConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BulkexportsV1ExportConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BulkexportsV1ExportConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("resource_type") != null && !jsonObj.get("resource_type").isJsonNull()) && !jsonObj.get("resource_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resource_type").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("webhook_method") != null && !jsonObj.get("webhook_method").isJsonNull()) && !jsonObj.get("webhook_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhook_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhook_method").toString()));
      }
      if ((jsonObj.get("webhook_url") != null && !jsonObj.get("webhook_url").isJsonNull()) && !jsonObj.get("webhook_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhook_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhook_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BulkexportsV1ExportConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BulkexportsV1ExportConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BulkexportsV1ExportConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BulkexportsV1ExportConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<BulkexportsV1ExportConfiguration>() {
           @Override
           public void write(JsonWriter out, BulkexportsV1ExportConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BulkexportsV1ExportConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BulkexportsV1ExportConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BulkexportsV1ExportConfiguration
   * @throws IOException if the JSON string is invalid with respect to BulkexportsV1ExportConfiguration
   */
  public static BulkexportsV1ExportConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BulkexportsV1ExportConfiguration.class);
  }

  /**
   * Convert an instance of BulkexportsV1ExportConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

