/*
 * Twilio - Bulkexports
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.BulkexportsV1ExportExportCustomJob;
import org.openapitools.client.model.ListExportCustomJobResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BulkexportsV1ExportCustomJobApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BulkexportsV1ExportCustomJobApi() {
        this(Configuration.getDefaultApiClient());
    }

    public BulkexportsV1ExportCustomJobApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createExportCustomJob
     * @param resourceType The type of communication – Messages or Calls, Conferences, and Participants (required)
     * @param endDay The end day for the custom export specified as a string in the format of yyyy-mm-dd. End day is inclusive and must be 2 days earlier than the current UTC day. (required)
     * @param friendlyName The friendly name specified when creating the job (required)
     * @param startDay The start day for the custom export specified as a string in the format of yyyy-mm-dd (required)
     * @param email The optional email to send the completion notification to. You can set both webhook, and email, or one or the other. If you set neither, the job will run but you will have to query to determine your job&#39;s status. (optional)
     * @param webhookMethod This is the method used to call the webhook on completion of the job. If this is supplied, &#x60;WebhookUrl&#x60; must also be supplied. (optional)
     * @param webhookUrl The optional webhook url called on completion of the job. If this is supplied, &#x60;WebhookMethod&#x60; must also be supplied. If you set neither webhook nor email, you will have to check your job&#39;s status manually. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createExportCustomJobCall(String resourceType, String endDay, String friendlyName, String startDay, String email, String webhookMethod, String webhookUrl, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://bulkexports.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Exports/{ResourceType}/Jobs"
            .replace("{" + "ResourceType" + "}", localVarApiClient.escapeString(resourceType.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (email != null) {
            localVarFormParams.put("Email", email);
        }

        if (endDay != null) {
            localVarFormParams.put("EndDay", endDay);
        }

        if (friendlyName != null) {
            localVarFormParams.put("FriendlyName", friendlyName);
        }

        if (startDay != null) {
            localVarFormParams.put("StartDay", startDay);
        }

        if (webhookMethod != null) {
            localVarFormParams.put("WebhookMethod", webhookMethod);
        }

        if (webhookUrl != null) {
            localVarFormParams.put("WebhookUrl", webhookUrl);
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createExportCustomJobValidateBeforeCall(String resourceType, String endDay, String friendlyName, String startDay, String email, String webhookMethod, String webhookUrl, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceType' is set
        if (resourceType == null) {
            throw new ApiException("Missing the required parameter 'resourceType' when calling createExportCustomJob(Async)");
        }

        // verify the required parameter 'endDay' is set
        if (endDay == null) {
            throw new ApiException("Missing the required parameter 'endDay' when calling createExportCustomJob(Async)");
        }

        // verify the required parameter 'friendlyName' is set
        if (friendlyName == null) {
            throw new ApiException("Missing the required parameter 'friendlyName' when calling createExportCustomJob(Async)");
        }

        // verify the required parameter 'startDay' is set
        if (startDay == null) {
            throw new ApiException("Missing the required parameter 'startDay' when calling createExportCustomJob(Async)");
        }

        return createExportCustomJobCall(resourceType, endDay, friendlyName, startDay, email, webhookMethod, webhookUrl, _callback);

    }

    /**
     * 
     * 
     * @param resourceType The type of communication – Messages or Calls, Conferences, and Participants (required)
     * @param endDay The end day for the custom export specified as a string in the format of yyyy-mm-dd. End day is inclusive and must be 2 days earlier than the current UTC day. (required)
     * @param friendlyName The friendly name specified when creating the job (required)
     * @param startDay The start day for the custom export specified as a string in the format of yyyy-mm-dd (required)
     * @param email The optional email to send the completion notification to. You can set both webhook, and email, or one or the other. If you set neither, the job will run but you will have to query to determine your job&#39;s status. (optional)
     * @param webhookMethod This is the method used to call the webhook on completion of the job. If this is supplied, &#x60;WebhookUrl&#x60; must also be supplied. (optional)
     * @param webhookUrl The optional webhook url called on completion of the job. If this is supplied, &#x60;WebhookMethod&#x60; must also be supplied. If you set neither webhook nor email, you will have to check your job&#39;s status manually. (optional)
     * @return BulkexportsV1ExportExportCustomJob
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public BulkexportsV1ExportExportCustomJob createExportCustomJob(String resourceType, String endDay, String friendlyName, String startDay, String email, String webhookMethod, String webhookUrl) throws ApiException {
        ApiResponse<BulkexportsV1ExportExportCustomJob> localVarResp = createExportCustomJobWithHttpInfo(resourceType, endDay, friendlyName, startDay, email, webhookMethod, webhookUrl);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param resourceType The type of communication – Messages or Calls, Conferences, and Participants (required)
     * @param endDay The end day for the custom export specified as a string in the format of yyyy-mm-dd. End day is inclusive and must be 2 days earlier than the current UTC day. (required)
     * @param friendlyName The friendly name specified when creating the job (required)
     * @param startDay The start day for the custom export specified as a string in the format of yyyy-mm-dd (required)
     * @param email The optional email to send the completion notification to. You can set both webhook, and email, or one or the other. If you set neither, the job will run but you will have to query to determine your job&#39;s status. (optional)
     * @param webhookMethod This is the method used to call the webhook on completion of the job. If this is supplied, &#x60;WebhookUrl&#x60; must also be supplied. (optional)
     * @param webhookUrl The optional webhook url called on completion of the job. If this is supplied, &#x60;WebhookMethod&#x60; must also be supplied. If you set neither webhook nor email, you will have to check your job&#39;s status manually. (optional)
     * @return ApiResponse&lt;BulkexportsV1ExportExportCustomJob&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BulkexportsV1ExportExportCustomJob> createExportCustomJobWithHttpInfo(String resourceType, String endDay, String friendlyName, String startDay, String email, String webhookMethod, String webhookUrl) throws ApiException {
        okhttp3.Call localVarCall = createExportCustomJobValidateBeforeCall(resourceType, endDay, friendlyName, startDay, email, webhookMethod, webhookUrl, null);
        Type localVarReturnType = new TypeToken<BulkexportsV1ExportExportCustomJob>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param resourceType The type of communication – Messages or Calls, Conferences, and Participants (required)
     * @param endDay The end day for the custom export specified as a string in the format of yyyy-mm-dd. End day is inclusive and must be 2 days earlier than the current UTC day. (required)
     * @param friendlyName The friendly name specified when creating the job (required)
     * @param startDay The start day for the custom export specified as a string in the format of yyyy-mm-dd (required)
     * @param email The optional email to send the completion notification to. You can set both webhook, and email, or one or the other. If you set neither, the job will run but you will have to query to determine your job&#39;s status. (optional)
     * @param webhookMethod This is the method used to call the webhook on completion of the job. If this is supplied, &#x60;WebhookUrl&#x60; must also be supplied. (optional)
     * @param webhookUrl The optional webhook url called on completion of the job. If this is supplied, &#x60;WebhookMethod&#x60; must also be supplied. If you set neither webhook nor email, you will have to check your job&#39;s status manually. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createExportCustomJobAsync(String resourceType, String endDay, String friendlyName, String startDay, String email, String webhookMethod, String webhookUrl, final ApiCallback<BulkexportsV1ExportExportCustomJob> _callback) throws ApiException {

        okhttp3.Call localVarCall = createExportCustomJobValidateBeforeCall(resourceType, endDay, friendlyName, startDay, email, webhookMethod, webhookUrl, _callback);
        Type localVarReturnType = new TypeToken<BulkexportsV1ExportExportCustomJob>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listExportCustomJob
     * @param resourceType The type of communication – Messages, Calls, Conferences, and Participants (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listExportCustomJobCall(String resourceType, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://bulkexports.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Exports/{ResourceType}/Jobs"
            .replace("{" + "ResourceType" + "}", localVarApiClient.escapeString(resourceType.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageSize", pageSize));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Page", page));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listExportCustomJobValidateBeforeCall(String resourceType, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'resourceType' is set
        if (resourceType == null) {
            throw new ApiException("Missing the required parameter 'resourceType' when calling listExportCustomJob(Async)");
        }

        return listExportCustomJobCall(resourceType, pageSize, page, pageToken, _callback);

    }

    /**
     * 
     * 
     * @param resourceType The type of communication – Messages, Calls, Conferences, and Participants (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ListExportCustomJobResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ListExportCustomJobResponse listExportCustomJob(String resourceType, Integer pageSize, Integer page, String pageToken) throws ApiException {
        ApiResponse<ListExportCustomJobResponse> localVarResp = listExportCustomJobWithHttpInfo(resourceType, pageSize, page, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param resourceType The type of communication – Messages, Calls, Conferences, and Participants (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ApiResponse&lt;ListExportCustomJobResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListExportCustomJobResponse> listExportCustomJobWithHttpInfo(String resourceType, Integer pageSize, Integer page, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = listExportCustomJobValidateBeforeCall(resourceType, pageSize, page, pageToken, null);
        Type localVarReturnType = new TypeToken<ListExportCustomJobResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param resourceType The type of communication – Messages, Calls, Conferences, and Participants (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listExportCustomJobAsync(String resourceType, Integer pageSize, Integer page, String pageToken, final ApiCallback<ListExportCustomJobResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listExportCustomJobValidateBeforeCall(resourceType, pageSize, page, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ListExportCustomJobResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
