# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BulkexportsV1Export(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: object=None, resource_type: str=None, url: str=None):
        """BulkexportsV1Export - a model defined in OpenAPI

        :param links: The links of this BulkexportsV1Export.
        :param resource_type: The resource_type of this BulkexportsV1Export.
        :param url: The url of this BulkexportsV1Export.
        """
        self.openapi_types = {
            'links': object,
            'resource_type': str,
            'url': str
        }

        self.attribute_map = {
            'links': 'links',
            'resource_type': 'resource_type',
            'url': 'url'
        }

        self._links = links
        self._resource_type = resource_type
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkexportsV1Export':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bulkexports.v1.export of this BulkexportsV1Export.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this BulkexportsV1Export.

        Contains a dictionary of URL links to nested resources of this Export.

        :return: The links of this BulkexportsV1Export.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this BulkexportsV1Export.

        Contains a dictionary of URL links to nested resources of this Export.

        :param links: The links of this BulkexportsV1Export.
        :type links: object
        """

        self._links = links

    @property
    def resource_type(self):
        """Gets the resource_type of this BulkexportsV1Export.

        The type of communication – Messages, Calls, Conferences, and Participants

        :return: The resource_type of this BulkexportsV1Export.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this BulkexportsV1Export.

        The type of communication – Messages, Calls, Conferences, and Participants

        :param resource_type: The resource_type of this BulkexportsV1Export.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def url(self):
        """Gets the url of this BulkexportsV1Export.

        The URL of this resource.

        :return: The url of this BulkexportsV1Export.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this BulkexportsV1Export.

        The URL of this resource.

        :param url: The url of this BulkexportsV1Export.
        :type url: str
        """

        self._url = url
