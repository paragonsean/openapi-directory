/**
 * Twilio - Bulkexports
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkexports_v1_export_configuration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkexports_v1_export_configuration::OAIBulkexports_v1_export_configuration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkexports_v1_export_configuration::OAIBulkexports_v1_export_configuration() {
    this->initializeModel();
}

OAIBulkexports_v1_export_configuration::~OAIBulkexports_v1_export_configuration() {}

void OAIBulkexports_v1_export_configuration::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_webhook_method_isSet = false;
    m_webhook_method_isValid = false;

    m_webhook_url_isSet = false;
    m_webhook_url_isValid = false;
}

void OAIBulkexports_v1_export_configuration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkexports_v1_export_configuration::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resource_type")]);
    m_resource_type_isSet = !json[QString("resource_type")].isNull() && m_resource_type_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_webhook_method_isValid = ::OpenAPI::fromJsonValue(m_webhook_method, json[QString("webhook_method")]);
    m_webhook_method_isSet = !json[QString("webhook_method")].isNull() && m_webhook_method_isValid;

    m_webhook_url_isValid = ::OpenAPI::fromJsonValue(m_webhook_url, json[QString("webhook_url")]);
    m_webhook_url_isSet = !json[QString("webhook_url")].isNull() && m_webhook_url_isValid;
}

QString OAIBulkexports_v1_export_configuration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkexports_v1_export_configuration::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resource_type"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_webhook_method_isSet) {
        obj.insert(QString("webhook_method"), ::OpenAPI::toJsonValue(m_webhook_method));
    }
    if (m_webhook_url_isSet) {
        obj.insert(QString("webhook_url"), ::OpenAPI::toJsonValue(m_webhook_url));
    }
    return obj;
}

bool OAIBulkexports_v1_export_configuration::isEnabled() const {
    return m_enabled;
}
void OAIBulkexports_v1_export_configuration::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIBulkexports_v1_export_configuration::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIBulkexports_v1_export_configuration::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QString OAIBulkexports_v1_export_configuration::getResourceType() const {
    return m_resource_type;
}
void OAIBulkexports_v1_export_configuration::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIBulkexports_v1_export_configuration::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIBulkexports_v1_export_configuration::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

QString OAIBulkexports_v1_export_configuration::getUrl() const {
    return m_url;
}
void OAIBulkexports_v1_export_configuration::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIBulkexports_v1_export_configuration::is_url_Set() const{
    return m_url_isSet;
}

bool OAIBulkexports_v1_export_configuration::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIBulkexports_v1_export_configuration::getWebhookMethod() const {
    return m_webhook_method;
}
void OAIBulkexports_v1_export_configuration::setWebhookMethod(const QString &webhook_method) {
    m_webhook_method = webhook_method;
    m_webhook_method_isSet = true;
}

bool OAIBulkexports_v1_export_configuration::is_webhook_method_Set() const{
    return m_webhook_method_isSet;
}

bool OAIBulkexports_v1_export_configuration::is_webhook_method_Valid() const{
    return m_webhook_method_isValid;
}

QString OAIBulkexports_v1_export_configuration::getWebhookUrl() const {
    return m_webhook_url;
}
void OAIBulkexports_v1_export_configuration::setWebhookUrl(const QString &webhook_url) {
    m_webhook_url = webhook_url;
    m_webhook_url_isSet = true;
}

bool OAIBulkexports_v1_export_configuration::is_webhook_url_Set() const{
    return m_webhook_url_isSet;
}

bool OAIBulkexports_v1_export_configuration::is_webhook_url_Valid() const{
    return m_webhook_url_isValid;
}

bool OAIBulkexports_v1_export_configuration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkexports_v1_export_configuration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
