/**
 * Twilio - Bulkexports
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkexports_v1_export_day.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkexports_v1_export_day::OAIBulkexports_v1_export_day(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkexports_v1_export_day::OAIBulkexports_v1_export_day() {
    this->initializeModel();
}

OAIBulkexports_v1_export_day::~OAIBulkexports_v1_export_day() {}

void OAIBulkexports_v1_export_day::initializeModel() {

    m_create_date_isSet = false;
    m_create_date_isValid = false;

    m_day_isSet = false;
    m_day_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAIBulkexports_v1_export_day::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkexports_v1_export_day::fromJsonObject(QJsonObject json) {

    m_create_date_isValid = ::OpenAPI::fromJsonValue(m_create_date, json[QString("create_date")]);
    m_create_date_isSet = !json[QString("create_date")].isNull() && m_create_date_isValid;

    m_day_isValid = ::OpenAPI::fromJsonValue(m_day, json[QString("day")]);
    m_day_isSet = !json[QString("day")].isNull() && m_day_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resource_type")]);
    m_resource_type_isSet = !json[QString("resource_type")].isNull() && m_resource_type_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAIBulkexports_v1_export_day::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkexports_v1_export_day::asJsonObject() const {
    QJsonObject obj;
    if (m_create_date_isSet) {
        obj.insert(QString("create_date"), ::OpenAPI::toJsonValue(m_create_date));
    }
    if (m_day_isSet) {
        obj.insert(QString("day"), ::OpenAPI::toJsonValue(m_day));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resource_type"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

QString OAIBulkexports_v1_export_day::getCreateDate() const {
    return m_create_date;
}
void OAIBulkexports_v1_export_day::setCreateDate(const QString &create_date) {
    m_create_date = create_date;
    m_create_date_isSet = true;
}

bool OAIBulkexports_v1_export_day::is_create_date_Set() const{
    return m_create_date_isSet;
}

bool OAIBulkexports_v1_export_day::is_create_date_Valid() const{
    return m_create_date_isValid;
}

QString OAIBulkexports_v1_export_day::getDay() const {
    return m_day;
}
void OAIBulkexports_v1_export_day::setDay(const QString &day) {
    m_day = day;
    m_day_isSet = true;
}

bool OAIBulkexports_v1_export_day::is_day_Set() const{
    return m_day_isSet;
}

bool OAIBulkexports_v1_export_day::is_day_Valid() const{
    return m_day_isValid;
}

QString OAIBulkexports_v1_export_day::getFriendlyName() const {
    return m_friendly_name;
}
void OAIBulkexports_v1_export_day::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIBulkexports_v1_export_day::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIBulkexports_v1_export_day::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIBulkexports_v1_export_day::getResourceType() const {
    return m_resource_type;
}
void OAIBulkexports_v1_export_day::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAIBulkexports_v1_export_day::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAIBulkexports_v1_export_day::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

qint32 OAIBulkexports_v1_export_day::getSize() const {
    return m_size;
}
void OAIBulkexports_v1_export_day::setSize(const qint32 &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIBulkexports_v1_export_day::is_size_Set() const{
    return m_size_isSet;
}

bool OAIBulkexports_v1_export_day::is_size_Valid() const{
    return m_size_isValid;
}

bool OAIBulkexports_v1_export_day::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkexports_v1_export_day::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
