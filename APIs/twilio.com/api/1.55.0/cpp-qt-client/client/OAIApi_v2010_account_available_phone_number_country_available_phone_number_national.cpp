/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_available_phone_number_country_available_phone_number_national.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::OAIApi_v2010_account_available_phone_number_country_available_phone_number_national(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::OAIApi_v2010_account_available_phone_number_country_available_phone_number_national() {
    this->initializeModel();
}

OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::~OAIApi_v2010_account_available_phone_number_country_available_phone_number_national() {}

void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::initializeModel() {

    m_address_requirements_isSet = false;
    m_address_requirements_isValid = false;

    m_beta_isSet = false;
    m_beta_isValid = false;

    m_capabilities_isSet = false;
    m_capabilities_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_iso_country_isSet = false;
    m_iso_country_isValid = false;

    m_lata_isSet = false;
    m_lata_isValid = false;

    m_latitude_isSet = false;
    m_latitude_isValid = false;

    m_locality_isSet = false;
    m_locality_isValid = false;

    m_longitude_isSet = false;
    m_longitude_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_rate_center_isSet = false;
    m_rate_center_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;
}

void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::fromJsonObject(QJsonObject json) {

    m_address_requirements_isValid = ::OpenAPI::fromJsonValue(m_address_requirements, json[QString("address_requirements")]);
    m_address_requirements_isSet = !json[QString("address_requirements")].isNull() && m_address_requirements_isValid;

    m_beta_isValid = ::OpenAPI::fromJsonValue(m_beta, json[QString("beta")]);
    m_beta_isSet = !json[QString("beta")].isNull() && m_beta_isValid;

    m_capabilities_isValid = ::OpenAPI::fromJsonValue(m_capabilities, json[QString("capabilities")]);
    m_capabilities_isSet = !json[QString("capabilities")].isNull() && m_capabilities_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_iso_country_isValid = ::OpenAPI::fromJsonValue(m_iso_country, json[QString("iso_country")]);
    m_iso_country_isSet = !json[QString("iso_country")].isNull() && m_iso_country_isValid;

    m_lata_isValid = ::OpenAPI::fromJsonValue(m_lata, json[QString("lata")]);
    m_lata_isSet = !json[QString("lata")].isNull() && m_lata_isValid;

    m_latitude_isValid = ::OpenAPI::fromJsonValue(m_latitude, json[QString("latitude")]);
    m_latitude_isSet = !json[QString("latitude")].isNull() && m_latitude_isValid;

    m_locality_isValid = ::OpenAPI::fromJsonValue(m_locality, json[QString("locality")]);
    m_locality_isSet = !json[QString("locality")].isNull() && m_locality_isValid;

    m_longitude_isValid = ::OpenAPI::fromJsonValue(m_longitude, json[QString("longitude")]);
    m_longitude_isSet = !json[QString("longitude")].isNull() && m_longitude_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phone_number")]);
    m_phone_number_isSet = !json[QString("phone_number")].isNull() && m_phone_number_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("postal_code")]);
    m_postal_code_isSet = !json[QString("postal_code")].isNull() && m_postal_code_isValid;

    m_rate_center_isValid = ::OpenAPI::fromJsonValue(m_rate_center, json[QString("rate_center")]);
    m_rate_center_isSet = !json[QString("rate_center")].isNull() && m_rate_center_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::asJsonObject() const {
    QJsonObject obj;
    if (m_address_requirements_isSet) {
        obj.insert(QString("address_requirements"), ::OpenAPI::toJsonValue(m_address_requirements));
    }
    if (m_beta_isSet) {
        obj.insert(QString("beta"), ::OpenAPI::toJsonValue(m_beta));
    }
    if (m_capabilities.isSet()) {
        obj.insert(QString("capabilities"), ::OpenAPI::toJsonValue(m_capabilities));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_iso_country_isSet) {
        obj.insert(QString("iso_country"), ::OpenAPI::toJsonValue(m_iso_country));
    }
    if (m_lata_isSet) {
        obj.insert(QString("lata"), ::OpenAPI::toJsonValue(m_lata));
    }
    if (m_latitude_isSet) {
        obj.insert(QString("latitude"), ::OpenAPI::toJsonValue(m_latitude));
    }
    if (m_locality_isSet) {
        obj.insert(QString("locality"), ::OpenAPI::toJsonValue(m_locality));
    }
    if (m_longitude_isSet) {
        obj.insert(QString("longitude"), ::OpenAPI::toJsonValue(m_longitude));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phone_number"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("postal_code"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_rate_center_isSet) {
        obj.insert(QString("rate_center"), ::OpenAPI::toJsonValue(m_rate_center));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    return obj;
}

QString OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::getAddressRequirements() const {
    return m_address_requirements;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setAddressRequirements(const QString &address_requirements) {
    m_address_requirements = address_requirements;
    m_address_requirements_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_address_requirements_Set() const{
    return m_address_requirements_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_address_requirements_Valid() const{
    return m_address_requirements_isValid;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::isBeta() const {
    return m_beta;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setBeta(const bool &beta) {
    m_beta = beta;
    m_beta_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_beta_Set() const{
    return m_beta_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_beta_Valid() const{
    return m_beta_isValid;
}

OAIApi_v2010_account_available_phone_number_country_available_phone_number_local_capabilities OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::getCapabilities() const {
    return m_capabilities;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setCapabilities(const OAIApi_v2010_account_available_phone_number_country_available_phone_number_local_capabilities &capabilities) {
    m_capabilities = capabilities;
    m_capabilities_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_capabilities_Set() const{
    return m_capabilities_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_capabilities_Valid() const{
    return m_capabilities_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::getFriendlyName() const {
    return m_friendly_name;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::getIsoCountry() const {
    return m_iso_country;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setIsoCountry(const QString &iso_country) {
    m_iso_country = iso_country;
    m_iso_country_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_iso_country_Set() const{
    return m_iso_country_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_iso_country_Valid() const{
    return m_iso_country_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::getLata() const {
    return m_lata;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setLata(const QString &lata) {
    m_lata = lata;
    m_lata_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_lata_Set() const{
    return m_lata_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_lata_Valid() const{
    return m_lata_isValid;
}

double OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::getLatitude() const {
    return m_latitude;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setLatitude(const double &latitude) {
    m_latitude = latitude;
    m_latitude_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_latitude_Set() const{
    return m_latitude_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_latitude_Valid() const{
    return m_latitude_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::getLocality() const {
    return m_locality;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setLocality(const QString &locality) {
    m_locality = locality;
    m_locality_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_locality_Set() const{
    return m_locality_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_locality_Valid() const{
    return m_locality_isValid;
}

double OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::getLongitude() const {
    return m_longitude;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setLongitude(const double &longitude) {
    m_longitude = longitude;
    m_longitude_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_longitude_Set() const{
    return m_longitude_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_longitude_Valid() const{
    return m_longitude_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::getPhoneNumber() const {
    return m_phone_number;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::getPostalCode() const {
    return m_postal_code;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::getRateCenter() const {
    return m_rate_center;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setRateCenter(const QString &rate_center) {
    m_rate_center = rate_center;
    m_rate_center_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_rate_center_Set() const{
    return m_rate_center_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_rate_center_Valid() const{
    return m_rate_center_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::getRegion() const {
    return m_region;
}
void OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_region_Set() const{
    return m_region_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::is_region_Valid() const{
    return m_region_isValid;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_requirements_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beta_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_capabilities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locality_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_longitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rate_center_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_available_phone_number_country_available_phone_number_national::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
