/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApi_v2010_account_recording.h
 *
 * 
 */

#ifndef OAIApi_v2010_account_recording_H
#define OAIApi_v2010_account_recording_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIRecording_enum_source.h"
#include "OAIRecording_enum_status.h"
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApi_v2010_account_recording : public OAIObject {
public:
    OAIApi_v2010_account_recording();
    OAIApi_v2010_account_recording(QString json);
    ~OAIApi_v2010_account_recording() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getApiVersion() const;
    void setApiVersion(const QString &api_version);
    bool is_api_version_Set() const;
    bool is_api_version_Valid() const;

    QString getCallSid() const;
    void setCallSid(const QString &call_sid);
    bool is_call_sid_Set() const;
    bool is_call_sid_Valid() const;

    qint32 getChannels() const;
    void setChannels(const qint32 &channels);
    bool is_channels_Set() const;
    bool is_channels_Valid() const;

    QString getConferenceSid() const;
    void setConferenceSid(const QString &conference_sid);
    bool is_conference_sid_Set() const;
    bool is_conference_sid_Valid() const;

    QString getDateCreated() const;
    void setDateCreated(const QString &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QString getDateUpdated() const;
    void setDateUpdated(const QString &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QJsonValue getEncryptionDetails() const;
    void setEncryptionDetails(const QJsonValue &encryption_details);
    bool is_encryption_details_Set() const;
    bool is_encryption_details_Valid() const;

    qint32 getErrorCode() const;
    void setErrorCode(const qint32 &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getMediaUrl() const;
    void setMediaUrl(const QString &media_url);
    bool is_media_url_Set() const;
    bool is_media_url_Valid() const;

    QString getPrice() const;
    void setPrice(const QString &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getPriceUnit() const;
    void setPriceUnit(const QString &price_unit);
    bool is_price_unit_Set() const;
    bool is_price_unit_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    OAIRecording_enum_source getSource() const;
    void setSource(const OAIRecording_enum_source &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    OAIRecording_enum_status getStatus() const;
    void setStatus(const OAIRecording_enum_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIObject getSubresourceUris() const;
    void setSubresourceUris(const OAIObject &subresource_uris);
    bool is_subresource_uris_Set() const;
    bool is_subresource_uris_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_api_version;
    bool m_api_version_isSet;
    bool m_api_version_isValid;

    QString m_call_sid;
    bool m_call_sid_isSet;
    bool m_call_sid_isValid;

    qint32 m_channels;
    bool m_channels_isSet;
    bool m_channels_isValid;

    QString m_conference_sid;
    bool m_conference_sid_isSet;
    bool m_conference_sid_isValid;

    QString m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QString m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QJsonValue m_encryption_details;
    bool m_encryption_details_isSet;
    bool m_encryption_details_isValid;

    qint32 m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_media_url;
    bool m_media_url_isSet;
    bool m_media_url_isValid;

    QString m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_price_unit;
    bool m_price_unit_isSet;
    bool m_price_unit_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    OAIRecording_enum_source m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    OAIRecording_enum_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIObject m_subresource_uris;
    bool m_subresource_uris_isSet;
    bool m_subresource_uris_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApi_v2010_account_recording)

#endif // OAIApi_v2010_account_recording_H
