/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUsage_trigger_enum_recurring.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUsage_trigger_enum_recurring::OAIUsage_trigger_enum_recurring(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUsage_trigger_enum_recurring::OAIUsage_trigger_enum_recurring() {
    this->initializeModel();
}

OAIUsage_trigger_enum_recurring::~OAIUsage_trigger_enum_recurring() {}

void OAIUsage_trigger_enum_recurring::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUsage_trigger_enum_recurring::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUsage_trigger_enum_recurring::fromJson(QString jsonString) {
    
    if ( jsonString.compare("daily", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_trigger_enum_recurring::DAILY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("monthly", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_trigger_enum_recurring::MONTHLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("yearly", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_trigger_enum_recurring::YEARLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("alltime", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_trigger_enum_recurring::ALLTIME;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUsage_trigger_enum_recurring::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUsage_trigger_enum_recurring::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUsage_trigger_enum_recurring::DAILY:
            val = "daily";
            break;
        case eOAIUsage_trigger_enum_recurring::MONTHLY:
            val = "monthly";
            break;
        case eOAIUsage_trigger_enum_recurring::YEARLY:
            val = "yearly";
            break;
        case eOAIUsage_trigger_enum_recurring::ALLTIME:
            val = "alltime";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUsage_trigger_enum_recurring::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUsage_trigger_enum_recurring::eOAIUsage_trigger_enum_recurring OAIUsage_trigger_enum_recurring::getValue() const {
    return m_value;
}

void OAIUsage_trigger_enum_recurring::setValue(const OAIUsage_trigger_enum_recurring::eOAIUsage_trigger_enum_recurring& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUsage_trigger_enum_recurring::isSet() const {
    
    return m_value_isSet;
}

bool OAIUsage_trigger_enum_recurring::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
