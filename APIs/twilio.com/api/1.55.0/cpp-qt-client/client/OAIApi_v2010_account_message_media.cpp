/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_message_media.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_message_media::OAIApi_v2010_account_message_media(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_message_media::OAIApi_v2010_account_message_media() {
    this->initializeModel();
}

OAIApi_v2010_account_message_media::~OAIApi_v2010_account_message_media() {}

void OAIApi_v2010_account_message_media::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_content_type_isSet = false;
    m_content_type_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_parent_sid_isSet = false;
    m_parent_sid_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIApi_v2010_account_message_media::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_message_media::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_content_type_isValid = ::OpenAPI::fromJsonValue(m_content_type, json[QString("content_type")]);
    m_content_type_isSet = !json[QString("content_type")].isNull() && m_content_type_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_parent_sid_isValid = ::OpenAPI::fromJsonValue(m_parent_sid, json[QString("parent_sid")]);
    m_parent_sid_isSet = !json[QString("parent_sid")].isNull() && m_parent_sid_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIApi_v2010_account_message_media::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_message_media::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_content_type_isSet) {
        obj.insert(QString("content_type"), ::OpenAPI::toJsonValue(m_content_type));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_parent_sid_isSet) {
        obj.insert(QString("parent_sid"), ::OpenAPI::toJsonValue(m_parent_sid));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIApi_v2010_account_message_media::getAccountSid() const {
    return m_account_sid;
}
void OAIApi_v2010_account_message_media::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIApi_v2010_account_message_media::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIApi_v2010_account_message_media::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIApi_v2010_account_message_media::getContentType() const {
    return m_content_type;
}
void OAIApi_v2010_account_message_media::setContentType(const QString &content_type) {
    m_content_type = content_type;
    m_content_type_isSet = true;
}

bool OAIApi_v2010_account_message_media::is_content_type_Set() const{
    return m_content_type_isSet;
}

bool OAIApi_v2010_account_message_media::is_content_type_Valid() const{
    return m_content_type_isValid;
}

QString OAIApi_v2010_account_message_media::getDateCreated() const {
    return m_date_created;
}
void OAIApi_v2010_account_message_media::setDateCreated(const QString &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIApi_v2010_account_message_media::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIApi_v2010_account_message_media::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIApi_v2010_account_message_media::getDateUpdated() const {
    return m_date_updated;
}
void OAIApi_v2010_account_message_media::setDateUpdated(const QString &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIApi_v2010_account_message_media::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIApi_v2010_account_message_media::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIApi_v2010_account_message_media::getParentSid() const {
    return m_parent_sid;
}
void OAIApi_v2010_account_message_media::setParentSid(const QString &parent_sid) {
    m_parent_sid = parent_sid;
    m_parent_sid_isSet = true;
}

bool OAIApi_v2010_account_message_media::is_parent_sid_Set() const{
    return m_parent_sid_isSet;
}

bool OAIApi_v2010_account_message_media::is_parent_sid_Valid() const{
    return m_parent_sid_isValid;
}

QString OAIApi_v2010_account_message_media::getSid() const {
    return m_sid;
}
void OAIApi_v2010_account_message_media::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIApi_v2010_account_message_media::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIApi_v2010_account_message_media::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIApi_v2010_account_message_media::getUri() const {
    return m_uri;
}
void OAIApi_v2010_account_message_media::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIApi_v2010_account_message_media::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIApi_v2010_account_message_media::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIApi_v2010_account_message_media::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_message_media::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
