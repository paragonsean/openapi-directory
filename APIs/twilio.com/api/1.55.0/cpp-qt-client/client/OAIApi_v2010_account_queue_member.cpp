/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_queue_member.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_queue_member::OAIApi_v2010_account_queue_member(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_queue_member::OAIApi_v2010_account_queue_member() {
    this->initializeModel();
}

OAIApi_v2010_account_queue_member::~OAIApi_v2010_account_queue_member() {}

void OAIApi_v2010_account_queue_member::initializeModel() {

    m_call_sid_isSet = false;
    m_call_sid_isValid = false;

    m_date_enqueued_isSet = false;
    m_date_enqueued_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;

    m_queue_sid_isSet = false;
    m_queue_sid_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;

    m_wait_time_isSet = false;
    m_wait_time_isValid = false;
}

void OAIApi_v2010_account_queue_member::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_queue_member::fromJsonObject(QJsonObject json) {

    m_call_sid_isValid = ::OpenAPI::fromJsonValue(m_call_sid, json[QString("call_sid")]);
    m_call_sid_isSet = !json[QString("call_sid")].isNull() && m_call_sid_isValid;

    m_date_enqueued_isValid = ::OpenAPI::fromJsonValue(m_date_enqueued, json[QString("date_enqueued")]);
    m_date_enqueued_isSet = !json[QString("date_enqueued")].isNull() && m_date_enqueued_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;

    m_queue_sid_isValid = ::OpenAPI::fromJsonValue(m_queue_sid, json[QString("queue_sid")]);
    m_queue_sid_isSet = !json[QString("queue_sid")].isNull() && m_queue_sid_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;

    m_wait_time_isValid = ::OpenAPI::fromJsonValue(m_wait_time, json[QString("wait_time")]);
    m_wait_time_isSet = !json[QString("wait_time")].isNull() && m_wait_time_isValid;
}

QString OAIApi_v2010_account_queue_member::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_queue_member::asJsonObject() const {
    QJsonObject obj;
    if (m_call_sid_isSet) {
        obj.insert(QString("call_sid"), ::OpenAPI::toJsonValue(m_call_sid));
    }
    if (m_date_enqueued_isSet) {
        obj.insert(QString("date_enqueued"), ::OpenAPI::toJsonValue(m_date_enqueued));
    }
    if (m_position_isSet) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_queue_sid_isSet) {
        obj.insert(QString("queue_sid"), ::OpenAPI::toJsonValue(m_queue_sid));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    if (m_wait_time_isSet) {
        obj.insert(QString("wait_time"), ::OpenAPI::toJsonValue(m_wait_time));
    }
    return obj;
}

QString OAIApi_v2010_account_queue_member::getCallSid() const {
    return m_call_sid;
}
void OAIApi_v2010_account_queue_member::setCallSid(const QString &call_sid) {
    m_call_sid = call_sid;
    m_call_sid_isSet = true;
}

bool OAIApi_v2010_account_queue_member::is_call_sid_Set() const{
    return m_call_sid_isSet;
}

bool OAIApi_v2010_account_queue_member::is_call_sid_Valid() const{
    return m_call_sid_isValid;
}

QString OAIApi_v2010_account_queue_member::getDateEnqueued() const {
    return m_date_enqueued;
}
void OAIApi_v2010_account_queue_member::setDateEnqueued(const QString &date_enqueued) {
    m_date_enqueued = date_enqueued;
    m_date_enqueued_isSet = true;
}

bool OAIApi_v2010_account_queue_member::is_date_enqueued_Set() const{
    return m_date_enqueued_isSet;
}

bool OAIApi_v2010_account_queue_member::is_date_enqueued_Valid() const{
    return m_date_enqueued_isValid;
}

qint32 OAIApi_v2010_account_queue_member::getPosition() const {
    return m_position;
}
void OAIApi_v2010_account_queue_member::setPosition(const qint32 &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIApi_v2010_account_queue_member::is_position_Set() const{
    return m_position_isSet;
}

bool OAIApi_v2010_account_queue_member::is_position_Valid() const{
    return m_position_isValid;
}

QString OAIApi_v2010_account_queue_member::getQueueSid() const {
    return m_queue_sid;
}
void OAIApi_v2010_account_queue_member::setQueueSid(const QString &queue_sid) {
    m_queue_sid = queue_sid;
    m_queue_sid_isSet = true;
}

bool OAIApi_v2010_account_queue_member::is_queue_sid_Set() const{
    return m_queue_sid_isSet;
}

bool OAIApi_v2010_account_queue_member::is_queue_sid_Valid() const{
    return m_queue_sid_isValid;
}

QString OAIApi_v2010_account_queue_member::getUri() const {
    return m_uri;
}
void OAIApi_v2010_account_queue_member::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIApi_v2010_account_queue_member::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIApi_v2010_account_queue_member::is_uri_Valid() const{
    return m_uri_isValid;
}

qint32 OAIApi_v2010_account_queue_member::getWaitTime() const {
    return m_wait_time;
}
void OAIApi_v2010_account_queue_member::setWaitTime(const qint32 &wait_time) {
    m_wait_time = wait_time;
    m_wait_time_isSet = true;
}

bool OAIApi_v2010_account_queue_member::is_wait_time_Set() const{
    return m_wait_time_isSet;
}

bool OAIApi_v2010_account_queue_member::is_wait_time_Valid() const{
    return m_wait_time_isValid;
}

bool OAIApi_v2010_account_queue_member::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_call_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_enqueued_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wait_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_queue_member::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
