/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApi_v2010_account_usage_usage_trigger.h
 *
 * 
 */

#ifndef OAIApi_v2010_account_usage_usage_trigger_H
#define OAIApi_v2010_account_usage_usage_trigger_H

#include <QJsonObject>

#include "OAIUsage_trigger_enum_recurring.h"
#include "OAIUsage_trigger_enum_trigger_field.h"
#include "OAIUsage_trigger_enum_usage_category.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApi_v2010_account_usage_usage_trigger : public OAIObject {
public:
    OAIApi_v2010_account_usage_usage_trigger();
    OAIApi_v2010_account_usage_usage_trigger(QString json);
    ~OAIApi_v2010_account_usage_usage_trigger() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getApiVersion() const;
    void setApiVersion(const QString &api_version);
    bool is_api_version_Set() const;
    bool is_api_version_Valid() const;

    QString getCallbackMethod() const;
    void setCallbackMethod(const QString &callback_method);
    bool is_callback_method_Set() const;
    bool is_callback_method_Valid() const;

    QString getCallbackUrl() const;
    void setCallbackUrl(const QString &callback_url);
    bool is_callback_url_Set() const;
    bool is_callback_url_Valid() const;

    QString getCurrentValue() const;
    void setCurrentValue(const QString &current_value);
    bool is_current_value_Set() const;
    bool is_current_value_Valid() const;

    QString getDateCreated() const;
    void setDateCreated(const QString &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QString getDateFired() const;
    void setDateFired(const QString &date_fired);
    bool is_date_fired_Set() const;
    bool is_date_fired_Valid() const;

    QString getDateUpdated() const;
    void setDateUpdated(const QString &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    OAIUsage_trigger_enum_recurring getRecurring() const;
    void setRecurring(const OAIUsage_trigger_enum_recurring &recurring);
    bool is_recurring_Set() const;
    bool is_recurring_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    OAIUsage_trigger_enum_trigger_field getTriggerBy() const;
    void setTriggerBy(const OAIUsage_trigger_enum_trigger_field &trigger_by);
    bool is_trigger_by_Set() const;
    bool is_trigger_by_Valid() const;

    QString getTriggerValue() const;
    void setTriggerValue(const QString &trigger_value);
    bool is_trigger_value_Set() const;
    bool is_trigger_value_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    OAIUsage_trigger_enum_usage_category getUsageCategory() const;
    void setUsageCategory(const OAIUsage_trigger_enum_usage_category &usage_category);
    bool is_usage_category_Set() const;
    bool is_usage_category_Valid() const;

    QString getUsageRecordUri() const;
    void setUsageRecordUri(const QString &usage_record_uri);
    bool is_usage_record_uri_Set() const;
    bool is_usage_record_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_api_version;
    bool m_api_version_isSet;
    bool m_api_version_isValid;

    QString m_callback_method;
    bool m_callback_method_isSet;
    bool m_callback_method_isValid;

    QString m_callback_url;
    bool m_callback_url_isSet;
    bool m_callback_url_isValid;

    QString m_current_value;
    bool m_current_value_isSet;
    bool m_current_value_isValid;

    QString m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QString m_date_fired;
    bool m_date_fired_isSet;
    bool m_date_fired_isValid;

    QString m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    OAIUsage_trigger_enum_recurring m_recurring;
    bool m_recurring_isSet;
    bool m_recurring_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    OAIUsage_trigger_enum_trigger_field m_trigger_by;
    bool m_trigger_by_isSet;
    bool m_trigger_by_isValid;

    QString m_trigger_value;
    bool m_trigger_value_isSet;
    bool m_trigger_value_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;

    OAIUsage_trigger_enum_usage_category m_usage_category;
    bool m_usage_category_isSet;
    bool m_usage_category_isValid;

    QString m_usage_record_uri;
    bool m_usage_record_uri_isSet;
    bool m_usage_record_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApi_v2010_account_usage_usage_trigger)

#endif // OAIApi_v2010_account_usage_usage_trigger_H
