/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICall_recording_enum_source.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICall_recording_enum_source::OAICall_recording_enum_source(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICall_recording_enum_source::OAICall_recording_enum_source() {
    this->initializeModel();
}

OAICall_recording_enum_source::~OAICall_recording_enum_source() {}

void OAICall_recording_enum_source::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICall_recording_enum_source::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICall_recording_enum_source::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DialVerb", Qt::CaseInsensitive) == 0) {
        m_value = eOAICall_recording_enum_source::DIALVERB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Conference", Qt::CaseInsensitive) == 0) {
        m_value = eOAICall_recording_enum_source::CONFERENCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OutboundAPI", Qt::CaseInsensitive) == 0) {
        m_value = eOAICall_recording_enum_source::OUTBOUNDAPI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Trunking", Qt::CaseInsensitive) == 0) {
        m_value = eOAICall_recording_enum_source::TRUNKING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RecordVerb", Qt::CaseInsensitive) == 0) {
        m_value = eOAICall_recording_enum_source::RECORDVERB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("StartCallRecordingAPI", Qt::CaseInsensitive) == 0) {
        m_value = eOAICall_recording_enum_source::STARTCALLRECORDINGAPI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("StartConferenceRecordingAPI", Qt::CaseInsensitive) == 0) {
        m_value = eOAICall_recording_enum_source::STARTCONFERENCERECORDINGAPI;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICall_recording_enum_source::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICall_recording_enum_source::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICall_recording_enum_source::DIALVERB:
            val = "DialVerb";
            break;
        case eOAICall_recording_enum_source::CONFERENCE:
            val = "Conference";
            break;
        case eOAICall_recording_enum_source::OUTBOUNDAPI:
            val = "OutboundAPI";
            break;
        case eOAICall_recording_enum_source::TRUNKING:
            val = "Trunking";
            break;
        case eOAICall_recording_enum_source::RECORDVERB:
            val = "RecordVerb";
            break;
        case eOAICall_recording_enum_source::STARTCALLRECORDINGAPI:
            val = "StartCallRecordingAPI";
            break;
        case eOAICall_recording_enum_source::STARTCONFERENCERECORDINGAPI:
            val = "StartConferenceRecordingAPI";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICall_recording_enum_source::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICall_recording_enum_source::eOAICall_recording_enum_source OAICall_recording_enum_source::getValue() const {
    return m_value;
}

void OAICall_recording_enum_source::setValue(const OAICall_recording_enum_source::eOAICall_recording_enum_source& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICall_recording_enum_source::isSet() const {
    
    return m_value_isSet;
}

bool OAICall_recording_enum_source::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
