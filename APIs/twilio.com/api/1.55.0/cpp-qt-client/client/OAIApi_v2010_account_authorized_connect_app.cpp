/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_authorized_connect_app.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_authorized_connect_app::OAIApi_v2010_account_authorized_connect_app(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_authorized_connect_app::OAIApi_v2010_account_authorized_connect_app() {
    this->initializeModel();
}

OAIApi_v2010_account_authorized_connect_app::~OAIApi_v2010_account_authorized_connect_app() {}

void OAIApi_v2010_account_authorized_connect_app::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_connect_app_company_name_isSet = false;
    m_connect_app_company_name_isValid = false;

    m_connect_app_description_isSet = false;
    m_connect_app_description_isValid = false;

    m_connect_app_friendly_name_isSet = false;
    m_connect_app_friendly_name_isValid = false;

    m_connect_app_homepage_url_isSet = false;
    m_connect_app_homepage_url_isValid = false;

    m_connect_app_sid_isSet = false;
    m_connect_app_sid_isValid = false;

    m_permissions_isSet = false;
    m_permissions_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIApi_v2010_account_authorized_connect_app::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_authorized_connect_app::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_connect_app_company_name_isValid = ::OpenAPI::fromJsonValue(m_connect_app_company_name, json[QString("connect_app_company_name")]);
    m_connect_app_company_name_isSet = !json[QString("connect_app_company_name")].isNull() && m_connect_app_company_name_isValid;

    m_connect_app_description_isValid = ::OpenAPI::fromJsonValue(m_connect_app_description, json[QString("connect_app_description")]);
    m_connect_app_description_isSet = !json[QString("connect_app_description")].isNull() && m_connect_app_description_isValid;

    m_connect_app_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_connect_app_friendly_name, json[QString("connect_app_friendly_name")]);
    m_connect_app_friendly_name_isSet = !json[QString("connect_app_friendly_name")].isNull() && m_connect_app_friendly_name_isValid;

    m_connect_app_homepage_url_isValid = ::OpenAPI::fromJsonValue(m_connect_app_homepage_url, json[QString("connect_app_homepage_url")]);
    m_connect_app_homepage_url_isSet = !json[QString("connect_app_homepage_url")].isNull() && m_connect_app_homepage_url_isValid;

    m_connect_app_sid_isValid = ::OpenAPI::fromJsonValue(m_connect_app_sid, json[QString("connect_app_sid")]);
    m_connect_app_sid_isSet = !json[QString("connect_app_sid")].isNull() && m_connect_app_sid_isValid;

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("permissions")]);
    m_permissions_isSet = !json[QString("permissions")].isNull() && m_permissions_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIApi_v2010_account_authorized_connect_app::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_authorized_connect_app::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_connect_app_company_name_isSet) {
        obj.insert(QString("connect_app_company_name"), ::OpenAPI::toJsonValue(m_connect_app_company_name));
    }
    if (m_connect_app_description_isSet) {
        obj.insert(QString("connect_app_description"), ::OpenAPI::toJsonValue(m_connect_app_description));
    }
    if (m_connect_app_friendly_name_isSet) {
        obj.insert(QString("connect_app_friendly_name"), ::OpenAPI::toJsonValue(m_connect_app_friendly_name));
    }
    if (m_connect_app_homepage_url_isSet) {
        obj.insert(QString("connect_app_homepage_url"), ::OpenAPI::toJsonValue(m_connect_app_homepage_url));
    }
    if (m_connect_app_sid_isSet) {
        obj.insert(QString("connect_app_sid"), ::OpenAPI::toJsonValue(m_connect_app_sid));
    }
    if (m_permissions.size() > 0) {
        obj.insert(QString("permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIApi_v2010_account_authorized_connect_app::getAccountSid() const {
    return m_account_sid;
}
void OAIApi_v2010_account_authorized_connect_app::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIApi_v2010_account_authorized_connect_app::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIApi_v2010_account_authorized_connect_app::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIApi_v2010_account_authorized_connect_app::getConnectAppCompanyName() const {
    return m_connect_app_company_name;
}
void OAIApi_v2010_account_authorized_connect_app::setConnectAppCompanyName(const QString &connect_app_company_name) {
    m_connect_app_company_name = connect_app_company_name;
    m_connect_app_company_name_isSet = true;
}

bool OAIApi_v2010_account_authorized_connect_app::is_connect_app_company_name_Set() const{
    return m_connect_app_company_name_isSet;
}

bool OAIApi_v2010_account_authorized_connect_app::is_connect_app_company_name_Valid() const{
    return m_connect_app_company_name_isValid;
}

QString OAIApi_v2010_account_authorized_connect_app::getConnectAppDescription() const {
    return m_connect_app_description;
}
void OAIApi_v2010_account_authorized_connect_app::setConnectAppDescription(const QString &connect_app_description) {
    m_connect_app_description = connect_app_description;
    m_connect_app_description_isSet = true;
}

bool OAIApi_v2010_account_authorized_connect_app::is_connect_app_description_Set() const{
    return m_connect_app_description_isSet;
}

bool OAIApi_v2010_account_authorized_connect_app::is_connect_app_description_Valid() const{
    return m_connect_app_description_isValid;
}

QString OAIApi_v2010_account_authorized_connect_app::getConnectAppFriendlyName() const {
    return m_connect_app_friendly_name;
}
void OAIApi_v2010_account_authorized_connect_app::setConnectAppFriendlyName(const QString &connect_app_friendly_name) {
    m_connect_app_friendly_name = connect_app_friendly_name;
    m_connect_app_friendly_name_isSet = true;
}

bool OAIApi_v2010_account_authorized_connect_app::is_connect_app_friendly_name_Set() const{
    return m_connect_app_friendly_name_isSet;
}

bool OAIApi_v2010_account_authorized_connect_app::is_connect_app_friendly_name_Valid() const{
    return m_connect_app_friendly_name_isValid;
}

QString OAIApi_v2010_account_authorized_connect_app::getConnectAppHomepageUrl() const {
    return m_connect_app_homepage_url;
}
void OAIApi_v2010_account_authorized_connect_app::setConnectAppHomepageUrl(const QString &connect_app_homepage_url) {
    m_connect_app_homepage_url = connect_app_homepage_url;
    m_connect_app_homepage_url_isSet = true;
}

bool OAIApi_v2010_account_authorized_connect_app::is_connect_app_homepage_url_Set() const{
    return m_connect_app_homepage_url_isSet;
}

bool OAIApi_v2010_account_authorized_connect_app::is_connect_app_homepage_url_Valid() const{
    return m_connect_app_homepage_url_isValid;
}

QString OAIApi_v2010_account_authorized_connect_app::getConnectAppSid() const {
    return m_connect_app_sid;
}
void OAIApi_v2010_account_authorized_connect_app::setConnectAppSid(const QString &connect_app_sid) {
    m_connect_app_sid = connect_app_sid;
    m_connect_app_sid_isSet = true;
}

bool OAIApi_v2010_account_authorized_connect_app::is_connect_app_sid_Set() const{
    return m_connect_app_sid_isSet;
}

bool OAIApi_v2010_account_authorized_connect_app::is_connect_app_sid_Valid() const{
    return m_connect_app_sid_isValid;
}

QList<OAIAuthorized_connect_app_enum_permission> OAIApi_v2010_account_authorized_connect_app::getPermissions() const {
    return m_permissions;
}
void OAIApi_v2010_account_authorized_connect_app::setPermissions(const QList<OAIAuthorized_connect_app_enum_permission> &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAIApi_v2010_account_authorized_connect_app::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAIApi_v2010_account_authorized_connect_app::is_permissions_Valid() const{
    return m_permissions_isValid;
}

QString OAIApi_v2010_account_authorized_connect_app::getUri() const {
    return m_uri;
}
void OAIApi_v2010_account_authorized_connect_app::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIApi_v2010_account_authorized_connect_app::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIApi_v2010_account_authorized_connect_app::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIApi_v2010_account_authorized_connect_app::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_connect_app_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_connect_app_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_connect_app_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_connect_app_homepage_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_connect_app_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_authorized_connect_app::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
