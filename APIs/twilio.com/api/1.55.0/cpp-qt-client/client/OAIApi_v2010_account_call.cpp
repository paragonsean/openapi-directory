/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_call.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_call::OAIApi_v2010_account_call(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_call::OAIApi_v2010_account_call() {
    this->initializeModel();
}

OAIApi_v2010_account_call::~OAIApi_v2010_account_call() {}

void OAIApi_v2010_account_call::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_answered_by_isSet = false;
    m_answered_by_isValid = false;

    m_api_version_isSet = false;
    m_api_version_isValid = false;

    m_caller_name_isSet = false;
    m_caller_name_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_direction_isSet = false;
    m_direction_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_forwarded_from_isSet = false;
    m_forwarded_from_isValid = false;

    m_from_isSet = false;
    m_from_isValid = false;

    m_from_formatted_isSet = false;
    m_from_formatted_isValid = false;

    m_group_sid_isSet = false;
    m_group_sid_isValid = false;

    m_parent_call_sid_isSet = false;
    m_parent_call_sid_isValid = false;

    m_phone_number_sid_isSet = false;
    m_phone_number_sid_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_price_unit_isSet = false;
    m_price_unit_isValid = false;

    m_queue_time_isSet = false;
    m_queue_time_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_subresource_uris_isSet = false;
    m_subresource_uris_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;

    m_to_formatted_isSet = false;
    m_to_formatted_isValid = false;

    m_trunk_sid_isSet = false;
    m_trunk_sid_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIApi_v2010_account_call::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_call::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_answered_by_isValid = ::OpenAPI::fromJsonValue(m_answered_by, json[QString("answered_by")]);
    m_answered_by_isSet = !json[QString("answered_by")].isNull() && m_answered_by_isValid;

    m_api_version_isValid = ::OpenAPI::fromJsonValue(m_api_version, json[QString("api_version")]);
    m_api_version_isSet = !json[QString("api_version")].isNull() && m_api_version_isValid;

    m_caller_name_isValid = ::OpenAPI::fromJsonValue(m_caller_name, json[QString("caller_name")]);
    m_caller_name_isSet = !json[QString("caller_name")].isNull() && m_caller_name_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_direction_isValid = ::OpenAPI::fromJsonValue(m_direction, json[QString("direction")]);
    m_direction_isSet = !json[QString("direction")].isNull() && m_direction_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("end_time")]);
    m_end_time_isSet = !json[QString("end_time")].isNull() && m_end_time_isValid;

    m_forwarded_from_isValid = ::OpenAPI::fromJsonValue(m_forwarded_from, json[QString("forwarded_from")]);
    m_forwarded_from_isSet = !json[QString("forwarded_from")].isNull() && m_forwarded_from_isValid;

    m_from_isValid = ::OpenAPI::fromJsonValue(m_from, json[QString("from")]);
    m_from_isSet = !json[QString("from")].isNull() && m_from_isValid;

    m_from_formatted_isValid = ::OpenAPI::fromJsonValue(m_from_formatted, json[QString("from_formatted")]);
    m_from_formatted_isSet = !json[QString("from_formatted")].isNull() && m_from_formatted_isValid;

    m_group_sid_isValid = ::OpenAPI::fromJsonValue(m_group_sid, json[QString("group_sid")]);
    m_group_sid_isSet = !json[QString("group_sid")].isNull() && m_group_sid_isValid;

    m_parent_call_sid_isValid = ::OpenAPI::fromJsonValue(m_parent_call_sid, json[QString("parent_call_sid")]);
    m_parent_call_sid_isSet = !json[QString("parent_call_sid")].isNull() && m_parent_call_sid_isValid;

    m_phone_number_sid_isValid = ::OpenAPI::fromJsonValue(m_phone_number_sid, json[QString("phone_number_sid")]);
    m_phone_number_sid_isSet = !json[QString("phone_number_sid")].isNull() && m_phone_number_sid_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_price_unit_isValid = ::OpenAPI::fromJsonValue(m_price_unit, json[QString("price_unit")]);
    m_price_unit_isSet = !json[QString("price_unit")].isNull() && m_price_unit_isValid;

    m_queue_time_isValid = ::OpenAPI::fromJsonValue(m_queue_time, json[QString("queue_time")]);
    m_queue_time_isSet = !json[QString("queue_time")].isNull() && m_queue_time_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("start_time")]);
    m_start_time_isSet = !json[QString("start_time")].isNull() && m_start_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_subresource_uris_isValid = ::OpenAPI::fromJsonValue(m_subresource_uris, json[QString("subresource_uris")]);
    m_subresource_uris_isSet = !json[QString("subresource_uris")].isNull() && m_subresource_uris_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;

    m_to_formatted_isValid = ::OpenAPI::fromJsonValue(m_to_formatted, json[QString("to_formatted")]);
    m_to_formatted_isSet = !json[QString("to_formatted")].isNull() && m_to_formatted_isValid;

    m_trunk_sid_isValid = ::OpenAPI::fromJsonValue(m_trunk_sid, json[QString("trunk_sid")]);
    m_trunk_sid_isSet = !json[QString("trunk_sid")].isNull() && m_trunk_sid_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIApi_v2010_account_call::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_call::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_answered_by_isSet) {
        obj.insert(QString("answered_by"), ::OpenAPI::toJsonValue(m_answered_by));
    }
    if (m_api_version_isSet) {
        obj.insert(QString("api_version"), ::OpenAPI::toJsonValue(m_api_version));
    }
    if (m_caller_name_isSet) {
        obj.insert(QString("caller_name"), ::OpenAPI::toJsonValue(m_caller_name));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_direction_isSet) {
        obj.insert(QString("direction"), ::OpenAPI::toJsonValue(m_direction));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("end_time"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_forwarded_from_isSet) {
        obj.insert(QString("forwarded_from"), ::OpenAPI::toJsonValue(m_forwarded_from));
    }
    if (m_from_isSet) {
        obj.insert(QString("from"), ::OpenAPI::toJsonValue(m_from));
    }
    if (m_from_formatted_isSet) {
        obj.insert(QString("from_formatted"), ::OpenAPI::toJsonValue(m_from_formatted));
    }
    if (m_group_sid_isSet) {
        obj.insert(QString("group_sid"), ::OpenAPI::toJsonValue(m_group_sid));
    }
    if (m_parent_call_sid_isSet) {
        obj.insert(QString("parent_call_sid"), ::OpenAPI::toJsonValue(m_parent_call_sid));
    }
    if (m_phone_number_sid_isSet) {
        obj.insert(QString("phone_number_sid"), ::OpenAPI::toJsonValue(m_phone_number_sid));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_price_unit_isSet) {
        obj.insert(QString("price_unit"), ::OpenAPI::toJsonValue(m_price_unit));
    }
    if (m_queue_time_isSet) {
        obj.insert(QString("queue_time"), ::OpenAPI::toJsonValue(m_queue_time));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("start_time"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_subresource_uris_isSet) {
        obj.insert(QString("subresource_uris"), ::OpenAPI::toJsonValue(m_subresource_uris));
    }
    if (m_to_isSet) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    if (m_to_formatted_isSet) {
        obj.insert(QString("to_formatted"), ::OpenAPI::toJsonValue(m_to_formatted));
    }
    if (m_trunk_sid_isSet) {
        obj.insert(QString("trunk_sid"), ::OpenAPI::toJsonValue(m_trunk_sid));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIApi_v2010_account_call::getAccountSid() const {
    return m_account_sid;
}
void OAIApi_v2010_account_call::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIApi_v2010_account_call::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIApi_v2010_account_call::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIApi_v2010_account_call::getAnsweredBy() const {
    return m_answered_by;
}
void OAIApi_v2010_account_call::setAnsweredBy(const QString &answered_by) {
    m_answered_by = answered_by;
    m_answered_by_isSet = true;
}

bool OAIApi_v2010_account_call::is_answered_by_Set() const{
    return m_answered_by_isSet;
}

bool OAIApi_v2010_account_call::is_answered_by_Valid() const{
    return m_answered_by_isValid;
}

QString OAIApi_v2010_account_call::getApiVersion() const {
    return m_api_version;
}
void OAIApi_v2010_account_call::setApiVersion(const QString &api_version) {
    m_api_version = api_version;
    m_api_version_isSet = true;
}

bool OAIApi_v2010_account_call::is_api_version_Set() const{
    return m_api_version_isSet;
}

bool OAIApi_v2010_account_call::is_api_version_Valid() const{
    return m_api_version_isValid;
}

QString OAIApi_v2010_account_call::getCallerName() const {
    return m_caller_name;
}
void OAIApi_v2010_account_call::setCallerName(const QString &caller_name) {
    m_caller_name = caller_name;
    m_caller_name_isSet = true;
}

bool OAIApi_v2010_account_call::is_caller_name_Set() const{
    return m_caller_name_isSet;
}

bool OAIApi_v2010_account_call::is_caller_name_Valid() const{
    return m_caller_name_isValid;
}

QString OAIApi_v2010_account_call::getDateCreated() const {
    return m_date_created;
}
void OAIApi_v2010_account_call::setDateCreated(const QString &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIApi_v2010_account_call::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIApi_v2010_account_call::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIApi_v2010_account_call::getDateUpdated() const {
    return m_date_updated;
}
void OAIApi_v2010_account_call::setDateUpdated(const QString &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIApi_v2010_account_call::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIApi_v2010_account_call::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIApi_v2010_account_call::getDirection() const {
    return m_direction;
}
void OAIApi_v2010_account_call::setDirection(const QString &direction) {
    m_direction = direction;
    m_direction_isSet = true;
}

bool OAIApi_v2010_account_call::is_direction_Set() const{
    return m_direction_isSet;
}

bool OAIApi_v2010_account_call::is_direction_Valid() const{
    return m_direction_isValid;
}

QString OAIApi_v2010_account_call::getDuration() const {
    return m_duration;
}
void OAIApi_v2010_account_call::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIApi_v2010_account_call::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIApi_v2010_account_call::is_duration_Valid() const{
    return m_duration_isValid;
}

QString OAIApi_v2010_account_call::getEndTime() const {
    return m_end_time;
}
void OAIApi_v2010_account_call::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIApi_v2010_account_call::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIApi_v2010_account_call::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIApi_v2010_account_call::getForwardedFrom() const {
    return m_forwarded_from;
}
void OAIApi_v2010_account_call::setForwardedFrom(const QString &forwarded_from) {
    m_forwarded_from = forwarded_from;
    m_forwarded_from_isSet = true;
}

bool OAIApi_v2010_account_call::is_forwarded_from_Set() const{
    return m_forwarded_from_isSet;
}

bool OAIApi_v2010_account_call::is_forwarded_from_Valid() const{
    return m_forwarded_from_isValid;
}

QString OAIApi_v2010_account_call::getFrom() const {
    return m_from;
}
void OAIApi_v2010_account_call::setFrom(const QString &from) {
    m_from = from;
    m_from_isSet = true;
}

bool OAIApi_v2010_account_call::is_from_Set() const{
    return m_from_isSet;
}

bool OAIApi_v2010_account_call::is_from_Valid() const{
    return m_from_isValid;
}

QString OAIApi_v2010_account_call::getFromFormatted() const {
    return m_from_formatted;
}
void OAIApi_v2010_account_call::setFromFormatted(const QString &from_formatted) {
    m_from_formatted = from_formatted;
    m_from_formatted_isSet = true;
}

bool OAIApi_v2010_account_call::is_from_formatted_Set() const{
    return m_from_formatted_isSet;
}

bool OAIApi_v2010_account_call::is_from_formatted_Valid() const{
    return m_from_formatted_isValid;
}

QString OAIApi_v2010_account_call::getGroupSid() const {
    return m_group_sid;
}
void OAIApi_v2010_account_call::setGroupSid(const QString &group_sid) {
    m_group_sid = group_sid;
    m_group_sid_isSet = true;
}

bool OAIApi_v2010_account_call::is_group_sid_Set() const{
    return m_group_sid_isSet;
}

bool OAIApi_v2010_account_call::is_group_sid_Valid() const{
    return m_group_sid_isValid;
}

QString OAIApi_v2010_account_call::getParentCallSid() const {
    return m_parent_call_sid;
}
void OAIApi_v2010_account_call::setParentCallSid(const QString &parent_call_sid) {
    m_parent_call_sid = parent_call_sid;
    m_parent_call_sid_isSet = true;
}

bool OAIApi_v2010_account_call::is_parent_call_sid_Set() const{
    return m_parent_call_sid_isSet;
}

bool OAIApi_v2010_account_call::is_parent_call_sid_Valid() const{
    return m_parent_call_sid_isValid;
}

QString OAIApi_v2010_account_call::getPhoneNumberSid() const {
    return m_phone_number_sid;
}
void OAIApi_v2010_account_call::setPhoneNumberSid(const QString &phone_number_sid) {
    m_phone_number_sid = phone_number_sid;
    m_phone_number_sid_isSet = true;
}

bool OAIApi_v2010_account_call::is_phone_number_sid_Set() const{
    return m_phone_number_sid_isSet;
}

bool OAIApi_v2010_account_call::is_phone_number_sid_Valid() const{
    return m_phone_number_sid_isValid;
}

QString OAIApi_v2010_account_call::getPrice() const {
    return m_price;
}
void OAIApi_v2010_account_call::setPrice(const QString &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIApi_v2010_account_call::is_price_Set() const{
    return m_price_isSet;
}

bool OAIApi_v2010_account_call::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIApi_v2010_account_call::getPriceUnit() const {
    return m_price_unit;
}
void OAIApi_v2010_account_call::setPriceUnit(const QString &price_unit) {
    m_price_unit = price_unit;
    m_price_unit_isSet = true;
}

bool OAIApi_v2010_account_call::is_price_unit_Set() const{
    return m_price_unit_isSet;
}

bool OAIApi_v2010_account_call::is_price_unit_Valid() const{
    return m_price_unit_isValid;
}

QString OAIApi_v2010_account_call::getQueueTime() const {
    return m_queue_time;
}
void OAIApi_v2010_account_call::setQueueTime(const QString &queue_time) {
    m_queue_time = queue_time;
    m_queue_time_isSet = true;
}

bool OAIApi_v2010_account_call::is_queue_time_Set() const{
    return m_queue_time_isSet;
}

bool OAIApi_v2010_account_call::is_queue_time_Valid() const{
    return m_queue_time_isValid;
}

QString OAIApi_v2010_account_call::getSid() const {
    return m_sid;
}
void OAIApi_v2010_account_call::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIApi_v2010_account_call::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIApi_v2010_account_call::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIApi_v2010_account_call::getStartTime() const {
    return m_start_time;
}
void OAIApi_v2010_account_call::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIApi_v2010_account_call::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIApi_v2010_account_call::is_start_time_Valid() const{
    return m_start_time_isValid;
}

OAICall_enum_status OAIApi_v2010_account_call::getStatus() const {
    return m_status;
}
void OAIApi_v2010_account_call::setStatus(const OAICall_enum_status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIApi_v2010_account_call::is_status_Set() const{
    return m_status_isSet;
}

bool OAIApi_v2010_account_call::is_status_Valid() const{
    return m_status_isValid;
}

OAIObject OAIApi_v2010_account_call::getSubresourceUris() const {
    return m_subresource_uris;
}
void OAIApi_v2010_account_call::setSubresourceUris(const OAIObject &subresource_uris) {
    m_subresource_uris = subresource_uris;
    m_subresource_uris_isSet = true;
}

bool OAIApi_v2010_account_call::is_subresource_uris_Set() const{
    return m_subresource_uris_isSet;
}

bool OAIApi_v2010_account_call::is_subresource_uris_Valid() const{
    return m_subresource_uris_isValid;
}

QString OAIApi_v2010_account_call::getTo() const {
    return m_to;
}
void OAIApi_v2010_account_call::setTo(const QString &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIApi_v2010_account_call::is_to_Set() const{
    return m_to_isSet;
}

bool OAIApi_v2010_account_call::is_to_Valid() const{
    return m_to_isValid;
}

QString OAIApi_v2010_account_call::getToFormatted() const {
    return m_to_formatted;
}
void OAIApi_v2010_account_call::setToFormatted(const QString &to_formatted) {
    m_to_formatted = to_formatted;
    m_to_formatted_isSet = true;
}

bool OAIApi_v2010_account_call::is_to_formatted_Set() const{
    return m_to_formatted_isSet;
}

bool OAIApi_v2010_account_call::is_to_formatted_Valid() const{
    return m_to_formatted_isValid;
}

QString OAIApi_v2010_account_call::getTrunkSid() const {
    return m_trunk_sid;
}
void OAIApi_v2010_account_call::setTrunkSid(const QString &trunk_sid) {
    m_trunk_sid = trunk_sid;
    m_trunk_sid_isSet = true;
}

bool OAIApi_v2010_account_call::is_trunk_sid_Set() const{
    return m_trunk_sid_isSet;
}

bool OAIApi_v2010_account_call::is_trunk_sid_Valid() const{
    return m_trunk_sid_isValid;
}

QString OAIApi_v2010_account_call::getUri() const {
    return m_uri;
}
void OAIApi_v2010_account_call::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIApi_v2010_account_call::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIApi_v2010_account_call::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIApi_v2010_account_call::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_answered_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_caller_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_direction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forwarded_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_formatted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_call_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_subresource_uris_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_formatted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trunk_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_call::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
