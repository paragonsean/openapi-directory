/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_short_code.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_short_code::OAIApi_v2010_account_short_code(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_short_code::OAIApi_v2010_account_short_code() {
    this->initializeModel();
}

OAIApi_v2010_account_short_code::~OAIApi_v2010_account_short_code() {}

void OAIApi_v2010_account_short_code::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_api_version_isSet = false;
    m_api_version_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_short_code_isSet = false;
    m_short_code_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_sms_fallback_method_isSet = false;
    m_sms_fallback_method_isValid = false;

    m_sms_fallback_url_isSet = false;
    m_sms_fallback_url_isValid = false;

    m_sms_method_isSet = false;
    m_sms_method_isValid = false;

    m_sms_url_isSet = false;
    m_sms_url_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIApi_v2010_account_short_code::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_short_code::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_api_version_isValid = ::OpenAPI::fromJsonValue(m_api_version, json[QString("api_version")]);
    m_api_version_isSet = !json[QString("api_version")].isNull() && m_api_version_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_short_code_isValid = ::OpenAPI::fromJsonValue(m_short_code, json[QString("short_code")]);
    m_short_code_isSet = !json[QString("short_code")].isNull() && m_short_code_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_sms_fallback_method_isValid = ::OpenAPI::fromJsonValue(m_sms_fallback_method, json[QString("sms_fallback_method")]);
    m_sms_fallback_method_isSet = !json[QString("sms_fallback_method")].isNull() && m_sms_fallback_method_isValid;

    m_sms_fallback_url_isValid = ::OpenAPI::fromJsonValue(m_sms_fallback_url, json[QString("sms_fallback_url")]);
    m_sms_fallback_url_isSet = !json[QString("sms_fallback_url")].isNull() && m_sms_fallback_url_isValid;

    m_sms_method_isValid = ::OpenAPI::fromJsonValue(m_sms_method, json[QString("sms_method")]);
    m_sms_method_isSet = !json[QString("sms_method")].isNull() && m_sms_method_isValid;

    m_sms_url_isValid = ::OpenAPI::fromJsonValue(m_sms_url, json[QString("sms_url")]);
    m_sms_url_isSet = !json[QString("sms_url")].isNull() && m_sms_url_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIApi_v2010_account_short_code::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_short_code::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_api_version_isSet) {
        obj.insert(QString("api_version"), ::OpenAPI::toJsonValue(m_api_version));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_short_code_isSet) {
        obj.insert(QString("short_code"), ::OpenAPI::toJsonValue(m_short_code));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_sms_fallback_method_isSet) {
        obj.insert(QString("sms_fallback_method"), ::OpenAPI::toJsonValue(m_sms_fallback_method));
    }
    if (m_sms_fallback_url_isSet) {
        obj.insert(QString("sms_fallback_url"), ::OpenAPI::toJsonValue(m_sms_fallback_url));
    }
    if (m_sms_method_isSet) {
        obj.insert(QString("sms_method"), ::OpenAPI::toJsonValue(m_sms_method));
    }
    if (m_sms_url_isSet) {
        obj.insert(QString("sms_url"), ::OpenAPI::toJsonValue(m_sms_url));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIApi_v2010_account_short_code::getAccountSid() const {
    return m_account_sid;
}
void OAIApi_v2010_account_short_code::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIApi_v2010_account_short_code::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIApi_v2010_account_short_code::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIApi_v2010_account_short_code::getApiVersion() const {
    return m_api_version;
}
void OAIApi_v2010_account_short_code::setApiVersion(const QString &api_version) {
    m_api_version = api_version;
    m_api_version_isSet = true;
}

bool OAIApi_v2010_account_short_code::is_api_version_Set() const{
    return m_api_version_isSet;
}

bool OAIApi_v2010_account_short_code::is_api_version_Valid() const{
    return m_api_version_isValid;
}

QString OAIApi_v2010_account_short_code::getDateCreated() const {
    return m_date_created;
}
void OAIApi_v2010_account_short_code::setDateCreated(const QString &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIApi_v2010_account_short_code::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIApi_v2010_account_short_code::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIApi_v2010_account_short_code::getDateUpdated() const {
    return m_date_updated;
}
void OAIApi_v2010_account_short_code::setDateUpdated(const QString &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIApi_v2010_account_short_code::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIApi_v2010_account_short_code::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIApi_v2010_account_short_code::getFriendlyName() const {
    return m_friendly_name;
}
void OAIApi_v2010_account_short_code::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIApi_v2010_account_short_code::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIApi_v2010_account_short_code::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIApi_v2010_account_short_code::getShortCode() const {
    return m_short_code;
}
void OAIApi_v2010_account_short_code::setShortCode(const QString &short_code) {
    m_short_code = short_code;
    m_short_code_isSet = true;
}

bool OAIApi_v2010_account_short_code::is_short_code_Set() const{
    return m_short_code_isSet;
}

bool OAIApi_v2010_account_short_code::is_short_code_Valid() const{
    return m_short_code_isValid;
}

QString OAIApi_v2010_account_short_code::getSid() const {
    return m_sid;
}
void OAIApi_v2010_account_short_code::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIApi_v2010_account_short_code::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIApi_v2010_account_short_code::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIApi_v2010_account_short_code::getSmsFallbackMethod() const {
    return m_sms_fallback_method;
}
void OAIApi_v2010_account_short_code::setSmsFallbackMethod(const QString &sms_fallback_method) {
    m_sms_fallback_method = sms_fallback_method;
    m_sms_fallback_method_isSet = true;
}

bool OAIApi_v2010_account_short_code::is_sms_fallback_method_Set() const{
    return m_sms_fallback_method_isSet;
}

bool OAIApi_v2010_account_short_code::is_sms_fallback_method_Valid() const{
    return m_sms_fallback_method_isValid;
}

QString OAIApi_v2010_account_short_code::getSmsFallbackUrl() const {
    return m_sms_fallback_url;
}
void OAIApi_v2010_account_short_code::setSmsFallbackUrl(const QString &sms_fallback_url) {
    m_sms_fallback_url = sms_fallback_url;
    m_sms_fallback_url_isSet = true;
}

bool OAIApi_v2010_account_short_code::is_sms_fallback_url_Set() const{
    return m_sms_fallback_url_isSet;
}

bool OAIApi_v2010_account_short_code::is_sms_fallback_url_Valid() const{
    return m_sms_fallback_url_isValid;
}

QString OAIApi_v2010_account_short_code::getSmsMethod() const {
    return m_sms_method;
}
void OAIApi_v2010_account_short_code::setSmsMethod(const QString &sms_method) {
    m_sms_method = sms_method;
    m_sms_method_isSet = true;
}

bool OAIApi_v2010_account_short_code::is_sms_method_Set() const{
    return m_sms_method_isSet;
}

bool OAIApi_v2010_account_short_code::is_sms_method_Valid() const{
    return m_sms_method_isValid;
}

QString OAIApi_v2010_account_short_code::getSmsUrl() const {
    return m_sms_url;
}
void OAIApi_v2010_account_short_code::setSmsUrl(const QString &sms_url) {
    m_sms_url = sms_url;
    m_sms_url_isSet = true;
}

bool OAIApi_v2010_account_short_code::is_sms_url_Set() const{
    return m_sms_url_isSet;
}

bool OAIApi_v2010_account_short_code::is_sms_url_Valid() const{
    return m_sms_url_isValid;
}

QString OAIApi_v2010_account_short_code::getUri() const {
    return m_uri;
}
void OAIApi_v2010_account_short_code::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIApi_v2010_account_short_code::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIApi_v2010_account_short_code::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIApi_v2010_account_short_code::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_fallback_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_fallback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_short_code::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
