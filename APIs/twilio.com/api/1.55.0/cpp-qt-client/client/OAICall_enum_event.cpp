/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICall_enum_event.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICall_enum_event::OAICall_enum_event(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICall_enum_event::OAICall_enum_event() {
    this->initializeModel();
}

OAICall_enum_event::~OAICall_enum_event() {}

void OAICall_enum_event::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICall_enum_event::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICall_enum_event::fromJson(QString jsonString) {
    
    if ( jsonString.compare("initiated", Qt::CaseInsensitive) == 0) {
        m_value = eOAICall_enum_event::INITIATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ringing", Qt::CaseInsensitive) == 0) {
        m_value = eOAICall_enum_event::RINGING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("answered", Qt::CaseInsensitive) == 0) {
        m_value = eOAICall_enum_event::ANSWERED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("completed", Qt::CaseInsensitive) == 0) {
        m_value = eOAICall_enum_event::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICall_enum_event::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICall_enum_event::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICall_enum_event::INITIATED:
            val = "initiated";
            break;
        case eOAICall_enum_event::RINGING:
            val = "ringing";
            break;
        case eOAICall_enum_event::ANSWERED:
            val = "answered";
            break;
        case eOAICall_enum_event::COMPLETED:
            val = "completed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICall_enum_event::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICall_enum_event::eOAICall_enum_event OAICall_enum_event::getValue() const {
    return m_value;
}

void OAICall_enum_event::setValue(const OAICall_enum_event::eOAICall_enum_event& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICall_enum_event::isSet() const {
    
    return m_value_isSet;
}

bool OAICall_enum_event::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
