/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_available_phone_number_country.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_available_phone_number_country::OAIApi_v2010_account_available_phone_number_country(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_available_phone_number_country::OAIApi_v2010_account_available_phone_number_country() {
    this->initializeModel();
}

OAIApi_v2010_account_available_phone_number_country::~OAIApi_v2010_account_available_phone_number_country() {}

void OAIApi_v2010_account_available_phone_number_country::initializeModel() {

    m_beta_isSet = false;
    m_beta_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_country_code_isSet = false;
    m_country_code_isValid = false;

    m_subresource_uris_isSet = false;
    m_subresource_uris_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIApi_v2010_account_available_phone_number_country::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_available_phone_number_country::fromJsonObject(QJsonObject json) {

    m_beta_isValid = ::OpenAPI::fromJsonValue(m_beta, json[QString("beta")]);
    m_beta_isSet = !json[QString("beta")].isNull() && m_beta_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_country_code_isValid = ::OpenAPI::fromJsonValue(m_country_code, json[QString("country_code")]);
    m_country_code_isSet = !json[QString("country_code")].isNull() && m_country_code_isValid;

    m_subresource_uris_isValid = ::OpenAPI::fromJsonValue(m_subresource_uris, json[QString("subresource_uris")]);
    m_subresource_uris_isSet = !json[QString("subresource_uris")].isNull() && m_subresource_uris_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_available_phone_number_country::asJsonObject() const {
    QJsonObject obj;
    if (m_beta_isSet) {
        obj.insert(QString("beta"), ::OpenAPI::toJsonValue(m_beta));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_country_code_isSet) {
        obj.insert(QString("country_code"), ::OpenAPI::toJsonValue(m_country_code));
    }
    if (m_subresource_uris_isSet) {
        obj.insert(QString("subresource_uris"), ::OpenAPI::toJsonValue(m_subresource_uris));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

bool OAIApi_v2010_account_available_phone_number_country::isBeta() const {
    return m_beta;
}
void OAIApi_v2010_account_available_phone_number_country::setBeta(const bool &beta) {
    m_beta = beta;
    m_beta_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country::is_beta_Set() const{
    return m_beta_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country::is_beta_Valid() const{
    return m_beta_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country::getCountry() const {
    return m_country;
}
void OAIApi_v2010_account_available_phone_number_country::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country::is_country_Set() const{
    return m_country_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country::getCountryCode() const {
    return m_country_code;
}
void OAIApi_v2010_account_available_phone_number_country::setCountryCode(const QString &country_code) {
    m_country_code = country_code;
    m_country_code_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country::is_country_code_Set() const{
    return m_country_code_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country::is_country_code_Valid() const{
    return m_country_code_isValid;
}

OAIObject OAIApi_v2010_account_available_phone_number_country::getSubresourceUris() const {
    return m_subresource_uris;
}
void OAIApi_v2010_account_available_phone_number_country::setSubresourceUris(const OAIObject &subresource_uris) {
    m_subresource_uris = subresource_uris;
    m_subresource_uris_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country::is_subresource_uris_Set() const{
    return m_subresource_uris_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country::is_subresource_uris_Valid() const{
    return m_subresource_uris_isValid;
}

QString OAIApi_v2010_account_available_phone_number_country::getUri() const {
    return m_uri;
}
void OAIApi_v2010_account_available_phone_number_country::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIApi_v2010_account_available_phone_number_country::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIApi_v2010_account_available_phone_number_country::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIApi_v2010_account_available_phone_number_country::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_beta_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subresource_uris_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_available_phone_number_country::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
