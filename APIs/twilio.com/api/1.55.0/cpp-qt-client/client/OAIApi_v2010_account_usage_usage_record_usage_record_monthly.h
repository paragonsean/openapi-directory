/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApi_v2010_account_usage_usage_record_usage_record_monthly.h
 *
 * 
 */

#ifndef OAIApi_v2010_account_usage_usage_record_usage_record_monthly_H
#define OAIApi_v2010_account_usage_usage_record_usage_record_monthly_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIUsage_record_monthly_enum_category.h"
#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApi_v2010_account_usage_usage_record_usage_record_monthly : public OAIObject {
public:
    OAIApi_v2010_account_usage_usage_record_usage_record_monthly();
    OAIApi_v2010_account_usage_usage_record_usage_record_monthly(QString json);
    ~OAIApi_v2010_account_usage_usage_record_usage_record_monthly() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getApiVersion() const;
    void setApiVersion(const QString &api_version);
    bool is_api_version_Set() const;
    bool is_api_version_Valid() const;

    QString getAsOf() const;
    void setAsOf(const QString &as_of);
    bool is_as_of_Set() const;
    bool is_as_of_Valid() const;

    OAIUsage_record_monthly_enum_category getCategory() const;
    void setCategory(const OAIUsage_record_monthly_enum_category &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getCount() const;
    void setCount(const QString &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QString getCountUnit() const;
    void setCountUnit(const QString &count_unit);
    bool is_count_unit_Set() const;
    bool is_count_unit_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDate getEndDate() const;
    void setEndDate(const QDate &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getPriceUnit() const;
    void setPriceUnit(const QString &price_unit);
    bool is_price_unit_Set() const;
    bool is_price_unit_Valid() const;

    QDate getStartDate() const;
    void setStartDate(const QDate &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    OAIObject getSubresourceUris() const;
    void setSubresourceUris(const OAIObject &subresource_uris);
    bool is_subresource_uris_Set() const;
    bool is_subresource_uris_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    QString getUsage() const;
    void setUsage(const QString &usage);
    bool is_usage_Set() const;
    bool is_usage_Valid() const;

    QString getUsageUnit() const;
    void setUsageUnit(const QString &usage_unit);
    bool is_usage_unit_Set() const;
    bool is_usage_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_api_version;
    bool m_api_version_isSet;
    bool m_api_version_isValid;

    QString m_as_of;
    bool m_as_of_isSet;
    bool m_as_of_isValid;

    OAIUsage_record_monthly_enum_category m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QString m_count_unit;
    bool m_count_unit_isSet;
    bool m_count_unit_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDate m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_price_unit;
    bool m_price_unit_isSet;
    bool m_price_unit_isValid;

    QDate m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    OAIObject m_subresource_uris;
    bool m_subresource_uris_isSet;
    bool m_subresource_uris_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;

    QString m_usage;
    bool m_usage_isSet;
    bool m_usage_isValid;

    QString m_usage_unit;
    bool m_usage_unit_isSet;
    bool m_usage_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApi_v2010_account_usage_usage_record_usage_record_monthly)

#endif // OAIApi_v2010_account_usage_usage_record_usage_record_monthly_H
