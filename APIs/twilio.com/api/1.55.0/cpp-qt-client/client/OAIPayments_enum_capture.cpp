/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayments_enum_capture.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayments_enum_capture::OAIPayments_enum_capture(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayments_enum_capture::OAIPayments_enum_capture() {
    this->initializeModel();
}

OAIPayments_enum_capture::~OAIPayments_enum_capture() {}

void OAIPayments_enum_capture::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPayments_enum_capture::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPayments_enum_capture::fromJson(QString jsonString) {
    
    if ( jsonString.compare("payment-card-number", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPayments_enum_capture::PAYMENT_CARD_NUMBER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("expiration-date", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPayments_enum_capture::EXPIRATION_DATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("security-code", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPayments_enum_capture::SECURITY_CODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("postal-code", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPayments_enum_capture::POSTAL_CODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("bank-routing-number", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPayments_enum_capture::BANK_ROUTING_NUMBER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("bank-account-number", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPayments_enum_capture::BANK_ACCOUNT_NUMBER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPayments_enum_capture::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPayments_enum_capture::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPayments_enum_capture::PAYMENT_CARD_NUMBER:
            val = "payment-card-number";
            break;
        case eOAIPayments_enum_capture::EXPIRATION_DATE:
            val = "expiration-date";
            break;
        case eOAIPayments_enum_capture::SECURITY_CODE:
            val = "security-code";
            break;
        case eOAIPayments_enum_capture::POSTAL_CODE:
            val = "postal-code";
            break;
        case eOAIPayments_enum_capture::BANK_ROUTING_NUMBER:
            val = "bank-routing-number";
            break;
        case eOAIPayments_enum_capture::BANK_ACCOUNT_NUMBER:
            val = "bank-account-number";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPayments_enum_capture::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPayments_enum_capture::eOAIPayments_enum_capture OAIPayments_enum_capture::getValue() const {
    return m_value;
}

void OAIPayments_enum_capture::setValue(const OAIPayments_enum_capture::eOAIPayments_enum_capture& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPayments_enum_capture::isSet() const {
    
    return m_value_isSet;
}

bool OAIPayments_enum_capture::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
