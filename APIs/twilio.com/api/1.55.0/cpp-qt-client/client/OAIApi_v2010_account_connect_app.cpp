/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_connect_app.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_connect_app::OAIApi_v2010_account_connect_app(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_connect_app::OAIApi_v2010_account_connect_app() {
    this->initializeModel();
}

OAIApi_v2010_account_connect_app::~OAIApi_v2010_account_connect_app() {}

void OAIApi_v2010_account_connect_app::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_authorize_redirect_url_isSet = false;
    m_authorize_redirect_url_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_deauthorize_callback_method_isSet = false;
    m_deauthorize_callback_method_isValid = false;

    m_deauthorize_callback_url_isSet = false;
    m_deauthorize_callback_url_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_homepage_url_isSet = false;
    m_homepage_url_isValid = false;

    m_permissions_isSet = false;
    m_permissions_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIApi_v2010_account_connect_app::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_connect_app::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_authorize_redirect_url_isValid = ::OpenAPI::fromJsonValue(m_authorize_redirect_url, json[QString("authorize_redirect_url")]);
    m_authorize_redirect_url_isSet = !json[QString("authorize_redirect_url")].isNull() && m_authorize_redirect_url_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("company_name")]);
    m_company_name_isSet = !json[QString("company_name")].isNull() && m_company_name_isValid;

    m_deauthorize_callback_method_isValid = ::OpenAPI::fromJsonValue(m_deauthorize_callback_method, json[QString("deauthorize_callback_method")]);
    m_deauthorize_callback_method_isSet = !json[QString("deauthorize_callback_method")].isNull() && m_deauthorize_callback_method_isValid;

    m_deauthorize_callback_url_isValid = ::OpenAPI::fromJsonValue(m_deauthorize_callback_url, json[QString("deauthorize_callback_url")]);
    m_deauthorize_callback_url_isSet = !json[QString("deauthorize_callback_url")].isNull() && m_deauthorize_callback_url_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_homepage_url_isValid = ::OpenAPI::fromJsonValue(m_homepage_url, json[QString("homepage_url")]);
    m_homepage_url_isSet = !json[QString("homepage_url")].isNull() && m_homepage_url_isValid;

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("permissions")]);
    m_permissions_isSet = !json[QString("permissions")].isNull() && m_permissions_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIApi_v2010_account_connect_app::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_connect_app::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_authorize_redirect_url_isSet) {
        obj.insert(QString("authorize_redirect_url"), ::OpenAPI::toJsonValue(m_authorize_redirect_url));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("company_name"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_deauthorize_callback_method_isSet) {
        obj.insert(QString("deauthorize_callback_method"), ::OpenAPI::toJsonValue(m_deauthorize_callback_method));
    }
    if (m_deauthorize_callback_url_isSet) {
        obj.insert(QString("deauthorize_callback_url"), ::OpenAPI::toJsonValue(m_deauthorize_callback_url));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_homepage_url_isSet) {
        obj.insert(QString("homepage_url"), ::OpenAPI::toJsonValue(m_homepage_url));
    }
    if (m_permissions.size() > 0) {
        obj.insert(QString("permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIApi_v2010_account_connect_app::getAccountSid() const {
    return m_account_sid;
}
void OAIApi_v2010_account_connect_app::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIApi_v2010_account_connect_app::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIApi_v2010_account_connect_app::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIApi_v2010_account_connect_app::getAuthorizeRedirectUrl() const {
    return m_authorize_redirect_url;
}
void OAIApi_v2010_account_connect_app::setAuthorizeRedirectUrl(const QString &authorize_redirect_url) {
    m_authorize_redirect_url = authorize_redirect_url;
    m_authorize_redirect_url_isSet = true;
}

bool OAIApi_v2010_account_connect_app::is_authorize_redirect_url_Set() const{
    return m_authorize_redirect_url_isSet;
}

bool OAIApi_v2010_account_connect_app::is_authorize_redirect_url_Valid() const{
    return m_authorize_redirect_url_isValid;
}

QString OAIApi_v2010_account_connect_app::getCompanyName() const {
    return m_company_name;
}
void OAIApi_v2010_account_connect_app::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIApi_v2010_account_connect_app::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIApi_v2010_account_connect_app::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAIApi_v2010_account_connect_app::getDeauthorizeCallbackMethod() const {
    return m_deauthorize_callback_method;
}
void OAIApi_v2010_account_connect_app::setDeauthorizeCallbackMethod(const QString &deauthorize_callback_method) {
    m_deauthorize_callback_method = deauthorize_callback_method;
    m_deauthorize_callback_method_isSet = true;
}

bool OAIApi_v2010_account_connect_app::is_deauthorize_callback_method_Set() const{
    return m_deauthorize_callback_method_isSet;
}

bool OAIApi_v2010_account_connect_app::is_deauthorize_callback_method_Valid() const{
    return m_deauthorize_callback_method_isValid;
}

QString OAIApi_v2010_account_connect_app::getDeauthorizeCallbackUrl() const {
    return m_deauthorize_callback_url;
}
void OAIApi_v2010_account_connect_app::setDeauthorizeCallbackUrl(const QString &deauthorize_callback_url) {
    m_deauthorize_callback_url = deauthorize_callback_url;
    m_deauthorize_callback_url_isSet = true;
}

bool OAIApi_v2010_account_connect_app::is_deauthorize_callback_url_Set() const{
    return m_deauthorize_callback_url_isSet;
}

bool OAIApi_v2010_account_connect_app::is_deauthorize_callback_url_Valid() const{
    return m_deauthorize_callback_url_isValid;
}

QString OAIApi_v2010_account_connect_app::getDescription() const {
    return m_description;
}
void OAIApi_v2010_account_connect_app::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIApi_v2010_account_connect_app::is_description_Set() const{
    return m_description_isSet;
}

bool OAIApi_v2010_account_connect_app::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIApi_v2010_account_connect_app::getFriendlyName() const {
    return m_friendly_name;
}
void OAIApi_v2010_account_connect_app::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIApi_v2010_account_connect_app::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIApi_v2010_account_connect_app::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIApi_v2010_account_connect_app::getHomepageUrl() const {
    return m_homepage_url;
}
void OAIApi_v2010_account_connect_app::setHomepageUrl(const QString &homepage_url) {
    m_homepage_url = homepage_url;
    m_homepage_url_isSet = true;
}

bool OAIApi_v2010_account_connect_app::is_homepage_url_Set() const{
    return m_homepage_url_isSet;
}

bool OAIApi_v2010_account_connect_app::is_homepage_url_Valid() const{
    return m_homepage_url_isValid;
}

QList<OAIConnect_app_enum_permission> OAIApi_v2010_account_connect_app::getPermissions() const {
    return m_permissions;
}
void OAIApi_v2010_account_connect_app::setPermissions(const QList<OAIConnect_app_enum_permission> &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAIApi_v2010_account_connect_app::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAIApi_v2010_account_connect_app::is_permissions_Valid() const{
    return m_permissions_isValid;
}

QString OAIApi_v2010_account_connect_app::getSid() const {
    return m_sid;
}
void OAIApi_v2010_account_connect_app::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIApi_v2010_account_connect_app::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIApi_v2010_account_connect_app::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIApi_v2010_account_connect_app::getUri() const {
    return m_uri;
}
void OAIApi_v2010_account_connect_app::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIApi_v2010_account_connect_app::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIApi_v2010_account_connect_app::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIApi_v2010_account_connect_app::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorize_redirect_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deauthorize_callback_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deauthorize_callback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_homepage_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_connect_app::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
