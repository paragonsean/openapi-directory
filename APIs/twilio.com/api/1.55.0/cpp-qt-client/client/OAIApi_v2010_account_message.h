/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApi_v2010_account_message.h
 *
 * 
 */

#ifndef OAIApi_v2010_account_message_H
#define OAIApi_v2010_account_message_H

#include <QJsonObject>

#include "OAIMessage_enum_direction.h"
#include "OAIMessage_enum_status.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApi_v2010_account_message : public OAIObject {
public:
    OAIApi_v2010_account_message();
    OAIApi_v2010_account_message(QString json);
    ~OAIApi_v2010_account_message() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getApiVersion() const;
    void setApiVersion(const QString &api_version);
    bool is_api_version_Set() const;
    bool is_api_version_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getDateCreated() const;
    void setDateCreated(const QString &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QString getDateSent() const;
    void setDateSent(const QString &date_sent);
    bool is_date_sent_Set() const;
    bool is_date_sent_Valid() const;

    QString getDateUpdated() const;
    void setDateUpdated(const QString &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    OAIMessage_enum_direction getDirection() const;
    void setDirection(const OAIMessage_enum_direction &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    qint32 getErrorCode() const;
    void setErrorCode(const qint32 &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QString getMessagingServiceSid() const;
    void setMessagingServiceSid(const QString &messaging_service_sid);
    bool is_messaging_service_sid_Set() const;
    bool is_messaging_service_sid_Valid() const;

    QString getNumMedia() const;
    void setNumMedia(const QString &num_media);
    bool is_num_media_Set() const;
    bool is_num_media_Valid() const;

    QString getNumSegments() const;
    void setNumSegments(const QString &num_segments);
    bool is_num_segments_Set() const;
    bool is_num_segments_Valid() const;

    QString getPrice() const;
    void setPrice(const QString &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getPriceUnit() const;
    void setPriceUnit(const QString &price_unit);
    bool is_price_unit_Set() const;
    bool is_price_unit_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    OAIMessage_enum_status getStatus() const;
    void setStatus(const OAIMessage_enum_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIObject getSubresourceUris() const;
    void setSubresourceUris(const OAIObject &subresource_uris);
    bool is_subresource_uris_Set() const;
    bool is_subresource_uris_Valid() const;

    QString getTo() const;
    void setTo(const QString &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_api_version;
    bool m_api_version_isSet;
    bool m_api_version_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QString m_date_sent;
    bool m_date_sent_isSet;
    bool m_date_sent_isValid;

    QString m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    OAIMessage_enum_direction m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    qint32 m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QString m_messaging_service_sid;
    bool m_messaging_service_sid_isSet;
    bool m_messaging_service_sid_isValid;

    QString m_num_media;
    bool m_num_media_isSet;
    bool m_num_media_isValid;

    QString m_num_segments;
    bool m_num_segments_isSet;
    bool m_num_segments_isValid;

    QString m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_price_unit;
    bool m_price_unit_isSet;
    bool m_price_unit_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    OAIMessage_enum_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIObject m_subresource_uris;
    bool m_subresource_uris_isSet;
    bool m_subresource_uris_isValid;

    QString m_to;
    bool m_to_isSet;
    bool m_to_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApi_v2010_account_message)

#endif // OAIApi_v2010_account_message_H
