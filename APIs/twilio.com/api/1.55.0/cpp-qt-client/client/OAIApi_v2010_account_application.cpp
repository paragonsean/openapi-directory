/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_application.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_application::OAIApi_v2010_account_application(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_application::OAIApi_v2010_account_application() {
    this->initializeModel();
}

OAIApi_v2010_account_application::~OAIApi_v2010_account_application() {}

void OAIApi_v2010_account_application::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_api_version_isSet = false;
    m_api_version_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_message_status_callback_isSet = false;
    m_message_status_callback_isValid = false;

    m_public_application_connect_enabled_isSet = false;
    m_public_application_connect_enabled_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_sms_fallback_method_isSet = false;
    m_sms_fallback_method_isValid = false;

    m_sms_fallback_url_isSet = false;
    m_sms_fallback_url_isValid = false;

    m_sms_method_isSet = false;
    m_sms_method_isValid = false;

    m_sms_status_callback_isSet = false;
    m_sms_status_callback_isValid = false;

    m_sms_url_isSet = false;
    m_sms_url_isValid = false;

    m_status_callback_isSet = false;
    m_status_callback_isValid = false;

    m_status_callback_method_isSet = false;
    m_status_callback_method_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;

    m_voice_caller_id_lookup_isSet = false;
    m_voice_caller_id_lookup_isValid = false;

    m_voice_fallback_method_isSet = false;
    m_voice_fallback_method_isValid = false;

    m_voice_fallback_url_isSet = false;
    m_voice_fallback_url_isValid = false;

    m_voice_method_isSet = false;
    m_voice_method_isValid = false;

    m_voice_url_isSet = false;
    m_voice_url_isValid = false;
}

void OAIApi_v2010_account_application::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_application::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_api_version_isValid = ::OpenAPI::fromJsonValue(m_api_version, json[QString("api_version")]);
    m_api_version_isSet = !json[QString("api_version")].isNull() && m_api_version_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_message_status_callback_isValid = ::OpenAPI::fromJsonValue(m_message_status_callback, json[QString("message_status_callback")]);
    m_message_status_callback_isSet = !json[QString("message_status_callback")].isNull() && m_message_status_callback_isValid;

    m_public_application_connect_enabled_isValid = ::OpenAPI::fromJsonValue(m_public_application_connect_enabled, json[QString("public_application_connect_enabled")]);
    m_public_application_connect_enabled_isSet = !json[QString("public_application_connect_enabled")].isNull() && m_public_application_connect_enabled_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_sms_fallback_method_isValid = ::OpenAPI::fromJsonValue(m_sms_fallback_method, json[QString("sms_fallback_method")]);
    m_sms_fallback_method_isSet = !json[QString("sms_fallback_method")].isNull() && m_sms_fallback_method_isValid;

    m_sms_fallback_url_isValid = ::OpenAPI::fromJsonValue(m_sms_fallback_url, json[QString("sms_fallback_url")]);
    m_sms_fallback_url_isSet = !json[QString("sms_fallback_url")].isNull() && m_sms_fallback_url_isValid;

    m_sms_method_isValid = ::OpenAPI::fromJsonValue(m_sms_method, json[QString("sms_method")]);
    m_sms_method_isSet = !json[QString("sms_method")].isNull() && m_sms_method_isValid;

    m_sms_status_callback_isValid = ::OpenAPI::fromJsonValue(m_sms_status_callback, json[QString("sms_status_callback")]);
    m_sms_status_callback_isSet = !json[QString("sms_status_callback")].isNull() && m_sms_status_callback_isValid;

    m_sms_url_isValid = ::OpenAPI::fromJsonValue(m_sms_url, json[QString("sms_url")]);
    m_sms_url_isSet = !json[QString("sms_url")].isNull() && m_sms_url_isValid;

    m_status_callback_isValid = ::OpenAPI::fromJsonValue(m_status_callback, json[QString("status_callback")]);
    m_status_callback_isSet = !json[QString("status_callback")].isNull() && m_status_callback_isValid;

    m_status_callback_method_isValid = ::OpenAPI::fromJsonValue(m_status_callback_method, json[QString("status_callback_method")]);
    m_status_callback_method_isSet = !json[QString("status_callback_method")].isNull() && m_status_callback_method_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;

    m_voice_caller_id_lookup_isValid = ::OpenAPI::fromJsonValue(m_voice_caller_id_lookup, json[QString("voice_caller_id_lookup")]);
    m_voice_caller_id_lookup_isSet = !json[QString("voice_caller_id_lookup")].isNull() && m_voice_caller_id_lookup_isValid;

    m_voice_fallback_method_isValid = ::OpenAPI::fromJsonValue(m_voice_fallback_method, json[QString("voice_fallback_method")]);
    m_voice_fallback_method_isSet = !json[QString("voice_fallback_method")].isNull() && m_voice_fallback_method_isValid;

    m_voice_fallback_url_isValid = ::OpenAPI::fromJsonValue(m_voice_fallback_url, json[QString("voice_fallback_url")]);
    m_voice_fallback_url_isSet = !json[QString("voice_fallback_url")].isNull() && m_voice_fallback_url_isValid;

    m_voice_method_isValid = ::OpenAPI::fromJsonValue(m_voice_method, json[QString("voice_method")]);
    m_voice_method_isSet = !json[QString("voice_method")].isNull() && m_voice_method_isValid;

    m_voice_url_isValid = ::OpenAPI::fromJsonValue(m_voice_url, json[QString("voice_url")]);
    m_voice_url_isSet = !json[QString("voice_url")].isNull() && m_voice_url_isValid;
}

QString OAIApi_v2010_account_application::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_application::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_api_version_isSet) {
        obj.insert(QString("api_version"), ::OpenAPI::toJsonValue(m_api_version));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_message_status_callback_isSet) {
        obj.insert(QString("message_status_callback"), ::OpenAPI::toJsonValue(m_message_status_callback));
    }
    if (m_public_application_connect_enabled_isSet) {
        obj.insert(QString("public_application_connect_enabled"), ::OpenAPI::toJsonValue(m_public_application_connect_enabled));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_sms_fallback_method_isSet) {
        obj.insert(QString("sms_fallback_method"), ::OpenAPI::toJsonValue(m_sms_fallback_method));
    }
    if (m_sms_fallback_url_isSet) {
        obj.insert(QString("sms_fallback_url"), ::OpenAPI::toJsonValue(m_sms_fallback_url));
    }
    if (m_sms_method_isSet) {
        obj.insert(QString("sms_method"), ::OpenAPI::toJsonValue(m_sms_method));
    }
    if (m_sms_status_callback_isSet) {
        obj.insert(QString("sms_status_callback"), ::OpenAPI::toJsonValue(m_sms_status_callback));
    }
    if (m_sms_url_isSet) {
        obj.insert(QString("sms_url"), ::OpenAPI::toJsonValue(m_sms_url));
    }
    if (m_status_callback_isSet) {
        obj.insert(QString("status_callback"), ::OpenAPI::toJsonValue(m_status_callback));
    }
    if (m_status_callback_method_isSet) {
        obj.insert(QString("status_callback_method"), ::OpenAPI::toJsonValue(m_status_callback_method));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    if (m_voice_caller_id_lookup_isSet) {
        obj.insert(QString("voice_caller_id_lookup"), ::OpenAPI::toJsonValue(m_voice_caller_id_lookup));
    }
    if (m_voice_fallback_method_isSet) {
        obj.insert(QString("voice_fallback_method"), ::OpenAPI::toJsonValue(m_voice_fallback_method));
    }
    if (m_voice_fallback_url_isSet) {
        obj.insert(QString("voice_fallback_url"), ::OpenAPI::toJsonValue(m_voice_fallback_url));
    }
    if (m_voice_method_isSet) {
        obj.insert(QString("voice_method"), ::OpenAPI::toJsonValue(m_voice_method));
    }
    if (m_voice_url_isSet) {
        obj.insert(QString("voice_url"), ::OpenAPI::toJsonValue(m_voice_url));
    }
    return obj;
}

QString OAIApi_v2010_account_application::getAccountSid() const {
    return m_account_sid;
}
void OAIApi_v2010_account_application::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIApi_v2010_account_application::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIApi_v2010_account_application::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIApi_v2010_account_application::getApiVersion() const {
    return m_api_version;
}
void OAIApi_v2010_account_application::setApiVersion(const QString &api_version) {
    m_api_version = api_version;
    m_api_version_isSet = true;
}

bool OAIApi_v2010_account_application::is_api_version_Set() const{
    return m_api_version_isSet;
}

bool OAIApi_v2010_account_application::is_api_version_Valid() const{
    return m_api_version_isValid;
}

QString OAIApi_v2010_account_application::getDateCreated() const {
    return m_date_created;
}
void OAIApi_v2010_account_application::setDateCreated(const QString &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIApi_v2010_account_application::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIApi_v2010_account_application::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIApi_v2010_account_application::getDateUpdated() const {
    return m_date_updated;
}
void OAIApi_v2010_account_application::setDateUpdated(const QString &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIApi_v2010_account_application::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIApi_v2010_account_application::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIApi_v2010_account_application::getFriendlyName() const {
    return m_friendly_name;
}
void OAIApi_v2010_account_application::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIApi_v2010_account_application::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIApi_v2010_account_application::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIApi_v2010_account_application::getMessageStatusCallback() const {
    return m_message_status_callback;
}
void OAIApi_v2010_account_application::setMessageStatusCallback(const QString &message_status_callback) {
    m_message_status_callback = message_status_callback;
    m_message_status_callback_isSet = true;
}

bool OAIApi_v2010_account_application::is_message_status_callback_Set() const{
    return m_message_status_callback_isSet;
}

bool OAIApi_v2010_account_application::is_message_status_callback_Valid() const{
    return m_message_status_callback_isValid;
}

bool OAIApi_v2010_account_application::isPublicApplicationConnectEnabled() const {
    return m_public_application_connect_enabled;
}
void OAIApi_v2010_account_application::setPublicApplicationConnectEnabled(const bool &public_application_connect_enabled) {
    m_public_application_connect_enabled = public_application_connect_enabled;
    m_public_application_connect_enabled_isSet = true;
}

bool OAIApi_v2010_account_application::is_public_application_connect_enabled_Set() const{
    return m_public_application_connect_enabled_isSet;
}

bool OAIApi_v2010_account_application::is_public_application_connect_enabled_Valid() const{
    return m_public_application_connect_enabled_isValid;
}

QString OAIApi_v2010_account_application::getSid() const {
    return m_sid;
}
void OAIApi_v2010_account_application::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIApi_v2010_account_application::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIApi_v2010_account_application::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIApi_v2010_account_application::getSmsFallbackMethod() const {
    return m_sms_fallback_method;
}
void OAIApi_v2010_account_application::setSmsFallbackMethod(const QString &sms_fallback_method) {
    m_sms_fallback_method = sms_fallback_method;
    m_sms_fallback_method_isSet = true;
}

bool OAIApi_v2010_account_application::is_sms_fallback_method_Set() const{
    return m_sms_fallback_method_isSet;
}

bool OAIApi_v2010_account_application::is_sms_fallback_method_Valid() const{
    return m_sms_fallback_method_isValid;
}

QString OAIApi_v2010_account_application::getSmsFallbackUrl() const {
    return m_sms_fallback_url;
}
void OAIApi_v2010_account_application::setSmsFallbackUrl(const QString &sms_fallback_url) {
    m_sms_fallback_url = sms_fallback_url;
    m_sms_fallback_url_isSet = true;
}

bool OAIApi_v2010_account_application::is_sms_fallback_url_Set() const{
    return m_sms_fallback_url_isSet;
}

bool OAIApi_v2010_account_application::is_sms_fallback_url_Valid() const{
    return m_sms_fallback_url_isValid;
}

QString OAIApi_v2010_account_application::getSmsMethod() const {
    return m_sms_method;
}
void OAIApi_v2010_account_application::setSmsMethod(const QString &sms_method) {
    m_sms_method = sms_method;
    m_sms_method_isSet = true;
}

bool OAIApi_v2010_account_application::is_sms_method_Set() const{
    return m_sms_method_isSet;
}

bool OAIApi_v2010_account_application::is_sms_method_Valid() const{
    return m_sms_method_isValid;
}

QString OAIApi_v2010_account_application::getSmsStatusCallback() const {
    return m_sms_status_callback;
}
void OAIApi_v2010_account_application::setSmsStatusCallback(const QString &sms_status_callback) {
    m_sms_status_callback = sms_status_callback;
    m_sms_status_callback_isSet = true;
}

bool OAIApi_v2010_account_application::is_sms_status_callback_Set() const{
    return m_sms_status_callback_isSet;
}

bool OAIApi_v2010_account_application::is_sms_status_callback_Valid() const{
    return m_sms_status_callback_isValid;
}

QString OAIApi_v2010_account_application::getSmsUrl() const {
    return m_sms_url;
}
void OAIApi_v2010_account_application::setSmsUrl(const QString &sms_url) {
    m_sms_url = sms_url;
    m_sms_url_isSet = true;
}

bool OAIApi_v2010_account_application::is_sms_url_Set() const{
    return m_sms_url_isSet;
}

bool OAIApi_v2010_account_application::is_sms_url_Valid() const{
    return m_sms_url_isValid;
}

QString OAIApi_v2010_account_application::getStatusCallback() const {
    return m_status_callback;
}
void OAIApi_v2010_account_application::setStatusCallback(const QString &status_callback) {
    m_status_callback = status_callback;
    m_status_callback_isSet = true;
}

bool OAIApi_v2010_account_application::is_status_callback_Set() const{
    return m_status_callback_isSet;
}

bool OAIApi_v2010_account_application::is_status_callback_Valid() const{
    return m_status_callback_isValid;
}

QString OAIApi_v2010_account_application::getStatusCallbackMethod() const {
    return m_status_callback_method;
}
void OAIApi_v2010_account_application::setStatusCallbackMethod(const QString &status_callback_method) {
    m_status_callback_method = status_callback_method;
    m_status_callback_method_isSet = true;
}

bool OAIApi_v2010_account_application::is_status_callback_method_Set() const{
    return m_status_callback_method_isSet;
}

bool OAIApi_v2010_account_application::is_status_callback_method_Valid() const{
    return m_status_callback_method_isValid;
}

QString OAIApi_v2010_account_application::getUri() const {
    return m_uri;
}
void OAIApi_v2010_account_application::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIApi_v2010_account_application::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIApi_v2010_account_application::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIApi_v2010_account_application::isVoiceCallerIdLookup() const {
    return m_voice_caller_id_lookup;
}
void OAIApi_v2010_account_application::setVoiceCallerIdLookup(const bool &voice_caller_id_lookup) {
    m_voice_caller_id_lookup = voice_caller_id_lookup;
    m_voice_caller_id_lookup_isSet = true;
}

bool OAIApi_v2010_account_application::is_voice_caller_id_lookup_Set() const{
    return m_voice_caller_id_lookup_isSet;
}

bool OAIApi_v2010_account_application::is_voice_caller_id_lookup_Valid() const{
    return m_voice_caller_id_lookup_isValid;
}

QString OAIApi_v2010_account_application::getVoiceFallbackMethod() const {
    return m_voice_fallback_method;
}
void OAIApi_v2010_account_application::setVoiceFallbackMethod(const QString &voice_fallback_method) {
    m_voice_fallback_method = voice_fallback_method;
    m_voice_fallback_method_isSet = true;
}

bool OAIApi_v2010_account_application::is_voice_fallback_method_Set() const{
    return m_voice_fallback_method_isSet;
}

bool OAIApi_v2010_account_application::is_voice_fallback_method_Valid() const{
    return m_voice_fallback_method_isValid;
}

QString OAIApi_v2010_account_application::getVoiceFallbackUrl() const {
    return m_voice_fallback_url;
}
void OAIApi_v2010_account_application::setVoiceFallbackUrl(const QString &voice_fallback_url) {
    m_voice_fallback_url = voice_fallback_url;
    m_voice_fallback_url_isSet = true;
}

bool OAIApi_v2010_account_application::is_voice_fallback_url_Set() const{
    return m_voice_fallback_url_isSet;
}

bool OAIApi_v2010_account_application::is_voice_fallback_url_Valid() const{
    return m_voice_fallback_url_isValid;
}

QString OAIApi_v2010_account_application::getVoiceMethod() const {
    return m_voice_method;
}
void OAIApi_v2010_account_application::setVoiceMethod(const QString &voice_method) {
    m_voice_method = voice_method;
    m_voice_method_isSet = true;
}

bool OAIApi_v2010_account_application::is_voice_method_Set() const{
    return m_voice_method_isSet;
}

bool OAIApi_v2010_account_application::is_voice_method_Valid() const{
    return m_voice_method_isValid;
}

QString OAIApi_v2010_account_application::getVoiceUrl() const {
    return m_voice_url;
}
void OAIApi_v2010_account_application::setVoiceUrl(const QString &voice_url) {
    m_voice_url = voice_url;
    m_voice_url_isSet = true;
}

bool OAIApi_v2010_account_application::is_voice_url_Set() const{
    return m_voice_url_isSet;
}

bool OAIApi_v2010_account_application::is_voice_url_Valid() const{
    return m_voice_url_isValid;
}

bool OAIApi_v2010_account_application::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_status_callback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_application_connect_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_fallback_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_fallback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_status_callback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_callback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_callback_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_caller_id_lookup_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_fallback_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_fallback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voice_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_application::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
