/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_address.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_address::OAIApi_v2010_account_address(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_address::OAIApi_v2010_account_address() {
    this->initializeModel();
}

OAIApi_v2010_account_address::~OAIApi_v2010_account_address() {}

void OAIApi_v2010_account_address::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_customer_name_isSet = false;
    m_customer_name_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_emergency_enabled_isSet = false;
    m_emergency_enabled_isValid = false;

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_iso_country_isSet = false;
    m_iso_country_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_street_isSet = false;
    m_street_isValid = false;

    m_street_secondary_isSet = false;
    m_street_secondary_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;

    m_validated_isSet = false;
    m_validated_isValid = false;

    m_verified_isSet = false;
    m_verified_isValid = false;
}

void OAIApi_v2010_account_address::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_address::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_customer_name_isValid = ::OpenAPI::fromJsonValue(m_customer_name, json[QString("customer_name")]);
    m_customer_name_isSet = !json[QString("customer_name")].isNull() && m_customer_name_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_emergency_enabled_isValid = ::OpenAPI::fromJsonValue(m_emergency_enabled, json[QString("emergency_enabled")]);
    m_emergency_enabled_isSet = !json[QString("emergency_enabled")].isNull() && m_emergency_enabled_isValid;

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendly_name")]);
    m_friendly_name_isSet = !json[QString("friendly_name")].isNull() && m_friendly_name_isValid;

    m_iso_country_isValid = ::OpenAPI::fromJsonValue(m_iso_country, json[QString("iso_country")]);
    m_iso_country_isSet = !json[QString("iso_country")].isNull() && m_iso_country_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("postal_code")]);
    m_postal_code_isSet = !json[QString("postal_code")].isNull() && m_postal_code_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("region")]);
    m_region_isSet = !json[QString("region")].isNull() && m_region_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_street_isValid = ::OpenAPI::fromJsonValue(m_street, json[QString("street")]);
    m_street_isSet = !json[QString("street")].isNull() && m_street_isValid;

    m_street_secondary_isValid = ::OpenAPI::fromJsonValue(m_street_secondary, json[QString("street_secondary")]);
    m_street_secondary_isSet = !json[QString("street_secondary")].isNull() && m_street_secondary_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;

    m_validated_isValid = ::OpenAPI::fromJsonValue(m_validated, json[QString("validated")]);
    m_validated_isSet = !json[QString("validated")].isNull() && m_validated_isValid;

    m_verified_isValid = ::OpenAPI::fromJsonValue(m_verified, json[QString("verified")]);
    m_verified_isSet = !json[QString("verified")].isNull() && m_verified_isValid;
}

QString OAIApi_v2010_account_address::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_address::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_customer_name_isSet) {
        obj.insert(QString("customer_name"), ::OpenAPI::toJsonValue(m_customer_name));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_emergency_enabled_isSet) {
        obj.insert(QString("emergency_enabled"), ::OpenAPI::toJsonValue(m_emergency_enabled));
    }
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendly_name"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_iso_country_isSet) {
        obj.insert(QString("iso_country"), ::OpenAPI::toJsonValue(m_iso_country));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("postal_code"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_region_isSet) {
        obj.insert(QString("region"), ::OpenAPI::toJsonValue(m_region));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_street_isSet) {
        obj.insert(QString("street"), ::OpenAPI::toJsonValue(m_street));
    }
    if (m_street_secondary_isSet) {
        obj.insert(QString("street_secondary"), ::OpenAPI::toJsonValue(m_street_secondary));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    if (m_validated_isSet) {
        obj.insert(QString("validated"), ::OpenAPI::toJsonValue(m_validated));
    }
    if (m_verified_isSet) {
        obj.insert(QString("verified"), ::OpenAPI::toJsonValue(m_verified));
    }
    return obj;
}

QString OAIApi_v2010_account_address::getAccountSid() const {
    return m_account_sid;
}
void OAIApi_v2010_account_address::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIApi_v2010_account_address::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIApi_v2010_account_address::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIApi_v2010_account_address::getCity() const {
    return m_city;
}
void OAIApi_v2010_account_address::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIApi_v2010_account_address::is_city_Set() const{
    return m_city_isSet;
}

bool OAIApi_v2010_account_address::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIApi_v2010_account_address::getCustomerName() const {
    return m_customer_name;
}
void OAIApi_v2010_account_address::setCustomerName(const QString &customer_name) {
    m_customer_name = customer_name;
    m_customer_name_isSet = true;
}

bool OAIApi_v2010_account_address::is_customer_name_Set() const{
    return m_customer_name_isSet;
}

bool OAIApi_v2010_account_address::is_customer_name_Valid() const{
    return m_customer_name_isValid;
}

QString OAIApi_v2010_account_address::getDateCreated() const {
    return m_date_created;
}
void OAIApi_v2010_account_address::setDateCreated(const QString &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIApi_v2010_account_address::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIApi_v2010_account_address::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIApi_v2010_account_address::getDateUpdated() const {
    return m_date_updated;
}
void OAIApi_v2010_account_address::setDateUpdated(const QString &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIApi_v2010_account_address::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIApi_v2010_account_address::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

bool OAIApi_v2010_account_address::isEmergencyEnabled() const {
    return m_emergency_enabled;
}
void OAIApi_v2010_account_address::setEmergencyEnabled(const bool &emergency_enabled) {
    m_emergency_enabled = emergency_enabled;
    m_emergency_enabled_isSet = true;
}

bool OAIApi_v2010_account_address::is_emergency_enabled_Set() const{
    return m_emergency_enabled_isSet;
}

bool OAIApi_v2010_account_address::is_emergency_enabled_Valid() const{
    return m_emergency_enabled_isValid;
}

QString OAIApi_v2010_account_address::getFriendlyName() const {
    return m_friendly_name;
}
void OAIApi_v2010_account_address::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIApi_v2010_account_address::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIApi_v2010_account_address::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIApi_v2010_account_address::getIsoCountry() const {
    return m_iso_country;
}
void OAIApi_v2010_account_address::setIsoCountry(const QString &iso_country) {
    m_iso_country = iso_country;
    m_iso_country_isSet = true;
}

bool OAIApi_v2010_account_address::is_iso_country_Set() const{
    return m_iso_country_isSet;
}

bool OAIApi_v2010_account_address::is_iso_country_Valid() const{
    return m_iso_country_isValid;
}

QString OAIApi_v2010_account_address::getPostalCode() const {
    return m_postal_code;
}
void OAIApi_v2010_account_address::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIApi_v2010_account_address::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIApi_v2010_account_address::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

QString OAIApi_v2010_account_address::getRegion() const {
    return m_region;
}
void OAIApi_v2010_account_address::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIApi_v2010_account_address::is_region_Set() const{
    return m_region_isSet;
}

bool OAIApi_v2010_account_address::is_region_Valid() const{
    return m_region_isValid;
}

QString OAIApi_v2010_account_address::getSid() const {
    return m_sid;
}
void OAIApi_v2010_account_address::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIApi_v2010_account_address::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIApi_v2010_account_address::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIApi_v2010_account_address::getStreet() const {
    return m_street;
}
void OAIApi_v2010_account_address::setStreet(const QString &street) {
    m_street = street;
    m_street_isSet = true;
}

bool OAIApi_v2010_account_address::is_street_Set() const{
    return m_street_isSet;
}

bool OAIApi_v2010_account_address::is_street_Valid() const{
    return m_street_isValid;
}

QString OAIApi_v2010_account_address::getStreetSecondary() const {
    return m_street_secondary;
}
void OAIApi_v2010_account_address::setStreetSecondary(const QString &street_secondary) {
    m_street_secondary = street_secondary;
    m_street_secondary_isSet = true;
}

bool OAIApi_v2010_account_address::is_street_secondary_Set() const{
    return m_street_secondary_isSet;
}

bool OAIApi_v2010_account_address::is_street_secondary_Valid() const{
    return m_street_secondary_isValid;
}

QString OAIApi_v2010_account_address::getUri() const {
    return m_uri;
}
void OAIApi_v2010_account_address::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIApi_v2010_account_address::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIApi_v2010_account_address::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIApi_v2010_account_address::isValidated() const {
    return m_validated;
}
void OAIApi_v2010_account_address::setValidated(const bool &validated) {
    m_validated = validated;
    m_validated_isSet = true;
}

bool OAIApi_v2010_account_address::is_validated_Set() const{
    return m_validated_isSet;
}

bool OAIApi_v2010_account_address::is_validated_Valid() const{
    return m_validated_isValid;
}

bool OAIApi_v2010_account_address::isVerified() const {
    return m_verified;
}
void OAIApi_v2010_account_address::setVerified(const bool &verified) {
    m_verified = verified;
    m_verified_isSet = true;
}

bool OAIApi_v2010_account_address::is_verified_Set() const{
    return m_verified_isSet;
}

bool OAIApi_v2010_account_address::is_verified_Valid() const{
    return m_verified_isValid;
}

bool OAIApi_v2010_account_address::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_emergency_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_street_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_street_secondary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verified_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_address::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
