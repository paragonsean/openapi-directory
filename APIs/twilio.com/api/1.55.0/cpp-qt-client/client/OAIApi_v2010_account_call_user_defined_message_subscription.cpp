/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_call_user_defined_message_subscription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_call_user_defined_message_subscription::OAIApi_v2010_account_call_user_defined_message_subscription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_call_user_defined_message_subscription::OAIApi_v2010_account_call_user_defined_message_subscription() {
    this->initializeModel();
}

OAIApi_v2010_account_call_user_defined_message_subscription::~OAIApi_v2010_account_call_user_defined_message_subscription() {}

void OAIApi_v2010_account_call_user_defined_message_subscription::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_call_sid_isSet = false;
    m_call_sid_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIApi_v2010_account_call_user_defined_message_subscription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_call_user_defined_message_subscription::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_call_sid_isValid = ::OpenAPI::fromJsonValue(m_call_sid, json[QString("call_sid")]);
    m_call_sid_isSet = !json[QString("call_sid")].isNull() && m_call_sid_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIApi_v2010_account_call_user_defined_message_subscription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_call_user_defined_message_subscription::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_call_sid_isSet) {
        obj.insert(QString("call_sid"), ::OpenAPI::toJsonValue(m_call_sid));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIApi_v2010_account_call_user_defined_message_subscription::getAccountSid() const {
    return m_account_sid;
}
void OAIApi_v2010_account_call_user_defined_message_subscription::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIApi_v2010_account_call_user_defined_message_subscription::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIApi_v2010_account_call_user_defined_message_subscription::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIApi_v2010_account_call_user_defined_message_subscription::getCallSid() const {
    return m_call_sid;
}
void OAIApi_v2010_account_call_user_defined_message_subscription::setCallSid(const QString &call_sid) {
    m_call_sid = call_sid;
    m_call_sid_isSet = true;
}

bool OAIApi_v2010_account_call_user_defined_message_subscription::is_call_sid_Set() const{
    return m_call_sid_isSet;
}

bool OAIApi_v2010_account_call_user_defined_message_subscription::is_call_sid_Valid() const{
    return m_call_sid_isValid;
}

QString OAIApi_v2010_account_call_user_defined_message_subscription::getDateCreated() const {
    return m_date_created;
}
void OAIApi_v2010_account_call_user_defined_message_subscription::setDateCreated(const QString &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIApi_v2010_account_call_user_defined_message_subscription::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIApi_v2010_account_call_user_defined_message_subscription::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIApi_v2010_account_call_user_defined_message_subscription::getSid() const {
    return m_sid;
}
void OAIApi_v2010_account_call_user_defined_message_subscription::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIApi_v2010_account_call_user_defined_message_subscription::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIApi_v2010_account_call_user_defined_message_subscription::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIApi_v2010_account_call_user_defined_message_subscription::getUri() const {
    return m_uri;
}
void OAIApi_v2010_account_call_user_defined_message_subscription::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIApi_v2010_account_call_user_defined_message_subscription::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIApi_v2010_account_call_user_defined_message_subscription::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIApi_v2010_account_call_user_defined_message_subscription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_call_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_call_user_defined_message_subscription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
