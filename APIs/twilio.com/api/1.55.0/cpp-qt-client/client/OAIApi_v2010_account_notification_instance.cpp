/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_notification_instance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_notification_instance::OAIApi_v2010_account_notification_instance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_notification_instance::OAIApi_v2010_account_notification_instance() {
    this->initializeModel();
}

OAIApi_v2010_account_notification_instance::~OAIApi_v2010_account_notification_instance() {}

void OAIApi_v2010_account_notification_instance::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_api_version_isSet = false;
    m_api_version_isValid = false;

    m_call_sid_isSet = false;
    m_call_sid_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_log_isSet = false;
    m_log_isValid = false;

    m_message_date_isSet = false;
    m_message_date_isValid = false;

    m_message_text_isSet = false;
    m_message_text_isValid = false;

    m_more_info_isSet = false;
    m_more_info_isValid = false;

    m_request_method_isSet = false;
    m_request_method_isValid = false;

    m_request_url_isSet = false;
    m_request_url_isValid = false;

    m_request_variables_isSet = false;
    m_request_variables_isValid = false;

    m_response_body_isSet = false;
    m_response_body_isValid = false;

    m_response_headers_isSet = false;
    m_response_headers_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIApi_v2010_account_notification_instance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_notification_instance::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_api_version_isValid = ::OpenAPI::fromJsonValue(m_api_version, json[QString("api_version")]);
    m_api_version_isSet = !json[QString("api_version")].isNull() && m_api_version_isValid;

    m_call_sid_isValid = ::OpenAPI::fromJsonValue(m_call_sid, json[QString("call_sid")]);
    m_call_sid_isSet = !json[QString("call_sid")].isNull() && m_call_sid_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("error_code")]);
    m_error_code_isSet = !json[QString("error_code")].isNull() && m_error_code_isValid;

    m_log_isValid = ::OpenAPI::fromJsonValue(m_log, json[QString("log")]);
    m_log_isSet = !json[QString("log")].isNull() && m_log_isValid;

    m_message_date_isValid = ::OpenAPI::fromJsonValue(m_message_date, json[QString("message_date")]);
    m_message_date_isSet = !json[QString("message_date")].isNull() && m_message_date_isValid;

    m_message_text_isValid = ::OpenAPI::fromJsonValue(m_message_text, json[QString("message_text")]);
    m_message_text_isSet = !json[QString("message_text")].isNull() && m_message_text_isValid;

    m_more_info_isValid = ::OpenAPI::fromJsonValue(m_more_info, json[QString("more_info")]);
    m_more_info_isSet = !json[QString("more_info")].isNull() && m_more_info_isValid;

    m_request_method_isValid = ::OpenAPI::fromJsonValue(m_request_method, json[QString("request_method")]);
    m_request_method_isSet = !json[QString("request_method")].isNull() && m_request_method_isValid;

    m_request_url_isValid = ::OpenAPI::fromJsonValue(m_request_url, json[QString("request_url")]);
    m_request_url_isSet = !json[QString("request_url")].isNull() && m_request_url_isValid;

    m_request_variables_isValid = ::OpenAPI::fromJsonValue(m_request_variables, json[QString("request_variables")]);
    m_request_variables_isSet = !json[QString("request_variables")].isNull() && m_request_variables_isValid;

    m_response_body_isValid = ::OpenAPI::fromJsonValue(m_response_body, json[QString("response_body")]);
    m_response_body_isSet = !json[QString("response_body")].isNull() && m_response_body_isValid;

    m_response_headers_isValid = ::OpenAPI::fromJsonValue(m_response_headers, json[QString("response_headers")]);
    m_response_headers_isSet = !json[QString("response_headers")].isNull() && m_response_headers_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIApi_v2010_account_notification_instance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_notification_instance::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_api_version_isSet) {
        obj.insert(QString("api_version"), ::OpenAPI::toJsonValue(m_api_version));
    }
    if (m_call_sid_isSet) {
        obj.insert(QString("call_sid"), ::OpenAPI::toJsonValue(m_call_sid));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_error_code_isSet) {
        obj.insert(QString("error_code"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_log_isSet) {
        obj.insert(QString("log"), ::OpenAPI::toJsonValue(m_log));
    }
    if (m_message_date_isSet) {
        obj.insert(QString("message_date"), ::OpenAPI::toJsonValue(m_message_date));
    }
    if (m_message_text_isSet) {
        obj.insert(QString("message_text"), ::OpenAPI::toJsonValue(m_message_text));
    }
    if (m_more_info_isSet) {
        obj.insert(QString("more_info"), ::OpenAPI::toJsonValue(m_more_info));
    }
    if (m_request_method_isSet) {
        obj.insert(QString("request_method"), ::OpenAPI::toJsonValue(m_request_method));
    }
    if (m_request_url_isSet) {
        obj.insert(QString("request_url"), ::OpenAPI::toJsonValue(m_request_url));
    }
    if (m_request_variables_isSet) {
        obj.insert(QString("request_variables"), ::OpenAPI::toJsonValue(m_request_variables));
    }
    if (m_response_body_isSet) {
        obj.insert(QString("response_body"), ::OpenAPI::toJsonValue(m_response_body));
    }
    if (m_response_headers_isSet) {
        obj.insert(QString("response_headers"), ::OpenAPI::toJsonValue(m_response_headers));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIApi_v2010_account_notification_instance::getAccountSid() const {
    return m_account_sid;
}
void OAIApi_v2010_account_notification_instance::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIApi_v2010_account_notification_instance::getApiVersion() const {
    return m_api_version;
}
void OAIApi_v2010_account_notification_instance::setApiVersion(const QString &api_version) {
    m_api_version = api_version;
    m_api_version_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_api_version_Set() const{
    return m_api_version_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_api_version_Valid() const{
    return m_api_version_isValid;
}

QString OAIApi_v2010_account_notification_instance::getCallSid() const {
    return m_call_sid;
}
void OAIApi_v2010_account_notification_instance::setCallSid(const QString &call_sid) {
    m_call_sid = call_sid;
    m_call_sid_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_call_sid_Set() const{
    return m_call_sid_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_call_sid_Valid() const{
    return m_call_sid_isValid;
}

QString OAIApi_v2010_account_notification_instance::getDateCreated() const {
    return m_date_created;
}
void OAIApi_v2010_account_notification_instance::setDateCreated(const QString &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIApi_v2010_account_notification_instance::getDateUpdated() const {
    return m_date_updated;
}
void OAIApi_v2010_account_notification_instance::setDateUpdated(const QString &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIApi_v2010_account_notification_instance::getErrorCode() const {
    return m_error_code;
}
void OAIApi_v2010_account_notification_instance::setErrorCode(const QString &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIApi_v2010_account_notification_instance::getLog() const {
    return m_log;
}
void OAIApi_v2010_account_notification_instance::setLog(const QString &log) {
    m_log = log;
    m_log_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_log_Set() const{
    return m_log_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_log_Valid() const{
    return m_log_isValid;
}

QString OAIApi_v2010_account_notification_instance::getMessageDate() const {
    return m_message_date;
}
void OAIApi_v2010_account_notification_instance::setMessageDate(const QString &message_date) {
    m_message_date = message_date;
    m_message_date_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_message_date_Set() const{
    return m_message_date_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_message_date_Valid() const{
    return m_message_date_isValid;
}

QString OAIApi_v2010_account_notification_instance::getMessageText() const {
    return m_message_text;
}
void OAIApi_v2010_account_notification_instance::setMessageText(const QString &message_text) {
    m_message_text = message_text;
    m_message_text_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_message_text_Set() const{
    return m_message_text_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_message_text_Valid() const{
    return m_message_text_isValid;
}

QString OAIApi_v2010_account_notification_instance::getMoreInfo() const {
    return m_more_info;
}
void OAIApi_v2010_account_notification_instance::setMoreInfo(const QString &more_info) {
    m_more_info = more_info;
    m_more_info_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_more_info_Set() const{
    return m_more_info_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_more_info_Valid() const{
    return m_more_info_isValid;
}

QString OAIApi_v2010_account_notification_instance::getRequestMethod() const {
    return m_request_method;
}
void OAIApi_v2010_account_notification_instance::setRequestMethod(const QString &request_method) {
    m_request_method = request_method;
    m_request_method_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_request_method_Set() const{
    return m_request_method_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_request_method_Valid() const{
    return m_request_method_isValid;
}

QString OAIApi_v2010_account_notification_instance::getRequestUrl() const {
    return m_request_url;
}
void OAIApi_v2010_account_notification_instance::setRequestUrl(const QString &request_url) {
    m_request_url = request_url;
    m_request_url_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_request_url_Set() const{
    return m_request_url_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_request_url_Valid() const{
    return m_request_url_isValid;
}

QString OAIApi_v2010_account_notification_instance::getRequestVariables() const {
    return m_request_variables;
}
void OAIApi_v2010_account_notification_instance::setRequestVariables(const QString &request_variables) {
    m_request_variables = request_variables;
    m_request_variables_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_request_variables_Set() const{
    return m_request_variables_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_request_variables_Valid() const{
    return m_request_variables_isValid;
}

QString OAIApi_v2010_account_notification_instance::getResponseBody() const {
    return m_response_body;
}
void OAIApi_v2010_account_notification_instance::setResponseBody(const QString &response_body) {
    m_response_body = response_body;
    m_response_body_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_response_body_Set() const{
    return m_response_body_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_response_body_Valid() const{
    return m_response_body_isValid;
}

QString OAIApi_v2010_account_notification_instance::getResponseHeaders() const {
    return m_response_headers;
}
void OAIApi_v2010_account_notification_instance::setResponseHeaders(const QString &response_headers) {
    m_response_headers = response_headers;
    m_response_headers_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_response_headers_Set() const{
    return m_response_headers_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_response_headers_Valid() const{
    return m_response_headers_isValid;
}

QString OAIApi_v2010_account_notification_instance::getSid() const {
    return m_sid;
}
void OAIApi_v2010_account_notification_instance::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIApi_v2010_account_notification_instance::getUri() const {
    return m_uri;
}
void OAIApi_v2010_account_notification_instance::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIApi_v2010_account_notification_instance::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIApi_v2010_account_notification_instance::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIApi_v2010_account_notification_instance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_call_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_more_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_variables_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_headers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_notification_instance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
