/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUsage_record_daily_enum_category.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUsage_record_daily_enum_category::OAIUsage_record_daily_enum_category(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUsage_record_daily_enum_category::OAIUsage_record_daily_enum_category() {
    this->initializeModel();
}

OAIUsage_record_daily_enum_category::~OAIUsage_record_daily_enum_category() {}

void OAIUsage_record_daily_enum_category::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUsage_record_daily_enum_category::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUsage_record_daily_enum_category::fromJson(QString jsonString) {
    
    if ( jsonString.compare("a2p-registration-fees", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::A2P_REGISTRATION_FEES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("agent-conference", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::AGENT_CONFERENCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("amazon-polly", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::AMAZON_POLLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("answering-machine-detection", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::ANSWERING_MACHINE_DETECTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("authy-authentications", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::AUTHY_AUTHENTICATIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("authy-calls-outbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::AUTHY_CALLS_OUTBOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("authy-monthly-fees", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::AUTHY_MONTHLY_FEES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("authy-phone-intelligence", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::AUTHY_PHONE_INTELLIGENCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("authy-phone-verifications", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::AUTHY_PHONE_VERIFICATIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("authy-sms-outbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::AUTHY_SMS_OUTBOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("call-progess-events", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALL_PROGESS_EVENTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calleridlookups", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLERIDLOOKUPS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-client", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_CLIENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-globalconference", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_GLOBALCONFERENCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-inbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_INBOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-inbound-local", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_INBOUND_LOCAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-inbound-mobile", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_INBOUND_MOBILE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-inbound-tollfree", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_INBOUND_TOLLFREE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-outbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_OUTBOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-pay-verb-transactions", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_PAY_VERB_TRANSACTIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-recordings", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_RECORDINGS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-sip", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_SIP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-sip-inbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_SIP_INBOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-sip-outbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_SIP_OUTBOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("calls-transfers", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CALLS_TRANSFERS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("carrier-lookups", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CARRIER_LOOKUPS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("conversations", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CONVERSATIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("conversations-api-requests", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CONVERSATIONS_API_REQUESTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("conversations-conversation-events", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CONVERSATIONS_CONVERSATION_EVENTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("conversations-endpoint-connectivity", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CONVERSATIONS_ENDPOINT_CONNECTIVITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("conversations-events", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CONVERSATIONS_EVENTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("conversations-participant-events", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CONVERSATIONS_PARTICIPANT_EVENTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("conversations-participants", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CONVERSATIONS_PARTICIPANTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("cps", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::CPS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("flex-usage", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::FLEX_USAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("fraud-lookups", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::FRAUD_LOOKUPS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("group-rooms", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::GROUP_ROOMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("group-rooms-data-track", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::GROUP_ROOMS_DATA_TRACK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("group-rooms-encrypted-media-recorded", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::GROUP_ROOMS_ENCRYPTED_MEDIA_RECORDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("group-rooms-media-downloaded", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::GROUP_ROOMS_MEDIA_DOWNLOADED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("group-rooms-media-recorded", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::GROUP_ROOMS_MEDIA_RECORDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("group-rooms-media-routed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::GROUP_ROOMS_MEDIA_ROUTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("group-rooms-media-stored", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::GROUP_ROOMS_MEDIA_STORED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("group-rooms-participant-minutes", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::GROUP_ROOMS_PARTICIPANT_MINUTES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("group-rooms-recorded-minutes", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::GROUP_ROOMS_RECORDED_MINUTES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("imp-v1-usage", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::IMP_V1_USAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("lookups", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::LOOKUPS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-algorithmia-named-entity-recognition", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_ALGORITHMIA_NAMED_ENTITY_RECOGNITION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-cadence-transcription", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_CADENCE_TRANSCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-cadence-translation", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_CADENCE_TRANSLATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-capio-speech-to-text", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_CAPIO_SPEECH_TO_TEXT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-convriza-ababa", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_CONVRIZA_ABABA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-deepgram-phrase-detector", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_DEEPGRAM_PHRASE_DETECTOR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-digital-segment-business-info", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_DIGITAL_SEGMENT_BUSINESS_INFO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-facebook-offline-conversions", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_FACEBOOK_OFFLINE_CONVERSIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-google-speech-to-text", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_GOOGLE_SPEECH_TO_TEXT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-ibm-watson-message-insights", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_IBM_WATSON_MESSAGE_INSIGHTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-ibm-watson-message-sentiment", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_IBM_WATSON_MESSAGE_SENTIMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-ibm-watson-recording-analysis", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_IBM_WATSON_RECORDING_ANALYSIS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-ibm-watson-tone-analyzer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_IBM_WATSON_TONE_ANALYZER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-icehook-systems-scout", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_ICEHOOK_SYSTEMS_SCOUT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-infogroup-dataaxle-bizinfo", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_INFOGROUP_DATAAXLE_BIZINFO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-keen-io-contact-center-analytics", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_KEEN_IO_CONTACT_CENTER_ANALYTICS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-marchex-cleancall", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_MARCHEX_CLEANCALL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-marchex-sentiment-analysis-for-sms", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_MARCHEX_SENTIMENT_ANALYSIS_FOR_SMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-marketplace-nextcaller-social-id", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_MARKETPLACE_NEXTCALLER_SOCIAL_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-mobile-commons-opt-out-classifier", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_MOBILE_COMMONS_OPT_OUT_CLASSIFIER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-nexiwave-voicemail-to-text", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_NEXIWAVE_VOICEMAIL_TO_TEXT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-nextcaller-advanced-caller-identification", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_NEXTCALLER_ADVANCED_CALLER_IDENTIFICATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-nomorobo-spam-score", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_NOMOROBO_SPAM_SCORE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-payfone-tcpa-compliance", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_PAYFONE_TCPA_COMPLIANCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-remeeting-automatic-speech-recognition", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_REMEETING_AUTOMATIC_SPEECH_RECOGNITION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-tcpa-defense-solutions-blacklist-feed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_TCPA_DEFENSE_SOLUTIONS_BLACKLIST_FEED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-telo-opencnam", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_TELO_OPENCNAM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-truecnam-true-spam", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_TRUECNAM_TRUE_SPAM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-twilio-caller-name-lookup-us", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_TWILIO_CALLER_NAME_LOOKUP_US;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-twilio-carrier-information-lookup", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_TWILIO_CARRIER_INFORMATION_LOOKUP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-voicebase-pci", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_VOICEBASE_PCI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-voicebase-transcription", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_VOICEBASE_TRANSCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-voicebase-transcription-custom-vocabulary", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_VOICEBASE_TRANSCRIPTION_CUSTOM_VOCABULARY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-whitepages-pro-caller-identification", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_WHITEPAGES_PRO_CALLER_IDENTIFICATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-whitepages-pro-phone-intelligence", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_WHITEPAGES_PRO_PHONE_INTELLIGENCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-whitepages-pro-phone-reputation", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_WHITEPAGES_PRO_PHONE_REPUTATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-wolfarm-spoken-results", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_WOLFARM_SPOKEN_RESULTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-wolfram-short-answer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_WOLFRAM_SHORT_ANSWER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("marketplace-ytica-contact-center-reporting-analytics", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MARKETPLACE_YTICA_CONTACT_CENTER_REPORTING_ANALYTICS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mediastorage", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MEDIASTORAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mms", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mms-inbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MMS_INBOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mms-inbound-longcode", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MMS_INBOUND_LONGCODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mms-inbound-shortcode", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MMS_INBOUND_SHORTCODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mms-messages-carrierfees", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MMS_MESSAGES_CARRIERFEES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mms-outbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MMS_OUTBOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mms-outbound-longcode", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MMS_OUTBOUND_LONGCODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mms-outbound-shortcode", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MMS_OUTBOUND_SHORTCODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("monitor-reads", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MONITOR_READS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("monitor-storage", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MONITOR_STORAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("monitor-writes", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::MONITOR_WRITES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("notify", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::NOTIFY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("notify-actions-attempts", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::NOTIFY_ACTIONS_ATTEMPTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("notify-channels", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::NOTIFY_CHANNELS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("number-format-lookups", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::NUMBER_FORMAT_LOOKUPS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pchat", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PCHAT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pchat-users", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PCHAT_USERS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("peer-to-peer-rooms-participant-minutes", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PEER_TO_PEER_ROOMS_PARTICIPANT_MINUTES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pfax", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PFAX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pfax-minutes", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PFAX_MINUTES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pfax-minutes-inbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PFAX_MINUTES_INBOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pfax-minutes-outbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PFAX_MINUTES_OUTBOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pfax-pages", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PFAX_PAGES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("phonenumbers", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PHONENUMBERS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("phonenumbers-cps", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PHONENUMBERS_CPS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("phonenumbers-emergency", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PHONENUMBERS_EMERGENCY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("phonenumbers-local", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PHONENUMBERS_LOCAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("phonenumbers-mobile", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PHONENUMBERS_MOBILE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("phonenumbers-setups", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PHONENUMBERS_SETUPS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("phonenumbers-tollfree", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PHONENUMBERS_TOLLFREE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("premiumsupport", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PREMIUMSUPPORT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("proxy", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PROXY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("proxy-active-sessions", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PROXY_ACTIVE_SESSIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pstnconnectivity", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PSTNCONNECTIVITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-composition-media-downloaded", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_COMPOSITION_MEDIA_DOWNLOADED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-composition-media-encrypted", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_COMPOSITION_MEDIA_ENCRYPTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-composition-media-stored", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_COMPOSITION_MEDIA_STORED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-composition-minutes", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_COMPOSITION_MINUTES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-recording-compositions", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_RECORDING_COMPOSITIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-room-participants", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-room-participants-au1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_AU1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-room-participants-br1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_BR1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-room-participants-ie1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_IE1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-room-participants-jp1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_JP1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-room-participants-sg1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_SG1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-room-participants-us1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_US1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-room-participants-us2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_US2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-rooms", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_ROOMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pv-sip-endpoint-registrations", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::PV_SIP_ENDPOINT_REGISTRATIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("recordings", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::RECORDINGS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("recordingstorage", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::RECORDINGSTORAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("rooms-group-bandwidth", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::ROOMS_GROUP_BANDWIDTH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("rooms-group-minutes", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::ROOMS_GROUP_MINUTES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("rooms-peer-to-peer-minutes", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::ROOMS_PEER_TO_PEER_MINUTES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("shortcodes", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SHORTCODES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("shortcodes-customerowned", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SHORTCODES_CUSTOMEROWNED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("shortcodes-mms-enablement", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SHORTCODES_MMS_ENABLEMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("shortcodes-mps", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SHORTCODES_MPS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("shortcodes-random", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SHORTCODES_RANDOM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("shortcodes-uk", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SHORTCODES_UK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("shortcodes-vanity", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SHORTCODES_VANITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("small-group-rooms", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMALL_GROUP_ROOMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("small-group-rooms-data-track", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMALL_GROUP_ROOMS_DATA_TRACK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("small-group-rooms-participant-minutes", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMALL_GROUP_ROOMS_PARTICIPANT_MINUTES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sms", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sms-inbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMS_INBOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sms-inbound-longcode", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMS_INBOUND_LONGCODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sms-inbound-shortcode", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMS_INBOUND_SHORTCODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sms-messages-carrierfees", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMS_MESSAGES_CARRIERFEES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sms-messages-features", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMS_MESSAGES_FEATURES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sms-messages-features-senderid", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMS_MESSAGES_FEATURES_SENDERID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sms-outbound", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMS_OUTBOUND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sms-outbound-content-inspection", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMS_OUTBOUND_CONTENT_INSPECTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sms-outbound-longcode", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMS_OUTBOUND_LONGCODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sms-outbound-shortcode", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SMS_OUTBOUND_SHORTCODE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("speech-recognition", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SPEECH_RECOGNITION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("studio-engagements", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::STUDIO_ENGAGEMENTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sync", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SYNC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sync-actions", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SYNC_ACTIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sync-endpoint-hours", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SYNC_ENDPOINT_HOURS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sync-endpoint-hours-above-daily-cap", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::SYNC_ENDPOINT_HOURS_ABOVE_DAILY_CAP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("taskrouter-tasks", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TASKROUTER_TASKS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("totalprice", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TOTALPRICE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("transcriptions", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TRANSCRIPTIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("trunking-cps", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TRUNKING_CPS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("trunking-emergency-calls", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TRUNKING_EMERGENCY_CALLS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("trunking-origination", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TRUNKING_ORIGINATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("trunking-origination-local", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TRUNKING_ORIGINATION_LOCAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("trunking-origination-mobile", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TRUNKING_ORIGINATION_MOBILE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("trunking-origination-tollfree", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TRUNKING_ORIGINATION_TOLLFREE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("trunking-recordings", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TRUNKING_RECORDINGS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("trunking-secure", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TRUNKING_SECURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("trunking-termination", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TRUNKING_TERMINATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("tts-google", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TTS_GOOGLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("turnmegabytes", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TURNMEGABYTES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("turnmegabytes-australia", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TURNMEGABYTES_AUSTRALIA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("turnmegabytes-brasil", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TURNMEGABYTES_BRASIL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("turnmegabytes-germany", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TURNMEGABYTES_GERMANY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("turnmegabytes-india", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TURNMEGABYTES_INDIA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("turnmegabytes-ireland", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TURNMEGABYTES_IRELAND;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("turnmegabytes-japan", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TURNMEGABYTES_JAPAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("turnmegabytes-singapore", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TURNMEGABYTES_SINGAPORE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("turnmegabytes-useast", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TURNMEGABYTES_USEAST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("turnmegabytes-uswest", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TURNMEGABYTES_USWEST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("twilio-interconnect", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::TWILIO_INTERCONNECT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("verify-push", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VERIFY_PUSH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("verify-totp", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VERIFY_TOTP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("verify-whatsapp-conversations-business-initiated", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VERIFY_WHATSAPP_CONVERSATIONS_BUSINESS_INITIATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("video-recordings", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VIDEO_RECORDINGS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("virtual-agent", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VIRTUAL_AGENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("voice-insights", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VOICE_INSIGHTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("voice-insights-client-insights-on-demand-minute", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VOICE_INSIGHTS_CLIENT_INSIGHTS_ON_DEMAND_MINUTE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("voice-insights-ptsn-insights-on-demand-minute", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VOICE_INSIGHTS_PTSN_INSIGHTS_ON_DEMAND_MINUTE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("voice-insights-sip-interface-insights-on-demand-minute", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VOICE_INSIGHTS_SIP_INTERFACE_INSIGHTS_ON_DEMAND_MINUTE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("voice-insights-sip-trunking-insights-on-demand-minute", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VOICE_INSIGHTS_SIP_TRUNKING_INSIGHTS_ON_DEMAND_MINUTE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("voice-intelligence", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VOICE_INTELLIGENCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("voice-intelligence-transcription", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VOICE_INTELLIGENCE_TRANSCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("voice-intelligence-operators", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::VOICE_INTELLIGENCE_OPERATORS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-orders", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_ORDERS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-orders-artwork", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_ORDERS_ARTWORK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-orders-bulk", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_ORDERS_BULK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-orders-esim", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_ORDERS_ESIM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-orders-starter", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_ORDERS_STARTER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-commands", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-commands-africa", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_AFRICA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-commands-asia", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_ASIA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-commands-centralandsouthamerica", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_CENTRALANDSOUTHAMERICA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-commands-europe", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_EUROPE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-commands-home", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_HOME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-commands-northamerica", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_NORTHAMERICA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-commands-oceania", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_OCEANIA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-commands-roaming", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_ROAMING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-africa", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_AFRICA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-asia", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_ASIA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-centralandsouthamerica", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_CENTRALANDSOUTHAMERICA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-custom-additionalmb", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_CUSTOM_ADDITIONALMB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-custom-first5mb", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_CUSTOM_FIRST5MB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-domestic-roaming", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_DOMESTIC_ROAMING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-europe", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_EUROPE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-individual-additionalgb", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_INDIVIDUAL_ADDITIONALGB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-individual-firstgb", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_INDIVIDUAL_FIRSTGB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-international-roaming-canada", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_INTERNATIONAL_ROAMING_CANADA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-international-roaming-india", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_INTERNATIONAL_ROAMING_INDIA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-international-roaming-mexico", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_INTERNATIONAL_ROAMING_MEXICO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-northamerica", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_NORTHAMERICA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-oceania", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_OCEANIA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-pooled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_POOLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-pooled-downlink", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_POOLED_DOWNLINK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-data-pooled-uplink", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_POOLED_UPLINK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-mrc", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_MRC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-mrc-custom", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_MRC_CUSTOM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-mrc-individual", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_MRC_INDIVIDUAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-mrc-pooled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_MRC_POOLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-mrc-suspended", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_MRC_SUSPENDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-sms", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_SMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("wireless-usage-voice", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_VOICE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUsage_record_daily_enum_category::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUsage_record_daily_enum_category::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUsage_record_daily_enum_category::A2P_REGISTRATION_FEES:
            val = "a2p-registration-fees";
            break;
        case eOAIUsage_record_daily_enum_category::AGENT_CONFERENCE:
            val = "agent-conference";
            break;
        case eOAIUsage_record_daily_enum_category::AMAZON_POLLY:
            val = "amazon-polly";
            break;
        case eOAIUsage_record_daily_enum_category::ANSWERING_MACHINE_DETECTION:
            val = "answering-machine-detection";
            break;
        case eOAIUsage_record_daily_enum_category::AUTHY_AUTHENTICATIONS:
            val = "authy-authentications";
            break;
        case eOAIUsage_record_daily_enum_category::AUTHY_CALLS_OUTBOUND:
            val = "authy-calls-outbound";
            break;
        case eOAIUsage_record_daily_enum_category::AUTHY_MONTHLY_FEES:
            val = "authy-monthly-fees";
            break;
        case eOAIUsage_record_daily_enum_category::AUTHY_PHONE_INTELLIGENCE:
            val = "authy-phone-intelligence";
            break;
        case eOAIUsage_record_daily_enum_category::AUTHY_PHONE_VERIFICATIONS:
            val = "authy-phone-verifications";
            break;
        case eOAIUsage_record_daily_enum_category::AUTHY_SMS_OUTBOUND:
            val = "authy-sms-outbound";
            break;
        case eOAIUsage_record_daily_enum_category::CALL_PROGESS_EVENTS:
            val = "call-progess-events";
            break;
        case eOAIUsage_record_daily_enum_category::CALLERIDLOOKUPS:
            val = "calleridlookups";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS:
            val = "calls";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_CLIENT:
            val = "calls-client";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_GLOBALCONFERENCE:
            val = "calls-globalconference";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_INBOUND:
            val = "calls-inbound";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_INBOUND_LOCAL:
            val = "calls-inbound-local";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_INBOUND_MOBILE:
            val = "calls-inbound-mobile";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_INBOUND_TOLLFREE:
            val = "calls-inbound-tollfree";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_OUTBOUND:
            val = "calls-outbound";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_PAY_VERB_TRANSACTIONS:
            val = "calls-pay-verb-transactions";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_RECORDINGS:
            val = "calls-recordings";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_SIP:
            val = "calls-sip";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_SIP_INBOUND:
            val = "calls-sip-inbound";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_SIP_OUTBOUND:
            val = "calls-sip-outbound";
            break;
        case eOAIUsage_record_daily_enum_category::CALLS_TRANSFERS:
            val = "calls-transfers";
            break;
        case eOAIUsage_record_daily_enum_category::CARRIER_LOOKUPS:
            val = "carrier-lookups";
            break;
        case eOAIUsage_record_daily_enum_category::CONVERSATIONS:
            val = "conversations";
            break;
        case eOAIUsage_record_daily_enum_category::CONVERSATIONS_API_REQUESTS:
            val = "conversations-api-requests";
            break;
        case eOAIUsage_record_daily_enum_category::CONVERSATIONS_CONVERSATION_EVENTS:
            val = "conversations-conversation-events";
            break;
        case eOAIUsage_record_daily_enum_category::CONVERSATIONS_ENDPOINT_CONNECTIVITY:
            val = "conversations-endpoint-connectivity";
            break;
        case eOAIUsage_record_daily_enum_category::CONVERSATIONS_EVENTS:
            val = "conversations-events";
            break;
        case eOAIUsage_record_daily_enum_category::CONVERSATIONS_PARTICIPANT_EVENTS:
            val = "conversations-participant-events";
            break;
        case eOAIUsage_record_daily_enum_category::CONVERSATIONS_PARTICIPANTS:
            val = "conversations-participants";
            break;
        case eOAIUsage_record_daily_enum_category::CPS:
            val = "cps";
            break;
        case eOAIUsage_record_daily_enum_category::FLEX_USAGE:
            val = "flex-usage";
            break;
        case eOAIUsage_record_daily_enum_category::FRAUD_LOOKUPS:
            val = "fraud-lookups";
            break;
        case eOAIUsage_record_daily_enum_category::GROUP_ROOMS:
            val = "group-rooms";
            break;
        case eOAIUsage_record_daily_enum_category::GROUP_ROOMS_DATA_TRACK:
            val = "group-rooms-data-track";
            break;
        case eOAIUsage_record_daily_enum_category::GROUP_ROOMS_ENCRYPTED_MEDIA_RECORDED:
            val = "group-rooms-encrypted-media-recorded";
            break;
        case eOAIUsage_record_daily_enum_category::GROUP_ROOMS_MEDIA_DOWNLOADED:
            val = "group-rooms-media-downloaded";
            break;
        case eOAIUsage_record_daily_enum_category::GROUP_ROOMS_MEDIA_RECORDED:
            val = "group-rooms-media-recorded";
            break;
        case eOAIUsage_record_daily_enum_category::GROUP_ROOMS_MEDIA_ROUTED:
            val = "group-rooms-media-routed";
            break;
        case eOAIUsage_record_daily_enum_category::GROUP_ROOMS_MEDIA_STORED:
            val = "group-rooms-media-stored";
            break;
        case eOAIUsage_record_daily_enum_category::GROUP_ROOMS_PARTICIPANT_MINUTES:
            val = "group-rooms-participant-minutes";
            break;
        case eOAIUsage_record_daily_enum_category::GROUP_ROOMS_RECORDED_MINUTES:
            val = "group-rooms-recorded-minutes";
            break;
        case eOAIUsage_record_daily_enum_category::IMP_V1_USAGE:
            val = "imp-v1-usage";
            break;
        case eOAIUsage_record_daily_enum_category::LOOKUPS:
            val = "lookups";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE:
            val = "marketplace";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_ALGORITHMIA_NAMED_ENTITY_RECOGNITION:
            val = "marketplace-algorithmia-named-entity-recognition";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_CADENCE_TRANSCRIPTION:
            val = "marketplace-cadence-transcription";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_CADENCE_TRANSLATION:
            val = "marketplace-cadence-translation";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_CAPIO_SPEECH_TO_TEXT:
            val = "marketplace-capio-speech-to-text";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_CONVRIZA_ABABA:
            val = "marketplace-convriza-ababa";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_DEEPGRAM_PHRASE_DETECTOR:
            val = "marketplace-deepgram-phrase-detector";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_DIGITAL_SEGMENT_BUSINESS_INFO:
            val = "marketplace-digital-segment-business-info";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_FACEBOOK_OFFLINE_CONVERSIONS:
            val = "marketplace-facebook-offline-conversions";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_GOOGLE_SPEECH_TO_TEXT:
            val = "marketplace-google-speech-to-text";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_IBM_WATSON_MESSAGE_INSIGHTS:
            val = "marketplace-ibm-watson-message-insights";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_IBM_WATSON_MESSAGE_SENTIMENT:
            val = "marketplace-ibm-watson-message-sentiment";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_IBM_WATSON_RECORDING_ANALYSIS:
            val = "marketplace-ibm-watson-recording-analysis";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_IBM_WATSON_TONE_ANALYZER:
            val = "marketplace-ibm-watson-tone-analyzer";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_ICEHOOK_SYSTEMS_SCOUT:
            val = "marketplace-icehook-systems-scout";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_INFOGROUP_DATAAXLE_BIZINFO:
            val = "marketplace-infogroup-dataaxle-bizinfo";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_KEEN_IO_CONTACT_CENTER_ANALYTICS:
            val = "marketplace-keen-io-contact-center-analytics";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_MARCHEX_CLEANCALL:
            val = "marketplace-marchex-cleancall";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_MARCHEX_SENTIMENT_ANALYSIS_FOR_SMS:
            val = "marketplace-marchex-sentiment-analysis-for-sms";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_MARKETPLACE_NEXTCALLER_SOCIAL_ID:
            val = "marketplace-marketplace-nextcaller-social-id";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_MOBILE_COMMONS_OPT_OUT_CLASSIFIER:
            val = "marketplace-mobile-commons-opt-out-classifier";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_NEXIWAVE_VOICEMAIL_TO_TEXT:
            val = "marketplace-nexiwave-voicemail-to-text";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_NEXTCALLER_ADVANCED_CALLER_IDENTIFICATION:
            val = "marketplace-nextcaller-advanced-caller-identification";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_NOMOROBO_SPAM_SCORE:
            val = "marketplace-nomorobo-spam-score";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_PAYFONE_TCPA_COMPLIANCE:
            val = "marketplace-payfone-tcpa-compliance";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_REMEETING_AUTOMATIC_SPEECH_RECOGNITION:
            val = "marketplace-remeeting-automatic-speech-recognition";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_TCPA_DEFENSE_SOLUTIONS_BLACKLIST_FEED:
            val = "marketplace-tcpa-defense-solutions-blacklist-feed";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_TELO_OPENCNAM:
            val = "marketplace-telo-opencnam";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_TRUECNAM_TRUE_SPAM:
            val = "marketplace-truecnam-true-spam";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_TWILIO_CALLER_NAME_LOOKUP_US:
            val = "marketplace-twilio-caller-name-lookup-us";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_TWILIO_CARRIER_INFORMATION_LOOKUP:
            val = "marketplace-twilio-carrier-information-lookup";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_VOICEBASE_PCI:
            val = "marketplace-voicebase-pci";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_VOICEBASE_TRANSCRIPTION:
            val = "marketplace-voicebase-transcription";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_VOICEBASE_TRANSCRIPTION_CUSTOM_VOCABULARY:
            val = "marketplace-voicebase-transcription-custom-vocabulary";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_WHITEPAGES_PRO_CALLER_IDENTIFICATION:
            val = "marketplace-whitepages-pro-caller-identification";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_WHITEPAGES_PRO_PHONE_INTELLIGENCE:
            val = "marketplace-whitepages-pro-phone-intelligence";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_WHITEPAGES_PRO_PHONE_REPUTATION:
            val = "marketplace-whitepages-pro-phone-reputation";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_WOLFARM_SPOKEN_RESULTS:
            val = "marketplace-wolfarm-spoken-results";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_WOLFRAM_SHORT_ANSWER:
            val = "marketplace-wolfram-short-answer";
            break;
        case eOAIUsage_record_daily_enum_category::MARKETPLACE_YTICA_CONTACT_CENTER_REPORTING_ANALYTICS:
            val = "marketplace-ytica-contact-center-reporting-analytics";
            break;
        case eOAIUsage_record_daily_enum_category::MEDIASTORAGE:
            val = "mediastorage";
            break;
        case eOAIUsage_record_daily_enum_category::MMS:
            val = "mms";
            break;
        case eOAIUsage_record_daily_enum_category::MMS_INBOUND:
            val = "mms-inbound";
            break;
        case eOAIUsage_record_daily_enum_category::MMS_INBOUND_LONGCODE:
            val = "mms-inbound-longcode";
            break;
        case eOAIUsage_record_daily_enum_category::MMS_INBOUND_SHORTCODE:
            val = "mms-inbound-shortcode";
            break;
        case eOAIUsage_record_daily_enum_category::MMS_MESSAGES_CARRIERFEES:
            val = "mms-messages-carrierfees";
            break;
        case eOAIUsage_record_daily_enum_category::MMS_OUTBOUND:
            val = "mms-outbound";
            break;
        case eOAIUsage_record_daily_enum_category::MMS_OUTBOUND_LONGCODE:
            val = "mms-outbound-longcode";
            break;
        case eOAIUsage_record_daily_enum_category::MMS_OUTBOUND_SHORTCODE:
            val = "mms-outbound-shortcode";
            break;
        case eOAIUsage_record_daily_enum_category::MONITOR_READS:
            val = "monitor-reads";
            break;
        case eOAIUsage_record_daily_enum_category::MONITOR_STORAGE:
            val = "monitor-storage";
            break;
        case eOAIUsage_record_daily_enum_category::MONITOR_WRITES:
            val = "monitor-writes";
            break;
        case eOAIUsage_record_daily_enum_category::NOTIFY:
            val = "notify";
            break;
        case eOAIUsage_record_daily_enum_category::NOTIFY_ACTIONS_ATTEMPTS:
            val = "notify-actions-attempts";
            break;
        case eOAIUsage_record_daily_enum_category::NOTIFY_CHANNELS:
            val = "notify-channels";
            break;
        case eOAIUsage_record_daily_enum_category::NUMBER_FORMAT_LOOKUPS:
            val = "number-format-lookups";
            break;
        case eOAIUsage_record_daily_enum_category::PCHAT:
            val = "pchat";
            break;
        case eOAIUsage_record_daily_enum_category::PCHAT_USERS:
            val = "pchat-users";
            break;
        case eOAIUsage_record_daily_enum_category::PEER_TO_PEER_ROOMS_PARTICIPANT_MINUTES:
            val = "peer-to-peer-rooms-participant-minutes";
            break;
        case eOAIUsage_record_daily_enum_category::PFAX:
            val = "pfax";
            break;
        case eOAIUsage_record_daily_enum_category::PFAX_MINUTES:
            val = "pfax-minutes";
            break;
        case eOAIUsage_record_daily_enum_category::PFAX_MINUTES_INBOUND:
            val = "pfax-minutes-inbound";
            break;
        case eOAIUsage_record_daily_enum_category::PFAX_MINUTES_OUTBOUND:
            val = "pfax-minutes-outbound";
            break;
        case eOAIUsage_record_daily_enum_category::PFAX_PAGES:
            val = "pfax-pages";
            break;
        case eOAIUsage_record_daily_enum_category::PHONENUMBERS:
            val = "phonenumbers";
            break;
        case eOAIUsage_record_daily_enum_category::PHONENUMBERS_CPS:
            val = "phonenumbers-cps";
            break;
        case eOAIUsage_record_daily_enum_category::PHONENUMBERS_EMERGENCY:
            val = "phonenumbers-emergency";
            break;
        case eOAIUsage_record_daily_enum_category::PHONENUMBERS_LOCAL:
            val = "phonenumbers-local";
            break;
        case eOAIUsage_record_daily_enum_category::PHONENUMBERS_MOBILE:
            val = "phonenumbers-mobile";
            break;
        case eOAIUsage_record_daily_enum_category::PHONENUMBERS_SETUPS:
            val = "phonenumbers-setups";
            break;
        case eOAIUsage_record_daily_enum_category::PHONENUMBERS_TOLLFREE:
            val = "phonenumbers-tollfree";
            break;
        case eOAIUsage_record_daily_enum_category::PREMIUMSUPPORT:
            val = "premiumsupport";
            break;
        case eOAIUsage_record_daily_enum_category::PROXY:
            val = "proxy";
            break;
        case eOAIUsage_record_daily_enum_category::PROXY_ACTIVE_SESSIONS:
            val = "proxy-active-sessions";
            break;
        case eOAIUsage_record_daily_enum_category::PSTNCONNECTIVITY:
            val = "pstnconnectivity";
            break;
        case eOAIUsage_record_daily_enum_category::PV:
            val = "pv";
            break;
        case eOAIUsage_record_daily_enum_category::PV_COMPOSITION_MEDIA_DOWNLOADED:
            val = "pv-composition-media-downloaded";
            break;
        case eOAIUsage_record_daily_enum_category::PV_COMPOSITION_MEDIA_ENCRYPTED:
            val = "pv-composition-media-encrypted";
            break;
        case eOAIUsage_record_daily_enum_category::PV_COMPOSITION_MEDIA_STORED:
            val = "pv-composition-media-stored";
            break;
        case eOAIUsage_record_daily_enum_category::PV_COMPOSITION_MINUTES:
            val = "pv-composition-minutes";
            break;
        case eOAIUsage_record_daily_enum_category::PV_RECORDING_COMPOSITIONS:
            val = "pv-recording-compositions";
            break;
        case eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS:
            val = "pv-room-participants";
            break;
        case eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_AU1:
            val = "pv-room-participants-au1";
            break;
        case eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_BR1:
            val = "pv-room-participants-br1";
            break;
        case eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_IE1:
            val = "pv-room-participants-ie1";
            break;
        case eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_JP1:
            val = "pv-room-participants-jp1";
            break;
        case eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_SG1:
            val = "pv-room-participants-sg1";
            break;
        case eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_US1:
            val = "pv-room-participants-us1";
            break;
        case eOAIUsage_record_daily_enum_category::PV_ROOM_PARTICIPANTS_US2:
            val = "pv-room-participants-us2";
            break;
        case eOAIUsage_record_daily_enum_category::PV_ROOMS:
            val = "pv-rooms";
            break;
        case eOAIUsage_record_daily_enum_category::PV_SIP_ENDPOINT_REGISTRATIONS:
            val = "pv-sip-endpoint-registrations";
            break;
        case eOAIUsage_record_daily_enum_category::RECORDINGS:
            val = "recordings";
            break;
        case eOAIUsage_record_daily_enum_category::RECORDINGSTORAGE:
            val = "recordingstorage";
            break;
        case eOAIUsage_record_daily_enum_category::ROOMS_GROUP_BANDWIDTH:
            val = "rooms-group-bandwidth";
            break;
        case eOAIUsage_record_daily_enum_category::ROOMS_GROUP_MINUTES:
            val = "rooms-group-minutes";
            break;
        case eOAIUsage_record_daily_enum_category::ROOMS_PEER_TO_PEER_MINUTES:
            val = "rooms-peer-to-peer-minutes";
            break;
        case eOAIUsage_record_daily_enum_category::SHORTCODES:
            val = "shortcodes";
            break;
        case eOAIUsage_record_daily_enum_category::SHORTCODES_CUSTOMEROWNED:
            val = "shortcodes-customerowned";
            break;
        case eOAIUsage_record_daily_enum_category::SHORTCODES_MMS_ENABLEMENT:
            val = "shortcodes-mms-enablement";
            break;
        case eOAIUsage_record_daily_enum_category::SHORTCODES_MPS:
            val = "shortcodes-mps";
            break;
        case eOAIUsage_record_daily_enum_category::SHORTCODES_RANDOM:
            val = "shortcodes-random";
            break;
        case eOAIUsage_record_daily_enum_category::SHORTCODES_UK:
            val = "shortcodes-uk";
            break;
        case eOAIUsage_record_daily_enum_category::SHORTCODES_VANITY:
            val = "shortcodes-vanity";
            break;
        case eOAIUsage_record_daily_enum_category::SMALL_GROUP_ROOMS:
            val = "small-group-rooms";
            break;
        case eOAIUsage_record_daily_enum_category::SMALL_GROUP_ROOMS_DATA_TRACK:
            val = "small-group-rooms-data-track";
            break;
        case eOAIUsage_record_daily_enum_category::SMALL_GROUP_ROOMS_PARTICIPANT_MINUTES:
            val = "small-group-rooms-participant-minutes";
            break;
        case eOAIUsage_record_daily_enum_category::SMS:
            val = "sms";
            break;
        case eOAIUsage_record_daily_enum_category::SMS_INBOUND:
            val = "sms-inbound";
            break;
        case eOAIUsage_record_daily_enum_category::SMS_INBOUND_LONGCODE:
            val = "sms-inbound-longcode";
            break;
        case eOAIUsage_record_daily_enum_category::SMS_INBOUND_SHORTCODE:
            val = "sms-inbound-shortcode";
            break;
        case eOAIUsage_record_daily_enum_category::SMS_MESSAGES_CARRIERFEES:
            val = "sms-messages-carrierfees";
            break;
        case eOAIUsage_record_daily_enum_category::SMS_MESSAGES_FEATURES:
            val = "sms-messages-features";
            break;
        case eOAIUsage_record_daily_enum_category::SMS_MESSAGES_FEATURES_SENDERID:
            val = "sms-messages-features-senderid";
            break;
        case eOAIUsage_record_daily_enum_category::SMS_OUTBOUND:
            val = "sms-outbound";
            break;
        case eOAIUsage_record_daily_enum_category::SMS_OUTBOUND_CONTENT_INSPECTION:
            val = "sms-outbound-content-inspection";
            break;
        case eOAIUsage_record_daily_enum_category::SMS_OUTBOUND_LONGCODE:
            val = "sms-outbound-longcode";
            break;
        case eOAIUsage_record_daily_enum_category::SMS_OUTBOUND_SHORTCODE:
            val = "sms-outbound-shortcode";
            break;
        case eOAIUsage_record_daily_enum_category::SPEECH_RECOGNITION:
            val = "speech-recognition";
            break;
        case eOAIUsage_record_daily_enum_category::STUDIO_ENGAGEMENTS:
            val = "studio-engagements";
            break;
        case eOAIUsage_record_daily_enum_category::SYNC:
            val = "sync";
            break;
        case eOAIUsage_record_daily_enum_category::SYNC_ACTIONS:
            val = "sync-actions";
            break;
        case eOAIUsage_record_daily_enum_category::SYNC_ENDPOINT_HOURS:
            val = "sync-endpoint-hours";
            break;
        case eOAIUsage_record_daily_enum_category::SYNC_ENDPOINT_HOURS_ABOVE_DAILY_CAP:
            val = "sync-endpoint-hours-above-daily-cap";
            break;
        case eOAIUsage_record_daily_enum_category::TASKROUTER_TASKS:
            val = "taskrouter-tasks";
            break;
        case eOAIUsage_record_daily_enum_category::TOTALPRICE:
            val = "totalprice";
            break;
        case eOAIUsage_record_daily_enum_category::TRANSCRIPTIONS:
            val = "transcriptions";
            break;
        case eOAIUsage_record_daily_enum_category::TRUNKING_CPS:
            val = "trunking-cps";
            break;
        case eOAIUsage_record_daily_enum_category::TRUNKING_EMERGENCY_CALLS:
            val = "trunking-emergency-calls";
            break;
        case eOAIUsage_record_daily_enum_category::TRUNKING_ORIGINATION:
            val = "trunking-origination";
            break;
        case eOAIUsage_record_daily_enum_category::TRUNKING_ORIGINATION_LOCAL:
            val = "trunking-origination-local";
            break;
        case eOAIUsage_record_daily_enum_category::TRUNKING_ORIGINATION_MOBILE:
            val = "trunking-origination-mobile";
            break;
        case eOAIUsage_record_daily_enum_category::TRUNKING_ORIGINATION_TOLLFREE:
            val = "trunking-origination-tollfree";
            break;
        case eOAIUsage_record_daily_enum_category::TRUNKING_RECORDINGS:
            val = "trunking-recordings";
            break;
        case eOAIUsage_record_daily_enum_category::TRUNKING_SECURE:
            val = "trunking-secure";
            break;
        case eOAIUsage_record_daily_enum_category::TRUNKING_TERMINATION:
            val = "trunking-termination";
            break;
        case eOAIUsage_record_daily_enum_category::TTS_GOOGLE:
            val = "tts-google";
            break;
        case eOAIUsage_record_daily_enum_category::TURNMEGABYTES:
            val = "turnmegabytes";
            break;
        case eOAIUsage_record_daily_enum_category::TURNMEGABYTES_AUSTRALIA:
            val = "turnmegabytes-australia";
            break;
        case eOAIUsage_record_daily_enum_category::TURNMEGABYTES_BRASIL:
            val = "turnmegabytes-brasil";
            break;
        case eOAIUsage_record_daily_enum_category::TURNMEGABYTES_GERMANY:
            val = "turnmegabytes-germany";
            break;
        case eOAIUsage_record_daily_enum_category::TURNMEGABYTES_INDIA:
            val = "turnmegabytes-india";
            break;
        case eOAIUsage_record_daily_enum_category::TURNMEGABYTES_IRELAND:
            val = "turnmegabytes-ireland";
            break;
        case eOAIUsage_record_daily_enum_category::TURNMEGABYTES_JAPAN:
            val = "turnmegabytes-japan";
            break;
        case eOAIUsage_record_daily_enum_category::TURNMEGABYTES_SINGAPORE:
            val = "turnmegabytes-singapore";
            break;
        case eOAIUsage_record_daily_enum_category::TURNMEGABYTES_USEAST:
            val = "turnmegabytes-useast";
            break;
        case eOAIUsage_record_daily_enum_category::TURNMEGABYTES_USWEST:
            val = "turnmegabytes-uswest";
            break;
        case eOAIUsage_record_daily_enum_category::TWILIO_INTERCONNECT:
            val = "twilio-interconnect";
            break;
        case eOAIUsage_record_daily_enum_category::VERIFY_PUSH:
            val = "verify-push";
            break;
        case eOAIUsage_record_daily_enum_category::VERIFY_TOTP:
            val = "verify-totp";
            break;
        case eOAIUsage_record_daily_enum_category::VERIFY_WHATSAPP_CONVERSATIONS_BUSINESS_INITIATED:
            val = "verify-whatsapp-conversations-business-initiated";
            break;
        case eOAIUsage_record_daily_enum_category::VIDEO_RECORDINGS:
            val = "video-recordings";
            break;
        case eOAIUsage_record_daily_enum_category::VIRTUAL_AGENT:
            val = "virtual-agent";
            break;
        case eOAIUsage_record_daily_enum_category::VOICE_INSIGHTS:
            val = "voice-insights";
            break;
        case eOAIUsage_record_daily_enum_category::VOICE_INSIGHTS_CLIENT_INSIGHTS_ON_DEMAND_MINUTE:
            val = "voice-insights-client-insights-on-demand-minute";
            break;
        case eOAIUsage_record_daily_enum_category::VOICE_INSIGHTS_PTSN_INSIGHTS_ON_DEMAND_MINUTE:
            val = "voice-insights-ptsn-insights-on-demand-minute";
            break;
        case eOAIUsage_record_daily_enum_category::VOICE_INSIGHTS_SIP_INTERFACE_INSIGHTS_ON_DEMAND_MINUTE:
            val = "voice-insights-sip-interface-insights-on-demand-minute";
            break;
        case eOAIUsage_record_daily_enum_category::VOICE_INSIGHTS_SIP_TRUNKING_INSIGHTS_ON_DEMAND_MINUTE:
            val = "voice-insights-sip-trunking-insights-on-demand-minute";
            break;
        case eOAIUsage_record_daily_enum_category::VOICE_INTELLIGENCE:
            val = "voice-intelligence";
            break;
        case eOAIUsage_record_daily_enum_category::VOICE_INTELLIGENCE_TRANSCRIPTION:
            val = "voice-intelligence-transcription";
            break;
        case eOAIUsage_record_daily_enum_category::VOICE_INTELLIGENCE_OPERATORS:
            val = "voice-intelligence-operators";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS:
            val = "wireless";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_ORDERS:
            val = "wireless-orders";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_ORDERS_ARTWORK:
            val = "wireless-orders-artwork";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_ORDERS_BULK:
            val = "wireless-orders-bulk";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_ORDERS_ESIM:
            val = "wireless-orders-esim";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_ORDERS_STARTER:
            val = "wireless-orders-starter";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE:
            val = "wireless-usage";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS:
            val = "wireless-usage-commands";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_AFRICA:
            val = "wireless-usage-commands-africa";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_ASIA:
            val = "wireless-usage-commands-asia";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_CENTRALANDSOUTHAMERICA:
            val = "wireless-usage-commands-centralandsouthamerica";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_EUROPE:
            val = "wireless-usage-commands-europe";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_HOME:
            val = "wireless-usage-commands-home";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_NORTHAMERICA:
            val = "wireless-usage-commands-northamerica";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_OCEANIA:
            val = "wireless-usage-commands-oceania";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_COMMANDS_ROAMING:
            val = "wireless-usage-commands-roaming";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA:
            val = "wireless-usage-data";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_AFRICA:
            val = "wireless-usage-data-africa";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_ASIA:
            val = "wireless-usage-data-asia";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_CENTRALANDSOUTHAMERICA:
            val = "wireless-usage-data-centralandsouthamerica";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_CUSTOM_ADDITIONALMB:
            val = "wireless-usage-data-custom-additionalmb";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_CUSTOM_FIRST5MB:
            val = "wireless-usage-data-custom-first5mb";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_DOMESTIC_ROAMING:
            val = "wireless-usage-data-domestic-roaming";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_EUROPE:
            val = "wireless-usage-data-europe";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_INDIVIDUAL_ADDITIONALGB:
            val = "wireless-usage-data-individual-additionalgb";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_INDIVIDUAL_FIRSTGB:
            val = "wireless-usage-data-individual-firstgb";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_INTERNATIONAL_ROAMING_CANADA:
            val = "wireless-usage-data-international-roaming-canada";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_INTERNATIONAL_ROAMING_INDIA:
            val = "wireless-usage-data-international-roaming-india";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_INTERNATIONAL_ROAMING_MEXICO:
            val = "wireless-usage-data-international-roaming-mexico";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_NORTHAMERICA:
            val = "wireless-usage-data-northamerica";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_OCEANIA:
            val = "wireless-usage-data-oceania";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_POOLED:
            val = "wireless-usage-data-pooled";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_POOLED_DOWNLINK:
            val = "wireless-usage-data-pooled-downlink";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_DATA_POOLED_UPLINK:
            val = "wireless-usage-data-pooled-uplink";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_MRC:
            val = "wireless-usage-mrc";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_MRC_CUSTOM:
            val = "wireless-usage-mrc-custom";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_MRC_INDIVIDUAL:
            val = "wireless-usage-mrc-individual";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_MRC_POOLED:
            val = "wireless-usage-mrc-pooled";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_MRC_SUSPENDED:
            val = "wireless-usage-mrc-suspended";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_SMS:
            val = "wireless-usage-sms";
            break;
        case eOAIUsage_record_daily_enum_category::WIRELESS_USAGE_VOICE:
            val = "wireless-usage-voice";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUsage_record_daily_enum_category::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUsage_record_daily_enum_category::eOAIUsage_record_daily_enum_category OAIUsage_record_daily_enum_category::getValue() const {
    return m_value;
}

void OAIUsage_record_daily_enum_category::setValue(const OAIUsage_record_daily_enum_category::eOAIUsage_record_daily_enum_category& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUsage_record_daily_enum_category::isSet() const {
    
    return m_value_isSet;
}

bool OAIUsage_record_daily_enum_category::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
