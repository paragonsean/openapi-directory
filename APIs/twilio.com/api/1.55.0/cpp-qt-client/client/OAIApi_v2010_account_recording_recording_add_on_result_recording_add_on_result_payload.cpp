/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload() {
    this->initializeModel();
}

OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::~OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload() {}

void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_add_on_configuration_sid_isSet = false;
    m_add_on_configuration_sid_isValid = false;

    m_add_on_result_sid_isSet = false;
    m_add_on_result_sid_isValid = false;

    m_add_on_sid_isSet = false;
    m_add_on_sid_isValid = false;

    m_content_type_isSet = false;
    m_content_type_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_reference_sid_isSet = false;
    m_reference_sid_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_subresource_uris_isSet = false;
    m_subresource_uris_isValid = false;
}

void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_add_on_configuration_sid_isValid = ::OpenAPI::fromJsonValue(m_add_on_configuration_sid, json[QString("add_on_configuration_sid")]);
    m_add_on_configuration_sid_isSet = !json[QString("add_on_configuration_sid")].isNull() && m_add_on_configuration_sid_isValid;

    m_add_on_result_sid_isValid = ::OpenAPI::fromJsonValue(m_add_on_result_sid, json[QString("add_on_result_sid")]);
    m_add_on_result_sid_isSet = !json[QString("add_on_result_sid")].isNull() && m_add_on_result_sid_isValid;

    m_add_on_sid_isValid = ::OpenAPI::fromJsonValue(m_add_on_sid, json[QString("add_on_sid")]);
    m_add_on_sid_isSet = !json[QString("add_on_sid")].isNull() && m_add_on_sid_isValid;

    m_content_type_isValid = ::OpenAPI::fromJsonValue(m_content_type, json[QString("content_type")]);
    m_content_type_isSet = !json[QString("content_type")].isNull() && m_content_type_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_reference_sid_isValid = ::OpenAPI::fromJsonValue(m_reference_sid, json[QString("reference_sid")]);
    m_reference_sid_isSet = !json[QString("reference_sid")].isNull() && m_reference_sid_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_subresource_uris_isValid = ::OpenAPI::fromJsonValue(m_subresource_uris, json[QString("subresource_uris")]);
    m_subresource_uris_isSet = !json[QString("subresource_uris")].isNull() && m_subresource_uris_isValid;
}

QString OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_add_on_configuration_sid_isSet) {
        obj.insert(QString("add_on_configuration_sid"), ::OpenAPI::toJsonValue(m_add_on_configuration_sid));
    }
    if (m_add_on_result_sid_isSet) {
        obj.insert(QString("add_on_result_sid"), ::OpenAPI::toJsonValue(m_add_on_result_sid));
    }
    if (m_add_on_sid_isSet) {
        obj.insert(QString("add_on_sid"), ::OpenAPI::toJsonValue(m_add_on_sid));
    }
    if (m_content_type_isSet) {
        obj.insert(QString("content_type"), ::OpenAPI::toJsonValue(m_content_type));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_reference_sid_isSet) {
        obj.insert(QString("reference_sid"), ::OpenAPI::toJsonValue(m_reference_sid));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_subresource_uris_isSet) {
        obj.insert(QString("subresource_uris"), ::OpenAPI::toJsonValue(m_subresource_uris));
    }
    return obj;
}

QString OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::getAccountSid() const {
    return m_account_sid;
}
void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::getAddOnConfigurationSid() const {
    return m_add_on_configuration_sid;
}
void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::setAddOnConfigurationSid(const QString &add_on_configuration_sid) {
    m_add_on_configuration_sid = add_on_configuration_sid;
    m_add_on_configuration_sid_isSet = true;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_add_on_configuration_sid_Set() const{
    return m_add_on_configuration_sid_isSet;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_add_on_configuration_sid_Valid() const{
    return m_add_on_configuration_sid_isValid;
}

QString OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::getAddOnResultSid() const {
    return m_add_on_result_sid;
}
void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::setAddOnResultSid(const QString &add_on_result_sid) {
    m_add_on_result_sid = add_on_result_sid;
    m_add_on_result_sid_isSet = true;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_add_on_result_sid_Set() const{
    return m_add_on_result_sid_isSet;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_add_on_result_sid_Valid() const{
    return m_add_on_result_sid_isValid;
}

QString OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::getAddOnSid() const {
    return m_add_on_sid;
}
void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::setAddOnSid(const QString &add_on_sid) {
    m_add_on_sid = add_on_sid;
    m_add_on_sid_isSet = true;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_add_on_sid_Set() const{
    return m_add_on_sid_isSet;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_add_on_sid_Valid() const{
    return m_add_on_sid_isValid;
}

QString OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::getContentType() const {
    return m_content_type;
}
void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::setContentType(const QString &content_type) {
    m_content_type = content_type;
    m_content_type_isSet = true;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_content_type_Set() const{
    return m_content_type_isSet;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_content_type_Valid() const{
    return m_content_type_isValid;
}

QString OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::getDateCreated() const {
    return m_date_created;
}
void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::setDateCreated(const QString &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::getDateUpdated() const {
    return m_date_updated;
}
void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::setDateUpdated(const QString &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::getLabel() const {
    return m_label;
}
void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_label_Set() const{
    return m_label_isSet;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_label_Valid() const{
    return m_label_isValid;
}

QString OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::getReferenceSid() const {
    return m_reference_sid;
}
void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::setReferenceSid(const QString &reference_sid) {
    m_reference_sid = reference_sid;
    m_reference_sid_isSet = true;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_reference_sid_Set() const{
    return m_reference_sid_isSet;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_reference_sid_Valid() const{
    return m_reference_sid_isValid;
}

QString OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::getSid() const {
    return m_sid;
}
void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_sid_Valid() const{
    return m_sid_isValid;
}

OAIObject OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::getSubresourceUris() const {
    return m_subresource_uris;
}
void OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::setSubresourceUris(const OAIObject &subresource_uris) {
    m_subresource_uris = subresource_uris;
    m_subresource_uris_isSet = true;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_subresource_uris_Set() const{
    return m_subresource_uris_isSet;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::is_subresource_uris_Valid() const{
    return m_subresource_uris_isValid;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_add_on_configuration_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_add_on_result_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_add_on_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subresource_uris_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApi_v2010_account_recording_recording_add_on_result_recording_add_on_result_payload::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
