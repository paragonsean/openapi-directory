/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiV2010AccountAddress model module.
 * @module model/ApiV2010AccountAddress
 * @version 1.55.0
 */
class ApiV2010AccountAddress {
    /**
     * Constructs a new <code>ApiV2010AccountAddress</code>.
     * @alias module:model/ApiV2010AccountAddress
     */
    constructor() { 
        
        ApiV2010AccountAddress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiV2010AccountAddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiV2010AccountAddress} obj Optional instance to populate.
     * @return {module:model/ApiV2010AccountAddress} The populated <code>ApiV2010AccountAddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiV2010AccountAddress();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('customer_name')) {
                obj['customer_name'] = ApiClient.convertToType(data['customer_name'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'String');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'String');
            }
            if (data.hasOwnProperty('emergency_enabled')) {
                obj['emergency_enabled'] = ApiClient.convertToType(data['emergency_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('iso_country')) {
                obj['iso_country'] = ApiClient.convertToType(data['iso_country'], 'String');
            }
            if (data.hasOwnProperty('postal_code')) {
                obj['postal_code'] = ApiClient.convertToType(data['postal_code'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('street')) {
                obj['street'] = ApiClient.convertToType(data['street'], 'String');
            }
            if (data.hasOwnProperty('street_secondary')) {
                obj['street_secondary'] = ApiClient.convertToType(data['street_secondary'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
            if (data.hasOwnProperty('validated')) {
                obj['validated'] = ApiClient.convertToType(data['validated'], 'Boolean');
            }
            if (data.hasOwnProperty('verified')) {
                obj['verified'] = ApiClient.convertToType(data['verified'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiV2010AccountAddress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiV2010AccountAddress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['customer_name'] && !(typeof data['customer_name'] === 'string' || data['customer_name'] instanceof String)) {
            throw new Error("Expected the field `customer_name` to be a primitive type in the JSON string but got " + data['customer_name']);
        }
        // ensure the json data is a string
        if (data['date_created'] && !(typeof data['date_created'] === 'string' || data['date_created'] instanceof String)) {
            throw new Error("Expected the field `date_created` to be a primitive type in the JSON string but got " + data['date_created']);
        }
        // ensure the json data is a string
        if (data['date_updated'] && !(typeof data['date_updated'] === 'string' || data['date_updated'] instanceof String)) {
            throw new Error("Expected the field `date_updated` to be a primitive type in the JSON string but got " + data['date_updated']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['iso_country'] && !(typeof data['iso_country'] === 'string' || data['iso_country'] instanceof String)) {
            throw new Error("Expected the field `iso_country` to be a primitive type in the JSON string but got " + data['iso_country']);
        }
        // ensure the json data is a string
        if (data['postal_code'] && !(typeof data['postal_code'] === 'string' || data['postal_code'] instanceof String)) {
            throw new Error("Expected the field `postal_code` to be a primitive type in the JSON string but got " + data['postal_code']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['street'] && !(typeof data['street'] === 'string' || data['street'] instanceof String)) {
            throw new Error("Expected the field `street` to be a primitive type in the JSON string but got " + data['street']);
        }
        // ensure the json data is a string
        if (data['street_secondary'] && !(typeof data['street_secondary'] === 'string' || data['street_secondary'] instanceof String)) {
            throw new Error("Expected the field `street_secondary` to be a primitive type in the JSON string but got " + data['street_secondary']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that is responsible for the Address resource.
 * @member {String} account_sid
 */
ApiV2010AccountAddress.prototype['account_sid'] = undefined;

/**
 * The city in which the address is located.
 * @member {String} city
 */
ApiV2010AccountAddress.prototype['city'] = undefined;

/**
 * The name associated with the address.This property has a maximum length of 16 4-byte characters, or 21 3-byte characters.
 * @member {String} customer_name
 */
ApiV2010AccountAddress.prototype['customer_name'] = undefined;

/**
 * The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {String} date_created
 */
ApiV2010AccountAddress.prototype['date_created'] = undefined;

/**
 * The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {String} date_updated
 */
ApiV2010AccountAddress.prototype['date_updated'] = undefined;

/**
 * Whether emergency calling has been enabled on this number.
 * @member {Boolean} emergency_enabled
 */
ApiV2010AccountAddress.prototype['emergency_enabled'] = undefined;

/**
 * The string that you assigned to describe the resource.
 * @member {String} friendly_name
 */
ApiV2010AccountAddress.prototype['friendly_name'] = undefined;

/**
 * The ISO country code of the address.
 * @member {String} iso_country
 */
ApiV2010AccountAddress.prototype['iso_country'] = undefined;

/**
 * The postal code of the address.
 * @member {String} postal_code
 */
ApiV2010AccountAddress.prototype['postal_code'] = undefined;

/**
 * The state or region of the address.
 * @member {String} region
 */
ApiV2010AccountAddress.prototype['region'] = undefined;

/**
 * The unique string that that we created to identify the Address resource.
 * @member {String} sid
 */
ApiV2010AccountAddress.prototype['sid'] = undefined;

/**
 * The number and street address of the address.
 * @member {String} street
 */
ApiV2010AccountAddress.prototype['street'] = undefined;

/**
 * The additional number and street address of the address.
 * @member {String} street_secondary
 */
ApiV2010AccountAddress.prototype['street_secondary'] = undefined;

/**
 * The URI of the resource, relative to `https://api.twilio.com`.
 * @member {String} uri
 */
ApiV2010AccountAddress.prototype['uri'] = undefined;

/**
 * Whether the address has been validated to comply with local regulation. In countries that require valid addresses, an invalid address will not be accepted. `true` indicates the Address has been validated. `false` indicate the country doesn't require validation or the Address is not valid.
 * @member {Boolean} validated
 */
ApiV2010AccountAddress.prototype['validated'] = undefined;

/**
 * Whether the address has been verified to comply with regulation. In countries that require valid addresses, an invalid address will not be accepted. `true` indicates the Address has been verified. `false` indicate the country doesn't require verified or the Address is not valid.
 * @member {Boolean} verified
 */
ApiV2010AccountAddress.prototype['verified'] = undefined;






export default ApiV2010AccountAddress;

