/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities from './ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities';

/**
 * The ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree model module.
 * @module model/ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree
 * @version 1.55.0
 */
class ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree {
    /**
     * Constructs a new <code>ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree</code>.
     * @alias module:model/ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree
     */
    constructor() { 
        
        ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree} obj Optional instance to populate.
     * @return {module:model/ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree} The populated <code>ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree();

            if (data.hasOwnProperty('address_requirements')) {
                obj['address_requirements'] = ApiClient.convertToType(data['address_requirements'], 'String');
            }
            if (data.hasOwnProperty('beta')) {
                obj['beta'] = ApiClient.convertToType(data['beta'], 'Boolean');
            }
            if (data.hasOwnProperty('capabilities')) {
                obj['capabilities'] = ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities.constructFromObject(data['capabilities']);
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('iso_country')) {
                obj['iso_country'] = ApiClient.convertToType(data['iso_country'], 'String');
            }
            if (data.hasOwnProperty('lata')) {
                obj['lata'] = ApiClient.convertToType(data['lata'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('locality')) {
                obj['locality'] = ApiClient.convertToType(data['locality'], 'String');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('postal_code')) {
                obj['postal_code'] = ApiClient.convertToType(data['postal_code'], 'String');
            }
            if (data.hasOwnProperty('rate_center')) {
                obj['rate_center'] = ApiClient.convertToType(data['rate_center'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address_requirements'] && !(typeof data['address_requirements'] === 'string' || data['address_requirements'] instanceof String)) {
            throw new Error("Expected the field `address_requirements` to be a primitive type in the JSON string but got " + data['address_requirements']);
        }
        // validate the optional field `capabilities`
        if (data['capabilities']) { // data not null
          ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities.validateJSON(data['capabilities']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['iso_country'] && !(typeof data['iso_country'] === 'string' || data['iso_country'] instanceof String)) {
            throw new Error("Expected the field `iso_country` to be a primitive type in the JSON string but got " + data['iso_country']);
        }
        // ensure the json data is a string
        if (data['lata'] && !(typeof data['lata'] === 'string' || data['lata'] instanceof String)) {
            throw new Error("Expected the field `lata` to be a primitive type in the JSON string but got " + data['lata']);
        }
        // ensure the json data is a string
        if (data['locality'] && !(typeof data['locality'] === 'string' || data['locality'] instanceof String)) {
            throw new Error("Expected the field `locality` to be a primitive type in the JSON string but got " + data['locality']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }
        // ensure the json data is a string
        if (data['postal_code'] && !(typeof data['postal_code'] === 'string' || data['postal_code'] instanceof String)) {
            throw new Error("Expected the field `postal_code` to be a primitive type in the JSON string but got " + data['postal_code']);
        }
        // ensure the json data is a string
        if (data['rate_center'] && !(typeof data['rate_center'] === 'string' || data['rate_center'] instanceof String)) {
            throw new Error("Expected the field `rate_center` to be a primitive type in the JSON string but got " + data['rate_center']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }

        return true;
    }


}



/**
 * The type of [Address](https://www.twilio.com/docs/usage/api/address) resource the phone number requires. Can be: `none`, `any`, `local`, or `foreign`. `none` means no address is required. `any` means an address is required, but it can be anywhere in the world. `local` means an address in the phone number's country is required. `foreign` means an address outside of the phone number's country is required.
 * @member {String} address_requirements
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['address_requirements'] = undefined;

/**
 * Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.
 * @member {Boolean} beta
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['beta'] = undefined;

/**
 * @member {module:model/ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities} capabilities
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['capabilities'] = undefined;

/**
 * A formatted version of the phone number.
 * @member {String} friendly_name
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['friendly_name'] = undefined;

/**
 * The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of this phone number.
 * @member {String} iso_country
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['iso_country'] = undefined;

/**
 * The [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) of this phone number. Available for only phone numbers from the US and Canada.
 * @member {String} lata
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['lata'] = undefined;

/**
 * The latitude of this phone number's location. Available for only phone numbers from the US and Canada.
 * @member {Number} latitude
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['latitude'] = undefined;

/**
 * The locality or city of this phone number's location.
 * @member {String} locality
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['locality'] = undefined;

/**
 * The longitude of this phone number's location. Available for only phone numbers from the US and Canada.
 * @member {Number} longitude
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['longitude'] = undefined;

/**
 * The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
 * @member {String} phone_number
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['phone_number'] = undefined;

/**
 * The postal or ZIP code of this phone number's location. Available for only phone numbers from the US and Canada.
 * @member {String} postal_code
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['postal_code'] = undefined;

/**
 * The [rate center](https://en.wikipedia.org/wiki/Telephone_exchange) of this phone number. Available for only phone numbers from the US and Canada.
 * @member {String} rate_center
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['rate_center'] = undefined;

/**
 * The two-letter state or province abbreviation of this phone number's location. Available for only phone numbers from the US and Canada.
 * @member {String} region
 */
ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree.prototype['region'] = undefined;






export default ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberTollFree;

