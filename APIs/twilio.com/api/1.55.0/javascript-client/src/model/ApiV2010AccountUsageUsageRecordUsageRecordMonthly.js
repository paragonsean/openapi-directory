/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UsageRecordMonthlyEnumCategory from './UsageRecordMonthlyEnumCategory';

/**
 * The ApiV2010AccountUsageUsageRecordUsageRecordMonthly model module.
 * @module model/ApiV2010AccountUsageUsageRecordUsageRecordMonthly
 * @version 1.55.0
 */
class ApiV2010AccountUsageUsageRecordUsageRecordMonthly {
    /**
     * Constructs a new <code>ApiV2010AccountUsageUsageRecordUsageRecordMonthly</code>.
     * @alias module:model/ApiV2010AccountUsageUsageRecordUsageRecordMonthly
     */
    constructor() { 
        
        ApiV2010AccountUsageUsageRecordUsageRecordMonthly.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiV2010AccountUsageUsageRecordUsageRecordMonthly</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiV2010AccountUsageUsageRecordUsageRecordMonthly} obj Optional instance to populate.
     * @return {module:model/ApiV2010AccountUsageUsageRecordUsageRecordMonthly} The populated <code>ApiV2010AccountUsageUsageRecordUsageRecordMonthly</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiV2010AccountUsageUsageRecordUsageRecordMonthly();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('api_version')) {
                obj['api_version'] = ApiClient.convertToType(data['api_version'], 'String');
            }
            if (data.hasOwnProperty('as_of')) {
                obj['as_of'] = ApiClient.convertToType(data['as_of'], 'String');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = UsageRecordMonthlyEnumCategory.constructFromObject(data['category']);
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'String');
            }
            if (data.hasOwnProperty('count_unit')) {
                obj['count_unit'] = ApiClient.convertToType(data['count_unit'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('price_unit')) {
                obj['price_unit'] = ApiClient.convertToType(data['price_unit'], 'String');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('subresource_uris')) {
                obj['subresource_uris'] = ApiClient.convertToType(data['subresource_uris'], Object);
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
            if (data.hasOwnProperty('usage')) {
                obj['usage'] = ApiClient.convertToType(data['usage'], 'String');
            }
            if (data.hasOwnProperty('usage_unit')) {
                obj['usage_unit'] = ApiClient.convertToType(data['usage_unit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiV2010AccountUsageUsageRecordUsageRecordMonthly</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiV2010AccountUsageUsageRecordUsageRecordMonthly</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['api_version'] && !(typeof data['api_version'] === 'string' || data['api_version'] instanceof String)) {
            throw new Error("Expected the field `api_version` to be a primitive type in the JSON string but got " + data['api_version']);
        }
        // ensure the json data is a string
        if (data['as_of'] && !(typeof data['as_of'] === 'string' || data['as_of'] instanceof String)) {
            throw new Error("Expected the field `as_of` to be a primitive type in the JSON string but got " + data['as_of']);
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['count'] && !(typeof data['count'] === 'string' || data['count'] instanceof String)) {
            throw new Error("Expected the field `count` to be a primitive type in the JSON string but got " + data['count']);
        }
        // ensure the json data is a string
        if (data['count_unit'] && !(typeof data['count_unit'] === 'string' || data['count_unit'] instanceof String)) {
            throw new Error("Expected the field `count_unit` to be a primitive type in the JSON string but got " + data['count_unit']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['price_unit'] && !(typeof data['price_unit'] === 'string' || data['price_unit'] instanceof String)) {
            throw new Error("Expected the field `price_unit` to be a primitive type in the JSON string but got " + data['price_unit']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }
        // ensure the json data is a string
        if (data['usage'] && !(typeof data['usage'] === 'string' || data['usage'] instanceof String)) {
            throw new Error("Expected the field `usage` to be a primitive type in the JSON string but got " + data['usage']);
        }
        // ensure the json data is a string
        if (data['usage_unit'] && !(typeof data['usage_unit'] === 'string' || data['usage_unit'] instanceof String)) {
            throw new Error("Expected the field `usage_unit` to be a primitive type in the JSON string but got " + data['usage_unit']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that accrued the usage.
 * @member {String} account_sid
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['account_sid'] = undefined;

/**
 * The API version used to create the resource.
 * @member {String} api_version
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['api_version'] = undefined;

/**
 * Usage records up to date as of this timestamp, formatted as YYYY-MM-DDTHH:MM:SS+00:00. All timestamps are in GMT
 * @member {String} as_of
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['as_of'] = undefined;

/**
 * @member {module:model/UsageRecordMonthlyEnumCategory} category
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['category'] = undefined;

/**
 * The number of usage events, such as the number of calls.
 * @member {String} count
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['count'] = undefined;

/**
 * The units in which `count` is measured, such as `calls` for calls or `messages` for SMS.
 * @member {String} count_unit
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['count_unit'] = undefined;

/**
 * A plain-language description of the usage category.
 * @member {String} description
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['description'] = undefined;

/**
 * The last date for which usage is included in the UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.
 * @member {Date} end_date
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['end_date'] = undefined;

/**
 * The total price of the usage in the currency specified in `price_unit` and associated with the account.
 * @member {Number} price
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['price'] = undefined;

/**
 * The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format, such as `usd`, `eur`, and `jpy`.
 * @member {String} price_unit
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['price_unit'] = undefined;

/**
 * The first date for which usage is included in this UsageRecord. The date is specified in GMT and formatted as `YYYY-MM-DD`.
 * @member {Date} start_date
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['start_date'] = undefined;

/**
 * A list of related resources identified by their URIs. For more information, see [List Subresources](https://www.twilio.com/docs/usage/api/usage-record#list-subresources).
 * @member {Object} subresource_uris
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['subresource_uris'] = undefined;

/**
 * The URI of the resource, relative to `https://api.twilio.com`.
 * @member {String} uri
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['uri'] = undefined;

/**
 * The amount used to bill usage and measured in units described in `usage_unit`.
 * @member {String} usage
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['usage'] = undefined;

/**
 * The units in which `usage` is measured, such as `minutes` for calls or `messages` for SMS.
 * @member {String} usage_unit
 */
ApiV2010AccountUsageUsageRecordUsageRecordMonthly.prototype['usage_unit'] = undefined;






export default ApiV2010AccountUsageUsageRecordUsageRecordMonthly;

