/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiV2010AccountSipSipDomain from '../model/ApiV2010AccountSipSipDomain';
import ListSipDomainResponse from '../model/ListSipDomainResponse';

/**
* Api20100401Domain service.
* @module api/Api20100401DomainApi
* @version 1.55.0
*/
export default class Api20100401DomainApi {

    /**
    * Constructs a new Api20100401DomainApi. 
    * @alias module:api/Api20100401DomainApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createSipDomain operation.
     * @callback module:api/Api20100401DomainApi~createSipDomainCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010AccountSipSipDomain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Domain
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
     * @param {String} domainName The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and \\\"-\\\" and must end with `sip.twilio.com`.
     * @param {Object} opts Optional parameters
     * @param {String} [byocTrunkSid] The SID of the BYOC Trunk(Bring Your Own Carrier) resource that the Sip Domain will be associated with.
     * @param {String} [emergencyCallerSid] Whether an emergency caller sid is configured for the domain. If present, this phone number will be used as the callback for the emergency call.
     * @param {Boolean} [emergencyCallingEnabled] Whether emergency calling is enabled for the domain. If enabled, allows emergency calls on the domain from phone numbers with validated addresses.
     * @param {String} [friendlyName] A descriptive string that you created to describe the resource. It can be up to 64 characters long.
     * @param {Boolean} [secure] Whether secure SIP is enabled for the domain. If enabled, TLS will be enforced and SRTP will be negotiated on all incoming calls to this sip domain.
     * @param {Boolean} [sipRegistration] Whether to allow SIP Endpoints to register with the domain to receive calls. Can be `true` or `false`. `true` allows SIP Endpoints to register with the domain to receive calls, `false` does not.
     * @param {module:model/String} [voiceFallbackMethod] The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.
     * @param {String} [voiceFallbackUrl] The URL that we should call when an error occurs while retrieving or executing the TwiML from `voice_url`.
     * @param {module:model/String} [voiceMethod] The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.
     * @param {module:model/String} [voiceStatusCallbackMethod] The HTTP method we should use to call `voice_status_callback_url`. Can be: `GET` or `POST`.
     * @param {String} [voiceStatusCallbackUrl] The URL that we should call to pass status parameters (such as call ended) to your application.
     * @param {String} [voiceUrl] The URL we should when the domain receives a call.
     * @param {module:api/Api20100401DomainApi~createSipDomainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010AccountSipSipDomain}
     */
    createSipDomain(accountSid, domainName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling createSipDomain");
      }
      // verify the required parameter 'domainName' is set
      if (domainName === undefined || domainName === null) {
        throw new Error("Missing the required parameter 'domainName' when calling createSipDomain");
      }

      let pathParams = {
        'AccountSid': accountSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'ByocTrunkSid': opts['byocTrunkSid'],
        'DomainName': domainName,
        'EmergencyCallerSid': opts['emergencyCallerSid'],
        'EmergencyCallingEnabled': opts['emergencyCallingEnabled'],
        'FriendlyName': opts['friendlyName'],
        'Secure': opts['secure'],
        'SipRegistration': opts['sipRegistration'],
        'VoiceFallbackMethod': opts['voiceFallbackMethod'],
        'VoiceFallbackUrl': opts['voiceFallbackUrl'],
        'VoiceMethod': opts['voiceMethod'],
        'VoiceStatusCallbackMethod': opts['voiceStatusCallbackMethod'],
        'VoiceStatusCallbackUrl': opts['voiceStatusCallbackUrl'],
        'VoiceUrl': opts['voiceUrl']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = ApiV2010AccountSipSipDomain;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/SIP/Domains.json', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSipDomain operation.
     * @callback module:api/Api20100401DomainApi~deleteSipDomainCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an instance of a Domain
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resources to delete.
     * @param {String} sid The Twilio-provided string that uniquely identifies the SipDomain resource to delete.
     * @param {module:api/Api20100401DomainApi~deleteSipDomainCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteSipDomain(accountSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling deleteSipDomain");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteSipDomain");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchSipDomain operation.
     * @callback module:api/Api20100401DomainApi~fetchSipDomainCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010AccountSipSipDomain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch an instance of a Domain
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource to fetch.
     * @param {String} sid The Twilio-provided string that uniquely identifies the SipDomain resource to fetch.
     * @param {module:api/Api20100401DomainApi~fetchSipDomainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010AccountSipSipDomain}
     */
    fetchSipDomain(accountSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling fetchSipDomain");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchSipDomain");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiV2010AccountSipSipDomain;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listSipDomain operation.
     * @callback module:api/Api20100401DomainApi~listSipDomainCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSipDomainResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of domains belonging to the account used to make the request
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resources to read.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/Api20100401DomainApi~listSipDomainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSipDomainResponse}
     */
    listSipDomain(accountSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling listSipDomain");
      }

      let pathParams = {
        'AccountSid': accountSid
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListSipDomainResponse;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/SIP/Domains.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSipDomain operation.
     * @callback module:api/Api20100401DomainApi~updateSipDomainCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010AccountSipSipDomain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the attributes of a domain
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource to update.
     * @param {String} sid The Twilio-provided string that uniquely identifies the SipDomain resource to update.
     * @param {Object} opts Optional parameters
     * @param {String} [byocTrunkSid] The SID of the BYOC Trunk(Bring Your Own Carrier) resource that the Sip Domain will be associated with.
     * @param {String} [domainName] The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and \\\"-\\\" and must end with `sip.twilio.com`.
     * @param {String} [emergencyCallerSid] Whether an emergency caller sid is configured for the domain. If present, this phone number will be used as the callback for the emergency call.
     * @param {Boolean} [emergencyCallingEnabled] Whether emergency calling is enabled for the domain. If enabled, allows emergency calls on the domain from phone numbers with validated addresses.
     * @param {String} [friendlyName] A descriptive string that you created to describe the resource. It can be up to 64 characters long.
     * @param {Boolean} [secure] Whether secure SIP is enabled for the domain. If enabled, TLS will be enforced and SRTP will be negotiated on all incoming calls to this sip domain.
     * @param {Boolean} [sipRegistration] Whether to allow SIP Endpoints to register with the domain to receive calls. Can be `true` or `false`. `true` allows SIP Endpoints to register with the domain to receive calls, `false` does not.
     * @param {module:model/String} [voiceFallbackMethod] The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.
     * @param {String} [voiceFallbackUrl] The URL that we should call when an error occurs while retrieving or executing the TwiML requested by `voice_url`.
     * @param {module:model/String} [voiceMethod] The HTTP method we should use to call `voice_url`
     * @param {module:model/String} [voiceStatusCallbackMethod] The HTTP method we should use to call `voice_status_callback_url`. Can be: `GET` or `POST`.
     * @param {String} [voiceStatusCallbackUrl] The URL that we should call to pass status parameters (such as call ended) to your application.
     * @param {String} [voiceUrl] The URL we should call when the domain receives a call.
     * @param {module:api/Api20100401DomainApi~updateSipDomainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010AccountSipSipDomain}
     */
    updateSipDomain(accountSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling updateSipDomain");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateSipDomain");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'ByocTrunkSid': opts['byocTrunkSid'],
        'DomainName': opts['domainName'],
        'EmergencyCallerSid': opts['emergencyCallerSid'],
        'EmergencyCallingEnabled': opts['emergencyCallingEnabled'],
        'FriendlyName': opts['friendlyName'],
        'Secure': opts['secure'],
        'SipRegistration': opts['sipRegistration'],
        'VoiceFallbackMethod': opts['voiceFallbackMethod'],
        'VoiceFallbackUrl': opts['voiceFallbackUrl'],
        'VoiceMethod': opts['voiceMethod'],
        'VoiceStatusCallbackMethod': opts['voiceStatusCallbackMethod'],
        'VoiceStatusCallbackUrl': opts['voiceStatusCallbackUrl'],
        'VoiceUrl': opts['voiceUrl']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = ApiV2010AccountSipSipDomain;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
