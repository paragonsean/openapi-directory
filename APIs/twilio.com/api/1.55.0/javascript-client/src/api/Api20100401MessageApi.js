/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiV2010AccountMessage from '../model/ApiV2010AccountMessage';
import ListMessageResponse from '../model/ListMessageResponse';
import MessageEnumAddressRetention from '../model/MessageEnumAddressRetention';
import MessageEnumContentRetention from '../model/MessageEnumContentRetention';
import MessageEnumRiskCheck from '../model/MessageEnumRiskCheck';
import MessageEnumScheduleType from '../model/MessageEnumScheduleType';
import MessageEnumUpdateStatus from '../model/MessageEnumUpdateStatus';

/**
* Api20100401Message service.
* @module api/Api20100401MessageApi
* @version 1.55.0
*/
export default class Api20100401MessageApi {

    /**
    * Constructs a new Api20100401MessageApi. 
    * @alias module:api/Api20100401MessageApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createMessage operation.
     * @callback module:api/Api20100401MessageApi~createMessageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010AccountMessage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send a message
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) creating the Message resource.
     * @param {String} to The recipient's phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (for SMS/MMS) or [channel address](https://www.twilio.com/docs/messaging/channels), e.g. `whatsapp:+15552229999`.
     * @param {Object} opts Optional parameters
     * @param {module:model/MessageEnumAddressRetention} [addressRetention] 
     * @param {String} [applicationSid] The SID of the associated [TwiML Application](https://www.twilio.com/docs/usage/api/applications). If this parameter is provided, the `status_callback` parameter of this request is ignored; [Message status callback requests](https://www.twilio.com/docs/sms/api/message-resource#twilios-request-to-the-statuscallback-url) are sent to the TwiML App's `message_status_callback` URL.
     * @param {Number} [attempt] Total number of attempts made (including this request) to send the message regardless of the provider used
     * @param {String} [body] The text content of the outgoing message. Can be up to 1,600 characters in length. SMS only: If the `body` contains more than 160 [GSM-7](https://www.twilio.com/docs/glossary/what-is-gsm-7-character-encoding) characters (or 70 [UCS-2](https://www.twilio.com/docs/glossary/what-is-ucs-2-character-encoding) characters), the message is segmented and charged accordingly. For long `body` text, consider using the [send_as_mms parameter](https://www.twilio.com/blog/mms-for-long-text-messages).
     * @param {module:model/MessageEnumContentRetention} [contentRetention] 
     * @param {String} [contentSid] For [Content Editor/API](https://www.twilio.com/docs/content) only: The SID of the Content Template to be used with the Message, e.g., `HXXXXXXXXXXXXXXXXXXXXXXXXXXXXX`. If this parameter is not provided, a Content Template is not used. Find the SID in the Console on the Content Editor page. For Content API users, the SID is found in Twilio's response when [creating the Template](https://www.twilio.com/docs/content/content-api-resources#create-templates) or by [fetching your Templates](https://www.twilio.com/docs/content/content-api-resources#fetch-all-content-resources).
     * @param {String} [contentVariables] For [Content Editor/API](https://www.twilio.com/docs/content) only: Key-value pairs of [Template variables](https://www.twilio.com/docs/content/using-variables-with-content-api) and their substitution values. `content_sid` parameter must also be provided. If values are not defined in the `content_variables` parameter, the [Template's default placeholder values](https://www.twilio.com/docs/content/content-api-resources#create-templates) are used.
     * @param {Boolean} [forceDelivery] Reserved
     * @param {String} [from] The sender's Twilio phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format), [alphanumeric sender ID](https://www.twilio.com/docs/sms/quickstart), [Wireless SIM](https://www.twilio.com/docs/iot/wireless/programmable-wireless-send-machine-machine-sms-commands), [short code](https://www.twilio.com/en-us/messaging/channels/sms/short-codes), or [channel address](https://www.twilio.com/docs/messaging/channels) (e.g., `whatsapp:+15554449999`). The value of the `from` parameter must be a sender that is hosted within Twilio and belongs to the Account creating the Message. If you are using `messaging_service_sid`, this parameter can be empty (Twilio assigns a `from` value from the Messaging Service's Sender Pool) or you can provide a specific sender from your Sender Pool.
     * @param {Number} [maxPrice] The maximum price in US dollars that you are willing to pay for this Message's delivery. The value can have up to four decimal places. When the `max_price` parameter is provided, the cost of a message is checked before it is sent. If the cost exceeds `max_price`, the message is not sent and the Message `status` is `failed`.
     * @param {Array.<String>} [mediaUrl] The URL of media to include in the Message content. `jpeg`, `jpg`, `gif`, and `png` file types are fully supported by Twilio and content is formatted for delivery on destination devices. The media size limit is 5 MB for supported file types (`jpeg`, `jpg`, `png`, `gif`) and 500 KB for [other types](https://www.twilio.com/docs/messaging/guides/accepted-mime-types) of accepted media. To send more than one image in the message, provide multiple `media_url` parameters in the POST request. You can include up to ten `media_url` parameters per message. [International](https://support.twilio.com/hc/en-us/articles/223179808-Sending-and-receiving-MMS-messages) and [carrier](https://support.twilio.com/hc/en-us/articles/223133707-Is-MMS-supported-for-all-carriers-in-US-and-Canada-) limits apply.
     * @param {String} [messagingServiceSid] The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services) you want to associate with the Message. When this parameter is provided and the `from` parameter is omitted, Twilio selects the optimal sender from the Messaging Service's Sender Pool. You may also provide a `from` parameter if you want to use a specific Sender from the Sender Pool.
     * @param {Array.<String>} [persistentAction] Rich actions for non-SMS/MMS channels. Used for [sending location in WhatsApp messages](https://www.twilio.com/docs/whatsapp/message-features#location-messages-with-whatsapp).
     * @param {Boolean} [provideFeedback] Boolean indicating whether or not you intend to provide delivery confirmation feedback to Twilio (used in conjunction with the [Message Feedback subresource](https://www.twilio.com/docs/sms/api/message-feedback-resource)). Default value is `false`.
     * @param {module:model/MessageEnumRiskCheck} [riskCheck] 
     * @param {module:model/MessageEnumScheduleType} [scheduleType] 
     * @param {Boolean} [sendAsMms] If set to `true`, Twilio delivers the message as a single MMS message, regardless of the presence of media.
     * @param {Date} [sendAt] The time that Twilio will send the message. Must be in ISO 8601 format.
     * @param {Boolean} [shortenUrls] For Messaging Services with [Link Shortening configured](https://www.twilio.com/docs/messaging/features/link-shortening) only: A Boolean indicating whether or not Twilio should shorten links in the `body` of the Message. Default value is `false`. If `true`, the `messaging_service_sid` parameter must also be provided.
     * @param {Boolean} [smartEncoded] Whether to detect Unicode characters that have a similar GSM-7 character and replace them. Can be: `true` or `false`.
     * @param {String} [statusCallback] The URL of the endpoint to which Twilio sends [Message status callback requests](https://www.twilio.com/docs/sms/api/message-resource#twilios-request-to-the-statuscallback-url). URL must contain a valid hostname and underscores are not allowed. If you include this parameter with the `messaging_service_sid`, Twilio uses this URL instead of the Status Callback URL of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource). 
     * @param {Number} [validityPeriod] The maximum length in seconds that the Message can remain in Twilio's outgoing message queue. If a queued Message exceeds the `validity_period`, the Message is not sent. Accepted values are integers from `1` to `14400`. Default value is `14400`. A `validity_period` greater than `5` is recommended. [Learn more about the validity period](https://www.twilio.com/blog/take-more-control-of-outbound-messages-using-validity-period-html)
     * @param {module:api/Api20100401MessageApi~createMessageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010AccountMessage}
     */
    createMessage(accountSid, to, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling createMessage");
      }
      // verify the required parameter 'to' is set
      if (to === undefined || to === null) {
        throw new Error("Missing the required parameter 'to' when calling createMessage");
      }

      let pathParams = {
        'AccountSid': accountSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'AddressRetention': opts['addressRetention'],
        'ApplicationSid': opts['applicationSid'],
        'Attempt': opts['attempt'],
        'Body': opts['body'],
        'ContentRetention': opts['contentRetention'],
        'ContentSid': opts['contentSid'],
        'ContentVariables': opts['contentVariables'],
        'ForceDelivery': opts['forceDelivery'],
        'From': opts['from'],
        'MaxPrice': opts['maxPrice'],
        'MediaUrl': this.apiClient.buildCollectionParam(opts['mediaUrl'], 'csv'),
        'MessagingServiceSid': opts['messagingServiceSid'],
        'PersistentAction': this.apiClient.buildCollectionParam(opts['persistentAction'], 'csv'),
        'ProvideFeedback': opts['provideFeedback'],
        'RiskCheck': opts['riskCheck'],
        'ScheduleType': opts['scheduleType'],
        'SendAsMms': opts['sendAsMms'],
        'SendAt': opts['sendAt'],
        'ShortenUrls': opts['shortenUrls'],
        'SmartEncoded': opts['smartEncoded'],
        'StatusCallback': opts['statusCallback'],
        'To': to,
        'ValidityPeriod': opts['validityPeriod']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = ApiV2010AccountMessage;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/Messages.json', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteMessage operation.
     * @callback module:api/Api20100401MessageApi~deleteMessageCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Message resource from your account
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource
     * @param {String} sid The SID of the Message resource you wish to delete
     * @param {module:api/Api20100401MessageApi~deleteMessageCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteMessage(accountSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling deleteMessage");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteMessage");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchMessage operation.
     * @callback module:api/Api20100401MessageApi~fetchMessageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010AccountMessage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch a specific Message
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource
     * @param {String} sid The SID of the Message resource to be fetched
     * @param {module:api/Api20100401MessageApi~fetchMessageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010AccountMessage}
     */
    fetchMessage(accountSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling fetchMessage");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchMessage");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiV2010AccountMessage;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listMessage operation.
     * @callback module:api/Api20100401MessageApi~listMessageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListMessageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of Message resources associated with a Twilio Account
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resources.
     * @param {Object} opts Optional parameters
     * @param {String} [to] Filter by recipient. For example: Set this `to` parameter to `+15558881111` to retrieve a list of Message resources with `to` properties of `+15558881111`
     * @param {String} [from] Filter by sender. For example: Set this `from` parameter to `+15552229999` to retrieve a list of Message resources with `from` properties of `+15552229999`
     * @param {Date} [dateSent] Filter by Message `sent_date`. Accepts GMT dates in the following formats: `YYYY-MM-DD` (to find Messages with a specific `sent_date`), `<=YYYY-MM-DD` (to find Messages with `sent_date`s on and before a specific date), and `>=YYYY-MM-DD` (to find Messages with `sent_dates` on and after a specific date).
     * @param {Date} [dateSent2] Filter by Message `sent_date`. Accepts GMT dates in the following formats: `YYYY-MM-DD` (to find Messages with a specific `sent_date`), `<=YYYY-MM-DD` (to find Messages with `sent_date`s on and before a specific date), and `>=YYYY-MM-DD` (to find Messages with `sent_dates` on and after a specific date).
     * @param {Date} [dateSent3] Filter by Message `sent_date`. Accepts GMT dates in the following formats: `YYYY-MM-DD` (to find Messages with a specific `sent_date`), `<=YYYY-MM-DD` (to find Messages with `sent_date`s on and before a specific date), and `>=YYYY-MM-DD` (to find Messages with `sent_dates` on and after a specific date).
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/Api20100401MessageApi~listMessageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListMessageResponse}
     */
    listMessage(accountSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling listMessage");
      }

      let pathParams = {
        'AccountSid': accountSid
      };
      let queryParams = {
        'To': opts['to'],
        'From': opts['from'],
        'DateSent': opts['dateSent'],
        'DateSent&lt;': opts['dateSent2'],
        'DateSent&gt;': opts['dateSent3'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListMessageResponse;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/Messages.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateMessage operation.
     * @callback module:api/Api20100401MessageApi~updateMessageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010AccountMessage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a Message resource (used to redact Message `body` text and to cancel not-yet-sent messages)
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to update.
     * @param {String} sid The SID of the Message resource to be updated
     * @param {Object} opts Optional parameters
     * @param {String} [body] The new `body` of the Message resource. To redact the text content of a Message, this parameter's value must be an empty string
     * @param {module:model/MessageEnumUpdateStatus} [status] 
     * @param {module:api/Api20100401MessageApi~updateMessageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010AccountMessage}
     */
    updateMessage(accountSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling updateMessage");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateMessage");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Body': opts['body'],
        'Status': opts['status']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = ApiV2010AccountMessage;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
