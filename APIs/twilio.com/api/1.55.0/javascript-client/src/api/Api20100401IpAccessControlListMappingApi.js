/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiV2010AccountSipSipDomainSipIpAccessControlListMapping from '../model/ApiV2010AccountSipSipDomainSipIpAccessControlListMapping';
import ListSipIpAccessControlListMappingResponse from '../model/ListSipIpAccessControlListMappingResponse';

/**
* Api20100401IpAccessControlListMapping service.
* @module api/Api20100401IpAccessControlListMappingApi
* @version 1.55.0
*/
export default class Api20100401IpAccessControlListMappingApi {

    /**
    * Constructs a new Api20100401IpAccessControlListMappingApi. 
    * @alias module:api/Api20100401IpAccessControlListMappingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createSipIpAccessControlListMapping operation.
     * @callback module:api/Api20100401IpAccessControlListMappingApi~createSipIpAccessControlListMappingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010AccountSipSipDomainSipIpAccessControlListMapping} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new IpAccessControlListMapping resource.
     * @param {String} accountSid The unique id of the Account that is responsible for this resource.
     * @param {String} domainSid A 34 character string that uniquely identifies the SIP domain.
     * @param {String} ipAccessControlListSid The unique id of the IP access control list to map to the SIP domain.
     * @param {module:api/Api20100401IpAccessControlListMappingApi~createSipIpAccessControlListMappingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010AccountSipSipDomainSipIpAccessControlListMapping}
     */
    createSipIpAccessControlListMapping(accountSid, domainSid, ipAccessControlListSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling createSipIpAccessControlListMapping");
      }
      // verify the required parameter 'domainSid' is set
      if (domainSid === undefined || domainSid === null) {
        throw new Error("Missing the required parameter 'domainSid' when calling createSipIpAccessControlListMapping");
      }
      // verify the required parameter 'ipAccessControlListSid' is set
      if (ipAccessControlListSid === undefined || ipAccessControlListSid === null) {
        throw new Error("Missing the required parameter 'ipAccessControlListSid' when calling createSipIpAccessControlListMapping");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'DomainSid': domainSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'IpAccessControlListSid': ipAccessControlListSid
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = ApiV2010AccountSipSipDomainSipIpAccessControlListMapping;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSipIpAccessControlListMapping operation.
     * @callback module:api/Api20100401IpAccessControlListMappingApi~deleteSipIpAccessControlListMappingCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an IpAccessControlListMapping resource.
     * @param {String} accountSid The unique id of the Account that is responsible for this resource.
     * @param {String} domainSid A 34 character string that uniquely identifies the SIP domain.
     * @param {String} sid A 34 character string that uniquely identifies the resource to delete.
     * @param {module:api/Api20100401IpAccessControlListMappingApi~deleteSipIpAccessControlListMappingCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteSipIpAccessControlListMapping(accountSid, domainSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling deleteSipIpAccessControlListMapping");
      }
      // verify the required parameter 'domainSid' is set
      if (domainSid === undefined || domainSid === null) {
        throw new Error("Missing the required parameter 'domainSid' when calling deleteSipIpAccessControlListMapping");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteSipIpAccessControlListMapping");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'DomainSid': domainSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings/{Sid}.json', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchSipIpAccessControlListMapping operation.
     * @callback module:api/Api20100401IpAccessControlListMappingApi~fetchSipIpAccessControlListMappingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010AccountSipSipDomainSipIpAccessControlListMapping} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch an IpAccessControlListMapping resource.
     * @param {String} accountSid The unique id of the Account that is responsible for this resource.
     * @param {String} domainSid A 34 character string that uniquely identifies the SIP domain.
     * @param {String} sid A 34 character string that uniquely identifies the resource to fetch.
     * @param {module:api/Api20100401IpAccessControlListMappingApi~fetchSipIpAccessControlListMappingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010AccountSipSipDomainSipIpAccessControlListMapping}
     */
    fetchSipIpAccessControlListMapping(accountSid, domainSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling fetchSipIpAccessControlListMapping");
      }
      // verify the required parameter 'domainSid' is set
      if (domainSid === undefined || domainSid === null) {
        throw new Error("Missing the required parameter 'domainSid' when calling fetchSipIpAccessControlListMapping");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchSipIpAccessControlListMapping");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'DomainSid': domainSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiV2010AccountSipSipDomainSipIpAccessControlListMapping;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings/{Sid}.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listSipIpAccessControlListMapping operation.
     * @callback module:api/Api20100401IpAccessControlListMappingApi~listSipIpAccessControlListMappingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSipIpAccessControlListMappingResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of IpAccessControlListMapping resources.
     * @param {String} accountSid The unique id of the Account that is responsible for this resource.
     * @param {String} domainSid A 34 character string that uniquely identifies the SIP domain.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/Api20100401IpAccessControlListMappingApi~listSipIpAccessControlListMappingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSipIpAccessControlListMappingResponse}
     */
    listSipIpAccessControlListMapping(accountSid, domainSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling listSipIpAccessControlListMapping");
      }
      // verify the required parameter 'domainSid' is set
      if (domainSid === undefined || domainSid === null) {
        throw new Error("Missing the required parameter 'domainSid' when calling listSipIpAccessControlListMapping");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'DomainSid': domainSid
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListSipIpAccessControlListMappingResponse;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
