/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccountEnumStatus from '../model/AccountEnumStatus';
import ApiV2010Account from '../model/ApiV2010Account';
import ListAccountResponse from '../model/ListAccountResponse';

/**
* Api20100401Account service.
* @module api/Api20100401AccountApi
* @version 1.55.0
*/
export default class Api20100401AccountApi {

    /**
    * Constructs a new Api20100401AccountApi. 
    * @alias module:api/Api20100401AccountApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createAccount operation.
     * @callback module:api/Api20100401AccountApi~createAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010Account} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Twilio Subaccount from the account making the request
     * @param {Object} opts Optional parameters
     * @param {String} [friendlyName] A human readable description of the account to create, defaults to `SubAccount Created at {YYYY-MM-DD HH:MM meridian}`
     * @param {module:api/Api20100401AccountApi~createAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010Account}
     */
    createAccount(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'FriendlyName': opts['friendlyName']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = ApiV2010Account;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts.json', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchAccount operation.
     * @callback module:api/Api20100401AccountApi~fetchAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010Account} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch the account specified by the provided Account Sid
     * @param {String} sid The Account Sid that uniquely identifies the account to fetch
     * @param {module:api/Api20100401AccountApi~fetchAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010Account}
     */
    fetchAccount(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchAccount");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiV2010Account;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{Sid}.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listAccount operation.
     * @callback module:api/Api20100401AccountApi~listAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a collection of Accounts belonging to the account used to make the request
     * @param {Object} opts Optional parameters
     * @param {String} [friendlyName] Only return the Account resources with friendly names that exactly match this name.
     * @param {module:model/AccountEnumStatus} [status] Only return Account resources with the given status. Can be `closed`, `suspended` or `active`.
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/Api20100401AccountApi~listAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAccountResponse}
     */
    listAccount(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'FriendlyName': opts['friendlyName'],
        'Status': opts['status'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAccountResponse;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAccount operation.
     * @callback module:api/Api20100401AccountApi~updateAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010Account} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Modify the properties of a given Account
     * @param {String} sid The Account Sid that uniquely identifies the account to update
     * @param {Object} opts Optional parameters
     * @param {String} [friendlyName] Update the human-readable description of this Account
     * @param {module:model/AccountEnumStatus} [status] 
     * @param {module:api/Api20100401AccountApi~updateAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010Account}
     */
    updateAccount(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateAccount");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'FriendlyName': opts['friendlyName'],
        'Status': opts['status']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = ApiV2010Account;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{Sid}.json', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
