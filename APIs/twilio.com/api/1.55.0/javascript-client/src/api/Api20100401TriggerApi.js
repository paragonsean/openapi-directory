/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiV2010AccountUsageUsageTrigger from '../model/ApiV2010AccountUsageUsageTrigger';
import ListUsageTriggerResponse from '../model/ListUsageTriggerResponse';
import UsageTriggerEnumRecurring from '../model/UsageTriggerEnumRecurring';
import UsageTriggerEnumTriggerField from '../model/UsageTriggerEnumTriggerField';
import UsageTriggerEnumUsageCategory from '../model/UsageTriggerEnumUsageCategory';

/**
* Api20100401Trigger service.
* @module api/Api20100401TriggerApi
* @version 1.55.0
*/
export default class Api20100401TriggerApi {

    /**
    * Constructs a new Api20100401TriggerApi. 
    * @alias module:api/Api20100401TriggerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createUsageTrigger operation.
     * @callback module:api/Api20100401TriggerApi~createUsageTriggerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010AccountUsageUsageTrigger} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new UsageTrigger
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
     * @param {String} callbackUrl The URL we should call using `callback_method` when the trigger fires.
     * @param {String} triggerValue The usage value at which the trigger should fire.  For convenience, you can use an offset value such as `+30` to specify a trigger_value that is 30 units more than the current usage value. Be sure to urlencode a `+` as `%2B`.
     * @param {module:model/UsageTriggerEnumUsageCategory} usageCategory 
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [callbackMethod] The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is `POST`.
     * @param {String} [friendlyName] A descriptive string that you create to describe the resource. It can be up to 64 characters long.
     * @param {module:model/UsageTriggerEnumRecurring} [recurring] 
     * @param {module:model/UsageTriggerEnumTriggerField} [triggerBy] 
     * @param {module:api/Api20100401TriggerApi~createUsageTriggerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010AccountUsageUsageTrigger}
     */
    createUsageTrigger(accountSid, callbackUrl, triggerValue, usageCategory, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling createUsageTrigger");
      }
      // verify the required parameter 'callbackUrl' is set
      if (callbackUrl === undefined || callbackUrl === null) {
        throw new Error("Missing the required parameter 'callbackUrl' when calling createUsageTrigger");
      }
      // verify the required parameter 'triggerValue' is set
      if (triggerValue === undefined || triggerValue === null) {
        throw new Error("Missing the required parameter 'triggerValue' when calling createUsageTrigger");
      }
      // verify the required parameter 'usageCategory' is set
      if (usageCategory === undefined || usageCategory === null) {
        throw new Error("Missing the required parameter 'usageCategory' when calling createUsageTrigger");
      }

      let pathParams = {
        'AccountSid': accountSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'CallbackMethod': opts['callbackMethod'],
        'CallbackUrl': callbackUrl,
        'FriendlyName': opts['friendlyName'],
        'Recurring': opts['recurring'],
        'TriggerBy': opts['triggerBy'],
        'TriggerValue': triggerValue,
        'UsageCategory': usageCategory
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = ApiV2010AccountUsageUsageTrigger;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/Usage/Triggers.json', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteUsageTrigger operation.
     * @callback module:api/Api20100401TriggerApi~deleteUsageTriggerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to delete.
     * @param {String} sid The Twilio-provided string that uniquely identifies the UsageTrigger resource to delete.
     * @param {module:api/Api20100401TriggerApi~deleteUsageTriggerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteUsageTrigger(accountSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling deleteUsageTrigger");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteUsageTrigger");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchUsageTrigger operation.
     * @callback module:api/Api20100401TriggerApi~fetchUsageTriggerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010AccountUsageUsageTrigger} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch and instance of a usage-trigger
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resource to fetch.
     * @param {String} sid The Twilio-provided string that uniquely identifies the UsageTrigger resource to fetch.
     * @param {module:api/Api20100401TriggerApi~fetchUsageTriggerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010AccountUsageUsageTrigger}
     */
    fetchUsageTrigger(accountSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling fetchUsageTrigger");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchUsageTrigger");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiV2010AccountUsageUsageTrigger;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listUsageTrigger operation.
     * @callback module:api/Api20100401TriggerApi~listUsageTriggerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListUsageTriggerResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of usage-triggers belonging to the account used to make the request
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to read.
     * @param {Object} opts Optional parameters
     * @param {module:model/UsageTriggerEnumRecurring} [recurring] The frequency of recurring UsageTriggers to read. Can be: `daily`, `monthly`, or `yearly` to read recurring UsageTriggers. An empty value or a value of `alltime` reads non-recurring UsageTriggers.
     * @param {module:model/UsageTriggerEnumTriggerField} [triggerBy] The trigger field of the UsageTriggers to read.  Can be: `count`, `usage`, or `price` as described in the [UsageRecords documentation](https://www.twilio.com/docs/usage/api/usage-record#usage-count-price).
     * @param {module:model/UsageTriggerEnumUsageCategory} [usageCategory] The usage category of the UsageTriggers to read. Must be a supported [usage categories](https://www.twilio.com/docs/usage/api/usage-record#usage-categories).
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/Api20100401TriggerApi~listUsageTriggerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListUsageTriggerResponse}
     */
    listUsageTrigger(accountSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling listUsageTrigger");
      }

      let pathParams = {
        'AccountSid': accountSid
      };
      let queryParams = {
        'Recurring': opts['recurring'],
        'TriggerBy': opts['triggerBy'],
        'UsageCategory': opts['usageCategory'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListUsageTriggerResponse;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/Usage/Triggers.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateUsageTrigger operation.
     * @callback module:api/Api20100401TriggerApi~updateUsageTriggerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2010AccountUsageUsageTrigger} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an instance of a usage trigger
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageTrigger resources to update.
     * @param {String} sid The Twilio-provided string that uniquely identifies the UsageTrigger resource to update.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [callbackMethod] The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is `POST`.
     * @param {String} [callbackUrl] The URL we should call using `callback_method` when the trigger fires.
     * @param {String} [friendlyName] A descriptive string that you create to describe the resource. It can be up to 64 characters long.
     * @param {module:api/Api20100401TriggerApi~updateUsageTriggerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2010AccountUsageUsageTrigger}
     */
    updateUsageTrigger(accountSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling updateUsageTrigger");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateUsageTrigger");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'CallbackMethod': opts['callbackMethod'],
        'CallbackUrl': opts['callbackUrl'],
        'FriendlyName': opts['friendlyName']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = ApiV2010AccountUsageUsageTrigger;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
