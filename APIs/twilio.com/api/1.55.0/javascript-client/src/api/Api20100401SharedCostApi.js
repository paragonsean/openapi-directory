/**
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListAvailablePhoneNumberSharedCostResponse from '../model/ListAvailablePhoneNumberSharedCostResponse';

/**
* Api20100401SharedCost service.
* @module api/Api20100401SharedCostApi
* @version 1.55.0
*/
export default class Api20100401SharedCostApi {

    /**
    * Constructs a new Api20100401SharedCostApi. 
    * @alias module:api/Api20100401SharedCostApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the listAvailablePhoneNumberSharedCost operation.
     * @callback module:api/Api20100401SharedCostApi~listAvailablePhoneNumberSharedCostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListAvailablePhoneNumberSharedCostResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources.
     * @param {String} countryCode The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers.
     * @param {Object} opts Optional parameters
     * @param {Number} [areaCode] The area code of the phone numbers to read. Applies to only phone numbers in the US and Canada.
     * @param {String} [contains] The pattern on which to match phone numbers. Valid characters are `*`, `0-9`, `a-z`, and `A-Z`. The `*` character matches any single digit. For examples, see [Example 2](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-3). If specified, this value must have at least two characters.
     * @param {Boolean} [smsEnabled] Whether the phone numbers can receive text messages. Can be: `true` or `false`.
     * @param {Boolean} [mmsEnabled] Whether the phone numbers can receive MMS messages. Can be: `true` or `false`.
     * @param {Boolean} [voiceEnabled] Whether the phone numbers can receive calls. Can be: `true` or `false`.
     * @param {Boolean} [excludeAllAddressRequired] Whether to exclude phone numbers that require an [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.
     * @param {Boolean} [excludeLocalAddressRequired] Whether to exclude phone numbers that require a local [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.
     * @param {Boolean} [excludeForeignAddressRequired] Whether to exclude phone numbers that require a foreign [Address](https://www.twilio.com/docs/usage/api/address). Can be: `true` or `false` and the default is `false`.
     * @param {Boolean} [beta] Whether to read phone numbers that are new to the Twilio platform. Can be: `true` or `false` and the default is `true`.
     * @param {String} [nearNumber] Given a phone number, find a geographically close number within `distance` miles. Distance defaults to 25 miles. Applies to only phone numbers in the US and Canada.
     * @param {String} [nearLatLong] Given a latitude/longitude pair `lat,long` find geographically close numbers within `distance` miles. Applies to only phone numbers in the US and Canada.
     * @param {Number} [distance] The search radius, in miles, for a `near_` query.  Can be up to `500` and the default is `25`. Applies to only phone numbers in the US and Canada.
     * @param {String} [inPostalCode] Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. Applies to only phone numbers in the US and Canada.
     * @param {String} [inRegion] Limit results to a particular region, state, or province. Given a phone number, search within the same region as that number. Applies to only phone numbers in the US and Canada.
     * @param {String} [inRateCenter] Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires `in_lata` to be set as well. Applies to only phone numbers in the US and Canada.
     * @param {String} [inLata] Limit results to a specific local access and transport area ([LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. Applies to only phone numbers in the US and Canada.
     * @param {String} [inLocality] Limit results to a particular locality or city. Given a phone number, search within the same Locality as that number.
     * @param {Boolean} [faxEnabled] Whether the phone numbers can receive faxes. Can be: `true` or `false`.
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/Api20100401SharedCostApi~listAvailablePhoneNumberSharedCostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListAvailablePhoneNumberSharedCostResponse}
     */
    listAvailablePhoneNumberSharedCost(accountSid, countryCode, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountSid' is set
      if (accountSid === undefined || accountSid === null) {
        throw new Error("Missing the required parameter 'accountSid' when calling listAvailablePhoneNumberSharedCost");
      }
      // verify the required parameter 'countryCode' is set
      if (countryCode === undefined || countryCode === null) {
        throw new Error("Missing the required parameter 'countryCode' when calling listAvailablePhoneNumberSharedCost");
      }

      let pathParams = {
        'AccountSid': accountSid,
        'CountryCode': countryCode
      };
      let queryParams = {
        'AreaCode': opts['areaCode'],
        'Contains': opts['contains'],
        'SmsEnabled': opts['smsEnabled'],
        'MmsEnabled': opts['mmsEnabled'],
        'VoiceEnabled': opts['voiceEnabled'],
        'ExcludeAllAddressRequired': opts['excludeAllAddressRequired'],
        'ExcludeLocalAddressRequired': opts['excludeLocalAddressRequired'],
        'ExcludeForeignAddressRequired': opts['excludeForeignAddressRequired'],
        'Beta': opts['beta'],
        'NearNumber': opts['nearNumber'],
        'NearLatLong': opts['nearLatLong'],
        'Distance': opts['distance'],
        'InPostalCode': opts['inPostalCode'],
        'InRegion': opts['inRegion'],
        'InRateCenter': opts['inRateCenter'],
        'InLata': opts['inLata'],
        'InLocality': opts['inLocality'],
        'FaxEnabled': opts['faxEnabled'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListAvailablePhoneNumberSharedCostResponse;
      let basePaths = ['https://api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/SharedCost.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
