# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiV2010AccountAvailablePhoneNumberCountry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, beta: bool=None, country: str=None, country_code: str=None, subresource_uris: object=None, uri: str=None):
        """ApiV2010AccountAvailablePhoneNumberCountry - a model defined in OpenAPI

        :param beta: The beta of this ApiV2010AccountAvailablePhoneNumberCountry.
        :param country: The country of this ApiV2010AccountAvailablePhoneNumberCountry.
        :param country_code: The country_code of this ApiV2010AccountAvailablePhoneNumberCountry.
        :param subresource_uris: The subresource_uris of this ApiV2010AccountAvailablePhoneNumberCountry.
        :param uri: The uri of this ApiV2010AccountAvailablePhoneNumberCountry.
        """
        self.openapi_types = {
            'beta': bool,
            'country': str,
            'country_code': str,
            'subresource_uris': object,
            'uri': str
        }

        self.attribute_map = {
            'beta': 'beta',
            'country': 'country',
            'country_code': 'country_code',
            'subresource_uris': 'subresource_uris',
            'uri': 'uri'
        }

        self._beta = beta
        self._country = country
        self._country_code = country_code
        self._subresource_uris = subresource_uris
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2010AccountAvailablePhoneNumberCountry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api.v2010.account.available_phone_number_country of this ApiV2010AccountAvailablePhoneNumberCountry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def beta(self):
        """Gets the beta of this ApiV2010AccountAvailablePhoneNumberCountry.

        Whether all phone numbers available in the country are new to the Twilio platform. `true` if they are and `false` if all numbers are not in the Twilio Phone Number Beta program.

        :return: The beta of this ApiV2010AccountAvailablePhoneNumberCountry.
        :rtype: bool
        """
        return self._beta

    @beta.setter
    def beta(self, beta):
        """Sets the beta of this ApiV2010AccountAvailablePhoneNumberCountry.

        Whether all phone numbers available in the country are new to the Twilio platform. `true` if they are and `false` if all numbers are not in the Twilio Phone Number Beta program.

        :param beta: The beta of this ApiV2010AccountAvailablePhoneNumberCountry.
        :type beta: bool
        """

        self._beta = beta

    @property
    def country(self):
        """Gets the country of this ApiV2010AccountAvailablePhoneNumberCountry.

        The name of the country.

        :return: The country of this ApiV2010AccountAvailablePhoneNumberCountry.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this ApiV2010AccountAvailablePhoneNumberCountry.

        The name of the country.

        :param country: The country of this ApiV2010AccountAvailablePhoneNumberCountry.
        :type country: str
        """

        self._country = country

    @property
    def country_code(self):
        """Gets the country_code of this ApiV2010AccountAvailablePhoneNumberCountry.

        The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country.

        :return: The country_code of this ApiV2010AccountAvailablePhoneNumberCountry.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this ApiV2010AccountAvailablePhoneNumberCountry.

        The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country.

        :param country_code: The country_code of this ApiV2010AccountAvailablePhoneNumberCountry.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def subresource_uris(self):
        """Gets the subresource_uris of this ApiV2010AccountAvailablePhoneNumberCountry.

        A list of related AvailablePhoneNumber resources identified by their URIs relative to `https://api.twilio.com`.

        :return: The subresource_uris of this ApiV2010AccountAvailablePhoneNumberCountry.
        :rtype: object
        """
        return self._subresource_uris

    @subresource_uris.setter
    def subresource_uris(self, subresource_uris):
        """Sets the subresource_uris of this ApiV2010AccountAvailablePhoneNumberCountry.

        A list of related AvailablePhoneNumber resources identified by their URIs relative to `https://api.twilio.com`.

        :param subresource_uris: The subresource_uris of this ApiV2010AccountAvailablePhoneNumberCountry.
        :type subresource_uris: object
        """

        self._subresource_uris = subresource_uris

    @property
    def uri(self):
        """Gets the uri of this ApiV2010AccountAvailablePhoneNumberCountry.

        The URI of the Country resource, relative to `https://api.twilio.com`.

        :return: The uri of this ApiV2010AccountAvailablePhoneNumberCountry.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ApiV2010AccountAvailablePhoneNumberCountry.

        The URI of the Country resource, relative to `https://api.twilio.com`.

        :param uri: The uri of this ApiV2010AccountAvailablePhoneNumberCountry.
        :type uri: str
        """

        self._uri = uri
