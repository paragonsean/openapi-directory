# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authorized_connect_app_enum_permission import AuthorizedConnectAppEnumPermission
import re
from openapi_server import util


class ApiV2010AccountAuthorizedConnectApp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, connect_app_company_name: str=None, connect_app_description: str=None, connect_app_friendly_name: str=None, connect_app_homepage_url: str=None, connect_app_sid: str=None, permissions: List[AuthorizedConnectAppEnumPermission]=None, uri: str=None):
        """ApiV2010AccountAuthorizedConnectApp - a model defined in OpenAPI

        :param account_sid: The account_sid of this ApiV2010AccountAuthorizedConnectApp.
        :param connect_app_company_name: The connect_app_company_name of this ApiV2010AccountAuthorizedConnectApp.
        :param connect_app_description: The connect_app_description of this ApiV2010AccountAuthorizedConnectApp.
        :param connect_app_friendly_name: The connect_app_friendly_name of this ApiV2010AccountAuthorizedConnectApp.
        :param connect_app_homepage_url: The connect_app_homepage_url of this ApiV2010AccountAuthorizedConnectApp.
        :param connect_app_sid: The connect_app_sid of this ApiV2010AccountAuthorizedConnectApp.
        :param permissions: The permissions of this ApiV2010AccountAuthorizedConnectApp.
        :param uri: The uri of this ApiV2010AccountAuthorizedConnectApp.
        """
        self.openapi_types = {
            'account_sid': str,
            'connect_app_company_name': str,
            'connect_app_description': str,
            'connect_app_friendly_name': str,
            'connect_app_homepage_url': str,
            'connect_app_sid': str,
            'permissions': List[AuthorizedConnectAppEnumPermission],
            'uri': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'connect_app_company_name': 'connect_app_company_name',
            'connect_app_description': 'connect_app_description',
            'connect_app_friendly_name': 'connect_app_friendly_name',
            'connect_app_homepage_url': 'connect_app_homepage_url',
            'connect_app_sid': 'connect_app_sid',
            'permissions': 'permissions',
            'uri': 'uri'
        }

        self._account_sid = account_sid
        self._connect_app_company_name = connect_app_company_name
        self._connect_app_description = connect_app_description
        self._connect_app_friendly_name = connect_app_friendly_name
        self._connect_app_homepage_url = connect_app_homepage_url
        self._connect_app_sid = connect_app_sid
        self._permissions = permissions
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2010AccountAuthorizedConnectApp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api.v2010.account.authorized_connect_app of this ApiV2010AccountAuthorizedConnectApp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ApiV2010AccountAuthorizedConnectApp.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AuthorizedConnectApp resource.

        :return: The account_sid of this ApiV2010AccountAuthorizedConnectApp.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ApiV2010AccountAuthorizedConnectApp.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AuthorizedConnectApp resource.

        :param account_sid: The account_sid of this ApiV2010AccountAuthorizedConnectApp.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def connect_app_company_name(self):
        """Gets the connect_app_company_name of this ApiV2010AccountAuthorizedConnectApp.

        The company name set for the Connect App.

        :return: The connect_app_company_name of this ApiV2010AccountAuthorizedConnectApp.
        :rtype: str
        """
        return self._connect_app_company_name

    @connect_app_company_name.setter
    def connect_app_company_name(self, connect_app_company_name):
        """Sets the connect_app_company_name of this ApiV2010AccountAuthorizedConnectApp.

        The company name set for the Connect App.

        :param connect_app_company_name: The connect_app_company_name of this ApiV2010AccountAuthorizedConnectApp.
        :type connect_app_company_name: str
        """

        self._connect_app_company_name = connect_app_company_name

    @property
    def connect_app_description(self):
        """Gets the connect_app_description of this ApiV2010AccountAuthorizedConnectApp.

        A detailed description of the Connect App.

        :return: The connect_app_description of this ApiV2010AccountAuthorizedConnectApp.
        :rtype: str
        """
        return self._connect_app_description

    @connect_app_description.setter
    def connect_app_description(self, connect_app_description):
        """Sets the connect_app_description of this ApiV2010AccountAuthorizedConnectApp.

        A detailed description of the Connect App.

        :param connect_app_description: The connect_app_description of this ApiV2010AccountAuthorizedConnectApp.
        :type connect_app_description: str
        """

        self._connect_app_description = connect_app_description

    @property
    def connect_app_friendly_name(self):
        """Gets the connect_app_friendly_name of this ApiV2010AccountAuthorizedConnectApp.

        The name of the Connect App.

        :return: The connect_app_friendly_name of this ApiV2010AccountAuthorizedConnectApp.
        :rtype: str
        """
        return self._connect_app_friendly_name

    @connect_app_friendly_name.setter
    def connect_app_friendly_name(self, connect_app_friendly_name):
        """Sets the connect_app_friendly_name of this ApiV2010AccountAuthorizedConnectApp.

        The name of the Connect App.

        :param connect_app_friendly_name: The connect_app_friendly_name of this ApiV2010AccountAuthorizedConnectApp.
        :type connect_app_friendly_name: str
        """

        self._connect_app_friendly_name = connect_app_friendly_name

    @property
    def connect_app_homepage_url(self):
        """Gets the connect_app_homepage_url of this ApiV2010AccountAuthorizedConnectApp.

        The public URL for the Connect App.

        :return: The connect_app_homepage_url of this ApiV2010AccountAuthorizedConnectApp.
        :rtype: str
        """
        return self._connect_app_homepage_url

    @connect_app_homepage_url.setter
    def connect_app_homepage_url(self, connect_app_homepage_url):
        """Sets the connect_app_homepage_url of this ApiV2010AccountAuthorizedConnectApp.

        The public URL for the Connect App.

        :param connect_app_homepage_url: The connect_app_homepage_url of this ApiV2010AccountAuthorizedConnectApp.
        :type connect_app_homepage_url: str
        """

        self._connect_app_homepage_url = connect_app_homepage_url

    @property
    def connect_app_sid(self):
        """Gets the connect_app_sid of this ApiV2010AccountAuthorizedConnectApp.

        The SID that we assigned to the Connect App.

        :return: The connect_app_sid of this ApiV2010AccountAuthorizedConnectApp.
        :rtype: str
        """
        return self._connect_app_sid

    @connect_app_sid.setter
    def connect_app_sid(self, connect_app_sid):
        """Sets the connect_app_sid of this ApiV2010AccountAuthorizedConnectApp.

        The SID that we assigned to the Connect App.

        :param connect_app_sid: The connect_app_sid of this ApiV2010AccountAuthorizedConnectApp.
        :type connect_app_sid: str
        """
        if connect_app_sid is not None and len(connect_app_sid) > 34:
            raise ValueError("Invalid value for `connect_app_sid`, length must be less than or equal to `34`")
        if connect_app_sid is not None and len(connect_app_sid) < 34:
            raise ValueError("Invalid value for `connect_app_sid`, length must be greater than or equal to `34`")
        if connect_app_sid is not None and not re.search(r'^CN[0-9a-fA-F]{32}$', connect_app_sid):
            raise ValueError("Invalid value for `connect_app_sid`, must be a follow pattern or equal to `/^CN[0-9a-fA-F]{32}$/`")

        self._connect_app_sid = connect_app_sid

    @property
    def permissions(self):
        """Gets the permissions of this ApiV2010AccountAuthorizedConnectApp.

        The set of permissions that you authorized for the Connect App.  Can be: `get-all` or `post-all`.

        :return: The permissions of this ApiV2010AccountAuthorizedConnectApp.
        :rtype: List[AuthorizedConnectAppEnumPermission]
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this ApiV2010AccountAuthorizedConnectApp.

        The set of permissions that you authorized for the Connect App.  Can be: `get-all` or `post-all`.

        :param permissions: The permissions of this ApiV2010AccountAuthorizedConnectApp.
        :type permissions: List[AuthorizedConnectAppEnumPermission]
        """

        self._permissions = permissions

    @property
    def uri(self):
        """Gets the uri of this ApiV2010AccountAuthorizedConnectApp.

        The URI of the resource, relative to `https://api.twilio.com`.

        :return: The uri of this ApiV2010AccountAuthorizedConnectApp.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ApiV2010AccountAuthorizedConnectApp.

        The URI of the resource, relative to `https://api.twilio.com`.

        :param uri: The uri of this ApiV2010AccountAuthorizedConnectApp.
        :type uri: str
        """

        self._uri = uri
