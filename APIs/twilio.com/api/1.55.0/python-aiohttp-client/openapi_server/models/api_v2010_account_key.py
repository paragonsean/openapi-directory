# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ApiV2010AccountKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_created: str=None, date_updated: str=None, friendly_name: str=None, sid: str=None):
        """ApiV2010AccountKey - a model defined in OpenAPI

        :param date_created: The date_created of this ApiV2010AccountKey.
        :param date_updated: The date_updated of this ApiV2010AccountKey.
        :param friendly_name: The friendly_name of this ApiV2010AccountKey.
        :param sid: The sid of this ApiV2010AccountKey.
        """
        self.openapi_types = {
            'date_created': str,
            'date_updated': str,
            'friendly_name': str,
            'sid': str
        }

        self.attribute_map = {
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'friendly_name': 'friendly_name',
            'sid': 'sid'
        }

        self._date_created = date_created
        self._date_updated = date_updated
        self._friendly_name = friendly_name
        self._sid = sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2010AccountKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api.v2010.account.key of this ApiV2010AccountKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_created(self):
        """Gets the date_created of this ApiV2010AccountKey.

        The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this ApiV2010AccountKey.
        :rtype: str
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ApiV2010AccountKey.

        The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this ApiV2010AccountKey.
        :type date_created: str
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ApiV2010AccountKey.

        The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this ApiV2010AccountKey.
        :rtype: str
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ApiV2010AccountKey.

        The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this ApiV2010AccountKey.
        :type date_updated: str
        """

        self._date_updated = date_updated

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ApiV2010AccountKey.

        The string that you assigned to describe the resource.

        :return: The friendly_name of this ApiV2010AccountKey.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ApiV2010AccountKey.

        The string that you assigned to describe the resource.

        :param friendly_name: The friendly_name of this ApiV2010AccountKey.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def sid(self):
        """Gets the sid of this ApiV2010AccountKey.

        The unique string that that we created to identify the Key resource.

        :return: The sid of this ApiV2010AccountKey.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ApiV2010AccountKey.

        The unique string that that we created to identify the Key resource.

        :param sid: The sid of this ApiV2010AccountKey.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^SK[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^SK[0-9a-fA-F]{32}$/`")

        self._sid = sid
