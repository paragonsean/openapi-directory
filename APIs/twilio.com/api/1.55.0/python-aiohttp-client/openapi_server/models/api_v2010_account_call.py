# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.call_enum_status import CallEnumStatus
import re
from openapi_server import util


class ApiV2010AccountCall(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, answered_by: str=None, api_version: str=None, caller_name: str=None, date_created: str=None, date_updated: str=None, direction: str=None, duration: str=None, end_time: str=None, forwarded_from: str=None, _from: str=None, from_formatted: str=None, group_sid: str=None, parent_call_sid: str=None, phone_number_sid: str=None, price: str=None, price_unit: str=None, queue_time: str=None, sid: str=None, start_time: str=None, status: CallEnumStatus=None, subresource_uris: object=None, to: str=None, to_formatted: str=None, trunk_sid: str=None, uri: str=None):
        """ApiV2010AccountCall - a model defined in OpenAPI

        :param account_sid: The account_sid of this ApiV2010AccountCall.
        :param answered_by: The answered_by of this ApiV2010AccountCall.
        :param api_version: The api_version of this ApiV2010AccountCall.
        :param caller_name: The caller_name of this ApiV2010AccountCall.
        :param date_created: The date_created of this ApiV2010AccountCall.
        :param date_updated: The date_updated of this ApiV2010AccountCall.
        :param direction: The direction of this ApiV2010AccountCall.
        :param duration: The duration of this ApiV2010AccountCall.
        :param end_time: The end_time of this ApiV2010AccountCall.
        :param forwarded_from: The forwarded_from of this ApiV2010AccountCall.
        :param _from: The _from of this ApiV2010AccountCall.
        :param from_formatted: The from_formatted of this ApiV2010AccountCall.
        :param group_sid: The group_sid of this ApiV2010AccountCall.
        :param parent_call_sid: The parent_call_sid of this ApiV2010AccountCall.
        :param phone_number_sid: The phone_number_sid of this ApiV2010AccountCall.
        :param price: The price of this ApiV2010AccountCall.
        :param price_unit: The price_unit of this ApiV2010AccountCall.
        :param queue_time: The queue_time of this ApiV2010AccountCall.
        :param sid: The sid of this ApiV2010AccountCall.
        :param start_time: The start_time of this ApiV2010AccountCall.
        :param status: The status of this ApiV2010AccountCall.
        :param subresource_uris: The subresource_uris of this ApiV2010AccountCall.
        :param to: The to of this ApiV2010AccountCall.
        :param to_formatted: The to_formatted of this ApiV2010AccountCall.
        :param trunk_sid: The trunk_sid of this ApiV2010AccountCall.
        :param uri: The uri of this ApiV2010AccountCall.
        """
        self.openapi_types = {
            'account_sid': str,
            'answered_by': str,
            'api_version': str,
            'caller_name': str,
            'date_created': str,
            'date_updated': str,
            'direction': str,
            'duration': str,
            'end_time': str,
            'forwarded_from': str,
            '_from': str,
            'from_formatted': str,
            'group_sid': str,
            'parent_call_sid': str,
            'phone_number_sid': str,
            'price': str,
            'price_unit': str,
            'queue_time': str,
            'sid': str,
            'start_time': str,
            'status': CallEnumStatus,
            'subresource_uris': object,
            'to': str,
            'to_formatted': str,
            'trunk_sid': str,
            'uri': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'answered_by': 'answered_by',
            'api_version': 'api_version',
            'caller_name': 'caller_name',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'direction': 'direction',
            'duration': 'duration',
            'end_time': 'end_time',
            'forwarded_from': 'forwarded_from',
            '_from': 'from',
            'from_formatted': 'from_formatted',
            'group_sid': 'group_sid',
            'parent_call_sid': 'parent_call_sid',
            'phone_number_sid': 'phone_number_sid',
            'price': 'price',
            'price_unit': 'price_unit',
            'queue_time': 'queue_time',
            'sid': 'sid',
            'start_time': 'start_time',
            'status': 'status',
            'subresource_uris': 'subresource_uris',
            'to': 'to',
            'to_formatted': 'to_formatted',
            'trunk_sid': 'trunk_sid',
            'uri': 'uri'
        }

        self._account_sid = account_sid
        self._answered_by = answered_by
        self._api_version = api_version
        self._caller_name = caller_name
        self._date_created = date_created
        self._date_updated = date_updated
        self._direction = direction
        self._duration = duration
        self._end_time = end_time
        self._forwarded_from = forwarded_from
        self.__from = _from
        self._from_formatted = from_formatted
        self._group_sid = group_sid
        self._parent_call_sid = parent_call_sid
        self._phone_number_sid = phone_number_sid
        self._price = price
        self._price_unit = price_unit
        self._queue_time = queue_time
        self._sid = sid
        self._start_time = start_time
        self._status = status
        self._subresource_uris = subresource_uris
        self._to = to
        self._to_formatted = to_formatted
        self._trunk_sid = trunk_sid
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2010AccountCall':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api.v2010.account.call of this ApiV2010AccountCall.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ApiV2010AccountCall.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Call resource.

        :return: The account_sid of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ApiV2010AccountCall.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Call resource.

        :param account_sid: The account_sid of this ApiV2010AccountCall.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def answered_by(self):
        """Gets the answered_by of this ApiV2010AccountCall.

        Either `human` or `machine` if this call was initiated with answering machine detection. Empty otherwise.

        :return: The answered_by of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._answered_by

    @answered_by.setter
    def answered_by(self, answered_by):
        """Sets the answered_by of this ApiV2010AccountCall.

        Either `human` or `machine` if this call was initiated with answering machine detection. Empty otherwise.

        :param answered_by: The answered_by of this ApiV2010AccountCall.
        :type answered_by: str
        """

        self._answered_by = answered_by

    @property
    def api_version(self):
        """Gets the api_version of this ApiV2010AccountCall.

        The API version used to create the call.

        :return: The api_version of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this ApiV2010AccountCall.

        The API version used to create the call.

        :param api_version: The api_version of this ApiV2010AccountCall.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def caller_name(self):
        """Gets the caller_name of this ApiV2010AccountCall.

        The caller's name if this call was an incoming call to a phone number with caller ID Lookup enabled. Otherwise, empty.

        :return: The caller_name of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._caller_name

    @caller_name.setter
    def caller_name(self, caller_name):
        """Sets the caller_name of this ApiV2010AccountCall.

        The caller's name if this call was an incoming call to a phone number with caller ID Lookup enabled. Otherwise, empty.

        :param caller_name: The caller_name of this ApiV2010AccountCall.
        :type caller_name: str
        """

        self._caller_name = caller_name

    @property
    def date_created(self):
        """Gets the date_created of this ApiV2010AccountCall.

        The date and time in GMT that this resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ApiV2010AccountCall.

        The date and time in GMT that this resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this ApiV2010AccountCall.
        :type date_created: str
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ApiV2010AccountCall.

        The date and time in GMT that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ApiV2010AccountCall.

        The date and time in GMT that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this ApiV2010AccountCall.
        :type date_updated: str
        """

        self._date_updated = date_updated

    @property
    def direction(self):
        """Gets the direction of this ApiV2010AccountCall.

        A string describing the direction of the call. Can be: `inbound` for inbound calls, `outbound-api` for calls initiated via the REST API or `outbound-dial` for calls initiated by a `<Dial>` verb. Using [Elastic SIP Trunking](https://www.twilio.com/docs/sip-trunking), the values can be [`trunking-terminating`](https://www.twilio.com/docs/sip-trunking#termination) for outgoing calls from your communications infrastructure to the PSTN or [`trunking-originating`](https://www.twilio.com/docs/sip-trunking#origination) for incoming calls to your communications infrastructure from the PSTN.

        :return: The direction of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this ApiV2010AccountCall.

        A string describing the direction of the call. Can be: `inbound` for inbound calls, `outbound-api` for calls initiated via the REST API or `outbound-dial` for calls initiated by a `<Dial>` verb. Using [Elastic SIP Trunking](https://www.twilio.com/docs/sip-trunking), the values can be [`trunking-terminating`](https://www.twilio.com/docs/sip-trunking#termination) for outgoing calls from your communications infrastructure to the PSTN or [`trunking-originating`](https://www.twilio.com/docs/sip-trunking#origination) for incoming calls to your communications infrastructure from the PSTN.

        :param direction: The direction of this ApiV2010AccountCall.
        :type direction: str
        """

        self._direction = direction

    @property
    def duration(self):
        """Gets the duration of this ApiV2010AccountCall.

        The length of the call in seconds. This value is empty for busy, failed, unanswered, or ongoing calls.

        :return: The duration of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ApiV2010AccountCall.

        The length of the call in seconds. This value is empty for busy, failed, unanswered, or ongoing calls.

        :param duration: The duration of this ApiV2010AccountCall.
        :type duration: str
        """

        self._duration = duration

    @property
    def end_time(self):
        """Gets the end_time of this ApiV2010AccountCall.

        The time the call ended, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format. Empty if the call did not complete successfully.

        :return: The end_time of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this ApiV2010AccountCall.

        The time the call ended, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format. Empty if the call did not complete successfully.

        :param end_time: The end_time of this ApiV2010AccountCall.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def forwarded_from(self):
        """Gets the forwarded_from of this ApiV2010AccountCall.

        The forwarding phone number if this call was an incoming call forwarded from another number (depends on carrier supporting forwarding). Otherwise, empty.

        :return: The forwarded_from of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._forwarded_from

    @forwarded_from.setter
    def forwarded_from(self, forwarded_from):
        """Sets the forwarded_from of this ApiV2010AccountCall.

        The forwarding phone number if this call was an incoming call forwarded from another number (depends on carrier supporting forwarding). Otherwise, empty.

        :param forwarded_from: The forwarded_from of this ApiV2010AccountCall.
        :type forwarded_from: str
        """

        self._forwarded_from = forwarded_from

    @property
    def _from(self):
        """Gets the _from of this ApiV2010AccountCall.

        The phone number, SIP address, Client identifier or SIM SID that made this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`. SIM SIDs are formatted as `sim:sid`.

        :return: The _from of this ApiV2010AccountCall.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this ApiV2010AccountCall.

        The phone number, SIP address, Client identifier or SIM SID that made this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`. SIM SIDs are formatted as `sim:sid`.

        :param _from: The _from of this ApiV2010AccountCall.
        :type _from: str
        """

        self.__from = _from

    @property
    def from_formatted(self):
        """Gets the from_formatted of this ApiV2010AccountCall.

        The calling phone number, SIP address, or Client identifier formatted for display. Non-North American phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +442071838750).

        :return: The from_formatted of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._from_formatted

    @from_formatted.setter
    def from_formatted(self, from_formatted):
        """Sets the from_formatted of this ApiV2010AccountCall.

        The calling phone number, SIP address, or Client identifier formatted for display. Non-North American phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +442071838750).

        :param from_formatted: The from_formatted of this ApiV2010AccountCall.
        :type from_formatted: str
        """

        self._from_formatted = from_formatted

    @property
    def group_sid(self):
        """Gets the group_sid of this ApiV2010AccountCall.

        The Group SID associated with this call. If no Group is associated with the call, the field is empty.

        :return: The group_sid of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._group_sid

    @group_sid.setter
    def group_sid(self, group_sid):
        """Sets the group_sid of this ApiV2010AccountCall.

        The Group SID associated with this call. If no Group is associated with the call, the field is empty.

        :param group_sid: The group_sid of this ApiV2010AccountCall.
        :type group_sid: str
        """
        if group_sid is not None and len(group_sid) > 34:
            raise ValueError("Invalid value for `group_sid`, length must be less than or equal to `34`")
        if group_sid is not None and len(group_sid) < 34:
            raise ValueError("Invalid value for `group_sid`, length must be greater than or equal to `34`")
        if group_sid is not None and not re.search(r'^GP[0-9a-fA-F]{32}$', group_sid):
            raise ValueError("Invalid value for `group_sid`, must be a follow pattern or equal to `/^GP[0-9a-fA-F]{32}$/`")

        self._group_sid = group_sid

    @property
    def parent_call_sid(self):
        """Gets the parent_call_sid of this ApiV2010AccountCall.

        The SID that identifies the call that created this leg.

        :return: The parent_call_sid of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._parent_call_sid

    @parent_call_sid.setter
    def parent_call_sid(self, parent_call_sid):
        """Sets the parent_call_sid of this ApiV2010AccountCall.

        The SID that identifies the call that created this leg.

        :param parent_call_sid: The parent_call_sid of this ApiV2010AccountCall.
        :type parent_call_sid: str
        """
        if parent_call_sid is not None and len(parent_call_sid) > 34:
            raise ValueError("Invalid value for `parent_call_sid`, length must be less than or equal to `34`")
        if parent_call_sid is not None and len(parent_call_sid) < 34:
            raise ValueError("Invalid value for `parent_call_sid`, length must be greater than or equal to `34`")
        if parent_call_sid is not None and not re.search(r'^CA[0-9a-fA-F]{32}$', parent_call_sid):
            raise ValueError("Invalid value for `parent_call_sid`, must be a follow pattern or equal to `/^CA[0-9a-fA-F]{32}$/`")

        self._parent_call_sid = parent_call_sid

    @property
    def phone_number_sid(self):
        """Gets the phone_number_sid of this ApiV2010AccountCall.

        If the call was inbound, this is the SID of the IncomingPhoneNumber resource that received the call. If the call was outbound, it is the SID of the OutgoingCallerId resource from which the call was placed.

        :return: The phone_number_sid of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._phone_number_sid

    @phone_number_sid.setter
    def phone_number_sid(self, phone_number_sid):
        """Sets the phone_number_sid of this ApiV2010AccountCall.

        If the call was inbound, this is the SID of the IncomingPhoneNumber resource that received the call. If the call was outbound, it is the SID of the OutgoingCallerId resource from which the call was placed.

        :param phone_number_sid: The phone_number_sid of this ApiV2010AccountCall.
        :type phone_number_sid: str
        """
        if phone_number_sid is not None and len(phone_number_sid) > 34:
            raise ValueError("Invalid value for `phone_number_sid`, length must be less than or equal to `34`")
        if phone_number_sid is not None and len(phone_number_sid) < 34:
            raise ValueError("Invalid value for `phone_number_sid`, length must be greater than or equal to `34`")
        if phone_number_sid is not None and not re.search(r'^PN[0-9a-fA-F]{32}$', phone_number_sid):
            raise ValueError("Invalid value for `phone_number_sid`, must be a follow pattern or equal to `/^PN[0-9a-fA-F]{32}$/`")

        self._phone_number_sid = phone_number_sid

    @property
    def price(self):
        """Gets the price of this ApiV2010AccountCall.

        The charge for this call, in the currency associated with the account. Populated after the call is completed. May not be immediately available.

        :return: The price of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this ApiV2010AccountCall.

        The charge for this call, in the currency associated with the account. Populated after the call is completed. May not be immediately available.

        :param price: The price of this ApiV2010AccountCall.
        :type price: str
        """

        self._price = price

    @property
    def price_unit(self):
        """Gets the price_unit of this ApiV2010AccountCall.

        The currency in which `Price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g., `USD`, `EUR`, `JPY`). Always capitalized for calls.

        :return: The price_unit of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._price_unit

    @price_unit.setter
    def price_unit(self, price_unit):
        """Sets the price_unit of this ApiV2010AccountCall.

        The currency in which `Price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g., `USD`, `EUR`, `JPY`). Always capitalized for calls.

        :param price_unit: The price_unit of this ApiV2010AccountCall.
        :type price_unit: str
        """

        self._price_unit = price_unit

    @property
    def queue_time(self):
        """Gets the queue_time of this ApiV2010AccountCall.

        The wait time in milliseconds before the call is placed.

        :return: The queue_time of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._queue_time

    @queue_time.setter
    def queue_time(self, queue_time):
        """Sets the queue_time of this ApiV2010AccountCall.

        The wait time in milliseconds before the call is placed.

        :param queue_time: The queue_time of this ApiV2010AccountCall.
        :type queue_time: str
        """

        self._queue_time = queue_time

    @property
    def sid(self):
        """Gets the sid of this ApiV2010AccountCall.

        The unique string that we created to identify this Call resource.

        :return: The sid of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ApiV2010AccountCall.

        The unique string that we created to identify this Call resource.

        :param sid: The sid of this ApiV2010AccountCall.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^CA[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^CA[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def start_time(self):
        """Gets the start_time of this ApiV2010AccountCall.

        The start time of the call, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format. Empty if the call has not yet been dialed.

        :return: The start_time of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ApiV2010AccountCall.

        The start time of the call, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format. Empty if the call has not yet been dialed.

        :param start_time: The start_time of this ApiV2010AccountCall.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def status(self):
        """Gets the status of this ApiV2010AccountCall.


        :return: The status of this ApiV2010AccountCall.
        :rtype: CallEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApiV2010AccountCall.


        :param status: The status of this ApiV2010AccountCall.
        :type status: CallEnumStatus
        """

        self._status = status

    @property
    def subresource_uris(self):
        """Gets the subresource_uris of this ApiV2010AccountCall.

        A list of subresources available to this call, identified by their URIs relative to `https://api.twilio.com`.

        :return: The subresource_uris of this ApiV2010AccountCall.
        :rtype: object
        """
        return self._subresource_uris

    @subresource_uris.setter
    def subresource_uris(self, subresource_uris):
        """Sets the subresource_uris of this ApiV2010AccountCall.

        A list of subresources available to this call, identified by their URIs relative to `https://api.twilio.com`.

        :param subresource_uris: The subresource_uris of this ApiV2010AccountCall.
        :type subresource_uris: object
        """

        self._subresource_uris = subresource_uris

    @property
    def to(self):
        """Gets the to of this ApiV2010AccountCall.

        The phone number, SIP address, Client identifier or SIM SID that received this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`. SIM SIDs are formatted as `sim:sid`.

        :return: The to of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this ApiV2010AccountCall.

        The phone number, SIP address, Client identifier or SIM SID that received this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`. SIM SIDs are formatted as `sim:sid`.

        :param to: The to of this ApiV2010AccountCall.
        :type to: str
        """

        self._to = to

    @property
    def to_formatted(self):
        """Gets the to_formatted of this ApiV2010AccountCall.

        The phone number, SIP address or Client identifier that received this call. Formatted for display. Non-North American phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +442071838750).

        :return: The to_formatted of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._to_formatted

    @to_formatted.setter
    def to_formatted(self, to_formatted):
        """Sets the to_formatted of this ApiV2010AccountCall.

        The phone number, SIP address or Client identifier that received this call. Formatted for display. Non-North American phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +442071838750).

        :param to_formatted: The to_formatted of this ApiV2010AccountCall.
        :type to_formatted: str
        """

        self._to_formatted = to_formatted

    @property
    def trunk_sid(self):
        """Gets the trunk_sid of this ApiV2010AccountCall.

        The unique identifier of the trunk resource that was used for this call. The field is empty if the call was not made using a SIP trunk or if the call is not terminated.

        :return: The trunk_sid of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._trunk_sid

    @trunk_sid.setter
    def trunk_sid(self, trunk_sid):
        """Sets the trunk_sid of this ApiV2010AccountCall.

        The unique identifier of the trunk resource that was used for this call. The field is empty if the call was not made using a SIP trunk or if the call is not terminated.

        :param trunk_sid: The trunk_sid of this ApiV2010AccountCall.
        :type trunk_sid: str
        """
        if trunk_sid is not None and len(trunk_sid) > 34:
            raise ValueError("Invalid value for `trunk_sid`, length must be less than or equal to `34`")
        if trunk_sid is not None and len(trunk_sid) < 34:
            raise ValueError("Invalid value for `trunk_sid`, length must be greater than or equal to `34`")
        if trunk_sid is not None and not re.search(r'^TK[0-9a-fA-F]{32}$', trunk_sid):
            raise ValueError("Invalid value for `trunk_sid`, must be a follow pattern or equal to `/^TK[0-9a-fA-F]{32}$/`")

        self._trunk_sid = trunk_sid

    @property
    def uri(self):
        """Gets the uri of this ApiV2010AccountCall.

        The URI of this resource, relative to `https://api.twilio.com`.

        :return: The uri of this ApiV2010AccountCall.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ApiV2010AccountCall.

        The URI of this resource, relative to `https://api.twilio.com`.

        :param uri: The uri of this ApiV2010AccountCall.
        :type uri: str
        """

        self._uri = uri
