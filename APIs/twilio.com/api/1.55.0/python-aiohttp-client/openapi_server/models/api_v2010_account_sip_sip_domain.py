# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ApiV2010AccountSipSipDomain(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, api_version: str=None, auth_type: str=None, byoc_trunk_sid: str=None, date_created: str=None, date_updated: str=None, domain_name: str=None, emergency_caller_sid: str=None, emergency_calling_enabled: bool=None, friendly_name: str=None, secure: bool=None, sid: str=None, sip_registration: bool=None, subresource_uris: object=None, uri: str=None, voice_fallback_method: str=None, voice_fallback_url: str=None, voice_method: str=None, voice_status_callback_method: str=None, voice_status_callback_url: str=None, voice_url: str=None):
        """ApiV2010AccountSipSipDomain - a model defined in OpenAPI

        :param account_sid: The account_sid of this ApiV2010AccountSipSipDomain.
        :param api_version: The api_version of this ApiV2010AccountSipSipDomain.
        :param auth_type: The auth_type of this ApiV2010AccountSipSipDomain.
        :param byoc_trunk_sid: The byoc_trunk_sid of this ApiV2010AccountSipSipDomain.
        :param date_created: The date_created of this ApiV2010AccountSipSipDomain.
        :param date_updated: The date_updated of this ApiV2010AccountSipSipDomain.
        :param domain_name: The domain_name of this ApiV2010AccountSipSipDomain.
        :param emergency_caller_sid: The emergency_caller_sid of this ApiV2010AccountSipSipDomain.
        :param emergency_calling_enabled: The emergency_calling_enabled of this ApiV2010AccountSipSipDomain.
        :param friendly_name: The friendly_name of this ApiV2010AccountSipSipDomain.
        :param secure: The secure of this ApiV2010AccountSipSipDomain.
        :param sid: The sid of this ApiV2010AccountSipSipDomain.
        :param sip_registration: The sip_registration of this ApiV2010AccountSipSipDomain.
        :param subresource_uris: The subresource_uris of this ApiV2010AccountSipSipDomain.
        :param uri: The uri of this ApiV2010AccountSipSipDomain.
        :param voice_fallback_method: The voice_fallback_method of this ApiV2010AccountSipSipDomain.
        :param voice_fallback_url: The voice_fallback_url of this ApiV2010AccountSipSipDomain.
        :param voice_method: The voice_method of this ApiV2010AccountSipSipDomain.
        :param voice_status_callback_method: The voice_status_callback_method of this ApiV2010AccountSipSipDomain.
        :param voice_status_callback_url: The voice_status_callback_url of this ApiV2010AccountSipSipDomain.
        :param voice_url: The voice_url of this ApiV2010AccountSipSipDomain.
        """
        self.openapi_types = {
            'account_sid': str,
            'api_version': str,
            'auth_type': str,
            'byoc_trunk_sid': str,
            'date_created': str,
            'date_updated': str,
            'domain_name': str,
            'emergency_caller_sid': str,
            'emergency_calling_enabled': bool,
            'friendly_name': str,
            'secure': bool,
            'sid': str,
            'sip_registration': bool,
            'subresource_uris': object,
            'uri': str,
            'voice_fallback_method': str,
            'voice_fallback_url': str,
            'voice_method': str,
            'voice_status_callback_method': str,
            'voice_status_callback_url': str,
            'voice_url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'api_version': 'api_version',
            'auth_type': 'auth_type',
            'byoc_trunk_sid': 'byoc_trunk_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'domain_name': 'domain_name',
            'emergency_caller_sid': 'emergency_caller_sid',
            'emergency_calling_enabled': 'emergency_calling_enabled',
            'friendly_name': 'friendly_name',
            'secure': 'secure',
            'sid': 'sid',
            'sip_registration': 'sip_registration',
            'subresource_uris': 'subresource_uris',
            'uri': 'uri',
            'voice_fallback_method': 'voice_fallback_method',
            'voice_fallback_url': 'voice_fallback_url',
            'voice_method': 'voice_method',
            'voice_status_callback_method': 'voice_status_callback_method',
            'voice_status_callback_url': 'voice_status_callback_url',
            'voice_url': 'voice_url'
        }

        self._account_sid = account_sid
        self._api_version = api_version
        self._auth_type = auth_type
        self._byoc_trunk_sid = byoc_trunk_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._domain_name = domain_name
        self._emergency_caller_sid = emergency_caller_sid
        self._emergency_calling_enabled = emergency_calling_enabled
        self._friendly_name = friendly_name
        self._secure = secure
        self._sid = sid
        self._sip_registration = sip_registration
        self._subresource_uris = subresource_uris
        self._uri = uri
        self._voice_fallback_method = voice_fallback_method
        self._voice_fallback_url = voice_fallback_url
        self._voice_method = voice_method
        self._voice_status_callback_method = voice_status_callback_method
        self._voice_status_callback_url = voice_status_callback_url
        self._voice_url = voice_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2010AccountSipSipDomain':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api.v2010.account.sip.sip_domain of this ApiV2010AccountSipSipDomain.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ApiV2010AccountSipSipDomain.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource.

        :return: The account_sid of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ApiV2010AccountSipSipDomain.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource.

        :param account_sid: The account_sid of this ApiV2010AccountSipSipDomain.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def api_version(self):
        """Gets the api_version of this ApiV2010AccountSipSipDomain.

        The API version used to process the call.

        :return: The api_version of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this ApiV2010AccountSipSipDomain.

        The API version used to process the call.

        :param api_version: The api_version of this ApiV2010AccountSipSipDomain.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def auth_type(self):
        """Gets the auth_type of this ApiV2010AccountSipSipDomain.

        The types of authentication you have mapped to your domain. Can be: `IP_ACL` and `CREDENTIAL_LIST`. If you have both defined for your domain, both will be returned in a comma delimited string. If `auth_type` is not defined, the domain will not be able to receive any traffic.

        :return: The auth_type of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._auth_type

    @auth_type.setter
    def auth_type(self, auth_type):
        """Sets the auth_type of this ApiV2010AccountSipSipDomain.

        The types of authentication you have mapped to your domain. Can be: `IP_ACL` and `CREDENTIAL_LIST`. If you have both defined for your domain, both will be returned in a comma delimited string. If `auth_type` is not defined, the domain will not be able to receive any traffic.

        :param auth_type: The auth_type of this ApiV2010AccountSipSipDomain.
        :type auth_type: str
        """

        self._auth_type = auth_type

    @property
    def byoc_trunk_sid(self):
        """Gets the byoc_trunk_sid of this ApiV2010AccountSipSipDomain.

        The SID of the BYOC Trunk(Bring Your Own Carrier) resource that the Sip Domain will be associated with.

        :return: The byoc_trunk_sid of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._byoc_trunk_sid

    @byoc_trunk_sid.setter
    def byoc_trunk_sid(self, byoc_trunk_sid):
        """Sets the byoc_trunk_sid of this ApiV2010AccountSipSipDomain.

        The SID of the BYOC Trunk(Bring Your Own Carrier) resource that the Sip Domain will be associated with.

        :param byoc_trunk_sid: The byoc_trunk_sid of this ApiV2010AccountSipSipDomain.
        :type byoc_trunk_sid: str
        """
        if byoc_trunk_sid is not None and len(byoc_trunk_sid) > 34:
            raise ValueError("Invalid value for `byoc_trunk_sid`, length must be less than or equal to `34`")
        if byoc_trunk_sid is not None and len(byoc_trunk_sid) < 34:
            raise ValueError("Invalid value for `byoc_trunk_sid`, length must be greater than or equal to `34`")
        if byoc_trunk_sid is not None and not re.search(r'^BY[0-9a-fA-F]{32}$', byoc_trunk_sid):
            raise ValueError("Invalid value for `byoc_trunk_sid`, must be a follow pattern or equal to `/^BY[0-9a-fA-F]{32}$/`")

        self._byoc_trunk_sid = byoc_trunk_sid

    @property
    def date_created(self):
        """Gets the date_created of this ApiV2010AccountSipSipDomain.

        The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ApiV2010AccountSipSipDomain.

        The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this ApiV2010AccountSipSipDomain.
        :type date_created: str
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ApiV2010AccountSipSipDomain.

        The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ApiV2010AccountSipSipDomain.

        The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this ApiV2010AccountSipSipDomain.
        :type date_updated: str
        """

        self._date_updated = date_updated

    @property
    def domain_name(self):
        """Gets the domain_name of this ApiV2010AccountSipSipDomain.

        The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and \"-\" and must end with `sip.twilio.com`.

        :return: The domain_name of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this ApiV2010AccountSipSipDomain.

        The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and \"-\" and must end with `sip.twilio.com`.

        :param domain_name: The domain_name of this ApiV2010AccountSipSipDomain.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def emergency_caller_sid(self):
        """Gets the emergency_caller_sid of this ApiV2010AccountSipSipDomain.

        Whether an emergency caller sid is configured for the domain. If present, this phone number will be used as the callback for the emergency call.

        :return: The emergency_caller_sid of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._emergency_caller_sid

    @emergency_caller_sid.setter
    def emergency_caller_sid(self, emergency_caller_sid):
        """Sets the emergency_caller_sid of this ApiV2010AccountSipSipDomain.

        Whether an emergency caller sid is configured for the domain. If present, this phone number will be used as the callback for the emergency call.

        :param emergency_caller_sid: The emergency_caller_sid of this ApiV2010AccountSipSipDomain.
        :type emergency_caller_sid: str
        """
        if emergency_caller_sid is not None and len(emergency_caller_sid) > 34:
            raise ValueError("Invalid value for `emergency_caller_sid`, length must be less than or equal to `34`")
        if emergency_caller_sid is not None and len(emergency_caller_sid) < 34:
            raise ValueError("Invalid value for `emergency_caller_sid`, length must be greater than or equal to `34`")
        if emergency_caller_sid is not None and not re.search(r'^PN[0-9a-fA-F]{32}$', emergency_caller_sid):
            raise ValueError("Invalid value for `emergency_caller_sid`, must be a follow pattern or equal to `/^PN[0-9a-fA-F]{32}$/`")

        self._emergency_caller_sid = emergency_caller_sid

    @property
    def emergency_calling_enabled(self):
        """Gets the emergency_calling_enabled of this ApiV2010AccountSipSipDomain.

        Whether emergency calling is enabled for the domain. If enabled, allows emergency calls on the domain from phone numbers with validated addresses.

        :return: The emergency_calling_enabled of this ApiV2010AccountSipSipDomain.
        :rtype: bool
        """
        return self._emergency_calling_enabled

    @emergency_calling_enabled.setter
    def emergency_calling_enabled(self, emergency_calling_enabled):
        """Sets the emergency_calling_enabled of this ApiV2010AccountSipSipDomain.

        Whether emergency calling is enabled for the domain. If enabled, allows emergency calls on the domain from phone numbers with validated addresses.

        :param emergency_calling_enabled: The emergency_calling_enabled of this ApiV2010AccountSipSipDomain.
        :type emergency_calling_enabled: bool
        """

        self._emergency_calling_enabled = emergency_calling_enabled

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ApiV2010AccountSipSipDomain.

        The string that you assigned to describe the resource.

        :return: The friendly_name of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ApiV2010AccountSipSipDomain.

        The string that you assigned to describe the resource.

        :param friendly_name: The friendly_name of this ApiV2010AccountSipSipDomain.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def secure(self):
        """Gets the secure of this ApiV2010AccountSipSipDomain.

        Whether secure SIP is enabled for the domain. If enabled, TLS will be enforced and SRTP will be negotiated on all incoming calls to this sip domain.

        :return: The secure of this ApiV2010AccountSipSipDomain.
        :rtype: bool
        """
        return self._secure

    @secure.setter
    def secure(self, secure):
        """Sets the secure of this ApiV2010AccountSipSipDomain.

        Whether secure SIP is enabled for the domain. If enabled, TLS will be enforced and SRTP will be negotiated on all incoming calls to this sip domain.

        :param secure: The secure of this ApiV2010AccountSipSipDomain.
        :type secure: bool
        """

        self._secure = secure

    @property
    def sid(self):
        """Gets the sid of this ApiV2010AccountSipSipDomain.

        The unique string that that we created to identify the SipDomain resource.

        :return: The sid of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ApiV2010AccountSipSipDomain.

        The unique string that that we created to identify the SipDomain resource.

        :param sid: The sid of this ApiV2010AccountSipSipDomain.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^SD[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^SD[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def sip_registration(self):
        """Gets the sip_registration of this ApiV2010AccountSipSipDomain.

        Whether to allow SIP Endpoints to register with the domain to receive calls.

        :return: The sip_registration of this ApiV2010AccountSipSipDomain.
        :rtype: bool
        """
        return self._sip_registration

    @sip_registration.setter
    def sip_registration(self, sip_registration):
        """Sets the sip_registration of this ApiV2010AccountSipSipDomain.

        Whether to allow SIP Endpoints to register with the domain to receive calls.

        :param sip_registration: The sip_registration of this ApiV2010AccountSipSipDomain.
        :type sip_registration: bool
        """

        self._sip_registration = sip_registration

    @property
    def subresource_uris(self):
        """Gets the subresource_uris of this ApiV2010AccountSipSipDomain.

        A list of mapping resources associated with the SIP Domain resource identified by their relative URIs.

        :return: The subresource_uris of this ApiV2010AccountSipSipDomain.
        :rtype: object
        """
        return self._subresource_uris

    @subresource_uris.setter
    def subresource_uris(self, subresource_uris):
        """Sets the subresource_uris of this ApiV2010AccountSipSipDomain.

        A list of mapping resources associated with the SIP Domain resource identified by their relative URIs.

        :param subresource_uris: The subresource_uris of this ApiV2010AccountSipSipDomain.
        :type subresource_uris: object
        """

        self._subresource_uris = subresource_uris

    @property
    def uri(self):
        """Gets the uri of this ApiV2010AccountSipSipDomain.

        The URI of the resource, relative to `https://api.twilio.com`.

        :return: The uri of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ApiV2010AccountSipSipDomain.

        The URI of the resource, relative to `https://api.twilio.com`.

        :param uri: The uri of this ApiV2010AccountSipSipDomain.
        :type uri: str
        """

        self._uri = uri

    @property
    def voice_fallback_method(self):
        """Gets the voice_fallback_method of this ApiV2010AccountSipSipDomain.

        The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.

        :return: The voice_fallback_method of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._voice_fallback_method

    @voice_fallback_method.setter
    def voice_fallback_method(self, voice_fallback_method):
        """Sets the voice_fallback_method of this ApiV2010AccountSipSipDomain.

        The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.

        :param voice_fallback_method: The voice_fallback_method of this ApiV2010AccountSipSipDomain.
        :type voice_fallback_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if voice_fallback_method not in allowed_values:
            raise ValueError(
                "Invalid value for `voice_fallback_method` ({0}), must be one of {1}"
                .format(voice_fallback_method, allowed_values)
            )

        self._voice_fallback_method = voice_fallback_method

    @property
    def voice_fallback_url(self):
        """Gets the voice_fallback_url of this ApiV2010AccountSipSipDomain.

        The URL that we call when an error occurs while retrieving or executing the TwiML requested from `voice_url`.

        :return: The voice_fallback_url of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._voice_fallback_url

    @voice_fallback_url.setter
    def voice_fallback_url(self, voice_fallback_url):
        """Sets the voice_fallback_url of this ApiV2010AccountSipSipDomain.

        The URL that we call when an error occurs while retrieving or executing the TwiML requested from `voice_url`.

        :param voice_fallback_url: The voice_fallback_url of this ApiV2010AccountSipSipDomain.
        :type voice_fallback_url: str
        """

        self._voice_fallback_url = voice_fallback_url

    @property
    def voice_method(self):
        """Gets the voice_method of this ApiV2010AccountSipSipDomain.

        The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.

        :return: The voice_method of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._voice_method

    @voice_method.setter
    def voice_method(self, voice_method):
        """Sets the voice_method of this ApiV2010AccountSipSipDomain.

        The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.

        :param voice_method: The voice_method of this ApiV2010AccountSipSipDomain.
        :type voice_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if voice_method not in allowed_values:
            raise ValueError(
                "Invalid value for `voice_method` ({0}), must be one of {1}"
                .format(voice_method, allowed_values)
            )

        self._voice_method = voice_method

    @property
    def voice_status_callback_method(self):
        """Gets the voice_status_callback_method of this ApiV2010AccountSipSipDomain.

        The HTTP method we use to call `voice_status_callback_url`. Either `GET` or `POST`.

        :return: The voice_status_callback_method of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._voice_status_callback_method

    @voice_status_callback_method.setter
    def voice_status_callback_method(self, voice_status_callback_method):
        """Sets the voice_status_callback_method of this ApiV2010AccountSipSipDomain.

        The HTTP method we use to call `voice_status_callback_url`. Either `GET` or `POST`.

        :param voice_status_callback_method: The voice_status_callback_method of this ApiV2010AccountSipSipDomain.
        :type voice_status_callback_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if voice_status_callback_method not in allowed_values:
            raise ValueError(
                "Invalid value for `voice_status_callback_method` ({0}), must be one of {1}"
                .format(voice_status_callback_method, allowed_values)
            )

        self._voice_status_callback_method = voice_status_callback_method

    @property
    def voice_status_callback_url(self):
        """Gets the voice_status_callback_url of this ApiV2010AccountSipSipDomain.

        The URL that we call to pass status parameters (such as call ended) to your application.

        :return: The voice_status_callback_url of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._voice_status_callback_url

    @voice_status_callback_url.setter
    def voice_status_callback_url(self, voice_status_callback_url):
        """Sets the voice_status_callback_url of this ApiV2010AccountSipSipDomain.

        The URL that we call to pass status parameters (such as call ended) to your application.

        :param voice_status_callback_url: The voice_status_callback_url of this ApiV2010AccountSipSipDomain.
        :type voice_status_callback_url: str
        """

        self._voice_status_callback_url = voice_status_callback_url

    @property
    def voice_url(self):
        """Gets the voice_url of this ApiV2010AccountSipSipDomain.

        The URL we call using the `voice_method` when the domain receives a call.

        :return: The voice_url of this ApiV2010AccountSipSipDomain.
        :rtype: str
        """
        return self._voice_url

    @voice_url.setter
    def voice_url(self, voice_url):
        """Sets the voice_url of this ApiV2010AccountSipSipDomain.

        The URL we call using the `voice_method` when the domain receives a call.

        :param voice_url: The voice_url of this ApiV2010AccountSipSipDomain.
        :type voice_url: str
        """

        self._voice_url = voice_url
