# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message_enum_direction import MessageEnumDirection
from openapi_server.models.message_enum_status import MessageEnumStatus
import re
from openapi_server import util


class ApiV2010AccountMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, api_version: str=None, body: str=None, date_created: str=None, date_sent: str=None, date_updated: str=None, direction: MessageEnumDirection=None, error_code: int=None, error_message: str=None, _from: str=None, messaging_service_sid: str=None, num_media: str=None, num_segments: str=None, price: str=None, price_unit: str=None, sid: str=None, status: MessageEnumStatus=None, subresource_uris: object=None, to: str=None, uri: str=None):
        """ApiV2010AccountMessage - a model defined in OpenAPI

        :param account_sid: The account_sid of this ApiV2010AccountMessage.
        :param api_version: The api_version of this ApiV2010AccountMessage.
        :param body: The body of this ApiV2010AccountMessage.
        :param date_created: The date_created of this ApiV2010AccountMessage.
        :param date_sent: The date_sent of this ApiV2010AccountMessage.
        :param date_updated: The date_updated of this ApiV2010AccountMessage.
        :param direction: The direction of this ApiV2010AccountMessage.
        :param error_code: The error_code of this ApiV2010AccountMessage.
        :param error_message: The error_message of this ApiV2010AccountMessage.
        :param _from: The _from of this ApiV2010AccountMessage.
        :param messaging_service_sid: The messaging_service_sid of this ApiV2010AccountMessage.
        :param num_media: The num_media of this ApiV2010AccountMessage.
        :param num_segments: The num_segments of this ApiV2010AccountMessage.
        :param price: The price of this ApiV2010AccountMessage.
        :param price_unit: The price_unit of this ApiV2010AccountMessage.
        :param sid: The sid of this ApiV2010AccountMessage.
        :param status: The status of this ApiV2010AccountMessage.
        :param subresource_uris: The subresource_uris of this ApiV2010AccountMessage.
        :param to: The to of this ApiV2010AccountMessage.
        :param uri: The uri of this ApiV2010AccountMessage.
        """
        self.openapi_types = {
            'account_sid': str,
            'api_version': str,
            'body': str,
            'date_created': str,
            'date_sent': str,
            'date_updated': str,
            'direction': MessageEnumDirection,
            'error_code': int,
            'error_message': str,
            '_from': str,
            'messaging_service_sid': str,
            'num_media': str,
            'num_segments': str,
            'price': str,
            'price_unit': str,
            'sid': str,
            'status': MessageEnumStatus,
            'subresource_uris': object,
            'to': str,
            'uri': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'api_version': 'api_version',
            'body': 'body',
            'date_created': 'date_created',
            'date_sent': 'date_sent',
            'date_updated': 'date_updated',
            'direction': 'direction',
            'error_code': 'error_code',
            'error_message': 'error_message',
            '_from': 'from',
            'messaging_service_sid': 'messaging_service_sid',
            'num_media': 'num_media',
            'num_segments': 'num_segments',
            'price': 'price',
            'price_unit': 'price_unit',
            'sid': 'sid',
            'status': 'status',
            'subresource_uris': 'subresource_uris',
            'to': 'to',
            'uri': 'uri'
        }

        self._account_sid = account_sid
        self._api_version = api_version
        self._body = body
        self._date_created = date_created
        self._date_sent = date_sent
        self._date_updated = date_updated
        self._direction = direction
        self._error_code = error_code
        self._error_message = error_message
        self.__from = _from
        self._messaging_service_sid = messaging_service_sid
        self._num_media = num_media
        self._num_segments = num_segments
        self._price = price
        self._price_unit = price_unit
        self._sid = sid
        self._status = status
        self._subresource_uris = subresource_uris
        self._to = to
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2010AccountMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api.v2010.account.message of this ApiV2010AccountMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ApiV2010AccountMessage.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource

        :return: The account_sid of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ApiV2010AccountMessage.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource

        :param account_sid: The account_sid of this ApiV2010AccountMessage.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def api_version(self):
        """Gets the api_version of this ApiV2010AccountMessage.

        The API version used to process the Message

        :return: The api_version of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this ApiV2010AccountMessage.

        The API version used to process the Message

        :param api_version: The api_version of this ApiV2010AccountMessage.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def body(self):
        """Gets the body of this ApiV2010AccountMessage.

        The text content of the message

        :return: The body of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this ApiV2010AccountMessage.

        The text content of the message

        :param body: The body of this ApiV2010AccountMessage.
        :type body: str
        """

        self._body = body

    @property
    def date_created(self):
        """Gets the date_created of this ApiV2010AccountMessage.

        The [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822#section-3.3) timestamp (in GMT) of when the Message resource was created

        :return: The date_created of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ApiV2010AccountMessage.

        The [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822#section-3.3) timestamp (in GMT) of when the Message resource was created

        :param date_created: The date_created of this ApiV2010AccountMessage.
        :type date_created: str
        """

        self._date_created = date_created

    @property
    def date_sent(self):
        """Gets the date_sent of this ApiV2010AccountMessage.

        The [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822#section-3.3) timestamp (in GMT) of when the Message was sent. For an outgoing message, this is when Twilio sent the message. For an incoming message, this is when Twilio sent the HTTP request to your incoming message webhook URL.

        :return: The date_sent of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._date_sent

    @date_sent.setter
    def date_sent(self, date_sent):
        """Sets the date_sent of this ApiV2010AccountMessage.

        The [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822#section-3.3) timestamp (in GMT) of when the Message was sent. For an outgoing message, this is when Twilio sent the message. For an incoming message, this is when Twilio sent the HTTP request to your incoming message webhook URL.

        :param date_sent: The date_sent of this ApiV2010AccountMessage.
        :type date_sent: str
        """

        self._date_sent = date_sent

    @property
    def date_updated(self):
        """Gets the date_updated of this ApiV2010AccountMessage.

        The [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822#section-3.3) timestamp (in GMT) of when the Message resource was last updated

        :return: The date_updated of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ApiV2010AccountMessage.

        The [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822#section-3.3) timestamp (in GMT) of when the Message resource was last updated

        :param date_updated: The date_updated of this ApiV2010AccountMessage.
        :type date_updated: str
        """

        self._date_updated = date_updated

    @property
    def direction(self):
        """Gets the direction of this ApiV2010AccountMessage.


        :return: The direction of this ApiV2010AccountMessage.
        :rtype: MessageEnumDirection
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this ApiV2010AccountMessage.


        :param direction: The direction of this ApiV2010AccountMessage.
        :type direction: MessageEnumDirection
        """

        self._direction = direction

    @property
    def error_code(self):
        """Gets the error_code of this ApiV2010AccountMessage.

        The [error code](https://www.twilio.com/docs/api/errors) returned if the Message `status` is `failed` or `undelivered`. If no error was encountered, the value is `null`.

        :return: The error_code of this ApiV2010AccountMessage.
        :rtype: int
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this ApiV2010AccountMessage.

        The [error code](https://www.twilio.com/docs/api/errors) returned if the Message `status` is `failed` or `undelivered`. If no error was encountered, the value is `null`.

        :param error_code: The error_code of this ApiV2010AccountMessage.
        :type error_code: int
        """

        self._error_code = error_code

    @property
    def error_message(self):
        """Gets the error_message of this ApiV2010AccountMessage.

        The description of the `error_code` if the Message `status` is `failed` or `undelivered`. If no error was encountered, the value is `null`.

        :return: The error_message of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this ApiV2010AccountMessage.

        The description of the `error_code` if the Message `status` is `failed` or `undelivered`. If no error was encountered, the value is `null`.

        :param error_message: The error_message of this ApiV2010AccountMessage.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def _from(self):
        """Gets the _from of this ApiV2010AccountMessage.

        The sender's phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format), [alphanumeric sender ID](https://www.twilio.com/docs/sms/quickstart), [Wireless SIM](https://www.twilio.com/docs/iot/wireless/programmable-wireless-send-machine-machine-sms-commands), [short code](https://www.twilio.com/en-us/messaging/channels/sms/short-codes), or  [channel address](https://www.twilio.com/docs/messaging/channels) (e.g., `whatsapp:+15554449999`). For incoming messages, this is the number or channel address of the sender. For outgoing messages, this value is a Twilio phone number, alphanumeric sender ID, short code, or channel address from which the message is sent.

        :return: The _from of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this ApiV2010AccountMessage.

        The sender's phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format), [alphanumeric sender ID](https://www.twilio.com/docs/sms/quickstart), [Wireless SIM](https://www.twilio.com/docs/iot/wireless/programmable-wireless-send-machine-machine-sms-commands), [short code](https://www.twilio.com/en-us/messaging/channels/sms/short-codes), or  [channel address](https://www.twilio.com/docs/messaging/channels) (e.g., `whatsapp:+15554449999`). For incoming messages, this is the number or channel address of the sender. For outgoing messages, this value is a Twilio phone number, alphanumeric sender ID, short code, or channel address from which the message is sent.

        :param _from: The _from of this ApiV2010AccountMessage.
        :type _from: str
        """

        self.__from = _from

    @property
    def messaging_service_sid(self):
        """Gets the messaging_service_sid of this ApiV2010AccountMessage.

        The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) associated with the Message resource. The value is `null` if a Messaging Service was not used.

        :return: The messaging_service_sid of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._messaging_service_sid

    @messaging_service_sid.setter
    def messaging_service_sid(self, messaging_service_sid):
        """Sets the messaging_service_sid of this ApiV2010AccountMessage.

        The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) associated with the Message resource. The value is `null` if a Messaging Service was not used.

        :param messaging_service_sid: The messaging_service_sid of this ApiV2010AccountMessage.
        :type messaging_service_sid: str
        """
        if messaging_service_sid is not None and len(messaging_service_sid) > 34:
            raise ValueError("Invalid value for `messaging_service_sid`, length must be less than or equal to `34`")
        if messaging_service_sid is not None and len(messaging_service_sid) < 34:
            raise ValueError("Invalid value for `messaging_service_sid`, length must be greater than or equal to `34`")
        if messaging_service_sid is not None and not re.search(r'^MG[0-9a-fA-F]{32}$', messaging_service_sid):
            raise ValueError("Invalid value for `messaging_service_sid`, must be a follow pattern or equal to `/^MG[0-9a-fA-F]{32}$/`")

        self._messaging_service_sid = messaging_service_sid

    @property
    def num_media(self):
        """Gets the num_media of this ApiV2010AccountMessage.

        The number of media files associated with the Message resource.

        :return: The num_media of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._num_media

    @num_media.setter
    def num_media(self, num_media):
        """Sets the num_media of this ApiV2010AccountMessage.

        The number of media files associated with the Message resource.

        :param num_media: The num_media of this ApiV2010AccountMessage.
        :type num_media: str
        """

        self._num_media = num_media

    @property
    def num_segments(self):
        """Gets the num_segments of this ApiV2010AccountMessage.

        The number of segments that make up the complete message. SMS message bodies that exceed the [character limit](https://www.twilio.com/docs/glossary/what-sms-character-limit) are segmented and charged as multiple messages. Note: For messages sent via a Messaging Service, `num_segments` is initially `0`, since a sender hasn't yet been assigned.

        :return: The num_segments of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._num_segments

    @num_segments.setter
    def num_segments(self, num_segments):
        """Sets the num_segments of this ApiV2010AccountMessage.

        The number of segments that make up the complete message. SMS message bodies that exceed the [character limit](https://www.twilio.com/docs/glossary/what-sms-character-limit) are segmented and charged as multiple messages. Note: For messages sent via a Messaging Service, `num_segments` is initially `0`, since a sender hasn't yet been assigned.

        :param num_segments: The num_segments of this ApiV2010AccountMessage.
        :type num_segments: str
        """

        self._num_segments = num_segments

    @property
    def price(self):
        """Gets the price of this ApiV2010AccountMessage.

        The amount billed for the message in the currency specified by `price_unit`. The `price` is populated after the message has been sent/received, and may not be immediately availalble. View the [Pricing page](https://www.twilio.com/en-us/pricing) for more details.

        :return: The price of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this ApiV2010AccountMessage.

        The amount billed for the message in the currency specified by `price_unit`. The `price` is populated after the message has been sent/received, and may not be immediately availalble. View the [Pricing page](https://www.twilio.com/en-us/pricing) for more details.

        :param price: The price of this ApiV2010AccountMessage.
        :type price: str
        """

        self._price = price

    @property
    def price_unit(self):
        """Gets the price_unit of this ApiV2010AccountMessage.

        The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).

        :return: The price_unit of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._price_unit

    @price_unit.setter
    def price_unit(self, price_unit):
        """Sets the price_unit of this ApiV2010AccountMessage.

        The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).

        :param price_unit: The price_unit of this ApiV2010AccountMessage.
        :type price_unit: str
        """

        self._price_unit = price_unit

    @property
    def sid(self):
        """Gets the sid of this ApiV2010AccountMessage.

        The unique, Twilio-provided string that identifies the Message resource.

        :return: The sid of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ApiV2010AccountMessage.

        The unique, Twilio-provided string that identifies the Message resource.

        :param sid: The sid of this ApiV2010AccountMessage.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^(SM|MM)[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^(SM|MM)[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def status(self):
        """Gets the status of this ApiV2010AccountMessage.


        :return: The status of this ApiV2010AccountMessage.
        :rtype: MessageEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApiV2010AccountMessage.


        :param status: The status of this ApiV2010AccountMessage.
        :type status: MessageEnumStatus
        """

        self._status = status

    @property
    def subresource_uris(self):
        """Gets the subresource_uris of this ApiV2010AccountMessage.

        A list of related resources identified by their URIs relative to `https://api.twilio.com`

        :return: The subresource_uris of this ApiV2010AccountMessage.
        :rtype: object
        """
        return self._subresource_uris

    @subresource_uris.setter
    def subresource_uris(self, subresource_uris):
        """Sets the subresource_uris of this ApiV2010AccountMessage.

        A list of related resources identified by their URIs relative to `https://api.twilio.com`

        :param subresource_uris: The subresource_uris of this ApiV2010AccountMessage.
        :type subresource_uris: object
        """

        self._subresource_uris = subresource_uris

    @property
    def to(self):
        """Gets the to of this ApiV2010AccountMessage.

        The recipient's phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format) or [channel address](https://www.twilio.com/docs/messaging/channels) (e.g. `whatsapp:+15552229999`)

        :return: The to of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this ApiV2010AccountMessage.

        The recipient's phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format) or [channel address](https://www.twilio.com/docs/messaging/channels) (e.g. `whatsapp:+15552229999`)

        :param to: The to of this ApiV2010AccountMessage.
        :type to: str
        """

        self._to = to

    @property
    def uri(self):
        """Gets the uri of this ApiV2010AccountMessage.

        The URI of the Message resource, relative to `https://api.twilio.com`.

        :return: The uri of this ApiV2010AccountMessage.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ApiV2010AccountMessage.

        The URI of the Message resource, relative to `https://api.twilio.com`.

        :param uri: The uri of this ApiV2010AccountMessage.
        :type uri: str
        """

        self._uri = uri
