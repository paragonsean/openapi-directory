# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connect_app_enum_permission import ConnectAppEnumPermission
import re
from openapi_server import util


class ApiV2010AccountConnectApp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, authorize_redirect_url: str=None, company_name: str=None, deauthorize_callback_method: str=None, deauthorize_callback_url: str=None, description: str=None, friendly_name: str=None, homepage_url: str=None, permissions: List[ConnectAppEnumPermission]=None, sid: str=None, uri: str=None):
        """ApiV2010AccountConnectApp - a model defined in OpenAPI

        :param account_sid: The account_sid of this ApiV2010AccountConnectApp.
        :param authorize_redirect_url: The authorize_redirect_url of this ApiV2010AccountConnectApp.
        :param company_name: The company_name of this ApiV2010AccountConnectApp.
        :param deauthorize_callback_method: The deauthorize_callback_method of this ApiV2010AccountConnectApp.
        :param deauthorize_callback_url: The deauthorize_callback_url of this ApiV2010AccountConnectApp.
        :param description: The description of this ApiV2010AccountConnectApp.
        :param friendly_name: The friendly_name of this ApiV2010AccountConnectApp.
        :param homepage_url: The homepage_url of this ApiV2010AccountConnectApp.
        :param permissions: The permissions of this ApiV2010AccountConnectApp.
        :param sid: The sid of this ApiV2010AccountConnectApp.
        :param uri: The uri of this ApiV2010AccountConnectApp.
        """
        self.openapi_types = {
            'account_sid': str,
            'authorize_redirect_url': str,
            'company_name': str,
            'deauthorize_callback_method': str,
            'deauthorize_callback_url': str,
            'description': str,
            'friendly_name': str,
            'homepage_url': str,
            'permissions': List[ConnectAppEnumPermission],
            'sid': str,
            'uri': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'authorize_redirect_url': 'authorize_redirect_url',
            'company_name': 'company_name',
            'deauthorize_callback_method': 'deauthorize_callback_method',
            'deauthorize_callback_url': 'deauthorize_callback_url',
            'description': 'description',
            'friendly_name': 'friendly_name',
            'homepage_url': 'homepage_url',
            'permissions': 'permissions',
            'sid': 'sid',
            'uri': 'uri'
        }

        self._account_sid = account_sid
        self._authorize_redirect_url = authorize_redirect_url
        self._company_name = company_name
        self._deauthorize_callback_method = deauthorize_callback_method
        self._deauthorize_callback_url = deauthorize_callback_url
        self._description = description
        self._friendly_name = friendly_name
        self._homepage_url = homepage_url
        self._permissions = permissions
        self._sid = sid
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2010AccountConnectApp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api.v2010.account.connect_app of this ApiV2010AccountConnectApp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ApiV2010AccountConnectApp.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resource.

        :return: The account_sid of this ApiV2010AccountConnectApp.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ApiV2010AccountConnectApp.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resource.

        :param account_sid: The account_sid of this ApiV2010AccountConnectApp.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def authorize_redirect_url(self):
        """Gets the authorize_redirect_url of this ApiV2010AccountConnectApp.

        The URL we redirect the user to after we authenticate the user and obtain authorization to access the Connect App.

        :return: The authorize_redirect_url of this ApiV2010AccountConnectApp.
        :rtype: str
        """
        return self._authorize_redirect_url

    @authorize_redirect_url.setter
    def authorize_redirect_url(self, authorize_redirect_url):
        """Sets the authorize_redirect_url of this ApiV2010AccountConnectApp.

        The URL we redirect the user to after we authenticate the user and obtain authorization to access the Connect App.

        :param authorize_redirect_url: The authorize_redirect_url of this ApiV2010AccountConnectApp.
        :type authorize_redirect_url: str
        """

        self._authorize_redirect_url = authorize_redirect_url

    @property
    def company_name(self):
        """Gets the company_name of this ApiV2010AccountConnectApp.

        The company name set for the Connect App.

        :return: The company_name of this ApiV2010AccountConnectApp.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this ApiV2010AccountConnectApp.

        The company name set for the Connect App.

        :param company_name: The company_name of this ApiV2010AccountConnectApp.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def deauthorize_callback_method(self):
        """Gets the deauthorize_callback_method of this ApiV2010AccountConnectApp.

        The HTTP method we use to call `deauthorize_callback_url`.

        :return: The deauthorize_callback_method of this ApiV2010AccountConnectApp.
        :rtype: str
        """
        return self._deauthorize_callback_method

    @deauthorize_callback_method.setter
    def deauthorize_callback_method(self, deauthorize_callback_method):
        """Sets the deauthorize_callback_method of this ApiV2010AccountConnectApp.

        The HTTP method we use to call `deauthorize_callback_url`.

        :param deauthorize_callback_method: The deauthorize_callback_method of this ApiV2010AccountConnectApp.
        :type deauthorize_callback_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if deauthorize_callback_method not in allowed_values:
            raise ValueError(
                "Invalid value for `deauthorize_callback_method` ({0}), must be one of {1}"
                .format(deauthorize_callback_method, allowed_values)
            )

        self._deauthorize_callback_method = deauthorize_callback_method

    @property
    def deauthorize_callback_url(self):
        """Gets the deauthorize_callback_url of this ApiV2010AccountConnectApp.

        The URL we call using the `deauthorize_callback_method` to de-authorize the Connect App.

        :return: The deauthorize_callback_url of this ApiV2010AccountConnectApp.
        :rtype: str
        """
        return self._deauthorize_callback_url

    @deauthorize_callback_url.setter
    def deauthorize_callback_url(self, deauthorize_callback_url):
        """Sets the deauthorize_callback_url of this ApiV2010AccountConnectApp.

        The URL we call using the `deauthorize_callback_method` to de-authorize the Connect App.

        :param deauthorize_callback_url: The deauthorize_callback_url of this ApiV2010AccountConnectApp.
        :type deauthorize_callback_url: str
        """

        self._deauthorize_callback_url = deauthorize_callback_url

    @property
    def description(self):
        """Gets the description of this ApiV2010AccountConnectApp.

        The description of the Connect App.

        :return: The description of this ApiV2010AccountConnectApp.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApiV2010AccountConnectApp.

        The description of the Connect App.

        :param description: The description of this ApiV2010AccountConnectApp.
        :type description: str
        """

        self._description = description

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ApiV2010AccountConnectApp.

        The string that you assigned to describe the resource.

        :return: The friendly_name of this ApiV2010AccountConnectApp.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ApiV2010AccountConnectApp.

        The string that you assigned to describe the resource.

        :param friendly_name: The friendly_name of this ApiV2010AccountConnectApp.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def homepage_url(self):
        """Gets the homepage_url of this ApiV2010AccountConnectApp.

        The public URL where users can obtain more information about this Connect App.

        :return: The homepage_url of this ApiV2010AccountConnectApp.
        :rtype: str
        """
        return self._homepage_url

    @homepage_url.setter
    def homepage_url(self, homepage_url):
        """Sets the homepage_url of this ApiV2010AccountConnectApp.

        The public URL where users can obtain more information about this Connect App.

        :param homepage_url: The homepage_url of this ApiV2010AccountConnectApp.
        :type homepage_url: str
        """

        self._homepage_url = homepage_url

    @property
    def permissions(self):
        """Gets the permissions of this ApiV2010AccountConnectApp.

        The set of permissions that your ConnectApp requests.

        :return: The permissions of this ApiV2010AccountConnectApp.
        :rtype: List[ConnectAppEnumPermission]
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this ApiV2010AccountConnectApp.

        The set of permissions that your ConnectApp requests.

        :param permissions: The permissions of this ApiV2010AccountConnectApp.
        :type permissions: List[ConnectAppEnumPermission]
        """

        self._permissions = permissions

    @property
    def sid(self):
        """Gets the sid of this ApiV2010AccountConnectApp.

        The unique string that that we created to identify the ConnectApp resource.

        :return: The sid of this ApiV2010AccountConnectApp.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ApiV2010AccountConnectApp.

        The unique string that that we created to identify the ConnectApp resource.

        :param sid: The sid of this ApiV2010AccountConnectApp.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^CN[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^CN[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def uri(self):
        """Gets the uri of this ApiV2010AccountConnectApp.

        The URI of the resource, relative to `https://api.twilio.com`.

        :return: The uri of this ApiV2010AccountConnectApp.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ApiV2010AccountConnectApp.

        The URI of the resource, relative to `https://api.twilio.com`.

        :param uri: The uri of this ApiV2010AccountConnectApp.
        :type uri: str
        """

        self._uri = uri
