# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ApiV2010AccountQueue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, average_wait_time: int=None, current_size: int=None, date_created: str=None, date_updated: str=None, friendly_name: str=None, max_size: int=None, sid: str=None, uri: str=None):
        """ApiV2010AccountQueue - a model defined in OpenAPI

        :param account_sid: The account_sid of this ApiV2010AccountQueue.
        :param average_wait_time: The average_wait_time of this ApiV2010AccountQueue.
        :param current_size: The current_size of this ApiV2010AccountQueue.
        :param date_created: The date_created of this ApiV2010AccountQueue.
        :param date_updated: The date_updated of this ApiV2010AccountQueue.
        :param friendly_name: The friendly_name of this ApiV2010AccountQueue.
        :param max_size: The max_size of this ApiV2010AccountQueue.
        :param sid: The sid of this ApiV2010AccountQueue.
        :param uri: The uri of this ApiV2010AccountQueue.
        """
        self.openapi_types = {
            'account_sid': str,
            'average_wait_time': int,
            'current_size': int,
            'date_created': str,
            'date_updated': str,
            'friendly_name': str,
            'max_size': int,
            'sid': str,
            'uri': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'average_wait_time': 'average_wait_time',
            'current_size': 'current_size',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'friendly_name': 'friendly_name',
            'max_size': 'max_size',
            'sid': 'sid',
            'uri': 'uri'
        }

        self._account_sid = account_sid
        self._average_wait_time = average_wait_time
        self._current_size = current_size
        self._date_created = date_created
        self._date_updated = date_updated
        self._friendly_name = friendly_name
        self._max_size = max_size
        self._sid = sid
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2010AccountQueue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api.v2010.account.queue of this ApiV2010AccountQueue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ApiV2010AccountQueue.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Queue resource.

        :return: The account_sid of this ApiV2010AccountQueue.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ApiV2010AccountQueue.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Queue resource.

        :param account_sid: The account_sid of this ApiV2010AccountQueue.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def average_wait_time(self):
        """Gets the average_wait_time of this ApiV2010AccountQueue.

         The average wait time in seconds of the members in this queue. This is calculated at the time of the request.

        :return: The average_wait_time of this ApiV2010AccountQueue.
        :rtype: int
        """
        return self._average_wait_time

    @average_wait_time.setter
    def average_wait_time(self, average_wait_time):
        """Sets the average_wait_time of this ApiV2010AccountQueue.

         The average wait time in seconds of the members in this queue. This is calculated at the time of the request.

        :param average_wait_time: The average_wait_time of this ApiV2010AccountQueue.
        :type average_wait_time: int
        """

        self._average_wait_time = average_wait_time

    @property
    def current_size(self):
        """Gets the current_size of this ApiV2010AccountQueue.

        The number of calls currently in the queue.

        :return: The current_size of this ApiV2010AccountQueue.
        :rtype: int
        """
        return self._current_size

    @current_size.setter
    def current_size(self, current_size):
        """Sets the current_size of this ApiV2010AccountQueue.

        The number of calls currently in the queue.

        :param current_size: The current_size of this ApiV2010AccountQueue.
        :type current_size: int
        """

        self._current_size = current_size

    @property
    def date_created(self):
        """Gets the date_created of this ApiV2010AccountQueue.

        The date and time in GMT that this resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this ApiV2010AccountQueue.
        :rtype: str
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ApiV2010AccountQueue.

        The date and time in GMT that this resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this ApiV2010AccountQueue.
        :type date_created: str
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ApiV2010AccountQueue.

        The date and time in GMT that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this ApiV2010AccountQueue.
        :rtype: str
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ApiV2010AccountQueue.

        The date and time in GMT that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this ApiV2010AccountQueue.
        :type date_updated: str
        """

        self._date_updated = date_updated

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ApiV2010AccountQueue.

        A string that you assigned to describe this resource.

        :return: The friendly_name of this ApiV2010AccountQueue.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ApiV2010AccountQueue.

        A string that you assigned to describe this resource.

        :param friendly_name: The friendly_name of this ApiV2010AccountQueue.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def max_size(self):
        """Gets the max_size of this ApiV2010AccountQueue.

         The maximum number of calls that can be in the queue. The default is 1000 and the maximum is 5000.

        :return: The max_size of this ApiV2010AccountQueue.
        :rtype: int
        """
        return self._max_size

    @max_size.setter
    def max_size(self, max_size):
        """Sets the max_size of this ApiV2010AccountQueue.

         The maximum number of calls that can be in the queue. The default is 1000 and the maximum is 5000.

        :param max_size: The max_size of this ApiV2010AccountQueue.
        :type max_size: int
        """

        self._max_size = max_size

    @property
    def sid(self):
        """Gets the sid of this ApiV2010AccountQueue.

        The unique string that that we created to identify this Queue resource.

        :return: The sid of this ApiV2010AccountQueue.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ApiV2010AccountQueue.

        The unique string that that we created to identify this Queue resource.

        :param sid: The sid of this ApiV2010AccountQueue.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^QU[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^QU[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def uri(self):
        """Gets the uri of this ApiV2010AccountQueue.

        The URI of this resource, relative to `https://api.twilio.com`.

        :return: The uri of this ApiV2010AccountQueue.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ApiV2010AccountQueue.

        The URI of this resource, relative to `https://api.twilio.com`.

        :param uri: The uri of this ApiV2010AccountQueue.
        :type uri: str
        """

        self._uri = uri
