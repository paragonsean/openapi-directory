# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MessageEnumStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    QUEUED = 'queued'
    SENDING = 'sending'
    SENT = 'sent'
    FAILED = 'failed'
    DELIVERED = 'delivered'
    UNDELIVERED = 'undelivered'
    RECEIVING = 'receiving'
    RECEIVED = 'received'
    ACCEPTED = 'accepted'
    SCHEDULED = 'scheduled'
    READ = 'read'
    PARTIALLY_DELIVERED = 'partially_delivered'
    CANCELED = 'canceled'

    def __init__(self):
        """MessageEnumStatus - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessageEnumStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The message_enum_status of this MessageEnumStatus.
        """
        return util.deserialize_model(dikt, cls)
