# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.usage_trigger_enum_recurring import UsageTriggerEnumRecurring
from openapi_server.models.usage_trigger_enum_trigger_field import UsageTriggerEnumTriggerField
from openapi_server.models.usage_trigger_enum_usage_category import UsageTriggerEnumUsageCategory
import re
from openapi_server import util


class ApiV2010AccountUsageUsageTrigger(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, api_version: str=None, callback_method: str=None, callback_url: str=None, current_value: str=None, date_created: str=None, date_fired: str=None, date_updated: str=None, friendly_name: str=None, recurring: UsageTriggerEnumRecurring=None, sid: str=None, trigger_by: UsageTriggerEnumTriggerField=None, trigger_value: str=None, uri: str=None, usage_category: UsageTriggerEnumUsageCategory=None, usage_record_uri: str=None):
        """ApiV2010AccountUsageUsageTrigger - a model defined in OpenAPI

        :param account_sid: The account_sid of this ApiV2010AccountUsageUsageTrigger.
        :param api_version: The api_version of this ApiV2010AccountUsageUsageTrigger.
        :param callback_method: The callback_method of this ApiV2010AccountUsageUsageTrigger.
        :param callback_url: The callback_url of this ApiV2010AccountUsageUsageTrigger.
        :param current_value: The current_value of this ApiV2010AccountUsageUsageTrigger.
        :param date_created: The date_created of this ApiV2010AccountUsageUsageTrigger.
        :param date_fired: The date_fired of this ApiV2010AccountUsageUsageTrigger.
        :param date_updated: The date_updated of this ApiV2010AccountUsageUsageTrigger.
        :param friendly_name: The friendly_name of this ApiV2010AccountUsageUsageTrigger.
        :param recurring: The recurring of this ApiV2010AccountUsageUsageTrigger.
        :param sid: The sid of this ApiV2010AccountUsageUsageTrigger.
        :param trigger_by: The trigger_by of this ApiV2010AccountUsageUsageTrigger.
        :param trigger_value: The trigger_value of this ApiV2010AccountUsageUsageTrigger.
        :param uri: The uri of this ApiV2010AccountUsageUsageTrigger.
        :param usage_category: The usage_category of this ApiV2010AccountUsageUsageTrigger.
        :param usage_record_uri: The usage_record_uri of this ApiV2010AccountUsageUsageTrigger.
        """
        self.openapi_types = {
            'account_sid': str,
            'api_version': str,
            'callback_method': str,
            'callback_url': str,
            'current_value': str,
            'date_created': str,
            'date_fired': str,
            'date_updated': str,
            'friendly_name': str,
            'recurring': UsageTriggerEnumRecurring,
            'sid': str,
            'trigger_by': UsageTriggerEnumTriggerField,
            'trigger_value': str,
            'uri': str,
            'usage_category': UsageTriggerEnumUsageCategory,
            'usage_record_uri': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'api_version': 'api_version',
            'callback_method': 'callback_method',
            'callback_url': 'callback_url',
            'current_value': 'current_value',
            'date_created': 'date_created',
            'date_fired': 'date_fired',
            'date_updated': 'date_updated',
            'friendly_name': 'friendly_name',
            'recurring': 'recurring',
            'sid': 'sid',
            'trigger_by': 'trigger_by',
            'trigger_value': 'trigger_value',
            'uri': 'uri',
            'usage_category': 'usage_category',
            'usage_record_uri': 'usage_record_uri'
        }

        self._account_sid = account_sid
        self._api_version = api_version
        self._callback_method = callback_method
        self._callback_url = callback_url
        self._current_value = current_value
        self._date_created = date_created
        self._date_fired = date_fired
        self._date_updated = date_updated
        self._friendly_name = friendly_name
        self._recurring = recurring
        self._sid = sid
        self._trigger_by = trigger_by
        self._trigger_value = trigger_value
        self._uri = uri
        self._usage_category = usage_category
        self._usage_record_uri = usage_record_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2010AccountUsageUsageTrigger':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api.v2010.account.usage.usage_trigger of this ApiV2010AccountUsageUsageTrigger.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ApiV2010AccountUsageUsageTrigger.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the trigger monitors.

        :return: The account_sid of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ApiV2010AccountUsageUsageTrigger.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the trigger monitors.

        :param account_sid: The account_sid of this ApiV2010AccountUsageUsageTrigger.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def api_version(self):
        """Gets the api_version of this ApiV2010AccountUsageUsageTrigger.

        The API version used to create the resource.

        :return: The api_version of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this ApiV2010AccountUsageUsageTrigger.

        The API version used to create the resource.

        :param api_version: The api_version of this ApiV2010AccountUsageUsageTrigger.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def callback_method(self):
        """Gets the callback_method of this ApiV2010AccountUsageUsageTrigger.

        The HTTP method we use to call `callback_url`. Can be: `GET` or `POST`.

        :return: The callback_method of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._callback_method

    @callback_method.setter
    def callback_method(self, callback_method):
        """Sets the callback_method of this ApiV2010AccountUsageUsageTrigger.

        The HTTP method we use to call `callback_url`. Can be: `GET` or `POST`.

        :param callback_method: The callback_method of this ApiV2010AccountUsageUsageTrigger.
        :type callback_method: str
        """
        allowed_values = [None,"HEAD", "GET", "POST", "PATCH", "PUT", "DELETE"]  # noqa: E501
        if callback_method not in allowed_values:
            raise ValueError(
                "Invalid value for `callback_method` ({0}), must be one of {1}"
                .format(callback_method, allowed_values)
            )

        self._callback_method = callback_method

    @property
    def callback_url(self):
        """Gets the callback_url of this ApiV2010AccountUsageUsageTrigger.

        The URL we call using the `callback_method` when the trigger fires.

        :return: The callback_url of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._callback_url

    @callback_url.setter
    def callback_url(self, callback_url):
        """Sets the callback_url of this ApiV2010AccountUsageUsageTrigger.

        The URL we call using the `callback_method` when the trigger fires.

        :param callback_url: The callback_url of this ApiV2010AccountUsageUsageTrigger.
        :type callback_url: str
        """

        self._callback_url = callback_url

    @property
    def current_value(self):
        """Gets the current_value of this ApiV2010AccountUsageUsageTrigger.

        The current value of the field the trigger is watching.

        :return: The current_value of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._current_value

    @current_value.setter
    def current_value(self, current_value):
        """Sets the current_value of this ApiV2010AccountUsageUsageTrigger.

        The current value of the field the trigger is watching.

        :param current_value: The current_value of this ApiV2010AccountUsageUsageTrigger.
        :type current_value: str
        """

        self._current_value = current_value

    @property
    def date_created(self):
        """Gets the date_created of this ApiV2010AccountUsageUsageTrigger.

        The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ApiV2010AccountUsageUsageTrigger.

        The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this ApiV2010AccountUsageUsageTrigger.
        :type date_created: str
        """

        self._date_created = date_created

    @property
    def date_fired(self):
        """Gets the date_fired of this ApiV2010AccountUsageUsageTrigger.

        The date and time in GMT that the trigger was last fired specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_fired of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._date_fired

    @date_fired.setter
    def date_fired(self, date_fired):
        """Sets the date_fired of this ApiV2010AccountUsageUsageTrigger.

        The date and time in GMT that the trigger was last fired specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_fired: The date_fired of this ApiV2010AccountUsageUsageTrigger.
        :type date_fired: str
        """

        self._date_fired = date_fired

    @property
    def date_updated(self):
        """Gets the date_updated of this ApiV2010AccountUsageUsageTrigger.

        The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ApiV2010AccountUsageUsageTrigger.

        The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this ApiV2010AccountUsageUsageTrigger.
        :type date_updated: str
        """

        self._date_updated = date_updated

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ApiV2010AccountUsageUsageTrigger.

        The string that you assigned to describe the trigger.

        :return: The friendly_name of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ApiV2010AccountUsageUsageTrigger.

        The string that you assigned to describe the trigger.

        :param friendly_name: The friendly_name of this ApiV2010AccountUsageUsageTrigger.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def recurring(self):
        """Gets the recurring of this ApiV2010AccountUsageUsageTrigger.


        :return: The recurring of this ApiV2010AccountUsageUsageTrigger.
        :rtype: UsageTriggerEnumRecurring
        """
        return self._recurring

    @recurring.setter
    def recurring(self, recurring):
        """Sets the recurring of this ApiV2010AccountUsageUsageTrigger.


        :param recurring: The recurring of this ApiV2010AccountUsageUsageTrigger.
        :type recurring: UsageTriggerEnumRecurring
        """

        self._recurring = recurring

    @property
    def sid(self):
        """Gets the sid of this ApiV2010AccountUsageUsageTrigger.

        The unique string that that we created to identify the UsageTrigger resource.

        :return: The sid of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ApiV2010AccountUsageUsageTrigger.

        The unique string that that we created to identify the UsageTrigger resource.

        :param sid: The sid of this ApiV2010AccountUsageUsageTrigger.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^UT[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^UT[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def trigger_by(self):
        """Gets the trigger_by of this ApiV2010AccountUsageUsageTrigger.


        :return: The trigger_by of this ApiV2010AccountUsageUsageTrigger.
        :rtype: UsageTriggerEnumTriggerField
        """
        return self._trigger_by

    @trigger_by.setter
    def trigger_by(self, trigger_by):
        """Sets the trigger_by of this ApiV2010AccountUsageUsageTrigger.


        :param trigger_by: The trigger_by of this ApiV2010AccountUsageUsageTrigger.
        :type trigger_by: UsageTriggerEnumTriggerField
        """

        self._trigger_by = trigger_by

    @property
    def trigger_value(self):
        """Gets the trigger_value of this ApiV2010AccountUsageUsageTrigger.

        The value at which the trigger will fire.  Must be a positive, numeric value.

        :return: The trigger_value of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._trigger_value

    @trigger_value.setter
    def trigger_value(self, trigger_value):
        """Sets the trigger_value of this ApiV2010AccountUsageUsageTrigger.

        The value at which the trigger will fire.  Must be a positive, numeric value.

        :param trigger_value: The trigger_value of this ApiV2010AccountUsageUsageTrigger.
        :type trigger_value: str
        """

        self._trigger_value = trigger_value

    @property
    def uri(self):
        """Gets the uri of this ApiV2010AccountUsageUsageTrigger.

        The URI of the resource, relative to `https://api.twilio.com`.

        :return: The uri of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ApiV2010AccountUsageUsageTrigger.

        The URI of the resource, relative to `https://api.twilio.com`.

        :param uri: The uri of this ApiV2010AccountUsageUsageTrigger.
        :type uri: str
        """

        self._uri = uri

    @property
    def usage_category(self):
        """Gets the usage_category of this ApiV2010AccountUsageUsageTrigger.


        :return: The usage_category of this ApiV2010AccountUsageUsageTrigger.
        :rtype: UsageTriggerEnumUsageCategory
        """
        return self._usage_category

    @usage_category.setter
    def usage_category(self, usage_category):
        """Sets the usage_category of this ApiV2010AccountUsageUsageTrigger.


        :param usage_category: The usage_category of this ApiV2010AccountUsageUsageTrigger.
        :type usage_category: UsageTriggerEnumUsageCategory
        """

        self._usage_category = usage_category

    @property
    def usage_record_uri(self):
        """Gets the usage_record_uri of this ApiV2010AccountUsageUsageTrigger.

        The URI of the [UsageRecord](https://www.twilio.com/docs/usage/api/usage-record) resource this trigger watches, relative to `https://api.twilio.com`.

        :return: The usage_record_uri of this ApiV2010AccountUsageUsageTrigger.
        :rtype: str
        """
        return self._usage_record_uri

    @usage_record_uri.setter
    def usage_record_uri(self, usage_record_uri):
        """Sets the usage_record_uri of this ApiV2010AccountUsageUsageTrigger.

        The URI of the [UsageRecord](https://www.twilio.com/docs/usage/api/usage-record) resource this trigger watches, relative to `https://api.twilio.com`.

        :param usage_record_uri: The usage_record_uri of this ApiV2010AccountUsageUsageTrigger.
        :type usage_record_uri: str
        """

        self._usage_record_uri = usage_record_uri
