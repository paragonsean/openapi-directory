# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_enum_status import AccountEnumStatus
from openapi_server.models.account_enum_type import AccountEnumType
import re
from openapi_server import util


class ApiV2010Account(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auth_token: str=None, date_created: str=None, date_updated: str=None, friendly_name: str=None, owner_account_sid: str=None, sid: str=None, status: AccountEnumStatus=None, subresource_uris: object=None, type: AccountEnumType=None, uri: str=None):
        """ApiV2010Account - a model defined in OpenAPI

        :param auth_token: The auth_token of this ApiV2010Account.
        :param date_created: The date_created of this ApiV2010Account.
        :param date_updated: The date_updated of this ApiV2010Account.
        :param friendly_name: The friendly_name of this ApiV2010Account.
        :param owner_account_sid: The owner_account_sid of this ApiV2010Account.
        :param sid: The sid of this ApiV2010Account.
        :param status: The status of this ApiV2010Account.
        :param subresource_uris: The subresource_uris of this ApiV2010Account.
        :param type: The type of this ApiV2010Account.
        :param uri: The uri of this ApiV2010Account.
        """
        self.openapi_types = {
            'auth_token': str,
            'date_created': str,
            'date_updated': str,
            'friendly_name': str,
            'owner_account_sid': str,
            'sid': str,
            'status': AccountEnumStatus,
            'subresource_uris': object,
            'type': AccountEnumType,
            'uri': str
        }

        self.attribute_map = {
            'auth_token': 'auth_token',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'friendly_name': 'friendly_name',
            'owner_account_sid': 'owner_account_sid',
            'sid': 'sid',
            'status': 'status',
            'subresource_uris': 'subresource_uris',
            'type': 'type',
            'uri': 'uri'
        }

        self._auth_token = auth_token
        self._date_created = date_created
        self._date_updated = date_updated
        self._friendly_name = friendly_name
        self._owner_account_sid = owner_account_sid
        self._sid = sid
        self._status = status
        self._subresource_uris = subresource_uris
        self._type = type
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2010Account':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api.v2010.account of this ApiV2010Account.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_token(self):
        """Gets the auth_token of this ApiV2010Account.

        The authorization token for this account. This token should be kept a secret, so no sharing.

        :return: The auth_token of this ApiV2010Account.
        :rtype: str
        """
        return self._auth_token

    @auth_token.setter
    def auth_token(self, auth_token):
        """Sets the auth_token of this ApiV2010Account.

        The authorization token for this account. This token should be kept a secret, so no sharing.

        :param auth_token: The auth_token of this ApiV2010Account.
        :type auth_token: str
        """

        self._auth_token = auth_token

    @property
    def date_created(self):
        """Gets the date_created of this ApiV2010Account.

        The date that this account was created, in GMT in RFC 2822 format

        :return: The date_created of this ApiV2010Account.
        :rtype: str
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ApiV2010Account.

        The date that this account was created, in GMT in RFC 2822 format

        :param date_created: The date_created of this ApiV2010Account.
        :type date_created: str
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ApiV2010Account.

        The date that this account was last updated, in GMT in RFC 2822 format.

        :return: The date_updated of this ApiV2010Account.
        :rtype: str
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ApiV2010Account.

        The date that this account was last updated, in GMT in RFC 2822 format.

        :param date_updated: The date_updated of this ApiV2010Account.
        :type date_updated: str
        """

        self._date_updated = date_updated

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ApiV2010Account.

        A human readable description of this account, up to 64 characters long. By default the FriendlyName is your email address.

        :return: The friendly_name of this ApiV2010Account.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ApiV2010Account.

        A human readable description of this account, up to 64 characters long. By default the FriendlyName is your email address.

        :param friendly_name: The friendly_name of this ApiV2010Account.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def owner_account_sid(self):
        """Gets the owner_account_sid of this ApiV2010Account.

        The unique 34 character id that represents the parent of this account. The OwnerAccountSid of a parent account is it's own sid.

        :return: The owner_account_sid of this ApiV2010Account.
        :rtype: str
        """
        return self._owner_account_sid

    @owner_account_sid.setter
    def owner_account_sid(self, owner_account_sid):
        """Sets the owner_account_sid of this ApiV2010Account.

        The unique 34 character id that represents the parent of this account. The OwnerAccountSid of a parent account is it's own sid.

        :param owner_account_sid: The owner_account_sid of this ApiV2010Account.
        :type owner_account_sid: str
        """
        if owner_account_sid is not None and len(owner_account_sid) > 34:
            raise ValueError("Invalid value for `owner_account_sid`, length must be less than or equal to `34`")
        if owner_account_sid is not None and len(owner_account_sid) < 34:
            raise ValueError("Invalid value for `owner_account_sid`, length must be greater than or equal to `34`")
        if owner_account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', owner_account_sid):
            raise ValueError("Invalid value for `owner_account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._owner_account_sid = owner_account_sid

    @property
    def sid(self):
        """Gets the sid of this ApiV2010Account.

        A 34 character string that uniquely identifies this resource.

        :return: The sid of this ApiV2010Account.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ApiV2010Account.

        A 34 character string that uniquely identifies this resource.

        :param sid: The sid of this ApiV2010Account.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def status(self):
        """Gets the status of this ApiV2010Account.


        :return: The status of this ApiV2010Account.
        :rtype: AccountEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApiV2010Account.


        :param status: The status of this ApiV2010Account.
        :type status: AccountEnumStatus
        """

        self._status = status

    @property
    def subresource_uris(self):
        """Gets the subresource_uris of this ApiV2010Account.

        A Map of various subresources available for the given Account Instance

        :return: The subresource_uris of this ApiV2010Account.
        :rtype: object
        """
        return self._subresource_uris

    @subresource_uris.setter
    def subresource_uris(self, subresource_uris):
        """Sets the subresource_uris of this ApiV2010Account.

        A Map of various subresources available for the given Account Instance

        :param subresource_uris: The subresource_uris of this ApiV2010Account.
        :type subresource_uris: object
        """

        self._subresource_uris = subresource_uris

    @property
    def type(self):
        """Gets the type of this ApiV2010Account.


        :return: The type of this ApiV2010Account.
        :rtype: AccountEnumType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ApiV2010Account.


        :param type: The type of this ApiV2010Account.
        :type type: AccountEnumType
        """

        self._type = type

    @property
    def uri(self):
        """Gets the uri of this ApiV2010Account.

        The URI for this resource, relative to `https://api.twilio.com`

        :return: The uri of this ApiV2010Account.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ApiV2010Account.

        The URI for this resource, relative to `https://api.twilio.com`

        :param uri: The uri of this ApiV2010Account.
        :type uri: str
        """

        self._uri = uri
