# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_v2010_account_call_call_recording import ApiV2010AccountCallCallRecording
from openapi_server import util


class ListCallRecordingResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end: int=None, first_page_uri: str=None, next_page_uri: str=None, page: int=None, page_size: int=None, previous_page_uri: str=None, recordings: List[ApiV2010AccountCallCallRecording]=None, start: int=None, uri: str=None):
        """ListCallRecordingResponse - a model defined in OpenAPI

        :param end: The end of this ListCallRecordingResponse.
        :param first_page_uri: The first_page_uri of this ListCallRecordingResponse.
        :param next_page_uri: The next_page_uri of this ListCallRecordingResponse.
        :param page: The page of this ListCallRecordingResponse.
        :param page_size: The page_size of this ListCallRecordingResponse.
        :param previous_page_uri: The previous_page_uri of this ListCallRecordingResponse.
        :param recordings: The recordings of this ListCallRecordingResponse.
        :param start: The start of this ListCallRecordingResponse.
        :param uri: The uri of this ListCallRecordingResponse.
        """
        self.openapi_types = {
            'end': int,
            'first_page_uri': str,
            'next_page_uri': str,
            'page': int,
            'page_size': int,
            'previous_page_uri': str,
            'recordings': List[ApiV2010AccountCallCallRecording],
            'start': int,
            'uri': str
        }

        self.attribute_map = {
            'end': 'end',
            'first_page_uri': 'first_page_uri',
            'next_page_uri': 'next_page_uri',
            'page': 'page',
            'page_size': 'page_size',
            'previous_page_uri': 'previous_page_uri',
            'recordings': 'recordings',
            'start': 'start',
            'uri': 'uri'
        }

        self._end = end
        self._first_page_uri = first_page_uri
        self._next_page_uri = next_page_uri
        self._page = page
        self._page_size = page_size
        self._previous_page_uri = previous_page_uri
        self._recordings = recordings
        self._start = start
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCallRecordingResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCallRecordingResponse of this ListCallRecordingResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end(self):
        """Gets the end of this ListCallRecordingResponse.


        :return: The end of this ListCallRecordingResponse.
        :rtype: int
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this ListCallRecordingResponse.


        :param end: The end of this ListCallRecordingResponse.
        :type end: int
        """

        self._end = end

    @property
    def first_page_uri(self):
        """Gets the first_page_uri of this ListCallRecordingResponse.


        :return: The first_page_uri of this ListCallRecordingResponse.
        :rtype: str
        """
        return self._first_page_uri

    @first_page_uri.setter
    def first_page_uri(self, first_page_uri):
        """Sets the first_page_uri of this ListCallRecordingResponse.


        :param first_page_uri: The first_page_uri of this ListCallRecordingResponse.
        :type first_page_uri: str
        """

        self._first_page_uri = first_page_uri

    @property
    def next_page_uri(self):
        """Gets the next_page_uri of this ListCallRecordingResponse.


        :return: The next_page_uri of this ListCallRecordingResponse.
        :rtype: str
        """
        return self._next_page_uri

    @next_page_uri.setter
    def next_page_uri(self, next_page_uri):
        """Sets the next_page_uri of this ListCallRecordingResponse.


        :param next_page_uri: The next_page_uri of this ListCallRecordingResponse.
        :type next_page_uri: str
        """

        self._next_page_uri = next_page_uri

    @property
    def page(self):
        """Gets the page of this ListCallRecordingResponse.


        :return: The page of this ListCallRecordingResponse.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this ListCallRecordingResponse.


        :param page: The page of this ListCallRecordingResponse.
        :type page: int
        """

        self._page = page

    @property
    def page_size(self):
        """Gets the page_size of this ListCallRecordingResponse.


        :return: The page_size of this ListCallRecordingResponse.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this ListCallRecordingResponse.


        :param page_size: The page_size of this ListCallRecordingResponse.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def previous_page_uri(self):
        """Gets the previous_page_uri of this ListCallRecordingResponse.


        :return: The previous_page_uri of this ListCallRecordingResponse.
        :rtype: str
        """
        return self._previous_page_uri

    @previous_page_uri.setter
    def previous_page_uri(self, previous_page_uri):
        """Sets the previous_page_uri of this ListCallRecordingResponse.


        :param previous_page_uri: The previous_page_uri of this ListCallRecordingResponse.
        :type previous_page_uri: str
        """

        self._previous_page_uri = previous_page_uri

    @property
    def recordings(self):
        """Gets the recordings of this ListCallRecordingResponse.


        :return: The recordings of this ListCallRecordingResponse.
        :rtype: List[ApiV2010AccountCallCallRecording]
        """
        return self._recordings

    @recordings.setter
    def recordings(self, recordings):
        """Sets the recordings of this ListCallRecordingResponse.


        :param recordings: The recordings of this ListCallRecordingResponse.
        :type recordings: List[ApiV2010AccountCallCallRecording]
        """

        self._recordings = recordings

    @property
    def start(self):
        """Gets the start of this ListCallRecordingResponse.


        :return: The start of this ListCallRecordingResponse.
        :rtype: int
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this ListCallRecordingResponse.


        :param start: The start of this ListCallRecordingResponse.
        :type start: int
        """

        self._start = start

    @property
    def uri(self):
        """Gets the uri of this ListCallRecordingResponse.


        :return: The uri of this ListCallRecordingResponse.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ListCallRecordingResponse.


        :param uri: The uri of this ListCallRecordingResponse.
        :type uri: str
        """

        self._uri = uri
