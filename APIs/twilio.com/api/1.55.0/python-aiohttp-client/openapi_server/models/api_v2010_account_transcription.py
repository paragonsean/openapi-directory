# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transcription_enum_status import TranscriptionEnumStatus
import re
from openapi_server import util


class ApiV2010AccountTranscription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, api_version: str=None, date_created: str=None, date_updated: str=None, duration: str=None, price: float=None, price_unit: str=None, recording_sid: str=None, sid: str=None, status: TranscriptionEnumStatus=None, transcription_text: str=None, type: str=None, uri: str=None):
        """ApiV2010AccountTranscription - a model defined in OpenAPI

        :param account_sid: The account_sid of this ApiV2010AccountTranscription.
        :param api_version: The api_version of this ApiV2010AccountTranscription.
        :param date_created: The date_created of this ApiV2010AccountTranscription.
        :param date_updated: The date_updated of this ApiV2010AccountTranscription.
        :param duration: The duration of this ApiV2010AccountTranscription.
        :param price: The price of this ApiV2010AccountTranscription.
        :param price_unit: The price_unit of this ApiV2010AccountTranscription.
        :param recording_sid: The recording_sid of this ApiV2010AccountTranscription.
        :param sid: The sid of this ApiV2010AccountTranscription.
        :param status: The status of this ApiV2010AccountTranscription.
        :param transcription_text: The transcription_text of this ApiV2010AccountTranscription.
        :param type: The type of this ApiV2010AccountTranscription.
        :param uri: The uri of this ApiV2010AccountTranscription.
        """
        self.openapi_types = {
            'account_sid': str,
            'api_version': str,
            'date_created': str,
            'date_updated': str,
            'duration': str,
            'price': float,
            'price_unit': str,
            'recording_sid': str,
            'sid': str,
            'status': TranscriptionEnumStatus,
            'transcription_text': str,
            'type': str,
            'uri': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'api_version': 'api_version',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'duration': 'duration',
            'price': 'price',
            'price_unit': 'price_unit',
            'recording_sid': 'recording_sid',
            'sid': 'sid',
            'status': 'status',
            'transcription_text': 'transcription_text',
            'type': 'type',
            'uri': 'uri'
        }

        self._account_sid = account_sid
        self._api_version = api_version
        self._date_created = date_created
        self._date_updated = date_updated
        self._duration = duration
        self._price = price
        self._price_unit = price_unit
        self._recording_sid = recording_sid
        self._sid = sid
        self._status = status
        self._transcription_text = transcription_text
        self._type = type
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2010AccountTranscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api.v2010.account.transcription of this ApiV2010AccountTranscription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ApiV2010AccountTranscription.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource.

        :return: The account_sid of this ApiV2010AccountTranscription.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ApiV2010AccountTranscription.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource.

        :param account_sid: The account_sid of this ApiV2010AccountTranscription.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def api_version(self):
        """Gets the api_version of this ApiV2010AccountTranscription.

        The API version used to create the transcription.

        :return: The api_version of this ApiV2010AccountTranscription.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this ApiV2010AccountTranscription.

        The API version used to create the transcription.

        :param api_version: The api_version of this ApiV2010AccountTranscription.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def date_created(self):
        """Gets the date_created of this ApiV2010AccountTranscription.

        The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this ApiV2010AccountTranscription.
        :rtype: str
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ApiV2010AccountTranscription.

        The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this ApiV2010AccountTranscription.
        :type date_created: str
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ApiV2010AccountTranscription.

        The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this ApiV2010AccountTranscription.
        :rtype: str
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ApiV2010AccountTranscription.

        The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this ApiV2010AccountTranscription.
        :type date_updated: str
        """

        self._date_updated = date_updated

    @property
    def duration(self):
        """Gets the duration of this ApiV2010AccountTranscription.

        The duration of the transcribed audio in seconds.

        :return: The duration of this ApiV2010AccountTranscription.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ApiV2010AccountTranscription.

        The duration of the transcribed audio in seconds.

        :param duration: The duration of this ApiV2010AccountTranscription.
        :type duration: str
        """

        self._duration = duration

    @property
    def price(self):
        """Gets the price of this ApiV2010AccountTranscription.

        The charge for the transcript in the currency associated with the account. This value is populated after the transcript is complete so it may not be available immediately.

        :return: The price of this ApiV2010AccountTranscription.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this ApiV2010AccountTranscription.

        The charge for the transcript in the currency associated with the account. This value is populated after the transcript is complete so it may not be available immediately.

        :param price: The price of this ApiV2010AccountTranscription.
        :type price: float
        """

        self._price = price

    @property
    def price_unit(self):
        """Gets the price_unit of this ApiV2010AccountTranscription.

        The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).

        :return: The price_unit of this ApiV2010AccountTranscription.
        :rtype: str
        """
        return self._price_unit

    @price_unit.setter
    def price_unit(self, price_unit):
        """Sets the price_unit of this ApiV2010AccountTranscription.

        The currency in which `price` is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).

        :param price_unit: The price_unit of this ApiV2010AccountTranscription.
        :type price_unit: str
        """

        self._price_unit = price_unit

    @property
    def recording_sid(self):
        """Gets the recording_sid of this ApiV2010AccountTranscription.

        The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) from which the transcription was created.

        :return: The recording_sid of this ApiV2010AccountTranscription.
        :rtype: str
        """
        return self._recording_sid

    @recording_sid.setter
    def recording_sid(self, recording_sid):
        """Sets the recording_sid of this ApiV2010AccountTranscription.

        The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) from which the transcription was created.

        :param recording_sid: The recording_sid of this ApiV2010AccountTranscription.
        :type recording_sid: str
        """
        if recording_sid is not None and len(recording_sid) > 34:
            raise ValueError("Invalid value for `recording_sid`, length must be less than or equal to `34`")
        if recording_sid is not None and len(recording_sid) < 34:
            raise ValueError("Invalid value for `recording_sid`, length must be greater than or equal to `34`")
        if recording_sid is not None and not re.search(r'^RE[0-9a-fA-F]{32}$', recording_sid):
            raise ValueError("Invalid value for `recording_sid`, must be a follow pattern or equal to `/^RE[0-9a-fA-F]{32}$/`")

        self._recording_sid = recording_sid

    @property
    def sid(self):
        """Gets the sid of this ApiV2010AccountTranscription.

        The unique string that that we created to identify the Transcription resource.

        :return: The sid of this ApiV2010AccountTranscription.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ApiV2010AccountTranscription.

        The unique string that that we created to identify the Transcription resource.

        :param sid: The sid of this ApiV2010AccountTranscription.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^TR[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^TR[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def status(self):
        """Gets the status of this ApiV2010AccountTranscription.


        :return: The status of this ApiV2010AccountTranscription.
        :rtype: TranscriptionEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApiV2010AccountTranscription.


        :param status: The status of this ApiV2010AccountTranscription.
        :type status: TranscriptionEnumStatus
        """

        self._status = status

    @property
    def transcription_text(self):
        """Gets the transcription_text of this ApiV2010AccountTranscription.

        The text content of the transcription.

        :return: The transcription_text of this ApiV2010AccountTranscription.
        :rtype: str
        """
        return self._transcription_text

    @transcription_text.setter
    def transcription_text(self, transcription_text):
        """Sets the transcription_text of this ApiV2010AccountTranscription.

        The text content of the transcription.

        :param transcription_text: The transcription_text of this ApiV2010AccountTranscription.
        :type transcription_text: str
        """

        self._transcription_text = transcription_text

    @property
    def type(self):
        """Gets the type of this ApiV2010AccountTranscription.

        The transcription type. Can only be: `fast`.

        :return: The type of this ApiV2010AccountTranscription.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ApiV2010AccountTranscription.

        The transcription type. Can only be: `fast`.

        :param type: The type of this ApiV2010AccountTranscription.
        :type type: str
        """

        self._type = type

    @property
    def uri(self):
        """Gets the uri of this ApiV2010AccountTranscription.

        The URI of the resource, relative to `https://api.twilio.com`.

        :return: The uri of this ApiV2010AccountTranscription.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ApiV2010AccountTranscription.

        The URI of the resource, relative to `https://api.twilio.com`.

        :param uri: The uri of this ApiV2010AccountTranscription.
        :type uri: str
        """

        self._uri = uri
