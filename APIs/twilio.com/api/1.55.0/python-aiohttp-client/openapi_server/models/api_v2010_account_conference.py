# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conference_enum_reason_conference_ended import ConferenceEnumReasonConferenceEnded
from openapi_server.models.conference_enum_status import ConferenceEnumStatus
import re
from openapi_server import util


class ApiV2010AccountConference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, api_version: str=None, call_sid_ending_conference: str=None, date_created: str=None, date_updated: str=None, friendly_name: str=None, reason_conference_ended: ConferenceEnumReasonConferenceEnded=None, region: str=None, sid: str=None, status: ConferenceEnumStatus=None, subresource_uris: object=None, uri: str=None):
        """ApiV2010AccountConference - a model defined in OpenAPI

        :param account_sid: The account_sid of this ApiV2010AccountConference.
        :param api_version: The api_version of this ApiV2010AccountConference.
        :param call_sid_ending_conference: The call_sid_ending_conference of this ApiV2010AccountConference.
        :param date_created: The date_created of this ApiV2010AccountConference.
        :param date_updated: The date_updated of this ApiV2010AccountConference.
        :param friendly_name: The friendly_name of this ApiV2010AccountConference.
        :param reason_conference_ended: The reason_conference_ended of this ApiV2010AccountConference.
        :param region: The region of this ApiV2010AccountConference.
        :param sid: The sid of this ApiV2010AccountConference.
        :param status: The status of this ApiV2010AccountConference.
        :param subresource_uris: The subresource_uris of this ApiV2010AccountConference.
        :param uri: The uri of this ApiV2010AccountConference.
        """
        self.openapi_types = {
            'account_sid': str,
            'api_version': str,
            'call_sid_ending_conference': str,
            'date_created': str,
            'date_updated': str,
            'friendly_name': str,
            'reason_conference_ended': ConferenceEnumReasonConferenceEnded,
            'region': str,
            'sid': str,
            'status': ConferenceEnumStatus,
            'subresource_uris': object,
            'uri': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'api_version': 'api_version',
            'call_sid_ending_conference': 'call_sid_ending_conference',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'friendly_name': 'friendly_name',
            'reason_conference_ended': 'reason_conference_ended',
            'region': 'region',
            'sid': 'sid',
            'status': 'status',
            'subresource_uris': 'subresource_uris',
            'uri': 'uri'
        }

        self._account_sid = account_sid
        self._api_version = api_version
        self._call_sid_ending_conference = call_sid_ending_conference
        self._date_created = date_created
        self._date_updated = date_updated
        self._friendly_name = friendly_name
        self._reason_conference_ended = reason_conference_ended
        self._region = region
        self._sid = sid
        self._status = status
        self._subresource_uris = subresource_uris
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2010AccountConference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api.v2010.account.conference of this ApiV2010AccountConference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ApiV2010AccountConference.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Conference resource.

        :return: The account_sid of this ApiV2010AccountConference.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ApiV2010AccountConference.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Conference resource.

        :param account_sid: The account_sid of this ApiV2010AccountConference.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def api_version(self):
        """Gets the api_version of this ApiV2010AccountConference.

        The API version used to create this conference.

        :return: The api_version of this ApiV2010AccountConference.
        :rtype: str
        """
        return self._api_version

    @api_version.setter
    def api_version(self, api_version):
        """Sets the api_version of this ApiV2010AccountConference.

        The API version used to create this conference.

        :param api_version: The api_version of this ApiV2010AccountConference.
        :type api_version: str
        """

        self._api_version = api_version

    @property
    def call_sid_ending_conference(self):
        """Gets the call_sid_ending_conference of this ApiV2010AccountConference.

        The call SID that caused the conference to end.

        :return: The call_sid_ending_conference of this ApiV2010AccountConference.
        :rtype: str
        """
        return self._call_sid_ending_conference

    @call_sid_ending_conference.setter
    def call_sid_ending_conference(self, call_sid_ending_conference):
        """Sets the call_sid_ending_conference of this ApiV2010AccountConference.

        The call SID that caused the conference to end.

        :param call_sid_ending_conference: The call_sid_ending_conference of this ApiV2010AccountConference.
        :type call_sid_ending_conference: str
        """
        if call_sid_ending_conference is not None and len(call_sid_ending_conference) > 34:
            raise ValueError("Invalid value for `call_sid_ending_conference`, length must be less than or equal to `34`")
        if call_sid_ending_conference is not None and len(call_sid_ending_conference) < 34:
            raise ValueError("Invalid value for `call_sid_ending_conference`, length must be greater than or equal to `34`")
        if call_sid_ending_conference is not None and not re.search(r'^CA[0-9a-fA-F]{32}$', call_sid_ending_conference):
            raise ValueError("Invalid value for `call_sid_ending_conference`, must be a follow pattern or equal to `/^CA[0-9a-fA-F]{32}$/`")

        self._call_sid_ending_conference = call_sid_ending_conference

    @property
    def date_created(self):
        """Gets the date_created of this ApiV2010AccountConference.

        The date and time in GMT that this resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this ApiV2010AccountConference.
        :rtype: str
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ApiV2010AccountConference.

        The date and time in GMT that this resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this ApiV2010AccountConference.
        :type date_created: str
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ApiV2010AccountConference.

        The date and time in GMT that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this ApiV2010AccountConference.
        :rtype: str
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ApiV2010AccountConference.

        The date and time in GMT that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this ApiV2010AccountConference.
        :type date_updated: str
        """

        self._date_updated = date_updated

    @property
    def friendly_name(self):
        """Gets the friendly_name of this ApiV2010AccountConference.

        A string that you assigned to describe this conference room. Maxiumum length is 128 characters.

        :return: The friendly_name of this ApiV2010AccountConference.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this ApiV2010AccountConference.

        A string that you assigned to describe this conference room. Maxiumum length is 128 characters.

        :param friendly_name: The friendly_name of this ApiV2010AccountConference.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def reason_conference_ended(self):
        """Gets the reason_conference_ended of this ApiV2010AccountConference.


        :return: The reason_conference_ended of this ApiV2010AccountConference.
        :rtype: ConferenceEnumReasonConferenceEnded
        """
        return self._reason_conference_ended

    @reason_conference_ended.setter
    def reason_conference_ended(self, reason_conference_ended):
        """Sets the reason_conference_ended of this ApiV2010AccountConference.


        :param reason_conference_ended: The reason_conference_ended of this ApiV2010AccountConference.
        :type reason_conference_ended: ConferenceEnumReasonConferenceEnded
        """

        self._reason_conference_ended = reason_conference_ended

    @property
    def region(self):
        """Gets the region of this ApiV2010AccountConference.

        A string that represents the Twilio Region where the conference audio was mixed. May be `us1`, `ie1`,  `de1`, `sg1`, `br1`, `au1`, and `jp1`. Basic conference audio will always be mixed in `us1`. Global Conference audio will be mixed nearest to the majority of participants.

        :return: The region of this ApiV2010AccountConference.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this ApiV2010AccountConference.

        A string that represents the Twilio Region where the conference audio was mixed. May be `us1`, `ie1`,  `de1`, `sg1`, `br1`, `au1`, and `jp1`. Basic conference audio will always be mixed in `us1`. Global Conference audio will be mixed nearest to the majority of participants.

        :param region: The region of this ApiV2010AccountConference.
        :type region: str
        """

        self._region = region

    @property
    def sid(self):
        """Gets the sid of this ApiV2010AccountConference.

        The unique string that that we created to identify this Conference resource.

        :return: The sid of this ApiV2010AccountConference.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ApiV2010AccountConference.

        The unique string that that we created to identify this Conference resource.

        :param sid: The sid of this ApiV2010AccountConference.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^CF[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^CF[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def status(self):
        """Gets the status of this ApiV2010AccountConference.


        :return: The status of this ApiV2010AccountConference.
        :rtype: ConferenceEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApiV2010AccountConference.


        :param status: The status of this ApiV2010AccountConference.
        :type status: ConferenceEnumStatus
        """

        self._status = status

    @property
    def subresource_uris(self):
        """Gets the subresource_uris of this ApiV2010AccountConference.

        A list of related resources identified by their URIs relative to `https://api.twilio.com`.

        :return: The subresource_uris of this ApiV2010AccountConference.
        :rtype: object
        """
        return self._subresource_uris

    @subresource_uris.setter
    def subresource_uris(self, subresource_uris):
        """Sets the subresource_uris of this ApiV2010AccountConference.

        A list of related resources identified by their URIs relative to `https://api.twilio.com`.

        :param subresource_uris: The subresource_uris of this ApiV2010AccountConference.
        :type subresource_uris: object
        """

        self._subresource_uris = subresource_uris

    @property
    def uri(self):
        """Gets the uri of this ApiV2010AccountConference.

        The URI of this resource, relative to `https://api.twilio.com`.

        :return: The uri of this ApiV2010AccountConference.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ApiV2010AccountConference.

        The URI of this resource, relative to `https://api.twilio.com`.

        :param uri: The uri of this ApiV2010AccountConference.
        :type uri: str
        """

        self._uri = uri
