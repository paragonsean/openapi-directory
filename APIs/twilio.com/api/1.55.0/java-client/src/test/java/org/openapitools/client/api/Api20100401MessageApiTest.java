/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiV2010AccountMessage;
import java.math.BigDecimal;
import org.openapitools.client.model.ListMessageResponse;
import org.openapitools.client.model.MessageEnumAddressRetention;
import org.openapitools.client.model.MessageEnumContentRetention;
import org.openapitools.client.model.MessageEnumRiskCheck;
import org.openapitools.client.model.MessageEnumScheduleType;
import org.openapitools.client.model.MessageEnumUpdateStatus;
import java.time.OffsetDateTime;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for Api20100401MessageApi
 */
@Disabled
public class Api20100401MessageApiTest {

    private final Api20100401MessageApi api = new Api20100401MessageApi();

    /**
     * Send a message
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMessageTest() throws ApiException {
        String accountSid = null;
        String to = null;
        MessageEnumAddressRetention addressRetention = null;
        String applicationSid = null;
        Integer attempt = null;
        String body = null;
        MessageEnumContentRetention contentRetention = null;
        String contentSid = null;
        String contentVariables = null;
        Boolean forceDelivery = null;
        String from = null;
        BigDecimal maxPrice = null;
        List<URI> mediaUrl = null;
        String messagingServiceSid = null;
        List<String> persistentAction = null;
        Boolean provideFeedback = null;
        MessageEnumRiskCheck riskCheck = null;
        MessageEnumScheduleType scheduleType = null;
        Boolean sendAsMms = null;
        OffsetDateTime sendAt = null;
        Boolean shortenUrls = null;
        Boolean smartEncoded = null;
        URI statusCallback = null;
        Integer validityPeriod = null;
        ApiV2010AccountMessage response = api.createMessage(accountSid, to, addressRetention, applicationSid, attempt, body, contentRetention, contentSid, contentVariables, forceDelivery, from, maxPrice, mediaUrl, messagingServiceSid, persistentAction, provideFeedback, riskCheck, scheduleType, sendAsMms, sendAt, shortenUrls, smartEncoded, statusCallback, validityPeriod);
        // TODO: test validations
    }

    /**
     * Deletes a Message resource from your account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMessageTest() throws ApiException {
        String accountSid = null;
        String sid = null;
        api.deleteMessage(accountSid, sid);
        // TODO: test validations
    }

    /**
     * Fetch a specific Message
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchMessageTest() throws ApiException {
        String accountSid = null;
        String sid = null;
        ApiV2010AccountMessage response = api.fetchMessage(accountSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of Message resources associated with a Twilio Account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMessageTest() throws ApiException {
        String accountSid = null;
        String to = null;
        String from = null;
        OffsetDateTime dateSent = null;
        OffsetDateTime dateSentLessThan = null;
        OffsetDateTime dateSentGreaterThan = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListMessageResponse response = api.listMessage(accountSid, to, from, dateSent, dateSentLessThan, dateSentGreaterThan, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update a Message resource (used to redact Message &#x60;body&#x60; text and to cancel not-yet-sent messages)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMessageTest() throws ApiException {
        String accountSid = null;
        String sid = null;
        String body = null;
        MessageEnumUpdateStatus status = null;
        ApiV2010AccountMessage response = api.updateMessage(accountSid, sid, body, status);
        // TODO: test validations
    }

}
