/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiV2010AccountIncomingPhoneNumber;
import org.openapitools.client.model.IncomingPhoneNumberEnumEmergencyStatus;
import org.openapitools.client.model.IncomingPhoneNumberEnumVoiceReceiveMode;
import org.openapitools.client.model.ListIncomingPhoneNumberResponse;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for Api20100401IncomingPhoneNumberApi
 */
@Disabled
public class Api20100401IncomingPhoneNumberApiTest {

    private final Api20100401IncomingPhoneNumberApi api = new Api20100401IncomingPhoneNumberApi();

    /**
     * Purchase a phone-number for the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createIncomingPhoneNumberTest() throws ApiException {
        String accountSid = null;
        String addressSid = null;
        String apiVersion = null;
        String areaCode = null;
        String bundleSid = null;
        String emergencyAddressSid = null;
        IncomingPhoneNumberEnumEmergencyStatus emergencyStatus = null;
        String friendlyName = null;
        String identitySid = null;
        String phoneNumber = null;
        String smsApplicationSid = null;
        String smsFallbackMethod = null;
        URI smsFallbackUrl = null;
        String smsMethod = null;
        URI smsUrl = null;
        URI statusCallback = null;
        String statusCallbackMethod = null;
        String trunkSid = null;
        String voiceApplicationSid = null;
        Boolean voiceCallerIdLookup = null;
        String voiceFallbackMethod = null;
        URI voiceFallbackUrl = null;
        String voiceMethod = null;
        IncomingPhoneNumberEnumVoiceReceiveMode voiceReceiveMode = null;
        URI voiceUrl = null;
        ApiV2010AccountIncomingPhoneNumber response = api.createIncomingPhoneNumber(accountSid, addressSid, apiVersion, areaCode, bundleSid, emergencyAddressSid, emergencyStatus, friendlyName, identitySid, phoneNumber, smsApplicationSid, smsFallbackMethod, smsFallbackUrl, smsMethod, smsUrl, statusCallback, statusCallbackMethod, trunkSid, voiceApplicationSid, voiceCallerIdLookup, voiceFallbackMethod, voiceFallbackUrl, voiceMethod, voiceReceiveMode, voiceUrl);
        // TODO: test validations
    }

    /**
     * Delete a phone-numbers belonging to the account used to make the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteIncomingPhoneNumberTest() throws ApiException {
        String accountSid = null;
        String sid = null;
        api.deleteIncomingPhoneNumber(accountSid, sid);
        // TODO: test validations
    }

    /**
     * Fetch an incoming-phone-number belonging to the account used to make the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchIncomingPhoneNumberTest() throws ApiException {
        String accountSid = null;
        String sid = null;
        ApiV2010AccountIncomingPhoneNumber response = api.fetchIncomingPhoneNumber(accountSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of incoming-phone-numbers belonging to the account used to make the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listIncomingPhoneNumberTest() throws ApiException {
        String accountSid = null;
        Boolean beta = null;
        String friendlyName = null;
        String phoneNumber = null;
        String origin = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListIncomingPhoneNumberResponse response = api.listIncomingPhoneNumber(accountSid, beta, friendlyName, phoneNumber, origin, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update an incoming-phone-number instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateIncomingPhoneNumberTest() throws ApiException {
        String accountSid = null;
        String sid = null;
        String accountSid2 = null;
        String addressSid = null;
        String apiVersion = null;
        String bundleSid = null;
        String emergencyAddressSid = null;
        IncomingPhoneNumberEnumEmergencyStatus emergencyStatus = null;
        String friendlyName = null;
        String identitySid = null;
        String smsApplicationSid = null;
        String smsFallbackMethod = null;
        URI smsFallbackUrl = null;
        String smsMethod = null;
        URI smsUrl = null;
        URI statusCallback = null;
        String statusCallbackMethod = null;
        String trunkSid = null;
        String voiceApplicationSid = null;
        Boolean voiceCallerIdLookup = null;
        String voiceFallbackMethod = null;
        URI voiceFallbackUrl = null;
        String voiceMethod = null;
        IncomingPhoneNumberEnumVoiceReceiveMode voiceReceiveMode = null;
        URI voiceUrl = null;
        ApiV2010AccountIncomingPhoneNumber response = api.updateIncomingPhoneNumber(accountSid, sid, accountSid2, addressSid, apiVersion, bundleSid, emergencyAddressSid, emergencyStatus, friendlyName, identitySid, smsApplicationSid, smsFallbackMethod, smsFallbackUrl, smsMethod, smsUrl, statusCallback, statusCallbackMethod, trunkSid, voiceApplicationSid, voiceCallerIdLookup, voiceFallbackMethod, voiceFallbackUrl, voiceMethod, voiceReceiveMode, voiceUrl);
        // TODO: test validations
    }

}
