/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFree;
import org.openapitools.client.model.IncomingPhoneNumberTollFreeEnumEmergencyStatus;
import org.openapitools.client.model.IncomingPhoneNumberTollFreeEnumVoiceReceiveMode;
import org.openapitools.client.model.ListAvailablePhoneNumberTollFreeResponse;
import org.openapitools.client.model.ListIncomingPhoneNumberTollFreeResponse;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for Api20100401TollFreeApi
 */
@Disabled
public class Api20100401TollFreeApiTest {

    private final Api20100401TollFreeApi api = new Api20100401TollFreeApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createIncomingPhoneNumberTollFreeTest() throws ApiException {
        String accountSid = null;
        String phoneNumber = null;
        String addressSid = null;
        String apiVersion = null;
        String bundleSid = null;
        String emergencyAddressSid = null;
        IncomingPhoneNumberTollFreeEnumEmergencyStatus emergencyStatus = null;
        String friendlyName = null;
        String identitySid = null;
        String smsApplicationSid = null;
        String smsFallbackMethod = null;
        URI smsFallbackUrl = null;
        String smsMethod = null;
        URI smsUrl = null;
        URI statusCallback = null;
        String statusCallbackMethod = null;
        String trunkSid = null;
        String voiceApplicationSid = null;
        Boolean voiceCallerIdLookup = null;
        String voiceFallbackMethod = null;
        URI voiceFallbackUrl = null;
        String voiceMethod = null;
        IncomingPhoneNumberTollFreeEnumVoiceReceiveMode voiceReceiveMode = null;
        URI voiceUrl = null;
        ApiV2010AccountIncomingPhoneNumberIncomingPhoneNumberTollFree response = api.createIncomingPhoneNumberTollFree(accountSid, phoneNumber, addressSid, apiVersion, bundleSid, emergencyAddressSid, emergencyStatus, friendlyName, identitySid, smsApplicationSid, smsFallbackMethod, smsFallbackUrl, smsMethod, smsUrl, statusCallback, statusCallbackMethod, trunkSid, voiceApplicationSid, voiceCallerIdLookup, voiceFallbackMethod, voiceFallbackUrl, voiceMethod, voiceReceiveMode, voiceUrl);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAvailablePhoneNumberTollFreeTest() throws ApiException {
        String accountSid = null;
        String countryCode = null;
        Integer areaCode = null;
        String contains = null;
        Boolean smsEnabled = null;
        Boolean mmsEnabled = null;
        Boolean voiceEnabled = null;
        Boolean excludeAllAddressRequired = null;
        Boolean excludeLocalAddressRequired = null;
        Boolean excludeForeignAddressRequired = null;
        Boolean beta = null;
        String nearNumber = null;
        String nearLatLong = null;
        Integer distance = null;
        String inPostalCode = null;
        String inRegion = null;
        String inRateCenter = null;
        String inLata = null;
        String inLocality = null;
        Boolean faxEnabled = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListAvailablePhoneNumberTollFreeResponse response = api.listAvailablePhoneNumberTollFree(accountSid, countryCode, areaCode, contains, smsEnabled, mmsEnabled, voiceEnabled, excludeAllAddressRequired, excludeLocalAddressRequired, excludeForeignAddressRequired, beta, nearNumber, nearLatLong, distance, inPostalCode, inRegion, inRateCenter, inLata, inLocality, faxEnabled, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listIncomingPhoneNumberTollFreeTest() throws ApiException {
        String accountSid = null;
        Boolean beta = null;
        String friendlyName = null;
        String phoneNumber = null;
        String origin = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListIncomingPhoneNumberTollFreeResponse response = api.listIncomingPhoneNumberTollFree(accountSid, beta, friendlyName, phoneNumber, origin, pageSize, page, pageToken);
        // TODO: test validations
    }

}
