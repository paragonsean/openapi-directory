/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiV2010AccountApplication;
import org.openapitools.client.model.ListApplicationResponse;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for Api20100401ApplicationApi
 */
@Disabled
public class Api20100401ApplicationApiTest {

    private final Api20100401ApplicationApi api = new Api20100401ApplicationApi();

    /**
     * Create a new application within your account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createApplicationTest() throws ApiException {
        String accountSid = null;
        String apiVersion = null;
        String friendlyName = null;
        URI messageStatusCallback = null;
        Boolean publicApplicationConnectEnabled = null;
        String smsFallbackMethod = null;
        URI smsFallbackUrl = null;
        String smsMethod = null;
        URI smsStatusCallback = null;
        URI smsUrl = null;
        URI statusCallback = null;
        String statusCallbackMethod = null;
        Boolean voiceCallerIdLookup = null;
        String voiceFallbackMethod = null;
        URI voiceFallbackUrl = null;
        String voiceMethod = null;
        URI voiceUrl = null;
        ApiV2010AccountApplication response = api.createApplication(accountSid, apiVersion, friendlyName, messageStatusCallback, publicApplicationConnectEnabled, smsFallbackMethod, smsFallbackUrl, smsMethod, smsStatusCallback, smsUrl, statusCallback, statusCallbackMethod, voiceCallerIdLookup, voiceFallbackMethod, voiceFallbackUrl, voiceMethod, voiceUrl);
        // TODO: test validations
    }

    /**
     * Delete the application by the specified application sid
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteApplicationTest() throws ApiException {
        String accountSid = null;
        String sid = null;
        api.deleteApplication(accountSid, sid);
        // TODO: test validations
    }

    /**
     * Fetch the application specified by the provided sid
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchApplicationTest() throws ApiException {
        String accountSid = null;
        String sid = null;
        ApiV2010AccountApplication response = api.fetchApplication(accountSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of applications representing an application within the requesting account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listApplicationTest() throws ApiException {
        String accountSid = null;
        String friendlyName = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListApplicationResponse response = api.listApplication(accountSid, friendlyName, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Updates the application&#39;s properties
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateApplicationTest() throws ApiException {
        String accountSid = null;
        String sid = null;
        String apiVersion = null;
        String friendlyName = null;
        URI messageStatusCallback = null;
        Boolean publicApplicationConnectEnabled = null;
        String smsFallbackMethod = null;
        URI smsFallbackUrl = null;
        String smsMethod = null;
        URI smsStatusCallback = null;
        URI smsUrl = null;
        URI statusCallback = null;
        String statusCallbackMethod = null;
        Boolean voiceCallerIdLookup = null;
        String voiceFallbackMethod = null;
        URI voiceFallbackUrl = null;
        String voiceMethod = null;
        URI voiceUrl = null;
        ApiV2010AccountApplication response = api.updateApplication(accountSid, sid, apiVersion, friendlyName, messageStatusCallback, publicApplicationConnectEnabled, smsFallbackMethod, smsFallbackUrl, smsMethod, smsStatusCallback, smsUrl, statusCallback, statusCallbackMethod, voiceCallerIdLookup, voiceFallbackMethod, voiceFallbackUrl, voiceMethod, voiceUrl);
        // TODO: test validations
    }

}
