/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CallEnumStatus;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiV2010AccountCall
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:00.794253-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiV2010AccountCall {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ANSWERED_BY = "answered_by";
  @SerializedName(SERIALIZED_NAME_ANSWERED_BY)
  private String answeredBy;

  public static final String SERIALIZED_NAME_API_VERSION = "api_version";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  private String apiVersion;

  public static final String SERIALIZED_NAME_CALLER_NAME = "caller_name";
  @SerializedName(SERIALIZED_NAME_CALLER_NAME)
  private String callerName;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private String dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private String dateUpdated;

  public static final String SERIALIZED_NAME_DIRECTION = "direction";
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  private String direction;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private String duration;

  public static final String SERIALIZED_NAME_END_TIME = "end_time";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_FORWARDED_FROM = "forwarded_from";
  @SerializedName(SERIALIZED_NAME_FORWARDED_FROM)
  private String forwardedFrom;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private String from;

  public static final String SERIALIZED_NAME_FROM_FORMATTED = "from_formatted";
  @SerializedName(SERIALIZED_NAME_FROM_FORMATTED)
  private String fromFormatted;

  public static final String SERIALIZED_NAME_GROUP_SID = "group_sid";
  @SerializedName(SERIALIZED_NAME_GROUP_SID)
  private String groupSid;

  public static final String SERIALIZED_NAME_PARENT_CALL_SID = "parent_call_sid";
  @SerializedName(SERIALIZED_NAME_PARENT_CALL_SID)
  private String parentCallSid;

  public static final String SERIALIZED_NAME_PHONE_NUMBER_SID = "phone_number_sid";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER_SID)
  private String phoneNumberSid;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private String price;

  public static final String SERIALIZED_NAME_PRICE_UNIT = "price_unit";
  @SerializedName(SERIALIZED_NAME_PRICE_UNIT)
  private String priceUnit;

  public static final String SERIALIZED_NAME_QUEUE_TIME = "queue_time";
  @SerializedName(SERIALIZED_NAME_QUEUE_TIME)
  private String queueTime;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private CallEnumStatus status;

  public static final String SERIALIZED_NAME_SUBRESOURCE_URIS = "subresource_uris";
  @SerializedName(SERIALIZED_NAME_SUBRESOURCE_URIS)
  private Object subresourceUris;

  public static final String SERIALIZED_NAME_TO = "to";
  @SerializedName(SERIALIZED_NAME_TO)
  private String to;

  public static final String SERIALIZED_NAME_TO_FORMATTED = "to_formatted";
  @SerializedName(SERIALIZED_NAME_TO_FORMATTED)
  private String toFormatted;

  public static final String SERIALIZED_NAME_TRUNK_SID = "trunk_sid";
  @SerializedName(SERIALIZED_NAME_TRUNK_SID)
  private String trunkSid;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public ApiV2010AccountCall() {
  }

  public ApiV2010AccountCall accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this Call resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public ApiV2010AccountCall answeredBy(String answeredBy) {
    this.answeredBy = answeredBy;
    return this;
  }

  /**
   * Either &#x60;human&#x60; or &#x60;machine&#x60; if this call was initiated with answering machine detection. Empty otherwise.
   * @return answeredBy
   */
  @javax.annotation.Nullable
  public String getAnsweredBy() {
    return answeredBy;
  }

  public void setAnsweredBy(String answeredBy) {
    this.answeredBy = answeredBy;
  }


  public ApiV2010AccountCall apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

  /**
   * The API version used to create the call.
   * @return apiVersion
   */
  @javax.annotation.Nullable
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }


  public ApiV2010AccountCall callerName(String callerName) {
    this.callerName = callerName;
    return this;
  }

  /**
   * The caller&#39;s name if this call was an incoming call to a phone number with caller ID Lookup enabled. Otherwise, empty.
   * @return callerName
   */
  @javax.annotation.Nullable
  public String getCallerName() {
    return callerName;
  }

  public void setCallerName(String callerName) {
    this.callerName = callerName;
  }


  public ApiV2010AccountCall dateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT that this resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public String getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ApiV2010AccountCall dateUpdated(String dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT that this resource was last updated, specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public String getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(String dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public ApiV2010AccountCall direction(String direction) {
    this.direction = direction;
    return this;
  }

  /**
   * A string describing the direction of the call. Can be: &#x60;inbound&#x60; for inbound calls, &#x60;outbound-api&#x60; for calls initiated via the REST API or &#x60;outbound-dial&#x60; for calls initiated by a &#x60;&lt;Dial&gt;&#x60; verb. Using [Elastic SIP Trunking](https://www.twilio.com/docs/sip-trunking), the values can be [&#x60;trunking-terminating&#x60;](https://www.twilio.com/docs/sip-trunking#termination) for outgoing calls from your communications infrastructure to the PSTN or [&#x60;trunking-originating&#x60;](https://www.twilio.com/docs/sip-trunking#origination) for incoming calls to your communications infrastructure from the PSTN.
   * @return direction
   */
  @javax.annotation.Nullable
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }


  public ApiV2010AccountCall duration(String duration) {
    this.duration = duration;
    return this;
  }

  /**
   * The length of the call in seconds. This value is empty for busy, failed, unanswered, or ongoing calls.
   * @return duration
   */
  @javax.annotation.Nullable
  public String getDuration() {
    return duration;
  }

  public void setDuration(String duration) {
    this.duration = duration;
  }


  public ApiV2010AccountCall endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * The time the call ended, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format. Empty if the call did not complete successfully.
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }


  public ApiV2010AccountCall forwardedFrom(String forwardedFrom) {
    this.forwardedFrom = forwardedFrom;
    return this;
  }

  /**
   * The forwarding phone number if this call was an incoming call forwarded from another number (depends on carrier supporting forwarding). Otherwise, empty.
   * @return forwardedFrom
   */
  @javax.annotation.Nullable
  public String getForwardedFrom() {
    return forwardedFrom;
  }

  public void setForwardedFrom(String forwardedFrom) {
    this.forwardedFrom = forwardedFrom;
  }


  public ApiV2010AccountCall from(String from) {
    this.from = from;
    return this;
  }

  /**
   * The phone number, SIP address, Client identifier or SIM SID that made this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). SIP addresses are formatted as &#x60;name@company.com&#x60;. Client identifiers are formatted &#x60;client:name&#x60;. SIM SIDs are formatted as &#x60;sim:sid&#x60;.
   * @return from
   */
  @javax.annotation.Nullable
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }


  public ApiV2010AccountCall fromFormatted(String fromFormatted) {
    this.fromFormatted = fromFormatted;
    return this;
  }

  /**
   * The calling phone number, SIP address, or Client identifier formatted for display. Non-North American phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +442071838750).
   * @return fromFormatted
   */
  @javax.annotation.Nullable
  public String getFromFormatted() {
    return fromFormatted;
  }

  public void setFromFormatted(String fromFormatted) {
    this.fromFormatted = fromFormatted;
  }


  public ApiV2010AccountCall groupSid(String groupSid) {
    this.groupSid = groupSid;
    return this;
  }

  /**
   * The Group SID associated with this call. If no Group is associated with the call, the field is empty.
   * @return groupSid
   */
  @javax.annotation.Nullable
  public String getGroupSid() {
    return groupSid;
  }

  public void setGroupSid(String groupSid) {
    this.groupSid = groupSid;
  }


  public ApiV2010AccountCall parentCallSid(String parentCallSid) {
    this.parentCallSid = parentCallSid;
    return this;
  }

  /**
   * The SID that identifies the call that created this leg.
   * @return parentCallSid
   */
  @javax.annotation.Nullable
  public String getParentCallSid() {
    return parentCallSid;
  }

  public void setParentCallSid(String parentCallSid) {
    this.parentCallSid = parentCallSid;
  }


  public ApiV2010AccountCall phoneNumberSid(String phoneNumberSid) {
    this.phoneNumberSid = phoneNumberSid;
    return this;
  }

  /**
   * If the call was inbound, this is the SID of the IncomingPhoneNumber resource that received the call. If the call was outbound, it is the SID of the OutgoingCallerId resource from which the call was placed.
   * @return phoneNumberSid
   */
  @javax.annotation.Nullable
  public String getPhoneNumberSid() {
    return phoneNumberSid;
  }

  public void setPhoneNumberSid(String phoneNumberSid) {
    this.phoneNumberSid = phoneNumberSid;
  }


  public ApiV2010AccountCall price(String price) {
    this.price = price;
    return this;
  }

  /**
   * The charge for this call, in the currency associated with the account. Populated after the call is completed. May not be immediately available.
   * @return price
   */
  @javax.annotation.Nullable
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }


  public ApiV2010AccountCall priceUnit(String priceUnit) {
    this.priceUnit = priceUnit;
    return this;
  }

  /**
   * The currency in which &#x60;Price&#x60; is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g., &#x60;USD&#x60;, &#x60;EUR&#x60;, &#x60;JPY&#x60;). Always capitalized for calls.
   * @return priceUnit
   */
  @javax.annotation.Nullable
  public String getPriceUnit() {
    return priceUnit;
  }

  public void setPriceUnit(String priceUnit) {
    this.priceUnit = priceUnit;
  }


  public ApiV2010AccountCall queueTime(String queueTime) {
    this.queueTime = queueTime;
    return this;
  }

  /**
   * The wait time in milliseconds before the call is placed.
   * @return queueTime
   */
  @javax.annotation.Nullable
  public String getQueueTime() {
    return queueTime;
  }

  public void setQueueTime(String queueTime) {
    this.queueTime = queueTime;
  }


  public ApiV2010AccountCall sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify this Call resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public ApiV2010AccountCall startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * The start time of the call, given as GMT in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format. Empty if the call has not yet been dialed.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public ApiV2010AccountCall status(CallEnumStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public CallEnumStatus getStatus() {
    return status;
  }

  public void setStatus(CallEnumStatus status) {
    this.status = status;
  }


  public ApiV2010AccountCall subresourceUris(Object subresourceUris) {
    this.subresourceUris = subresourceUris;
    return this;
  }

  /**
   * A list of subresources available to this call, identified by their URIs relative to &#x60;https://api.twilio.com&#x60;.
   * @return subresourceUris
   */
  @javax.annotation.Nullable
  public Object getSubresourceUris() {
    return subresourceUris;
  }

  public void setSubresourceUris(Object subresourceUris) {
    this.subresourceUris = subresourceUris;
  }


  public ApiV2010AccountCall to(String to) {
    this.to = to;
    return this;
  }

  /**
   * The phone number, SIP address, Client identifier or SIM SID that received this call. Phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +16175551212). SIP addresses are formatted as &#x60;name@company.com&#x60;. Client identifiers are formatted &#x60;client:name&#x60;. SIM SIDs are formatted as &#x60;sim:sid&#x60;.
   * @return to
   */
  @javax.annotation.Nullable
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }


  public ApiV2010AccountCall toFormatted(String toFormatted) {
    this.toFormatted = toFormatted;
    return this;
  }

  /**
   * The phone number, SIP address or Client identifier that received this call. Formatted for display. Non-North American phone numbers are in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (e.g., +442071838750).
   * @return toFormatted
   */
  @javax.annotation.Nullable
  public String getToFormatted() {
    return toFormatted;
  }

  public void setToFormatted(String toFormatted) {
    this.toFormatted = toFormatted;
  }


  public ApiV2010AccountCall trunkSid(String trunkSid) {
    this.trunkSid = trunkSid;
    return this;
  }

  /**
   * The unique identifier of the trunk resource that was used for this call. The field is empty if the call was not made using a SIP trunk or if the call is not terminated.
   * @return trunkSid
   */
  @javax.annotation.Nullable
  public String getTrunkSid() {
    return trunkSid;
  }

  public void setTrunkSid(String trunkSid) {
    this.trunkSid = trunkSid;
  }


  public ApiV2010AccountCall uri(String uri) {
    this.uri = uri;
    return this;
  }

  /**
   * The URI of this resource, relative to &#x60;https://api.twilio.com&#x60;.
   * @return uri
   */
  @javax.annotation.Nullable
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiV2010AccountCall apiV2010AccountCall = (ApiV2010AccountCall) o;
    return Objects.equals(this.accountSid, apiV2010AccountCall.accountSid) &&
        Objects.equals(this.answeredBy, apiV2010AccountCall.answeredBy) &&
        Objects.equals(this.apiVersion, apiV2010AccountCall.apiVersion) &&
        Objects.equals(this.callerName, apiV2010AccountCall.callerName) &&
        Objects.equals(this.dateCreated, apiV2010AccountCall.dateCreated) &&
        Objects.equals(this.dateUpdated, apiV2010AccountCall.dateUpdated) &&
        Objects.equals(this.direction, apiV2010AccountCall.direction) &&
        Objects.equals(this.duration, apiV2010AccountCall.duration) &&
        Objects.equals(this.endTime, apiV2010AccountCall.endTime) &&
        Objects.equals(this.forwardedFrom, apiV2010AccountCall.forwardedFrom) &&
        Objects.equals(this.from, apiV2010AccountCall.from) &&
        Objects.equals(this.fromFormatted, apiV2010AccountCall.fromFormatted) &&
        Objects.equals(this.groupSid, apiV2010AccountCall.groupSid) &&
        Objects.equals(this.parentCallSid, apiV2010AccountCall.parentCallSid) &&
        Objects.equals(this.phoneNumberSid, apiV2010AccountCall.phoneNumberSid) &&
        Objects.equals(this.price, apiV2010AccountCall.price) &&
        Objects.equals(this.priceUnit, apiV2010AccountCall.priceUnit) &&
        Objects.equals(this.queueTime, apiV2010AccountCall.queueTime) &&
        Objects.equals(this.sid, apiV2010AccountCall.sid) &&
        Objects.equals(this.startTime, apiV2010AccountCall.startTime) &&
        Objects.equals(this.status, apiV2010AccountCall.status) &&
        Objects.equals(this.subresourceUris, apiV2010AccountCall.subresourceUris) &&
        Objects.equals(this.to, apiV2010AccountCall.to) &&
        Objects.equals(this.toFormatted, apiV2010AccountCall.toFormatted) &&
        Objects.equals(this.trunkSid, apiV2010AccountCall.trunkSid) &&
        Objects.equals(this.uri, apiV2010AccountCall.uri);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, answeredBy, apiVersion, callerName, dateCreated, dateUpdated, direction, duration, endTime, forwardedFrom, from, fromFormatted, groupSid, parentCallSid, phoneNumberSid, price, priceUnit, queueTime, sid, startTime, status, subresourceUris, to, toFormatted, trunkSid, uri);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiV2010AccountCall {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    answeredBy: ").append(toIndentedString(answeredBy)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    callerName: ").append(toIndentedString(callerName)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    forwardedFrom: ").append(toIndentedString(forwardedFrom)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    fromFormatted: ").append(toIndentedString(fromFormatted)).append("\n");
    sb.append("    groupSid: ").append(toIndentedString(groupSid)).append("\n");
    sb.append("    parentCallSid: ").append(toIndentedString(parentCallSid)).append("\n");
    sb.append("    phoneNumberSid: ").append(toIndentedString(phoneNumberSid)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceUnit: ").append(toIndentedString(priceUnit)).append("\n");
    sb.append("    queueTime: ").append(toIndentedString(queueTime)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subresourceUris: ").append(toIndentedString(subresourceUris)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    toFormatted: ").append(toIndentedString(toFormatted)).append("\n");
    sb.append("    trunkSid: ").append(toIndentedString(trunkSid)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("answered_by");
    openapiFields.add("api_version");
    openapiFields.add("caller_name");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("direction");
    openapiFields.add("duration");
    openapiFields.add("end_time");
    openapiFields.add("forwarded_from");
    openapiFields.add("from");
    openapiFields.add("from_formatted");
    openapiFields.add("group_sid");
    openapiFields.add("parent_call_sid");
    openapiFields.add("phone_number_sid");
    openapiFields.add("price");
    openapiFields.add("price_unit");
    openapiFields.add("queue_time");
    openapiFields.add("sid");
    openapiFields.add("start_time");
    openapiFields.add("status");
    openapiFields.add("subresource_uris");
    openapiFields.add("to");
    openapiFields.add("to_formatted");
    openapiFields.add("trunk_sid");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiV2010AccountCall
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiV2010AccountCall.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiV2010AccountCall is not found in the empty JSON string", ApiV2010AccountCall.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiV2010AccountCall.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiV2010AccountCall` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("answered_by") != null && !jsonObj.get("answered_by").isJsonNull()) && !jsonObj.get("answered_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `answered_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("answered_by").toString()));
      }
      if ((jsonObj.get("api_version") != null && !jsonObj.get("api_version").isJsonNull()) && !jsonObj.get("api_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_version").toString()));
      }
      if ((jsonObj.get("caller_name") != null && !jsonObj.get("caller_name").isJsonNull()) && !jsonObj.get("caller_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caller_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caller_name").toString()));
      }
      if ((jsonObj.get("date_created") != null && !jsonObj.get("date_created").isJsonNull()) && !jsonObj.get("date_created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_created").toString()));
      }
      if ((jsonObj.get("date_updated") != null && !jsonObj.get("date_updated").isJsonNull()) && !jsonObj.get("date_updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_updated").toString()));
      }
      if ((jsonObj.get("direction") != null && !jsonObj.get("direction").isJsonNull()) && !jsonObj.get("direction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `direction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("direction").toString()));
      }
      if ((jsonObj.get("duration") != null && !jsonObj.get("duration").isJsonNull()) && !jsonObj.get("duration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `duration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("duration").toString()));
      }
      if ((jsonObj.get("end_time") != null && !jsonObj.get("end_time").isJsonNull()) && !jsonObj.get("end_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `end_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("end_time").toString()));
      }
      if ((jsonObj.get("forwarded_from") != null && !jsonObj.get("forwarded_from").isJsonNull()) && !jsonObj.get("forwarded_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `forwarded_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("forwarded_from").toString()));
      }
      if ((jsonObj.get("from") != null && !jsonObj.get("from").isJsonNull()) && !jsonObj.get("from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from").toString()));
      }
      if ((jsonObj.get("from_formatted") != null && !jsonObj.get("from_formatted").isJsonNull()) && !jsonObj.get("from_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from_formatted").toString()));
      }
      if ((jsonObj.get("group_sid") != null && !jsonObj.get("group_sid").isJsonNull()) && !jsonObj.get("group_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `group_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("group_sid").toString()));
      }
      if ((jsonObj.get("parent_call_sid") != null && !jsonObj.get("parent_call_sid").isJsonNull()) && !jsonObj.get("parent_call_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent_call_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent_call_sid").toString()));
      }
      if ((jsonObj.get("phone_number_sid") != null && !jsonObj.get("phone_number_sid").isJsonNull()) && !jsonObj.get("phone_number_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone_number_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone_number_sid").toString()));
      }
      if ((jsonObj.get("price") != null && !jsonObj.get("price").isJsonNull()) && !jsonObj.get("price").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `price` to be a primitive type in the JSON string but got `%s`", jsonObj.get("price").toString()));
      }
      if ((jsonObj.get("price_unit") != null && !jsonObj.get("price_unit").isJsonNull()) && !jsonObj.get("price_unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `price_unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("price_unit").toString()));
      }
      if ((jsonObj.get("queue_time") != null && !jsonObj.get("queue_time").isJsonNull()) && !jsonObj.get("queue_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queue_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queue_time").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("start_time") != null && !jsonObj.get("start_time").isJsonNull()) && !jsonObj.get("start_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `start_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("start_time").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        CallEnumStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("to") != null && !jsonObj.get("to").isJsonNull()) && !jsonObj.get("to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to").toString()));
      }
      if ((jsonObj.get("to_formatted") != null && !jsonObj.get("to_formatted").isJsonNull()) && !jsonObj.get("to_formatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `to_formatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to_formatted").toString()));
      }
      if ((jsonObj.get("trunk_sid") != null && !jsonObj.get("trunk_sid").isJsonNull()) && !jsonObj.get("trunk_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trunk_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trunk_sid").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiV2010AccountCall.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiV2010AccountCall' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiV2010AccountCall> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiV2010AccountCall.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiV2010AccountCall>() {
           @Override
           public void write(JsonWriter out, ApiV2010AccountCall value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiV2010AccountCall read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiV2010AccountCall given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiV2010AccountCall
   * @throws IOException if the JSON string is invalid with respect to ApiV2010AccountCall
   */
  public static ApiV2010AccountCall fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiV2010AccountCall.class);
  }

  /**
   * Convert an instance of ApiV2010AccountCall to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

