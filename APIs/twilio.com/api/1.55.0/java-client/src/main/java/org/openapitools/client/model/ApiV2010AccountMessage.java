/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.MessageEnumDirection;
import org.openapitools.client.model.MessageEnumStatus;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiV2010AccountMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:00.794253-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiV2010AccountMessage {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_API_VERSION = "api_version";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  private String apiVersion;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private String dateCreated;

  public static final String SERIALIZED_NAME_DATE_SENT = "date_sent";
  @SerializedName(SERIALIZED_NAME_DATE_SENT)
  private String dateSent;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private String dateUpdated;

  public static final String SERIALIZED_NAME_DIRECTION = "direction";
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  private MessageEnumDirection direction;

  public static final String SERIALIZED_NAME_ERROR_CODE = "error_code";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private Integer errorCode;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "error_message";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private String from;

  public static final String SERIALIZED_NAME_MESSAGING_SERVICE_SID = "messaging_service_sid";
  @SerializedName(SERIALIZED_NAME_MESSAGING_SERVICE_SID)
  private String messagingServiceSid;

  public static final String SERIALIZED_NAME_NUM_MEDIA = "num_media";
  @SerializedName(SERIALIZED_NAME_NUM_MEDIA)
  private String numMedia;

  public static final String SERIALIZED_NAME_NUM_SEGMENTS = "num_segments";
  @SerializedName(SERIALIZED_NAME_NUM_SEGMENTS)
  private String numSegments;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private String price;

  public static final String SERIALIZED_NAME_PRICE_UNIT = "price_unit";
  @SerializedName(SERIALIZED_NAME_PRICE_UNIT)
  private String priceUnit;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private MessageEnumStatus status;

  public static final String SERIALIZED_NAME_SUBRESOURCE_URIS = "subresource_uris";
  @SerializedName(SERIALIZED_NAME_SUBRESOURCE_URIS)
  private Object subresourceUris;

  public static final String SERIALIZED_NAME_TO = "to";
  @SerializedName(SERIALIZED_NAME_TO)
  private String to;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public ApiV2010AccountMessage() {
  }

  public ApiV2010AccountMessage accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public ApiV2010AccountMessage apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

  /**
   * The API version used to process the Message
   * @return apiVersion
   */
  @javax.annotation.Nullable
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }


  public ApiV2010AccountMessage body(String body) {
    this.body = body;
    return this;
  }

  /**
   * The text content of the message
   * @return body
   */
  @javax.annotation.Nullable
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }


  public ApiV2010AccountMessage dateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822#section-3.3) timestamp (in GMT) of when the Message resource was created
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public String getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ApiV2010AccountMessage dateSent(String dateSent) {
    this.dateSent = dateSent;
    return this;
  }

  /**
   * The [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822#section-3.3) timestamp (in GMT) of when the Message was sent. For an outgoing message, this is when Twilio sent the message. For an incoming message, this is when Twilio sent the HTTP request to your incoming message webhook URL.
   * @return dateSent
   */
  @javax.annotation.Nullable
  public String getDateSent() {
    return dateSent;
  }

  public void setDateSent(String dateSent) {
    this.dateSent = dateSent;
  }


  public ApiV2010AccountMessage dateUpdated(String dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The [RFC 2822](https://datatracker.ietf.org/doc/html/rfc2822#section-3.3) timestamp (in GMT) of when the Message resource was last updated
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public String getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(String dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public ApiV2010AccountMessage direction(MessageEnumDirection direction) {
    this.direction = direction;
    return this;
  }

  /**
   * Get direction
   * @return direction
   */
  @javax.annotation.Nullable
  public MessageEnumDirection getDirection() {
    return direction;
  }

  public void setDirection(MessageEnumDirection direction) {
    this.direction = direction;
  }


  public ApiV2010AccountMessage errorCode(Integer errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * The [error code](https://www.twilio.com/docs/api/errors) returned if the Message &#x60;status&#x60; is &#x60;failed&#x60; or &#x60;undelivered&#x60;. If no error was encountered, the value is &#x60;null&#x60;.
   * @return errorCode
   */
  @javax.annotation.Nullable
  public Integer getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(Integer errorCode) {
    this.errorCode = errorCode;
  }


  public ApiV2010AccountMessage errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * The description of the &#x60;error_code&#x60; if the Message &#x60;status&#x60; is &#x60;failed&#x60; or &#x60;undelivered&#x60;. If no error was encountered, the value is &#x60;null&#x60;.
   * @return errorMessage
   */
  @javax.annotation.Nullable
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public ApiV2010AccountMessage from(String from) {
    this.from = from;
    return this;
  }

  /**
   * The sender&#39;s phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format), [alphanumeric sender ID](https://www.twilio.com/docs/sms/quickstart), [Wireless SIM](https://www.twilio.com/docs/iot/wireless/programmable-wireless-send-machine-machine-sms-commands), [short code](https://www.twilio.com/en-us/messaging/channels/sms/short-codes), or  [channel address](https://www.twilio.com/docs/messaging/channels) (e.g., &#x60;whatsapp:+15554449999&#x60;). For incoming messages, this is the number or channel address of the sender. For outgoing messages, this value is a Twilio phone number, alphanumeric sender ID, short code, or channel address from which the message is sent.
   * @return from
   */
  @javax.annotation.Nullable
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }


  public ApiV2010AccountMessage messagingServiceSid(String messagingServiceSid) {
    this.messagingServiceSid = messagingServiceSid;
    return this;
  }

  /**
   * The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) associated with the Message resource. The value is &#x60;null&#x60; if a Messaging Service was not used.
   * @return messagingServiceSid
   */
  @javax.annotation.Nullable
  public String getMessagingServiceSid() {
    return messagingServiceSid;
  }

  public void setMessagingServiceSid(String messagingServiceSid) {
    this.messagingServiceSid = messagingServiceSid;
  }


  public ApiV2010AccountMessage numMedia(String numMedia) {
    this.numMedia = numMedia;
    return this;
  }

  /**
   * The number of media files associated with the Message resource.
   * @return numMedia
   */
  @javax.annotation.Nullable
  public String getNumMedia() {
    return numMedia;
  }

  public void setNumMedia(String numMedia) {
    this.numMedia = numMedia;
  }


  public ApiV2010AccountMessage numSegments(String numSegments) {
    this.numSegments = numSegments;
    return this;
  }

  /**
   * The number of segments that make up the complete message. SMS message bodies that exceed the [character limit](https://www.twilio.com/docs/glossary/what-sms-character-limit) are segmented and charged as multiple messages. Note: For messages sent via a Messaging Service, &#x60;num_segments&#x60; is initially &#x60;0&#x60;, since a sender hasn&#39;t yet been assigned.
   * @return numSegments
   */
  @javax.annotation.Nullable
  public String getNumSegments() {
    return numSegments;
  }

  public void setNumSegments(String numSegments) {
    this.numSegments = numSegments;
  }


  public ApiV2010AccountMessage price(String price) {
    this.price = price;
    return this;
  }

  /**
   * The amount billed for the message in the currency specified by &#x60;price_unit&#x60;. The &#x60;price&#x60; is populated after the message has been sent/received, and may not be immediately availalble. View the [Pricing page](https://www.twilio.com/en-us/pricing) for more details.
   * @return price
   */
  @javax.annotation.Nullable
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }


  public ApiV2010AccountMessage priceUnit(String priceUnit) {
    this.priceUnit = priceUnit;
    return this;
  }

  /**
   * The currency in which &#x60;price&#x60; is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. &#x60;usd&#x60;, &#x60;eur&#x60;, &#x60;jpy&#x60;).
   * @return priceUnit
   */
  @javax.annotation.Nullable
  public String getPriceUnit() {
    return priceUnit;
  }

  public void setPriceUnit(String priceUnit) {
    this.priceUnit = priceUnit;
  }


  public ApiV2010AccountMessage sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique, Twilio-provided string that identifies the Message resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public ApiV2010AccountMessage status(MessageEnumStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public MessageEnumStatus getStatus() {
    return status;
  }

  public void setStatus(MessageEnumStatus status) {
    this.status = status;
  }


  public ApiV2010AccountMessage subresourceUris(Object subresourceUris) {
    this.subresourceUris = subresourceUris;
    return this;
  }

  /**
   * A list of related resources identified by their URIs relative to &#x60;https://api.twilio.com&#x60;
   * @return subresourceUris
   */
  @javax.annotation.Nullable
  public Object getSubresourceUris() {
    return subresourceUris;
  }

  public void setSubresourceUris(Object subresourceUris) {
    this.subresourceUris = subresourceUris;
  }


  public ApiV2010AccountMessage to(String to) {
    this.to = to;
    return this;
  }

  /**
   * The recipient&#39;s phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format) or [channel address](https://www.twilio.com/docs/messaging/channels) (e.g. &#x60;whatsapp:+15552229999&#x60;)
   * @return to
   */
  @javax.annotation.Nullable
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }


  public ApiV2010AccountMessage uri(String uri) {
    this.uri = uri;
    return this;
  }

  /**
   * The URI of the Message resource, relative to &#x60;https://api.twilio.com&#x60;.
   * @return uri
   */
  @javax.annotation.Nullable
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiV2010AccountMessage apiV2010AccountMessage = (ApiV2010AccountMessage) o;
    return Objects.equals(this.accountSid, apiV2010AccountMessage.accountSid) &&
        Objects.equals(this.apiVersion, apiV2010AccountMessage.apiVersion) &&
        Objects.equals(this.body, apiV2010AccountMessage.body) &&
        Objects.equals(this.dateCreated, apiV2010AccountMessage.dateCreated) &&
        Objects.equals(this.dateSent, apiV2010AccountMessage.dateSent) &&
        Objects.equals(this.dateUpdated, apiV2010AccountMessage.dateUpdated) &&
        Objects.equals(this.direction, apiV2010AccountMessage.direction) &&
        Objects.equals(this.errorCode, apiV2010AccountMessage.errorCode) &&
        Objects.equals(this.errorMessage, apiV2010AccountMessage.errorMessage) &&
        Objects.equals(this.from, apiV2010AccountMessage.from) &&
        Objects.equals(this.messagingServiceSid, apiV2010AccountMessage.messagingServiceSid) &&
        Objects.equals(this.numMedia, apiV2010AccountMessage.numMedia) &&
        Objects.equals(this.numSegments, apiV2010AccountMessage.numSegments) &&
        Objects.equals(this.price, apiV2010AccountMessage.price) &&
        Objects.equals(this.priceUnit, apiV2010AccountMessage.priceUnit) &&
        Objects.equals(this.sid, apiV2010AccountMessage.sid) &&
        Objects.equals(this.status, apiV2010AccountMessage.status) &&
        Objects.equals(this.subresourceUris, apiV2010AccountMessage.subresourceUris) &&
        Objects.equals(this.to, apiV2010AccountMessage.to) &&
        Objects.equals(this.uri, apiV2010AccountMessage.uri);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, apiVersion, body, dateCreated, dateSent, dateUpdated, direction, errorCode, errorMessage, from, messagingServiceSid, numMedia, numSegments, price, priceUnit, sid, status, subresourceUris, to, uri);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiV2010AccountMessage {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateSent: ").append(toIndentedString(dateSent)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    messagingServiceSid: ").append(toIndentedString(messagingServiceSid)).append("\n");
    sb.append("    numMedia: ").append(toIndentedString(numMedia)).append("\n");
    sb.append("    numSegments: ").append(toIndentedString(numSegments)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceUnit: ").append(toIndentedString(priceUnit)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subresourceUris: ").append(toIndentedString(subresourceUris)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("api_version");
    openapiFields.add("body");
    openapiFields.add("date_created");
    openapiFields.add("date_sent");
    openapiFields.add("date_updated");
    openapiFields.add("direction");
    openapiFields.add("error_code");
    openapiFields.add("error_message");
    openapiFields.add("from");
    openapiFields.add("messaging_service_sid");
    openapiFields.add("num_media");
    openapiFields.add("num_segments");
    openapiFields.add("price");
    openapiFields.add("price_unit");
    openapiFields.add("sid");
    openapiFields.add("status");
    openapiFields.add("subresource_uris");
    openapiFields.add("to");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiV2010AccountMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiV2010AccountMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiV2010AccountMessage is not found in the empty JSON string", ApiV2010AccountMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiV2010AccountMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiV2010AccountMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("api_version") != null && !jsonObj.get("api_version").isJsonNull()) && !jsonObj.get("api_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_version").toString()));
      }
      if ((jsonObj.get("body") != null && !jsonObj.get("body").isJsonNull()) && !jsonObj.get("body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body").toString()));
      }
      if ((jsonObj.get("date_created") != null && !jsonObj.get("date_created").isJsonNull()) && !jsonObj.get("date_created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_created").toString()));
      }
      if ((jsonObj.get("date_sent") != null && !jsonObj.get("date_sent").isJsonNull()) && !jsonObj.get("date_sent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_sent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_sent").toString()));
      }
      if ((jsonObj.get("date_updated") != null && !jsonObj.get("date_updated").isJsonNull()) && !jsonObj.get("date_updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_updated").toString()));
      }
      if ((jsonObj.get("direction") != null && !jsonObj.get("direction").isJsonNull()) && !jsonObj.get("direction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `direction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("direction").toString()));
      }
      // validate the optional field `direction`
      if (jsonObj.get("direction") != null && !jsonObj.get("direction").isJsonNull()) {
        MessageEnumDirection.validateJsonElement(jsonObj.get("direction"));
      }
      if ((jsonObj.get("error_message") != null && !jsonObj.get("error_message").isJsonNull()) && !jsonObj.get("error_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `error_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("error_message").toString()));
      }
      if ((jsonObj.get("from") != null && !jsonObj.get("from").isJsonNull()) && !jsonObj.get("from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from").toString()));
      }
      if ((jsonObj.get("messaging_service_sid") != null && !jsonObj.get("messaging_service_sid").isJsonNull()) && !jsonObj.get("messaging_service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messaging_service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messaging_service_sid").toString()));
      }
      if ((jsonObj.get("num_media") != null && !jsonObj.get("num_media").isJsonNull()) && !jsonObj.get("num_media").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `num_media` to be a primitive type in the JSON string but got `%s`", jsonObj.get("num_media").toString()));
      }
      if ((jsonObj.get("num_segments") != null && !jsonObj.get("num_segments").isJsonNull()) && !jsonObj.get("num_segments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `num_segments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("num_segments").toString()));
      }
      if ((jsonObj.get("price") != null && !jsonObj.get("price").isJsonNull()) && !jsonObj.get("price").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `price` to be a primitive type in the JSON string but got `%s`", jsonObj.get("price").toString()));
      }
      if ((jsonObj.get("price_unit") != null && !jsonObj.get("price_unit").isJsonNull()) && !jsonObj.get("price_unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `price_unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("price_unit").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        MessageEnumStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("to") != null && !jsonObj.get("to").isJsonNull()) && !jsonObj.get("to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiV2010AccountMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiV2010AccountMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiV2010AccountMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiV2010AccountMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiV2010AccountMessage>() {
           @Override
           public void write(JsonWriter out, ApiV2010AccountMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiV2010AccountMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiV2010AccountMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiV2010AccountMessage
   * @throws IOException if the JSON string is invalid with respect to ApiV2010AccountMessage
   */
  public static ApiV2010AccountMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiV2010AccountMessage.class);
  }

  /**
   * Convert an instance of ApiV2010AccountMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

