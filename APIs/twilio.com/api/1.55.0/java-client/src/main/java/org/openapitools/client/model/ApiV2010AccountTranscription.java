/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.TranscriptionEnumStatus;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiV2010AccountTranscription
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:00.794253-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiV2010AccountTranscription {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_API_VERSION = "api_version";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  private String apiVersion;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private String dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private String dateUpdated;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private String duration;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRICE_UNIT = "price_unit";
  @SerializedName(SERIALIZED_NAME_PRICE_UNIT)
  private String priceUnit;

  public static final String SERIALIZED_NAME_RECORDING_SID = "recording_sid";
  @SerializedName(SERIALIZED_NAME_RECORDING_SID)
  private String recordingSid;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private TranscriptionEnumStatus status;

  public static final String SERIALIZED_NAME_TRANSCRIPTION_TEXT = "transcription_text";
  @SerializedName(SERIALIZED_NAME_TRANSCRIPTION_TEXT)
  private String transcriptionText;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public ApiV2010AccountTranscription() {
  }

  public ApiV2010AccountTranscription accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Transcription resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public ApiV2010AccountTranscription apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

  /**
   * The API version used to create the transcription.
   * @return apiVersion
   */
  @javax.annotation.Nullable
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }


  public ApiV2010AccountTranscription dateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public String getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ApiV2010AccountTranscription dateUpdated(String dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public String getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(String dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public ApiV2010AccountTranscription duration(String duration) {
    this.duration = duration;
    return this;
  }

  /**
   * The duration of the transcribed audio in seconds.
   * @return duration
   */
  @javax.annotation.Nullable
  public String getDuration() {
    return duration;
  }

  public void setDuration(String duration) {
    this.duration = duration;
  }


  public ApiV2010AccountTranscription price(BigDecimal price) {
    this.price = price;
    return this;
  }

  /**
   * The charge for the transcript in the currency associated with the account. This value is populated after the transcript is complete so it may not be available immediately.
   * @return price
   */
  @javax.annotation.Nullable
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public ApiV2010AccountTranscription priceUnit(String priceUnit) {
    this.priceUnit = priceUnit;
    return this;
  }

  /**
   * The currency in which &#x60;price&#x60; is measured, in [ISO 4127](https://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. &#x60;usd&#x60;, &#x60;eur&#x60;, &#x60;jpy&#x60;).
   * @return priceUnit
   */
  @javax.annotation.Nullable
  public String getPriceUnit() {
    return priceUnit;
  }

  public void setPriceUnit(String priceUnit) {
    this.priceUnit = priceUnit;
  }


  public ApiV2010AccountTranscription recordingSid(String recordingSid) {
    this.recordingSid = recordingSid;
    return this;
  }

  /**
   * The SID of the [Recording](https://www.twilio.com/docs/voice/api/recording) from which the transcription was created.
   * @return recordingSid
   */
  @javax.annotation.Nullable
  public String getRecordingSid() {
    return recordingSid;
  }

  public void setRecordingSid(String recordingSid) {
    this.recordingSid = recordingSid;
  }


  public ApiV2010AccountTranscription sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that that we created to identify the Transcription resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public ApiV2010AccountTranscription status(TranscriptionEnumStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public TranscriptionEnumStatus getStatus() {
    return status;
  }

  public void setStatus(TranscriptionEnumStatus status) {
    this.status = status;
  }


  public ApiV2010AccountTranscription transcriptionText(String transcriptionText) {
    this.transcriptionText = transcriptionText;
    return this;
  }

  /**
   * The text content of the transcription.
   * @return transcriptionText
   */
  @javax.annotation.Nullable
  public String getTranscriptionText() {
    return transcriptionText;
  }

  public void setTranscriptionText(String transcriptionText) {
    this.transcriptionText = transcriptionText;
  }


  public ApiV2010AccountTranscription type(String type) {
    this.type = type;
    return this;
  }

  /**
   * The transcription type. Can only be: &#x60;fast&#x60;.
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public ApiV2010AccountTranscription uri(String uri) {
    this.uri = uri;
    return this;
  }

  /**
   * The URI of the resource, relative to &#x60;https://api.twilio.com&#x60;.
   * @return uri
   */
  @javax.annotation.Nullable
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiV2010AccountTranscription apiV2010AccountTranscription = (ApiV2010AccountTranscription) o;
    return Objects.equals(this.accountSid, apiV2010AccountTranscription.accountSid) &&
        Objects.equals(this.apiVersion, apiV2010AccountTranscription.apiVersion) &&
        Objects.equals(this.dateCreated, apiV2010AccountTranscription.dateCreated) &&
        Objects.equals(this.dateUpdated, apiV2010AccountTranscription.dateUpdated) &&
        Objects.equals(this.duration, apiV2010AccountTranscription.duration) &&
        Objects.equals(this.price, apiV2010AccountTranscription.price) &&
        Objects.equals(this.priceUnit, apiV2010AccountTranscription.priceUnit) &&
        Objects.equals(this.recordingSid, apiV2010AccountTranscription.recordingSid) &&
        Objects.equals(this.sid, apiV2010AccountTranscription.sid) &&
        Objects.equals(this.status, apiV2010AccountTranscription.status) &&
        Objects.equals(this.transcriptionText, apiV2010AccountTranscription.transcriptionText) &&
        Objects.equals(this.type, apiV2010AccountTranscription.type) &&
        Objects.equals(this.uri, apiV2010AccountTranscription.uri);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, apiVersion, dateCreated, dateUpdated, duration, price, priceUnit, recordingSid, sid, status, transcriptionText, type, uri);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiV2010AccountTranscription {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceUnit: ").append(toIndentedString(priceUnit)).append("\n");
    sb.append("    recordingSid: ").append(toIndentedString(recordingSid)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    transcriptionText: ").append(toIndentedString(transcriptionText)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("api_version");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("duration");
    openapiFields.add("price");
    openapiFields.add("price_unit");
    openapiFields.add("recording_sid");
    openapiFields.add("sid");
    openapiFields.add("status");
    openapiFields.add("transcription_text");
    openapiFields.add("type");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiV2010AccountTranscription
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiV2010AccountTranscription.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiV2010AccountTranscription is not found in the empty JSON string", ApiV2010AccountTranscription.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiV2010AccountTranscription.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiV2010AccountTranscription` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("api_version") != null && !jsonObj.get("api_version").isJsonNull()) && !jsonObj.get("api_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_version").toString()));
      }
      if ((jsonObj.get("date_created") != null && !jsonObj.get("date_created").isJsonNull()) && !jsonObj.get("date_created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_created").toString()));
      }
      if ((jsonObj.get("date_updated") != null && !jsonObj.get("date_updated").isJsonNull()) && !jsonObj.get("date_updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_updated").toString()));
      }
      if ((jsonObj.get("duration") != null && !jsonObj.get("duration").isJsonNull()) && !jsonObj.get("duration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `duration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("duration").toString()));
      }
      if ((jsonObj.get("price_unit") != null && !jsonObj.get("price_unit").isJsonNull()) && !jsonObj.get("price_unit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `price_unit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("price_unit").toString()));
      }
      if ((jsonObj.get("recording_sid") != null && !jsonObj.get("recording_sid").isJsonNull()) && !jsonObj.get("recording_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recording_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recording_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        TranscriptionEnumStatus.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("transcription_text") != null && !jsonObj.get("transcription_text").isJsonNull()) && !jsonObj.get("transcription_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transcription_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transcription_text").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiV2010AccountTranscription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiV2010AccountTranscription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiV2010AccountTranscription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiV2010AccountTranscription.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiV2010AccountTranscription>() {
           @Override
           public void write(JsonWriter out, ApiV2010AccountTranscription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiV2010AccountTranscription read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiV2010AccountTranscription given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiV2010AccountTranscription
   * @throws IOException if the JSON string is invalid with respect to ApiV2010AccountTranscription
   */
  public static ApiV2010AccountTranscription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiV2010AccountTranscription.class);
  }

  /**
   * Convert an instance of ApiV2010AccountTranscription to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

