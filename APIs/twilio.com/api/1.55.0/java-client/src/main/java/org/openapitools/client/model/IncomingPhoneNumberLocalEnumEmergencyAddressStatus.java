/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets incoming_phone_number_local_enum_emergency_address_status
 */
@JsonAdapter(IncomingPhoneNumberLocalEnumEmergencyAddressStatus.Adapter.class)
public enum IncomingPhoneNumberLocalEnumEmergencyAddressStatus {
  
  REGISTERED("registered"),
  
  UNREGISTERED("unregistered"),
  
  PENDING_REGISTRATION("pending-registration"),
  
  REGISTRATION_FAILURE("registration-failure"),
  
  PENDING_UNREGISTRATION("pending-unregistration"),
  
  UNREGISTRATION_FAILURE("unregistration-failure");

  private String value;

  IncomingPhoneNumberLocalEnumEmergencyAddressStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static IncomingPhoneNumberLocalEnumEmergencyAddressStatus fromValue(String value) {
    for (IncomingPhoneNumberLocalEnumEmergencyAddressStatus b : IncomingPhoneNumberLocalEnumEmergencyAddressStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<IncomingPhoneNumberLocalEnumEmergencyAddressStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final IncomingPhoneNumberLocalEnumEmergencyAddressStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public IncomingPhoneNumberLocalEnumEmergencyAddressStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return IncomingPhoneNumberLocalEnumEmergencyAddressStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    IncomingPhoneNumberLocalEnumEmergencyAddressStatus.fromValue(value);
  }
}

