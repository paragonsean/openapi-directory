/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ListAvailablePhoneNumberNationalResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Api20100401NationalApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public Api20100401NationalApi() {
        this(Configuration.getDefaultApiClient());
    }

    public Api20100401NationalApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for listAvailablePhoneNumberNational
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources. (required)
     * @param countryCode The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers. (required)
     * @param areaCode The area code of the phone numbers to read. Applies to only phone numbers in the US and Canada. (optional)
     * @param contains The pattern on which to match phone numbers. Valid characters are &#x60;*&#x60;, &#x60;0-9&#x60;, &#x60;a-z&#x60;, and &#x60;A-Z&#x60;. The &#x60;*&#x60; character matches any single digit. For examples, see [Example 2](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-3). If specified, this value must have at least two characters. (optional)
     * @param smsEnabled Whether the phone numbers can receive text messages. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param mmsEnabled Whether the phone numbers can receive MMS messages. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param voiceEnabled Whether the phone numbers can receive calls. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param excludeAllAddressRequired Whether to exclude phone numbers that require an [Address](https://www.twilio.com/docs/usage/api/address). Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;false&#x60;. (optional)
     * @param excludeLocalAddressRequired Whether to exclude phone numbers that require a local [Address](https://www.twilio.com/docs/usage/api/address). Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;false&#x60;. (optional)
     * @param excludeForeignAddressRequired Whether to exclude phone numbers that require a foreign [Address](https://www.twilio.com/docs/usage/api/address). Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;false&#x60;. (optional)
     * @param beta Whether to read phone numbers that are new to the Twilio platform. Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;true&#x60;. (optional)
     * @param nearNumber Given a phone number, find a geographically close number within &#x60;distance&#x60; miles. Distance defaults to 25 miles. Applies to only phone numbers in the US and Canada. (optional)
     * @param nearLatLong Given a latitude/longitude pair &#x60;lat,long&#x60; find geographically close numbers within &#x60;distance&#x60; miles. Applies to only phone numbers in the US and Canada. (optional)
     * @param distance The search radius, in miles, for a &#x60;near_&#x60; query.  Can be up to &#x60;500&#x60; and the default is &#x60;25&#x60;. Applies to only phone numbers in the US and Canada. (optional)
     * @param inPostalCode Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. Applies to only phone numbers in the US and Canada. (optional)
     * @param inRegion Limit results to a particular region, state, or province. Given a phone number, search within the same region as that number. Applies to only phone numbers in the US and Canada. (optional)
     * @param inRateCenter Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires &#x60;in_lata&#x60; to be set as well. Applies to only phone numbers in the US and Canada. (optional)
     * @param inLata Limit results to a specific local access and transport area ([LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. Applies to only phone numbers in the US and Canada. (optional)
     * @param inLocality Limit results to a particular locality or city. Given a phone number, search within the same Locality as that number. (optional)
     * @param faxEnabled Whether the phone numbers can receive faxes. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listAvailablePhoneNumberNationalCall(String accountSid, String countryCode, Integer areaCode, String contains, Boolean smsEnabled, Boolean mmsEnabled, Boolean voiceEnabled, Boolean excludeAllAddressRequired, Boolean excludeLocalAddressRequired, Boolean excludeForeignAddressRequired, Boolean beta, String nearNumber, String nearLatLong, Integer distance, String inPostalCode, String inRegion, String inRateCenter, String inLata, String inLocality, Boolean faxEnabled, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://api.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/National.json"
            .replace("{" + "AccountSid" + "}", localVarApiClient.escapeString(accountSid.toString()))
            .replace("{" + "CountryCode" + "}", localVarApiClient.escapeString(countryCode.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (areaCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("AreaCode", areaCode));
        }

        if (contains != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Contains", contains));
        }

        if (smsEnabled != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("SmsEnabled", smsEnabled));
        }

        if (mmsEnabled != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("MmsEnabled", mmsEnabled));
        }

        if (voiceEnabled != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("VoiceEnabled", voiceEnabled));
        }

        if (excludeAllAddressRequired != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ExcludeAllAddressRequired", excludeAllAddressRequired));
        }

        if (excludeLocalAddressRequired != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ExcludeLocalAddressRequired", excludeLocalAddressRequired));
        }

        if (excludeForeignAddressRequired != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ExcludeForeignAddressRequired", excludeForeignAddressRequired));
        }

        if (beta != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Beta", beta));
        }

        if (nearNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("NearNumber", nearNumber));
        }

        if (nearLatLong != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("NearLatLong", nearLatLong));
        }

        if (distance != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Distance", distance));
        }

        if (inPostalCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("InPostalCode", inPostalCode));
        }

        if (inRegion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("InRegion", inRegion));
        }

        if (inRateCenter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("InRateCenter", inRateCenter));
        }

        if (inLata != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("InLata", inLata));
        }

        if (inLocality != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("InLocality", inLocality));
        }

        if (faxEnabled != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("FaxEnabled", faxEnabled));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageSize", pageSize));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Page", page));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listAvailablePhoneNumberNationalValidateBeforeCall(String accountSid, String countryCode, Integer areaCode, String contains, Boolean smsEnabled, Boolean mmsEnabled, Boolean voiceEnabled, Boolean excludeAllAddressRequired, Boolean excludeLocalAddressRequired, Boolean excludeForeignAddressRequired, Boolean beta, String nearNumber, String nearLatLong, Integer distance, String inPostalCode, String inRegion, String inRateCenter, String inLata, String inLocality, Boolean faxEnabled, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountSid' is set
        if (accountSid == null) {
            throw new ApiException("Missing the required parameter 'accountSid' when calling listAvailablePhoneNumberNational(Async)");
        }

        // verify the required parameter 'countryCode' is set
        if (countryCode == null) {
            throw new ApiException("Missing the required parameter 'countryCode' when calling listAvailablePhoneNumberNational(Async)");
        }

        return listAvailablePhoneNumberNationalCall(accountSid, countryCode, areaCode, contains, smsEnabled, mmsEnabled, voiceEnabled, excludeAllAddressRequired, excludeLocalAddressRequired, excludeForeignAddressRequired, beta, nearNumber, nearLatLong, distance, inPostalCode, inRegion, inRateCenter, inLata, inLocality, faxEnabled, pageSize, page, pageToken, _callback);

    }

    /**
     * 
     * 
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources. (required)
     * @param countryCode The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers. (required)
     * @param areaCode The area code of the phone numbers to read. Applies to only phone numbers in the US and Canada. (optional)
     * @param contains The pattern on which to match phone numbers. Valid characters are &#x60;*&#x60;, &#x60;0-9&#x60;, &#x60;a-z&#x60;, and &#x60;A-Z&#x60;. The &#x60;*&#x60; character matches any single digit. For examples, see [Example 2](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-3). If specified, this value must have at least two characters. (optional)
     * @param smsEnabled Whether the phone numbers can receive text messages. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param mmsEnabled Whether the phone numbers can receive MMS messages. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param voiceEnabled Whether the phone numbers can receive calls. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param excludeAllAddressRequired Whether to exclude phone numbers that require an [Address](https://www.twilio.com/docs/usage/api/address). Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;false&#x60;. (optional)
     * @param excludeLocalAddressRequired Whether to exclude phone numbers that require a local [Address](https://www.twilio.com/docs/usage/api/address). Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;false&#x60;. (optional)
     * @param excludeForeignAddressRequired Whether to exclude phone numbers that require a foreign [Address](https://www.twilio.com/docs/usage/api/address). Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;false&#x60;. (optional)
     * @param beta Whether to read phone numbers that are new to the Twilio platform. Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;true&#x60;. (optional)
     * @param nearNumber Given a phone number, find a geographically close number within &#x60;distance&#x60; miles. Distance defaults to 25 miles. Applies to only phone numbers in the US and Canada. (optional)
     * @param nearLatLong Given a latitude/longitude pair &#x60;lat,long&#x60; find geographically close numbers within &#x60;distance&#x60; miles. Applies to only phone numbers in the US and Canada. (optional)
     * @param distance The search radius, in miles, for a &#x60;near_&#x60; query.  Can be up to &#x60;500&#x60; and the default is &#x60;25&#x60;. Applies to only phone numbers in the US and Canada. (optional)
     * @param inPostalCode Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. Applies to only phone numbers in the US and Canada. (optional)
     * @param inRegion Limit results to a particular region, state, or province. Given a phone number, search within the same region as that number. Applies to only phone numbers in the US and Canada. (optional)
     * @param inRateCenter Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires &#x60;in_lata&#x60; to be set as well. Applies to only phone numbers in the US and Canada. (optional)
     * @param inLata Limit results to a specific local access and transport area ([LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. Applies to only phone numbers in the US and Canada. (optional)
     * @param inLocality Limit results to a particular locality or city. Given a phone number, search within the same Locality as that number. (optional)
     * @param faxEnabled Whether the phone numbers can receive faxes. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ListAvailablePhoneNumberNationalResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ListAvailablePhoneNumberNationalResponse listAvailablePhoneNumberNational(String accountSid, String countryCode, Integer areaCode, String contains, Boolean smsEnabled, Boolean mmsEnabled, Boolean voiceEnabled, Boolean excludeAllAddressRequired, Boolean excludeLocalAddressRequired, Boolean excludeForeignAddressRequired, Boolean beta, String nearNumber, String nearLatLong, Integer distance, String inPostalCode, String inRegion, String inRateCenter, String inLata, String inLocality, Boolean faxEnabled, Integer pageSize, Integer page, String pageToken) throws ApiException {
        ApiResponse<ListAvailablePhoneNumberNationalResponse> localVarResp = listAvailablePhoneNumberNationalWithHttpInfo(accountSid, countryCode, areaCode, contains, smsEnabled, mmsEnabled, voiceEnabled, excludeAllAddressRequired, excludeLocalAddressRequired, excludeForeignAddressRequired, beta, nearNumber, nearLatLong, distance, inPostalCode, inRegion, inRateCenter, inLata, inLocality, faxEnabled, pageSize, page, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources. (required)
     * @param countryCode The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers. (required)
     * @param areaCode The area code of the phone numbers to read. Applies to only phone numbers in the US and Canada. (optional)
     * @param contains The pattern on which to match phone numbers. Valid characters are &#x60;*&#x60;, &#x60;0-9&#x60;, &#x60;a-z&#x60;, and &#x60;A-Z&#x60;. The &#x60;*&#x60; character matches any single digit. For examples, see [Example 2](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-3). If specified, this value must have at least two characters. (optional)
     * @param smsEnabled Whether the phone numbers can receive text messages. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param mmsEnabled Whether the phone numbers can receive MMS messages. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param voiceEnabled Whether the phone numbers can receive calls. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param excludeAllAddressRequired Whether to exclude phone numbers that require an [Address](https://www.twilio.com/docs/usage/api/address). Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;false&#x60;. (optional)
     * @param excludeLocalAddressRequired Whether to exclude phone numbers that require a local [Address](https://www.twilio.com/docs/usage/api/address). Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;false&#x60;. (optional)
     * @param excludeForeignAddressRequired Whether to exclude phone numbers that require a foreign [Address](https://www.twilio.com/docs/usage/api/address). Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;false&#x60;. (optional)
     * @param beta Whether to read phone numbers that are new to the Twilio platform. Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;true&#x60;. (optional)
     * @param nearNumber Given a phone number, find a geographically close number within &#x60;distance&#x60; miles. Distance defaults to 25 miles. Applies to only phone numbers in the US and Canada. (optional)
     * @param nearLatLong Given a latitude/longitude pair &#x60;lat,long&#x60; find geographically close numbers within &#x60;distance&#x60; miles. Applies to only phone numbers in the US and Canada. (optional)
     * @param distance The search radius, in miles, for a &#x60;near_&#x60; query.  Can be up to &#x60;500&#x60; and the default is &#x60;25&#x60;. Applies to only phone numbers in the US and Canada. (optional)
     * @param inPostalCode Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. Applies to only phone numbers in the US and Canada. (optional)
     * @param inRegion Limit results to a particular region, state, or province. Given a phone number, search within the same region as that number. Applies to only phone numbers in the US and Canada. (optional)
     * @param inRateCenter Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires &#x60;in_lata&#x60; to be set as well. Applies to only phone numbers in the US and Canada. (optional)
     * @param inLata Limit results to a specific local access and transport area ([LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. Applies to only phone numbers in the US and Canada. (optional)
     * @param inLocality Limit results to a particular locality or city. Given a phone number, search within the same Locality as that number. (optional)
     * @param faxEnabled Whether the phone numbers can receive faxes. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ApiResponse&lt;ListAvailablePhoneNumberNationalResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListAvailablePhoneNumberNationalResponse> listAvailablePhoneNumberNationalWithHttpInfo(String accountSid, String countryCode, Integer areaCode, String contains, Boolean smsEnabled, Boolean mmsEnabled, Boolean voiceEnabled, Boolean excludeAllAddressRequired, Boolean excludeLocalAddressRequired, Boolean excludeForeignAddressRequired, Boolean beta, String nearNumber, String nearLatLong, Integer distance, String inPostalCode, String inRegion, String inRateCenter, String inLata, String inLocality, Boolean faxEnabled, Integer pageSize, Integer page, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = listAvailablePhoneNumberNationalValidateBeforeCall(accountSid, countryCode, areaCode, contains, smsEnabled, mmsEnabled, voiceEnabled, excludeAllAddressRequired, excludeLocalAddressRequired, excludeForeignAddressRequired, beta, nearNumber, nearLatLong, distance, inPostalCode, inRegion, inRateCenter, inLata, inLocality, faxEnabled, pageSize, page, pageToken, null);
        Type localVarReturnType = new TypeToken<ListAvailablePhoneNumberNationalResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) requesting the AvailablePhoneNumber resources. (required)
     * @param countryCode The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country from which to read phone numbers. (required)
     * @param areaCode The area code of the phone numbers to read. Applies to only phone numbers in the US and Canada. (optional)
     * @param contains The pattern on which to match phone numbers. Valid characters are &#x60;*&#x60;, &#x60;0-9&#x60;, &#x60;a-z&#x60;, and &#x60;A-Z&#x60;. The &#x60;*&#x60; character matches any single digit. For examples, see [Example 2](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-2) and [Example 3](https://www.twilio.com/docs/phone-numbers/api/availablephonenumber-resource#local-get-basic-example-3). If specified, this value must have at least two characters. (optional)
     * @param smsEnabled Whether the phone numbers can receive text messages. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param mmsEnabled Whether the phone numbers can receive MMS messages. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param voiceEnabled Whether the phone numbers can receive calls. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param excludeAllAddressRequired Whether to exclude phone numbers that require an [Address](https://www.twilio.com/docs/usage/api/address). Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;false&#x60;. (optional)
     * @param excludeLocalAddressRequired Whether to exclude phone numbers that require a local [Address](https://www.twilio.com/docs/usage/api/address). Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;false&#x60;. (optional)
     * @param excludeForeignAddressRequired Whether to exclude phone numbers that require a foreign [Address](https://www.twilio.com/docs/usage/api/address). Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;false&#x60;. (optional)
     * @param beta Whether to read phone numbers that are new to the Twilio platform. Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;true&#x60;. (optional)
     * @param nearNumber Given a phone number, find a geographically close number within &#x60;distance&#x60; miles. Distance defaults to 25 miles. Applies to only phone numbers in the US and Canada. (optional)
     * @param nearLatLong Given a latitude/longitude pair &#x60;lat,long&#x60; find geographically close numbers within &#x60;distance&#x60; miles. Applies to only phone numbers in the US and Canada. (optional)
     * @param distance The search radius, in miles, for a &#x60;near_&#x60; query.  Can be up to &#x60;500&#x60; and the default is &#x60;25&#x60;. Applies to only phone numbers in the US and Canada. (optional)
     * @param inPostalCode Limit results to a particular postal code. Given a phone number, search within the same postal code as that number. Applies to only phone numbers in the US and Canada. (optional)
     * @param inRegion Limit results to a particular region, state, or province. Given a phone number, search within the same region as that number. Applies to only phone numbers in the US and Canada. (optional)
     * @param inRateCenter Limit results to a specific rate center, or given a phone number search within the same rate center as that number. Requires &#x60;in_lata&#x60; to be set as well. Applies to only phone numbers in the US and Canada. (optional)
     * @param inLata Limit results to a specific local access and transport area ([LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area)). Given a phone number, search within the same [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) as that number. Applies to only phone numbers in the US and Canada. (optional)
     * @param inLocality Limit results to a particular locality or city. Given a phone number, search within the same Locality as that number. (optional)
     * @param faxEnabled Whether the phone numbers can receive faxes. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listAvailablePhoneNumberNationalAsync(String accountSid, String countryCode, Integer areaCode, String contains, Boolean smsEnabled, Boolean mmsEnabled, Boolean voiceEnabled, Boolean excludeAllAddressRequired, Boolean excludeLocalAddressRequired, Boolean excludeForeignAddressRequired, Boolean beta, String nearNumber, String nearLatLong, Integer distance, String inPostalCode, String inRegion, String inRateCenter, String inLata, String inLocality, Boolean faxEnabled, Integer pageSize, Integer page, String pageToken, final ApiCallback<ListAvailablePhoneNumberNationalResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listAvailablePhoneNumberNationalValidateBeforeCall(accountSid, countryCode, areaCode, contains, smsEnabled, mmsEnabled, voiceEnabled, excludeAllAddressRequired, excludeLocalAddressRequired, excludeForeignAddressRequired, beta, nearNumber, nearLatLong, distance, inPostalCode, inRegion, inRateCenter, inLata, inLocality, faxEnabled, pageSize, page, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ListAvailablePhoneNumberNationalResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
