/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: &#x60;Voice&#x60;, &#x60;SMS&#x60;, and &#x60;MMS&#x60; and each capability can be: &#x60;true&#x60; or &#x60;false&#x60;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:00.794253-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities {
  public static final String SERIALIZED_NAME_FAX = "fax";
  @SerializedName(SERIALIZED_NAME_FAX)
  private Boolean fax;

  public static final String SERIALIZED_NAME_MMS = "mms";
  @SerializedName(SERIALIZED_NAME_MMS)
  private Boolean mms;

  public static final String SERIALIZED_NAME_SMS = "sms";
  @SerializedName(SERIALIZED_NAME_SMS)
  private Boolean sms;

  public static final String SERIALIZED_NAME_VOICE = "voice";
  @SerializedName(SERIALIZED_NAME_VOICE)
  private Boolean voice;

  public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities() {
  }

  public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities fax(Boolean fax) {
    this.fax = fax;
    return this;
  }

  /**
   * Get fax
   * @return fax
   */
  @javax.annotation.Nullable
  public Boolean getFax() {
    return fax;
  }

  public void setFax(Boolean fax) {
    this.fax = fax;
  }


  public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities mms(Boolean mms) {
    this.mms = mms;
    return this;
  }

  /**
   * Get mms
   * @return mms
   */
  @javax.annotation.Nullable
  public Boolean getMms() {
    return mms;
  }

  public void setMms(Boolean mms) {
    this.mms = mms;
  }


  public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities sms(Boolean sms) {
    this.sms = sms;
    return this;
  }

  /**
   * Get sms
   * @return sms
   */
  @javax.annotation.Nullable
  public Boolean getSms() {
    return sms;
  }

  public void setSms(Boolean sms) {
    this.sms = sms;
  }


  public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities voice(Boolean voice) {
    this.voice = voice;
    return this;
  }

  /**
   * Get voice
   * @return voice
   */
  @javax.annotation.Nullable
  public Boolean getVoice() {
    return voice;
  }

  public void setVoice(Boolean voice) {
    this.voice = voice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities apiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities = (ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities) o;
    return Objects.equals(this.fax, apiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities.fax) &&
        Objects.equals(this.mms, apiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities.mms) &&
        Objects.equals(this.sms, apiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities.sms) &&
        Objects.equals(this.voice, apiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities.voice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fax, mms, sms, voice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities {\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    mms: ").append(toIndentedString(mms)).append("\n");
    sb.append("    sms: ").append(toIndentedString(sms)).append("\n");
    sb.append("    voice: ").append(toIndentedString(voice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fax");
    openapiFields.add("mms");
    openapiFields.add("sms");
    openapiFields.add("voice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities is not found in the empty JSON string", ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities>() {
           @Override
           public void write(JsonWriter out, ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities
   * @throws IOException if the JSON string is invalid with respect to ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities
   */
  public static ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities.class);
  }

  /**
   * Convert an instance of ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberLocalCapabilities to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

