/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.Arrays;
import org.openapitools.client.model.UsageTriggerEnumRecurring;
import org.openapitools.client.model.UsageTriggerEnumTriggerField;
import org.openapitools.client.model.UsageTriggerEnumUsageCategory;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiV2010AccountUsageUsageTrigger
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:00.794253-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiV2010AccountUsageUsageTrigger {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_API_VERSION = "api_version";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  private String apiVersion;

  /**
   * The HTTP method we use to call &#x60;callback_url&#x60;. Can be: &#x60;GET&#x60; or &#x60;POST&#x60;.
   */
  @JsonAdapter(CallbackMethodEnum.Adapter.class)
  public enum CallbackMethodEnum {
    HEAD("HEAD"),
    
    GET("GET"),
    
    POST("POST"),
    
    PATCH("PATCH"),
    
    PUT("PUT"),
    
    DELETE("DELETE");

    private String value;

    CallbackMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CallbackMethodEnum fromValue(String value) {
      for (CallbackMethodEnum b : CallbackMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CallbackMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CallbackMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CallbackMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CallbackMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CallbackMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CALLBACK_METHOD = "callback_method";
  @SerializedName(SERIALIZED_NAME_CALLBACK_METHOD)
  private CallbackMethodEnum callbackMethod;

  public static final String SERIALIZED_NAME_CALLBACK_URL = "callback_url";
  @SerializedName(SERIALIZED_NAME_CALLBACK_URL)
  private URI callbackUrl;

  public static final String SERIALIZED_NAME_CURRENT_VALUE = "current_value";
  @SerializedName(SERIALIZED_NAME_CURRENT_VALUE)
  private String currentValue;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private String dateCreated;

  public static final String SERIALIZED_NAME_DATE_FIRED = "date_fired";
  @SerializedName(SERIALIZED_NAME_DATE_FIRED)
  private String dateFired;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private String dateUpdated;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_RECURRING = "recurring";
  @SerializedName(SERIALIZED_NAME_RECURRING)
  private UsageTriggerEnumRecurring recurring;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_TRIGGER_BY = "trigger_by";
  @SerializedName(SERIALIZED_NAME_TRIGGER_BY)
  private UsageTriggerEnumTriggerField triggerBy;

  public static final String SERIALIZED_NAME_TRIGGER_VALUE = "trigger_value";
  @SerializedName(SERIALIZED_NAME_TRIGGER_VALUE)
  private String triggerValue;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public static final String SERIALIZED_NAME_USAGE_CATEGORY = "usage_category";
  @SerializedName(SERIALIZED_NAME_USAGE_CATEGORY)
  private UsageTriggerEnumUsageCategory usageCategory;

  public static final String SERIALIZED_NAME_USAGE_RECORD_URI = "usage_record_uri";
  @SerializedName(SERIALIZED_NAME_USAGE_RECORD_URI)
  private String usageRecordUri;

  public ApiV2010AccountUsageUsageTrigger() {
  }

  public ApiV2010AccountUsageUsageTrigger accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the trigger monitors.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public ApiV2010AccountUsageUsageTrigger apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

  /**
   * The API version used to create the resource.
   * @return apiVersion
   */
  @javax.annotation.Nullable
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }


  public ApiV2010AccountUsageUsageTrigger callbackMethod(CallbackMethodEnum callbackMethod) {
    this.callbackMethod = callbackMethod;
    return this;
  }

  /**
   * The HTTP method we use to call &#x60;callback_url&#x60;. Can be: &#x60;GET&#x60; or &#x60;POST&#x60;.
   * @return callbackMethod
   */
  @javax.annotation.Nullable
  public CallbackMethodEnum getCallbackMethod() {
    return callbackMethod;
  }

  public void setCallbackMethod(CallbackMethodEnum callbackMethod) {
    this.callbackMethod = callbackMethod;
  }


  public ApiV2010AccountUsageUsageTrigger callbackUrl(URI callbackUrl) {
    this.callbackUrl = callbackUrl;
    return this;
  }

  /**
   * The URL we call using the &#x60;callback_method&#x60; when the trigger fires.
   * @return callbackUrl
   */
  @javax.annotation.Nullable
  public URI getCallbackUrl() {
    return callbackUrl;
  }

  public void setCallbackUrl(URI callbackUrl) {
    this.callbackUrl = callbackUrl;
  }


  public ApiV2010AccountUsageUsageTrigger currentValue(String currentValue) {
    this.currentValue = currentValue;
    return this;
  }

  /**
   * The current value of the field the trigger is watching.
   * @return currentValue
   */
  @javax.annotation.Nullable
  public String getCurrentValue() {
    return currentValue;
  }

  public void setCurrentValue(String currentValue) {
    this.currentValue = currentValue;
  }


  public ApiV2010AccountUsageUsageTrigger dateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public String getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ApiV2010AccountUsageUsageTrigger dateFired(String dateFired) {
    this.dateFired = dateFired;
    return this;
  }

  /**
   * The date and time in GMT that the trigger was last fired specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateFired
   */
  @javax.annotation.Nullable
  public String getDateFired() {
    return dateFired;
  }

  public void setDateFired(String dateFired) {
    this.dateFired = dateFired;
  }


  public ApiV2010AccountUsageUsageTrigger dateUpdated(String dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public String getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(String dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public ApiV2010AccountUsageUsageTrigger friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The string that you assigned to describe the trigger.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public ApiV2010AccountUsageUsageTrigger recurring(UsageTriggerEnumRecurring recurring) {
    this.recurring = recurring;
    return this;
  }

  /**
   * Get recurring
   * @return recurring
   */
  @javax.annotation.Nullable
  public UsageTriggerEnumRecurring getRecurring() {
    return recurring;
  }

  public void setRecurring(UsageTriggerEnumRecurring recurring) {
    this.recurring = recurring;
  }


  public ApiV2010AccountUsageUsageTrigger sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that that we created to identify the UsageTrigger resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public ApiV2010AccountUsageUsageTrigger triggerBy(UsageTriggerEnumTriggerField triggerBy) {
    this.triggerBy = triggerBy;
    return this;
  }

  /**
   * Get triggerBy
   * @return triggerBy
   */
  @javax.annotation.Nullable
  public UsageTriggerEnumTriggerField getTriggerBy() {
    return triggerBy;
  }

  public void setTriggerBy(UsageTriggerEnumTriggerField triggerBy) {
    this.triggerBy = triggerBy;
  }


  public ApiV2010AccountUsageUsageTrigger triggerValue(String triggerValue) {
    this.triggerValue = triggerValue;
    return this;
  }

  /**
   * The value at which the trigger will fire.  Must be a positive, numeric value.
   * @return triggerValue
   */
  @javax.annotation.Nullable
  public String getTriggerValue() {
    return triggerValue;
  }

  public void setTriggerValue(String triggerValue) {
    this.triggerValue = triggerValue;
  }


  public ApiV2010AccountUsageUsageTrigger uri(String uri) {
    this.uri = uri;
    return this;
  }

  /**
   * The URI of the resource, relative to &#x60;https://api.twilio.com&#x60;.
   * @return uri
   */
  @javax.annotation.Nullable
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }


  public ApiV2010AccountUsageUsageTrigger usageCategory(UsageTriggerEnumUsageCategory usageCategory) {
    this.usageCategory = usageCategory;
    return this;
  }

  /**
   * Get usageCategory
   * @return usageCategory
   */
  @javax.annotation.Nullable
  public UsageTriggerEnumUsageCategory getUsageCategory() {
    return usageCategory;
  }

  public void setUsageCategory(UsageTriggerEnumUsageCategory usageCategory) {
    this.usageCategory = usageCategory;
  }


  public ApiV2010AccountUsageUsageTrigger usageRecordUri(String usageRecordUri) {
    this.usageRecordUri = usageRecordUri;
    return this;
  }

  /**
   * The URI of the [UsageRecord](https://www.twilio.com/docs/usage/api/usage-record) resource this trigger watches, relative to &#x60;https://api.twilio.com&#x60;.
   * @return usageRecordUri
   */
  @javax.annotation.Nullable
  public String getUsageRecordUri() {
    return usageRecordUri;
  }

  public void setUsageRecordUri(String usageRecordUri) {
    this.usageRecordUri = usageRecordUri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiV2010AccountUsageUsageTrigger apiV2010AccountUsageUsageTrigger = (ApiV2010AccountUsageUsageTrigger) o;
    return Objects.equals(this.accountSid, apiV2010AccountUsageUsageTrigger.accountSid) &&
        Objects.equals(this.apiVersion, apiV2010AccountUsageUsageTrigger.apiVersion) &&
        Objects.equals(this.callbackMethod, apiV2010AccountUsageUsageTrigger.callbackMethod) &&
        Objects.equals(this.callbackUrl, apiV2010AccountUsageUsageTrigger.callbackUrl) &&
        Objects.equals(this.currentValue, apiV2010AccountUsageUsageTrigger.currentValue) &&
        Objects.equals(this.dateCreated, apiV2010AccountUsageUsageTrigger.dateCreated) &&
        Objects.equals(this.dateFired, apiV2010AccountUsageUsageTrigger.dateFired) &&
        Objects.equals(this.dateUpdated, apiV2010AccountUsageUsageTrigger.dateUpdated) &&
        Objects.equals(this.friendlyName, apiV2010AccountUsageUsageTrigger.friendlyName) &&
        Objects.equals(this.recurring, apiV2010AccountUsageUsageTrigger.recurring) &&
        Objects.equals(this.sid, apiV2010AccountUsageUsageTrigger.sid) &&
        Objects.equals(this.triggerBy, apiV2010AccountUsageUsageTrigger.triggerBy) &&
        Objects.equals(this.triggerValue, apiV2010AccountUsageUsageTrigger.triggerValue) &&
        Objects.equals(this.uri, apiV2010AccountUsageUsageTrigger.uri) &&
        Objects.equals(this.usageCategory, apiV2010AccountUsageUsageTrigger.usageCategory) &&
        Objects.equals(this.usageRecordUri, apiV2010AccountUsageUsageTrigger.usageRecordUri);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, apiVersion, callbackMethod, callbackUrl, currentValue, dateCreated, dateFired, dateUpdated, friendlyName, recurring, sid, triggerBy, triggerValue, uri, usageCategory, usageRecordUri);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiV2010AccountUsageUsageTrigger {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    callbackMethod: ").append(toIndentedString(callbackMethod)).append("\n");
    sb.append("    callbackUrl: ").append(toIndentedString(callbackUrl)).append("\n");
    sb.append("    currentValue: ").append(toIndentedString(currentValue)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateFired: ").append(toIndentedString(dateFired)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    recurring: ").append(toIndentedString(recurring)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    triggerBy: ").append(toIndentedString(triggerBy)).append("\n");
    sb.append("    triggerValue: ").append(toIndentedString(triggerValue)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    usageCategory: ").append(toIndentedString(usageCategory)).append("\n");
    sb.append("    usageRecordUri: ").append(toIndentedString(usageRecordUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("api_version");
    openapiFields.add("callback_method");
    openapiFields.add("callback_url");
    openapiFields.add("current_value");
    openapiFields.add("date_created");
    openapiFields.add("date_fired");
    openapiFields.add("date_updated");
    openapiFields.add("friendly_name");
    openapiFields.add("recurring");
    openapiFields.add("sid");
    openapiFields.add("trigger_by");
    openapiFields.add("trigger_value");
    openapiFields.add("uri");
    openapiFields.add("usage_category");
    openapiFields.add("usage_record_uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiV2010AccountUsageUsageTrigger
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiV2010AccountUsageUsageTrigger.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiV2010AccountUsageUsageTrigger is not found in the empty JSON string", ApiV2010AccountUsageUsageTrigger.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiV2010AccountUsageUsageTrigger.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiV2010AccountUsageUsageTrigger` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("api_version") != null && !jsonObj.get("api_version").isJsonNull()) && !jsonObj.get("api_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_version").toString()));
      }
      if ((jsonObj.get("callback_method") != null && !jsonObj.get("callback_method").isJsonNull()) && !jsonObj.get("callback_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callback_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callback_method").toString()));
      }
      // validate the optional field `callback_method`
      if (jsonObj.get("callback_method") != null && !jsonObj.get("callback_method").isJsonNull()) {
        CallbackMethodEnum.validateJsonElement(jsonObj.get("callback_method"));
      }
      if ((jsonObj.get("callback_url") != null && !jsonObj.get("callback_url").isJsonNull()) && !jsonObj.get("callback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callback_url").toString()));
      }
      if ((jsonObj.get("current_value") != null && !jsonObj.get("current_value").isJsonNull()) && !jsonObj.get("current_value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `current_value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("current_value").toString()));
      }
      if ((jsonObj.get("date_created") != null && !jsonObj.get("date_created").isJsonNull()) && !jsonObj.get("date_created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_created").toString()));
      }
      if ((jsonObj.get("date_fired") != null && !jsonObj.get("date_fired").isJsonNull()) && !jsonObj.get("date_fired").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_fired` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_fired").toString()));
      }
      if ((jsonObj.get("date_updated") != null && !jsonObj.get("date_updated").isJsonNull()) && !jsonObj.get("date_updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date_updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date_updated").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("recurring") != null && !jsonObj.get("recurring").isJsonNull()) && !jsonObj.get("recurring").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recurring` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recurring").toString()));
      }
      // validate the optional field `recurring`
      if (jsonObj.get("recurring") != null && !jsonObj.get("recurring").isJsonNull()) {
        UsageTriggerEnumRecurring.validateJsonElement(jsonObj.get("recurring"));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("trigger_by") != null && !jsonObj.get("trigger_by").isJsonNull()) && !jsonObj.get("trigger_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trigger_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trigger_by").toString()));
      }
      // validate the optional field `trigger_by`
      if (jsonObj.get("trigger_by") != null && !jsonObj.get("trigger_by").isJsonNull()) {
        UsageTriggerEnumTriggerField.validateJsonElement(jsonObj.get("trigger_by"));
      }
      if ((jsonObj.get("trigger_value") != null && !jsonObj.get("trigger_value").isJsonNull()) && !jsonObj.get("trigger_value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trigger_value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trigger_value").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
      if ((jsonObj.get("usage_category") != null && !jsonObj.get("usage_category").isJsonNull()) && !jsonObj.get("usage_category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `usage_category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("usage_category").toString()));
      }
      // validate the optional field `usage_category`
      if (jsonObj.get("usage_category") != null && !jsonObj.get("usage_category").isJsonNull()) {
        UsageTriggerEnumUsageCategory.validateJsonElement(jsonObj.get("usage_category"));
      }
      if ((jsonObj.get("usage_record_uri") != null && !jsonObj.get("usage_record_uri").isJsonNull()) && !jsonObj.get("usage_record_uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `usage_record_uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("usage_record_uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiV2010AccountUsageUsageTrigger.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiV2010AccountUsageUsageTrigger' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiV2010AccountUsageUsageTrigger> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiV2010AccountUsageUsageTrigger.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiV2010AccountUsageUsageTrigger>() {
           @Override
           public void write(JsonWriter out, ApiV2010AccountUsageUsageTrigger value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiV2010AccountUsageUsageTrigger read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiV2010AccountUsageUsageTrigger given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiV2010AccountUsageUsageTrigger
   * @throws IOException if the JSON string is invalid with respect to ApiV2010AccountUsageUsageTrigger
   */
  public static ApiV2010AccountUsageUsageTrigger fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiV2010AccountUsageUsageTrigger.class);
  }

  /**
   * Convert an instance of ApiV2010AccountUsageUsageTrigger to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

