/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ApiV2010AccountMessage;
import java.math.BigDecimal;
import org.openapitools.client.model.ListMessageResponse;
import org.openapitools.client.model.MessageEnumAddressRetention;
import org.openapitools.client.model.MessageEnumContentRetention;
import org.openapitools.client.model.MessageEnumRiskCheck;
import org.openapitools.client.model.MessageEnumScheduleType;
import org.openapitools.client.model.MessageEnumUpdateStatus;
import java.time.OffsetDateTime;
import java.net.URI;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Api20100401MessageApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public Api20100401MessageApi() {
        this(Configuration.getDefaultApiClient());
    }

    public Api20100401MessageApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createMessage
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) creating the Message resource. (required)
     * @param to The recipient&#39;s phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (for SMS/MMS) or [channel address](https://www.twilio.com/docs/messaging/channels), e.g. &#x60;whatsapp:+15552229999&#x60;. (required)
     * @param addressRetention  (optional)
     * @param applicationSid The SID of the associated [TwiML Application](https://www.twilio.com/docs/usage/api/applications). If this parameter is provided, the &#x60;status_callback&#x60; parameter of this request is ignored; [Message status callback requests](https://www.twilio.com/docs/sms/api/message-resource#twilios-request-to-the-statuscallback-url) are sent to the TwiML App&#39;s &#x60;message_status_callback&#x60; URL. (optional)
     * @param attempt Total number of attempts made (including this request) to send the message regardless of the provider used (optional)
     * @param body The text content of the outgoing message. Can be up to 1,600 characters in length. SMS only: If the &#x60;body&#x60; contains more than 160 [GSM-7](https://www.twilio.com/docs/glossary/what-is-gsm-7-character-encoding) characters (or 70 [UCS-2](https://www.twilio.com/docs/glossary/what-is-ucs-2-character-encoding) characters), the message is segmented and charged accordingly. For long &#x60;body&#x60; text, consider using the [send_as_mms parameter](https://www.twilio.com/blog/mms-for-long-text-messages). (optional)
     * @param contentRetention  (optional)
     * @param contentSid For [Content Editor/API](https://www.twilio.com/docs/content) only: The SID of the Content Template to be used with the Message, e.g., &#x60;HXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&#x60;. If this parameter is not provided, a Content Template is not used. Find the SID in the Console on the Content Editor page. For Content API users, the SID is found in Twilio&#39;s response when [creating the Template](https://www.twilio.com/docs/content/content-api-resources#create-templates) or by [fetching your Templates](https://www.twilio.com/docs/content/content-api-resources#fetch-all-content-resources). (optional)
     * @param contentVariables For [Content Editor/API](https://www.twilio.com/docs/content) only: Key-value pairs of [Template variables](https://www.twilio.com/docs/content/using-variables-with-content-api) and their substitution values. &#x60;content_sid&#x60; parameter must also be provided. If values are not defined in the &#x60;content_variables&#x60; parameter, the [Template&#39;s default placeholder values](https://www.twilio.com/docs/content/content-api-resources#create-templates) are used. (optional)
     * @param forceDelivery Reserved (optional)
     * @param from The sender&#39;s Twilio phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format), [alphanumeric sender ID](https://www.twilio.com/docs/sms/quickstart), [Wireless SIM](https://www.twilio.com/docs/iot/wireless/programmable-wireless-send-machine-machine-sms-commands), [short code](https://www.twilio.com/en-us/messaging/channels/sms/short-codes), or [channel address](https://www.twilio.com/docs/messaging/channels) (e.g., &#x60;whatsapp:+15554449999&#x60;). The value of the &#x60;from&#x60; parameter must be a sender that is hosted within Twilio and belongs to the Account creating the Message. If you are using &#x60;messaging_service_sid&#x60;, this parameter can be empty (Twilio assigns a &#x60;from&#x60; value from the Messaging Service&#39;s Sender Pool) or you can provide a specific sender from your Sender Pool. (optional)
     * @param maxPrice The maximum price in US dollars that you are willing to pay for this Message&#39;s delivery. The value can have up to four decimal places. When the &#x60;max_price&#x60; parameter is provided, the cost of a message is checked before it is sent. If the cost exceeds &#x60;max_price&#x60;, the message is not sent and the Message &#x60;status&#x60; is &#x60;failed&#x60;. (optional)
     * @param mediaUrl The URL of media to include in the Message content. &#x60;jpeg&#x60;, &#x60;jpg&#x60;, &#x60;gif&#x60;, and &#x60;png&#x60; file types are fully supported by Twilio and content is formatted for delivery on destination devices. The media size limit is 5 MB for supported file types (&#x60;jpeg&#x60;, &#x60;jpg&#x60;, &#x60;png&#x60;, &#x60;gif&#x60;) and 500 KB for [other types](https://www.twilio.com/docs/messaging/guides/accepted-mime-types) of accepted media. To send more than one image in the message, provide multiple &#x60;media_url&#x60; parameters in the POST request. You can include up to ten &#x60;media_url&#x60; parameters per message. [International](https://support.twilio.com/hc/en-us/articles/223179808-Sending-and-receiving-MMS-messages) and [carrier](https://support.twilio.com/hc/en-us/articles/223133707-Is-MMS-supported-for-all-carriers-in-US-and-Canada-) limits apply. (optional)
     * @param messagingServiceSid The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services) you want to associate with the Message. When this parameter is provided and the &#x60;from&#x60; parameter is omitted, Twilio selects the optimal sender from the Messaging Service&#39;s Sender Pool. You may also provide a &#x60;from&#x60; parameter if you want to use a specific Sender from the Sender Pool. (optional)
     * @param persistentAction Rich actions for non-SMS/MMS channels. Used for [sending location in WhatsApp messages](https://www.twilio.com/docs/whatsapp/message-features#location-messages-with-whatsapp). (optional)
     * @param provideFeedback Boolean indicating whether or not you intend to provide delivery confirmation feedback to Twilio (used in conjunction with the [Message Feedback subresource](https://www.twilio.com/docs/sms/api/message-feedback-resource)). Default value is &#x60;false&#x60;. (optional)
     * @param riskCheck  (optional)
     * @param scheduleType  (optional)
     * @param sendAsMms If set to &#x60;true&#x60;, Twilio delivers the message as a single MMS message, regardless of the presence of media. (optional)
     * @param sendAt The time that Twilio will send the message. Must be in ISO 8601 format. (optional)
     * @param shortenUrls For Messaging Services with [Link Shortening configured](https://www.twilio.com/docs/messaging/features/link-shortening) only: A Boolean indicating whether or not Twilio should shorten links in the &#x60;body&#x60; of the Message. Default value is &#x60;false&#x60;. If &#x60;true&#x60;, the &#x60;messaging_service_sid&#x60; parameter must also be provided. (optional)
     * @param smartEncoded Whether to detect Unicode characters that have a similar GSM-7 character and replace them. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param statusCallback The URL of the endpoint to which Twilio sends [Message status callback requests](https://www.twilio.com/docs/sms/api/message-resource#twilios-request-to-the-statuscallback-url). URL must contain a valid hostname and underscores are not allowed. If you include this parameter with the &#x60;messaging_service_sid&#x60;, Twilio uses this URL instead of the Status Callback URL of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource).  (optional)
     * @param validityPeriod The maximum length in seconds that the Message can remain in Twilio&#39;s outgoing message queue. If a queued Message exceeds the &#x60;validity_period&#x60;, the Message is not sent. Accepted values are integers from &#x60;1&#x60; to &#x60;14400&#x60;. Default value is &#x60;14400&#x60;. A &#x60;validity_period&#x60; greater than &#x60;5&#x60; is recommended. [Learn more about the validity period](https://www.twilio.com/blog/take-more-control-of-outbound-messages-using-validity-period-html) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createMessageCall(String accountSid, String to, MessageEnumAddressRetention addressRetention, String applicationSid, Integer attempt, String body, MessageEnumContentRetention contentRetention, String contentSid, String contentVariables, Boolean forceDelivery, String from, BigDecimal maxPrice, List<URI> mediaUrl, String messagingServiceSid, List<String> persistentAction, Boolean provideFeedback, MessageEnumRiskCheck riskCheck, MessageEnumScheduleType scheduleType, Boolean sendAsMms, OffsetDateTime sendAt, Boolean shortenUrls, Boolean smartEncoded, URI statusCallback, Integer validityPeriod, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://api.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/2010-04-01/Accounts/{AccountSid}/Messages.json"
            .replace("{" + "AccountSid" + "}", localVarApiClient.escapeString(accountSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (addressRetention != null) {
            localVarFormParams.put("AddressRetention", addressRetention);
        }

        if (applicationSid != null) {
            localVarFormParams.put("ApplicationSid", applicationSid);
        }

        if (attempt != null) {
            localVarFormParams.put("Attempt", attempt);
        }

        if (body != null) {
            localVarFormParams.put("Body", body);
        }

        if (contentRetention != null) {
            localVarFormParams.put("ContentRetention", contentRetention);
        }

        if (contentSid != null) {
            localVarFormParams.put("ContentSid", contentSid);
        }

        if (contentVariables != null) {
            localVarFormParams.put("ContentVariables", contentVariables);
        }

        if (forceDelivery != null) {
            localVarFormParams.put("ForceDelivery", forceDelivery);
        }

        if (from != null) {
            localVarFormParams.put("From", from);
        }

        if (maxPrice != null) {
            localVarFormParams.put("MaxPrice", maxPrice);
        }

        if (mediaUrl != null) {
            localVarFormParams.put("MediaUrl", mediaUrl);
        }

        if (messagingServiceSid != null) {
            localVarFormParams.put("MessagingServiceSid", messagingServiceSid);
        }

        if (persistentAction != null) {
            localVarFormParams.put("PersistentAction", persistentAction);
        }

        if (provideFeedback != null) {
            localVarFormParams.put("ProvideFeedback", provideFeedback);
        }

        if (riskCheck != null) {
            localVarFormParams.put("RiskCheck", riskCheck);
        }

        if (scheduleType != null) {
            localVarFormParams.put("ScheduleType", scheduleType);
        }

        if (sendAsMms != null) {
            localVarFormParams.put("SendAsMms", sendAsMms);
        }

        if (sendAt != null) {
            localVarFormParams.put("SendAt", sendAt);
        }

        if (shortenUrls != null) {
            localVarFormParams.put("ShortenUrls", shortenUrls);
        }

        if (smartEncoded != null) {
            localVarFormParams.put("SmartEncoded", smartEncoded);
        }

        if (statusCallback != null) {
            localVarFormParams.put("StatusCallback", statusCallback);
        }

        if (to != null) {
            localVarFormParams.put("To", to);
        }

        if (validityPeriod != null) {
            localVarFormParams.put("ValidityPeriod", validityPeriod);
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createMessageValidateBeforeCall(String accountSid, String to, MessageEnumAddressRetention addressRetention, String applicationSid, Integer attempt, String body, MessageEnumContentRetention contentRetention, String contentSid, String contentVariables, Boolean forceDelivery, String from, BigDecimal maxPrice, List<URI> mediaUrl, String messagingServiceSid, List<String> persistentAction, Boolean provideFeedback, MessageEnumRiskCheck riskCheck, MessageEnumScheduleType scheduleType, Boolean sendAsMms, OffsetDateTime sendAt, Boolean shortenUrls, Boolean smartEncoded, URI statusCallback, Integer validityPeriod, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountSid' is set
        if (accountSid == null) {
            throw new ApiException("Missing the required parameter 'accountSid' when calling createMessage(Async)");
        }

        // verify the required parameter 'to' is set
        if (to == null) {
            throw new ApiException("Missing the required parameter 'to' when calling createMessage(Async)");
        }

        return createMessageCall(accountSid, to, addressRetention, applicationSid, attempt, body, contentRetention, contentSid, contentVariables, forceDelivery, from, maxPrice, mediaUrl, messagingServiceSid, persistentAction, provideFeedback, riskCheck, scheduleType, sendAsMms, sendAt, shortenUrls, smartEncoded, statusCallback, validityPeriod, _callback);

    }

    /**
     * 
     * Send a message
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) creating the Message resource. (required)
     * @param to The recipient&#39;s phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (for SMS/MMS) or [channel address](https://www.twilio.com/docs/messaging/channels), e.g. &#x60;whatsapp:+15552229999&#x60;. (required)
     * @param addressRetention  (optional)
     * @param applicationSid The SID of the associated [TwiML Application](https://www.twilio.com/docs/usage/api/applications). If this parameter is provided, the &#x60;status_callback&#x60; parameter of this request is ignored; [Message status callback requests](https://www.twilio.com/docs/sms/api/message-resource#twilios-request-to-the-statuscallback-url) are sent to the TwiML App&#39;s &#x60;message_status_callback&#x60; URL. (optional)
     * @param attempt Total number of attempts made (including this request) to send the message regardless of the provider used (optional)
     * @param body The text content of the outgoing message. Can be up to 1,600 characters in length. SMS only: If the &#x60;body&#x60; contains more than 160 [GSM-7](https://www.twilio.com/docs/glossary/what-is-gsm-7-character-encoding) characters (or 70 [UCS-2](https://www.twilio.com/docs/glossary/what-is-ucs-2-character-encoding) characters), the message is segmented and charged accordingly. For long &#x60;body&#x60; text, consider using the [send_as_mms parameter](https://www.twilio.com/blog/mms-for-long-text-messages). (optional)
     * @param contentRetention  (optional)
     * @param contentSid For [Content Editor/API](https://www.twilio.com/docs/content) only: The SID of the Content Template to be used with the Message, e.g., &#x60;HXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&#x60;. If this parameter is not provided, a Content Template is not used. Find the SID in the Console on the Content Editor page. For Content API users, the SID is found in Twilio&#39;s response when [creating the Template](https://www.twilio.com/docs/content/content-api-resources#create-templates) or by [fetching your Templates](https://www.twilio.com/docs/content/content-api-resources#fetch-all-content-resources). (optional)
     * @param contentVariables For [Content Editor/API](https://www.twilio.com/docs/content) only: Key-value pairs of [Template variables](https://www.twilio.com/docs/content/using-variables-with-content-api) and their substitution values. &#x60;content_sid&#x60; parameter must also be provided. If values are not defined in the &#x60;content_variables&#x60; parameter, the [Template&#39;s default placeholder values](https://www.twilio.com/docs/content/content-api-resources#create-templates) are used. (optional)
     * @param forceDelivery Reserved (optional)
     * @param from The sender&#39;s Twilio phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format), [alphanumeric sender ID](https://www.twilio.com/docs/sms/quickstart), [Wireless SIM](https://www.twilio.com/docs/iot/wireless/programmable-wireless-send-machine-machine-sms-commands), [short code](https://www.twilio.com/en-us/messaging/channels/sms/short-codes), or [channel address](https://www.twilio.com/docs/messaging/channels) (e.g., &#x60;whatsapp:+15554449999&#x60;). The value of the &#x60;from&#x60; parameter must be a sender that is hosted within Twilio and belongs to the Account creating the Message. If you are using &#x60;messaging_service_sid&#x60;, this parameter can be empty (Twilio assigns a &#x60;from&#x60; value from the Messaging Service&#39;s Sender Pool) or you can provide a specific sender from your Sender Pool. (optional)
     * @param maxPrice The maximum price in US dollars that you are willing to pay for this Message&#39;s delivery. The value can have up to four decimal places. When the &#x60;max_price&#x60; parameter is provided, the cost of a message is checked before it is sent. If the cost exceeds &#x60;max_price&#x60;, the message is not sent and the Message &#x60;status&#x60; is &#x60;failed&#x60;. (optional)
     * @param mediaUrl The URL of media to include in the Message content. &#x60;jpeg&#x60;, &#x60;jpg&#x60;, &#x60;gif&#x60;, and &#x60;png&#x60; file types are fully supported by Twilio and content is formatted for delivery on destination devices. The media size limit is 5 MB for supported file types (&#x60;jpeg&#x60;, &#x60;jpg&#x60;, &#x60;png&#x60;, &#x60;gif&#x60;) and 500 KB for [other types](https://www.twilio.com/docs/messaging/guides/accepted-mime-types) of accepted media. To send more than one image in the message, provide multiple &#x60;media_url&#x60; parameters in the POST request. You can include up to ten &#x60;media_url&#x60; parameters per message. [International](https://support.twilio.com/hc/en-us/articles/223179808-Sending-and-receiving-MMS-messages) and [carrier](https://support.twilio.com/hc/en-us/articles/223133707-Is-MMS-supported-for-all-carriers-in-US-and-Canada-) limits apply. (optional)
     * @param messagingServiceSid The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services) you want to associate with the Message. When this parameter is provided and the &#x60;from&#x60; parameter is omitted, Twilio selects the optimal sender from the Messaging Service&#39;s Sender Pool. You may also provide a &#x60;from&#x60; parameter if you want to use a specific Sender from the Sender Pool. (optional)
     * @param persistentAction Rich actions for non-SMS/MMS channels. Used for [sending location in WhatsApp messages](https://www.twilio.com/docs/whatsapp/message-features#location-messages-with-whatsapp). (optional)
     * @param provideFeedback Boolean indicating whether or not you intend to provide delivery confirmation feedback to Twilio (used in conjunction with the [Message Feedback subresource](https://www.twilio.com/docs/sms/api/message-feedback-resource)). Default value is &#x60;false&#x60;. (optional)
     * @param riskCheck  (optional)
     * @param scheduleType  (optional)
     * @param sendAsMms If set to &#x60;true&#x60;, Twilio delivers the message as a single MMS message, regardless of the presence of media. (optional)
     * @param sendAt The time that Twilio will send the message. Must be in ISO 8601 format. (optional)
     * @param shortenUrls For Messaging Services with [Link Shortening configured](https://www.twilio.com/docs/messaging/features/link-shortening) only: A Boolean indicating whether or not Twilio should shorten links in the &#x60;body&#x60; of the Message. Default value is &#x60;false&#x60;. If &#x60;true&#x60;, the &#x60;messaging_service_sid&#x60; parameter must also be provided. (optional)
     * @param smartEncoded Whether to detect Unicode characters that have a similar GSM-7 character and replace them. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param statusCallback The URL of the endpoint to which Twilio sends [Message status callback requests](https://www.twilio.com/docs/sms/api/message-resource#twilios-request-to-the-statuscallback-url). URL must contain a valid hostname and underscores are not allowed. If you include this parameter with the &#x60;messaging_service_sid&#x60;, Twilio uses this URL instead of the Status Callback URL of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource).  (optional)
     * @param validityPeriod The maximum length in seconds that the Message can remain in Twilio&#39;s outgoing message queue. If a queued Message exceeds the &#x60;validity_period&#x60;, the Message is not sent. Accepted values are integers from &#x60;1&#x60; to &#x60;14400&#x60;. Default value is &#x60;14400&#x60;. A &#x60;validity_period&#x60; greater than &#x60;5&#x60; is recommended. [Learn more about the validity period](https://www.twilio.com/blog/take-more-control-of-outbound-messages-using-validity-period-html) (optional)
     * @return ApiV2010AccountMessage
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiV2010AccountMessage createMessage(String accountSid, String to, MessageEnumAddressRetention addressRetention, String applicationSid, Integer attempt, String body, MessageEnumContentRetention contentRetention, String contentSid, String contentVariables, Boolean forceDelivery, String from, BigDecimal maxPrice, List<URI> mediaUrl, String messagingServiceSid, List<String> persistentAction, Boolean provideFeedback, MessageEnumRiskCheck riskCheck, MessageEnumScheduleType scheduleType, Boolean sendAsMms, OffsetDateTime sendAt, Boolean shortenUrls, Boolean smartEncoded, URI statusCallback, Integer validityPeriod) throws ApiException {
        ApiResponse<ApiV2010AccountMessage> localVarResp = createMessageWithHttpInfo(accountSid, to, addressRetention, applicationSid, attempt, body, contentRetention, contentSid, contentVariables, forceDelivery, from, maxPrice, mediaUrl, messagingServiceSid, persistentAction, provideFeedback, riskCheck, scheduleType, sendAsMms, sendAt, shortenUrls, smartEncoded, statusCallback, validityPeriod);
        return localVarResp.getData();
    }

    /**
     * 
     * Send a message
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) creating the Message resource. (required)
     * @param to The recipient&#39;s phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (for SMS/MMS) or [channel address](https://www.twilio.com/docs/messaging/channels), e.g. &#x60;whatsapp:+15552229999&#x60;. (required)
     * @param addressRetention  (optional)
     * @param applicationSid The SID of the associated [TwiML Application](https://www.twilio.com/docs/usage/api/applications). If this parameter is provided, the &#x60;status_callback&#x60; parameter of this request is ignored; [Message status callback requests](https://www.twilio.com/docs/sms/api/message-resource#twilios-request-to-the-statuscallback-url) are sent to the TwiML App&#39;s &#x60;message_status_callback&#x60; URL. (optional)
     * @param attempt Total number of attempts made (including this request) to send the message regardless of the provider used (optional)
     * @param body The text content of the outgoing message. Can be up to 1,600 characters in length. SMS only: If the &#x60;body&#x60; contains more than 160 [GSM-7](https://www.twilio.com/docs/glossary/what-is-gsm-7-character-encoding) characters (or 70 [UCS-2](https://www.twilio.com/docs/glossary/what-is-ucs-2-character-encoding) characters), the message is segmented and charged accordingly. For long &#x60;body&#x60; text, consider using the [send_as_mms parameter](https://www.twilio.com/blog/mms-for-long-text-messages). (optional)
     * @param contentRetention  (optional)
     * @param contentSid For [Content Editor/API](https://www.twilio.com/docs/content) only: The SID of the Content Template to be used with the Message, e.g., &#x60;HXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&#x60;. If this parameter is not provided, a Content Template is not used. Find the SID in the Console on the Content Editor page. For Content API users, the SID is found in Twilio&#39;s response when [creating the Template](https://www.twilio.com/docs/content/content-api-resources#create-templates) or by [fetching your Templates](https://www.twilio.com/docs/content/content-api-resources#fetch-all-content-resources). (optional)
     * @param contentVariables For [Content Editor/API](https://www.twilio.com/docs/content) only: Key-value pairs of [Template variables](https://www.twilio.com/docs/content/using-variables-with-content-api) and their substitution values. &#x60;content_sid&#x60; parameter must also be provided. If values are not defined in the &#x60;content_variables&#x60; parameter, the [Template&#39;s default placeholder values](https://www.twilio.com/docs/content/content-api-resources#create-templates) are used. (optional)
     * @param forceDelivery Reserved (optional)
     * @param from The sender&#39;s Twilio phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format), [alphanumeric sender ID](https://www.twilio.com/docs/sms/quickstart), [Wireless SIM](https://www.twilio.com/docs/iot/wireless/programmable-wireless-send-machine-machine-sms-commands), [short code](https://www.twilio.com/en-us/messaging/channels/sms/short-codes), or [channel address](https://www.twilio.com/docs/messaging/channels) (e.g., &#x60;whatsapp:+15554449999&#x60;). The value of the &#x60;from&#x60; parameter must be a sender that is hosted within Twilio and belongs to the Account creating the Message. If you are using &#x60;messaging_service_sid&#x60;, this parameter can be empty (Twilio assigns a &#x60;from&#x60; value from the Messaging Service&#39;s Sender Pool) or you can provide a specific sender from your Sender Pool. (optional)
     * @param maxPrice The maximum price in US dollars that you are willing to pay for this Message&#39;s delivery. The value can have up to four decimal places. When the &#x60;max_price&#x60; parameter is provided, the cost of a message is checked before it is sent. If the cost exceeds &#x60;max_price&#x60;, the message is not sent and the Message &#x60;status&#x60; is &#x60;failed&#x60;. (optional)
     * @param mediaUrl The URL of media to include in the Message content. &#x60;jpeg&#x60;, &#x60;jpg&#x60;, &#x60;gif&#x60;, and &#x60;png&#x60; file types are fully supported by Twilio and content is formatted for delivery on destination devices. The media size limit is 5 MB for supported file types (&#x60;jpeg&#x60;, &#x60;jpg&#x60;, &#x60;png&#x60;, &#x60;gif&#x60;) and 500 KB for [other types](https://www.twilio.com/docs/messaging/guides/accepted-mime-types) of accepted media. To send more than one image in the message, provide multiple &#x60;media_url&#x60; parameters in the POST request. You can include up to ten &#x60;media_url&#x60; parameters per message. [International](https://support.twilio.com/hc/en-us/articles/223179808-Sending-and-receiving-MMS-messages) and [carrier](https://support.twilio.com/hc/en-us/articles/223133707-Is-MMS-supported-for-all-carriers-in-US-and-Canada-) limits apply. (optional)
     * @param messagingServiceSid The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services) you want to associate with the Message. When this parameter is provided and the &#x60;from&#x60; parameter is omitted, Twilio selects the optimal sender from the Messaging Service&#39;s Sender Pool. You may also provide a &#x60;from&#x60; parameter if you want to use a specific Sender from the Sender Pool. (optional)
     * @param persistentAction Rich actions for non-SMS/MMS channels. Used for [sending location in WhatsApp messages](https://www.twilio.com/docs/whatsapp/message-features#location-messages-with-whatsapp). (optional)
     * @param provideFeedback Boolean indicating whether or not you intend to provide delivery confirmation feedback to Twilio (used in conjunction with the [Message Feedback subresource](https://www.twilio.com/docs/sms/api/message-feedback-resource)). Default value is &#x60;false&#x60;. (optional)
     * @param riskCheck  (optional)
     * @param scheduleType  (optional)
     * @param sendAsMms If set to &#x60;true&#x60;, Twilio delivers the message as a single MMS message, regardless of the presence of media. (optional)
     * @param sendAt The time that Twilio will send the message. Must be in ISO 8601 format. (optional)
     * @param shortenUrls For Messaging Services with [Link Shortening configured](https://www.twilio.com/docs/messaging/features/link-shortening) only: A Boolean indicating whether or not Twilio should shorten links in the &#x60;body&#x60; of the Message. Default value is &#x60;false&#x60;. If &#x60;true&#x60;, the &#x60;messaging_service_sid&#x60; parameter must also be provided. (optional)
     * @param smartEncoded Whether to detect Unicode characters that have a similar GSM-7 character and replace them. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param statusCallback The URL of the endpoint to which Twilio sends [Message status callback requests](https://www.twilio.com/docs/sms/api/message-resource#twilios-request-to-the-statuscallback-url). URL must contain a valid hostname and underscores are not allowed. If you include this parameter with the &#x60;messaging_service_sid&#x60;, Twilio uses this URL instead of the Status Callback URL of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource).  (optional)
     * @param validityPeriod The maximum length in seconds that the Message can remain in Twilio&#39;s outgoing message queue. If a queued Message exceeds the &#x60;validity_period&#x60;, the Message is not sent. Accepted values are integers from &#x60;1&#x60; to &#x60;14400&#x60;. Default value is &#x60;14400&#x60;. A &#x60;validity_period&#x60; greater than &#x60;5&#x60; is recommended. [Learn more about the validity period](https://www.twilio.com/blog/take-more-control-of-outbound-messages-using-validity-period-html) (optional)
     * @return ApiResponse&lt;ApiV2010AccountMessage&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiV2010AccountMessage> createMessageWithHttpInfo(String accountSid, String to, MessageEnumAddressRetention addressRetention, String applicationSid, Integer attempt, String body, MessageEnumContentRetention contentRetention, String contentSid, String contentVariables, Boolean forceDelivery, String from, BigDecimal maxPrice, List<URI> mediaUrl, String messagingServiceSid, List<String> persistentAction, Boolean provideFeedback, MessageEnumRiskCheck riskCheck, MessageEnumScheduleType scheduleType, Boolean sendAsMms, OffsetDateTime sendAt, Boolean shortenUrls, Boolean smartEncoded, URI statusCallback, Integer validityPeriod) throws ApiException {
        okhttp3.Call localVarCall = createMessageValidateBeforeCall(accountSid, to, addressRetention, applicationSid, attempt, body, contentRetention, contentSid, contentVariables, forceDelivery, from, maxPrice, mediaUrl, messagingServiceSid, persistentAction, provideFeedback, riskCheck, scheduleType, sendAsMms, sendAt, shortenUrls, smartEncoded, statusCallback, validityPeriod, null);
        Type localVarReturnType = new TypeToken<ApiV2010AccountMessage>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Send a message
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) creating the Message resource. (required)
     * @param to The recipient&#39;s phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format (for SMS/MMS) or [channel address](https://www.twilio.com/docs/messaging/channels), e.g. &#x60;whatsapp:+15552229999&#x60;. (required)
     * @param addressRetention  (optional)
     * @param applicationSid The SID of the associated [TwiML Application](https://www.twilio.com/docs/usage/api/applications). If this parameter is provided, the &#x60;status_callback&#x60; parameter of this request is ignored; [Message status callback requests](https://www.twilio.com/docs/sms/api/message-resource#twilios-request-to-the-statuscallback-url) are sent to the TwiML App&#39;s &#x60;message_status_callback&#x60; URL. (optional)
     * @param attempt Total number of attempts made (including this request) to send the message regardless of the provider used (optional)
     * @param body The text content of the outgoing message. Can be up to 1,600 characters in length. SMS only: If the &#x60;body&#x60; contains more than 160 [GSM-7](https://www.twilio.com/docs/glossary/what-is-gsm-7-character-encoding) characters (or 70 [UCS-2](https://www.twilio.com/docs/glossary/what-is-ucs-2-character-encoding) characters), the message is segmented and charged accordingly. For long &#x60;body&#x60; text, consider using the [send_as_mms parameter](https://www.twilio.com/blog/mms-for-long-text-messages). (optional)
     * @param contentRetention  (optional)
     * @param contentSid For [Content Editor/API](https://www.twilio.com/docs/content) only: The SID of the Content Template to be used with the Message, e.g., &#x60;HXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&#x60;. If this parameter is not provided, a Content Template is not used. Find the SID in the Console on the Content Editor page. For Content API users, the SID is found in Twilio&#39;s response when [creating the Template](https://www.twilio.com/docs/content/content-api-resources#create-templates) or by [fetching your Templates](https://www.twilio.com/docs/content/content-api-resources#fetch-all-content-resources). (optional)
     * @param contentVariables For [Content Editor/API](https://www.twilio.com/docs/content) only: Key-value pairs of [Template variables](https://www.twilio.com/docs/content/using-variables-with-content-api) and their substitution values. &#x60;content_sid&#x60; parameter must also be provided. If values are not defined in the &#x60;content_variables&#x60; parameter, the [Template&#39;s default placeholder values](https://www.twilio.com/docs/content/content-api-resources#create-templates) are used. (optional)
     * @param forceDelivery Reserved (optional)
     * @param from The sender&#39;s Twilio phone number (in [E.164](https://en.wikipedia.org/wiki/E.164) format), [alphanumeric sender ID](https://www.twilio.com/docs/sms/quickstart), [Wireless SIM](https://www.twilio.com/docs/iot/wireless/programmable-wireless-send-machine-machine-sms-commands), [short code](https://www.twilio.com/en-us/messaging/channels/sms/short-codes), or [channel address](https://www.twilio.com/docs/messaging/channels) (e.g., &#x60;whatsapp:+15554449999&#x60;). The value of the &#x60;from&#x60; parameter must be a sender that is hosted within Twilio and belongs to the Account creating the Message. If you are using &#x60;messaging_service_sid&#x60;, this parameter can be empty (Twilio assigns a &#x60;from&#x60; value from the Messaging Service&#39;s Sender Pool) or you can provide a specific sender from your Sender Pool. (optional)
     * @param maxPrice The maximum price in US dollars that you are willing to pay for this Message&#39;s delivery. The value can have up to four decimal places. When the &#x60;max_price&#x60; parameter is provided, the cost of a message is checked before it is sent. If the cost exceeds &#x60;max_price&#x60;, the message is not sent and the Message &#x60;status&#x60; is &#x60;failed&#x60;. (optional)
     * @param mediaUrl The URL of media to include in the Message content. &#x60;jpeg&#x60;, &#x60;jpg&#x60;, &#x60;gif&#x60;, and &#x60;png&#x60; file types are fully supported by Twilio and content is formatted for delivery on destination devices. The media size limit is 5 MB for supported file types (&#x60;jpeg&#x60;, &#x60;jpg&#x60;, &#x60;png&#x60;, &#x60;gif&#x60;) and 500 KB for [other types](https://www.twilio.com/docs/messaging/guides/accepted-mime-types) of accepted media. To send more than one image in the message, provide multiple &#x60;media_url&#x60; parameters in the POST request. You can include up to ten &#x60;media_url&#x60; parameters per message. [International](https://support.twilio.com/hc/en-us/articles/223179808-Sending-and-receiving-MMS-messages) and [carrier](https://support.twilio.com/hc/en-us/articles/223133707-Is-MMS-supported-for-all-carriers-in-US-and-Canada-) limits apply. (optional)
     * @param messagingServiceSid The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services) you want to associate with the Message. When this parameter is provided and the &#x60;from&#x60; parameter is omitted, Twilio selects the optimal sender from the Messaging Service&#39;s Sender Pool. You may also provide a &#x60;from&#x60; parameter if you want to use a specific Sender from the Sender Pool. (optional)
     * @param persistentAction Rich actions for non-SMS/MMS channels. Used for [sending location in WhatsApp messages](https://www.twilio.com/docs/whatsapp/message-features#location-messages-with-whatsapp). (optional)
     * @param provideFeedback Boolean indicating whether or not you intend to provide delivery confirmation feedback to Twilio (used in conjunction with the [Message Feedback subresource](https://www.twilio.com/docs/sms/api/message-feedback-resource)). Default value is &#x60;false&#x60;. (optional)
     * @param riskCheck  (optional)
     * @param scheduleType  (optional)
     * @param sendAsMms If set to &#x60;true&#x60;, Twilio delivers the message as a single MMS message, regardless of the presence of media. (optional)
     * @param sendAt The time that Twilio will send the message. Must be in ISO 8601 format. (optional)
     * @param shortenUrls For Messaging Services with [Link Shortening configured](https://www.twilio.com/docs/messaging/features/link-shortening) only: A Boolean indicating whether or not Twilio should shorten links in the &#x60;body&#x60; of the Message. Default value is &#x60;false&#x60;. If &#x60;true&#x60;, the &#x60;messaging_service_sid&#x60; parameter must also be provided. (optional)
     * @param smartEncoded Whether to detect Unicode characters that have a similar GSM-7 character and replace them. Can be: &#x60;true&#x60; or &#x60;false&#x60;. (optional)
     * @param statusCallback The URL of the endpoint to which Twilio sends [Message status callback requests](https://www.twilio.com/docs/sms/api/message-resource#twilios-request-to-the-statuscallback-url). URL must contain a valid hostname and underscores are not allowed. If you include this parameter with the &#x60;messaging_service_sid&#x60;, Twilio uses this URL instead of the Status Callback URL of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource).  (optional)
     * @param validityPeriod The maximum length in seconds that the Message can remain in Twilio&#39;s outgoing message queue. If a queued Message exceeds the &#x60;validity_period&#x60;, the Message is not sent. Accepted values are integers from &#x60;1&#x60; to &#x60;14400&#x60;. Default value is &#x60;14400&#x60;. A &#x60;validity_period&#x60; greater than &#x60;5&#x60; is recommended. [Learn more about the validity period](https://www.twilio.com/blog/take-more-control-of-outbound-messages-using-validity-period-html) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createMessageAsync(String accountSid, String to, MessageEnumAddressRetention addressRetention, String applicationSid, Integer attempt, String body, MessageEnumContentRetention contentRetention, String contentSid, String contentVariables, Boolean forceDelivery, String from, BigDecimal maxPrice, List<URI> mediaUrl, String messagingServiceSid, List<String> persistentAction, Boolean provideFeedback, MessageEnumRiskCheck riskCheck, MessageEnumScheduleType scheduleType, Boolean sendAsMms, OffsetDateTime sendAt, Boolean shortenUrls, Boolean smartEncoded, URI statusCallback, Integer validityPeriod, final ApiCallback<ApiV2010AccountMessage> _callback) throws ApiException {

        okhttp3.Call localVarCall = createMessageValidateBeforeCall(accountSid, to, addressRetention, applicationSid, attempt, body, contentRetention, contentSid, contentVariables, forceDelivery, from, maxPrice, mediaUrl, messagingServiceSid, persistentAction, provideFeedback, riskCheck, scheduleType, sendAsMms, sendAt, shortenUrls, smartEncoded, statusCallback, validityPeriod, _callback);
        Type localVarReturnType = new TypeToken<ApiV2010AccountMessage>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteMessage
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource (required)
     * @param sid The SID of the Message resource you wish to delete (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteMessageCall(String accountSid, String sid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://api.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json"
            .replace("{" + "AccountSid" + "}", localVarApiClient.escapeString(accountSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteMessageValidateBeforeCall(String accountSid, String sid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountSid' is set
        if (accountSid == null) {
            throw new ApiException("Missing the required parameter 'accountSid' when calling deleteMessage(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling deleteMessage(Async)");
        }

        return deleteMessageCall(accountSid, sid, _callback);

    }

    /**
     * 
     * Deletes a Message resource from your account
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource (required)
     * @param sid The SID of the Message resource you wish to delete (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public void deleteMessage(String accountSid, String sid) throws ApiException {
        deleteMessageWithHttpInfo(accountSid, sid);
    }

    /**
     * 
     * Deletes a Message resource from your account
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource (required)
     * @param sid The SID of the Message resource you wish to delete (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> deleteMessageWithHttpInfo(String accountSid, String sid) throws ApiException {
        okhttp3.Call localVarCall = deleteMessageValidateBeforeCall(accountSid, sid, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes a Message resource from your account
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource (required)
     * @param sid The SID of the Message resource you wish to delete (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteMessageAsync(String accountSid, String sid, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteMessageValidateBeforeCall(accountSid, sid, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchMessage
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource (required)
     * @param sid The SID of the Message resource to be fetched (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMessageCall(String accountSid, String sid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://api.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json"
            .replace("{" + "AccountSid" + "}", localVarApiClient.escapeString(accountSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchMessageValidateBeforeCall(String accountSid, String sid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountSid' is set
        if (accountSid == null) {
            throw new ApiException("Missing the required parameter 'accountSid' when calling fetchMessage(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling fetchMessage(Async)");
        }

        return fetchMessageCall(accountSid, sid, _callback);

    }

    /**
     * 
     * Fetch a specific Message
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource (required)
     * @param sid The SID of the Message resource to be fetched (required)
     * @return ApiV2010AccountMessage
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiV2010AccountMessage fetchMessage(String accountSid, String sid) throws ApiException {
        ApiResponse<ApiV2010AccountMessage> localVarResp = fetchMessageWithHttpInfo(accountSid, sid);
        return localVarResp.getData();
    }

    /**
     * 
     * Fetch a specific Message
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource (required)
     * @param sid The SID of the Message resource to be fetched (required)
     * @return ApiResponse&lt;ApiV2010AccountMessage&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiV2010AccountMessage> fetchMessageWithHttpInfo(String accountSid, String sid) throws ApiException {
        okhttp3.Call localVarCall = fetchMessageValidateBeforeCall(accountSid, sid, null);
        Type localVarReturnType = new TypeToken<ApiV2010AccountMessage>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Fetch a specific Message
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resource (required)
     * @param sid The SID of the Message resource to be fetched (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchMessageAsync(String accountSid, String sid, final ApiCallback<ApiV2010AccountMessage> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchMessageValidateBeforeCall(accountSid, sid, _callback);
        Type localVarReturnType = new TypeToken<ApiV2010AccountMessage>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listMessage
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resources. (required)
     * @param to Filter by recipient. For example: Set this &#x60;to&#x60; parameter to &#x60;+15558881111&#x60; to retrieve a list of Message resources with &#x60;to&#x60; properties of &#x60;+15558881111&#x60; (optional)
     * @param from Filter by sender. For example: Set this &#x60;from&#x60; parameter to &#x60;+15552229999&#x60; to retrieve a list of Message resources with &#x60;from&#x60; properties of &#x60;+15552229999&#x60; (optional)
     * @param dateSent Filter by Message &#x60;sent_date&#x60;. Accepts GMT dates in the following formats: &#x60;YYYY-MM-DD&#x60; (to find Messages with a specific &#x60;sent_date&#x60;), &#x60;&lt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_date&#x60;s on and before a specific date), and &#x60;&gt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_dates&#x60; on and after a specific date). (optional)
     * @param dateSentLessThan Filter by Message &#x60;sent_date&#x60;. Accepts GMT dates in the following formats: &#x60;YYYY-MM-DD&#x60; (to find Messages with a specific &#x60;sent_date&#x60;), &#x60;&lt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_date&#x60;s on and before a specific date), and &#x60;&gt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_dates&#x60; on and after a specific date). (optional)
     * @param dateSentGreaterThan Filter by Message &#x60;sent_date&#x60;. Accepts GMT dates in the following formats: &#x60;YYYY-MM-DD&#x60; (to find Messages with a specific &#x60;sent_date&#x60;), &#x60;&lt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_date&#x60;s on and before a specific date), and &#x60;&gt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_dates&#x60; on and after a specific date). (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listMessageCall(String accountSid, String to, String from, OffsetDateTime dateSent, OffsetDateTime dateSentLessThan, OffsetDateTime dateSentGreaterThan, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://api.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/2010-04-01/Accounts/{AccountSid}/Messages.json"
            .replace("{" + "AccountSid" + "}", localVarApiClient.escapeString(accountSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (to != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("To", to));
        }

        if (from != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("From", from));
        }

        if (dateSent != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("DateSent", dateSent));
        }

        if (dateSentLessThan != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("DateSent&lt;", dateSentLessThan));
        }

        if (dateSentGreaterThan != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("DateSent&gt;", dateSentGreaterThan));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageSize", pageSize));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Page", page));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listMessageValidateBeforeCall(String accountSid, String to, String from, OffsetDateTime dateSent, OffsetDateTime dateSentLessThan, OffsetDateTime dateSentGreaterThan, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountSid' is set
        if (accountSid == null) {
            throw new ApiException("Missing the required parameter 'accountSid' when calling listMessage(Async)");
        }

        return listMessageCall(accountSid, to, from, dateSent, dateSentLessThan, dateSentGreaterThan, pageSize, page, pageToken, _callback);

    }

    /**
     * 
     * Retrieve a list of Message resources associated with a Twilio Account
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resources. (required)
     * @param to Filter by recipient. For example: Set this &#x60;to&#x60; parameter to &#x60;+15558881111&#x60; to retrieve a list of Message resources with &#x60;to&#x60; properties of &#x60;+15558881111&#x60; (optional)
     * @param from Filter by sender. For example: Set this &#x60;from&#x60; parameter to &#x60;+15552229999&#x60; to retrieve a list of Message resources with &#x60;from&#x60; properties of &#x60;+15552229999&#x60; (optional)
     * @param dateSent Filter by Message &#x60;sent_date&#x60;. Accepts GMT dates in the following formats: &#x60;YYYY-MM-DD&#x60; (to find Messages with a specific &#x60;sent_date&#x60;), &#x60;&lt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_date&#x60;s on and before a specific date), and &#x60;&gt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_dates&#x60; on and after a specific date). (optional)
     * @param dateSentLessThan Filter by Message &#x60;sent_date&#x60;. Accepts GMT dates in the following formats: &#x60;YYYY-MM-DD&#x60; (to find Messages with a specific &#x60;sent_date&#x60;), &#x60;&lt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_date&#x60;s on and before a specific date), and &#x60;&gt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_dates&#x60; on and after a specific date). (optional)
     * @param dateSentGreaterThan Filter by Message &#x60;sent_date&#x60;. Accepts GMT dates in the following formats: &#x60;YYYY-MM-DD&#x60; (to find Messages with a specific &#x60;sent_date&#x60;), &#x60;&lt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_date&#x60;s on and before a specific date), and &#x60;&gt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_dates&#x60; on and after a specific date). (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ListMessageResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ListMessageResponse listMessage(String accountSid, String to, String from, OffsetDateTime dateSent, OffsetDateTime dateSentLessThan, OffsetDateTime dateSentGreaterThan, Integer pageSize, Integer page, String pageToken) throws ApiException {
        ApiResponse<ListMessageResponse> localVarResp = listMessageWithHttpInfo(accountSid, to, from, dateSent, dateSentLessThan, dateSentGreaterThan, pageSize, page, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve a list of Message resources associated with a Twilio Account
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resources. (required)
     * @param to Filter by recipient. For example: Set this &#x60;to&#x60; parameter to &#x60;+15558881111&#x60; to retrieve a list of Message resources with &#x60;to&#x60; properties of &#x60;+15558881111&#x60; (optional)
     * @param from Filter by sender. For example: Set this &#x60;from&#x60; parameter to &#x60;+15552229999&#x60; to retrieve a list of Message resources with &#x60;from&#x60; properties of &#x60;+15552229999&#x60; (optional)
     * @param dateSent Filter by Message &#x60;sent_date&#x60;. Accepts GMT dates in the following formats: &#x60;YYYY-MM-DD&#x60; (to find Messages with a specific &#x60;sent_date&#x60;), &#x60;&lt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_date&#x60;s on and before a specific date), and &#x60;&gt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_dates&#x60; on and after a specific date). (optional)
     * @param dateSentLessThan Filter by Message &#x60;sent_date&#x60;. Accepts GMT dates in the following formats: &#x60;YYYY-MM-DD&#x60; (to find Messages with a specific &#x60;sent_date&#x60;), &#x60;&lt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_date&#x60;s on and before a specific date), and &#x60;&gt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_dates&#x60; on and after a specific date). (optional)
     * @param dateSentGreaterThan Filter by Message &#x60;sent_date&#x60;. Accepts GMT dates in the following formats: &#x60;YYYY-MM-DD&#x60; (to find Messages with a specific &#x60;sent_date&#x60;), &#x60;&lt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_date&#x60;s on and before a specific date), and &#x60;&gt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_dates&#x60; on and after a specific date). (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ApiResponse&lt;ListMessageResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListMessageResponse> listMessageWithHttpInfo(String accountSid, String to, String from, OffsetDateTime dateSent, OffsetDateTime dateSentLessThan, OffsetDateTime dateSentGreaterThan, Integer pageSize, Integer page, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = listMessageValidateBeforeCall(accountSid, to, from, dateSent, dateSentLessThan, dateSentGreaterThan, pageSize, page, pageToken, null);
        Type localVarReturnType = new TypeToken<ListMessageResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve a list of Message resources associated with a Twilio Account
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) associated with the Message resources. (required)
     * @param to Filter by recipient. For example: Set this &#x60;to&#x60; parameter to &#x60;+15558881111&#x60; to retrieve a list of Message resources with &#x60;to&#x60; properties of &#x60;+15558881111&#x60; (optional)
     * @param from Filter by sender. For example: Set this &#x60;from&#x60; parameter to &#x60;+15552229999&#x60; to retrieve a list of Message resources with &#x60;from&#x60; properties of &#x60;+15552229999&#x60; (optional)
     * @param dateSent Filter by Message &#x60;sent_date&#x60;. Accepts GMT dates in the following formats: &#x60;YYYY-MM-DD&#x60; (to find Messages with a specific &#x60;sent_date&#x60;), &#x60;&lt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_date&#x60;s on and before a specific date), and &#x60;&gt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_dates&#x60; on and after a specific date). (optional)
     * @param dateSentLessThan Filter by Message &#x60;sent_date&#x60;. Accepts GMT dates in the following formats: &#x60;YYYY-MM-DD&#x60; (to find Messages with a specific &#x60;sent_date&#x60;), &#x60;&lt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_date&#x60;s on and before a specific date), and &#x60;&gt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_dates&#x60; on and after a specific date). (optional)
     * @param dateSentGreaterThan Filter by Message &#x60;sent_date&#x60;. Accepts GMT dates in the following formats: &#x60;YYYY-MM-DD&#x60; (to find Messages with a specific &#x60;sent_date&#x60;), &#x60;&lt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_date&#x60;s on and before a specific date), and &#x60;&gt;&#x3D;YYYY-MM-DD&#x60; (to find Messages with &#x60;sent_dates&#x60; on and after a specific date). (optional)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listMessageAsync(String accountSid, String to, String from, OffsetDateTime dateSent, OffsetDateTime dateSentLessThan, OffsetDateTime dateSentGreaterThan, Integer pageSize, Integer page, String pageToken, final ApiCallback<ListMessageResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listMessageValidateBeforeCall(accountSid, to, from, dateSent, dateSentLessThan, dateSentGreaterThan, pageSize, page, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ListMessageResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateMessage
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to update. (required)
     * @param sid The SID of the Message resource to be updated (required)
     * @param body The new &#x60;body&#x60; of the Message resource. To redact the text content of a Message, this parameter&#39;s value must be an empty string (optional)
     * @param status  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateMessageCall(String accountSid, String sid, String body, MessageEnumUpdateStatus status, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://api.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json"
            .replace("{" + "AccountSid" + "}", localVarApiClient.escapeString(accountSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (body != null) {
            localVarFormParams.put("Body", body);
        }

        if (status != null) {
            localVarFormParams.put("Status", status);
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateMessageValidateBeforeCall(String accountSid, String sid, String body, MessageEnumUpdateStatus status, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountSid' is set
        if (accountSid == null) {
            throw new ApiException("Missing the required parameter 'accountSid' when calling updateMessage(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling updateMessage(Async)");
        }

        return updateMessageCall(accountSid, sid, body, status, _callback);

    }

    /**
     * 
     * Update a Message resource (used to redact Message &#x60;body&#x60; text and to cancel not-yet-sent messages)
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to update. (required)
     * @param sid The SID of the Message resource to be updated (required)
     * @param body The new &#x60;body&#x60; of the Message resource. To redact the text content of a Message, this parameter&#39;s value must be an empty string (optional)
     * @param status  (optional)
     * @return ApiV2010AccountMessage
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiV2010AccountMessage updateMessage(String accountSid, String sid, String body, MessageEnumUpdateStatus status) throws ApiException {
        ApiResponse<ApiV2010AccountMessage> localVarResp = updateMessageWithHttpInfo(accountSid, sid, body, status);
        return localVarResp.getData();
    }

    /**
     * 
     * Update a Message resource (used to redact Message &#x60;body&#x60; text and to cancel not-yet-sent messages)
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to update. (required)
     * @param sid The SID of the Message resource to be updated (required)
     * @param body The new &#x60;body&#x60; of the Message resource. To redact the text content of a Message, this parameter&#39;s value must be an empty string (optional)
     * @param status  (optional)
     * @return ApiResponse&lt;ApiV2010AccountMessage&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiV2010AccountMessage> updateMessageWithHttpInfo(String accountSid, String sid, String body, MessageEnumUpdateStatus status) throws ApiException {
        okhttp3.Call localVarCall = updateMessageValidateBeforeCall(accountSid, sid, body, status, null);
        Type localVarReturnType = new TypeToken<ApiV2010AccountMessage>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update a Message resource (used to redact Message &#x60;body&#x60; text and to cancel not-yet-sent messages)
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Message resources to update. (required)
     * @param sid The SID of the Message resource to be updated (required)
     * @param body The new &#x60;body&#x60; of the Message resource. To redact the text content of a Message, this parameter&#39;s value must be an empty string (optional)
     * @param status  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateMessageAsync(String accountSid, String sid, String body, MessageEnumUpdateStatus status, final ApiCallback<ApiV2010AccountMessage> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateMessageValidateBeforeCall(accountSid, sid, body, status, _callback);
        Type localVarReturnType = new TypeToken<ApiV2010AccountMessage>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
