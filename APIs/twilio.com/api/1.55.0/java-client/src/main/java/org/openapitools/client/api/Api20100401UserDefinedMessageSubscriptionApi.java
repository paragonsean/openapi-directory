/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ApiV2010AccountCallUserDefinedMessageSubscription;
import java.net.URI;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Api20100401UserDefinedMessageSubscriptionApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public Api20100401UserDefinedMessageSubscriptionApi() {
        this(Configuration.getDefaultApiClient());
    }

    public Api20100401UserDefinedMessageSubscriptionApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createUserDefinedMessageSubscription
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that subscribed to the User Defined Messages. (required)
     * @param callSid The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Messages subscription is associated with. This refers to the Call SID that is producing the user defined messages. (required)
     * @param callback The URL we should call using the &#x60;method&#x60; to send user defined events to your application. URLs must contain a valid hostname (underscores are not permitted). (required)
     * @param idempotencyKey A unique string value to identify API call. This should be a unique string value per API call and can be a randomly generated. (optional)
     * @param method The HTTP method Twilio will use when requesting the above &#x60;Url&#x60;. Either &#x60;GET&#x60; or &#x60;POST&#x60;. Default is &#x60;POST&#x60;. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createUserDefinedMessageSubscriptionCall(String accountSid, String callSid, URI callback, String idempotencyKey, String method, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://api.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/UserDefinedMessageSubscriptions.json"
            .replace("{" + "AccountSid" + "}", localVarApiClient.escapeString(accountSid.toString()))
            .replace("{" + "CallSid" + "}", localVarApiClient.escapeString(callSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (callback != null) {
            localVarFormParams.put("Callback", callback);
        }

        if (idempotencyKey != null) {
            localVarFormParams.put("IdempotencyKey", idempotencyKey);
        }

        if (method != null) {
            localVarFormParams.put("Method", method);
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createUserDefinedMessageSubscriptionValidateBeforeCall(String accountSid, String callSid, URI callback, String idempotencyKey, String method, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountSid' is set
        if (accountSid == null) {
            throw new ApiException("Missing the required parameter 'accountSid' when calling createUserDefinedMessageSubscription(Async)");
        }

        // verify the required parameter 'callSid' is set
        if (callSid == null) {
            throw new ApiException("Missing the required parameter 'callSid' when calling createUserDefinedMessageSubscription(Async)");
        }

        // verify the required parameter 'callback' is set
        if (callback == null) {
            throw new ApiException("Missing the required parameter 'callback' when calling createUserDefinedMessageSubscription(Async)");
        }

        return createUserDefinedMessageSubscriptionCall(accountSid, callSid, callback, idempotencyKey, method, _callback);

    }

    /**
     * 
     * Subscribe to User Defined Messages for a given Call SID.
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that subscribed to the User Defined Messages. (required)
     * @param callSid The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Messages subscription is associated with. This refers to the Call SID that is producing the user defined messages. (required)
     * @param callback The URL we should call using the &#x60;method&#x60; to send user defined events to your application. URLs must contain a valid hostname (underscores are not permitted). (required)
     * @param idempotencyKey A unique string value to identify API call. This should be a unique string value per API call and can be a randomly generated. (optional)
     * @param method The HTTP method Twilio will use when requesting the above &#x60;Url&#x60;. Either &#x60;GET&#x60; or &#x60;POST&#x60;. Default is &#x60;POST&#x60;. (optional)
     * @return ApiV2010AccountCallUserDefinedMessageSubscription
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiV2010AccountCallUserDefinedMessageSubscription createUserDefinedMessageSubscription(String accountSid, String callSid, URI callback, String idempotencyKey, String method) throws ApiException {
        ApiResponse<ApiV2010AccountCallUserDefinedMessageSubscription> localVarResp = createUserDefinedMessageSubscriptionWithHttpInfo(accountSid, callSid, callback, idempotencyKey, method);
        return localVarResp.getData();
    }

    /**
     * 
     * Subscribe to User Defined Messages for a given Call SID.
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that subscribed to the User Defined Messages. (required)
     * @param callSid The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Messages subscription is associated with. This refers to the Call SID that is producing the user defined messages. (required)
     * @param callback The URL we should call using the &#x60;method&#x60; to send user defined events to your application. URLs must contain a valid hostname (underscores are not permitted). (required)
     * @param idempotencyKey A unique string value to identify API call. This should be a unique string value per API call and can be a randomly generated. (optional)
     * @param method The HTTP method Twilio will use when requesting the above &#x60;Url&#x60;. Either &#x60;GET&#x60; or &#x60;POST&#x60;. Default is &#x60;POST&#x60;. (optional)
     * @return ApiResponse&lt;ApiV2010AccountCallUserDefinedMessageSubscription&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ApiV2010AccountCallUserDefinedMessageSubscription> createUserDefinedMessageSubscriptionWithHttpInfo(String accountSid, String callSid, URI callback, String idempotencyKey, String method) throws ApiException {
        okhttp3.Call localVarCall = createUserDefinedMessageSubscriptionValidateBeforeCall(accountSid, callSid, callback, idempotencyKey, method, null);
        Type localVarReturnType = new TypeToken<ApiV2010AccountCallUserDefinedMessageSubscription>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Subscribe to User Defined Messages for a given Call SID.
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that subscribed to the User Defined Messages. (required)
     * @param callSid The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Messages subscription is associated with. This refers to the Call SID that is producing the user defined messages. (required)
     * @param callback The URL we should call using the &#x60;method&#x60; to send user defined events to your application. URLs must contain a valid hostname (underscores are not permitted). (required)
     * @param idempotencyKey A unique string value to identify API call. This should be a unique string value per API call and can be a randomly generated. (optional)
     * @param method The HTTP method Twilio will use when requesting the above &#x60;Url&#x60;. Either &#x60;GET&#x60; or &#x60;POST&#x60;. Default is &#x60;POST&#x60;. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createUserDefinedMessageSubscriptionAsync(String accountSid, String callSid, URI callback, String idempotencyKey, String method, final ApiCallback<ApiV2010AccountCallUserDefinedMessageSubscription> _callback) throws ApiException {

        okhttp3.Call localVarCall = createUserDefinedMessageSubscriptionValidateBeforeCall(accountSid, callSid, callback, idempotencyKey, method, _callback);
        Type localVarReturnType = new TypeToken<ApiV2010AccountCallUserDefinedMessageSubscription>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteUserDefinedMessageSubscription
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that subscribed to the User Defined Messages. (required)
     * @param callSid The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Message Subscription is associated with. This refers to the Call SID that is producing the User Defined Messages. (required)
     * @param sid The SID that uniquely identifies this User Defined Message Subscription. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteUserDefinedMessageSubscriptionCall(String accountSid, String callSid, String sid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://api.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/UserDefinedMessageSubscriptions/{Sid}.json"
            .replace("{" + "AccountSid" + "}", localVarApiClient.escapeString(accountSid.toString()))
            .replace("{" + "CallSid" + "}", localVarApiClient.escapeString(callSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteUserDefinedMessageSubscriptionValidateBeforeCall(String accountSid, String callSid, String sid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accountSid' is set
        if (accountSid == null) {
            throw new ApiException("Missing the required parameter 'accountSid' when calling deleteUserDefinedMessageSubscription(Async)");
        }

        // verify the required parameter 'callSid' is set
        if (callSid == null) {
            throw new ApiException("Missing the required parameter 'callSid' when calling deleteUserDefinedMessageSubscription(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling deleteUserDefinedMessageSubscription(Async)");
        }

        return deleteUserDefinedMessageSubscriptionCall(accountSid, callSid, sid, _callback);

    }

    /**
     * 
     * Delete a specific User Defined Message Subscription.
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that subscribed to the User Defined Messages. (required)
     * @param callSid The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Message Subscription is associated with. This refers to the Call SID that is producing the User Defined Messages. (required)
     * @param sid The SID that uniquely identifies this User Defined Message Subscription. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public void deleteUserDefinedMessageSubscription(String accountSid, String callSid, String sid) throws ApiException {
        deleteUserDefinedMessageSubscriptionWithHttpInfo(accountSid, callSid, sid);
    }

    /**
     * 
     * Delete a specific User Defined Message Subscription.
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that subscribed to the User Defined Messages. (required)
     * @param callSid The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Message Subscription is associated with. This refers to the Call SID that is producing the User Defined Messages. (required)
     * @param sid The SID that uniquely identifies this User Defined Message Subscription. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> deleteUserDefinedMessageSubscriptionWithHttpInfo(String accountSid, String callSid, String sid) throws ApiException {
        okhttp3.Call localVarCall = deleteUserDefinedMessageSubscriptionValidateBeforeCall(accountSid, callSid, sid, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Delete a specific User Defined Message Subscription.
     * @param accountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that subscribed to the User Defined Messages. (required)
     * @param callSid The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the User Defined Message Subscription is associated with. This refers to the Call SID that is producing the User Defined Messages. (required)
     * @param sid The SID that uniquely identifies this User Defined Message Subscription. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteUserDefinedMessageSubscriptionAsync(String accountSid, String callSid, String sid, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteUserDefinedMessageSubscriptionValidateBeforeCall(accountSid, callSid, sid, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
