/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets conference_enum_reason_conference_ended
 */
@JsonAdapter(ConferenceEnumReasonConferenceEnded.Adapter.class)
public enum ConferenceEnumReasonConferenceEnded {
  
  CONFERENCE_ENDED_VIA_API("conference-ended-via-api"),
  
  PARTICIPANT_WITH_END_CONFERENCE_ON_EXIT_LEFT("participant-with-end-conference-on-exit-left"),
  
  PARTICIPANT_WITH_END_CONFERENCE_ON_EXIT_KICKED("participant-with-end-conference-on-exit-kicked"),
  
  LAST_PARTICIPANT_KICKED("last-participant-kicked"),
  
  LAST_PARTICIPANT_LEFT("last-participant-left");

  private String value;

  ConferenceEnumReasonConferenceEnded(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ConferenceEnumReasonConferenceEnded fromValue(String value) {
    for (ConferenceEnumReasonConferenceEnded b : ConferenceEnumReasonConferenceEnded.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ConferenceEnumReasonConferenceEnded> {
    @Override
    public void write(final JsonWriter jsonWriter, final ConferenceEnumReasonConferenceEnded enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ConferenceEnumReasonConferenceEnded read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ConferenceEnumReasonConferenceEnded.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ConferenceEnumReasonConferenceEnded.fromValue(value);
  }
}

