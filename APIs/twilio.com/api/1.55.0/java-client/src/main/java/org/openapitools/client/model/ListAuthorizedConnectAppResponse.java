/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ApiV2010AccountAuthorizedConnectApp;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListAuthorizedConnectAppResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:00.794253-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListAuthorizedConnectAppResponse {
  public static final String SERIALIZED_NAME_AUTHORIZED_CONNECT_APPS = "authorized_connect_apps";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_CONNECT_APPS)
  private List<ApiV2010AccountAuthorizedConnectApp> authorizedConnectApps = new ArrayList<>();

  public static final String SERIALIZED_NAME_END = "end";
  @SerializedName(SERIALIZED_NAME_END)
  @JacksonXmlProperty(isAttribute = true, localName = "end")
  private Integer end;

  public static final String SERIALIZED_NAME_FIRST_PAGE_URI = "first_page_uri";
  @SerializedName(SERIALIZED_NAME_FIRST_PAGE_URI)
  @JacksonXmlProperty(isAttribute = true, localName = "firstpageuri")
  private URI firstPageUri;

  public static final String SERIALIZED_NAME_NEXT_PAGE_URI = "next_page_uri";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE_URI)
  @JacksonXmlProperty(isAttribute = true, localName = "nextpageuri") @JsonSerialize(nullsUsing = XmlNullToEmptyStringSerializer.class)
  private URI nextPageUri;

  public static final String SERIALIZED_NAME_PAGE = "page";
  @SerializedName(SERIALIZED_NAME_PAGE)
  @JacksonXmlProperty(isAttribute = true, localName = "page")
  private Integer page;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "page_size";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  @JacksonXmlProperty(isAttribute = true, localName = "pagesize")
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PREVIOUS_PAGE_URI = "previous_page_uri";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_PAGE_URI)
  @JacksonXmlProperty(isAttribute = true, localName = "previouspageuri") @JsonSerialize(nullsUsing = XmlNullToEmptyStringSerializer.class)
  private URI previousPageUri;

  public static final String SERIALIZED_NAME_START = "start";
  @SerializedName(SERIALIZED_NAME_START)
  @JacksonXmlProperty(isAttribute = true, localName = "start")
  private Integer start;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  @JacksonXmlProperty(isAttribute = true, localName = "uri")
  private URI uri;

  public ListAuthorizedConnectAppResponse() {
  }

  public ListAuthorizedConnectAppResponse authorizedConnectApps(List<ApiV2010AccountAuthorizedConnectApp> authorizedConnectApps) {
    this.authorizedConnectApps = authorizedConnectApps;
    return this;
  }

  public ListAuthorizedConnectAppResponse addAuthorizedConnectAppsItem(ApiV2010AccountAuthorizedConnectApp authorizedConnectAppsItem) {
    if (this.authorizedConnectApps == null) {
      this.authorizedConnectApps = new ArrayList<>();
    }
    this.authorizedConnectApps.add(authorizedConnectAppsItem);
    return this;
  }

  /**
   * Get authorizedConnectApps
   * @return authorizedConnectApps
   */
  @javax.annotation.Nullable
  public List<ApiV2010AccountAuthorizedConnectApp> getAuthorizedConnectApps() {
    return authorizedConnectApps;
  }

  public void setAuthorizedConnectApps(List<ApiV2010AccountAuthorizedConnectApp> authorizedConnectApps) {
    this.authorizedConnectApps = authorizedConnectApps;
  }


  public ListAuthorizedConnectAppResponse end(Integer end) {
    this.end = end;
    return this;
  }

  /**
   * Get end
   * @return end
   */
  @javax.annotation.Nullable
  public Integer getEnd() {
    return end;
  }

  public void setEnd(Integer end) {
    this.end = end;
  }


  public ListAuthorizedConnectAppResponse firstPageUri(URI firstPageUri) {
    this.firstPageUri = firstPageUri;
    return this;
  }

  /**
   * Get firstPageUri
   * @return firstPageUri
   */
  @javax.annotation.Nullable
  public URI getFirstPageUri() {
    return firstPageUri;
  }

  public void setFirstPageUri(URI firstPageUri) {
    this.firstPageUri = firstPageUri;
  }


  public ListAuthorizedConnectAppResponse nextPageUri(URI nextPageUri) {
    this.nextPageUri = nextPageUri;
    return this;
  }

  /**
   * Get nextPageUri
   * @return nextPageUri
   */
  @javax.annotation.Nullable
  public URI getNextPageUri() {
    return nextPageUri;
  }

  public void setNextPageUri(URI nextPageUri) {
    this.nextPageUri = nextPageUri;
  }


  public ListAuthorizedConnectAppResponse page(Integer page) {
    this.page = page;
    return this;
  }

  /**
   * Get page
   * @return page
   */
  @javax.annotation.Nullable
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }


  public ListAuthorizedConnectAppResponse pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * Get pageSize
   * @return pageSize
   */
  @javax.annotation.Nullable
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public ListAuthorizedConnectAppResponse previousPageUri(URI previousPageUri) {
    this.previousPageUri = previousPageUri;
    return this;
  }

  /**
   * Get previousPageUri
   * @return previousPageUri
   */
  @javax.annotation.Nullable
  public URI getPreviousPageUri() {
    return previousPageUri;
  }

  public void setPreviousPageUri(URI previousPageUri) {
    this.previousPageUri = previousPageUri;
  }


  public ListAuthorizedConnectAppResponse start(Integer start) {
    this.start = start;
    return this;
  }

  /**
   * Get start
   * @return start
   */
  @javax.annotation.Nullable
  public Integer getStart() {
    return start;
  }

  public void setStart(Integer start) {
    this.start = start;
  }


  public ListAuthorizedConnectAppResponse uri(URI uri) {
    this.uri = uri;
    return this;
  }

  /**
   * Get uri
   * @return uri
   */
  @javax.annotation.Nullable
  public URI getUri() {
    return uri;
  }

  public void setUri(URI uri) {
    this.uri = uri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListAuthorizedConnectAppResponse listAuthorizedConnectAppResponse = (ListAuthorizedConnectAppResponse) o;
    return Objects.equals(this.authorizedConnectApps, listAuthorizedConnectAppResponse.authorizedConnectApps) &&
        Objects.equals(this.end, listAuthorizedConnectAppResponse.end) &&
        Objects.equals(this.firstPageUri, listAuthorizedConnectAppResponse.firstPageUri) &&
        Objects.equals(this.nextPageUri, listAuthorizedConnectAppResponse.nextPageUri) &&
        Objects.equals(this.page, listAuthorizedConnectAppResponse.page) &&
        Objects.equals(this.pageSize, listAuthorizedConnectAppResponse.pageSize) &&
        Objects.equals(this.previousPageUri, listAuthorizedConnectAppResponse.previousPageUri) &&
        Objects.equals(this.start, listAuthorizedConnectAppResponse.start) &&
        Objects.equals(this.uri, listAuthorizedConnectAppResponse.uri);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorizedConnectApps, end, firstPageUri, nextPageUri, page, pageSize, previousPageUri, start, uri);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListAuthorizedConnectAppResponse {\n");
    sb.append("    authorizedConnectApps: ").append(toIndentedString(authorizedConnectApps)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    firstPageUri: ").append(toIndentedString(firstPageUri)).append("\n");
    sb.append("    nextPageUri: ").append(toIndentedString(nextPageUri)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    previousPageUri: ").append(toIndentedString(previousPageUri)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("authorized_connect_apps");
    openapiFields.add("end");
    openapiFields.add("first_page_uri");
    openapiFields.add("next_page_uri");
    openapiFields.add("page");
    openapiFields.add("page_size");
    openapiFields.add("previous_page_uri");
    openapiFields.add("start");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListAuthorizedConnectAppResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListAuthorizedConnectAppResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListAuthorizedConnectAppResponse is not found in the empty JSON string", ListAuthorizedConnectAppResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListAuthorizedConnectAppResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListAuthorizedConnectAppResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("authorized_connect_apps") != null && !jsonObj.get("authorized_connect_apps").isJsonNull()) {
        JsonArray jsonArrayauthorizedConnectApps = jsonObj.getAsJsonArray("authorized_connect_apps");
        if (jsonArrayauthorizedConnectApps != null) {
          // ensure the json data is an array
          if (!jsonObj.get("authorized_connect_apps").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `authorized_connect_apps` to be an array in the JSON string but got `%s`", jsonObj.get("authorized_connect_apps").toString()));
          }

          // validate the optional field `authorized_connect_apps` (array)
          for (int i = 0; i < jsonArrayauthorizedConnectApps.size(); i++) {
            ApiV2010AccountAuthorizedConnectApp.validateJsonElement(jsonArrayauthorizedConnectApps.get(i));
          };
        }
      }
      if ((jsonObj.get("first_page_uri") != null && !jsonObj.get("first_page_uri").isJsonNull()) && !jsonObj.get("first_page_uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_page_uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_page_uri").toString()));
      }
      if ((jsonObj.get("next_page_uri") != null && !jsonObj.get("next_page_uri").isJsonNull()) && !jsonObj.get("next_page_uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_page_uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_page_uri").toString()));
      }
      if ((jsonObj.get("previous_page_uri") != null && !jsonObj.get("previous_page_uri").isJsonNull()) && !jsonObj.get("previous_page_uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `previous_page_uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("previous_page_uri").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListAuthorizedConnectAppResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListAuthorizedConnectAppResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListAuthorizedConnectAppResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListAuthorizedConnectAppResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ListAuthorizedConnectAppResponse>() {
           @Override
           public void write(JsonWriter out, ListAuthorizedConnectAppResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListAuthorizedConnectAppResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListAuthorizedConnectAppResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListAuthorizedConnectAppResponse
   * @throws IOException if the JSON string is invalid with respect to ListAuthorizedConnectAppResponse
   */
  public static ListAuthorizedConnectAppResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListAuthorizedConnectAppResponse.class);
  }

  /**
   * Convert an instance of ListAuthorizedConnectAppResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

