/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AuthorizedConnectAppEnumPermission;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiV2010AccountAuthorizedConnectApp
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:00.794253-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiV2010AccountAuthorizedConnectApp {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_CONNECT_APP_COMPANY_NAME = "connect_app_company_name";
  @SerializedName(SERIALIZED_NAME_CONNECT_APP_COMPANY_NAME)
  private String connectAppCompanyName;

  public static final String SERIALIZED_NAME_CONNECT_APP_DESCRIPTION = "connect_app_description";
  @SerializedName(SERIALIZED_NAME_CONNECT_APP_DESCRIPTION)
  private String connectAppDescription;

  public static final String SERIALIZED_NAME_CONNECT_APP_FRIENDLY_NAME = "connect_app_friendly_name";
  @SerializedName(SERIALIZED_NAME_CONNECT_APP_FRIENDLY_NAME)
  private String connectAppFriendlyName;

  public static final String SERIALIZED_NAME_CONNECT_APP_HOMEPAGE_URL = "connect_app_homepage_url";
  @SerializedName(SERIALIZED_NAME_CONNECT_APP_HOMEPAGE_URL)
  private URI connectAppHomepageUrl;

  public static final String SERIALIZED_NAME_CONNECT_APP_SID = "connect_app_sid";
  @SerializedName(SERIALIZED_NAME_CONNECT_APP_SID)
  private String connectAppSid;

  public static final String SERIALIZED_NAME_PERMISSIONS = "permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private List<AuthorizedConnectAppEnumPermission> permissions;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public ApiV2010AccountAuthorizedConnectApp() {
  }

  public ApiV2010AccountAuthorizedConnectApp accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the AuthorizedConnectApp resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public ApiV2010AccountAuthorizedConnectApp connectAppCompanyName(String connectAppCompanyName) {
    this.connectAppCompanyName = connectAppCompanyName;
    return this;
  }

  /**
   * The company name set for the Connect App.
   * @return connectAppCompanyName
   */
  @javax.annotation.Nullable
  public String getConnectAppCompanyName() {
    return connectAppCompanyName;
  }

  public void setConnectAppCompanyName(String connectAppCompanyName) {
    this.connectAppCompanyName = connectAppCompanyName;
  }


  public ApiV2010AccountAuthorizedConnectApp connectAppDescription(String connectAppDescription) {
    this.connectAppDescription = connectAppDescription;
    return this;
  }

  /**
   * A detailed description of the Connect App.
   * @return connectAppDescription
   */
  @javax.annotation.Nullable
  public String getConnectAppDescription() {
    return connectAppDescription;
  }

  public void setConnectAppDescription(String connectAppDescription) {
    this.connectAppDescription = connectAppDescription;
  }


  public ApiV2010AccountAuthorizedConnectApp connectAppFriendlyName(String connectAppFriendlyName) {
    this.connectAppFriendlyName = connectAppFriendlyName;
    return this;
  }

  /**
   * The name of the Connect App.
   * @return connectAppFriendlyName
   */
  @javax.annotation.Nullable
  public String getConnectAppFriendlyName() {
    return connectAppFriendlyName;
  }

  public void setConnectAppFriendlyName(String connectAppFriendlyName) {
    this.connectAppFriendlyName = connectAppFriendlyName;
  }


  public ApiV2010AccountAuthorizedConnectApp connectAppHomepageUrl(URI connectAppHomepageUrl) {
    this.connectAppHomepageUrl = connectAppHomepageUrl;
    return this;
  }

  /**
   * The public URL for the Connect App.
   * @return connectAppHomepageUrl
   */
  @javax.annotation.Nullable
  public URI getConnectAppHomepageUrl() {
    return connectAppHomepageUrl;
  }

  public void setConnectAppHomepageUrl(URI connectAppHomepageUrl) {
    this.connectAppHomepageUrl = connectAppHomepageUrl;
  }


  public ApiV2010AccountAuthorizedConnectApp connectAppSid(String connectAppSid) {
    this.connectAppSid = connectAppSid;
    return this;
  }

  /**
   * The SID that we assigned to the Connect App.
   * @return connectAppSid
   */
  @javax.annotation.Nullable
  public String getConnectAppSid() {
    return connectAppSid;
  }

  public void setConnectAppSid(String connectAppSid) {
    this.connectAppSid = connectAppSid;
  }


  public ApiV2010AccountAuthorizedConnectApp permissions(List<AuthorizedConnectAppEnumPermission> permissions) {
    this.permissions = permissions;
    return this;
  }

  public ApiV2010AccountAuthorizedConnectApp addPermissionsItem(AuthorizedConnectAppEnumPermission permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

  /**
   * The set of permissions that you authorized for the Connect App.  Can be: &#x60;get-all&#x60; or &#x60;post-all&#x60;.
   * @return permissions
   */
  @javax.annotation.Nullable
  public List<AuthorizedConnectAppEnumPermission> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<AuthorizedConnectAppEnumPermission> permissions) {
    this.permissions = permissions;
  }


  public ApiV2010AccountAuthorizedConnectApp uri(String uri) {
    this.uri = uri;
    return this;
  }

  /**
   * The URI of the resource, relative to &#x60;https://api.twilio.com&#x60;.
   * @return uri
   */
  @javax.annotation.Nullable
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiV2010AccountAuthorizedConnectApp apiV2010AccountAuthorizedConnectApp = (ApiV2010AccountAuthorizedConnectApp) o;
    return Objects.equals(this.accountSid, apiV2010AccountAuthorizedConnectApp.accountSid) &&
        Objects.equals(this.connectAppCompanyName, apiV2010AccountAuthorizedConnectApp.connectAppCompanyName) &&
        Objects.equals(this.connectAppDescription, apiV2010AccountAuthorizedConnectApp.connectAppDescription) &&
        Objects.equals(this.connectAppFriendlyName, apiV2010AccountAuthorizedConnectApp.connectAppFriendlyName) &&
        Objects.equals(this.connectAppHomepageUrl, apiV2010AccountAuthorizedConnectApp.connectAppHomepageUrl) &&
        Objects.equals(this.connectAppSid, apiV2010AccountAuthorizedConnectApp.connectAppSid) &&
        Objects.equals(this.permissions, apiV2010AccountAuthorizedConnectApp.permissions) &&
        Objects.equals(this.uri, apiV2010AccountAuthorizedConnectApp.uri);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, connectAppCompanyName, connectAppDescription, connectAppFriendlyName, connectAppHomepageUrl, connectAppSid, permissions, uri);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiV2010AccountAuthorizedConnectApp {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    connectAppCompanyName: ").append(toIndentedString(connectAppCompanyName)).append("\n");
    sb.append("    connectAppDescription: ").append(toIndentedString(connectAppDescription)).append("\n");
    sb.append("    connectAppFriendlyName: ").append(toIndentedString(connectAppFriendlyName)).append("\n");
    sb.append("    connectAppHomepageUrl: ").append(toIndentedString(connectAppHomepageUrl)).append("\n");
    sb.append("    connectAppSid: ").append(toIndentedString(connectAppSid)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("connect_app_company_name");
    openapiFields.add("connect_app_description");
    openapiFields.add("connect_app_friendly_name");
    openapiFields.add("connect_app_homepage_url");
    openapiFields.add("connect_app_sid");
    openapiFields.add("permissions");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiV2010AccountAuthorizedConnectApp
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiV2010AccountAuthorizedConnectApp.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiV2010AccountAuthorizedConnectApp is not found in the empty JSON string", ApiV2010AccountAuthorizedConnectApp.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiV2010AccountAuthorizedConnectApp.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiV2010AccountAuthorizedConnectApp` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("connect_app_company_name") != null && !jsonObj.get("connect_app_company_name").isJsonNull()) && !jsonObj.get("connect_app_company_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connect_app_company_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connect_app_company_name").toString()));
      }
      if ((jsonObj.get("connect_app_description") != null && !jsonObj.get("connect_app_description").isJsonNull()) && !jsonObj.get("connect_app_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connect_app_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connect_app_description").toString()));
      }
      if ((jsonObj.get("connect_app_friendly_name") != null && !jsonObj.get("connect_app_friendly_name").isJsonNull()) && !jsonObj.get("connect_app_friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connect_app_friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connect_app_friendly_name").toString()));
      }
      if ((jsonObj.get("connect_app_homepage_url") != null && !jsonObj.get("connect_app_homepage_url").isJsonNull()) && !jsonObj.get("connect_app_homepage_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connect_app_homepage_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connect_app_homepage_url").toString()));
      }
      if ((jsonObj.get("connect_app_sid") != null && !jsonObj.get("connect_app_sid").isJsonNull()) && !jsonObj.get("connect_app_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connect_app_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connect_app_sid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("permissions") != null && !jsonObj.get("permissions").isJsonNull() && !jsonObj.get("permissions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `permissions` to be an array in the JSON string but got `%s`", jsonObj.get("permissions").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiV2010AccountAuthorizedConnectApp.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiV2010AccountAuthorizedConnectApp' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiV2010AccountAuthorizedConnectApp> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiV2010AccountAuthorizedConnectApp.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiV2010AccountAuthorizedConnectApp>() {
           @Override
           public void write(JsonWriter out, ApiV2010AccountAuthorizedConnectApp value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiV2010AccountAuthorizedConnectApp read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiV2010AccountAuthorizedConnectApp given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiV2010AccountAuthorizedConnectApp
   * @throws IOException if the JSON string is invalid with respect to ApiV2010AccountAuthorizedConnectApp
   */
  public static ApiV2010AccountAuthorizedConnectApp fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiV2010AccountAuthorizedConnectApp.class);
  }

  /**
   * Convert an instance of ApiV2010AccountAuthorizedConnectApp to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

