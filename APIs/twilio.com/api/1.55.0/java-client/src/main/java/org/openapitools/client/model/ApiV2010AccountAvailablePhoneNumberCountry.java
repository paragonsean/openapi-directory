/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiV2010AccountAvailablePhoneNumberCountry
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:00.794253-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiV2010AccountAvailablePhoneNumberCountry {
  public static final String SERIALIZED_NAME_BETA = "beta";
  @SerializedName(SERIALIZED_NAME_BETA)
  private Boolean beta;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "country_code";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_SUBRESOURCE_URIS = "subresource_uris";
  @SerializedName(SERIALIZED_NAME_SUBRESOURCE_URIS)
  private Object subresourceUris;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private URI uri;

  public ApiV2010AccountAvailablePhoneNumberCountry() {
  }

  public ApiV2010AccountAvailablePhoneNumberCountry beta(Boolean beta) {
    this.beta = beta;
    return this;
  }

  /**
   * Whether all phone numbers available in the country are new to the Twilio platform. &#x60;true&#x60; if they are and &#x60;false&#x60; if all numbers are not in the Twilio Phone Number Beta program.
   * @return beta
   */
  @javax.annotation.Nullable
  public Boolean getBeta() {
    return beta;
  }

  public void setBeta(Boolean beta) {
    this.beta = beta;
  }


  public ApiV2010AccountAvailablePhoneNumberCountry country(String country) {
    this.country = country;
    return this;
  }

  /**
   * The name of the country.
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public ApiV2010AccountAvailablePhoneNumberCountry countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

  /**
   * The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country.
   * @return countryCode
   */
  @javax.annotation.Nullable
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public ApiV2010AccountAvailablePhoneNumberCountry subresourceUris(Object subresourceUris) {
    this.subresourceUris = subresourceUris;
    return this;
  }

  /**
   * A list of related AvailablePhoneNumber resources identified by their URIs relative to &#x60;https://api.twilio.com&#x60;.
   * @return subresourceUris
   */
  @javax.annotation.Nullable
  public Object getSubresourceUris() {
    return subresourceUris;
  }

  public void setSubresourceUris(Object subresourceUris) {
    this.subresourceUris = subresourceUris;
  }


  public ApiV2010AccountAvailablePhoneNumberCountry uri(URI uri) {
    this.uri = uri;
    return this;
  }

  /**
   * The URI of the Country resource, relative to &#x60;https://api.twilio.com&#x60;.
   * @return uri
   */
  @javax.annotation.Nullable
  public URI getUri() {
    return uri;
  }

  public void setUri(URI uri) {
    this.uri = uri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiV2010AccountAvailablePhoneNumberCountry apiV2010AccountAvailablePhoneNumberCountry = (ApiV2010AccountAvailablePhoneNumberCountry) o;
    return Objects.equals(this.beta, apiV2010AccountAvailablePhoneNumberCountry.beta) &&
        Objects.equals(this.country, apiV2010AccountAvailablePhoneNumberCountry.country) &&
        Objects.equals(this.countryCode, apiV2010AccountAvailablePhoneNumberCountry.countryCode) &&
        Objects.equals(this.subresourceUris, apiV2010AccountAvailablePhoneNumberCountry.subresourceUris) &&
        Objects.equals(this.uri, apiV2010AccountAvailablePhoneNumberCountry.uri);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(beta, country, countryCode, subresourceUris, uri);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiV2010AccountAvailablePhoneNumberCountry {\n");
    sb.append("    beta: ").append(toIndentedString(beta)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    subresourceUris: ").append(toIndentedString(subresourceUris)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("beta");
    openapiFields.add("country");
    openapiFields.add("country_code");
    openapiFields.add("subresource_uris");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiV2010AccountAvailablePhoneNumberCountry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiV2010AccountAvailablePhoneNumberCountry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiV2010AccountAvailablePhoneNumberCountry is not found in the empty JSON string", ApiV2010AccountAvailablePhoneNumberCountry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiV2010AccountAvailablePhoneNumberCountry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiV2010AccountAvailablePhoneNumberCountry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("country_code") != null && !jsonObj.get("country_code").isJsonNull()) && !jsonObj.get("country_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country_code").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiV2010AccountAvailablePhoneNumberCountry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiV2010AccountAvailablePhoneNumberCountry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiV2010AccountAvailablePhoneNumberCountry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiV2010AccountAvailablePhoneNumberCountry.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiV2010AccountAvailablePhoneNumberCountry>() {
           @Override
           public void write(JsonWriter out, ApiV2010AccountAvailablePhoneNumberCountry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiV2010AccountAvailablePhoneNumberCountry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiV2010AccountAvailablePhoneNumberCountry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiV2010AccountAvailablePhoneNumberCountry
   * @throws IOException if the JSON string is invalid with respect to ApiV2010AccountAvailablePhoneNumberCountry
   */
  public static ApiV2010AccountAvailablePhoneNumberCountry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiV2010AccountAvailablePhoneNumberCountry.class);
  }

  /**
   * Convert an instance of ApiV2010AccountAvailablePhoneNumberCountry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

