/*
 * Twilio - Api
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ConnectAppEnumPermission;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ApiV2010AccountConnectApp
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:00.794253-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ApiV2010AccountConnectApp {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_AUTHORIZE_REDIRECT_URL = "authorize_redirect_url";
  @SerializedName(SERIALIZED_NAME_AUTHORIZE_REDIRECT_URL)
  private URI authorizeRedirectUrl;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "company_name";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  /**
   * The HTTP method we use to call &#x60;deauthorize_callback_url&#x60;.
   */
  @JsonAdapter(DeauthorizeCallbackMethodEnum.Adapter.class)
  public enum DeauthorizeCallbackMethodEnum {
    HEAD("HEAD"),
    
    GET("GET"),
    
    POST("POST"),
    
    PATCH("PATCH"),
    
    PUT("PUT"),
    
    DELETE("DELETE");

    private String value;

    DeauthorizeCallbackMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DeauthorizeCallbackMethodEnum fromValue(String value) {
      for (DeauthorizeCallbackMethodEnum b : DeauthorizeCallbackMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DeauthorizeCallbackMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DeauthorizeCallbackMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DeauthorizeCallbackMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DeauthorizeCallbackMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DeauthorizeCallbackMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DEAUTHORIZE_CALLBACK_METHOD = "deauthorize_callback_method";
  @SerializedName(SERIALIZED_NAME_DEAUTHORIZE_CALLBACK_METHOD)
  private DeauthorizeCallbackMethodEnum deauthorizeCallbackMethod;

  public static final String SERIALIZED_NAME_DEAUTHORIZE_CALLBACK_URL = "deauthorize_callback_url";
  @SerializedName(SERIALIZED_NAME_DEAUTHORIZE_CALLBACK_URL)
  private URI deauthorizeCallbackUrl;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_HOMEPAGE_URL = "homepage_url";
  @SerializedName(SERIALIZED_NAME_HOMEPAGE_URL)
  private URI homepageUrl;

  public static final String SERIALIZED_NAME_PERMISSIONS = "permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private List<ConnectAppEnumPermission> permissions;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public ApiV2010AccountConnectApp() {
  }

  public ApiV2010AccountConnectApp accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ConnectApp resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public ApiV2010AccountConnectApp authorizeRedirectUrl(URI authorizeRedirectUrl) {
    this.authorizeRedirectUrl = authorizeRedirectUrl;
    return this;
  }

  /**
   * The URL we redirect the user to after we authenticate the user and obtain authorization to access the Connect App.
   * @return authorizeRedirectUrl
   */
  @javax.annotation.Nullable
  public URI getAuthorizeRedirectUrl() {
    return authorizeRedirectUrl;
  }

  public void setAuthorizeRedirectUrl(URI authorizeRedirectUrl) {
    this.authorizeRedirectUrl = authorizeRedirectUrl;
  }


  public ApiV2010AccountConnectApp companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * The company name set for the Connect App.
   * @return companyName
   */
  @javax.annotation.Nullable
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }


  public ApiV2010AccountConnectApp deauthorizeCallbackMethod(DeauthorizeCallbackMethodEnum deauthorizeCallbackMethod) {
    this.deauthorizeCallbackMethod = deauthorizeCallbackMethod;
    return this;
  }

  /**
   * The HTTP method we use to call &#x60;deauthorize_callback_url&#x60;.
   * @return deauthorizeCallbackMethod
   */
  @javax.annotation.Nullable
  public DeauthorizeCallbackMethodEnum getDeauthorizeCallbackMethod() {
    return deauthorizeCallbackMethod;
  }

  public void setDeauthorizeCallbackMethod(DeauthorizeCallbackMethodEnum deauthorizeCallbackMethod) {
    this.deauthorizeCallbackMethod = deauthorizeCallbackMethod;
  }


  public ApiV2010AccountConnectApp deauthorizeCallbackUrl(URI deauthorizeCallbackUrl) {
    this.deauthorizeCallbackUrl = deauthorizeCallbackUrl;
    return this;
  }

  /**
   * The URL we call using the &#x60;deauthorize_callback_method&#x60; to de-authorize the Connect App.
   * @return deauthorizeCallbackUrl
   */
  @javax.annotation.Nullable
  public URI getDeauthorizeCallbackUrl() {
    return deauthorizeCallbackUrl;
  }

  public void setDeauthorizeCallbackUrl(URI deauthorizeCallbackUrl) {
    this.deauthorizeCallbackUrl = deauthorizeCallbackUrl;
  }


  public ApiV2010AccountConnectApp description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the Connect App.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ApiV2010AccountConnectApp friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The string that you assigned to describe the resource.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public ApiV2010AccountConnectApp homepageUrl(URI homepageUrl) {
    this.homepageUrl = homepageUrl;
    return this;
  }

  /**
   * The public URL where users can obtain more information about this Connect App.
   * @return homepageUrl
   */
  @javax.annotation.Nullable
  public URI getHomepageUrl() {
    return homepageUrl;
  }

  public void setHomepageUrl(URI homepageUrl) {
    this.homepageUrl = homepageUrl;
  }


  public ApiV2010AccountConnectApp permissions(List<ConnectAppEnumPermission> permissions) {
    this.permissions = permissions;
    return this;
  }

  public ApiV2010AccountConnectApp addPermissionsItem(ConnectAppEnumPermission permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

  /**
   * The set of permissions that your ConnectApp requests.
   * @return permissions
   */
  @javax.annotation.Nullable
  public List<ConnectAppEnumPermission> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<ConnectAppEnumPermission> permissions) {
    this.permissions = permissions;
  }


  public ApiV2010AccountConnectApp sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that that we created to identify the ConnectApp resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public ApiV2010AccountConnectApp uri(String uri) {
    this.uri = uri;
    return this;
  }

  /**
   * The URI of the resource, relative to &#x60;https://api.twilio.com&#x60;.
   * @return uri
   */
  @javax.annotation.Nullable
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiV2010AccountConnectApp apiV2010AccountConnectApp = (ApiV2010AccountConnectApp) o;
    return Objects.equals(this.accountSid, apiV2010AccountConnectApp.accountSid) &&
        Objects.equals(this.authorizeRedirectUrl, apiV2010AccountConnectApp.authorizeRedirectUrl) &&
        Objects.equals(this.companyName, apiV2010AccountConnectApp.companyName) &&
        Objects.equals(this.deauthorizeCallbackMethod, apiV2010AccountConnectApp.deauthorizeCallbackMethod) &&
        Objects.equals(this.deauthorizeCallbackUrl, apiV2010AccountConnectApp.deauthorizeCallbackUrl) &&
        Objects.equals(this.description, apiV2010AccountConnectApp.description) &&
        Objects.equals(this.friendlyName, apiV2010AccountConnectApp.friendlyName) &&
        Objects.equals(this.homepageUrl, apiV2010AccountConnectApp.homepageUrl) &&
        Objects.equals(this.permissions, apiV2010AccountConnectApp.permissions) &&
        Objects.equals(this.sid, apiV2010AccountConnectApp.sid) &&
        Objects.equals(this.uri, apiV2010AccountConnectApp.uri);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, authorizeRedirectUrl, companyName, deauthorizeCallbackMethod, deauthorizeCallbackUrl, description, friendlyName, homepageUrl, permissions, sid, uri);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiV2010AccountConnectApp {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    authorizeRedirectUrl: ").append(toIndentedString(authorizeRedirectUrl)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    deauthorizeCallbackMethod: ").append(toIndentedString(deauthorizeCallbackMethod)).append("\n");
    sb.append("    deauthorizeCallbackUrl: ").append(toIndentedString(deauthorizeCallbackUrl)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    homepageUrl: ").append(toIndentedString(homepageUrl)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("authorize_redirect_url");
    openapiFields.add("company_name");
    openapiFields.add("deauthorize_callback_method");
    openapiFields.add("deauthorize_callback_url");
    openapiFields.add("description");
    openapiFields.add("friendly_name");
    openapiFields.add("homepage_url");
    openapiFields.add("permissions");
    openapiFields.add("sid");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ApiV2010AccountConnectApp
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ApiV2010AccountConnectApp.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiV2010AccountConnectApp is not found in the empty JSON string", ApiV2010AccountConnectApp.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ApiV2010AccountConnectApp.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiV2010AccountConnectApp` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("authorize_redirect_url") != null && !jsonObj.get("authorize_redirect_url").isJsonNull()) && !jsonObj.get("authorize_redirect_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorize_redirect_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorize_redirect_url").toString()));
      }
      if ((jsonObj.get("company_name") != null && !jsonObj.get("company_name").isJsonNull()) && !jsonObj.get("company_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company_name").toString()));
      }
      if ((jsonObj.get("deauthorize_callback_method") != null && !jsonObj.get("deauthorize_callback_method").isJsonNull()) && !jsonObj.get("deauthorize_callback_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deauthorize_callback_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deauthorize_callback_method").toString()));
      }
      // validate the optional field `deauthorize_callback_method`
      if (jsonObj.get("deauthorize_callback_method") != null && !jsonObj.get("deauthorize_callback_method").isJsonNull()) {
        DeauthorizeCallbackMethodEnum.validateJsonElement(jsonObj.get("deauthorize_callback_method"));
      }
      if ((jsonObj.get("deauthorize_callback_url") != null && !jsonObj.get("deauthorize_callback_url").isJsonNull()) && !jsonObj.get("deauthorize_callback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deauthorize_callback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deauthorize_callback_url").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("homepage_url") != null && !jsonObj.get("homepage_url").isJsonNull()) && !jsonObj.get("homepage_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homepage_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homepage_url").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("permissions") != null && !jsonObj.get("permissions").isJsonNull() && !jsonObj.get("permissions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `permissions` to be an array in the JSON string but got `%s`", jsonObj.get("permissions").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiV2010AccountConnectApp.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiV2010AccountConnectApp' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiV2010AccountConnectApp> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiV2010AccountConnectApp.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiV2010AccountConnectApp>() {
           @Override
           public void write(JsonWriter out, ApiV2010AccountConnectApp value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiV2010AccountConnectApp read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ApiV2010AccountConnectApp given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ApiV2010AccountConnectApp
   * @throws IOException if the JSON string is invalid with respect to ApiV2010AccountConnectApp
   */
  public static ApiV2010AccountConnectApp fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiV2010AccountConnectApp.class);
  }

  /**
   * Convert an instance of ApiV2010AccountConnectApp to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

