/*
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VerifyV2Service
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:27.328026-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VerifyV2Service {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_CODE_LENGTH = "code_length";
  @SerializedName(SERIALIZED_NAME_CODE_LENGTH)
  private Integer codeLength;

  public static final String SERIALIZED_NAME_CUSTOM_CODE_ENABLED = "custom_code_enabled";
  @SerializedName(SERIALIZED_NAME_CUSTOM_CODE_ENABLED)
  private Boolean customCodeEnabled;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_DEFAULT_TEMPLATE_SID = "default_template_sid";
  @SerializedName(SERIALIZED_NAME_DEFAULT_TEMPLATE_SID)
  private String defaultTemplateSid;

  public static final String SERIALIZED_NAME_DO_NOT_SHARE_WARNING_ENABLED = "do_not_share_warning_enabled";
  @SerializedName(SERIALIZED_NAME_DO_NOT_SHARE_WARNING_ENABLED)
  private Boolean doNotShareWarningEnabled;

  public static final String SERIALIZED_NAME_DTMF_INPUT_REQUIRED = "dtmf_input_required";
  @SerializedName(SERIALIZED_NAME_DTMF_INPUT_REQUIRED)
  private Boolean dtmfInputRequired;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_LOOKUP_ENABLED = "lookup_enabled";
  @SerializedName(SERIALIZED_NAME_LOOKUP_ENABLED)
  private Boolean lookupEnabled;

  public static final String SERIALIZED_NAME_PSD2_ENABLED = "psd2_enabled";
  @SerializedName(SERIALIZED_NAME_PSD2_ENABLED)
  private Boolean psd2Enabled;

  public static final String SERIALIZED_NAME_PUSH = "push";
  @SerializedName(SERIALIZED_NAME_PUSH)
  private Object push = null;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_SKIP_SMS_TO_LANDLINES = "skip_sms_to_landlines";
  @SerializedName(SERIALIZED_NAME_SKIP_SMS_TO_LANDLINES)
  private Boolean skipSmsToLandlines;

  public static final String SERIALIZED_NAME_TOTP = "totp";
  @SerializedName(SERIALIZED_NAME_TOTP)
  private Object totp = null;

  public static final String SERIALIZED_NAME_TTS_NAME = "tts_name";
  @SerializedName(SERIALIZED_NAME_TTS_NAME)
  private String ttsName;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_VERIFY_EVENT_SUBSCRIPTION_ENABLED = "verify_event_subscription_enabled";
  @SerializedName(SERIALIZED_NAME_VERIFY_EVENT_SUBSCRIPTION_ENABLED)
  private Boolean verifyEventSubscriptionEnabled;

  public VerifyV2Service() {
  }

  public VerifyV2Service accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public VerifyV2Service codeLength(Integer codeLength) {
    this.codeLength = codeLength;
    return this;
  }

  /**
   * The length of the verification code to generate.
   * @return codeLength
   */
  @javax.annotation.Nullable
  public Integer getCodeLength() {
    return codeLength;
  }

  public void setCodeLength(Integer codeLength) {
    this.codeLength = codeLength;
  }


  public VerifyV2Service customCodeEnabled(Boolean customCodeEnabled) {
    this.customCodeEnabled = customCodeEnabled;
    return this;
  }

  /**
   * Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.
   * @return customCodeEnabled
   */
  @javax.annotation.Nullable
  public Boolean getCustomCodeEnabled() {
    return customCodeEnabled;
  }

  public void setCustomCodeEnabled(Boolean customCodeEnabled) {
    this.customCodeEnabled = customCodeEnabled;
  }


  public VerifyV2Service dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public VerifyV2Service dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public VerifyV2Service defaultTemplateSid(String defaultTemplateSid) {
    this.defaultTemplateSid = defaultTemplateSid;
    return this;
  }

  /**
   * Get defaultTemplateSid
   * @return defaultTemplateSid
   */
  @javax.annotation.Nullable
  public String getDefaultTemplateSid() {
    return defaultTemplateSid;
  }

  public void setDefaultTemplateSid(String defaultTemplateSid) {
    this.defaultTemplateSid = defaultTemplateSid;
  }


  public VerifyV2Service doNotShareWarningEnabled(Boolean doNotShareWarningEnabled) {
    this.doNotShareWarningEnabled = doNotShareWarningEnabled;
    return this;
  }

  /**
   * Whether to add a security warning at the end of an SMS verification body. Disabled by default and applies only to SMS. Example SMS body: &#x60;Your AppName verification code is: 1234. Donâ€™t share this code with anyone; our employees will never ask for the code&#x60;
   * @return doNotShareWarningEnabled
   */
  @javax.annotation.Nullable
  public Boolean getDoNotShareWarningEnabled() {
    return doNotShareWarningEnabled;
  }

  public void setDoNotShareWarningEnabled(Boolean doNotShareWarningEnabled) {
    this.doNotShareWarningEnabled = doNotShareWarningEnabled;
  }


  public VerifyV2Service dtmfInputRequired(Boolean dtmfInputRequired) {
    this.dtmfInputRequired = dtmfInputRequired;
    return this;
  }

  /**
   * Whether to ask the user to press a number before delivering the verify code in a phone call.
   * @return dtmfInputRequired
   */
  @javax.annotation.Nullable
  public Boolean getDtmfInputRequired() {
    return dtmfInputRequired;
  }

  public void setDtmfInputRequired(Boolean dtmfInputRequired) {
    this.dtmfInputRequired = dtmfInputRequired;
  }


  public VerifyV2Service friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The string that you assigned to describe the verification service. It can be up to 32 characters long. **This value should not contain PII.**
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public VerifyV2Service links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * The URLs of related resources.
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public VerifyV2Service lookupEnabled(Boolean lookupEnabled) {
    this.lookupEnabled = lookupEnabled;
    return this;
  }

  /**
   * Whether to perform a lookup with each verification started and return info about the phone number.
   * @return lookupEnabled
   */
  @javax.annotation.Nullable
  public Boolean getLookupEnabled() {
    return lookupEnabled;
  }

  public void setLookupEnabled(Boolean lookupEnabled) {
    this.lookupEnabled = lookupEnabled;
  }


  public VerifyV2Service psd2Enabled(Boolean psd2Enabled) {
    this.psd2Enabled = psd2Enabled;
    return this;
  }

  /**
   * Whether to pass PSD2 transaction parameters when starting a verification.
   * @return psd2Enabled
   */
  @javax.annotation.Nullable
  public Boolean getPsd2Enabled() {
    return psd2Enabled;
  }

  public void setPsd2Enabled(Boolean psd2Enabled) {
    this.psd2Enabled = psd2Enabled;
  }


  public VerifyV2Service push(Object push) {
    this.push = push;
    return this;
  }

  /**
   * Configurations for the Push factors (channel) created under this Service.
   * @return push
   */
  @javax.annotation.Nullable
  public Object getPush() {
    return push;
  }

  public void setPush(Object push) {
    this.push = push;
  }


  public VerifyV2Service sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Service resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public VerifyV2Service skipSmsToLandlines(Boolean skipSmsToLandlines) {
    this.skipSmsToLandlines = skipSmsToLandlines;
    return this;
  }

  /**
   * Whether to skip sending SMS verifications to landlines. Requires &#x60;lookup_enabled&#x60;.
   * @return skipSmsToLandlines
   */
  @javax.annotation.Nullable
  public Boolean getSkipSmsToLandlines() {
    return skipSmsToLandlines;
  }

  public void setSkipSmsToLandlines(Boolean skipSmsToLandlines) {
    this.skipSmsToLandlines = skipSmsToLandlines;
  }


  public VerifyV2Service totp(Object totp) {
    this.totp = totp;
    return this;
  }

  /**
   * Configurations for the TOTP factors (channel) created under this Service.
   * @return totp
   */
  @javax.annotation.Nullable
  public Object getTotp() {
    return totp;
  }

  public void setTotp(Object totp) {
    this.totp = totp;
  }


  public VerifyV2Service ttsName(String ttsName) {
    this.ttsName = ttsName;
    return this;
  }

  /**
   * The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.
   * @return ttsName
   */
  @javax.annotation.Nullable
  public String getTtsName() {
    return ttsName;
  }

  public void setTtsName(String ttsName) {
    this.ttsName = ttsName;
  }


  public VerifyV2Service url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public VerifyV2Service verifyEventSubscriptionEnabled(Boolean verifyEventSubscriptionEnabled) {
    this.verifyEventSubscriptionEnabled = verifyEventSubscriptionEnabled;
    return this;
  }

  /**
   * Whether to allow verifications from the service to reach the stream-events sinks if configured
   * @return verifyEventSubscriptionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getVerifyEventSubscriptionEnabled() {
    return verifyEventSubscriptionEnabled;
  }

  public void setVerifyEventSubscriptionEnabled(Boolean verifyEventSubscriptionEnabled) {
    this.verifyEventSubscriptionEnabled = verifyEventSubscriptionEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerifyV2Service verifyV2Service = (VerifyV2Service) o;
    return Objects.equals(this.accountSid, verifyV2Service.accountSid) &&
        Objects.equals(this.codeLength, verifyV2Service.codeLength) &&
        Objects.equals(this.customCodeEnabled, verifyV2Service.customCodeEnabled) &&
        Objects.equals(this.dateCreated, verifyV2Service.dateCreated) &&
        Objects.equals(this.dateUpdated, verifyV2Service.dateUpdated) &&
        Objects.equals(this.defaultTemplateSid, verifyV2Service.defaultTemplateSid) &&
        Objects.equals(this.doNotShareWarningEnabled, verifyV2Service.doNotShareWarningEnabled) &&
        Objects.equals(this.dtmfInputRequired, verifyV2Service.dtmfInputRequired) &&
        Objects.equals(this.friendlyName, verifyV2Service.friendlyName) &&
        Objects.equals(this.links, verifyV2Service.links) &&
        Objects.equals(this.lookupEnabled, verifyV2Service.lookupEnabled) &&
        Objects.equals(this.psd2Enabled, verifyV2Service.psd2Enabled) &&
        Objects.equals(this.push, verifyV2Service.push) &&
        Objects.equals(this.sid, verifyV2Service.sid) &&
        Objects.equals(this.skipSmsToLandlines, verifyV2Service.skipSmsToLandlines) &&
        Objects.equals(this.totp, verifyV2Service.totp) &&
        Objects.equals(this.ttsName, verifyV2Service.ttsName) &&
        Objects.equals(this.url, verifyV2Service.url) &&
        Objects.equals(this.verifyEventSubscriptionEnabled, verifyV2Service.verifyEventSubscriptionEnabled);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, codeLength, customCodeEnabled, dateCreated, dateUpdated, defaultTemplateSid, doNotShareWarningEnabled, dtmfInputRequired, friendlyName, links, lookupEnabled, psd2Enabled, push, sid, skipSmsToLandlines, totp, ttsName, url, verifyEventSubscriptionEnabled);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerifyV2Service {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    codeLength: ").append(toIndentedString(codeLength)).append("\n");
    sb.append("    customCodeEnabled: ").append(toIndentedString(customCodeEnabled)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    defaultTemplateSid: ").append(toIndentedString(defaultTemplateSid)).append("\n");
    sb.append("    doNotShareWarningEnabled: ").append(toIndentedString(doNotShareWarningEnabled)).append("\n");
    sb.append("    dtmfInputRequired: ").append(toIndentedString(dtmfInputRequired)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    lookupEnabled: ").append(toIndentedString(lookupEnabled)).append("\n");
    sb.append("    psd2Enabled: ").append(toIndentedString(psd2Enabled)).append("\n");
    sb.append("    push: ").append(toIndentedString(push)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    skipSmsToLandlines: ").append(toIndentedString(skipSmsToLandlines)).append("\n");
    sb.append("    totp: ").append(toIndentedString(totp)).append("\n");
    sb.append("    ttsName: ").append(toIndentedString(ttsName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    verifyEventSubscriptionEnabled: ").append(toIndentedString(verifyEventSubscriptionEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("code_length");
    openapiFields.add("custom_code_enabled");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("default_template_sid");
    openapiFields.add("do_not_share_warning_enabled");
    openapiFields.add("dtmf_input_required");
    openapiFields.add("friendly_name");
    openapiFields.add("links");
    openapiFields.add("lookup_enabled");
    openapiFields.add("psd2_enabled");
    openapiFields.add("push");
    openapiFields.add("sid");
    openapiFields.add("skip_sms_to_landlines");
    openapiFields.add("totp");
    openapiFields.add("tts_name");
    openapiFields.add("url");
    openapiFields.add("verify_event_subscription_enabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VerifyV2Service
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VerifyV2Service.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VerifyV2Service is not found in the empty JSON string", VerifyV2Service.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VerifyV2Service.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VerifyV2Service` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("default_template_sid") != null && !jsonObj.get("default_template_sid").isJsonNull()) && !jsonObj.get("default_template_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_template_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_template_sid").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("tts_name") != null && !jsonObj.get("tts_name").isJsonNull()) && !jsonObj.get("tts_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tts_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tts_name").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VerifyV2Service.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VerifyV2Service' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VerifyV2Service> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VerifyV2Service.class));

       return (TypeAdapter<T>) new TypeAdapter<VerifyV2Service>() {
           @Override
           public void write(JsonWriter out, VerifyV2Service value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VerifyV2Service read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VerifyV2Service given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VerifyV2Service
   * @throws IOException if the JSON string is invalid with respect to VerifyV2Service
   */
  public static VerifyV2Service fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VerifyV2Service.class);
  }

  /**
   * Convert an instance of VerifyV2Service to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

