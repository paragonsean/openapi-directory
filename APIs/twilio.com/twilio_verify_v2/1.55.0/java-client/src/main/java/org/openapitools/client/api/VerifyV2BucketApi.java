/*
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ListBucketResponse;
import org.openapitools.client.model.VerifyV2ServiceRateLimitBucket;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VerifyV2BucketApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VerifyV2BucketApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VerifyV2BucketApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createBucket
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param interval Number of seconds that the rate limit will be enforced over. (required)
     * @param max Maximum number of requests permitted in during the interval. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createBucketCall(String serviceSid, String rateLimitSid, Integer interval, Integer max, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://verify.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets"
            .replace("{" + "ServiceSid" + "}", localVarApiClient.escapeString(serviceSid.toString()))
            .replace("{" + "RateLimitSid" + "}", localVarApiClient.escapeString(rateLimitSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (interval != null) {
            localVarFormParams.put("Interval", interval);
        }

        if (max != null) {
            localVarFormParams.put("Max", max);
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createBucketValidateBeforeCall(String serviceSid, String rateLimitSid, Integer interval, Integer max, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'serviceSid' is set
        if (serviceSid == null) {
            throw new ApiException("Missing the required parameter 'serviceSid' when calling createBucket(Async)");
        }

        // verify the required parameter 'rateLimitSid' is set
        if (rateLimitSid == null) {
            throw new ApiException("Missing the required parameter 'rateLimitSid' when calling createBucket(Async)");
        }

        // verify the required parameter 'interval' is set
        if (interval == null) {
            throw new ApiException("Missing the required parameter 'interval' when calling createBucket(Async)");
        }

        // verify the required parameter 'max' is set
        if (max == null) {
            throw new ApiException("Missing the required parameter 'max' when calling createBucket(Async)");
        }

        return createBucketCall(serviceSid, rateLimitSid, interval, max, _callback);

    }

    /**
     * 
     * Create a new Bucket for a Rate Limit
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param interval Number of seconds that the rate limit will be enforced over. (required)
     * @param max Maximum number of requests permitted in during the interval. (required)
     * @return VerifyV2ServiceRateLimitBucket
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public VerifyV2ServiceRateLimitBucket createBucket(String serviceSid, String rateLimitSid, Integer interval, Integer max) throws ApiException {
        ApiResponse<VerifyV2ServiceRateLimitBucket> localVarResp = createBucketWithHttpInfo(serviceSid, rateLimitSid, interval, max);
        return localVarResp.getData();
    }

    /**
     * 
     * Create a new Bucket for a Rate Limit
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param interval Number of seconds that the rate limit will be enforced over. (required)
     * @param max Maximum number of requests permitted in during the interval. (required)
     * @return ApiResponse&lt;VerifyV2ServiceRateLimitBucket&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VerifyV2ServiceRateLimitBucket> createBucketWithHttpInfo(String serviceSid, String rateLimitSid, Integer interval, Integer max) throws ApiException {
        okhttp3.Call localVarCall = createBucketValidateBeforeCall(serviceSid, rateLimitSid, interval, max, null);
        Type localVarReturnType = new TypeToken<VerifyV2ServiceRateLimitBucket>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Create a new Bucket for a Rate Limit
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param interval Number of seconds that the rate limit will be enforced over. (required)
     * @param max Maximum number of requests permitted in during the interval. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createBucketAsync(String serviceSid, String rateLimitSid, Integer interval, Integer max, final ApiCallback<VerifyV2ServiceRateLimitBucket> _callback) throws ApiException {

        okhttp3.Call localVarCall = createBucketValidateBeforeCall(serviceSid, rateLimitSid, interval, max, _callback);
        Type localVarReturnType = new TypeToken<VerifyV2ServiceRateLimitBucket>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteBucket
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param sid A 34 character string that uniquely identifies this Bucket. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteBucketCall(String serviceSid, String rateLimitSid, String sid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://verify.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}"
            .replace("{" + "ServiceSid" + "}", localVarApiClient.escapeString(serviceSid.toString()))
            .replace("{" + "RateLimitSid" + "}", localVarApiClient.escapeString(rateLimitSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteBucketValidateBeforeCall(String serviceSid, String rateLimitSid, String sid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'serviceSid' is set
        if (serviceSid == null) {
            throw new ApiException("Missing the required parameter 'serviceSid' when calling deleteBucket(Async)");
        }

        // verify the required parameter 'rateLimitSid' is set
        if (rateLimitSid == null) {
            throw new ApiException("Missing the required parameter 'rateLimitSid' when calling deleteBucket(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling deleteBucket(Async)");
        }

        return deleteBucketCall(serviceSid, rateLimitSid, sid, _callback);

    }

    /**
     * 
     * Delete a specific Bucket.
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param sid A 34 character string that uniquely identifies this Bucket. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public void deleteBucket(String serviceSid, String rateLimitSid, String sid) throws ApiException {
        deleteBucketWithHttpInfo(serviceSid, rateLimitSid, sid);
    }

    /**
     * 
     * Delete a specific Bucket.
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param sid A 34 character string that uniquely identifies this Bucket. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> deleteBucketWithHttpInfo(String serviceSid, String rateLimitSid, String sid) throws ApiException {
        okhttp3.Call localVarCall = deleteBucketValidateBeforeCall(serviceSid, rateLimitSid, sid, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Delete a specific Bucket.
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param sid A 34 character string that uniquely identifies this Bucket. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteBucketAsync(String serviceSid, String rateLimitSid, String sid, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteBucketValidateBeforeCall(serviceSid, rateLimitSid, sid, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchBucket
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param sid A 34 character string that uniquely identifies this Bucket. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchBucketCall(String serviceSid, String rateLimitSid, String sid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://verify.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}"
            .replace("{" + "ServiceSid" + "}", localVarApiClient.escapeString(serviceSid.toString()))
            .replace("{" + "RateLimitSid" + "}", localVarApiClient.escapeString(rateLimitSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchBucketValidateBeforeCall(String serviceSid, String rateLimitSid, String sid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'serviceSid' is set
        if (serviceSid == null) {
            throw new ApiException("Missing the required parameter 'serviceSid' when calling fetchBucket(Async)");
        }

        // verify the required parameter 'rateLimitSid' is set
        if (rateLimitSid == null) {
            throw new ApiException("Missing the required parameter 'rateLimitSid' when calling fetchBucket(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling fetchBucket(Async)");
        }

        return fetchBucketCall(serviceSid, rateLimitSid, sid, _callback);

    }

    /**
     * 
     * Fetch a specific Bucket.
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param sid A 34 character string that uniquely identifies this Bucket. (required)
     * @return VerifyV2ServiceRateLimitBucket
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public VerifyV2ServiceRateLimitBucket fetchBucket(String serviceSid, String rateLimitSid, String sid) throws ApiException {
        ApiResponse<VerifyV2ServiceRateLimitBucket> localVarResp = fetchBucketWithHttpInfo(serviceSid, rateLimitSid, sid);
        return localVarResp.getData();
    }

    /**
     * 
     * Fetch a specific Bucket.
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param sid A 34 character string that uniquely identifies this Bucket. (required)
     * @return ApiResponse&lt;VerifyV2ServiceRateLimitBucket&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VerifyV2ServiceRateLimitBucket> fetchBucketWithHttpInfo(String serviceSid, String rateLimitSid, String sid) throws ApiException {
        okhttp3.Call localVarCall = fetchBucketValidateBeforeCall(serviceSid, rateLimitSid, sid, null);
        Type localVarReturnType = new TypeToken<VerifyV2ServiceRateLimitBucket>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Fetch a specific Bucket.
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param sid A 34 character string that uniquely identifies this Bucket. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchBucketAsync(String serviceSid, String rateLimitSid, String sid, final ApiCallback<VerifyV2ServiceRateLimitBucket> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchBucketValidateBeforeCall(serviceSid, rateLimitSid, sid, _callback);
        Type localVarReturnType = new TypeToken<VerifyV2ServiceRateLimitBucket>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listBucket
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listBucketCall(String serviceSid, String rateLimitSid, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://verify.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets"
            .replace("{" + "ServiceSid" + "}", localVarApiClient.escapeString(serviceSid.toString()))
            .replace("{" + "RateLimitSid" + "}", localVarApiClient.escapeString(rateLimitSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageSize", pageSize));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Page", page));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listBucketValidateBeforeCall(String serviceSid, String rateLimitSid, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'serviceSid' is set
        if (serviceSid == null) {
            throw new ApiException("Missing the required parameter 'serviceSid' when calling listBucket(Async)");
        }

        // verify the required parameter 'rateLimitSid' is set
        if (rateLimitSid == null) {
            throw new ApiException("Missing the required parameter 'rateLimitSid' when calling listBucket(Async)");
        }

        return listBucketCall(serviceSid, rateLimitSid, pageSize, page, pageToken, _callback);

    }

    /**
     * 
     * Retrieve a list of all Buckets for a Rate Limit.
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ListBucketResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ListBucketResponse listBucket(String serviceSid, String rateLimitSid, Integer pageSize, Integer page, String pageToken) throws ApiException {
        ApiResponse<ListBucketResponse> localVarResp = listBucketWithHttpInfo(serviceSid, rateLimitSid, pageSize, page, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve a list of all Buckets for a Rate Limit.
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ApiResponse&lt;ListBucketResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListBucketResponse> listBucketWithHttpInfo(String serviceSid, String rateLimitSid, Integer pageSize, Integer page, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = listBucketValidateBeforeCall(serviceSid, rateLimitSid, pageSize, page, pageToken, null);
        Type localVarReturnType = new TypeToken<ListBucketResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve a list of all Buckets for a Rate Limit.
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listBucketAsync(String serviceSid, String rateLimitSid, Integer pageSize, Integer page, String pageToken, final ApiCallback<ListBucketResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listBucketValidateBeforeCall(serviceSid, rateLimitSid, pageSize, page, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ListBucketResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateBucket
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param sid A 34 character string that uniquely identifies this Bucket. (required)
     * @param interval Number of seconds that the rate limit will be enforced over. (optional)
     * @param max Maximum number of requests permitted in during the interval. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateBucketCall(String serviceSid, String rateLimitSid, String sid, Integer interval, Integer max, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://verify.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}"
            .replace("{" + "ServiceSid" + "}", localVarApiClient.escapeString(serviceSid.toString()))
            .replace("{" + "RateLimitSid" + "}", localVarApiClient.escapeString(rateLimitSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (interval != null) {
            localVarFormParams.put("Interval", interval);
        }

        if (max != null) {
            localVarFormParams.put("Max", max);
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateBucketValidateBeforeCall(String serviceSid, String rateLimitSid, String sid, Integer interval, Integer max, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'serviceSid' is set
        if (serviceSid == null) {
            throw new ApiException("Missing the required parameter 'serviceSid' when calling updateBucket(Async)");
        }

        // verify the required parameter 'rateLimitSid' is set
        if (rateLimitSid == null) {
            throw new ApiException("Missing the required parameter 'rateLimitSid' when calling updateBucket(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling updateBucket(Async)");
        }

        return updateBucketCall(serviceSid, rateLimitSid, sid, interval, max, _callback);

    }

    /**
     * 
     * Update a specific Bucket.
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param sid A 34 character string that uniquely identifies this Bucket. (required)
     * @param interval Number of seconds that the rate limit will be enforced over. (optional)
     * @param max Maximum number of requests permitted in during the interval. (optional)
     * @return VerifyV2ServiceRateLimitBucket
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public VerifyV2ServiceRateLimitBucket updateBucket(String serviceSid, String rateLimitSid, String sid, Integer interval, Integer max) throws ApiException {
        ApiResponse<VerifyV2ServiceRateLimitBucket> localVarResp = updateBucketWithHttpInfo(serviceSid, rateLimitSid, sid, interval, max);
        return localVarResp.getData();
    }

    /**
     * 
     * Update a specific Bucket.
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param sid A 34 character string that uniquely identifies this Bucket. (required)
     * @param interval Number of seconds that the rate limit will be enforced over. (optional)
     * @param max Maximum number of requests permitted in during the interval. (optional)
     * @return ApiResponse&lt;VerifyV2ServiceRateLimitBucket&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VerifyV2ServiceRateLimitBucket> updateBucketWithHttpInfo(String serviceSid, String rateLimitSid, String sid, Integer interval, Integer max) throws ApiException {
        okhttp3.Call localVarCall = updateBucketValidateBeforeCall(serviceSid, rateLimitSid, sid, interval, max, null);
        Type localVarReturnType = new TypeToken<VerifyV2ServiceRateLimitBucket>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update a specific Bucket.
     * @param serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with. (required)
     * @param rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource. (required)
     * @param sid A 34 character string that uniquely identifies this Bucket. (required)
     * @param interval Number of seconds that the rate limit will be enforced over. (optional)
     * @param max Maximum number of requests permitted in during the interval. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateBucketAsync(String serviceSid, String rateLimitSid, String sid, Integer interval, Integer max, final ApiCallback<VerifyV2ServiceRateLimitBucket> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateBucketValidateBeforeCall(serviceSid, rateLimitSid, sid, interval, max, _callback);
        Type localVarReturnType = new TypeToken<VerifyV2ServiceRateLimitBucket>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
