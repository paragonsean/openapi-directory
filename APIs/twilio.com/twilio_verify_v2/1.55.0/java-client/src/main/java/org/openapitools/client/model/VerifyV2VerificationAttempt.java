/*
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.VerificationAttemptEnumChannels;
import org.openapitools.client.model.VerificationAttemptEnumConversionStatus;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VerifyV2VerificationAttempt
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:27.328026-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VerifyV2VerificationAttempt {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private VerificationAttemptEnumChannels channel;

  public static final String SERIALIZED_NAME_CHANNEL_DATA = "channel_data";
  @SerializedName(SERIALIZED_NAME_CHANNEL_DATA)
  private Object channelData = null;

  public static final String SERIALIZED_NAME_CONVERSION_STATUS = "conversion_status";
  @SerializedName(SERIALIZED_NAME_CONVERSION_STATUS)
  private VerificationAttemptEnumConversionStatus conversionStatus;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Object price = null;

  public static final String SERIALIZED_NAME_SERVICE_SID = "service_sid";
  @SerializedName(SERIALIZED_NAME_SERVICE_SID)
  private String serviceSid;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_VERIFICATION_SID = "verification_sid";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_SID)
  private String verificationSid;

  public VerifyV2VerificationAttempt() {
  }

  public VerifyV2VerificationAttempt accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Verification resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public VerifyV2VerificationAttempt channel(VerificationAttemptEnumChannels channel) {
    this.channel = channel;
    return this;
  }

  /**
   * Get channel
   * @return channel
   */
  @javax.annotation.Nullable
  public VerificationAttemptEnumChannels getChannel() {
    return channel;
  }

  public void setChannel(VerificationAttemptEnumChannels channel) {
    this.channel = channel;
  }


  public VerifyV2VerificationAttempt channelData(Object channelData) {
    this.channelData = channelData;
    return this;
  }

  /**
   * An object containing the channel specific information for an attempt.
   * @return channelData
   */
  @javax.annotation.Nullable
  public Object getChannelData() {
    return channelData;
  }

  public void setChannelData(Object channelData) {
    this.channelData = channelData;
  }


  public VerifyV2VerificationAttempt conversionStatus(VerificationAttemptEnumConversionStatus conversionStatus) {
    this.conversionStatus = conversionStatus;
    return this;
  }

  /**
   * Get conversionStatus
   * @return conversionStatus
   */
  @javax.annotation.Nullable
  public VerificationAttemptEnumConversionStatus getConversionStatus() {
    return conversionStatus;
  }

  public void setConversionStatus(VerificationAttemptEnumConversionStatus conversionStatus) {
    this.conversionStatus = conversionStatus;
  }


  public VerifyV2VerificationAttempt dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date that this Attempt was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public VerifyV2VerificationAttempt dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date that this Attempt was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public VerifyV2VerificationAttempt price(Object price) {
    this.price = price;
    return this;
  }

  /**
   * An object containing the charge for this verification attempt related to the channel costs and the currency used. The costs related to the succeeded verifications are not included. May not be immediately available. More information on pricing is available [here](https://www.twilio.com/en-us/verify/pricing).
   * @return price
   */
  @javax.annotation.Nullable
  public Object getPrice() {
    return price;
  }

  public void setPrice(Object price) {
    this.price = price;
  }


  public VerifyV2VerificationAttempt serviceSid(String serviceSid) {
    this.serviceSid = serviceSid;
    return this;
  }

  /**
   * The SID of the [Service](https://www.twilio.com/docs/verify/api/service) used to generate the attempt.
   * @return serviceSid
   */
  @javax.annotation.Nullable
  public String getServiceSid() {
    return serviceSid;
  }

  public void setServiceSid(String serviceSid) {
    this.serviceSid = serviceSid;
  }


  public VerifyV2VerificationAttempt sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The SID that uniquely identifies the verification attempt resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public VerifyV2VerificationAttempt url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public VerifyV2VerificationAttempt verificationSid(String verificationSid) {
    this.verificationSid = verificationSid;
    return this;
  }

  /**
   * The SID of the [Verification](https://www.twilio.com/docs/verify/api/verification) that generated the attempt.
   * @return verificationSid
   */
  @javax.annotation.Nullable
  public String getVerificationSid() {
    return verificationSid;
  }

  public void setVerificationSid(String verificationSid) {
    this.verificationSid = verificationSid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerifyV2VerificationAttempt verifyV2VerificationAttempt = (VerifyV2VerificationAttempt) o;
    return Objects.equals(this.accountSid, verifyV2VerificationAttempt.accountSid) &&
        Objects.equals(this.channel, verifyV2VerificationAttempt.channel) &&
        Objects.equals(this.channelData, verifyV2VerificationAttempt.channelData) &&
        Objects.equals(this.conversionStatus, verifyV2VerificationAttempt.conversionStatus) &&
        Objects.equals(this.dateCreated, verifyV2VerificationAttempt.dateCreated) &&
        Objects.equals(this.dateUpdated, verifyV2VerificationAttempt.dateUpdated) &&
        Objects.equals(this.price, verifyV2VerificationAttempt.price) &&
        Objects.equals(this.serviceSid, verifyV2VerificationAttempt.serviceSid) &&
        Objects.equals(this.sid, verifyV2VerificationAttempt.sid) &&
        Objects.equals(this.url, verifyV2VerificationAttempt.url) &&
        Objects.equals(this.verificationSid, verifyV2VerificationAttempt.verificationSid);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, channel, channelData, conversionStatus, dateCreated, dateUpdated, price, serviceSid, sid, url, verificationSid);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerifyV2VerificationAttempt {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    channelData: ").append(toIndentedString(channelData)).append("\n");
    sb.append("    conversionStatus: ").append(toIndentedString(conversionStatus)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    serviceSid: ").append(toIndentedString(serviceSid)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    verificationSid: ").append(toIndentedString(verificationSid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("channel");
    openapiFields.add("channel_data");
    openapiFields.add("conversion_status");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("price");
    openapiFields.add("service_sid");
    openapiFields.add("sid");
    openapiFields.add("url");
    openapiFields.add("verification_sid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VerifyV2VerificationAttempt
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VerifyV2VerificationAttempt.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VerifyV2VerificationAttempt is not found in the empty JSON string", VerifyV2VerificationAttempt.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VerifyV2VerificationAttempt.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VerifyV2VerificationAttempt` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("channel") != null && !jsonObj.get("channel").isJsonNull()) && !jsonObj.get("channel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channel").toString()));
      }
      // validate the optional field `channel`
      if (jsonObj.get("channel") != null && !jsonObj.get("channel").isJsonNull()) {
        VerificationAttemptEnumChannels.validateJsonElement(jsonObj.get("channel"));
      }
      if ((jsonObj.get("conversion_status") != null && !jsonObj.get("conversion_status").isJsonNull()) && !jsonObj.get("conversion_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversion_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversion_status").toString()));
      }
      // validate the optional field `conversion_status`
      if (jsonObj.get("conversion_status") != null && !jsonObj.get("conversion_status").isJsonNull()) {
        VerificationAttemptEnumConversionStatus.validateJsonElement(jsonObj.get("conversion_status"));
      }
      if ((jsonObj.get("service_sid") != null && !jsonObj.get("service_sid").isJsonNull()) && !jsonObj.get("service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("verification_sid") != null && !jsonObj.get("verification_sid").isJsonNull()) && !jsonObj.get("verification_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verification_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verification_sid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VerifyV2VerificationAttempt.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VerifyV2VerificationAttempt' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VerifyV2VerificationAttempt> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VerifyV2VerificationAttempt.class));

       return (TypeAdapter<T>) new TypeAdapter<VerifyV2VerificationAttempt>() {
           @Override
           public void write(JsonWriter out, VerifyV2VerificationAttempt value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VerifyV2VerificationAttempt read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VerifyV2VerificationAttempt given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VerifyV2VerificationAttempt
   * @throws IOException if the JSON string is invalid with respect to VerifyV2VerificationAttempt
   */
  public static VerifyV2VerificationAttempt fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VerifyV2VerificationAttempt.class);
  }

  /**
   * Convert an instance of VerifyV2VerificationAttempt to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

