/*
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListServiceResponse;
import org.openapitools.client.model.VerifyV2Service;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VerifyV2ServiceApi
 */
@Disabled
public class VerifyV2ServiceApiTest {

    private final VerifyV2ServiceApi api = new VerifyV2ServiceApi();

    /**
     * Create a new Verification Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createServiceTest() throws ApiException {
        String friendlyName = null;
        Integer codeLength = null;
        Boolean customCodeEnabled = null;
        String defaultTemplateSid = null;
        Boolean doNotShareWarningEnabled = null;
        Boolean dtmfInputRequired = null;
        Boolean lookupEnabled = null;
        Boolean psd2Enabled = null;
        String pushApnCredentialSid = null;
        String pushFcmCredentialSid = null;
        Boolean pushIncludeDate = null;
        Boolean skipSmsToLandlines = null;
        Integer totpCodeLength = null;
        String totpIssuer = null;
        Integer totpSkew = null;
        Integer totpTimeStep = null;
        String ttsName = null;
        Boolean verifyEventSubscriptionEnabled = null;
        VerifyV2Service response = api.createService(friendlyName, codeLength, customCodeEnabled, defaultTemplateSid, doNotShareWarningEnabled, dtmfInputRequired, lookupEnabled, psd2Enabled, pushApnCredentialSid, pushFcmCredentialSid, pushIncludeDate, skipSmsToLandlines, totpCodeLength, totpIssuer, totpSkew, totpTimeStep, ttsName, verifyEventSubscriptionEnabled);
        // TODO: test validations
    }

    /**
     * Delete a specific Verification Service Instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteServiceTest() throws ApiException {
        String sid = null;
        api.deleteService(sid);
        // TODO: test validations
    }

    /**
     * Fetch specific Verification Service Instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchServiceTest() throws ApiException {
        String sid = null;
        VerifyV2Service response = api.fetchService(sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all Verification Services for an account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listServiceTest() throws ApiException {
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListServiceResponse response = api.listService(pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update a specific Verification Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateServiceTest() throws ApiException {
        String sid = null;
        Integer codeLength = null;
        Boolean customCodeEnabled = null;
        String defaultTemplateSid = null;
        Boolean doNotShareWarningEnabled = null;
        Boolean dtmfInputRequired = null;
        String friendlyName = null;
        Boolean lookupEnabled = null;
        Boolean psd2Enabled = null;
        String pushApnCredentialSid = null;
        String pushFcmCredentialSid = null;
        Boolean pushIncludeDate = null;
        Boolean skipSmsToLandlines = null;
        Integer totpCodeLength = null;
        String totpIssuer = null;
        Integer totpSkew = null;
        Integer totpTimeStep = null;
        String ttsName = null;
        Boolean verifyEventSubscriptionEnabled = null;
        VerifyV2Service response = api.updateService(sid, codeLength, customCodeEnabled, defaultTemplateSid, doNotShareWarningEnabled, dtmfInputRequired, friendlyName, lookupEnabled, psd2Enabled, pushApnCredentialSid, pushFcmCredentialSid, pushIncludeDate, skipSmsToLandlines, totpCodeLength, totpIssuer, totpSkew, totpTimeStep, ttsName, verifyEventSubscriptionEnabled);
        // TODO: test validations
    }

}
