/*
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListMessagingConfigurationResponse;
import org.openapitools.client.model.VerifyV2ServiceMessagingConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VerifyV2MessagingConfigurationApi
 */
@Disabled
public class VerifyV2MessagingConfigurationApiTest {

    private final VerifyV2MessagingConfigurationApi api = new VerifyV2MessagingConfigurationApi();

    /**
     * Create a new MessagingConfiguration for a service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMessagingConfigurationTest() throws ApiException {
        String serviceSid = null;
        String country = null;
        String messagingServiceSid = null;
        VerifyV2ServiceMessagingConfiguration response = api.createMessagingConfiguration(serviceSid, country, messagingServiceSid);
        // TODO: test validations
    }

    /**
     * Delete a specific MessagingConfiguration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMessagingConfigurationTest() throws ApiException {
        String serviceSid = null;
        String country = null;
        api.deleteMessagingConfiguration(serviceSid, country);
        // TODO: test validations
    }

    /**
     * Fetch a specific MessagingConfiguration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchMessagingConfigurationTest() throws ApiException {
        String serviceSid = null;
        String country = null;
        VerifyV2ServiceMessagingConfiguration response = api.fetchMessagingConfiguration(serviceSid, country);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all Messaging Configurations for a Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMessagingConfigurationTest() throws ApiException {
        String serviceSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListMessagingConfigurationResponse response = api.listMessagingConfiguration(serviceSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update a specific MessagingConfiguration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMessagingConfigurationTest() throws ApiException {
        String serviceSid = null;
        String country = null;
        String messagingServiceSid = null;
        VerifyV2ServiceMessagingConfiguration response = api.updateMessagingConfiguration(serviceSid, country, messagingServiceSid);
        // TODO: test validations
    }

}
