/*
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.VerificationEnumRiskCheck;
import org.openapitools.client.model.VerificationEnumStatus;
import org.openapitools.client.model.VerifyV2ServiceVerification;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VerifyV2VerificationApi
 */
@Disabled
public class VerifyV2VerificationApiTest {

    private final VerifyV2VerificationApi api = new VerifyV2VerificationApi();

    /**
     * Create a new Verification using a Service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createVerificationTest() throws ApiException {
        String serviceSid = null;
        String channel = null;
        String to = null;
        String amount = null;
        String appHash = null;
        Object channelConfiguration = null;
        String customCode = null;
        String customFriendlyName = null;
        String customMessage = null;
        String deviceIp = null;
        String locale = null;
        String payee = null;
        Object rateLimits = null;
        VerificationEnumRiskCheck riskCheck = null;
        String sendDigits = null;
        String tags = null;
        String templateCustomSubstitutions = null;
        String templateSid = null;
        VerifyV2ServiceVerification response = api.createVerification(serviceSid, channel, to, amount, appHash, channelConfiguration, customCode, customFriendlyName, customMessage, deviceIp, locale, payee, rateLimits, riskCheck, sendDigits, tags, templateCustomSubstitutions, templateSid);
        // TODO: test validations
    }

    /**
     * Fetch a specific Verification
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchVerificationTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        VerifyV2ServiceVerification response = api.fetchVerification(serviceSid, sid);
        // TODO: test validations
    }

    /**
     * Update a Verification status
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateVerificationTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        VerificationEnumStatus status = null;
        VerifyV2ServiceVerification response = api.updateVerification(serviceSid, sid, status);
        // TODO: test validations
    }

}
