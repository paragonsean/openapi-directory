/*
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.FactorEnumTotpAlgorithms;
import org.openapitools.client.model.ListFactorResponse;
import org.openapitools.client.model.VerifyV2ServiceEntityFactor;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VerifyV2FactorApi
 */
@Disabled
public class VerifyV2FactorApiTest {

    private final VerifyV2FactorApi api = new VerifyV2FactorApi();

    /**
     * Delete a specific Factor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFactorTest() throws ApiException {
        String serviceSid = null;
        String identity = null;
        String sid = null;
        api.deleteFactor(serviceSid, identity, sid);
        // TODO: test validations
    }

    /**
     * Fetch a specific Factor.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchFactorTest() throws ApiException {
        String serviceSid = null;
        String identity = null;
        String sid = null;
        VerifyV2ServiceEntityFactor response = api.fetchFactor(serviceSid, identity, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all Factors for an Entity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFactorTest() throws ApiException {
        String serviceSid = null;
        String identity = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListFactorResponse response = api.listFactor(serviceSid, identity, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update a specific Factor. This endpoint can be used to Verify a Factor if passed an &#x60;AuthPayload&#x60; param.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateFactorTest() throws ApiException {
        String serviceSid = null;
        String identity = null;
        String sid = null;
        String authPayload = null;
        FactorEnumTotpAlgorithms configAlg = null;
        Integer configCodeLength = null;
        String configNotificationPlatform = null;
        String configNotificationToken = null;
        String configSdkVersion = null;
        Integer configSkew = null;
        Integer configTimeStep = null;
        String friendlyName = null;
        VerifyV2ServiceEntityFactor response = api.updateFactor(serviceSid, identity, sid, authPayload, configAlg, configCodeLength, configNotificationPlatform, configNotificationToken, configSdkVersion, configSkew, configTimeStep, friendlyName);
        // TODO: test validations
    }

}
