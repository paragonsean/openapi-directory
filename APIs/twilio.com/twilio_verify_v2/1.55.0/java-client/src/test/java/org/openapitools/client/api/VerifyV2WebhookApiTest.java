/*
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListWebhookResponse;
import org.openapitools.client.model.VerifyV2ServiceWebhook;
import org.openapitools.client.model.WebhookEnumStatus;
import org.openapitools.client.model.WebhookEnumVersion;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VerifyV2WebhookApi
 */
@Disabled
public class VerifyV2WebhookApiTest {

    private final VerifyV2WebhookApi api = new VerifyV2WebhookApi();

    /**
     * Create a new Webhook for the Service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWebhookTest() throws ApiException {
        String serviceSid = null;
        List<String> eventTypes = null;
        String friendlyName = null;
        String webhookUrl = null;
        WebhookEnumStatus status = null;
        WebhookEnumVersion version = null;
        VerifyV2ServiceWebhook response = api.createWebhook(serviceSid, eventTypes, friendlyName, webhookUrl, status, version);
        // TODO: test validations
    }

    /**
     * Delete a specific Webhook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWebhookTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        api.deleteWebhook(serviceSid, sid);
        // TODO: test validations
    }

    /**
     * Fetch a specific Webhook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchWebhookTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        VerifyV2ServiceWebhook response = api.fetchWebhook(serviceSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all Webhooks for a Service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWebhookTest() throws ApiException {
        String serviceSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListWebhookResponse response = api.listWebhook(serviceSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhookTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        List<String> eventTypes = null;
        String friendlyName = null;
        WebhookEnumStatus status = null;
        WebhookEnumVersion version = null;
        String webhookUrl = null;
        VerifyV2ServiceWebhook response = api.updateWebhook(serviceSid, sid, eventTypes, friendlyName, status, version, webhookUrl);
        // TODO: test validations
    }

}
