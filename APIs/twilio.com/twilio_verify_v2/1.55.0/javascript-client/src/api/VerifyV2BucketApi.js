/**
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListBucketResponse from '../model/ListBucketResponse';
import VerifyV2ServiceRateLimitBucket from '../model/VerifyV2ServiceRateLimitBucket';

/**
* VerifyV2Bucket service.
* @module api/VerifyV2BucketApi
* @version 1.55.0
*/
export default class VerifyV2BucketApi {

    /**
    * Constructs a new VerifyV2BucketApi. 
    * @alias module:api/VerifyV2BucketApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createBucket operation.
     * @callback module:api/VerifyV2BucketApi~createBucketCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerifyV2ServiceRateLimitBucket} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Bucket for a Rate Limit
     * @param {String} serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
     * @param {String} rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource.
     * @param {Number} interval Number of seconds that the rate limit will be enforced over.
     * @param {Number} max Maximum number of requests permitted in during the interval.
     * @param {module:api/VerifyV2BucketApi~createBucketCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerifyV2ServiceRateLimitBucket}
     */
    createBucket(serviceSid, rateLimitSid, interval, max, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling createBucket");
      }
      // verify the required parameter 'rateLimitSid' is set
      if (rateLimitSid === undefined || rateLimitSid === null) {
        throw new Error("Missing the required parameter 'rateLimitSid' when calling createBucket");
      }
      // verify the required parameter 'interval' is set
      if (interval === undefined || interval === null) {
        throw new Error("Missing the required parameter 'interval' when calling createBucket");
      }
      // verify the required parameter 'max' is set
      if (max === undefined || max === null) {
        throw new Error("Missing the required parameter 'max' when calling createBucket");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'RateLimitSid': rateLimitSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Interval': interval,
        'Max': max
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = VerifyV2ServiceRateLimitBucket;
      let basePaths = ['https://verify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteBucket operation.
     * @callback module:api/VerifyV2BucketApi~deleteBucketCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a specific Bucket.
     * @param {String} serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
     * @param {String} rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource.
     * @param {String} sid A 34 character string that uniquely identifies this Bucket.
     * @param {module:api/VerifyV2BucketApi~deleteBucketCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteBucket(serviceSid, rateLimitSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling deleteBucket");
      }
      // verify the required parameter 'rateLimitSid' is set
      if (rateLimitSid === undefined || rateLimitSid === null) {
        throw new Error("Missing the required parameter 'rateLimitSid' when calling deleteBucket");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteBucket");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'RateLimitSid': rateLimitSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://verify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchBucket operation.
     * @callback module:api/VerifyV2BucketApi~fetchBucketCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerifyV2ServiceRateLimitBucket} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch a specific Bucket.
     * @param {String} serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
     * @param {String} rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource.
     * @param {String} sid A 34 character string that uniquely identifies this Bucket.
     * @param {module:api/VerifyV2BucketApi~fetchBucketCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerifyV2ServiceRateLimitBucket}
     */
    fetchBucket(serviceSid, rateLimitSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling fetchBucket");
      }
      // verify the required parameter 'rateLimitSid' is set
      if (rateLimitSid === undefined || rateLimitSid === null) {
        throw new Error("Missing the required parameter 'rateLimitSid' when calling fetchBucket");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchBucket");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'RateLimitSid': rateLimitSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VerifyV2ServiceRateLimitBucket;
      let basePaths = ['https://verify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listBucket operation.
     * @callback module:api/VerifyV2BucketApi~listBucketCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListBucketResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of all Buckets for a Rate Limit.
     * @param {String} serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
     * @param {String} rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/VerifyV2BucketApi~listBucketCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListBucketResponse}
     */
    listBucket(serviceSid, rateLimitSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling listBucket");
      }
      // verify the required parameter 'rateLimitSid' is set
      if (rateLimitSid === undefined || rateLimitSid === null) {
        throw new Error("Missing the required parameter 'rateLimitSid' when calling listBucket");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'RateLimitSid': rateLimitSid
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListBucketResponse;
      let basePaths = ['https://verify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateBucket operation.
     * @callback module:api/VerifyV2BucketApi~updateBucketCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerifyV2ServiceRateLimitBucket} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a specific Bucket.
     * @param {String} serviceSid The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.
     * @param {String} rateLimitSid The Twilio-provided string that uniquely identifies the Rate Limit resource.
     * @param {String} sid A 34 character string that uniquely identifies this Bucket.
     * @param {Object} opts Optional parameters
     * @param {Number} [interval] Number of seconds that the rate limit will be enforced over.
     * @param {Number} [max] Maximum number of requests permitted in during the interval.
     * @param {module:api/VerifyV2BucketApi~updateBucketCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerifyV2ServiceRateLimitBucket}
     */
    updateBucket(serviceSid, rateLimitSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling updateBucket");
      }
      // verify the required parameter 'rateLimitSid' is set
      if (rateLimitSid === undefined || rateLimitSid === null) {
        throw new Error("Missing the required parameter 'rateLimitSid' when calling updateBucket");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateBucket");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'RateLimitSid': rateLimitSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Interval': opts['interval'],
        'Max': opts['max']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = VerifyV2ServiceRateLimitBucket;
      let basePaths = ['https://verify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/Services/{ServiceSid}/RateLimits/{RateLimitSid}/Buckets/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
