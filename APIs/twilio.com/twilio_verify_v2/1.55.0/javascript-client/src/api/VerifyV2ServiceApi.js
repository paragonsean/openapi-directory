/**
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListServiceResponse from '../model/ListServiceResponse';
import VerifyV2Service from '../model/VerifyV2Service';

/**
* VerifyV2Service service.
* @module api/VerifyV2ServiceApi
* @version 1.55.0
*/
export default class VerifyV2ServiceApi {

    /**
    * Constructs a new VerifyV2ServiceApi. 
    * @alias module:api/VerifyV2ServiceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createService operation.
     * @callback module:api/VerifyV2ServiceApi~createServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerifyV2Service} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Verification Service.
     * @param {String} friendlyName A descriptive string that you create to describe the verification service. It can be up to 32 characters long. **This value should not contain PII.**
     * @param {Object} opts Optional parameters
     * @param {Number} [codeLength] The length of the verification code to generate. Must be an integer value between 4 and 10, inclusive.
     * @param {Boolean} [customCodeEnabled] Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.
     * @param {String} [defaultTemplateSid] The default message [template](https://www.twilio.com/docs/verify/api/templates). Will be used for all SMS verifications unless explicitly overriden. SMS channel only.
     * @param {Boolean} [doNotShareWarningEnabled] Whether to add a security warning at the end of an SMS verification body. Disabled by default and applies only to SMS. Example SMS body: `Your AppName verification code is: 1234. Don’t share this code with anyone; our employees will never ask for the code`
     * @param {Boolean} [dtmfInputRequired] Whether to ask the user to press a number before delivering the verify code in a phone call.
     * @param {Boolean} [lookupEnabled] Whether to perform a lookup with each verification started and return info about the phone number.
     * @param {Boolean} [psd2Enabled] Whether to pass PSD2 transaction parameters when starting a verification.
     * @param {String} [pushApnCredentialSid] Optional configuration for the Push factors. Set the APN Credential for this service. This will allow to send push notifications to iOS devices. See [Credential Resource](https://www.twilio.com/docs/notify/api/credential-resource)
     * @param {String} [pushFcmCredentialSid] Optional configuration for the Push factors. Set the FCM Credential for this service. This will allow to send push notifications to Android devices. See [Credential Resource](https://www.twilio.com/docs/notify/api/credential-resource)
     * @param {Boolean} [pushIncludeDate] Optional configuration for the Push factors. If true, include the date in the Challenge's response. Otherwise, the date is omitted from the response. See [Challenge](https://www.twilio.com/docs/verify/api/challenge) resource’s details parameter for more info. Default: false. **Deprecated** do not use this parameter. This timestamp value is the same one as the one found in `date_created`, please use that one instead.
     * @param {Boolean} [skipSmsToLandlines] Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.
     * @param {Number} [totpCodeLength] Optional configuration for the TOTP factors. Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive. Defaults to 6
     * @param {String} [totpIssuer] Optional configuration for the TOTP factors. Set TOTP Issuer for this service. This will allow to configure the issuer of the TOTP URI. Defaults to the service friendly name if not provided.
     * @param {Number} [totpSkew] Optional configuration for the TOTP factors. The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive. Defaults to 1
     * @param {Number} [totpTimeStep] Optional configuration for the TOTP factors. Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive. Defaults to 30 seconds
     * @param {String} [ttsName] The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.
     * @param {Boolean} [verifyEventSubscriptionEnabled] Whether to allow verifications from the service to reach the stream-events sinks if configured
     * @param {module:api/VerifyV2ServiceApi~createServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerifyV2Service}
     */
    createService(friendlyName, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'friendlyName' is set
      if (friendlyName === undefined || friendlyName === null) {
        throw new Error("Missing the required parameter 'friendlyName' when calling createService");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'CodeLength': opts['codeLength'],
        'CustomCodeEnabled': opts['customCodeEnabled'],
        'DefaultTemplateSid': opts['defaultTemplateSid'],
        'DoNotShareWarningEnabled': opts['doNotShareWarningEnabled'],
        'DtmfInputRequired': opts['dtmfInputRequired'],
        'FriendlyName': friendlyName,
        'LookupEnabled': opts['lookupEnabled'],
        'Psd2Enabled': opts['psd2Enabled'],
        'Push.ApnCredentialSid': opts['pushApnCredentialSid'],
        'Push.FcmCredentialSid': opts['pushFcmCredentialSid'],
        'Push.IncludeDate': opts['pushIncludeDate'],
        'SkipSmsToLandlines': opts['skipSmsToLandlines'],
        'Totp.CodeLength': opts['totpCodeLength'],
        'Totp.Issuer': opts['totpIssuer'],
        'Totp.Skew': opts['totpSkew'],
        'Totp.TimeStep': opts['totpTimeStep'],
        'TtsName': opts['ttsName'],
        'VerifyEventSubscriptionEnabled': opts['verifyEventSubscriptionEnabled']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = VerifyV2Service;
      let basePaths = ['https://verify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/Services', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteService operation.
     * @callback module:api/VerifyV2ServiceApi~deleteServiceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a specific Verification Service Instance.
     * @param {String} sid The Twilio-provided string that uniquely identifies the Verification Service resource to delete.
     * @param {module:api/VerifyV2ServiceApi~deleteServiceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteService(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteService");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://verify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/Services/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchService operation.
     * @callback module:api/VerifyV2ServiceApi~fetchServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerifyV2Service} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch specific Verification Service Instance.
     * @param {String} sid The Twilio-provided string that uniquely identifies the Verification Service resource to fetch.
     * @param {module:api/VerifyV2ServiceApi~fetchServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerifyV2Service}
     */
    fetchService(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchService");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VerifyV2Service;
      let basePaths = ['https://verify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/Services/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listService operation.
     * @callback module:api/VerifyV2ServiceApi~listServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListServiceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of all Verification Services for an account.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/VerifyV2ServiceApi~listServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListServiceResponse}
     */
    listService(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListServiceResponse;
      let basePaths = ['https://verify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/Services', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateService operation.
     * @callback module:api/VerifyV2ServiceApi~updateServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerifyV2Service} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a specific Verification Service.
     * @param {String} sid The Twilio-provided string that uniquely identifies the Service resource to update.
     * @param {Object} opts Optional parameters
     * @param {Number} [codeLength] The length of the verification code to generate. Must be an integer value between 4 and 10, inclusive.
     * @param {Boolean} [customCodeEnabled] Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.
     * @param {String} [defaultTemplateSid] The default message [template](https://www.twilio.com/docs/verify/api/templates). Will be used for all SMS verifications unless explicitly overriden. SMS channel only.
     * @param {Boolean} [doNotShareWarningEnabled] Whether to add a privacy warning at the end of an SMS. **Disabled by default and applies only for SMS.**
     * @param {Boolean} [dtmfInputRequired] Whether to ask the user to press a number before delivering the verify code in a phone call.
     * @param {String} [friendlyName] A descriptive string that you create to describe the verification service. It can be up to 32 characters long. **This value should not contain PII.**
     * @param {Boolean} [lookupEnabled] Whether to perform a lookup with each verification started and return info about the phone number.
     * @param {Boolean} [psd2Enabled] Whether to pass PSD2 transaction parameters when starting a verification.
     * @param {String} [pushApnCredentialSid] Optional configuration for the Push factors. Set the APN Credential for this service. This will allow to send push notifications to iOS devices. See [Credential Resource](https://www.twilio.com/docs/notify/api/credential-resource)
     * @param {String} [pushFcmCredentialSid] Optional configuration for the Push factors. Set the FCM Credential for this service. This will allow to send push notifications to Android devices. See [Credential Resource](https://www.twilio.com/docs/notify/api/credential-resource)
     * @param {Boolean} [pushIncludeDate] Optional configuration for the Push factors. If true, include the date in the Challenge's response. Otherwise, the date is omitted from the response. See [Challenge](https://www.twilio.com/docs/verify/api/challenge) resource’s details parameter for more info. Default: false. **Deprecated** do not use this parameter.
     * @param {Boolean} [skipSmsToLandlines] Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.
     * @param {Number} [totpCodeLength] Optional configuration for the TOTP factors. Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive. Defaults to 6
     * @param {String} [totpIssuer] Optional configuration for the TOTP factors. Set TOTP Issuer for this service. This will allow to configure the issuer of the TOTP URI.
     * @param {Number} [totpSkew] Optional configuration for the TOTP factors. The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive. Defaults to 1
     * @param {Number} [totpTimeStep] Optional configuration for the TOTP factors. Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive. Defaults to 30 seconds
     * @param {String} [ttsName] The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.
     * @param {Boolean} [verifyEventSubscriptionEnabled] Whether to allow verifications from the service to reach the stream-events sinks if configured
     * @param {module:api/VerifyV2ServiceApi~updateServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerifyV2Service}
     */
    updateService(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateService");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'CodeLength': opts['codeLength'],
        'CustomCodeEnabled': opts['customCodeEnabled'],
        'DefaultTemplateSid': opts['defaultTemplateSid'],
        'DoNotShareWarningEnabled': opts['doNotShareWarningEnabled'],
        'DtmfInputRequired': opts['dtmfInputRequired'],
        'FriendlyName': opts['friendlyName'],
        'LookupEnabled': opts['lookupEnabled'],
        'Psd2Enabled': opts['psd2Enabled'],
        'Push.ApnCredentialSid': opts['pushApnCredentialSid'],
        'Push.FcmCredentialSid': opts['pushFcmCredentialSid'],
        'Push.IncludeDate': opts['pushIncludeDate'],
        'SkipSmsToLandlines': opts['skipSmsToLandlines'],
        'Totp.CodeLength': opts['totpCodeLength'],
        'Totp.Issuer': opts['totpIssuer'],
        'Totp.Skew': opts['totpSkew'],
        'Totp.TimeStep': opts['totpTimeStep'],
        'TtsName': opts['ttsName'],
        'VerifyEventSubscriptionEnabled': opts['verifyEventSubscriptionEnabled']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = VerifyV2Service;
      let basePaths = ['https://verify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/Services/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
