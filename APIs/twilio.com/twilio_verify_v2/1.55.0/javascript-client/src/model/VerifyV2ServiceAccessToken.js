/**
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccessTokenEnumFactorTypes from './AccessTokenEnumFactorTypes';

/**
 * The VerifyV2ServiceAccessToken model module.
 * @module model/VerifyV2ServiceAccessToken
 * @version 1.55.0
 */
class VerifyV2ServiceAccessToken {
    /**
     * Constructs a new <code>VerifyV2ServiceAccessToken</code>.
     * @alias module:model/VerifyV2ServiceAccessToken
     */
    constructor() { 
        
        VerifyV2ServiceAccessToken.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VerifyV2ServiceAccessToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VerifyV2ServiceAccessToken} obj Optional instance to populate.
     * @return {module:model/VerifyV2ServiceAccessToken} The populated <code>VerifyV2ServiceAccessToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VerifyV2ServiceAccessToken();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('entity_identity')) {
                obj['entity_identity'] = ApiClient.convertToType(data['entity_identity'], 'String');
            }
            if (data.hasOwnProperty('factor_friendly_name')) {
                obj['factor_friendly_name'] = ApiClient.convertToType(data['factor_friendly_name'], 'String');
            }
            if (data.hasOwnProperty('factor_type')) {
                obj['factor_type'] = AccessTokenEnumFactorTypes.constructFromObject(data['factor_type']);
            }
            if (data.hasOwnProperty('service_sid')) {
                obj['service_sid'] = ApiClient.convertToType(data['service_sid'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('ttl')) {
                obj['ttl'] = ApiClient.convertToType(data['ttl'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VerifyV2ServiceAccessToken</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VerifyV2ServiceAccessToken</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['entity_identity'] && !(typeof data['entity_identity'] === 'string' || data['entity_identity'] instanceof String)) {
            throw new Error("Expected the field `entity_identity` to be a primitive type in the JSON string but got " + data['entity_identity']);
        }
        // ensure the json data is a string
        if (data['factor_friendly_name'] && !(typeof data['factor_friendly_name'] === 'string' || data['factor_friendly_name'] instanceof String)) {
            throw new Error("Expected the field `factor_friendly_name` to be a primitive type in the JSON string but got " + data['factor_friendly_name']);
        }
        // ensure the json data is a string
        if (data['factor_type'] && !(typeof data['factor_type'] === 'string' || data['factor_type'] instanceof String)) {
            throw new Error("Expected the field `factor_type` to be a primitive type in the JSON string but got " + data['factor_type']);
        }
        // ensure the json data is a string
        if (data['service_sid'] && !(typeof data['service_sid'] === 'string' || data['service_sid'] instanceof String)) {
            throw new Error("Expected the field `service_sid` to be a primitive type in the JSON string but got " + data['service_sid']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The unique SID identifier of the Account.
 * @member {String} account_sid
 */
VerifyV2ServiceAccessToken.prototype['account_sid'] = undefined;

/**
 * The date that this access token was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_created
 */
VerifyV2ServiceAccessToken.prototype['date_created'] = undefined;

/**
 * The unique external identifier for the Entity of the Service.
 * @member {String} entity_identity
 */
VerifyV2ServiceAccessToken.prototype['entity_identity'] = undefined;

/**
 * A human readable description of this factor, up to 64 characters. For a push factor, this can be the device's name.
 * @member {String} factor_friendly_name
 */
VerifyV2ServiceAccessToken.prototype['factor_friendly_name'] = undefined;

/**
 * @member {module:model/AccessTokenEnumFactorTypes} factor_type
 */
VerifyV2ServiceAccessToken.prototype['factor_type'] = undefined;

/**
 * The unique SID identifier of the Verify Service.
 * @member {String} service_sid
 */
VerifyV2ServiceAccessToken.prototype['service_sid'] = undefined;

/**
 * A 34 character string that uniquely identifies this Access Token.
 * @member {String} sid
 */
VerifyV2ServiceAccessToken.prototype['sid'] = undefined;

/**
 * The access token generated for enrollment, this is an encrypted json web token.
 * @member {String} token
 */
VerifyV2ServiceAccessToken.prototype['token'] = undefined;

/**
 * How long, in seconds, the access token is valid. Max: 5 minutes
 * @member {Number} ttl
 */
VerifyV2ServiceAccessToken.prototype['ttl'] = undefined;

/**
 * The URL of this resource.
 * @member {String} url
 */
VerifyV2ServiceAccessToken.prototype['url'] = undefined;






export default VerifyV2ServiceAccessToken;

