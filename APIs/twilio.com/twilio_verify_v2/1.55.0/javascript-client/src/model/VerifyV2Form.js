/**
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FormEnumFormTypes from './FormEnumFormTypes';

/**
 * The VerifyV2Form model module.
 * @module model/VerifyV2Form
 * @version 1.55.0
 */
class VerifyV2Form {
    /**
     * Constructs a new <code>VerifyV2Form</code>.
     * @alias module:model/VerifyV2Form
     */
    constructor() { 
        
        VerifyV2Form.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VerifyV2Form</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VerifyV2Form} obj Optional instance to populate.
     * @return {module:model/VerifyV2Form} The populated <code>VerifyV2Form</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VerifyV2Form();

            if (data.hasOwnProperty('form_meta')) {
                obj['form_meta'] = ApiClient.convertToType(data['form_meta'], Object);
            }
            if (data.hasOwnProperty('form_type')) {
                obj['form_type'] = FormEnumFormTypes.constructFromObject(data['form_type']);
            }
            if (data.hasOwnProperty('forms')) {
                obj['forms'] = ApiClient.convertToType(data['forms'], Object);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VerifyV2Form</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VerifyV2Form</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['form_type'] && !(typeof data['form_type'] === 'string' || data['form_type'] instanceof String)) {
            throw new Error("Expected the field `form_type` to be a primitive type in the JSON string but got " + data['form_type']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * Additional information for the available forms for this type. E.g. The separator string used for `binding` in a Factor push.
 * @member {Object} form_meta
 */
VerifyV2Form.prototype['form_meta'] = undefined;

/**
 * @member {module:model/FormEnumFormTypes} form_type
 */
VerifyV2Form.prototype['form_type'] = undefined;

/**
 * Object that contains the available forms for this type. This available forms are given in the standard [JSON Schema](https://json-schema.org/) format
 * @member {Object} forms
 */
VerifyV2Form.prototype['forms'] = undefined;

/**
 * The URL to access the forms for this type.
 * @member {String} url
 */
VerifyV2Form.prototype['url'] = undefined;






export default VerifyV2Form;

