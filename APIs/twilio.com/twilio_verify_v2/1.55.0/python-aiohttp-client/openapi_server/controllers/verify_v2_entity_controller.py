from typing import List, Dict
from aiohttp import web

from openapi_server.models.list_entity_response import ListEntityResponse
from openapi_server.models.verify_v2_service_entity import VerifyV2ServiceEntity
from openapi_server import util


async def create_entity(request: web.Request, service_sid, identity) -> web.Response:
    """create_entity

    Create a new Entity for the Service

    :param service_sid: The unique SID identifier of the Service.
    :type service_sid: str
    :param identity: The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user&#39;s UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.
    :type identity: str

    """
    return web.Response(status=200)


async def delete_entity(request: web.Request, service_sid, identity) -> web.Response:
    """delete_entity

    Delete a specific Entity.

    :param service_sid: The unique SID identifier of the Service.
    :type service_sid: str
    :param identity: The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user&#39;s UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.
    :type identity: str

    """
    return web.Response(status=200)


async def fetch_entity(request: web.Request, service_sid, identity) -> web.Response:
    """fetch_entity

    Fetch a specific Entity.

    :param service_sid: The unique SID identifier of the Service.
    :type service_sid: str
    :param identity: The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user&#39;s UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.
    :type identity: str

    """
    return web.Response(status=200)


async def list_entity(request: web.Request, service_sid, page_size=None, page=None, page_token=None) -> web.Response:
    """list_entity

    Retrieve a list of all Entities for a Service.

    :param service_sid: The unique SID identifier of the Service.
    :type service_sid: str
    :param page_size: How many resources to return in each list page. The default is 50, and the maximum is 1000.
    :type page_size: int
    :param page: The page index. This value is simply for client state.
    :type page: int
    :param page_token: The page token. This is provided by the API.
    :type page_token: str

    """
    return web.Response(status=200)
