from typing import List, Dict
from aiohttp import web

from openapi_server.models.new_factor_enum_factor_types import NewFactorEnumFactorTypes
from openapi_server.models.new_factor_enum_notification_platforms import NewFactorEnumNotificationPlatforms
from openapi_server.models.new_factor_enum_totp_algorithms import NewFactorEnumTotpAlgorithms
from openapi_server.models.verify_v2_service_entity_new_factor import VerifyV2ServiceEntityNewFactor
from openapi_server import util


async def create_new_factor(request: web.Request, service_sid, identity, factor_type, friendly_name, binding_alg=None, binding_public_key=None, binding_secret=None, config_alg=None, config_app_id=None, config_code_length=None, config_notification_platform=None, config_notification_token=None, config_sdk_version=None, config_skew=None, config_time_step=None, metadata=None) -> web.Response:
    """create_new_factor

    Create a new Factor for the Entity

    :param service_sid: The unique SID identifier of the Service.
    :type service_sid: str
    :param identity: Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user&#39;s UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.
    :type identity: str
    :param factor_type: 
    :type factor_type: str
    :param friendly_name: The friendly name of this Factor. This can be any string up to 64 characters, meant for humans to distinguish between Factors. For &#x60;factor_type&#x60; &#x60;push&#x60;, this could be a device name. For &#x60;factor_type&#x60; &#x60;totp&#x60;, this value is used as the “account name” in constructing the &#x60;binding.uri&#x60; property. At the same time, we recommend avoiding providing PII.
    :type friendly_name: str
    :param binding_alg: The algorithm used when &#x60;factor_type&#x60; is &#x60;push&#x60;. Algorithm supported: &#x60;ES256&#x60;
    :type binding_alg: str
    :param binding_public_key: The Ecdsa public key in PKIX, ASN.1 DER format encoded in Base64.  Required when &#x60;factor_type&#x60; is &#x60;push&#x60;
    :type binding_public_key: str
    :param binding_secret: The shared secret for TOTP factors encoded in Base32. This can be provided when creating the Factor, otherwise it will be generated.  Used when &#x60;factor_type&#x60; is &#x60;totp&#x60;
    :type binding_secret: str
    :param config_alg: 
    :type config_alg: str
    :param config_app_id: The ID that uniquely identifies your app in the Google or Apple store, such as &#x60;com.example.myapp&#x60;. It can be up to 100 characters long.  Required when &#x60;factor_type&#x60; is &#x60;push&#x60;.
    :type config_app_id: str
    :param config_code_length: Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive. The default value is defined at the service level in the property &#x60;totp.code_length&#x60;. If not configured defaults to 6.  Used when &#x60;factor_type&#x60; is &#x60;totp&#x60;
    :type config_code_length: int
    :param config_notification_platform: 
    :type config_notification_platform: str
    :param config_notification_token: For APN, the device token. For FCM, the registration token. It is used to send the push notifications. Must be between 32 and 255 characters long.  Required when &#x60;factor_type&#x60; is &#x60;push&#x60;.
    :type config_notification_token: str
    :param config_sdk_version: The Verify Push SDK version used to configure the factor  Required when &#x60;factor_type&#x60; is &#x60;push&#x60;
    :type config_sdk_version: str
    :param config_skew: The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive. The default value is defined at the service level in the property &#x60;totp.skew&#x60;. If not configured defaults to 1.  Used when &#x60;factor_type&#x60; is &#x60;totp&#x60;
    :type config_skew: int
    :param config_time_step: Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive. The default value is defined at the service level in the property &#x60;totp.time_step&#x60;. Defaults to 30 seconds if not configured.  Used when &#x60;factor_type&#x60; is &#x60;totp&#x60;
    :type config_time_step: int
    :param metadata: Custom metadata associated with the factor. This is added by the Device/SDK directly to allow for the inclusion of device information. It must be a stringified JSON with only strings values eg. &#x60;{\\\&quot;os\\\&quot;: \\\&quot;Android\\\&quot;}&#x60;. Can be up to 1024 characters in length.
    :type metadata: dict | bytes

    """
    metadata = object.from_dict(metadata)
    return web.Response(status=200)
