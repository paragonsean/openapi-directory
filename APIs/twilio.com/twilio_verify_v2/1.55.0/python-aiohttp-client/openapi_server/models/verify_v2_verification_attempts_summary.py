# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VerifyV2VerificationAttemptsSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversion_rate_percentage: float=None, total_attempts: int=None, total_converted: int=None, total_unconverted: int=None, url: str=None):
        """VerifyV2VerificationAttemptsSummary - a model defined in OpenAPI

        :param conversion_rate_percentage: The conversion_rate_percentage of this VerifyV2VerificationAttemptsSummary.
        :param total_attempts: The total_attempts of this VerifyV2VerificationAttemptsSummary.
        :param total_converted: The total_converted of this VerifyV2VerificationAttemptsSummary.
        :param total_unconverted: The total_unconverted of this VerifyV2VerificationAttemptsSummary.
        :param url: The url of this VerifyV2VerificationAttemptsSummary.
        """
        self.openapi_types = {
            'conversion_rate_percentage': float,
            'total_attempts': int,
            'total_converted': int,
            'total_unconverted': int,
            'url': str
        }

        self.attribute_map = {
            'conversion_rate_percentage': 'conversion_rate_percentage',
            'total_attempts': 'total_attempts',
            'total_converted': 'total_converted',
            'total_unconverted': 'total_unconverted',
            'url': 'url'
        }

        self._conversion_rate_percentage = conversion_rate_percentage
        self._total_attempts = total_attempts
        self._total_converted = total_converted
        self._total_unconverted = total_unconverted
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyV2VerificationAttemptsSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The verify.v2.verification_attempts_summary of this VerifyV2VerificationAttemptsSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversion_rate_percentage(self):
        """Gets the conversion_rate_percentage of this VerifyV2VerificationAttemptsSummary.

        Percentage of the confirmed messages over the total, defined by (total_converted/total_attempts)*100. 

        :return: The conversion_rate_percentage of this VerifyV2VerificationAttemptsSummary.
        :rtype: float
        """
        return self._conversion_rate_percentage

    @conversion_rate_percentage.setter
    def conversion_rate_percentage(self, conversion_rate_percentage):
        """Sets the conversion_rate_percentage of this VerifyV2VerificationAttemptsSummary.

        Percentage of the confirmed messages over the total, defined by (total_converted/total_attempts)*100. 

        :param conversion_rate_percentage: The conversion_rate_percentage of this VerifyV2VerificationAttemptsSummary.
        :type conversion_rate_percentage: float
        """

        self._conversion_rate_percentage = conversion_rate_percentage

    @property
    def total_attempts(self):
        """Gets the total_attempts of this VerifyV2VerificationAttemptsSummary.

        Total of attempts made according to the provided filters

        :return: The total_attempts of this VerifyV2VerificationAttemptsSummary.
        :rtype: int
        """
        return self._total_attempts

    @total_attempts.setter
    def total_attempts(self, total_attempts):
        """Sets the total_attempts of this VerifyV2VerificationAttemptsSummary.

        Total of attempts made according to the provided filters

        :param total_attempts: The total_attempts of this VerifyV2VerificationAttemptsSummary.
        :type total_attempts: int
        """

        self._total_attempts = total_attempts

    @property
    def total_converted(self):
        """Gets the total_converted of this VerifyV2VerificationAttemptsSummary.

        Total of  attempts made that were confirmed by the end user, according to the provided filters.

        :return: The total_converted of this VerifyV2VerificationAttemptsSummary.
        :rtype: int
        """
        return self._total_converted

    @total_converted.setter
    def total_converted(self, total_converted):
        """Sets the total_converted of this VerifyV2VerificationAttemptsSummary.

        Total of  attempts made that were confirmed by the end user, according to the provided filters.

        :param total_converted: The total_converted of this VerifyV2VerificationAttemptsSummary.
        :type total_converted: int
        """

        self._total_converted = total_converted

    @property
    def total_unconverted(self):
        """Gets the total_unconverted of this VerifyV2VerificationAttemptsSummary.

        Total of attempts made that were not confirmed by the end user, according to the provided filters.

        :return: The total_unconverted of this VerifyV2VerificationAttemptsSummary.
        :rtype: int
        """
        return self._total_unconverted

    @total_unconverted.setter
    def total_unconverted(self, total_unconverted):
        """Sets the total_unconverted of this VerifyV2VerificationAttemptsSummary.

        Total of attempts made that were not confirmed by the end user, according to the provided filters.

        :param total_unconverted: The total_unconverted of this VerifyV2VerificationAttemptsSummary.
        :type total_unconverted: int
        """

        self._total_unconverted = total_unconverted

    @property
    def url(self):
        """Gets the url of this VerifyV2VerificationAttemptsSummary.


        :return: The url of this VerifyV2VerificationAttemptsSummary.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VerifyV2VerificationAttemptsSummary.


        :param url: The url of this VerifyV2VerificationAttemptsSummary.
        :type url: str
        """

        self._url = url
