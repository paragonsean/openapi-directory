# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class VerifyV2ServiceMessagingConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, country: str=None, date_created: datetime=None, date_updated: datetime=None, messaging_service_sid: str=None, service_sid: str=None, url: str=None):
        """VerifyV2ServiceMessagingConfiguration - a model defined in OpenAPI

        :param account_sid: The account_sid of this VerifyV2ServiceMessagingConfiguration.
        :param country: The country of this VerifyV2ServiceMessagingConfiguration.
        :param date_created: The date_created of this VerifyV2ServiceMessagingConfiguration.
        :param date_updated: The date_updated of this VerifyV2ServiceMessagingConfiguration.
        :param messaging_service_sid: The messaging_service_sid of this VerifyV2ServiceMessagingConfiguration.
        :param service_sid: The service_sid of this VerifyV2ServiceMessagingConfiguration.
        :param url: The url of this VerifyV2ServiceMessagingConfiguration.
        """
        self.openapi_types = {
            'account_sid': str,
            'country': str,
            'date_created': datetime,
            'date_updated': datetime,
            'messaging_service_sid': str,
            'service_sid': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'country': 'country',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'messaging_service_sid': 'messaging_service_sid',
            'service_sid': 'service_sid',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._country = country
        self._date_created = date_created
        self._date_updated = date_updated
        self._messaging_service_sid = messaging_service_sid
        self._service_sid = service_sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyV2ServiceMessagingConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The verify.v2.service.messaging_configuration of this VerifyV2ServiceMessagingConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this VerifyV2ServiceMessagingConfiguration.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.

        :return: The account_sid of this VerifyV2ServiceMessagingConfiguration.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this VerifyV2ServiceMessagingConfiguration.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.

        :param account_sid: The account_sid of this VerifyV2ServiceMessagingConfiguration.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def country(self):
        """Gets the country of this VerifyV2ServiceMessagingConfiguration.

        The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`.

        :return: The country of this VerifyV2ServiceMessagingConfiguration.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this VerifyV2ServiceMessagingConfiguration.

        The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`.

        :param country: The country of this VerifyV2ServiceMessagingConfiguration.
        :type country: str
        """

        self._country = country

    @property
    def date_created(self):
        """Gets the date_created of this VerifyV2ServiceMessagingConfiguration.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this VerifyV2ServiceMessagingConfiguration.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this VerifyV2ServiceMessagingConfiguration.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this VerifyV2ServiceMessagingConfiguration.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this VerifyV2ServiceMessagingConfiguration.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this VerifyV2ServiceMessagingConfiguration.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this VerifyV2ServiceMessagingConfiguration.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this VerifyV2ServiceMessagingConfiguration.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def messaging_service_sid(self):
        """Gets the messaging_service_sid of this VerifyV2ServiceMessagingConfiguration.

        The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) to be used to send SMS to the country of this configuration.

        :return: The messaging_service_sid of this VerifyV2ServiceMessagingConfiguration.
        :rtype: str
        """
        return self._messaging_service_sid

    @messaging_service_sid.setter
    def messaging_service_sid(self, messaging_service_sid):
        """Sets the messaging_service_sid of this VerifyV2ServiceMessagingConfiguration.

        The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) to be used to send SMS to the country of this configuration.

        :param messaging_service_sid: The messaging_service_sid of this VerifyV2ServiceMessagingConfiguration.
        :type messaging_service_sid: str
        """
        if messaging_service_sid is not None and len(messaging_service_sid) > 34:
            raise ValueError("Invalid value for `messaging_service_sid`, length must be less than or equal to `34`")
        if messaging_service_sid is not None and len(messaging_service_sid) < 34:
            raise ValueError("Invalid value for `messaging_service_sid`, length must be greater than or equal to `34`")
        if messaging_service_sid is not None and not re.search(r'^MG[0-9a-fA-F]{32}$', messaging_service_sid):
            raise ValueError("Invalid value for `messaging_service_sid`, must be a follow pattern or equal to `/^MG[0-9a-fA-F]{32}$/`")

        self._messaging_service_sid = messaging_service_sid

    @property
    def service_sid(self):
        """Gets the service_sid of this VerifyV2ServiceMessagingConfiguration.

        The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with.

        :return: The service_sid of this VerifyV2ServiceMessagingConfiguration.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this VerifyV2ServiceMessagingConfiguration.

        The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with.

        :param service_sid: The service_sid of this VerifyV2ServiceMessagingConfiguration.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^VA[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^VA[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def url(self):
        """Gets the url of this VerifyV2ServiceMessagingConfiguration.

        The URL of this resource.

        :return: The url of this VerifyV2ServiceMessagingConfiguration.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VerifyV2ServiceMessagingConfiguration.

        The URL of this resource.

        :param url: The url of this VerifyV2ServiceMessagingConfiguration.
        :type url: str
        """

        self._url = url
