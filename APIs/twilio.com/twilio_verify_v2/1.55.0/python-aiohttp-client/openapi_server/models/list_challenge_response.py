# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_verification_attempt_response_meta import ListVerificationAttemptResponseMeta
from openapi_server.models.verify_v2_service_entity_challenge import VerifyV2ServiceEntityChallenge
from openapi_server import util


class ListChallengeResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, challenges: List[VerifyV2ServiceEntityChallenge]=None, meta: ListVerificationAttemptResponseMeta=None):
        """ListChallengeResponse - a model defined in OpenAPI

        :param challenges: The challenges of this ListChallengeResponse.
        :param meta: The meta of this ListChallengeResponse.
        """
        self.openapi_types = {
            'challenges': List[VerifyV2ServiceEntityChallenge],
            'meta': ListVerificationAttemptResponseMeta
        }

        self.attribute_map = {
            'challenges': 'challenges',
            'meta': 'meta'
        }

        self._challenges = challenges
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListChallengeResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListChallengeResponse of this ListChallengeResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def challenges(self):
        """Gets the challenges of this ListChallengeResponse.


        :return: The challenges of this ListChallengeResponse.
        :rtype: List[VerifyV2ServiceEntityChallenge]
        """
        return self._challenges

    @challenges.setter
    def challenges(self, challenges):
        """Sets the challenges of this ListChallengeResponse.


        :param challenges: The challenges of this ListChallengeResponse.
        :type challenges: List[VerifyV2ServiceEntityChallenge]
        """

        self._challenges = challenges

    @property
    def meta(self):
        """Gets the meta of this ListChallengeResponse.


        :return: The meta of this ListChallengeResponse.
        :rtype: ListVerificationAttemptResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListChallengeResponse.


        :param meta: The meta of this ListChallengeResponse.
        :type meta: ListVerificationAttemptResponseMeta
        """

        self._meta = meta
