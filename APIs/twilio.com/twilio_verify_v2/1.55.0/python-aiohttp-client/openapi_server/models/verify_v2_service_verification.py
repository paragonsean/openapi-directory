# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.verification_enum_channel import VerificationEnumChannel
import re
from openapi_server import util


class VerifyV2ServiceVerification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, amount: str=None, channel: VerificationEnumChannel=None, date_created: datetime=None, date_updated: datetime=None, lookup: object=None, payee: str=None, send_code_attempts: List[object]=None, service_sid: str=None, sid: str=None, sna: object=None, status: str=None, to: str=None, url: str=None, valid: bool=None):
        """VerifyV2ServiceVerification - a model defined in OpenAPI

        :param account_sid: The account_sid of this VerifyV2ServiceVerification.
        :param amount: The amount of this VerifyV2ServiceVerification.
        :param channel: The channel of this VerifyV2ServiceVerification.
        :param date_created: The date_created of this VerifyV2ServiceVerification.
        :param date_updated: The date_updated of this VerifyV2ServiceVerification.
        :param lookup: The lookup of this VerifyV2ServiceVerification.
        :param payee: The payee of this VerifyV2ServiceVerification.
        :param send_code_attempts: The send_code_attempts of this VerifyV2ServiceVerification.
        :param service_sid: The service_sid of this VerifyV2ServiceVerification.
        :param sid: The sid of this VerifyV2ServiceVerification.
        :param sna: The sna of this VerifyV2ServiceVerification.
        :param status: The status of this VerifyV2ServiceVerification.
        :param to: The to of this VerifyV2ServiceVerification.
        :param url: The url of this VerifyV2ServiceVerification.
        :param valid: The valid of this VerifyV2ServiceVerification.
        """
        self.openapi_types = {
            'account_sid': str,
            'amount': str,
            'channel': VerificationEnumChannel,
            'date_created': datetime,
            'date_updated': datetime,
            'lookup': object,
            'payee': str,
            'send_code_attempts': List[object],
            'service_sid': str,
            'sid': str,
            'sna': object,
            'status': str,
            'to': str,
            'url': str,
            'valid': bool
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'amount': 'amount',
            'channel': 'channel',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'lookup': 'lookup',
            'payee': 'payee',
            'send_code_attempts': 'send_code_attempts',
            'service_sid': 'service_sid',
            'sid': 'sid',
            'sna': 'sna',
            'status': 'status',
            'to': 'to',
            'url': 'url',
            'valid': 'valid'
        }

        self._account_sid = account_sid
        self._amount = amount
        self._channel = channel
        self._date_created = date_created
        self._date_updated = date_updated
        self._lookup = lookup
        self._payee = payee
        self._send_code_attempts = send_code_attempts
        self._service_sid = service_sid
        self._sid = sid
        self._sna = sna
        self._status = status
        self._to = to
        self._url = url
        self._valid = valid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyV2ServiceVerification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The verify.v2.service.verification of this VerifyV2ServiceVerification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this VerifyV2ServiceVerification.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Verification resource.

        :return: The account_sid of this VerifyV2ServiceVerification.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this VerifyV2ServiceVerification.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Verification resource.

        :param account_sid: The account_sid of this VerifyV2ServiceVerification.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def amount(self):
        """Gets the amount of this VerifyV2ServiceVerification.

        The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.

        :return: The amount of this VerifyV2ServiceVerification.
        :rtype: str
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this VerifyV2ServiceVerification.

        The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.

        :param amount: The amount of this VerifyV2ServiceVerification.
        :type amount: str
        """

        self._amount = amount

    @property
    def channel(self):
        """Gets the channel of this VerifyV2ServiceVerification.


        :return: The channel of this VerifyV2ServiceVerification.
        :rtype: VerificationEnumChannel
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this VerifyV2ServiceVerification.


        :param channel: The channel of this VerifyV2ServiceVerification.
        :type channel: VerificationEnumChannel
        """

        self._channel = channel

    @property
    def date_created(self):
        """Gets the date_created of this VerifyV2ServiceVerification.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this VerifyV2ServiceVerification.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this VerifyV2ServiceVerification.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this VerifyV2ServiceVerification.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this VerifyV2ServiceVerification.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this VerifyV2ServiceVerification.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this VerifyV2ServiceVerification.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this VerifyV2ServiceVerification.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def lookup(self):
        """Gets the lookup of this VerifyV2ServiceVerification.

        Information about the phone number being verified.

        :return: The lookup of this VerifyV2ServiceVerification.
        :rtype: object
        """
        return self._lookup

    @lookup.setter
    def lookup(self, lookup):
        """Sets the lookup of this VerifyV2ServiceVerification.

        Information about the phone number being verified.

        :param lookup: The lookup of this VerifyV2ServiceVerification.
        :type lookup: object
        """

        self._lookup = lookup

    @property
    def payee(self):
        """Gets the payee of this VerifyV2ServiceVerification.

        The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.

        :return: The payee of this VerifyV2ServiceVerification.
        :rtype: str
        """
        return self._payee

    @payee.setter
    def payee(self, payee):
        """Sets the payee of this VerifyV2ServiceVerification.

        The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.

        :param payee: The payee of this VerifyV2ServiceVerification.
        :type payee: str
        """

        self._payee = payee

    @property
    def send_code_attempts(self):
        """Gets the send_code_attempts of this VerifyV2ServiceVerification.

        An array of verification attempt objects containing the channel attempted and the channel-specific transaction SID.

        :return: The send_code_attempts of this VerifyV2ServiceVerification.
        :rtype: List[object]
        """
        return self._send_code_attempts

    @send_code_attempts.setter
    def send_code_attempts(self, send_code_attempts):
        """Sets the send_code_attempts of this VerifyV2ServiceVerification.

        An array of verification attempt objects containing the channel attempted and the channel-specific transaction SID.

        :param send_code_attempts: The send_code_attempts of this VerifyV2ServiceVerification.
        :type send_code_attempts: List[object]
        """

        self._send_code_attempts = send_code_attempts

    @property
    def service_sid(self):
        """Gets the service_sid of this VerifyV2ServiceVerification.

        The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.

        :return: The service_sid of this VerifyV2ServiceVerification.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this VerifyV2ServiceVerification.

        The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.

        :param service_sid: The service_sid of this VerifyV2ServiceVerification.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^VA[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^VA[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def sid(self):
        """Gets the sid of this VerifyV2ServiceVerification.

        The unique string that we created to identify the Verification resource.

        :return: The sid of this VerifyV2ServiceVerification.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this VerifyV2ServiceVerification.

        The unique string that we created to identify the Verification resource.

        :param sid: The sid of this VerifyV2ServiceVerification.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^VE[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^VE[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def sna(self):
        """Gets the sna of this VerifyV2ServiceVerification.

        The set of fields used for a silent network auth (`sna`) verification. Contains a single field with the URL to be invoked to verify the phone number.

        :return: The sna of this VerifyV2ServiceVerification.
        :rtype: object
        """
        return self._sna

    @sna.setter
    def sna(self, sna):
        """Sets the sna of this VerifyV2ServiceVerification.

        The set of fields used for a silent network auth (`sna`) verification. Contains a single field with the URL to be invoked to verify the phone number.

        :param sna: The sna of this VerifyV2ServiceVerification.
        :type sna: object
        """

        self._sna = sna

    @property
    def status(self):
        """Gets the status of this VerifyV2ServiceVerification.

        The status of the verification. One of: `pending`, `approved`, or `canceled`

        :return: The status of this VerifyV2ServiceVerification.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this VerifyV2ServiceVerification.

        The status of the verification. One of: `pending`, `approved`, or `canceled`

        :param status: The status of this VerifyV2ServiceVerification.
        :type status: str
        """

        self._status = status

    @property
    def to(self):
        """Gets the to of this VerifyV2ServiceVerification.

        The phone number or [email](https://www.twilio.com/docs/verify/email) being verified. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).

        :return: The to of this VerifyV2ServiceVerification.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this VerifyV2ServiceVerification.

        The phone number or [email](https://www.twilio.com/docs/verify/email) being verified. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).

        :param to: The to of this VerifyV2ServiceVerification.
        :type to: str
        """

        self._to = to

    @property
    def url(self):
        """Gets the url of this VerifyV2ServiceVerification.

        The absolute URL of the Verification resource.

        :return: The url of this VerifyV2ServiceVerification.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VerifyV2ServiceVerification.

        The absolute URL of the Verification resource.

        :param url: The url of this VerifyV2ServiceVerification.
        :type url: str
        """

        self._url = url

    @property
    def valid(self):
        """Gets the valid of this VerifyV2ServiceVerification.

        Use \"status\" instead. Legacy property indicating whether the verification was successful.

        :return: The valid of this VerifyV2ServiceVerification.
        :rtype: bool
        """
        return self._valid

    @valid.setter
    def valid(self, valid):
        """Sets the valid of this VerifyV2ServiceVerification.

        Use \"status\" instead. Legacy property indicating whether the verification was successful.

        :param valid: The valid of this VerifyV2ServiceVerification.
        :type valid: bool
        """

        self._valid = valid
