# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.verification_attempt_enum_channels import VerificationAttemptEnumChannels
from openapi_server.models.verification_attempt_enum_conversion_status import VerificationAttemptEnumConversionStatus
import re
from openapi_server import util


class VerifyV2VerificationAttempt(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, channel: VerificationAttemptEnumChannels=None, channel_data: object=None, conversion_status: VerificationAttemptEnumConversionStatus=None, date_created: datetime=None, date_updated: datetime=None, price: object=None, service_sid: str=None, sid: str=None, url: str=None, verification_sid: str=None):
        """VerifyV2VerificationAttempt - a model defined in OpenAPI

        :param account_sid: The account_sid of this VerifyV2VerificationAttempt.
        :param channel: The channel of this VerifyV2VerificationAttempt.
        :param channel_data: The channel_data of this VerifyV2VerificationAttempt.
        :param conversion_status: The conversion_status of this VerifyV2VerificationAttempt.
        :param date_created: The date_created of this VerifyV2VerificationAttempt.
        :param date_updated: The date_updated of this VerifyV2VerificationAttempt.
        :param price: The price of this VerifyV2VerificationAttempt.
        :param service_sid: The service_sid of this VerifyV2VerificationAttempt.
        :param sid: The sid of this VerifyV2VerificationAttempt.
        :param url: The url of this VerifyV2VerificationAttempt.
        :param verification_sid: The verification_sid of this VerifyV2VerificationAttempt.
        """
        self.openapi_types = {
            'account_sid': str,
            'channel': VerificationAttemptEnumChannels,
            'channel_data': object,
            'conversion_status': VerificationAttemptEnumConversionStatus,
            'date_created': datetime,
            'date_updated': datetime,
            'price': object,
            'service_sid': str,
            'sid': str,
            'url': str,
            'verification_sid': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'channel': 'channel',
            'channel_data': 'channel_data',
            'conversion_status': 'conversion_status',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'price': 'price',
            'service_sid': 'service_sid',
            'sid': 'sid',
            'url': 'url',
            'verification_sid': 'verification_sid'
        }

        self._account_sid = account_sid
        self._channel = channel
        self._channel_data = channel_data
        self._conversion_status = conversion_status
        self._date_created = date_created
        self._date_updated = date_updated
        self._price = price
        self._service_sid = service_sid
        self._sid = sid
        self._url = url
        self._verification_sid = verification_sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyV2VerificationAttempt':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The verify.v2.verification_attempt of this VerifyV2VerificationAttempt.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this VerifyV2VerificationAttempt.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Verification resource.

        :return: The account_sid of this VerifyV2VerificationAttempt.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this VerifyV2VerificationAttempt.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Verification resource.

        :param account_sid: The account_sid of this VerifyV2VerificationAttempt.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def channel(self):
        """Gets the channel of this VerifyV2VerificationAttempt.


        :return: The channel of this VerifyV2VerificationAttempt.
        :rtype: VerificationAttemptEnumChannels
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this VerifyV2VerificationAttempt.


        :param channel: The channel of this VerifyV2VerificationAttempt.
        :type channel: VerificationAttemptEnumChannels
        """

        self._channel = channel

    @property
    def channel_data(self):
        """Gets the channel_data of this VerifyV2VerificationAttempt.

        An object containing the channel specific information for an attempt.

        :return: The channel_data of this VerifyV2VerificationAttempt.
        :rtype: object
        """
        return self._channel_data

    @channel_data.setter
    def channel_data(self, channel_data):
        """Sets the channel_data of this VerifyV2VerificationAttempt.

        An object containing the channel specific information for an attempt.

        :param channel_data: The channel_data of this VerifyV2VerificationAttempt.
        :type channel_data: object
        """

        self._channel_data = channel_data

    @property
    def conversion_status(self):
        """Gets the conversion_status of this VerifyV2VerificationAttempt.


        :return: The conversion_status of this VerifyV2VerificationAttempt.
        :rtype: VerificationAttemptEnumConversionStatus
        """
        return self._conversion_status

    @conversion_status.setter
    def conversion_status(self, conversion_status):
        """Sets the conversion_status of this VerifyV2VerificationAttempt.


        :param conversion_status: The conversion_status of this VerifyV2VerificationAttempt.
        :type conversion_status: VerificationAttemptEnumConversionStatus
        """

        self._conversion_status = conversion_status

    @property
    def date_created(self):
        """Gets the date_created of this VerifyV2VerificationAttempt.

        The date that this Attempt was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this VerifyV2VerificationAttempt.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this VerifyV2VerificationAttempt.

        The date that this Attempt was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this VerifyV2VerificationAttempt.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this VerifyV2VerificationAttempt.

        The date that this Attempt was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_updated of this VerifyV2VerificationAttempt.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this VerifyV2VerificationAttempt.

        The date that this Attempt was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_updated: The date_updated of this VerifyV2VerificationAttempt.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def price(self):
        """Gets the price of this VerifyV2VerificationAttempt.

        An object containing the charge for this verification attempt related to the channel costs and the currency used. The costs related to the succeeded verifications are not included. May not be immediately available. More information on pricing is available [here](https://www.twilio.com/en-us/verify/pricing).

        :return: The price of this VerifyV2VerificationAttempt.
        :rtype: object
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this VerifyV2VerificationAttempt.

        An object containing the charge for this verification attempt related to the channel costs and the currency used. The costs related to the succeeded verifications are not included. May not be immediately available. More information on pricing is available [here](https://www.twilio.com/en-us/verify/pricing).

        :param price: The price of this VerifyV2VerificationAttempt.
        :type price: object
        """

        self._price = price

    @property
    def service_sid(self):
        """Gets the service_sid of this VerifyV2VerificationAttempt.

        The SID of the [Service](https://www.twilio.com/docs/verify/api/service) used to generate the attempt.

        :return: The service_sid of this VerifyV2VerificationAttempt.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this VerifyV2VerificationAttempt.

        The SID of the [Service](https://www.twilio.com/docs/verify/api/service) used to generate the attempt.

        :param service_sid: The service_sid of this VerifyV2VerificationAttempt.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^VA[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^VA[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def sid(self):
        """Gets the sid of this VerifyV2VerificationAttempt.

        The SID that uniquely identifies the verification attempt resource.

        :return: The sid of this VerifyV2VerificationAttempt.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this VerifyV2VerificationAttempt.

        The SID that uniquely identifies the verification attempt resource.

        :param sid: The sid of this VerifyV2VerificationAttempt.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^VL[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^VL[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def url(self):
        """Gets the url of this VerifyV2VerificationAttempt.


        :return: The url of this VerifyV2VerificationAttempt.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VerifyV2VerificationAttempt.


        :param url: The url of this VerifyV2VerificationAttempt.
        :type url: str
        """

        self._url = url

    @property
    def verification_sid(self):
        """Gets the verification_sid of this VerifyV2VerificationAttempt.

        The SID of the [Verification](https://www.twilio.com/docs/verify/api/verification) that generated the attempt.

        :return: The verification_sid of this VerifyV2VerificationAttempt.
        :rtype: str
        """
        return self._verification_sid

    @verification_sid.setter
    def verification_sid(self, verification_sid):
        """Sets the verification_sid of this VerifyV2VerificationAttempt.

        The SID of the [Verification](https://www.twilio.com/docs/verify/api/verification) that generated the attempt.

        :param verification_sid: The verification_sid of this VerifyV2VerificationAttempt.
        :type verification_sid: str
        """
        if verification_sid is not None and len(verification_sid) > 34:
            raise ValueError("Invalid value for `verification_sid`, length must be less than or equal to `34`")
        if verification_sid is not None and len(verification_sid) < 34:
            raise ValueError("Invalid value for `verification_sid`, length must be greater than or equal to `34`")
        if verification_sid is not None and not re.search(r'^VE[0-9a-fA-F]{32}$', verification_sid):
            raise ValueError("Invalid value for `verification_sid`, must be a follow pattern or equal to `/^VE[0-9a-fA-F]{32}$/`")

        self._verification_sid = verification_sid
