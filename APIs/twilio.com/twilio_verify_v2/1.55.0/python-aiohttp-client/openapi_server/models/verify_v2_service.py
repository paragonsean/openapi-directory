# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class VerifyV2Service(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, code_length: int=None, custom_code_enabled: bool=None, date_created: datetime=None, date_updated: datetime=None, default_template_sid: str=None, do_not_share_warning_enabled: bool=None, dtmf_input_required: bool=None, friendly_name: str=None, links: object=None, lookup_enabled: bool=None, psd2_enabled: bool=None, push: object=None, sid: str=None, skip_sms_to_landlines: bool=None, totp: object=None, tts_name: str=None, url: str=None, verify_event_subscription_enabled: bool=None):
        """VerifyV2Service - a model defined in OpenAPI

        :param account_sid: The account_sid of this VerifyV2Service.
        :param code_length: The code_length of this VerifyV2Service.
        :param custom_code_enabled: The custom_code_enabled of this VerifyV2Service.
        :param date_created: The date_created of this VerifyV2Service.
        :param date_updated: The date_updated of this VerifyV2Service.
        :param default_template_sid: The default_template_sid of this VerifyV2Service.
        :param do_not_share_warning_enabled: The do_not_share_warning_enabled of this VerifyV2Service.
        :param dtmf_input_required: The dtmf_input_required of this VerifyV2Service.
        :param friendly_name: The friendly_name of this VerifyV2Service.
        :param links: The links of this VerifyV2Service.
        :param lookup_enabled: The lookup_enabled of this VerifyV2Service.
        :param psd2_enabled: The psd2_enabled of this VerifyV2Service.
        :param push: The push of this VerifyV2Service.
        :param sid: The sid of this VerifyV2Service.
        :param skip_sms_to_landlines: The skip_sms_to_landlines of this VerifyV2Service.
        :param totp: The totp of this VerifyV2Service.
        :param tts_name: The tts_name of this VerifyV2Service.
        :param url: The url of this VerifyV2Service.
        :param verify_event_subscription_enabled: The verify_event_subscription_enabled of this VerifyV2Service.
        """
        self.openapi_types = {
            'account_sid': str,
            'code_length': int,
            'custom_code_enabled': bool,
            'date_created': datetime,
            'date_updated': datetime,
            'default_template_sid': str,
            'do_not_share_warning_enabled': bool,
            'dtmf_input_required': bool,
            'friendly_name': str,
            'links': object,
            'lookup_enabled': bool,
            'psd2_enabled': bool,
            'push': object,
            'sid': str,
            'skip_sms_to_landlines': bool,
            'totp': object,
            'tts_name': str,
            'url': str,
            'verify_event_subscription_enabled': bool
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'code_length': 'code_length',
            'custom_code_enabled': 'custom_code_enabled',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'default_template_sid': 'default_template_sid',
            'do_not_share_warning_enabled': 'do_not_share_warning_enabled',
            'dtmf_input_required': 'dtmf_input_required',
            'friendly_name': 'friendly_name',
            'links': 'links',
            'lookup_enabled': 'lookup_enabled',
            'psd2_enabled': 'psd2_enabled',
            'push': 'push',
            'sid': 'sid',
            'skip_sms_to_landlines': 'skip_sms_to_landlines',
            'totp': 'totp',
            'tts_name': 'tts_name',
            'url': 'url',
            'verify_event_subscription_enabled': 'verify_event_subscription_enabled'
        }

        self._account_sid = account_sid
        self._code_length = code_length
        self._custom_code_enabled = custom_code_enabled
        self._date_created = date_created
        self._date_updated = date_updated
        self._default_template_sid = default_template_sid
        self._do_not_share_warning_enabled = do_not_share_warning_enabled
        self._dtmf_input_required = dtmf_input_required
        self._friendly_name = friendly_name
        self._links = links
        self._lookup_enabled = lookup_enabled
        self._psd2_enabled = psd2_enabled
        self._push = push
        self._sid = sid
        self._skip_sms_to_landlines = skip_sms_to_landlines
        self._totp = totp
        self._tts_name = tts_name
        self._url = url
        self._verify_event_subscription_enabled = verify_event_subscription_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyV2Service':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The verify.v2.service of this VerifyV2Service.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this VerifyV2Service.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.

        :return: The account_sid of this VerifyV2Service.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this VerifyV2Service.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.

        :param account_sid: The account_sid of this VerifyV2Service.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def code_length(self):
        """Gets the code_length of this VerifyV2Service.

        The length of the verification code to generate.

        :return: The code_length of this VerifyV2Service.
        :rtype: int
        """
        return self._code_length

    @code_length.setter
    def code_length(self, code_length):
        """Sets the code_length of this VerifyV2Service.

        The length of the verification code to generate.

        :param code_length: The code_length of this VerifyV2Service.
        :type code_length: int
        """

        self._code_length = code_length

    @property
    def custom_code_enabled(self):
        """Gets the custom_code_enabled of this VerifyV2Service.

        Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.

        :return: The custom_code_enabled of this VerifyV2Service.
        :rtype: bool
        """
        return self._custom_code_enabled

    @custom_code_enabled.setter
    def custom_code_enabled(self, custom_code_enabled):
        """Sets the custom_code_enabled of this VerifyV2Service.

        Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.

        :param custom_code_enabled: The custom_code_enabled of this VerifyV2Service.
        :type custom_code_enabled: bool
        """

        self._custom_code_enabled = custom_code_enabled

    @property
    def date_created(self):
        """Gets the date_created of this VerifyV2Service.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this VerifyV2Service.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this VerifyV2Service.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this VerifyV2Service.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this VerifyV2Service.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this VerifyV2Service.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this VerifyV2Service.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this VerifyV2Service.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def default_template_sid(self):
        """Gets the default_template_sid of this VerifyV2Service.


        :return: The default_template_sid of this VerifyV2Service.
        :rtype: str
        """
        return self._default_template_sid

    @default_template_sid.setter
    def default_template_sid(self, default_template_sid):
        """Sets the default_template_sid of this VerifyV2Service.


        :param default_template_sid: The default_template_sid of this VerifyV2Service.
        :type default_template_sid: str
        """
        if default_template_sid is not None and len(default_template_sid) > 34:
            raise ValueError("Invalid value for `default_template_sid`, length must be less than or equal to `34`")
        if default_template_sid is not None and len(default_template_sid) < 34:
            raise ValueError("Invalid value for `default_template_sid`, length must be greater than or equal to `34`")
        if default_template_sid is not None and not re.search(r'^HJ[0-9a-fA-F]{32}$', default_template_sid):
            raise ValueError("Invalid value for `default_template_sid`, must be a follow pattern or equal to `/^HJ[0-9a-fA-F]{32}$/`")

        self._default_template_sid = default_template_sid

    @property
    def do_not_share_warning_enabled(self):
        """Gets the do_not_share_warning_enabled of this VerifyV2Service.

        Whether to add a security warning at the end of an SMS verification body. Disabled by default and applies only to SMS. Example SMS body: `Your AppName verification code is: 1234. Don’t share this code with anyone; our employees will never ask for the code`

        :return: The do_not_share_warning_enabled of this VerifyV2Service.
        :rtype: bool
        """
        return self._do_not_share_warning_enabled

    @do_not_share_warning_enabled.setter
    def do_not_share_warning_enabled(self, do_not_share_warning_enabled):
        """Sets the do_not_share_warning_enabled of this VerifyV2Service.

        Whether to add a security warning at the end of an SMS verification body. Disabled by default and applies only to SMS. Example SMS body: `Your AppName verification code is: 1234. Don’t share this code with anyone; our employees will never ask for the code`

        :param do_not_share_warning_enabled: The do_not_share_warning_enabled of this VerifyV2Service.
        :type do_not_share_warning_enabled: bool
        """

        self._do_not_share_warning_enabled = do_not_share_warning_enabled

    @property
    def dtmf_input_required(self):
        """Gets the dtmf_input_required of this VerifyV2Service.

        Whether to ask the user to press a number before delivering the verify code in a phone call.

        :return: The dtmf_input_required of this VerifyV2Service.
        :rtype: bool
        """
        return self._dtmf_input_required

    @dtmf_input_required.setter
    def dtmf_input_required(self, dtmf_input_required):
        """Sets the dtmf_input_required of this VerifyV2Service.

        Whether to ask the user to press a number before delivering the verify code in a phone call.

        :param dtmf_input_required: The dtmf_input_required of this VerifyV2Service.
        :type dtmf_input_required: bool
        """

        self._dtmf_input_required = dtmf_input_required

    @property
    def friendly_name(self):
        """Gets the friendly_name of this VerifyV2Service.

        The string that you assigned to describe the verification service. It can be up to 32 characters long. **This value should not contain PII.**

        :return: The friendly_name of this VerifyV2Service.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this VerifyV2Service.

        The string that you assigned to describe the verification service. It can be up to 32 characters long. **This value should not contain PII.**

        :param friendly_name: The friendly_name of this VerifyV2Service.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def links(self):
        """Gets the links of this VerifyV2Service.

        The URLs of related resources.

        :return: The links of this VerifyV2Service.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this VerifyV2Service.

        The URLs of related resources.

        :param links: The links of this VerifyV2Service.
        :type links: object
        """

        self._links = links

    @property
    def lookup_enabled(self):
        """Gets the lookup_enabled of this VerifyV2Service.

        Whether to perform a lookup with each verification started and return info about the phone number.

        :return: The lookup_enabled of this VerifyV2Service.
        :rtype: bool
        """
        return self._lookup_enabled

    @lookup_enabled.setter
    def lookup_enabled(self, lookup_enabled):
        """Sets the lookup_enabled of this VerifyV2Service.

        Whether to perform a lookup with each verification started and return info about the phone number.

        :param lookup_enabled: The lookup_enabled of this VerifyV2Service.
        :type lookup_enabled: bool
        """

        self._lookup_enabled = lookup_enabled

    @property
    def psd2_enabled(self):
        """Gets the psd2_enabled of this VerifyV2Service.

        Whether to pass PSD2 transaction parameters when starting a verification.

        :return: The psd2_enabled of this VerifyV2Service.
        :rtype: bool
        """
        return self._psd2_enabled

    @psd2_enabled.setter
    def psd2_enabled(self, psd2_enabled):
        """Sets the psd2_enabled of this VerifyV2Service.

        Whether to pass PSD2 transaction parameters when starting a verification.

        :param psd2_enabled: The psd2_enabled of this VerifyV2Service.
        :type psd2_enabled: bool
        """

        self._psd2_enabled = psd2_enabled

    @property
    def push(self):
        """Gets the push of this VerifyV2Service.

        Configurations for the Push factors (channel) created under this Service.

        :return: The push of this VerifyV2Service.
        :rtype: object
        """
        return self._push

    @push.setter
    def push(self, push):
        """Sets the push of this VerifyV2Service.

        Configurations for the Push factors (channel) created under this Service.

        :param push: The push of this VerifyV2Service.
        :type push: object
        """

        self._push = push

    @property
    def sid(self):
        """Gets the sid of this VerifyV2Service.

        The unique string that we created to identify the Service resource.

        :return: The sid of this VerifyV2Service.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this VerifyV2Service.

        The unique string that we created to identify the Service resource.

        :param sid: The sid of this VerifyV2Service.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^VA[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^VA[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def skip_sms_to_landlines(self):
        """Gets the skip_sms_to_landlines of this VerifyV2Service.

        Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.

        :return: The skip_sms_to_landlines of this VerifyV2Service.
        :rtype: bool
        """
        return self._skip_sms_to_landlines

    @skip_sms_to_landlines.setter
    def skip_sms_to_landlines(self, skip_sms_to_landlines):
        """Sets the skip_sms_to_landlines of this VerifyV2Service.

        Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.

        :param skip_sms_to_landlines: The skip_sms_to_landlines of this VerifyV2Service.
        :type skip_sms_to_landlines: bool
        """

        self._skip_sms_to_landlines = skip_sms_to_landlines

    @property
    def totp(self):
        """Gets the totp of this VerifyV2Service.

        Configurations for the TOTP factors (channel) created under this Service.

        :return: The totp of this VerifyV2Service.
        :rtype: object
        """
        return self._totp

    @totp.setter
    def totp(self, totp):
        """Sets the totp of this VerifyV2Service.

        Configurations for the TOTP factors (channel) created under this Service.

        :param totp: The totp of this VerifyV2Service.
        :type totp: object
        """

        self._totp = totp

    @property
    def tts_name(self):
        """Gets the tts_name of this VerifyV2Service.

        The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.

        :return: The tts_name of this VerifyV2Service.
        :rtype: str
        """
        return self._tts_name

    @tts_name.setter
    def tts_name(self, tts_name):
        """Sets the tts_name of this VerifyV2Service.

        The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.

        :param tts_name: The tts_name of this VerifyV2Service.
        :type tts_name: str
        """

        self._tts_name = tts_name

    @property
    def url(self):
        """Gets the url of this VerifyV2Service.

        The absolute URL of the resource.

        :return: The url of this VerifyV2Service.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VerifyV2Service.

        The absolute URL of the resource.

        :param url: The url of this VerifyV2Service.
        :type url: str
        """

        self._url = url

    @property
    def verify_event_subscription_enabled(self):
        """Gets the verify_event_subscription_enabled of this VerifyV2Service.

        Whether to allow verifications from the service to reach the stream-events sinks if configured

        :return: The verify_event_subscription_enabled of this VerifyV2Service.
        :rtype: bool
        """
        return self._verify_event_subscription_enabled

    @verify_event_subscription_enabled.setter
    def verify_event_subscription_enabled(self, verify_event_subscription_enabled):
        """Sets the verify_event_subscription_enabled of this VerifyV2Service.

        Whether to allow verifications from the service to reach the stream-events sinks if configured

        :param verify_event_subscription_enabled: The verify_event_subscription_enabled of this VerifyV2Service.
        :type verify_event_subscription_enabled: bool
        """

        self._verify_event_subscription_enabled = verify_event_subscription_enabled
