# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.webhook_enum_methods import WebhookEnumMethods
from openapi_server.models.webhook_enum_status import WebhookEnumStatus
from openapi_server.models.webhook_enum_version import WebhookEnumVersion
import re
from openapi_server import util


class VerifyV2ServiceWebhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, date_created: datetime=None, date_updated: datetime=None, event_types: List[str]=None, friendly_name: str=None, service_sid: str=None, sid: str=None, status: WebhookEnumStatus=None, url: str=None, version: WebhookEnumVersion=None, webhook_method: WebhookEnumMethods=None, webhook_url: str=None):
        """VerifyV2ServiceWebhook - a model defined in OpenAPI

        :param account_sid: The account_sid of this VerifyV2ServiceWebhook.
        :param date_created: The date_created of this VerifyV2ServiceWebhook.
        :param date_updated: The date_updated of this VerifyV2ServiceWebhook.
        :param event_types: The event_types of this VerifyV2ServiceWebhook.
        :param friendly_name: The friendly_name of this VerifyV2ServiceWebhook.
        :param service_sid: The service_sid of this VerifyV2ServiceWebhook.
        :param sid: The sid of this VerifyV2ServiceWebhook.
        :param status: The status of this VerifyV2ServiceWebhook.
        :param url: The url of this VerifyV2ServiceWebhook.
        :param version: The version of this VerifyV2ServiceWebhook.
        :param webhook_method: The webhook_method of this VerifyV2ServiceWebhook.
        :param webhook_url: The webhook_url of this VerifyV2ServiceWebhook.
        """
        self.openapi_types = {
            'account_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'event_types': List[str],
            'friendly_name': str,
            'service_sid': str,
            'sid': str,
            'status': WebhookEnumStatus,
            'url': str,
            'version': WebhookEnumVersion,
            'webhook_method': WebhookEnumMethods,
            'webhook_url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'event_types': 'event_types',
            'friendly_name': 'friendly_name',
            'service_sid': 'service_sid',
            'sid': 'sid',
            'status': 'status',
            'url': 'url',
            'version': 'version',
            'webhook_method': 'webhook_method',
            'webhook_url': 'webhook_url'
        }

        self._account_sid = account_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._event_types = event_types
        self._friendly_name = friendly_name
        self._service_sid = service_sid
        self._sid = sid
        self._status = status
        self._url = url
        self._version = version
        self._webhook_method = webhook_method
        self._webhook_url = webhook_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyV2ServiceWebhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The verify.v2.service.webhook of this VerifyV2ServiceWebhook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this VerifyV2ServiceWebhook.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.

        :return: The account_sid of this VerifyV2ServiceWebhook.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this VerifyV2ServiceWebhook.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.

        :param account_sid: The account_sid of this VerifyV2ServiceWebhook.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def date_created(self):
        """Gets the date_created of this VerifyV2ServiceWebhook.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this VerifyV2ServiceWebhook.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this VerifyV2ServiceWebhook.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this VerifyV2ServiceWebhook.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this VerifyV2ServiceWebhook.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_updated of this VerifyV2ServiceWebhook.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this VerifyV2ServiceWebhook.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_updated: The date_updated of this VerifyV2ServiceWebhook.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def event_types(self):
        """Gets the event_types of this VerifyV2ServiceWebhook.

        The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`

        :return: The event_types of this VerifyV2ServiceWebhook.
        :rtype: List[str]
        """
        return self._event_types

    @event_types.setter
    def event_types(self, event_types):
        """Sets the event_types of this VerifyV2ServiceWebhook.

        The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`

        :param event_types: The event_types of this VerifyV2ServiceWebhook.
        :type event_types: List[str]
        """

        self._event_types = event_types

    @property
    def friendly_name(self):
        """Gets the friendly_name of this VerifyV2ServiceWebhook.

        The string that you assigned to describe the webhook. **This value should not contain PII.**

        :return: The friendly_name of this VerifyV2ServiceWebhook.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this VerifyV2ServiceWebhook.

        The string that you assigned to describe the webhook. **This value should not contain PII.**

        :param friendly_name: The friendly_name of this VerifyV2ServiceWebhook.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def service_sid(self):
        """Gets the service_sid of this VerifyV2ServiceWebhook.

        The unique SID identifier of the Service.

        :return: The service_sid of this VerifyV2ServiceWebhook.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this VerifyV2ServiceWebhook.

        The unique SID identifier of the Service.

        :param service_sid: The service_sid of this VerifyV2ServiceWebhook.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^VA[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^VA[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def sid(self):
        """Gets the sid of this VerifyV2ServiceWebhook.

        The unique string that we created to identify the Webhook resource.

        :return: The sid of this VerifyV2ServiceWebhook.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this VerifyV2ServiceWebhook.

        The unique string that we created to identify the Webhook resource.

        :param sid: The sid of this VerifyV2ServiceWebhook.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^YW[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^YW[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def status(self):
        """Gets the status of this VerifyV2ServiceWebhook.


        :return: The status of this VerifyV2ServiceWebhook.
        :rtype: WebhookEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this VerifyV2ServiceWebhook.


        :param status: The status of this VerifyV2ServiceWebhook.
        :type status: WebhookEnumStatus
        """

        self._status = status

    @property
    def url(self):
        """Gets the url of this VerifyV2ServiceWebhook.

        The absolute URL of the Webhook resource.

        :return: The url of this VerifyV2ServiceWebhook.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VerifyV2ServiceWebhook.

        The absolute URL of the Webhook resource.

        :param url: The url of this VerifyV2ServiceWebhook.
        :type url: str
        """

        self._url = url

    @property
    def version(self):
        """Gets the version of this VerifyV2ServiceWebhook.


        :return: The version of this VerifyV2ServiceWebhook.
        :rtype: WebhookEnumVersion
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this VerifyV2ServiceWebhook.


        :param version: The version of this VerifyV2ServiceWebhook.
        :type version: WebhookEnumVersion
        """

        self._version = version

    @property
    def webhook_method(self):
        """Gets the webhook_method of this VerifyV2ServiceWebhook.


        :return: The webhook_method of this VerifyV2ServiceWebhook.
        :rtype: WebhookEnumMethods
        """
        return self._webhook_method

    @webhook_method.setter
    def webhook_method(self, webhook_method):
        """Sets the webhook_method of this VerifyV2ServiceWebhook.


        :param webhook_method: The webhook_method of this VerifyV2ServiceWebhook.
        :type webhook_method: WebhookEnumMethods
        """

        self._webhook_method = webhook_method

    @property
    def webhook_url(self):
        """Gets the webhook_url of this VerifyV2ServiceWebhook.

        The URL associated with this Webhook.

        :return: The webhook_url of this VerifyV2ServiceWebhook.
        :rtype: str
        """
        return self._webhook_url

    @webhook_url.setter
    def webhook_url(self, webhook_url):
        """Sets the webhook_url of this VerifyV2ServiceWebhook.

        The URL associated with this Webhook.

        :param webhook_url: The webhook_url of this VerifyV2ServiceWebhook.
        :type webhook_url: str
        """

        self._webhook_url = webhook_url
