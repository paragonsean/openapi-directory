# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class VerifyV2VerificationTemplate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, channels: List[str]=None, friendly_name: str=None, sid: str=None, translations: object=None):
        """VerifyV2VerificationTemplate - a model defined in OpenAPI

        :param account_sid: The account_sid of this VerifyV2VerificationTemplate.
        :param channels: The channels of this VerifyV2VerificationTemplate.
        :param friendly_name: The friendly_name of this VerifyV2VerificationTemplate.
        :param sid: The sid of this VerifyV2VerificationTemplate.
        :param translations: The translations of this VerifyV2VerificationTemplate.
        """
        self.openapi_types = {
            'account_sid': str,
            'channels': List[str],
            'friendly_name': str,
            'sid': str,
            'translations': object
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'channels': 'channels',
            'friendly_name': 'friendly_name',
            'sid': 'sid',
            'translations': 'translations'
        }

        self._account_sid = account_sid
        self._channels = channels
        self._friendly_name = friendly_name
        self._sid = sid
        self._translations = translations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyV2VerificationTemplate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The verify.v2.verification_template of this VerifyV2VerificationTemplate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this VerifyV2VerificationTemplate.

        The unique SID identifier of the Account.

        :return: The account_sid of this VerifyV2VerificationTemplate.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this VerifyV2VerificationTemplate.

        The unique SID identifier of the Account.

        :param account_sid: The account_sid of this VerifyV2VerificationTemplate.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def channels(self):
        """Gets the channels of this VerifyV2VerificationTemplate.

        A list of channels that support the Template. Can include: sms, voice.

        :return: The channels of this VerifyV2VerificationTemplate.
        :rtype: List[str]
        """
        return self._channels

    @channels.setter
    def channels(self, channels):
        """Sets the channels of this VerifyV2VerificationTemplate.

        A list of channels that support the Template. Can include: sms, voice.

        :param channels: The channels of this VerifyV2VerificationTemplate.
        :type channels: List[str]
        """

        self._channels = channels

    @property
    def friendly_name(self):
        """Gets the friendly_name of this VerifyV2VerificationTemplate.

        A descriptive string that you create to describe a Template. It can be up to 32 characters long.

        :return: The friendly_name of this VerifyV2VerificationTemplate.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this VerifyV2VerificationTemplate.

        A descriptive string that you create to describe a Template. It can be up to 32 characters long.

        :param friendly_name: The friendly_name of this VerifyV2VerificationTemplate.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def sid(self):
        """Gets the sid of this VerifyV2VerificationTemplate.

        A 34 character string that uniquely identifies a Verification Template.

        :return: The sid of this VerifyV2VerificationTemplate.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this VerifyV2VerificationTemplate.

        A 34 character string that uniquely identifies a Verification Template.

        :param sid: The sid of this VerifyV2VerificationTemplate.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^HJ[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^HJ[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def translations(self):
        """Gets the translations of this VerifyV2VerificationTemplate.

        An object that contains the different translations of the template. Every translation is identified by the language short name and contains its respective information as the approval status, text and created/modified date.

        :return: The translations of this VerifyV2VerificationTemplate.
        :rtype: object
        """
        return self._translations

    @translations.setter
    def translations(self, translations):
        """Sets the translations of this VerifyV2VerificationTemplate.

        An object that contains the different translations of the template. Every translation is identified by the language short name and contains its respective information as the approval status, text and created/modified date.

        :param translations: The translations of this VerifyV2VerificationTemplate.
        :type translations: object
        """

        self._translations = translations
