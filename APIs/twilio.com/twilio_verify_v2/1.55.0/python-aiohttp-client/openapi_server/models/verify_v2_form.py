# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.form_enum_form_types import FormEnumFormTypes
from openapi_server import util


class VerifyV2Form(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, form_meta: object=None, form_type: FormEnumFormTypes=None, forms: object=None, url: str=None):
        """VerifyV2Form - a model defined in OpenAPI

        :param form_meta: The form_meta of this VerifyV2Form.
        :param form_type: The form_type of this VerifyV2Form.
        :param forms: The forms of this VerifyV2Form.
        :param url: The url of this VerifyV2Form.
        """
        self.openapi_types = {
            'form_meta': object,
            'form_type': FormEnumFormTypes,
            'forms': object,
            'url': str
        }

        self.attribute_map = {
            'form_meta': 'form_meta',
            'form_type': 'form_type',
            'forms': 'forms',
            'url': 'url'
        }

        self._form_meta = form_meta
        self._form_type = form_type
        self._forms = forms
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifyV2Form':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The verify.v2.form of this VerifyV2Form.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def form_meta(self):
        """Gets the form_meta of this VerifyV2Form.

        Additional information for the available forms for this type. E.g. The separator string used for `binding` in a Factor push.

        :return: The form_meta of this VerifyV2Form.
        :rtype: object
        """
        return self._form_meta

    @form_meta.setter
    def form_meta(self, form_meta):
        """Sets the form_meta of this VerifyV2Form.

        Additional information for the available forms for this type. E.g. The separator string used for `binding` in a Factor push.

        :param form_meta: The form_meta of this VerifyV2Form.
        :type form_meta: object
        """

        self._form_meta = form_meta

    @property
    def form_type(self):
        """Gets the form_type of this VerifyV2Form.


        :return: The form_type of this VerifyV2Form.
        :rtype: FormEnumFormTypes
        """
        return self._form_type

    @form_type.setter
    def form_type(self, form_type):
        """Sets the form_type of this VerifyV2Form.


        :param form_type: The form_type of this VerifyV2Form.
        :type form_type: FormEnumFormTypes
        """

        self._form_type = form_type

    @property
    def forms(self):
        """Gets the forms of this VerifyV2Form.

        Object that contains the available forms for this type. This available forms are given in the standard [JSON Schema](https://json-schema.org/) format

        :return: The forms of this VerifyV2Form.
        :rtype: object
        """
        return self._forms

    @forms.setter
    def forms(self, forms):
        """Sets the forms of this VerifyV2Form.

        Object that contains the available forms for this type. This available forms are given in the standard [JSON Schema](https://json-schema.org/) format

        :param forms: The forms of this VerifyV2Form.
        :type forms: object
        """

        self._forms = forms

    @property
    def url(self):
        """Gets the url of this VerifyV2Form.

        The URL to access the forms for this type.

        :return: The url of this VerifyV2Form.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VerifyV2Form.

        The URL to access the forms for this type.

        :param url: The url of this VerifyV2Form.
        :type url: str
        """

        self._url = url
