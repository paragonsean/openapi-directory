/**
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVerify_v2_service.h
 *
 * 
 */

#ifndef OAIVerify_v2_service_H
#define OAIVerify_v2_service_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVerify_v2_service : public OAIObject {
public:
    OAIVerify_v2_service();
    OAIVerify_v2_service(QString json);
    ~OAIVerify_v2_service() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    qint32 getCodeLength() const;
    void setCodeLength(const qint32 &code_length);
    bool is_code_length_Set() const;
    bool is_code_length_Valid() const;

    bool isCustomCodeEnabled() const;
    void setCustomCodeEnabled(const bool &custom_code_enabled);
    bool is_custom_code_enabled_Set() const;
    bool is_custom_code_enabled_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QString getDefaultTemplateSid() const;
    void setDefaultTemplateSid(const QString &default_template_sid);
    bool is_default_template_sid_Set() const;
    bool is_default_template_sid_Valid() const;

    bool isDoNotShareWarningEnabled() const;
    void setDoNotShareWarningEnabled(const bool &do_not_share_warning_enabled);
    bool is_do_not_share_warning_enabled_Set() const;
    bool is_do_not_share_warning_enabled_Valid() const;

    bool isDtmfInputRequired() const;
    void setDtmfInputRequired(const bool &dtmf_input_required);
    bool is_dtmf_input_required_Set() const;
    bool is_dtmf_input_required_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    OAIObject getLinks() const;
    void setLinks(const OAIObject &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    bool isLookupEnabled() const;
    void setLookupEnabled(const bool &lookup_enabled);
    bool is_lookup_enabled_Set() const;
    bool is_lookup_enabled_Valid() const;

    bool isPsd2Enabled() const;
    void setPsd2Enabled(const bool &psd2_enabled);
    bool is_psd2_enabled_Set() const;
    bool is_psd2_enabled_Valid() const;

    QJsonValue getPush() const;
    void setPush(const QJsonValue &push);
    bool is_push_Set() const;
    bool is_push_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    bool isSkipSmsToLandlines() const;
    void setSkipSmsToLandlines(const bool &skip_sms_to_landlines);
    bool is_skip_sms_to_landlines_Set() const;
    bool is_skip_sms_to_landlines_Valid() const;

    QJsonValue getTotp() const;
    void setTotp(const QJsonValue &totp);
    bool is_totp_Set() const;
    bool is_totp_Valid() const;

    QString getTtsName() const;
    void setTtsName(const QString &tts_name);
    bool is_tts_name_Set() const;
    bool is_tts_name_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    bool isVerifyEventSubscriptionEnabled() const;
    void setVerifyEventSubscriptionEnabled(const bool &verify_event_subscription_enabled);
    bool is_verify_event_subscription_enabled_Set() const;
    bool is_verify_event_subscription_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    qint32 m_code_length;
    bool m_code_length_isSet;
    bool m_code_length_isValid;

    bool m_custom_code_enabled;
    bool m_custom_code_enabled_isSet;
    bool m_custom_code_enabled_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QString m_default_template_sid;
    bool m_default_template_sid_isSet;
    bool m_default_template_sid_isValid;

    bool m_do_not_share_warning_enabled;
    bool m_do_not_share_warning_enabled_isSet;
    bool m_do_not_share_warning_enabled_isValid;

    bool m_dtmf_input_required;
    bool m_dtmf_input_required_isSet;
    bool m_dtmf_input_required_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    OAIObject m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    bool m_lookup_enabled;
    bool m_lookup_enabled_isSet;
    bool m_lookup_enabled_isValid;

    bool m_psd2_enabled;
    bool m_psd2_enabled_isSet;
    bool m_psd2_enabled_isValid;

    QJsonValue m_push;
    bool m_push_isSet;
    bool m_push_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    bool m_skip_sms_to_landlines;
    bool m_skip_sms_to_landlines_isSet;
    bool m_skip_sms_to_landlines_isValid;

    QJsonValue m_totp;
    bool m_totp_isSet;
    bool m_totp_isValid;

    QString m_tts_name;
    bool m_tts_name_isSet;
    bool m_tts_name_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    bool m_verify_event_subscription_enabled;
    bool m_verify_event_subscription_enabled_isSet;
    bool m_verify_event_subscription_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVerify_v2_service)

#endif // OAIVerify_v2_service_H
