/**
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerify_v2_service_verification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerify_v2_service_verification::OAIVerify_v2_service_verification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerify_v2_service_verification::OAIVerify_v2_service_verification() {
    this->initializeModel();
}

OAIVerify_v2_service_verification::~OAIVerify_v2_service_verification() {}

void OAIVerify_v2_service_verification::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_channel_isSet = false;
    m_channel_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_lookup_isSet = false;
    m_lookup_isValid = false;

    m_payee_isSet = false;
    m_payee_isValid = false;

    m_send_code_attempts_isSet = false;
    m_send_code_attempts_isValid = false;

    m_service_sid_isSet = false;
    m_service_sid_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_sna_isSet = false;
    m_sna_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_r_valid_isSet = false;
    m_r_valid_isValid = false;
}

void OAIVerify_v2_service_verification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVerify_v2_service_verification::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_channel_isValid = ::OpenAPI::fromJsonValue(m_channel, json[QString("channel")]);
    m_channel_isSet = !json[QString("channel")].isNull() && m_channel_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_lookup_isValid = ::OpenAPI::fromJsonValue(m_lookup, json[QString("lookup")]);
    m_lookup_isSet = !json[QString("lookup")].isNull() && m_lookup_isValid;

    m_payee_isValid = ::OpenAPI::fromJsonValue(m_payee, json[QString("payee")]);
    m_payee_isSet = !json[QString("payee")].isNull() && m_payee_isValid;

    m_send_code_attempts_isValid = ::OpenAPI::fromJsonValue(m_send_code_attempts, json[QString("send_code_attempts")]);
    m_send_code_attempts_isSet = !json[QString("send_code_attempts")].isNull() && m_send_code_attempts_isValid;

    m_service_sid_isValid = ::OpenAPI::fromJsonValue(m_service_sid, json[QString("service_sid")]);
    m_service_sid_isSet = !json[QString("service_sid")].isNull() && m_service_sid_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_sna_isValid = ::OpenAPI::fromJsonValue(m_sna, json[QString("sna")]);
    m_sna_isSet = !json[QString("sna")].isNull() && m_sna_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_r_valid_isValid = ::OpenAPI::fromJsonValue(m_r_valid, json[QString("valid")]);
    m_r_valid_isSet = !json[QString("valid")].isNull() && m_r_valid_isValid;
}

QString OAIVerify_v2_service_verification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVerify_v2_service_verification::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_channel.isSet()) {
        obj.insert(QString("channel"), ::OpenAPI::toJsonValue(m_channel));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_lookup_isSet) {
        obj.insert(QString("lookup"), ::OpenAPI::toJsonValue(m_lookup));
    }
    if (m_payee_isSet) {
        obj.insert(QString("payee"), ::OpenAPI::toJsonValue(m_payee));
    }
    if (m_send_code_attempts.size() > 0) {
        obj.insert(QString("send_code_attempts"), ::OpenAPI::toJsonValue(m_send_code_attempts));
    }
    if (m_service_sid_isSet) {
        obj.insert(QString("service_sid"), ::OpenAPI::toJsonValue(m_service_sid));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_sna_isSet) {
        obj.insert(QString("sna"), ::OpenAPI::toJsonValue(m_sna));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_to_isSet) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_r_valid_isSet) {
        obj.insert(QString("valid"), ::OpenAPI::toJsonValue(m_r_valid));
    }
    return obj;
}

QString OAIVerify_v2_service_verification::getAccountSid() const {
    return m_account_sid;
}
void OAIVerify_v2_service_verification::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIVerify_v2_service_verification::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIVerify_v2_service_verification::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIVerify_v2_service_verification::getAmount() const {
    return m_amount;
}
void OAIVerify_v2_service_verification::setAmount(const QString &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIVerify_v2_service_verification::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIVerify_v2_service_verification::is_amount_Valid() const{
    return m_amount_isValid;
}

OAIVerification_enum_channel OAIVerify_v2_service_verification::getChannel() const {
    return m_channel;
}
void OAIVerify_v2_service_verification::setChannel(const OAIVerification_enum_channel &channel) {
    m_channel = channel;
    m_channel_isSet = true;
}

bool OAIVerify_v2_service_verification::is_channel_Set() const{
    return m_channel_isSet;
}

bool OAIVerify_v2_service_verification::is_channel_Valid() const{
    return m_channel_isValid;
}

QDateTime OAIVerify_v2_service_verification::getDateCreated() const {
    return m_date_created;
}
void OAIVerify_v2_service_verification::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIVerify_v2_service_verification::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIVerify_v2_service_verification::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIVerify_v2_service_verification::getDateUpdated() const {
    return m_date_updated;
}
void OAIVerify_v2_service_verification::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIVerify_v2_service_verification::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIVerify_v2_service_verification::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QJsonValue OAIVerify_v2_service_verification::getLookup() const {
    return m_lookup;
}
void OAIVerify_v2_service_verification::setLookup(const QJsonValue &lookup) {
    m_lookup = lookup;
    m_lookup_isSet = true;
}

bool OAIVerify_v2_service_verification::is_lookup_Set() const{
    return m_lookup_isSet;
}

bool OAIVerify_v2_service_verification::is_lookup_Valid() const{
    return m_lookup_isValid;
}

QString OAIVerify_v2_service_verification::getPayee() const {
    return m_payee;
}
void OAIVerify_v2_service_verification::setPayee(const QString &payee) {
    m_payee = payee;
    m_payee_isSet = true;
}

bool OAIVerify_v2_service_verification::is_payee_Set() const{
    return m_payee_isSet;
}

bool OAIVerify_v2_service_verification::is_payee_Valid() const{
    return m_payee_isValid;
}

QList<QJsonValue> OAIVerify_v2_service_verification::getSendCodeAttempts() const {
    return m_send_code_attempts;
}
void OAIVerify_v2_service_verification::setSendCodeAttempts(const QList<QJsonValue> &send_code_attempts) {
    m_send_code_attempts = send_code_attempts;
    m_send_code_attempts_isSet = true;
}

bool OAIVerify_v2_service_verification::is_send_code_attempts_Set() const{
    return m_send_code_attempts_isSet;
}

bool OAIVerify_v2_service_verification::is_send_code_attempts_Valid() const{
    return m_send_code_attempts_isValid;
}

QString OAIVerify_v2_service_verification::getServiceSid() const {
    return m_service_sid;
}
void OAIVerify_v2_service_verification::setServiceSid(const QString &service_sid) {
    m_service_sid = service_sid;
    m_service_sid_isSet = true;
}

bool OAIVerify_v2_service_verification::is_service_sid_Set() const{
    return m_service_sid_isSet;
}

bool OAIVerify_v2_service_verification::is_service_sid_Valid() const{
    return m_service_sid_isValid;
}

QString OAIVerify_v2_service_verification::getSid() const {
    return m_sid;
}
void OAIVerify_v2_service_verification::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIVerify_v2_service_verification::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIVerify_v2_service_verification::is_sid_Valid() const{
    return m_sid_isValid;
}

QJsonValue OAIVerify_v2_service_verification::getSna() const {
    return m_sna;
}
void OAIVerify_v2_service_verification::setSna(const QJsonValue &sna) {
    m_sna = sna;
    m_sna_isSet = true;
}

bool OAIVerify_v2_service_verification::is_sna_Set() const{
    return m_sna_isSet;
}

bool OAIVerify_v2_service_verification::is_sna_Valid() const{
    return m_sna_isValid;
}

QString OAIVerify_v2_service_verification::getStatus() const {
    return m_status;
}
void OAIVerify_v2_service_verification::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIVerify_v2_service_verification::is_status_Set() const{
    return m_status_isSet;
}

bool OAIVerify_v2_service_verification::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIVerify_v2_service_verification::getTo() const {
    return m_to;
}
void OAIVerify_v2_service_verification::setTo(const QString &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIVerify_v2_service_verification::is_to_Set() const{
    return m_to_isSet;
}

bool OAIVerify_v2_service_verification::is_to_Valid() const{
    return m_to_isValid;
}

QString OAIVerify_v2_service_verification::getUrl() const {
    return m_url;
}
void OAIVerify_v2_service_verification::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIVerify_v2_service_verification::is_url_Set() const{
    return m_url_isSet;
}

bool OAIVerify_v2_service_verification::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIVerify_v2_service_verification::isRValid() const {
    return m_r_valid;
}
void OAIVerify_v2_service_verification::setRValid(const bool &r_valid) {
    m_r_valid = r_valid;
    m_r_valid_isSet = true;
}

bool OAIVerify_v2_service_verification::is_r_valid_Set() const{
    return m_r_valid_isSet;
}

bool OAIVerify_v2_service_verification::is_r_valid_Valid() const{
    return m_r_valid_isValid;
}

bool OAIVerify_v2_service_verification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lookup_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_code_attempts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sna_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_valid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVerify_v2_service_verification::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
