/**
 * Twilio - Verify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerify_v2_form.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerify_v2_form::OAIVerify_v2_form(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerify_v2_form::OAIVerify_v2_form() {
    this->initializeModel();
}

OAIVerify_v2_form::~OAIVerify_v2_form() {}

void OAIVerify_v2_form::initializeModel() {

    m_form_meta_isSet = false;
    m_form_meta_isValid = false;

    m_form_type_isSet = false;
    m_form_type_isValid = false;

    m_forms_isSet = false;
    m_forms_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIVerify_v2_form::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVerify_v2_form::fromJsonObject(QJsonObject json) {

    m_form_meta_isValid = ::OpenAPI::fromJsonValue(m_form_meta, json[QString("form_meta")]);
    m_form_meta_isSet = !json[QString("form_meta")].isNull() && m_form_meta_isValid;

    m_form_type_isValid = ::OpenAPI::fromJsonValue(m_form_type, json[QString("form_type")]);
    m_form_type_isSet = !json[QString("form_type")].isNull() && m_form_type_isValid;

    m_forms_isValid = ::OpenAPI::fromJsonValue(m_forms, json[QString("forms")]);
    m_forms_isSet = !json[QString("forms")].isNull() && m_forms_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIVerify_v2_form::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVerify_v2_form::asJsonObject() const {
    QJsonObject obj;
    if (m_form_meta_isSet) {
        obj.insert(QString("form_meta"), ::OpenAPI::toJsonValue(m_form_meta));
    }
    if (m_form_type.isSet()) {
        obj.insert(QString("form_type"), ::OpenAPI::toJsonValue(m_form_type));
    }
    if (m_forms_isSet) {
        obj.insert(QString("forms"), ::OpenAPI::toJsonValue(m_forms));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QJsonValue OAIVerify_v2_form::getFormMeta() const {
    return m_form_meta;
}
void OAIVerify_v2_form::setFormMeta(const QJsonValue &form_meta) {
    m_form_meta = form_meta;
    m_form_meta_isSet = true;
}

bool OAIVerify_v2_form::is_form_meta_Set() const{
    return m_form_meta_isSet;
}

bool OAIVerify_v2_form::is_form_meta_Valid() const{
    return m_form_meta_isValid;
}

OAIForm_enum_form_types OAIVerify_v2_form::getFormType() const {
    return m_form_type;
}
void OAIVerify_v2_form::setFormType(const OAIForm_enum_form_types &form_type) {
    m_form_type = form_type;
    m_form_type_isSet = true;
}

bool OAIVerify_v2_form::is_form_type_Set() const{
    return m_form_type_isSet;
}

bool OAIVerify_v2_form::is_form_type_Valid() const{
    return m_form_type_isValid;
}

QJsonValue OAIVerify_v2_form::getForms() const {
    return m_forms;
}
void OAIVerify_v2_form::setForms(const QJsonValue &forms) {
    m_forms = forms;
    m_forms_isSet = true;
}

bool OAIVerify_v2_form::is_forms_Set() const{
    return m_forms_isSet;
}

bool OAIVerify_v2_form::is_forms_Valid() const{
    return m_forms_isValid;
}

QString OAIVerify_v2_form::getUrl() const {
    return m_url;
}
void OAIVerify_v2_form::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIVerify_v2_form::is_url_Set() const{
    return m_url_isSet;
}

bool OAIVerify_v2_form::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIVerify_v2_form::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_form_meta_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_form_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_forms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVerify_v2_form::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
