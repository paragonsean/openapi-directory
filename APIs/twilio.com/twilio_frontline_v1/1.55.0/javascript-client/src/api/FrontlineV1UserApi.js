/**
 * Twilio - Frontline
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FrontlineV1User from '../model/FrontlineV1User';
import UserEnumStateType from '../model/UserEnumStateType';

/**
* FrontlineV1User service.
* @module api/FrontlineV1UserApi
* @version 1.55.0
*/
export default class FrontlineV1UserApi {

    /**
    * Constructs a new FrontlineV1UserApi. 
    * @alias module:api/FrontlineV1UserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the fetchUser operation.
     * @callback module:api/FrontlineV1UserApi~fetchUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FrontlineV1User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch a frontline user
     * @param {String} sid The SID of the User resource to fetch. This value can be either the `sid` or the `identity` of the User resource to fetch.
     * @param {module:api/FrontlineV1UserApi~fetchUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FrontlineV1User}
     */
    fetchUser(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchUser");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FrontlineV1User;
      let basePaths = ['https://frontline-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Users/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateUser operation.
     * @callback module:api/FrontlineV1UserApi~updateUserCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FrontlineV1User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an existing frontline user
     * @param {String} sid The SID of the User resource to update. This value can be either the `sid` or the `identity` of the User resource to update.
     * @param {Object} opts Optional parameters
     * @param {String} [avatar] The avatar URL which will be shown in Frontline application.
     * @param {String} [friendlyName] The string that you assigned to describe the User.
     * @param {Boolean} [isAvailable] Whether the User is available for new conversations. Set to `false` to prevent User from receiving new inbound conversations if you are using [Pool Routing](https://www.twilio.com/docs/frontline/handle-incoming-conversations#3-pool-routing).
     * @param {module:model/UserEnumStateType} [state] 
     * @param {module:api/FrontlineV1UserApi~updateUserCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FrontlineV1User}
     */
    updateUser(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateUser");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Avatar': opts['avatar'],
        'FriendlyName': opts['friendlyName'],
        'IsAvailable': opts['isAvailable'],
        'State': opts['state']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = FrontlineV1User;
      let basePaths = ['https://frontline-api.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Users/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
