/**
 * Twilio - Frontline
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserEnumStateType from './UserEnumStateType';

/**
 * The FrontlineV1User model module.
 * @module model/FrontlineV1User
 * @version 1.55.0
 */
class FrontlineV1User {
    /**
     * Constructs a new <code>FrontlineV1User</code>.
     * @alias module:model/FrontlineV1User
     */
    constructor() { 
        
        FrontlineV1User.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FrontlineV1User</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FrontlineV1User} obj Optional instance to populate.
     * @return {module:model/FrontlineV1User} The populated <code>FrontlineV1User</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FrontlineV1User();

            if (data.hasOwnProperty('avatar')) {
                obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('identity')) {
                obj['identity'] = ApiClient.convertToType(data['identity'], 'String');
            }
            if (data.hasOwnProperty('is_available')) {
                obj['is_available'] = ApiClient.convertToType(data['is_available'], 'Boolean');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = UserEnumStateType.constructFromObject(data['state']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FrontlineV1User</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FrontlineV1User</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['avatar'] && !(typeof data['avatar'] === 'string' || data['avatar'] instanceof String)) {
            throw new Error("Expected the field `avatar` to be a primitive type in the JSON string but got " + data['avatar']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['identity'] && !(typeof data['identity'] === 'string' || data['identity'] instanceof String)) {
            throw new Error("Expected the field `identity` to be a primitive type in the JSON string but got " + data['identity']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The avatar URL which will be shown in Frontline application.
 * @member {String} avatar
 */
FrontlineV1User.prototype['avatar'] = undefined;

/**
 * The string that you assigned to describe the User.
 * @member {String} friendly_name
 */
FrontlineV1User.prototype['friendly_name'] = undefined;

/**
 * The application-defined string that uniquely identifies the resource's User. This value is often a username or an email address, and is case-sensitive.
 * @member {String} identity
 */
FrontlineV1User.prototype['identity'] = undefined;

/**
 * Whether the User is available for new conversations. Defaults to `false` for new users.
 * @member {Boolean} is_available
 */
FrontlineV1User.prototype['is_available'] = undefined;

/**
 * The unique string that we created to identify the User resource.
 * @member {String} sid
 */
FrontlineV1User.prototype['sid'] = undefined;

/**
 * @member {module:model/UserEnumStateType} state
 */
FrontlineV1User.prototype['state'] = undefined;

/**
 * An absolute API resource URL for this user.
 * @member {String} url
 */
FrontlineV1User.prototype['url'] = undefined;






export default FrontlineV1User;

