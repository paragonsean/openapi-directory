/**
 * Twilio - Notify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListServiceResponse from '../model/ListServiceResponse';
import NotifyV1Service from '../model/NotifyV1Service';

/**
* NotifyV1Service service.
* @module api/NotifyV1ServiceApi
* @version 1.55.0
*/
export default class NotifyV1ServiceApi {

    /**
    * Constructs a new NotifyV1ServiceApi. 
    * @alias module:api/NotifyV1ServiceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createService operation.
     * @callback module:api/NotifyV1ServiceApi~createServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NotifyV1Service} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [alexaSkillId] Deprecated.
     * @param {String} [apnCredentialSid] The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for APN Bindings.
     * @param {String} [defaultAlexaNotificationProtocolVersion] Deprecated.
     * @param {String} [defaultApnNotificationProtocolVersion] The protocol version to use for sending APNS notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.
     * @param {String} [defaultFcmNotificationProtocolVersion] The protocol version to use for sending FCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.
     * @param {String} [defaultGcmNotificationProtocolVersion] The protocol version to use for sending GCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.
     * @param {Boolean} [deliveryCallbackEnabled] Callback configuration that enables delivery callbacks, default false
     * @param {String} [deliveryCallbackUrl] URL to send delivery status callback.
     * @param {String} [facebookMessengerPageId] Deprecated.
     * @param {String} [fcmCredentialSid] The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for FCM Bindings.
     * @param {String} [friendlyName] A descriptive string that you create to describe the resource. It can be up to 64 characters long.
     * @param {String} [gcmCredentialSid] The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for GCM Bindings.
     * @param {Boolean} [logEnabled] Whether to log notifications. Can be: `true` or `false` and the default is `true`.
     * @param {String} [messagingServiceSid] The SID of the [Messaging Service](https://www.twilio.com/docs/sms/quickstart#messaging-services) to use for SMS Bindings. This parameter must be set in order to send SMS notifications.
     * @param {module:api/NotifyV1ServiceApi~createServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NotifyV1Service}
     */
    createService(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'AlexaSkillId': opts['alexaSkillId'],
        'ApnCredentialSid': opts['apnCredentialSid'],
        'DefaultAlexaNotificationProtocolVersion': opts['defaultAlexaNotificationProtocolVersion'],
        'DefaultApnNotificationProtocolVersion': opts['defaultApnNotificationProtocolVersion'],
        'DefaultFcmNotificationProtocolVersion': opts['defaultFcmNotificationProtocolVersion'],
        'DefaultGcmNotificationProtocolVersion': opts['defaultGcmNotificationProtocolVersion'],
        'DeliveryCallbackEnabled': opts['deliveryCallbackEnabled'],
        'DeliveryCallbackUrl': opts['deliveryCallbackUrl'],
        'FacebookMessengerPageId': opts['facebookMessengerPageId'],
        'FcmCredentialSid': opts['fcmCredentialSid'],
        'FriendlyName': opts['friendlyName'],
        'GcmCredentialSid': opts['gcmCredentialSid'],
        'LogEnabled': opts['logEnabled'],
        'MessagingServiceSid': opts['messagingServiceSid']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = NotifyV1Service;
      let basePaths = ['https://notify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteService operation.
     * @callback module:api/NotifyV1ServiceApi~deleteServiceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} sid The Twilio-provided string that uniquely identifies the Service resource to delete.
     * @param {module:api/NotifyV1ServiceApi~deleteServiceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteService(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteService");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://notify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchService operation.
     * @callback module:api/NotifyV1ServiceApi~fetchServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NotifyV1Service} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} sid The Twilio-provided string that uniquely identifies the Service resource to fetch.
     * @param {module:api/NotifyV1ServiceApi~fetchServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NotifyV1Service}
     */
    fetchService(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchService");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NotifyV1Service;
      let basePaths = ['https://notify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listService operation.
     * @callback module:api/NotifyV1ServiceApi~listServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListServiceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {String} [friendlyName] The string that identifies the Service resources to read.
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/NotifyV1ServiceApi~listServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListServiceResponse}
     */
    listService(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'FriendlyName': opts['friendlyName'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListServiceResponse;
      let basePaths = ['https://notify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateService operation.
     * @callback module:api/NotifyV1ServiceApi~updateServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NotifyV1Service} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} sid The Twilio-provided string that uniquely identifies the Service resource to update.
     * @param {Object} opts Optional parameters
     * @param {String} [alexaSkillId] Deprecated.
     * @param {String} [apnCredentialSid] The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for APN Bindings.
     * @param {String} [defaultAlexaNotificationProtocolVersion] Deprecated.
     * @param {String} [defaultApnNotificationProtocolVersion] The protocol version to use for sending APNS notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.
     * @param {String} [defaultFcmNotificationProtocolVersion] The protocol version to use for sending FCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.
     * @param {String} [defaultGcmNotificationProtocolVersion] The protocol version to use for sending GCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.
     * @param {Boolean} [deliveryCallbackEnabled] Callback configuration that enables delivery callbacks, default false
     * @param {String} [deliveryCallbackUrl] URL to send delivery status callback.
     * @param {String} [facebookMessengerPageId] Deprecated.
     * @param {String} [fcmCredentialSid] The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for FCM Bindings.
     * @param {String} [friendlyName] A descriptive string that you create to describe the resource. It can be up to 64 characters long.
     * @param {String} [gcmCredentialSid] The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for GCM Bindings.
     * @param {Boolean} [logEnabled] Whether to log notifications. Can be: `true` or `false` and the default is `true`.
     * @param {String} [messagingServiceSid] The SID of the [Messaging Service](https://www.twilio.com/docs/sms/quickstart#messaging-services) to use for SMS Bindings. This parameter must be set in order to send SMS notifications.
     * @param {module:api/NotifyV1ServiceApi~updateServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NotifyV1Service}
     */
    updateService(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateService");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'AlexaSkillId': opts['alexaSkillId'],
        'ApnCredentialSid': opts['apnCredentialSid'],
        'DefaultAlexaNotificationProtocolVersion': opts['defaultAlexaNotificationProtocolVersion'],
        'DefaultApnNotificationProtocolVersion': opts['defaultApnNotificationProtocolVersion'],
        'DefaultFcmNotificationProtocolVersion': opts['defaultFcmNotificationProtocolVersion'],
        'DefaultGcmNotificationProtocolVersion': opts['defaultGcmNotificationProtocolVersion'],
        'DeliveryCallbackEnabled': opts['deliveryCallbackEnabled'],
        'DeliveryCallbackUrl': opts['deliveryCallbackUrl'],
        'FacebookMessengerPageId': opts['facebookMessengerPageId'],
        'FcmCredentialSid': opts['fcmCredentialSid'],
        'FriendlyName': opts['friendlyName'],
        'GcmCredentialSid': opts['gcmCredentialSid'],
        'LogEnabled': opts['logEnabled'],
        'MessagingServiceSid': opts['messagingServiceSid']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = NotifyV1Service;
      let basePaths = ['https://notify.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
