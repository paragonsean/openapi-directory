/**
 * Twilio - Notify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NotifyV1Service model module.
 * @module model/NotifyV1Service
 * @version 1.55.0
 */
class NotifyV1Service {
    /**
     * Constructs a new <code>NotifyV1Service</code>.
     * @alias module:model/NotifyV1Service
     */
    constructor() { 
        
        NotifyV1Service.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NotifyV1Service</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotifyV1Service} obj Optional instance to populate.
     * @return {module:model/NotifyV1Service} The populated <code>NotifyV1Service</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotifyV1Service();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('alexa_skill_id')) {
                obj['alexa_skill_id'] = ApiClient.convertToType(data['alexa_skill_id'], 'String');
            }
            if (data.hasOwnProperty('apn_credential_sid')) {
                obj['apn_credential_sid'] = ApiClient.convertToType(data['apn_credential_sid'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('default_alexa_notification_protocol_version')) {
                obj['default_alexa_notification_protocol_version'] = ApiClient.convertToType(data['default_alexa_notification_protocol_version'], 'String');
            }
            if (data.hasOwnProperty('default_apn_notification_protocol_version')) {
                obj['default_apn_notification_protocol_version'] = ApiClient.convertToType(data['default_apn_notification_protocol_version'], 'String');
            }
            if (data.hasOwnProperty('default_fcm_notification_protocol_version')) {
                obj['default_fcm_notification_protocol_version'] = ApiClient.convertToType(data['default_fcm_notification_protocol_version'], 'String');
            }
            if (data.hasOwnProperty('default_gcm_notification_protocol_version')) {
                obj['default_gcm_notification_protocol_version'] = ApiClient.convertToType(data['default_gcm_notification_protocol_version'], 'String');
            }
            if (data.hasOwnProperty('delivery_callback_enabled')) {
                obj['delivery_callback_enabled'] = ApiClient.convertToType(data['delivery_callback_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('delivery_callback_url')) {
                obj['delivery_callback_url'] = ApiClient.convertToType(data['delivery_callback_url'], 'String');
            }
            if (data.hasOwnProperty('facebook_messenger_page_id')) {
                obj['facebook_messenger_page_id'] = ApiClient.convertToType(data['facebook_messenger_page_id'], 'String');
            }
            if (data.hasOwnProperty('fcm_credential_sid')) {
                obj['fcm_credential_sid'] = ApiClient.convertToType(data['fcm_credential_sid'], 'String');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('gcm_credential_sid')) {
                obj['gcm_credential_sid'] = ApiClient.convertToType(data['gcm_credential_sid'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('log_enabled')) {
                obj['log_enabled'] = ApiClient.convertToType(data['log_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('messaging_service_sid')) {
                obj['messaging_service_sid'] = ApiClient.convertToType(data['messaging_service_sid'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotifyV1Service</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotifyV1Service</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['alexa_skill_id'] && !(typeof data['alexa_skill_id'] === 'string' || data['alexa_skill_id'] instanceof String)) {
            throw new Error("Expected the field `alexa_skill_id` to be a primitive type in the JSON string but got " + data['alexa_skill_id']);
        }
        // ensure the json data is a string
        if (data['apn_credential_sid'] && !(typeof data['apn_credential_sid'] === 'string' || data['apn_credential_sid'] instanceof String)) {
            throw new Error("Expected the field `apn_credential_sid` to be a primitive type in the JSON string but got " + data['apn_credential_sid']);
        }
        // ensure the json data is a string
        if (data['default_alexa_notification_protocol_version'] && !(typeof data['default_alexa_notification_protocol_version'] === 'string' || data['default_alexa_notification_protocol_version'] instanceof String)) {
            throw new Error("Expected the field `default_alexa_notification_protocol_version` to be a primitive type in the JSON string but got " + data['default_alexa_notification_protocol_version']);
        }
        // ensure the json data is a string
        if (data['default_apn_notification_protocol_version'] && !(typeof data['default_apn_notification_protocol_version'] === 'string' || data['default_apn_notification_protocol_version'] instanceof String)) {
            throw new Error("Expected the field `default_apn_notification_protocol_version` to be a primitive type in the JSON string but got " + data['default_apn_notification_protocol_version']);
        }
        // ensure the json data is a string
        if (data['default_fcm_notification_protocol_version'] && !(typeof data['default_fcm_notification_protocol_version'] === 'string' || data['default_fcm_notification_protocol_version'] instanceof String)) {
            throw new Error("Expected the field `default_fcm_notification_protocol_version` to be a primitive type in the JSON string but got " + data['default_fcm_notification_protocol_version']);
        }
        // ensure the json data is a string
        if (data['default_gcm_notification_protocol_version'] && !(typeof data['default_gcm_notification_protocol_version'] === 'string' || data['default_gcm_notification_protocol_version'] instanceof String)) {
            throw new Error("Expected the field `default_gcm_notification_protocol_version` to be a primitive type in the JSON string but got " + data['default_gcm_notification_protocol_version']);
        }
        // ensure the json data is a string
        if (data['delivery_callback_url'] && !(typeof data['delivery_callback_url'] === 'string' || data['delivery_callback_url'] instanceof String)) {
            throw new Error("Expected the field `delivery_callback_url` to be a primitive type in the JSON string but got " + data['delivery_callback_url']);
        }
        // ensure the json data is a string
        if (data['facebook_messenger_page_id'] && !(typeof data['facebook_messenger_page_id'] === 'string' || data['facebook_messenger_page_id'] instanceof String)) {
            throw new Error("Expected the field `facebook_messenger_page_id` to be a primitive type in the JSON string but got " + data['facebook_messenger_page_id']);
        }
        // ensure the json data is a string
        if (data['fcm_credential_sid'] && !(typeof data['fcm_credential_sid'] === 'string' || data['fcm_credential_sid'] instanceof String)) {
            throw new Error("Expected the field `fcm_credential_sid` to be a primitive type in the JSON string but got " + data['fcm_credential_sid']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['gcm_credential_sid'] && !(typeof data['gcm_credential_sid'] === 'string' || data['gcm_credential_sid'] instanceof String)) {
            throw new Error("Expected the field `gcm_credential_sid` to be a primitive type in the JSON string but got " + data['gcm_credential_sid']);
        }
        // ensure the json data is a string
        if (data['messaging_service_sid'] && !(typeof data['messaging_service_sid'] === 'string' || data['messaging_service_sid'] instanceof String)) {
            throw new Error("Expected the field `messaging_service_sid` to be a primitive type in the JSON string but got " + data['messaging_service_sid']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.
 * @member {String} account_sid
 */
NotifyV1Service.prototype['account_sid'] = undefined;

/**
 * Deprecated.
 * @member {String} alexa_skill_id
 */
NotifyV1Service.prototype['alexa_skill_id'] = undefined;

/**
 * The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for APN Bindings.
 * @member {String} apn_credential_sid
 */
NotifyV1Service.prototype['apn_credential_sid'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {Date} date_created
 */
NotifyV1Service.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {Date} date_updated
 */
NotifyV1Service.prototype['date_updated'] = undefined;

/**
 * Deprecated.
 * @member {String} default_alexa_notification_protocol_version
 */
NotifyV1Service.prototype['default_alexa_notification_protocol_version'] = undefined;

/**
 * The protocol version to use for sending APNS notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.
 * @member {String} default_apn_notification_protocol_version
 */
NotifyV1Service.prototype['default_apn_notification_protocol_version'] = undefined;

/**
 * The protocol version to use for sending FCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.
 * @member {String} default_fcm_notification_protocol_version
 */
NotifyV1Service.prototype['default_fcm_notification_protocol_version'] = undefined;

/**
 * The protocol version to use for sending GCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.
 * @member {String} default_gcm_notification_protocol_version
 */
NotifyV1Service.prototype['default_gcm_notification_protocol_version'] = undefined;

/**
 * Callback configuration that enables delivery callbacks, default false
 * @member {Boolean} delivery_callback_enabled
 */
NotifyV1Service.prototype['delivery_callback_enabled'] = undefined;

/**
 * URL to send delivery status callback.
 * @member {String} delivery_callback_url
 */
NotifyV1Service.prototype['delivery_callback_url'] = undefined;

/**
 * Deprecated.
 * @member {String} facebook_messenger_page_id
 */
NotifyV1Service.prototype['facebook_messenger_page_id'] = undefined;

/**
 * The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for FCM Bindings.
 * @member {String} fcm_credential_sid
 */
NotifyV1Service.prototype['fcm_credential_sid'] = undefined;

/**
 * The string that you assigned to describe the resource.
 * @member {String} friendly_name
 */
NotifyV1Service.prototype['friendly_name'] = undefined;

/**
 * The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for GCM Bindings.
 * @member {String} gcm_credential_sid
 */
NotifyV1Service.prototype['gcm_credential_sid'] = undefined;

/**
 * The URLs of the Binding, Notification, Segment, and User resources related to the service.
 * @member {Object} links
 */
NotifyV1Service.prototype['links'] = undefined;

/**
 * Whether to log notifications. Can be: `true` or `false` and the default is `true`.
 * @member {Boolean} log_enabled
 */
NotifyV1Service.prototype['log_enabled'] = undefined;

/**
 * The SID of the [Messaging Service](https://www.twilio.com/docs/sms/quickstart#messaging-services) to use for SMS Bindings. In order to send SMS notifications this parameter has to be set.
 * @member {String} messaging_service_sid
 */
NotifyV1Service.prototype['messaging_service_sid'] = undefined;

/**
 * The unique string that we created to identify the Service resource.
 * @member {String} sid
 */
NotifyV1Service.prototype['sid'] = undefined;

/**
 * The absolute URL of the Service resource.
 * @member {String} url
 */
NotifyV1Service.prototype['url'] = undefined;






export default NotifyV1Service;

