/**
 * Twilio - Notify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwilioNotify);
  }
}(this, function(expect, TwilioNotify) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwilioNotify.NotifyV1ServiceNotification();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NotifyV1ServiceNotification', function() {
    it('should create an instance of NotifyV1ServiceNotification', function() {
      // uncomment below and update the code to test NotifyV1ServiceNotification
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be.a(TwilioNotify.NotifyV1ServiceNotification);
    });

    it('should have the property accountSid (base name: "account_sid")', function() {
      // uncomment below and update the code to test the property accountSid
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property action (base name: "action")', function() {
      // uncomment below and update the code to test the property action
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property alexa (base name: "alexa")', function() {
      // uncomment below and update the code to test the property alexa
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property apn (base name: "apn")', function() {
      // uncomment below and update the code to test the property apn
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property body (base name: "body")', function() {
      // uncomment below and update the code to test the property body
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property data (base name: "data")', function() {
      // uncomment below and update the code to test the property data
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "date_created")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property facebookMessenger (base name: "facebook_messenger")', function() {
      // uncomment below and update the code to test the property facebookMessenger
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property fcm (base name: "fcm")', function() {
      // uncomment below and update the code to test the property fcm
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property gcm (base name: "gcm")', function() {
      // uncomment below and update the code to test the property gcm
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property identities (base name: "identities")', function() {
      // uncomment below and update the code to test the property identities
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property priority (base name: "priority")', function() {
      // uncomment below and update the code to test the property priority
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property segments (base name: "segments")', function() {
      // uncomment below and update the code to test the property segments
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property serviceSid (base name: "service_sid")', function() {
      // uncomment below and update the code to test the property serviceSid
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property sid (base name: "sid")', function() {
      // uncomment below and update the code to test the property sid
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property sms (base name: "sms")', function() {
      // uncomment below and update the code to test the property sms
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property sound (base name: "sound")', function() {
      // uncomment below and update the code to test the property sound
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

    it('should have the property ttl (base name: "ttl")', function() {
      // uncomment below and update the code to test the property ttl
      //var instance = new TwilioNotify.NotifyV1ServiceNotification();
      //expect(instance).to.be();
    });

  });

}));
