/**
 * Twilio - Notify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwilioNotify);
  }
}(this, function(expect, TwilioNotify) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwilioNotify.NotifyV1Service();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NotifyV1Service', function() {
    it('should create an instance of NotifyV1Service', function() {
      // uncomment below and update the code to test NotifyV1Service
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be.a(TwilioNotify.NotifyV1Service);
    });

    it('should have the property accountSid (base name: "account_sid")', function() {
      // uncomment below and update the code to test the property accountSid
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property alexaSkillId (base name: "alexa_skill_id")', function() {
      // uncomment below and update the code to test the property alexaSkillId
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property apnCredentialSid (base name: "apn_credential_sid")', function() {
      // uncomment below and update the code to test the property apnCredentialSid
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "date_created")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property dateUpdated (base name: "date_updated")', function() {
      // uncomment below and update the code to test the property dateUpdated
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property defaultAlexaNotificationProtocolVersion (base name: "default_alexa_notification_protocol_version")', function() {
      // uncomment below and update the code to test the property defaultAlexaNotificationProtocolVersion
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property defaultApnNotificationProtocolVersion (base name: "default_apn_notification_protocol_version")', function() {
      // uncomment below and update the code to test the property defaultApnNotificationProtocolVersion
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property defaultFcmNotificationProtocolVersion (base name: "default_fcm_notification_protocol_version")', function() {
      // uncomment below and update the code to test the property defaultFcmNotificationProtocolVersion
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property defaultGcmNotificationProtocolVersion (base name: "default_gcm_notification_protocol_version")', function() {
      // uncomment below and update the code to test the property defaultGcmNotificationProtocolVersion
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property deliveryCallbackEnabled (base name: "delivery_callback_enabled")', function() {
      // uncomment below and update the code to test the property deliveryCallbackEnabled
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property deliveryCallbackUrl (base name: "delivery_callback_url")', function() {
      // uncomment below and update the code to test the property deliveryCallbackUrl
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property facebookMessengerPageId (base name: "facebook_messenger_page_id")', function() {
      // uncomment below and update the code to test the property facebookMessengerPageId
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property fcmCredentialSid (base name: "fcm_credential_sid")', function() {
      // uncomment below and update the code to test the property fcmCredentialSid
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property friendlyName (base name: "friendly_name")', function() {
      // uncomment below and update the code to test the property friendlyName
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property gcmCredentialSid (base name: "gcm_credential_sid")', function() {
      // uncomment below and update the code to test the property gcmCredentialSid
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property logEnabled (base name: "log_enabled")', function() {
      // uncomment below and update the code to test the property logEnabled
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property messagingServiceSid (base name: "messaging_service_sid")', function() {
      // uncomment below and update the code to test the property messagingServiceSid
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property sid (base name: "sid")', function() {
      // uncomment below and update the code to test the property sid
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new TwilioNotify.NotifyV1Service();
      //expect(instance).to.be();
    });

  });

}));
