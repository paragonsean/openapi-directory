# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class NotifyV1ServiceBinding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, address: str=None, binding_type: str=None, credential_sid: str=None, date_created: datetime=None, date_updated: datetime=None, endpoint: str=None, identity: str=None, links: object=None, notification_protocol_version: str=None, service_sid: str=None, sid: str=None, tags: List[str]=None, url: str=None):
        """NotifyV1ServiceBinding - a model defined in OpenAPI

        :param account_sid: The account_sid of this NotifyV1ServiceBinding.
        :param address: The address of this NotifyV1ServiceBinding.
        :param binding_type: The binding_type of this NotifyV1ServiceBinding.
        :param credential_sid: The credential_sid of this NotifyV1ServiceBinding.
        :param date_created: The date_created of this NotifyV1ServiceBinding.
        :param date_updated: The date_updated of this NotifyV1ServiceBinding.
        :param endpoint: The endpoint of this NotifyV1ServiceBinding.
        :param identity: The identity of this NotifyV1ServiceBinding.
        :param links: The links of this NotifyV1ServiceBinding.
        :param notification_protocol_version: The notification_protocol_version of this NotifyV1ServiceBinding.
        :param service_sid: The service_sid of this NotifyV1ServiceBinding.
        :param sid: The sid of this NotifyV1ServiceBinding.
        :param tags: The tags of this NotifyV1ServiceBinding.
        :param url: The url of this NotifyV1ServiceBinding.
        """
        self.openapi_types = {
            'account_sid': str,
            'address': str,
            'binding_type': str,
            'credential_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'endpoint': str,
            'identity': str,
            'links': object,
            'notification_protocol_version': str,
            'service_sid': str,
            'sid': str,
            'tags': List[str],
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'address': 'address',
            'binding_type': 'binding_type',
            'credential_sid': 'credential_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'endpoint': 'endpoint',
            'identity': 'identity',
            'links': 'links',
            'notification_protocol_version': 'notification_protocol_version',
            'service_sid': 'service_sid',
            'sid': 'sid',
            'tags': 'tags',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._address = address
        self._binding_type = binding_type
        self._credential_sid = credential_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._endpoint = endpoint
        self._identity = identity
        self._links = links
        self._notification_protocol_version = notification_protocol_version
        self._service_sid = service_sid
        self._sid = sid
        self._tags = tags
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotifyV1ServiceBinding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The notify.v1.service.binding of this NotifyV1ServiceBinding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this NotifyV1ServiceBinding.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Binding resource.

        :return: The account_sid of this NotifyV1ServiceBinding.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this NotifyV1ServiceBinding.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Binding resource.

        :param account_sid: The account_sid of this NotifyV1ServiceBinding.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def address(self):
        """Gets the address of this NotifyV1ServiceBinding.

        The channel-specific address. For APNS, the device token. For FCM and GCM, the registration token. For SMS, a phone number in E.164 format. For Facebook Messenger, the Messenger ID of the user or a phone number in E.164 format.

        :return: The address of this NotifyV1ServiceBinding.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this NotifyV1ServiceBinding.

        The channel-specific address. For APNS, the device token. For FCM and GCM, the registration token. For SMS, a phone number in E.164 format. For Facebook Messenger, the Messenger ID of the user or a phone number in E.164 format.

        :param address: The address of this NotifyV1ServiceBinding.
        :type address: str
        """

        self._address = address

    @property
    def binding_type(self):
        """Gets the binding_type of this NotifyV1ServiceBinding.

        The transport technology to use for the Binding. Can be: `apn`, `fcm`, `gcm`, `sms`, or `facebook-messenger`.

        :return: The binding_type of this NotifyV1ServiceBinding.
        :rtype: str
        """
        return self._binding_type

    @binding_type.setter
    def binding_type(self, binding_type):
        """Sets the binding_type of this NotifyV1ServiceBinding.

        The transport technology to use for the Binding. Can be: `apn`, `fcm`, `gcm`, `sms`, or `facebook-messenger`.

        :param binding_type: The binding_type of this NotifyV1ServiceBinding.
        :type binding_type: str
        """

        self._binding_type = binding_type

    @property
    def credential_sid(self):
        """Gets the credential_sid of this NotifyV1ServiceBinding.

        The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) resource to be used to send notifications to this Binding. If present, this overrides the Credential specified in the Service resource. Applicable only to `apn`, `fcm`, and `gcm` type Bindings.

        :return: The credential_sid of this NotifyV1ServiceBinding.
        :rtype: str
        """
        return self._credential_sid

    @credential_sid.setter
    def credential_sid(self, credential_sid):
        """Sets the credential_sid of this NotifyV1ServiceBinding.

        The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) resource to be used to send notifications to this Binding. If present, this overrides the Credential specified in the Service resource. Applicable only to `apn`, `fcm`, and `gcm` type Bindings.

        :param credential_sid: The credential_sid of this NotifyV1ServiceBinding.
        :type credential_sid: str
        """
        if credential_sid is not None and len(credential_sid) > 34:
            raise ValueError("Invalid value for `credential_sid`, length must be less than or equal to `34`")
        if credential_sid is not None and len(credential_sid) < 34:
            raise ValueError("Invalid value for `credential_sid`, length must be greater than or equal to `34`")
        if credential_sid is not None and not re.search(r'^CR[0-9a-fA-F]{32}$', credential_sid):
            raise ValueError("Invalid value for `credential_sid`, must be a follow pattern or equal to `/^CR[0-9a-fA-F]{32}$/`")

        self._credential_sid = credential_sid

    @property
    def date_created(self):
        """Gets the date_created of this NotifyV1ServiceBinding.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this NotifyV1ServiceBinding.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this NotifyV1ServiceBinding.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this NotifyV1ServiceBinding.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this NotifyV1ServiceBinding.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this NotifyV1ServiceBinding.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this NotifyV1ServiceBinding.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this NotifyV1ServiceBinding.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def endpoint(self):
        """Gets the endpoint of this NotifyV1ServiceBinding.

        Deprecated.

        :return: The endpoint of this NotifyV1ServiceBinding.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this NotifyV1ServiceBinding.

        Deprecated.

        :param endpoint: The endpoint of this NotifyV1ServiceBinding.
        :type endpoint: str
        """

        self._endpoint = endpoint

    @property
    def identity(self):
        """Gets the identity of this NotifyV1ServiceBinding.

        The `identity` value that uniquely identifies the resource's [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/notify/api/service-resource). Up to 20 Bindings can be created for the same Identity in a given Service.

        :return: The identity of this NotifyV1ServiceBinding.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this NotifyV1ServiceBinding.

        The `identity` value that uniquely identifies the resource's [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/notify/api/service-resource). Up to 20 Bindings can be created for the same Identity in a given Service.

        :param identity: The identity of this NotifyV1ServiceBinding.
        :type identity: str
        """

        self._identity = identity

    @property
    def links(self):
        """Gets the links of this NotifyV1ServiceBinding.

        The URLs of related resources.

        :return: The links of this NotifyV1ServiceBinding.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this NotifyV1ServiceBinding.

        The URLs of related resources.

        :param links: The links of this NotifyV1ServiceBinding.
        :type links: object
        """

        self._links = links

    @property
    def notification_protocol_version(self):
        """Gets the notification_protocol_version of this NotifyV1ServiceBinding.

        The protocol version to use to send the notification. This defaults to the value of `default_xxxx_notification_protocol_version` in the [Service](https://www.twilio.com/docs/notify/api/service-resource) for the protocol. The current version is `\"3\"` for `apn`, `fcm`, and `gcm` type Bindings. The parameter is not applicable to `sms` and `facebook-messenger` type Bindings as the data format is fixed.

        :return: The notification_protocol_version of this NotifyV1ServiceBinding.
        :rtype: str
        """
        return self._notification_protocol_version

    @notification_protocol_version.setter
    def notification_protocol_version(self, notification_protocol_version):
        """Sets the notification_protocol_version of this NotifyV1ServiceBinding.

        The protocol version to use to send the notification. This defaults to the value of `default_xxxx_notification_protocol_version` in the [Service](https://www.twilio.com/docs/notify/api/service-resource) for the protocol. The current version is `\"3\"` for `apn`, `fcm`, and `gcm` type Bindings. The parameter is not applicable to `sms` and `facebook-messenger` type Bindings as the data format is fixed.

        :param notification_protocol_version: The notification_protocol_version of this NotifyV1ServiceBinding.
        :type notification_protocol_version: str
        """

        self._notification_protocol_version = notification_protocol_version

    @property
    def service_sid(self):
        """Gets the service_sid of this NotifyV1ServiceBinding.

        The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) the resource is associated with.

        :return: The service_sid of this NotifyV1ServiceBinding.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this NotifyV1ServiceBinding.

        The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) the resource is associated with.

        :param service_sid: The service_sid of this NotifyV1ServiceBinding.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def sid(self):
        """Gets the sid of this NotifyV1ServiceBinding.

        The unique string that we created to identify the Binding resource.

        :return: The sid of this NotifyV1ServiceBinding.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this NotifyV1ServiceBinding.

        The unique string that we created to identify the Binding resource.

        :param sid: The sid of this NotifyV1ServiceBinding.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^BS[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^BS[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def tags(self):
        """Gets the tags of this NotifyV1ServiceBinding.

        The list of tags associated with this Binding. Tags can be used to select the Bindings to use when sending a notification. Maximum 20 tags are allowed.

        :return: The tags of this NotifyV1ServiceBinding.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this NotifyV1ServiceBinding.

        The list of tags associated with this Binding. Tags can be used to select the Bindings to use when sending a notification. Maximum 20 tags are allowed.

        :param tags: The tags of this NotifyV1ServiceBinding.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def url(self):
        """Gets the url of this NotifyV1ServiceBinding.

        The absolute URL of the Binding resource.

        :return: The url of this NotifyV1ServiceBinding.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this NotifyV1ServiceBinding.

        The absolute URL of the Binding resource.

        :param url: The url of this NotifyV1ServiceBinding.
        :type url: str
        """

        self._url = url
