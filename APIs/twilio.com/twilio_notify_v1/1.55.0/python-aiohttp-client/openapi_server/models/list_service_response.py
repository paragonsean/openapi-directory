# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_credential_response_meta import ListCredentialResponseMeta
from openapi_server.models.notify_v1_service import NotifyV1Service
from openapi_server import util


class ListServiceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, meta: ListCredentialResponseMeta=None, services: List[NotifyV1Service]=None):
        """ListServiceResponse - a model defined in OpenAPI

        :param meta: The meta of this ListServiceResponse.
        :param services: The services of this ListServiceResponse.
        """
        self.openapi_types = {
            'meta': ListCredentialResponseMeta,
            'services': List[NotifyV1Service]
        }

        self.attribute_map = {
            'meta': 'meta',
            'services': 'services'
        }

        self._meta = meta
        self._services = services

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListServiceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListServiceResponse of this ListServiceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def meta(self):
        """Gets the meta of this ListServiceResponse.


        :return: The meta of this ListServiceResponse.
        :rtype: ListCredentialResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListServiceResponse.


        :param meta: The meta of this ListServiceResponse.
        :type meta: ListCredentialResponseMeta
        """

        self._meta = meta

    @property
    def services(self):
        """Gets the services of this ListServiceResponse.


        :return: The services of this ListServiceResponse.
        :rtype: List[NotifyV1Service]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this ListServiceResponse.


        :param services: The services of this ListServiceResponse.
        :type services: List[NotifyV1Service]
        """

        self._services = services
