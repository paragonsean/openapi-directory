# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class NotifyV1Service(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, alexa_skill_id: str=None, apn_credential_sid: str=None, date_created: datetime=None, date_updated: datetime=None, default_alexa_notification_protocol_version: str=None, default_apn_notification_protocol_version: str=None, default_fcm_notification_protocol_version: str=None, default_gcm_notification_protocol_version: str=None, delivery_callback_enabled: bool=None, delivery_callback_url: str=None, facebook_messenger_page_id: str=None, fcm_credential_sid: str=None, friendly_name: str=None, gcm_credential_sid: str=None, links: object=None, log_enabled: bool=None, messaging_service_sid: str=None, sid: str=None, url: str=None):
        """NotifyV1Service - a model defined in OpenAPI

        :param account_sid: The account_sid of this NotifyV1Service.
        :param alexa_skill_id: The alexa_skill_id of this NotifyV1Service.
        :param apn_credential_sid: The apn_credential_sid of this NotifyV1Service.
        :param date_created: The date_created of this NotifyV1Service.
        :param date_updated: The date_updated of this NotifyV1Service.
        :param default_alexa_notification_protocol_version: The default_alexa_notification_protocol_version of this NotifyV1Service.
        :param default_apn_notification_protocol_version: The default_apn_notification_protocol_version of this NotifyV1Service.
        :param default_fcm_notification_protocol_version: The default_fcm_notification_protocol_version of this NotifyV1Service.
        :param default_gcm_notification_protocol_version: The default_gcm_notification_protocol_version of this NotifyV1Service.
        :param delivery_callback_enabled: The delivery_callback_enabled of this NotifyV1Service.
        :param delivery_callback_url: The delivery_callback_url of this NotifyV1Service.
        :param facebook_messenger_page_id: The facebook_messenger_page_id of this NotifyV1Service.
        :param fcm_credential_sid: The fcm_credential_sid of this NotifyV1Service.
        :param friendly_name: The friendly_name of this NotifyV1Service.
        :param gcm_credential_sid: The gcm_credential_sid of this NotifyV1Service.
        :param links: The links of this NotifyV1Service.
        :param log_enabled: The log_enabled of this NotifyV1Service.
        :param messaging_service_sid: The messaging_service_sid of this NotifyV1Service.
        :param sid: The sid of this NotifyV1Service.
        :param url: The url of this NotifyV1Service.
        """
        self.openapi_types = {
            'account_sid': str,
            'alexa_skill_id': str,
            'apn_credential_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'default_alexa_notification_protocol_version': str,
            'default_apn_notification_protocol_version': str,
            'default_fcm_notification_protocol_version': str,
            'default_gcm_notification_protocol_version': str,
            'delivery_callback_enabled': bool,
            'delivery_callback_url': str,
            'facebook_messenger_page_id': str,
            'fcm_credential_sid': str,
            'friendly_name': str,
            'gcm_credential_sid': str,
            'links': object,
            'log_enabled': bool,
            'messaging_service_sid': str,
            'sid': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'alexa_skill_id': 'alexa_skill_id',
            'apn_credential_sid': 'apn_credential_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'default_alexa_notification_protocol_version': 'default_alexa_notification_protocol_version',
            'default_apn_notification_protocol_version': 'default_apn_notification_protocol_version',
            'default_fcm_notification_protocol_version': 'default_fcm_notification_protocol_version',
            'default_gcm_notification_protocol_version': 'default_gcm_notification_protocol_version',
            'delivery_callback_enabled': 'delivery_callback_enabled',
            'delivery_callback_url': 'delivery_callback_url',
            'facebook_messenger_page_id': 'facebook_messenger_page_id',
            'fcm_credential_sid': 'fcm_credential_sid',
            'friendly_name': 'friendly_name',
            'gcm_credential_sid': 'gcm_credential_sid',
            'links': 'links',
            'log_enabled': 'log_enabled',
            'messaging_service_sid': 'messaging_service_sid',
            'sid': 'sid',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._alexa_skill_id = alexa_skill_id
        self._apn_credential_sid = apn_credential_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._default_alexa_notification_protocol_version = default_alexa_notification_protocol_version
        self._default_apn_notification_protocol_version = default_apn_notification_protocol_version
        self._default_fcm_notification_protocol_version = default_fcm_notification_protocol_version
        self._default_gcm_notification_protocol_version = default_gcm_notification_protocol_version
        self._delivery_callback_enabled = delivery_callback_enabled
        self._delivery_callback_url = delivery_callback_url
        self._facebook_messenger_page_id = facebook_messenger_page_id
        self._fcm_credential_sid = fcm_credential_sid
        self._friendly_name = friendly_name
        self._gcm_credential_sid = gcm_credential_sid
        self._links = links
        self._log_enabled = log_enabled
        self._messaging_service_sid = messaging_service_sid
        self._sid = sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotifyV1Service':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The notify.v1.service of this NotifyV1Service.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this NotifyV1Service.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.

        :return: The account_sid of this NotifyV1Service.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this NotifyV1Service.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.

        :param account_sid: The account_sid of this NotifyV1Service.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def alexa_skill_id(self):
        """Gets the alexa_skill_id of this NotifyV1Service.

        Deprecated.

        :return: The alexa_skill_id of this NotifyV1Service.
        :rtype: str
        """
        return self._alexa_skill_id

    @alexa_skill_id.setter
    def alexa_skill_id(self, alexa_skill_id):
        """Sets the alexa_skill_id of this NotifyV1Service.

        Deprecated.

        :param alexa_skill_id: The alexa_skill_id of this NotifyV1Service.
        :type alexa_skill_id: str
        """

        self._alexa_skill_id = alexa_skill_id

    @property
    def apn_credential_sid(self):
        """Gets the apn_credential_sid of this NotifyV1Service.

        The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for APN Bindings.

        :return: The apn_credential_sid of this NotifyV1Service.
        :rtype: str
        """
        return self._apn_credential_sid

    @apn_credential_sid.setter
    def apn_credential_sid(self, apn_credential_sid):
        """Sets the apn_credential_sid of this NotifyV1Service.

        The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for APN Bindings.

        :param apn_credential_sid: The apn_credential_sid of this NotifyV1Service.
        :type apn_credential_sid: str
        """
        if apn_credential_sid is not None and len(apn_credential_sid) > 34:
            raise ValueError("Invalid value for `apn_credential_sid`, length must be less than or equal to `34`")
        if apn_credential_sid is not None and len(apn_credential_sid) < 34:
            raise ValueError("Invalid value for `apn_credential_sid`, length must be greater than or equal to `34`")
        if apn_credential_sid is not None and not re.search(r'^CR[0-9a-fA-F]{32}$', apn_credential_sid):
            raise ValueError("Invalid value for `apn_credential_sid`, must be a follow pattern or equal to `/^CR[0-9a-fA-F]{32}$/`")

        self._apn_credential_sid = apn_credential_sid

    @property
    def date_created(self):
        """Gets the date_created of this NotifyV1Service.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_created of this NotifyV1Service.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this NotifyV1Service.

        The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_created: The date_created of this NotifyV1Service.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this NotifyV1Service.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :return: The date_updated of this NotifyV1Service.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this NotifyV1Service.

        The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.

        :param date_updated: The date_updated of this NotifyV1Service.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def default_alexa_notification_protocol_version(self):
        """Gets the default_alexa_notification_protocol_version of this NotifyV1Service.

        Deprecated.

        :return: The default_alexa_notification_protocol_version of this NotifyV1Service.
        :rtype: str
        """
        return self._default_alexa_notification_protocol_version

    @default_alexa_notification_protocol_version.setter
    def default_alexa_notification_protocol_version(self, default_alexa_notification_protocol_version):
        """Sets the default_alexa_notification_protocol_version of this NotifyV1Service.

        Deprecated.

        :param default_alexa_notification_protocol_version: The default_alexa_notification_protocol_version of this NotifyV1Service.
        :type default_alexa_notification_protocol_version: str
        """

        self._default_alexa_notification_protocol_version = default_alexa_notification_protocol_version

    @property
    def default_apn_notification_protocol_version(self):
        """Gets the default_apn_notification_protocol_version of this NotifyV1Service.

        The protocol version to use for sending APNS notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.

        :return: The default_apn_notification_protocol_version of this NotifyV1Service.
        :rtype: str
        """
        return self._default_apn_notification_protocol_version

    @default_apn_notification_protocol_version.setter
    def default_apn_notification_protocol_version(self, default_apn_notification_protocol_version):
        """Sets the default_apn_notification_protocol_version of this NotifyV1Service.

        The protocol version to use for sending APNS notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.

        :param default_apn_notification_protocol_version: The default_apn_notification_protocol_version of this NotifyV1Service.
        :type default_apn_notification_protocol_version: str
        """

        self._default_apn_notification_protocol_version = default_apn_notification_protocol_version

    @property
    def default_fcm_notification_protocol_version(self):
        """Gets the default_fcm_notification_protocol_version of this NotifyV1Service.

        The protocol version to use for sending FCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.

        :return: The default_fcm_notification_protocol_version of this NotifyV1Service.
        :rtype: str
        """
        return self._default_fcm_notification_protocol_version

    @default_fcm_notification_protocol_version.setter
    def default_fcm_notification_protocol_version(self, default_fcm_notification_protocol_version):
        """Sets the default_fcm_notification_protocol_version of this NotifyV1Service.

        The protocol version to use for sending FCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.

        :param default_fcm_notification_protocol_version: The default_fcm_notification_protocol_version of this NotifyV1Service.
        :type default_fcm_notification_protocol_version: str
        """

        self._default_fcm_notification_protocol_version = default_fcm_notification_protocol_version

    @property
    def default_gcm_notification_protocol_version(self):
        """Gets the default_gcm_notification_protocol_version of this NotifyV1Service.

        The protocol version to use for sending GCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.

        :return: The default_gcm_notification_protocol_version of this NotifyV1Service.
        :rtype: str
        """
        return self._default_gcm_notification_protocol_version

    @default_gcm_notification_protocol_version.setter
    def default_gcm_notification_protocol_version(self, default_gcm_notification_protocol_version):
        """Sets the default_gcm_notification_protocol_version of this NotifyV1Service.

        The protocol version to use for sending GCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.

        :param default_gcm_notification_protocol_version: The default_gcm_notification_protocol_version of this NotifyV1Service.
        :type default_gcm_notification_protocol_version: str
        """

        self._default_gcm_notification_protocol_version = default_gcm_notification_protocol_version

    @property
    def delivery_callback_enabled(self):
        """Gets the delivery_callback_enabled of this NotifyV1Service.

        Callback configuration that enables delivery callbacks, default false

        :return: The delivery_callback_enabled of this NotifyV1Service.
        :rtype: bool
        """
        return self._delivery_callback_enabled

    @delivery_callback_enabled.setter
    def delivery_callback_enabled(self, delivery_callback_enabled):
        """Sets the delivery_callback_enabled of this NotifyV1Service.

        Callback configuration that enables delivery callbacks, default false

        :param delivery_callback_enabled: The delivery_callback_enabled of this NotifyV1Service.
        :type delivery_callback_enabled: bool
        """

        self._delivery_callback_enabled = delivery_callback_enabled

    @property
    def delivery_callback_url(self):
        """Gets the delivery_callback_url of this NotifyV1Service.

        URL to send delivery status callback.

        :return: The delivery_callback_url of this NotifyV1Service.
        :rtype: str
        """
        return self._delivery_callback_url

    @delivery_callback_url.setter
    def delivery_callback_url(self, delivery_callback_url):
        """Sets the delivery_callback_url of this NotifyV1Service.

        URL to send delivery status callback.

        :param delivery_callback_url: The delivery_callback_url of this NotifyV1Service.
        :type delivery_callback_url: str
        """

        self._delivery_callback_url = delivery_callback_url

    @property
    def facebook_messenger_page_id(self):
        """Gets the facebook_messenger_page_id of this NotifyV1Service.

        Deprecated.

        :return: The facebook_messenger_page_id of this NotifyV1Service.
        :rtype: str
        """
        return self._facebook_messenger_page_id

    @facebook_messenger_page_id.setter
    def facebook_messenger_page_id(self, facebook_messenger_page_id):
        """Sets the facebook_messenger_page_id of this NotifyV1Service.

        Deprecated.

        :param facebook_messenger_page_id: The facebook_messenger_page_id of this NotifyV1Service.
        :type facebook_messenger_page_id: str
        """

        self._facebook_messenger_page_id = facebook_messenger_page_id

    @property
    def fcm_credential_sid(self):
        """Gets the fcm_credential_sid of this NotifyV1Service.

        The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for FCM Bindings.

        :return: The fcm_credential_sid of this NotifyV1Service.
        :rtype: str
        """
        return self._fcm_credential_sid

    @fcm_credential_sid.setter
    def fcm_credential_sid(self, fcm_credential_sid):
        """Sets the fcm_credential_sid of this NotifyV1Service.

        The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for FCM Bindings.

        :param fcm_credential_sid: The fcm_credential_sid of this NotifyV1Service.
        :type fcm_credential_sid: str
        """
        if fcm_credential_sid is not None and len(fcm_credential_sid) > 34:
            raise ValueError("Invalid value for `fcm_credential_sid`, length must be less than or equal to `34`")
        if fcm_credential_sid is not None and len(fcm_credential_sid) < 34:
            raise ValueError("Invalid value for `fcm_credential_sid`, length must be greater than or equal to `34`")
        if fcm_credential_sid is not None and not re.search(r'^CR[0-9a-fA-F]{32}$', fcm_credential_sid):
            raise ValueError("Invalid value for `fcm_credential_sid`, must be a follow pattern or equal to `/^CR[0-9a-fA-F]{32}$/`")

        self._fcm_credential_sid = fcm_credential_sid

    @property
    def friendly_name(self):
        """Gets the friendly_name of this NotifyV1Service.

        The string that you assigned to describe the resource.

        :return: The friendly_name of this NotifyV1Service.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this NotifyV1Service.

        The string that you assigned to describe the resource.

        :param friendly_name: The friendly_name of this NotifyV1Service.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def gcm_credential_sid(self):
        """Gets the gcm_credential_sid of this NotifyV1Service.

        The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for GCM Bindings.

        :return: The gcm_credential_sid of this NotifyV1Service.
        :rtype: str
        """
        return self._gcm_credential_sid

    @gcm_credential_sid.setter
    def gcm_credential_sid(self, gcm_credential_sid):
        """Sets the gcm_credential_sid of this NotifyV1Service.

        The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for GCM Bindings.

        :param gcm_credential_sid: The gcm_credential_sid of this NotifyV1Service.
        :type gcm_credential_sid: str
        """
        if gcm_credential_sid is not None and len(gcm_credential_sid) > 34:
            raise ValueError("Invalid value for `gcm_credential_sid`, length must be less than or equal to `34`")
        if gcm_credential_sid is not None and len(gcm_credential_sid) < 34:
            raise ValueError("Invalid value for `gcm_credential_sid`, length must be greater than or equal to `34`")
        if gcm_credential_sid is not None and not re.search(r'^CR[0-9a-fA-F]{32}$', gcm_credential_sid):
            raise ValueError("Invalid value for `gcm_credential_sid`, must be a follow pattern or equal to `/^CR[0-9a-fA-F]{32}$/`")

        self._gcm_credential_sid = gcm_credential_sid

    @property
    def links(self):
        """Gets the links of this NotifyV1Service.

        The URLs of the Binding, Notification, Segment, and User resources related to the service.

        :return: The links of this NotifyV1Service.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this NotifyV1Service.

        The URLs of the Binding, Notification, Segment, and User resources related to the service.

        :param links: The links of this NotifyV1Service.
        :type links: object
        """

        self._links = links

    @property
    def log_enabled(self):
        """Gets the log_enabled of this NotifyV1Service.

        Whether to log notifications. Can be: `true` or `false` and the default is `true`.

        :return: The log_enabled of this NotifyV1Service.
        :rtype: bool
        """
        return self._log_enabled

    @log_enabled.setter
    def log_enabled(self, log_enabled):
        """Sets the log_enabled of this NotifyV1Service.

        Whether to log notifications. Can be: `true` or `false` and the default is `true`.

        :param log_enabled: The log_enabled of this NotifyV1Service.
        :type log_enabled: bool
        """

        self._log_enabled = log_enabled

    @property
    def messaging_service_sid(self):
        """Gets the messaging_service_sid of this NotifyV1Service.

        The SID of the [Messaging Service](https://www.twilio.com/docs/sms/quickstart#messaging-services) to use for SMS Bindings. In order to send SMS notifications this parameter has to be set.

        :return: The messaging_service_sid of this NotifyV1Service.
        :rtype: str
        """
        return self._messaging_service_sid

    @messaging_service_sid.setter
    def messaging_service_sid(self, messaging_service_sid):
        """Sets the messaging_service_sid of this NotifyV1Service.

        The SID of the [Messaging Service](https://www.twilio.com/docs/sms/quickstart#messaging-services) to use for SMS Bindings. In order to send SMS notifications this parameter has to be set.

        :param messaging_service_sid: The messaging_service_sid of this NotifyV1Service.
        :type messaging_service_sid: str
        """
        if messaging_service_sid is not None and len(messaging_service_sid) > 34:
            raise ValueError("Invalid value for `messaging_service_sid`, length must be less than or equal to `34`")
        if messaging_service_sid is not None and len(messaging_service_sid) < 34:
            raise ValueError("Invalid value for `messaging_service_sid`, length must be greater than or equal to `34`")
        if messaging_service_sid is not None and not re.search(r'^MG[0-9a-fA-F]{32}$', messaging_service_sid):
            raise ValueError("Invalid value for `messaging_service_sid`, must be a follow pattern or equal to `/^MG[0-9a-fA-F]{32}$/`")

        self._messaging_service_sid = messaging_service_sid

    @property
    def sid(self):
        """Gets the sid of this NotifyV1Service.

        The unique string that we created to identify the Service resource.

        :return: The sid of this NotifyV1Service.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this NotifyV1Service.

        The unique string that we created to identify the Service resource.

        :param sid: The sid of this NotifyV1Service.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def url(self):
        """Gets the url of this NotifyV1Service.

        The absolute URL of the Service resource.

        :return: The url of this NotifyV1Service.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this NotifyV1Service.

        The absolute URL of the Service resource.

        :param url: The url of this NotifyV1Service.
        :type url: str
        """

        self._url = url
