/*
 * Twilio - Notify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NotificationEnumPriority;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * NotifyV1ServiceNotification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:21.983430-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NotifyV1ServiceNotification {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_ALEXA = "alexa";
  @SerializedName(SERIALIZED_NAME_ALEXA)
  private Object alexa = null;

  public static final String SERIALIZED_NAME_APN = "apn";
  @SerializedName(SERIALIZED_NAME_APN)
  private Object apn = null;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Object data = null;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_FACEBOOK_MESSENGER = "facebook_messenger";
  @SerializedName(SERIALIZED_NAME_FACEBOOK_MESSENGER)
  private Object facebookMessenger = null;

  public static final String SERIALIZED_NAME_FCM = "fcm";
  @SerializedName(SERIALIZED_NAME_FCM)
  private Object fcm = null;

  public static final String SERIALIZED_NAME_GCM = "gcm";
  @SerializedName(SERIALIZED_NAME_GCM)
  private Object gcm = null;

  public static final String SERIALIZED_NAME_IDENTITIES = "identities";
  @SerializedName(SERIALIZED_NAME_IDENTITIES)
  private List<String> identities;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private NotificationEnumPriority priority;

  public static final String SERIALIZED_NAME_SEGMENTS = "segments";
  @SerializedName(SERIALIZED_NAME_SEGMENTS)
  private List<String> segments;

  public static final String SERIALIZED_NAME_SERVICE_SID = "service_sid";
  @SerializedName(SERIALIZED_NAME_SERVICE_SID)
  private String serviceSid;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_SMS = "sms";
  @SerializedName(SERIALIZED_NAME_SMS)
  private Object sms = null;

  public static final String SERIALIZED_NAME_SOUND = "sound";
  @SerializedName(SERIALIZED_NAME_SOUND)
  private String sound;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TTL = "ttl";
  @SerializedName(SERIALIZED_NAME_TTL)
  private Integer ttl;

  public NotifyV1ServiceNotification() {
  }

  public NotifyV1ServiceNotification accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Notification resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public NotifyV1ServiceNotification action(String action) {
    this.action = action;
    return this;
  }

  /**
   * The actions to display for the notification. For APNS, translates to the &#x60;aps.category&#x60; value. For GCM, translates to the &#x60;data.twi_action&#x60; value. For SMS, this parameter is not supported and is omitted from deliveries to those channels.
   * @return action
   */
  @javax.annotation.Nullable
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }


  public NotifyV1ServiceNotification alexa(Object alexa) {
    this.alexa = alexa;
    return this;
  }

  /**
   * Deprecated.
   * @return alexa
   */
  @javax.annotation.Nullable
  public Object getAlexa() {
    return alexa;
  }

  public void setAlexa(Object alexa) {
    this.alexa = alexa;
  }


  public NotifyV1ServiceNotification apn(Object apn) {
    this.apn = apn;
    return this;
  }

  /**
   * The APNS-specific payload that overrides corresponding attributes in the generic payload for APNS Bindings. This property maps to the APNS &#x60;Payload&#x60; item, therefore the &#x60;aps&#x60; key must be used to change standard attributes. Adds custom key-value pairs to the root of the dictionary. See the [APNS documentation](https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html) for more details. We reserve keys that start with &#x60;twi_&#x60; for future use. Custom keys that start with &#x60;twi_&#x60; are not allowed.
   * @return apn
   */
  @javax.annotation.Nullable
  public Object getApn() {
    return apn;
  }

  public void setApn(Object apn) {
    this.apn = apn;
  }


  public NotifyV1ServiceNotification body(String body) {
    this.body = body;
    return this;
  }

  /**
   * The notification text. For FCM and GCM, translates to &#x60;data.twi_body&#x60;. For APNS, translates to &#x60;aps.alert.body&#x60;. For SMS, translates to &#x60;body&#x60;. SMS requires either this &#x60;body&#x60; value, or &#x60;media_urls&#x60; attribute defined in the &#x60;sms&#x60; parameter of the notification.
   * @return body
   */
  @javax.annotation.Nullable
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }


  public NotifyV1ServiceNotification data(Object data) {
    this.data = data;
    return this;
  }

  /**
   * The custom key-value pairs of the notification&#39;s payload. For FCM and GCM, this value translates to &#x60;data&#x60; in the FCM and GCM payloads. FCM and GCM [reserve certain keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref) that cannot be used in those channels. For APNS, attributes of &#x60;data&#x60; are inserted into the APNS payload as custom properties outside of the &#x60;aps&#x60; dictionary. In all channels, we reserve keys that start with &#x60;twi_&#x60; for future use. Custom keys that start with &#x60;twi_&#x60; are not allowed and are rejected as 400 Bad request with no delivery attempted. For SMS, this parameter is not supported and is omitted from deliveries to those channels.
   * @return data
   */
  @javax.annotation.Nullable
  public Object getData() {
    return data;
  }

  public void setData(Object data) {
    this.data = data;
  }


  public NotifyV1ServiceNotification dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public NotifyV1ServiceNotification facebookMessenger(Object facebookMessenger) {
    this.facebookMessenger = facebookMessenger;
    return this;
  }

  /**
   * Deprecated.
   * @return facebookMessenger
   */
  @javax.annotation.Nullable
  public Object getFacebookMessenger() {
    return facebookMessenger;
  }

  public void setFacebookMessenger(Object facebookMessenger) {
    this.facebookMessenger = facebookMessenger;
  }


  public NotifyV1ServiceNotification fcm(Object fcm) {
    this.fcm = fcm;
    return this;
  }

  /**
   * The FCM-specific payload that overrides corresponding attributes in the generic payload for FCM Bindings. This property maps to the root JSON dictionary. See the [FCM documentation](https://firebase.google.com/docs/cloud-messaging/http-server-ref#downstream) for more details. Target parameters &#x60;to&#x60;, &#x60;registration_ids&#x60;, &#x60;condition&#x60;, and &#x60;notification_key&#x60; are not allowed in this parameter. We reserve keys that start with &#x60;twi_&#x60; for future use. Custom keys that start with &#x60;twi_&#x60; are not allowed. FCM also [reserves certain keys](https://firebase.google.com/docs/cloud-messaging/http-server-ref), which cannot be used in that channel.
   * @return fcm
   */
  @javax.annotation.Nullable
  public Object getFcm() {
    return fcm;
  }

  public void setFcm(Object fcm) {
    this.fcm = fcm;
  }


  public NotifyV1ServiceNotification gcm(Object gcm) {
    this.gcm = gcm;
    return this;
  }

  /**
   * The GCM-specific payload that overrides corresponding attributes in the generic payload for GCM Bindings.  This property maps to the root JSON dictionary. Target parameters &#x60;to&#x60;, &#x60;registration_ids&#x60;, and &#x60;notification_key&#x60; are not allowed. We reserve keys that start with &#x60;twi_&#x60; for future use. Custom keys that start with &#x60;twi_&#x60; are not allowed.
   * @return gcm
   */
  @javax.annotation.Nullable
  public Object getGcm() {
    return gcm;
  }

  public void setGcm(Object gcm) {
    this.gcm = gcm;
  }


  public NotifyV1ServiceNotification identities(List<String> identities) {
    this.identities = identities;
    return this;
  }

  public NotifyV1ServiceNotification addIdentitiesItem(String identitiesItem) {
    if (this.identities == null) {
      this.identities = new ArrayList<>();
    }
    this.identities.add(identitiesItem);
    return this;
  }

  /**
   * The list of &#x60;identity&#x60; values of the Users to notify. We will attempt to deliver notifications only to Bindings with an identity in this list.
   * @return identities
   */
  @javax.annotation.Nullable
  public List<String> getIdentities() {
    return identities;
  }

  public void setIdentities(List<String> identities) {
    this.identities = identities;
  }


  public NotifyV1ServiceNotification priority(NotificationEnumPriority priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Get priority
   * @return priority
   */
  @javax.annotation.Nullable
  public NotificationEnumPriority getPriority() {
    return priority;
  }

  public void setPriority(NotificationEnumPriority priority) {
    this.priority = priority;
  }


  public NotifyV1ServiceNotification segments(List<String> segments) {
    this.segments = segments;
    return this;
  }

  public NotifyV1ServiceNotification addSegmentsItem(String segmentsItem) {
    if (this.segments == null) {
      this.segments = new ArrayList<>();
    }
    this.segments.add(segmentsItem);
    return this;
  }

  /**
   * The list of Segments to notify. The [Segment](https://www.twilio.com/docs/notify/api/segment-resource) resource is deprecated. Use the &#x60;tags&#x60; property, instead.
   * @return segments
   */
  @javax.annotation.Nullable
  public List<String> getSegments() {
    return segments;
  }

  public void setSegments(List<String> segments) {
    this.segments = segments;
  }


  public NotifyV1ServiceNotification serviceSid(String serviceSid) {
    this.serviceSid = serviceSid;
    return this;
  }

  /**
   * The SID of the [Service](https://www.twilio.com/docs/notify/api/service-resource) the resource is associated with.
   * @return serviceSid
   */
  @javax.annotation.Nullable
  public String getServiceSid() {
    return serviceSid;
  }

  public void setServiceSid(String serviceSid) {
    this.serviceSid = serviceSid;
  }


  public NotifyV1ServiceNotification sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Notification resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public NotifyV1ServiceNotification sms(Object sms) {
    this.sms = sms;
    return this;
  }

  /**
   * The SMS-specific payload that overrides corresponding attributes in the generic payload for SMS Bindings.  Each attribute in this value maps to the corresponding &#x60;form&#x60; parameter of the Twilio [Message](https://www.twilio.com/docs/sms/api/message-resource) resource.  These parameters of the Message resource are supported in snake case format: &#x60;body&#x60;, &#x60;media_urls&#x60;, &#x60;status_callback&#x60;, and &#x60;max_price&#x60;.  The &#x60;status_callback&#x60; parameter overrides the corresponding parameter in the messaging service, if configured. The &#x60;media_urls&#x60; property expects a JSON array.
   * @return sms
   */
  @javax.annotation.Nullable
  public Object getSms() {
    return sms;
  }

  public void setSms(Object sms) {
    this.sms = sms;
  }


  public NotifyV1ServiceNotification sound(String sound) {
    this.sound = sound;
    return this;
  }

  /**
   * The name of the sound to be played for the notification. For FCM and GCM, this Translates to &#x60;data.twi_sound&#x60;.  For APNS, this translates to &#x60;aps.sound&#x60;.  SMS does not support this property.
   * @return sound
   */
  @javax.annotation.Nullable
  public String getSound() {
    return sound;
  }

  public void setSound(String sound) {
    this.sound = sound;
  }


  public NotifyV1ServiceNotification tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public NotifyV1ServiceNotification addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * The tags that select the Bindings to notify. Notifications will be attempted only to Bindings that have all of the tags listed in this property.
   * @return tags
   */
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public NotifyV1ServiceNotification title(String title) {
    this.title = title;
    return this;
  }

  /**
   * The notification title. For FCM and GCM, this translates to the &#x60;data.twi_title&#x60; value. For APNS, this translates to the &#x60;aps.alert.title&#x60; value. SMS does not support this property. This field is not visible on iOS phones and tablets but appears on Apple Watch and Android devices.
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public NotifyV1ServiceNotification ttl(Integer ttl) {
    this.ttl = ttl;
    return this;
  }

  /**
   * How long, in seconds, the notification is valid. Can be an integer between 0 and 2,419,200, which is 4 weeks, the default and the maximum supported time to live (TTL). Delivery should be attempted if the device is offline until the TTL elapses. Zero means that the notification delivery is attempted immediately, only once, and is not stored for future delivery. SMS does not support this property.
   * @return ttl
   */
  @javax.annotation.Nullable
  public Integer getTtl() {
    return ttl;
  }

  public void setTtl(Integer ttl) {
    this.ttl = ttl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotifyV1ServiceNotification notifyV1ServiceNotification = (NotifyV1ServiceNotification) o;
    return Objects.equals(this.accountSid, notifyV1ServiceNotification.accountSid) &&
        Objects.equals(this.action, notifyV1ServiceNotification.action) &&
        Objects.equals(this.alexa, notifyV1ServiceNotification.alexa) &&
        Objects.equals(this.apn, notifyV1ServiceNotification.apn) &&
        Objects.equals(this.body, notifyV1ServiceNotification.body) &&
        Objects.equals(this.data, notifyV1ServiceNotification.data) &&
        Objects.equals(this.dateCreated, notifyV1ServiceNotification.dateCreated) &&
        Objects.equals(this.facebookMessenger, notifyV1ServiceNotification.facebookMessenger) &&
        Objects.equals(this.fcm, notifyV1ServiceNotification.fcm) &&
        Objects.equals(this.gcm, notifyV1ServiceNotification.gcm) &&
        Objects.equals(this.identities, notifyV1ServiceNotification.identities) &&
        Objects.equals(this.priority, notifyV1ServiceNotification.priority) &&
        Objects.equals(this.segments, notifyV1ServiceNotification.segments) &&
        Objects.equals(this.serviceSid, notifyV1ServiceNotification.serviceSid) &&
        Objects.equals(this.sid, notifyV1ServiceNotification.sid) &&
        Objects.equals(this.sms, notifyV1ServiceNotification.sms) &&
        Objects.equals(this.sound, notifyV1ServiceNotification.sound) &&
        Objects.equals(this.tags, notifyV1ServiceNotification.tags) &&
        Objects.equals(this.title, notifyV1ServiceNotification.title) &&
        Objects.equals(this.ttl, notifyV1ServiceNotification.ttl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, action, alexa, apn, body, data, dateCreated, facebookMessenger, fcm, gcm, identities, priority, segments, serviceSid, sid, sms, sound, tags, title, ttl);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotifyV1ServiceNotification {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    alexa: ").append(toIndentedString(alexa)).append("\n");
    sb.append("    apn: ").append(toIndentedString(apn)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    facebookMessenger: ").append(toIndentedString(facebookMessenger)).append("\n");
    sb.append("    fcm: ").append(toIndentedString(fcm)).append("\n");
    sb.append("    gcm: ").append(toIndentedString(gcm)).append("\n");
    sb.append("    identities: ").append(toIndentedString(identities)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    segments: ").append(toIndentedString(segments)).append("\n");
    sb.append("    serviceSid: ").append(toIndentedString(serviceSid)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    sms: ").append(toIndentedString(sms)).append("\n");
    sb.append("    sound: ").append(toIndentedString(sound)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("action");
    openapiFields.add("alexa");
    openapiFields.add("apn");
    openapiFields.add("body");
    openapiFields.add("data");
    openapiFields.add("date_created");
    openapiFields.add("facebook_messenger");
    openapiFields.add("fcm");
    openapiFields.add("gcm");
    openapiFields.add("identities");
    openapiFields.add("priority");
    openapiFields.add("segments");
    openapiFields.add("service_sid");
    openapiFields.add("sid");
    openapiFields.add("sms");
    openapiFields.add("sound");
    openapiFields.add("tags");
    openapiFields.add("title");
    openapiFields.add("ttl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NotifyV1ServiceNotification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NotifyV1ServiceNotification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NotifyV1ServiceNotification is not found in the empty JSON string", NotifyV1ServiceNotification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NotifyV1ServiceNotification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NotifyV1ServiceNotification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("action") != null && !jsonObj.get("action").isJsonNull()) && !jsonObj.get("action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("action").toString()));
      }
      if ((jsonObj.get("body") != null && !jsonObj.get("body").isJsonNull()) && !jsonObj.get("body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("identities") != null && !jsonObj.get("identities").isJsonNull() && !jsonObj.get("identities").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `identities` to be an array in the JSON string but got `%s`", jsonObj.get("identities").toString()));
      }
      if ((jsonObj.get("priority") != null && !jsonObj.get("priority").isJsonNull()) && !jsonObj.get("priority").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priority` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priority").toString()));
      }
      // validate the optional field `priority`
      if (jsonObj.get("priority") != null && !jsonObj.get("priority").isJsonNull()) {
        NotificationEnumPriority.validateJsonElement(jsonObj.get("priority"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("segments") != null && !jsonObj.get("segments").isJsonNull() && !jsonObj.get("segments").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `segments` to be an array in the JSON string but got `%s`", jsonObj.get("segments").toString()));
      }
      if ((jsonObj.get("service_sid") != null && !jsonObj.get("service_sid").isJsonNull()) && !jsonObj.get("service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("sound") != null && !jsonObj.get("sound").isJsonNull()) && !jsonObj.get("sound").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sound` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sound").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NotifyV1ServiceNotification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NotifyV1ServiceNotification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NotifyV1ServiceNotification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NotifyV1ServiceNotification.class));

       return (TypeAdapter<T>) new TypeAdapter<NotifyV1ServiceNotification>() {
           @Override
           public void write(JsonWriter out, NotifyV1ServiceNotification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NotifyV1ServiceNotification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NotifyV1ServiceNotification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NotifyV1ServiceNotification
   * @throws IOException if the JSON string is invalid with respect to NotifyV1ServiceNotification
   */
  public static NotifyV1ServiceNotification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NotifyV1ServiceNotification.class);
  }

  /**
   * Convert an instance of NotifyV1ServiceNotification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

