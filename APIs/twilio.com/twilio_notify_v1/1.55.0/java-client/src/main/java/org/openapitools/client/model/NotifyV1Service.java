/*
 * Twilio - Notify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * NotifyV1Service
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:21.983430-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NotifyV1Service {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ALEXA_SKILL_ID = "alexa_skill_id";
  @SerializedName(SERIALIZED_NAME_ALEXA_SKILL_ID)
  private String alexaSkillId;

  public static final String SERIALIZED_NAME_APN_CREDENTIAL_SID = "apn_credential_sid";
  @SerializedName(SERIALIZED_NAME_APN_CREDENTIAL_SID)
  private String apnCredentialSid;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_DEFAULT_ALEXA_NOTIFICATION_PROTOCOL_VERSION = "default_alexa_notification_protocol_version";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ALEXA_NOTIFICATION_PROTOCOL_VERSION)
  private String defaultAlexaNotificationProtocolVersion;

  public static final String SERIALIZED_NAME_DEFAULT_APN_NOTIFICATION_PROTOCOL_VERSION = "default_apn_notification_protocol_version";
  @SerializedName(SERIALIZED_NAME_DEFAULT_APN_NOTIFICATION_PROTOCOL_VERSION)
  private String defaultApnNotificationProtocolVersion;

  public static final String SERIALIZED_NAME_DEFAULT_FCM_NOTIFICATION_PROTOCOL_VERSION = "default_fcm_notification_protocol_version";
  @SerializedName(SERIALIZED_NAME_DEFAULT_FCM_NOTIFICATION_PROTOCOL_VERSION)
  private String defaultFcmNotificationProtocolVersion;

  public static final String SERIALIZED_NAME_DEFAULT_GCM_NOTIFICATION_PROTOCOL_VERSION = "default_gcm_notification_protocol_version";
  @SerializedName(SERIALIZED_NAME_DEFAULT_GCM_NOTIFICATION_PROTOCOL_VERSION)
  private String defaultGcmNotificationProtocolVersion;

  public static final String SERIALIZED_NAME_DELIVERY_CALLBACK_ENABLED = "delivery_callback_enabled";
  @SerializedName(SERIALIZED_NAME_DELIVERY_CALLBACK_ENABLED)
  private Boolean deliveryCallbackEnabled;

  public static final String SERIALIZED_NAME_DELIVERY_CALLBACK_URL = "delivery_callback_url";
  @SerializedName(SERIALIZED_NAME_DELIVERY_CALLBACK_URL)
  private String deliveryCallbackUrl;

  public static final String SERIALIZED_NAME_FACEBOOK_MESSENGER_PAGE_ID = "facebook_messenger_page_id";
  @SerializedName(SERIALIZED_NAME_FACEBOOK_MESSENGER_PAGE_ID)
  private String facebookMessengerPageId;

  public static final String SERIALIZED_NAME_FCM_CREDENTIAL_SID = "fcm_credential_sid";
  @SerializedName(SERIALIZED_NAME_FCM_CREDENTIAL_SID)
  private String fcmCredentialSid;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_GCM_CREDENTIAL_SID = "gcm_credential_sid";
  @SerializedName(SERIALIZED_NAME_GCM_CREDENTIAL_SID)
  private String gcmCredentialSid;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_LOG_ENABLED = "log_enabled";
  @SerializedName(SERIALIZED_NAME_LOG_ENABLED)
  private Boolean logEnabled;

  public static final String SERIALIZED_NAME_MESSAGING_SERVICE_SID = "messaging_service_sid";
  @SerializedName(SERIALIZED_NAME_MESSAGING_SERVICE_SID)
  private String messagingServiceSid;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public NotifyV1Service() {
  }

  public NotifyV1Service accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public NotifyV1Service alexaSkillId(String alexaSkillId) {
    this.alexaSkillId = alexaSkillId;
    return this;
  }

  /**
   * Deprecated.
   * @return alexaSkillId
   */
  @javax.annotation.Nullable
  public String getAlexaSkillId() {
    return alexaSkillId;
  }

  public void setAlexaSkillId(String alexaSkillId) {
    this.alexaSkillId = alexaSkillId;
  }


  public NotifyV1Service apnCredentialSid(String apnCredentialSid) {
    this.apnCredentialSid = apnCredentialSid;
    return this;
  }

  /**
   * The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for APN Bindings.
   * @return apnCredentialSid
   */
  @javax.annotation.Nullable
  public String getApnCredentialSid() {
    return apnCredentialSid;
  }

  public void setApnCredentialSid(String apnCredentialSid) {
    this.apnCredentialSid = apnCredentialSid;
  }


  public NotifyV1Service dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public NotifyV1Service dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public NotifyV1Service defaultAlexaNotificationProtocolVersion(String defaultAlexaNotificationProtocolVersion) {
    this.defaultAlexaNotificationProtocolVersion = defaultAlexaNotificationProtocolVersion;
    return this;
  }

  /**
   * Deprecated.
   * @return defaultAlexaNotificationProtocolVersion
   */
  @javax.annotation.Nullable
  public String getDefaultAlexaNotificationProtocolVersion() {
    return defaultAlexaNotificationProtocolVersion;
  }

  public void setDefaultAlexaNotificationProtocolVersion(String defaultAlexaNotificationProtocolVersion) {
    this.defaultAlexaNotificationProtocolVersion = defaultAlexaNotificationProtocolVersion;
  }


  public NotifyV1Service defaultApnNotificationProtocolVersion(String defaultApnNotificationProtocolVersion) {
    this.defaultApnNotificationProtocolVersion = defaultApnNotificationProtocolVersion;
    return this;
  }

  /**
   * The protocol version to use for sending APNS notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.
   * @return defaultApnNotificationProtocolVersion
   */
  @javax.annotation.Nullable
  public String getDefaultApnNotificationProtocolVersion() {
    return defaultApnNotificationProtocolVersion;
  }

  public void setDefaultApnNotificationProtocolVersion(String defaultApnNotificationProtocolVersion) {
    this.defaultApnNotificationProtocolVersion = defaultApnNotificationProtocolVersion;
  }


  public NotifyV1Service defaultFcmNotificationProtocolVersion(String defaultFcmNotificationProtocolVersion) {
    this.defaultFcmNotificationProtocolVersion = defaultFcmNotificationProtocolVersion;
    return this;
  }

  /**
   * The protocol version to use for sending FCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.
   * @return defaultFcmNotificationProtocolVersion
   */
  @javax.annotation.Nullable
  public String getDefaultFcmNotificationProtocolVersion() {
    return defaultFcmNotificationProtocolVersion;
  }

  public void setDefaultFcmNotificationProtocolVersion(String defaultFcmNotificationProtocolVersion) {
    this.defaultFcmNotificationProtocolVersion = defaultFcmNotificationProtocolVersion;
  }


  public NotifyV1Service defaultGcmNotificationProtocolVersion(String defaultGcmNotificationProtocolVersion) {
    this.defaultGcmNotificationProtocolVersion = defaultGcmNotificationProtocolVersion;
    return this;
  }

  /**
   * The protocol version to use for sending GCM notifications. Can be overridden on a Binding by Binding basis when creating a [Binding](https://www.twilio.com/docs/notify/api/binding-resource) resource.
   * @return defaultGcmNotificationProtocolVersion
   */
  @javax.annotation.Nullable
  public String getDefaultGcmNotificationProtocolVersion() {
    return defaultGcmNotificationProtocolVersion;
  }

  public void setDefaultGcmNotificationProtocolVersion(String defaultGcmNotificationProtocolVersion) {
    this.defaultGcmNotificationProtocolVersion = defaultGcmNotificationProtocolVersion;
  }


  public NotifyV1Service deliveryCallbackEnabled(Boolean deliveryCallbackEnabled) {
    this.deliveryCallbackEnabled = deliveryCallbackEnabled;
    return this;
  }

  /**
   * Callback configuration that enables delivery callbacks, default false
   * @return deliveryCallbackEnabled
   */
  @javax.annotation.Nullable
  public Boolean getDeliveryCallbackEnabled() {
    return deliveryCallbackEnabled;
  }

  public void setDeliveryCallbackEnabled(Boolean deliveryCallbackEnabled) {
    this.deliveryCallbackEnabled = deliveryCallbackEnabled;
  }


  public NotifyV1Service deliveryCallbackUrl(String deliveryCallbackUrl) {
    this.deliveryCallbackUrl = deliveryCallbackUrl;
    return this;
  }

  /**
   * URL to send delivery status callback.
   * @return deliveryCallbackUrl
   */
  @javax.annotation.Nullable
  public String getDeliveryCallbackUrl() {
    return deliveryCallbackUrl;
  }

  public void setDeliveryCallbackUrl(String deliveryCallbackUrl) {
    this.deliveryCallbackUrl = deliveryCallbackUrl;
  }


  public NotifyV1Service facebookMessengerPageId(String facebookMessengerPageId) {
    this.facebookMessengerPageId = facebookMessengerPageId;
    return this;
  }

  /**
   * Deprecated.
   * @return facebookMessengerPageId
   */
  @javax.annotation.Nullable
  public String getFacebookMessengerPageId() {
    return facebookMessengerPageId;
  }

  public void setFacebookMessengerPageId(String facebookMessengerPageId) {
    this.facebookMessengerPageId = facebookMessengerPageId;
  }


  public NotifyV1Service fcmCredentialSid(String fcmCredentialSid) {
    this.fcmCredentialSid = fcmCredentialSid;
    return this;
  }

  /**
   * The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for FCM Bindings.
   * @return fcmCredentialSid
   */
  @javax.annotation.Nullable
  public String getFcmCredentialSid() {
    return fcmCredentialSid;
  }

  public void setFcmCredentialSid(String fcmCredentialSid) {
    this.fcmCredentialSid = fcmCredentialSid;
  }


  public NotifyV1Service friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The string that you assigned to describe the resource.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public NotifyV1Service gcmCredentialSid(String gcmCredentialSid) {
    this.gcmCredentialSid = gcmCredentialSid;
    return this;
  }

  /**
   * The SID of the [Credential](https://www.twilio.com/docs/notify/api/credential-resource) to use for GCM Bindings.
   * @return gcmCredentialSid
   */
  @javax.annotation.Nullable
  public String getGcmCredentialSid() {
    return gcmCredentialSid;
  }

  public void setGcmCredentialSid(String gcmCredentialSid) {
    this.gcmCredentialSid = gcmCredentialSid;
  }


  public NotifyV1Service links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * The URLs of the Binding, Notification, Segment, and User resources related to the service.
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public NotifyV1Service logEnabled(Boolean logEnabled) {
    this.logEnabled = logEnabled;
    return this;
  }

  /**
   * Whether to log notifications. Can be: &#x60;true&#x60; or &#x60;false&#x60; and the default is &#x60;true&#x60;.
   * @return logEnabled
   */
  @javax.annotation.Nullable
  public Boolean getLogEnabled() {
    return logEnabled;
  }

  public void setLogEnabled(Boolean logEnabled) {
    this.logEnabled = logEnabled;
  }


  public NotifyV1Service messagingServiceSid(String messagingServiceSid) {
    this.messagingServiceSid = messagingServiceSid;
    return this;
  }

  /**
   * The SID of the [Messaging Service](https://www.twilio.com/docs/sms/quickstart#messaging-services) to use for SMS Bindings. In order to send SMS notifications this parameter has to be set.
   * @return messagingServiceSid
   */
  @javax.annotation.Nullable
  public String getMessagingServiceSid() {
    return messagingServiceSid;
  }

  public void setMessagingServiceSid(String messagingServiceSid) {
    this.messagingServiceSid = messagingServiceSid;
  }


  public NotifyV1Service sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Service resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public NotifyV1Service url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Service resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotifyV1Service notifyV1Service = (NotifyV1Service) o;
    return Objects.equals(this.accountSid, notifyV1Service.accountSid) &&
        Objects.equals(this.alexaSkillId, notifyV1Service.alexaSkillId) &&
        Objects.equals(this.apnCredentialSid, notifyV1Service.apnCredentialSid) &&
        Objects.equals(this.dateCreated, notifyV1Service.dateCreated) &&
        Objects.equals(this.dateUpdated, notifyV1Service.dateUpdated) &&
        Objects.equals(this.defaultAlexaNotificationProtocolVersion, notifyV1Service.defaultAlexaNotificationProtocolVersion) &&
        Objects.equals(this.defaultApnNotificationProtocolVersion, notifyV1Service.defaultApnNotificationProtocolVersion) &&
        Objects.equals(this.defaultFcmNotificationProtocolVersion, notifyV1Service.defaultFcmNotificationProtocolVersion) &&
        Objects.equals(this.defaultGcmNotificationProtocolVersion, notifyV1Service.defaultGcmNotificationProtocolVersion) &&
        Objects.equals(this.deliveryCallbackEnabled, notifyV1Service.deliveryCallbackEnabled) &&
        Objects.equals(this.deliveryCallbackUrl, notifyV1Service.deliveryCallbackUrl) &&
        Objects.equals(this.facebookMessengerPageId, notifyV1Service.facebookMessengerPageId) &&
        Objects.equals(this.fcmCredentialSid, notifyV1Service.fcmCredentialSid) &&
        Objects.equals(this.friendlyName, notifyV1Service.friendlyName) &&
        Objects.equals(this.gcmCredentialSid, notifyV1Service.gcmCredentialSid) &&
        Objects.equals(this.links, notifyV1Service.links) &&
        Objects.equals(this.logEnabled, notifyV1Service.logEnabled) &&
        Objects.equals(this.messagingServiceSid, notifyV1Service.messagingServiceSid) &&
        Objects.equals(this.sid, notifyV1Service.sid) &&
        Objects.equals(this.url, notifyV1Service.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, alexaSkillId, apnCredentialSid, dateCreated, dateUpdated, defaultAlexaNotificationProtocolVersion, defaultApnNotificationProtocolVersion, defaultFcmNotificationProtocolVersion, defaultGcmNotificationProtocolVersion, deliveryCallbackEnabled, deliveryCallbackUrl, facebookMessengerPageId, fcmCredentialSid, friendlyName, gcmCredentialSid, links, logEnabled, messagingServiceSid, sid, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotifyV1Service {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    alexaSkillId: ").append(toIndentedString(alexaSkillId)).append("\n");
    sb.append("    apnCredentialSid: ").append(toIndentedString(apnCredentialSid)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    defaultAlexaNotificationProtocolVersion: ").append(toIndentedString(defaultAlexaNotificationProtocolVersion)).append("\n");
    sb.append("    defaultApnNotificationProtocolVersion: ").append(toIndentedString(defaultApnNotificationProtocolVersion)).append("\n");
    sb.append("    defaultFcmNotificationProtocolVersion: ").append(toIndentedString(defaultFcmNotificationProtocolVersion)).append("\n");
    sb.append("    defaultGcmNotificationProtocolVersion: ").append(toIndentedString(defaultGcmNotificationProtocolVersion)).append("\n");
    sb.append("    deliveryCallbackEnabled: ").append(toIndentedString(deliveryCallbackEnabled)).append("\n");
    sb.append("    deliveryCallbackUrl: ").append(toIndentedString(deliveryCallbackUrl)).append("\n");
    sb.append("    facebookMessengerPageId: ").append(toIndentedString(facebookMessengerPageId)).append("\n");
    sb.append("    fcmCredentialSid: ").append(toIndentedString(fcmCredentialSid)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    gcmCredentialSid: ").append(toIndentedString(gcmCredentialSid)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    logEnabled: ").append(toIndentedString(logEnabled)).append("\n");
    sb.append("    messagingServiceSid: ").append(toIndentedString(messagingServiceSid)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("alexa_skill_id");
    openapiFields.add("apn_credential_sid");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("default_alexa_notification_protocol_version");
    openapiFields.add("default_apn_notification_protocol_version");
    openapiFields.add("default_fcm_notification_protocol_version");
    openapiFields.add("default_gcm_notification_protocol_version");
    openapiFields.add("delivery_callback_enabled");
    openapiFields.add("delivery_callback_url");
    openapiFields.add("facebook_messenger_page_id");
    openapiFields.add("fcm_credential_sid");
    openapiFields.add("friendly_name");
    openapiFields.add("gcm_credential_sid");
    openapiFields.add("links");
    openapiFields.add("log_enabled");
    openapiFields.add("messaging_service_sid");
    openapiFields.add("sid");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NotifyV1Service
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NotifyV1Service.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NotifyV1Service is not found in the empty JSON string", NotifyV1Service.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NotifyV1Service.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NotifyV1Service` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("alexa_skill_id") != null && !jsonObj.get("alexa_skill_id").isJsonNull()) && !jsonObj.get("alexa_skill_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alexa_skill_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alexa_skill_id").toString()));
      }
      if ((jsonObj.get("apn_credential_sid") != null && !jsonObj.get("apn_credential_sid").isJsonNull()) && !jsonObj.get("apn_credential_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apn_credential_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apn_credential_sid").toString()));
      }
      if ((jsonObj.get("default_alexa_notification_protocol_version") != null && !jsonObj.get("default_alexa_notification_protocol_version").isJsonNull()) && !jsonObj.get("default_alexa_notification_protocol_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_alexa_notification_protocol_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_alexa_notification_protocol_version").toString()));
      }
      if ((jsonObj.get("default_apn_notification_protocol_version") != null && !jsonObj.get("default_apn_notification_protocol_version").isJsonNull()) && !jsonObj.get("default_apn_notification_protocol_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_apn_notification_protocol_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_apn_notification_protocol_version").toString()));
      }
      if ((jsonObj.get("default_fcm_notification_protocol_version") != null && !jsonObj.get("default_fcm_notification_protocol_version").isJsonNull()) && !jsonObj.get("default_fcm_notification_protocol_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_fcm_notification_protocol_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_fcm_notification_protocol_version").toString()));
      }
      if ((jsonObj.get("default_gcm_notification_protocol_version") != null && !jsonObj.get("default_gcm_notification_protocol_version").isJsonNull()) && !jsonObj.get("default_gcm_notification_protocol_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_gcm_notification_protocol_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_gcm_notification_protocol_version").toString()));
      }
      if ((jsonObj.get("delivery_callback_url") != null && !jsonObj.get("delivery_callback_url").isJsonNull()) && !jsonObj.get("delivery_callback_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delivery_callback_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delivery_callback_url").toString()));
      }
      if ((jsonObj.get("facebook_messenger_page_id") != null && !jsonObj.get("facebook_messenger_page_id").isJsonNull()) && !jsonObj.get("facebook_messenger_page_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facebook_messenger_page_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facebook_messenger_page_id").toString()));
      }
      if ((jsonObj.get("fcm_credential_sid") != null && !jsonObj.get("fcm_credential_sid").isJsonNull()) && !jsonObj.get("fcm_credential_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fcm_credential_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fcm_credential_sid").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("gcm_credential_sid") != null && !jsonObj.get("gcm_credential_sid").isJsonNull()) && !jsonObj.get("gcm_credential_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gcm_credential_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gcm_credential_sid").toString()));
      }
      if ((jsonObj.get("messaging_service_sid") != null && !jsonObj.get("messaging_service_sid").isJsonNull()) && !jsonObj.get("messaging_service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messaging_service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messaging_service_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NotifyV1Service.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NotifyV1Service' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NotifyV1Service> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NotifyV1Service.class));

       return (TypeAdapter<T>) new TypeAdapter<NotifyV1Service>() {
           @Override
           public void write(JsonWriter out, NotifyV1Service value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NotifyV1Service read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NotifyV1Service given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NotifyV1Service
   * @throws IOException if the JSON string is invalid with respect to NotifyV1Service
   */
  public static NotifyV1Service fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NotifyV1Service.class);
  }

  /**
   * Convert an instance of NotifyV1Service to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

