/*
 * Twilio - Notify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListServiceResponse;
import org.openapitools.client.model.NotifyV1Service;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotifyV1ServiceApi
 */
@Disabled
public class NotifyV1ServiceApiTest {

    private final NotifyV1ServiceApi api = new NotifyV1ServiceApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createServiceTest() throws ApiException {
        String alexaSkillId = null;
        String apnCredentialSid = null;
        String defaultAlexaNotificationProtocolVersion = null;
        String defaultApnNotificationProtocolVersion = null;
        String defaultFcmNotificationProtocolVersion = null;
        String defaultGcmNotificationProtocolVersion = null;
        Boolean deliveryCallbackEnabled = null;
        String deliveryCallbackUrl = null;
        String facebookMessengerPageId = null;
        String fcmCredentialSid = null;
        String friendlyName = null;
        String gcmCredentialSid = null;
        Boolean logEnabled = null;
        String messagingServiceSid = null;
        NotifyV1Service response = api.createService(alexaSkillId, apnCredentialSid, defaultAlexaNotificationProtocolVersion, defaultApnNotificationProtocolVersion, defaultFcmNotificationProtocolVersion, defaultGcmNotificationProtocolVersion, deliveryCallbackEnabled, deliveryCallbackUrl, facebookMessengerPageId, fcmCredentialSid, friendlyName, gcmCredentialSid, logEnabled, messagingServiceSid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteServiceTest() throws ApiException {
        String sid = null;
        api.deleteService(sid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchServiceTest() throws ApiException {
        String sid = null;
        NotifyV1Service response = api.fetchService(sid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listServiceTest() throws ApiException {
        String friendlyName = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListServiceResponse response = api.listService(friendlyName, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateServiceTest() throws ApiException {
        String sid = null;
        String alexaSkillId = null;
        String apnCredentialSid = null;
        String defaultAlexaNotificationProtocolVersion = null;
        String defaultApnNotificationProtocolVersion = null;
        String defaultFcmNotificationProtocolVersion = null;
        String defaultGcmNotificationProtocolVersion = null;
        Boolean deliveryCallbackEnabled = null;
        String deliveryCallbackUrl = null;
        String facebookMessengerPageId = null;
        String fcmCredentialSid = null;
        String friendlyName = null;
        String gcmCredentialSid = null;
        Boolean logEnabled = null;
        String messagingServiceSid = null;
        NotifyV1Service response = api.updateService(sid, alexaSkillId, apnCredentialSid, defaultAlexaNotificationProtocolVersion, defaultApnNotificationProtocolVersion, defaultFcmNotificationProtocolVersion, defaultGcmNotificationProtocolVersion, deliveryCallbackEnabled, deliveryCallbackUrl, facebookMessengerPageId, fcmCredentialSid, friendlyName, gcmCredentialSid, logEnabled, messagingServiceSid);
        // TODO: test validations
    }

}
