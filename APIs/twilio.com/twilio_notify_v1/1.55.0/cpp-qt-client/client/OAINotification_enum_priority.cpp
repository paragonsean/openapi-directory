/**
 * Twilio - Notify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINotification_enum_priority.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINotification_enum_priority::OAINotification_enum_priority(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINotification_enum_priority::OAINotification_enum_priority() {
    this->initializeModel();
}

OAINotification_enum_priority::~OAINotification_enum_priority() {}

void OAINotification_enum_priority::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAINotification_enum_priority::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAINotification_enum_priority::fromJson(QString jsonString) {
    
    if ( jsonString.compare("high", Qt::CaseInsensitive) == 0) {
        m_value = eOAINotification_enum_priority::HIGH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("low", Qt::CaseInsensitive) == 0) {
        m_value = eOAINotification_enum_priority::LOW;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAINotification_enum_priority::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAINotification_enum_priority::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAINotification_enum_priority::HIGH:
            val = "high";
            break;
        case eOAINotification_enum_priority::LOW:
            val = "low";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAINotification_enum_priority::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAINotification_enum_priority::eOAINotification_enum_priority OAINotification_enum_priority::getValue() const {
    return m_value;
}

void OAINotification_enum_priority::setValue(const OAINotification_enum_priority::eOAINotification_enum_priority& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAINotification_enum_priority::isSet() const {
    
    return m_value_isSet;
}

bool OAINotification_enum_priority::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
