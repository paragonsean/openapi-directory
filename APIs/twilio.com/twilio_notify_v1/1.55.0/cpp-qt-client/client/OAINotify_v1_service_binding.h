/**
 * Twilio - Notify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotify_v1_service_binding.h
 *
 * 
 */

#ifndef OAINotify_v1_service_binding_H
#define OAINotify_v1_service_binding_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINotify_v1_service_binding : public OAIObject {
public:
    OAINotify_v1_service_binding();
    OAINotify_v1_service_binding(QString json);
    ~OAINotify_v1_service_binding() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getBindingType() const;
    void setBindingType(const QString &binding_type);
    bool is_binding_type_Set() const;
    bool is_binding_type_Valid() const;

    QString getCredentialSid() const;
    void setCredentialSid(const QString &credential_sid);
    bool is_credential_sid_Set() const;
    bool is_credential_sid_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    QString getIdentity() const;
    void setIdentity(const QString &identity);
    bool is_identity_Set() const;
    bool is_identity_Valid() const;

    OAIObject getLinks() const;
    void setLinks(const OAIObject &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getNotificationProtocolVersion() const;
    void setNotificationProtocolVersion(const QString &notification_protocol_version);
    bool is_notification_protocol_version_Set() const;
    bool is_notification_protocol_version_Valid() const;

    QString getServiceSid() const;
    void setServiceSid(const QString &service_sid);
    bool is_service_sid_Set() const;
    bool is_service_sid_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_binding_type;
    bool m_binding_type_isSet;
    bool m_binding_type_isValid;

    QString m_credential_sid;
    bool m_credential_sid_isSet;
    bool m_credential_sid_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    QString m_identity;
    bool m_identity_isSet;
    bool m_identity_isValid;

    OAIObject m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_notification_protocol_version;
    bool m_notification_protocol_version_isSet;
    bool m_notification_protocol_version_isValid;

    QString m_service_sid;
    bool m_service_sid_isSet;
    bool m_service_sid_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotify_v1_service_binding)

#endif // OAINotify_v1_service_binding_H
