/**
 * Twilio - Notify
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotify_v1_service_notification.h
 *
 * 
 */

#ifndef OAINotify_v1_service_notification_H
#define OAINotify_v1_service_notification_H

#include <QJsonObject>

#include "OAINotification_enum_priority.h"
#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINotify_v1_service_notification : public OAIObject {
public:
    OAINotify_v1_service_notification();
    OAINotify_v1_service_notification(QString json);
    ~OAINotify_v1_service_notification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QJsonValue getAlexa() const;
    void setAlexa(const QJsonValue &alexa);
    bool is_alexa_Set() const;
    bool is_alexa_Valid() const;

    QJsonValue getApn() const;
    void setApn(const QJsonValue &apn);
    bool is_apn_Set() const;
    bool is_apn_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QJsonValue getData() const;
    void setData(const QJsonValue &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QJsonValue getFacebookMessenger() const;
    void setFacebookMessenger(const QJsonValue &facebook_messenger);
    bool is_facebook_messenger_Set() const;
    bool is_facebook_messenger_Valid() const;

    QJsonValue getFcm() const;
    void setFcm(const QJsonValue &fcm);
    bool is_fcm_Set() const;
    bool is_fcm_Valid() const;

    QJsonValue getGcm() const;
    void setGcm(const QJsonValue &gcm);
    bool is_gcm_Set() const;
    bool is_gcm_Valid() const;

    QList<QString> getIdentities() const;
    void setIdentities(const QList<QString> &identities);
    bool is_identities_Set() const;
    bool is_identities_Valid() const;

    OAINotification_enum_priority getPriority() const;
    void setPriority(const OAINotification_enum_priority &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QList<QString> getSegments() const;
    void setSegments(const QList<QString> &segments);
    bool is_segments_Set() const;
    bool is_segments_Valid() const;

    QString getServiceSid() const;
    void setServiceSid(const QString &service_sid);
    bool is_service_sid_Set() const;
    bool is_service_sid_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    QJsonValue getSms() const;
    void setSms(const QJsonValue &sms);
    bool is_sms_Set() const;
    bool is_sms_Valid() const;

    QString getSound() const;
    void setSound(const QString &sound);
    bool is_sound_Set() const;
    bool is_sound_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    qint32 getTtl() const;
    void setTtl(const qint32 &ttl);
    bool is_ttl_Set() const;
    bool is_ttl_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QJsonValue m_alexa;
    bool m_alexa_isSet;
    bool m_alexa_isValid;

    QJsonValue m_apn;
    bool m_apn_isSet;
    bool m_apn_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QJsonValue m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QJsonValue m_facebook_messenger;
    bool m_facebook_messenger_isSet;
    bool m_facebook_messenger_isValid;

    QJsonValue m_fcm;
    bool m_fcm_isSet;
    bool m_fcm_isValid;

    QJsonValue m_gcm;
    bool m_gcm_isSet;
    bool m_gcm_isValid;

    QList<QString> m_identities;
    bool m_identities_isSet;
    bool m_identities_isValid;

    OAINotification_enum_priority m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QList<QString> m_segments;
    bool m_segments_isSet;
    bool m_segments_isValid;

    QString m_service_sid;
    bool m_service_sid_isSet;
    bool m_service_sid_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    QJsonValue m_sms;
    bool m_sms_isSet;
    bool m_sms_isValid;

    QString m_sound;
    bool m_sound_isSet;
    bool m_sound_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    qint32 m_ttl;
    bool m_ttl_isSet;
    bool m_ttl_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotify_v1_service_notification)

#endif // OAINotify_v1_service_notification_H
