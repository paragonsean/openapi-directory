# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OauthV1DeviceCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_code: str=None, expires_in: int=None, interval: int=None, user_code: str=None, verification_uri: str=None, verification_uri_complete: str=None):
        """OauthV1DeviceCode - a model defined in OpenAPI

        :param device_code: The device_code of this OauthV1DeviceCode.
        :param expires_in: The expires_in of this OauthV1DeviceCode.
        :param interval: The interval of this OauthV1DeviceCode.
        :param user_code: The user_code of this OauthV1DeviceCode.
        :param verification_uri: The verification_uri of this OauthV1DeviceCode.
        :param verification_uri_complete: The verification_uri_complete of this OauthV1DeviceCode.
        """
        self.openapi_types = {
            'device_code': str,
            'expires_in': int,
            'interval': int,
            'user_code': str,
            'verification_uri': str,
            'verification_uri_complete': str
        }

        self.attribute_map = {
            'device_code': 'device_code',
            'expires_in': 'expires_in',
            'interval': 'interval',
            'user_code': 'user_code',
            'verification_uri': 'verification_uri',
            'verification_uri_complete': 'verification_uri_complete'
        }

        self._device_code = device_code
        self._expires_in = expires_in
        self._interval = interval
        self._user_code = user_code
        self._verification_uri = verification_uri
        self._verification_uri_complete = verification_uri_complete

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OauthV1DeviceCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The oauth.v1.device_code of this OauthV1DeviceCode.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_code(self):
        """Gets the device_code of this OauthV1DeviceCode.

        The device verification code.

        :return: The device_code of this OauthV1DeviceCode.
        :rtype: str
        """
        return self._device_code

    @device_code.setter
    def device_code(self, device_code):
        """Sets the device_code of this OauthV1DeviceCode.

        The device verification code.

        :param device_code: The device_code of this OauthV1DeviceCode.
        :type device_code: str
        """

        self._device_code = device_code

    @property
    def expires_in(self):
        """Gets the expires_in of this OauthV1DeviceCode.

        The expiration time of the device_code and user_code in seconds.

        :return: The expires_in of this OauthV1DeviceCode.
        :rtype: int
        """
        return self._expires_in

    @expires_in.setter
    def expires_in(self, expires_in):
        """Sets the expires_in of this OauthV1DeviceCode.

        The expiration time of the device_code and user_code in seconds.

        :param expires_in: The expires_in of this OauthV1DeviceCode.
        :type expires_in: int
        """

        self._expires_in = expires_in

    @property
    def interval(self):
        """Gets the interval of this OauthV1DeviceCode.

        The minimum amount of time in seconds that the client should wait between polling requests to the token endpoint.

        :return: The interval of this OauthV1DeviceCode.
        :rtype: int
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this OauthV1DeviceCode.

        The minimum amount of time in seconds that the client should wait between polling requests to the token endpoint.

        :param interval: The interval of this OauthV1DeviceCode.
        :type interval: int
        """

        self._interval = interval

    @property
    def user_code(self):
        """Gets the user_code of this OauthV1DeviceCode.

        The verification code which end user uses to verify authorization request.

        :return: The user_code of this OauthV1DeviceCode.
        :rtype: str
        """
        return self._user_code

    @user_code.setter
    def user_code(self, user_code):
        """Sets the user_code of this OauthV1DeviceCode.

        The verification code which end user uses to verify authorization request.

        :param user_code: The user_code of this OauthV1DeviceCode.
        :type user_code: str
        """

        self._user_code = user_code

    @property
    def verification_uri(self):
        """Gets the verification_uri of this OauthV1DeviceCode.

        The URI that the end user visits to verify authorization request.

        :return: The verification_uri of this OauthV1DeviceCode.
        :rtype: str
        """
        return self._verification_uri

    @verification_uri.setter
    def verification_uri(self, verification_uri):
        """Sets the verification_uri of this OauthV1DeviceCode.

        The URI that the end user visits to verify authorization request.

        :param verification_uri: The verification_uri of this OauthV1DeviceCode.
        :type verification_uri: str
        """

        self._verification_uri = verification_uri

    @property
    def verification_uri_complete(self):
        """Gets the verification_uri_complete of this OauthV1DeviceCode.

        The URI with user_code that the end-user alternatively visits to verify authorization request.

        :return: The verification_uri_complete of this OauthV1DeviceCode.
        :rtype: str
        """
        return self._verification_uri_complete

    @verification_uri_complete.setter
    def verification_uri_complete(self, verification_uri_complete):
        """Sets the verification_uri_complete of this OauthV1DeviceCode.

        The URI with user_code that the end-user alternatively visits to verify authorization request.

        :param verification_uri_complete: The verification_uri_complete of this OauthV1DeviceCode.
        :type verification_uri_complete: str
        """

        self._verification_uri_complete = verification_uri_complete
