# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class OauthV1UserInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, first_name: str=None, friendly_name: str=None, last_name: str=None, url: str=None, user_sid: str=None):
        """OauthV1UserInfo - a model defined in OpenAPI

        :param email: The email of this OauthV1UserInfo.
        :param first_name: The first_name of this OauthV1UserInfo.
        :param friendly_name: The friendly_name of this OauthV1UserInfo.
        :param last_name: The last_name of this OauthV1UserInfo.
        :param url: The url of this OauthV1UserInfo.
        :param user_sid: The user_sid of this OauthV1UserInfo.
        """
        self.openapi_types = {
            'email': str,
            'first_name': str,
            'friendly_name': str,
            'last_name': str,
            'url': str,
            'user_sid': str
        }

        self.attribute_map = {
            'email': 'email',
            'first_name': 'first_name',
            'friendly_name': 'friendly_name',
            'last_name': 'last_name',
            'url': 'url',
            'user_sid': 'user_sid'
        }

        self._email = email
        self._first_name = first_name
        self._friendly_name = friendly_name
        self._last_name = last_name
        self._url = url
        self._user_sid = user_sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OauthV1UserInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The oauth.v1.user_info of this OauthV1UserInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this OauthV1UserInfo.

        The end-user's preferred email address.

        :return: The email of this OauthV1UserInfo.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this OauthV1UserInfo.

        The end-user's preferred email address.

        :param email: The email of this OauthV1UserInfo.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this OauthV1UserInfo.

        The first name of the end-user.

        :return: The first_name of this OauthV1UserInfo.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this OauthV1UserInfo.

        The first name of the end-user.

        :param first_name: The first_name of this OauthV1UserInfo.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def friendly_name(self):
        """Gets the friendly_name of this OauthV1UserInfo.

        The friendly name of the end-user.

        :return: The friendly_name of this OauthV1UserInfo.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this OauthV1UserInfo.

        The friendly name of the end-user.

        :param friendly_name: The friendly_name of this OauthV1UserInfo.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def last_name(self):
        """Gets the last_name of this OauthV1UserInfo.

        The last name of the end-user.

        :return: The last_name of this OauthV1UserInfo.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this OauthV1UserInfo.

        The last name of the end-user.

        :param last_name: The last_name of this OauthV1UserInfo.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def url(self):
        """Gets the url of this OauthV1UserInfo.


        :return: The url of this OauthV1UserInfo.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this OauthV1UserInfo.


        :param url: The url of this OauthV1UserInfo.
        :type url: str
        """

        self._url = url

    @property
    def user_sid(self):
        """Gets the user_sid of this OauthV1UserInfo.

        The URL of the party that will create the token and sign it with its private key.

        :return: The user_sid of this OauthV1UserInfo.
        :rtype: str
        """
        return self._user_sid

    @user_sid.setter
    def user_sid(self, user_sid):
        """Sets the user_sid of this OauthV1UserInfo.

        The URL of the party that will create the token and sign it with its private key.

        :param user_sid: The user_sid of this OauthV1UserInfo.
        :type user_sid: str
        """
        if user_sid is not None and len(user_sid) > 34:
            raise ValueError("Invalid value for `user_sid`, length must be less than or equal to `34`")
        if user_sid is not None and len(user_sid) < 34:
            raise ValueError("Invalid value for `user_sid`, length must be greater than or equal to `34`")
        if user_sid is not None and not re.search(r'^US[0-9a-fA-F]{32}$', user_sid):
            raise ValueError("Invalid value for `user_sid`, must be a follow pattern or equal to `/^US[0-9a-fA-F]{32}$/`")

        self._user_sid = user_sid
