# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OauthV1OpenidDiscovery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorization_endpoint: str=None, claims_supported: List[str]=None, device_authorization_endpoint: str=None, id_token_signing_alg_values_supported: List[str]=None, issuer: str=None, jwk_uri: str=None, response_type_supported: List[str]=None, revocation_endpoint: str=None, scopes_supported: List[str]=None, subject_type_supported: List[str]=None, token_endpoint: str=None, url: str=None, userinfo_endpoint: str=None):
        """OauthV1OpenidDiscovery - a model defined in OpenAPI

        :param authorization_endpoint: The authorization_endpoint of this OauthV1OpenidDiscovery.
        :param claims_supported: The claims_supported of this OauthV1OpenidDiscovery.
        :param device_authorization_endpoint: The device_authorization_endpoint of this OauthV1OpenidDiscovery.
        :param id_token_signing_alg_values_supported: The id_token_signing_alg_values_supported of this OauthV1OpenidDiscovery.
        :param issuer: The issuer of this OauthV1OpenidDiscovery.
        :param jwk_uri: The jwk_uri of this OauthV1OpenidDiscovery.
        :param response_type_supported: The response_type_supported of this OauthV1OpenidDiscovery.
        :param revocation_endpoint: The revocation_endpoint of this OauthV1OpenidDiscovery.
        :param scopes_supported: The scopes_supported of this OauthV1OpenidDiscovery.
        :param subject_type_supported: The subject_type_supported of this OauthV1OpenidDiscovery.
        :param token_endpoint: The token_endpoint of this OauthV1OpenidDiscovery.
        :param url: The url of this OauthV1OpenidDiscovery.
        :param userinfo_endpoint: The userinfo_endpoint of this OauthV1OpenidDiscovery.
        """
        self.openapi_types = {
            'authorization_endpoint': str,
            'claims_supported': List[str],
            'device_authorization_endpoint': str,
            'id_token_signing_alg_values_supported': List[str],
            'issuer': str,
            'jwk_uri': str,
            'response_type_supported': List[str],
            'revocation_endpoint': str,
            'scopes_supported': List[str],
            'subject_type_supported': List[str],
            'token_endpoint': str,
            'url': str,
            'userinfo_endpoint': str
        }

        self.attribute_map = {
            'authorization_endpoint': 'authorization_endpoint',
            'claims_supported': 'claims_supported',
            'device_authorization_endpoint': 'device_authorization_endpoint',
            'id_token_signing_alg_values_supported': 'id_token_signing_alg_values_supported',
            'issuer': 'issuer',
            'jwk_uri': 'jwk_uri',
            'response_type_supported': 'response_type_supported',
            'revocation_endpoint': 'revocation_endpoint',
            'scopes_supported': 'scopes_supported',
            'subject_type_supported': 'subject_type_supported',
            'token_endpoint': 'token_endpoint',
            'url': 'url',
            'userinfo_endpoint': 'userinfo_endpoint'
        }

        self._authorization_endpoint = authorization_endpoint
        self._claims_supported = claims_supported
        self._device_authorization_endpoint = device_authorization_endpoint
        self._id_token_signing_alg_values_supported = id_token_signing_alg_values_supported
        self._issuer = issuer
        self._jwk_uri = jwk_uri
        self._response_type_supported = response_type_supported
        self._revocation_endpoint = revocation_endpoint
        self._scopes_supported = scopes_supported
        self._subject_type_supported = subject_type_supported
        self._token_endpoint = token_endpoint
        self._url = url
        self._userinfo_endpoint = userinfo_endpoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OauthV1OpenidDiscovery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The oauth.v1.openid_discovery of this OauthV1OpenidDiscovery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorization_endpoint(self):
        """Gets the authorization_endpoint of this OauthV1OpenidDiscovery.

        The endpoint that validates all authorization requests.

        :return: The authorization_endpoint of this OauthV1OpenidDiscovery.
        :rtype: str
        """
        return self._authorization_endpoint

    @authorization_endpoint.setter
    def authorization_endpoint(self, authorization_endpoint):
        """Sets the authorization_endpoint of this OauthV1OpenidDiscovery.

        The endpoint that validates all authorization requests.

        :param authorization_endpoint: The authorization_endpoint of this OauthV1OpenidDiscovery.
        :type authorization_endpoint: str
        """

        self._authorization_endpoint = authorization_endpoint

    @property
    def claims_supported(self):
        """Gets the claims_supported of this OauthV1OpenidDiscovery.

        A collection of claims supported by authorization server for identity token

        :return: The claims_supported of this OauthV1OpenidDiscovery.
        :rtype: List[str]
        """
        return self._claims_supported

    @claims_supported.setter
    def claims_supported(self, claims_supported):
        """Sets the claims_supported of this OauthV1OpenidDiscovery.

        A collection of claims supported by authorization server for identity token

        :param claims_supported: The claims_supported of this OauthV1OpenidDiscovery.
        :type claims_supported: List[str]
        """

        self._claims_supported = claims_supported

    @property
    def device_authorization_endpoint(self):
        """Gets the device_authorization_endpoint of this OauthV1OpenidDiscovery.

        The endpoint that validates all device code related authorization requests.

        :return: The device_authorization_endpoint of this OauthV1OpenidDiscovery.
        :rtype: str
        """
        return self._device_authorization_endpoint

    @device_authorization_endpoint.setter
    def device_authorization_endpoint(self, device_authorization_endpoint):
        """Sets the device_authorization_endpoint of this OauthV1OpenidDiscovery.

        The endpoint that validates all device code related authorization requests.

        :param device_authorization_endpoint: The device_authorization_endpoint of this OauthV1OpenidDiscovery.
        :type device_authorization_endpoint: str
        """

        self._device_authorization_endpoint = device_authorization_endpoint

    @property
    def id_token_signing_alg_values_supported(self):
        """Gets the id_token_signing_alg_values_supported of this OauthV1OpenidDiscovery.

        A collection of JWS signing algorithms supported by authorization server to sign identity token.

        :return: The id_token_signing_alg_values_supported of this OauthV1OpenidDiscovery.
        :rtype: List[str]
        """
        return self._id_token_signing_alg_values_supported

    @id_token_signing_alg_values_supported.setter
    def id_token_signing_alg_values_supported(self, id_token_signing_alg_values_supported):
        """Sets the id_token_signing_alg_values_supported of this OauthV1OpenidDiscovery.

        A collection of JWS signing algorithms supported by authorization server to sign identity token.

        :param id_token_signing_alg_values_supported: The id_token_signing_alg_values_supported of this OauthV1OpenidDiscovery.
        :type id_token_signing_alg_values_supported: List[str]
        """

        self._id_token_signing_alg_values_supported = id_token_signing_alg_values_supported

    @property
    def issuer(self):
        """Gets the issuer of this OauthV1OpenidDiscovery.

        The URL of the party that will create the token and sign it with its private key.

        :return: The issuer of this OauthV1OpenidDiscovery.
        :rtype: str
        """
        return self._issuer

    @issuer.setter
    def issuer(self, issuer):
        """Sets the issuer of this OauthV1OpenidDiscovery.

        The URL of the party that will create the token and sign it with its private key.

        :param issuer: The issuer of this OauthV1OpenidDiscovery.
        :type issuer: str
        """

        self._issuer = issuer

    @property
    def jwk_uri(self):
        """Gets the jwk_uri of this OauthV1OpenidDiscovery.

        The URL of your JSON Web Key Set. This set is a collection of JSON Web Keys, a standard method for representing cryptographic keys in a JSON structure.

        :return: The jwk_uri of this OauthV1OpenidDiscovery.
        :rtype: str
        """
        return self._jwk_uri

    @jwk_uri.setter
    def jwk_uri(self, jwk_uri):
        """Sets the jwk_uri of this OauthV1OpenidDiscovery.

        The URL of your JSON Web Key Set. This set is a collection of JSON Web Keys, a standard method for representing cryptographic keys in a JSON structure.

        :param jwk_uri: The jwk_uri of this OauthV1OpenidDiscovery.
        :type jwk_uri: str
        """

        self._jwk_uri = jwk_uri

    @property
    def response_type_supported(self):
        """Gets the response_type_supported of this OauthV1OpenidDiscovery.

        A collection of response type supported by authorization server.

        :return: The response_type_supported of this OauthV1OpenidDiscovery.
        :rtype: List[str]
        """
        return self._response_type_supported

    @response_type_supported.setter
    def response_type_supported(self, response_type_supported):
        """Sets the response_type_supported of this OauthV1OpenidDiscovery.

        A collection of response type supported by authorization server.

        :param response_type_supported: The response_type_supported of this OauthV1OpenidDiscovery.
        :type response_type_supported: List[str]
        """

        self._response_type_supported = response_type_supported

    @property
    def revocation_endpoint(self):
        """Gets the revocation_endpoint of this OauthV1OpenidDiscovery.

        The endpoint used to revoke access or refresh tokens issued by the authorization server.

        :return: The revocation_endpoint of this OauthV1OpenidDiscovery.
        :rtype: str
        """
        return self._revocation_endpoint

    @revocation_endpoint.setter
    def revocation_endpoint(self, revocation_endpoint):
        """Sets the revocation_endpoint of this OauthV1OpenidDiscovery.

        The endpoint used to revoke access or refresh tokens issued by the authorization server.

        :param revocation_endpoint: The revocation_endpoint of this OauthV1OpenidDiscovery.
        :type revocation_endpoint: str
        """

        self._revocation_endpoint = revocation_endpoint

    @property
    def scopes_supported(self):
        """Gets the scopes_supported of this OauthV1OpenidDiscovery.

        A collection of scopes supported by authorization server for identity token

        :return: The scopes_supported of this OauthV1OpenidDiscovery.
        :rtype: List[str]
        """
        return self._scopes_supported

    @scopes_supported.setter
    def scopes_supported(self, scopes_supported):
        """Sets the scopes_supported of this OauthV1OpenidDiscovery.

        A collection of scopes supported by authorization server for identity token

        :param scopes_supported: The scopes_supported of this OauthV1OpenidDiscovery.
        :type scopes_supported: List[str]
        """

        self._scopes_supported = scopes_supported

    @property
    def subject_type_supported(self):
        """Gets the subject_type_supported of this OauthV1OpenidDiscovery.

        A collection of subject by authorization server.

        :return: The subject_type_supported of this OauthV1OpenidDiscovery.
        :rtype: List[str]
        """
        return self._subject_type_supported

    @subject_type_supported.setter
    def subject_type_supported(self, subject_type_supported):
        """Sets the subject_type_supported of this OauthV1OpenidDiscovery.

        A collection of subject by authorization server.

        :param subject_type_supported: The subject_type_supported of this OauthV1OpenidDiscovery.
        :type subject_type_supported: List[str]
        """

        self._subject_type_supported = subject_type_supported

    @property
    def token_endpoint(self):
        """Gets the token_endpoint of this OauthV1OpenidDiscovery.

        The URL of the token endpoint. After a client has received an authorization code, that code is presented to the token endpoint and exchanged for an identity token, an access token, and a refresh token.

        :return: The token_endpoint of this OauthV1OpenidDiscovery.
        :rtype: str
        """
        return self._token_endpoint

    @token_endpoint.setter
    def token_endpoint(self, token_endpoint):
        """Sets the token_endpoint of this OauthV1OpenidDiscovery.

        The URL of the token endpoint. After a client has received an authorization code, that code is presented to the token endpoint and exchanged for an identity token, an access token, and a refresh token.

        :param token_endpoint: The token_endpoint of this OauthV1OpenidDiscovery.
        :type token_endpoint: str
        """

        self._token_endpoint = token_endpoint

    @property
    def url(self):
        """Gets the url of this OauthV1OpenidDiscovery.


        :return: The url of this OauthV1OpenidDiscovery.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this OauthV1OpenidDiscovery.


        :param url: The url of this OauthV1OpenidDiscovery.
        :type url: str
        """

        self._url = url

    @property
    def userinfo_endpoint(self):
        """Gets the userinfo_endpoint of this OauthV1OpenidDiscovery.

        The URL of the user info endpoint, which returns user profile information to a client. Keep in mind that the user info endpoint returns only the information that has been requested.

        :return: The userinfo_endpoint of this OauthV1OpenidDiscovery.
        :rtype: str
        """
        return self._userinfo_endpoint

    @userinfo_endpoint.setter
    def userinfo_endpoint(self, userinfo_endpoint):
        """Sets the userinfo_endpoint of this OauthV1OpenidDiscovery.

        The URL of the user info endpoint, which returns user profile information to a client. Keep in mind that the user info endpoint returns only the information that has been requested.

        :param userinfo_endpoint: The userinfo_endpoint of this OauthV1OpenidDiscovery.
        :type userinfo_endpoint: str
        """

        self._userinfo_endpoint = userinfo_endpoint
