/**
 * Twilio - Oauth
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.53.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOauth_v1_device_code.h
 *
 * 
 */

#ifndef OAIOauth_v1_device_code_H
#define OAIOauth_v1_device_code_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOauth_v1_device_code : public OAIObject {
public:
    OAIOauth_v1_device_code();
    OAIOauth_v1_device_code(QString json);
    ~OAIOauth_v1_device_code() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeviceCode() const;
    void setDeviceCode(const QString &device_code);
    bool is_device_code_Set() const;
    bool is_device_code_Valid() const;

    qint64 getExpiresIn() const;
    void setExpiresIn(const qint64 &expires_in);
    bool is_expires_in_Set() const;
    bool is_expires_in_Valid() const;

    qint32 getInterval() const;
    void setInterval(const qint32 &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    QString getUserCode() const;
    void setUserCode(const QString &user_code);
    bool is_user_code_Set() const;
    bool is_user_code_Valid() const;

    QString getVerificationUri() const;
    void setVerificationUri(const QString &verification_uri);
    bool is_verification_uri_Set() const;
    bool is_verification_uri_Valid() const;

    QString getVerificationUriComplete() const;
    void setVerificationUriComplete(const QString &verification_uri_complete);
    bool is_verification_uri_complete_Set() const;
    bool is_verification_uri_complete_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_device_code;
    bool m_device_code_isSet;
    bool m_device_code_isValid;

    qint64 m_expires_in;
    bool m_expires_in_isSet;
    bool m_expires_in_isValid;

    qint32 m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    QString m_user_code;
    bool m_user_code_isSet;
    bool m_user_code_isValid;

    QString m_verification_uri;
    bool m_verification_uri_isSet;
    bool m_verification_uri_isValid;

    QString m_verification_uri_complete;
    bool m_verification_uri_complete_isSet;
    bool m_verification_uri_complete_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOauth_v1_device_code)

#endif // OAIOauth_v1_device_code_H
