/**
 * Twilio - Oauth
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.53.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OauthV1Token model module.
 * @module model/OauthV1Token
 * @version 1.53.0
 */
class OauthV1Token {
    /**
     * Constructs a new <code>OauthV1Token</code>.
     * @alias module:model/OauthV1Token
     */
    constructor() { 
        
        OauthV1Token.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OauthV1Token</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OauthV1Token} obj Optional instance to populate.
     * @return {module:model/OauthV1Token} The populated <code>OauthV1Token</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OauthV1Token();

            if (data.hasOwnProperty('access_token')) {
                obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
            }
            if (data.hasOwnProperty('access_token_expires_at')) {
                obj['access_token_expires_at'] = ApiClient.convertToType(data['access_token_expires_at'], 'Date');
            }
            if (data.hasOwnProperty('id_token')) {
                obj['id_token'] = ApiClient.convertToType(data['id_token'], 'String');
            }
            if (data.hasOwnProperty('refresh_token')) {
                obj['refresh_token'] = ApiClient.convertToType(data['refresh_token'], 'String');
            }
            if (data.hasOwnProperty('refresh_token_expires_at')) {
                obj['refresh_token_expires_at'] = ApiClient.convertToType(data['refresh_token_expires_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OauthV1Token</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OauthV1Token</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['access_token'] && !(typeof data['access_token'] === 'string' || data['access_token'] instanceof String)) {
            throw new Error("Expected the field `access_token` to be a primitive type in the JSON string but got " + data['access_token']);
        }
        // ensure the json data is a string
        if (data['id_token'] && !(typeof data['id_token'] === 'string' || data['id_token'] instanceof String)) {
            throw new Error("Expected the field `id_token` to be a primitive type in the JSON string but got " + data['id_token']);
        }
        // ensure the json data is a string
        if (data['refresh_token'] && !(typeof data['refresh_token'] === 'string' || data['refresh_token'] instanceof String)) {
            throw new Error("Expected the field `refresh_token` to be a primitive type in the JSON string but got " + data['refresh_token']);
        }

        return true;
    }


}



/**
 * Token which carries the necessary information to access a Twilio resource directly.
 * @member {String} access_token
 */
OauthV1Token.prototype['access_token'] = undefined;

/**
 * The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {Date} access_token_expires_at
 */
OauthV1Token.prototype['access_token_expires_at'] = undefined;

/**
 * @member {String} id_token
 */
OauthV1Token.prototype['id_token'] = undefined;

/**
 * Token which carries the information necessary to get a new access token.
 * @member {String} refresh_token
 */
OauthV1Token.prototype['refresh_token'] = undefined;

/**
 * The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
 * @member {Date} refresh_token_expires_at
 */
OauthV1Token.prototype['refresh_token_expires_at'] = undefined;






export default OauthV1Token;

