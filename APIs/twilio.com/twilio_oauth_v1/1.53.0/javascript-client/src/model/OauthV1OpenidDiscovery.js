/**
 * Twilio - Oauth
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.53.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OauthV1OpenidDiscovery model module.
 * @module model/OauthV1OpenidDiscovery
 * @version 1.53.0
 */
class OauthV1OpenidDiscovery {
    /**
     * Constructs a new <code>OauthV1OpenidDiscovery</code>.
     * @alias module:model/OauthV1OpenidDiscovery
     */
    constructor() { 
        
        OauthV1OpenidDiscovery.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OauthV1OpenidDiscovery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OauthV1OpenidDiscovery} obj Optional instance to populate.
     * @return {module:model/OauthV1OpenidDiscovery} The populated <code>OauthV1OpenidDiscovery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OauthV1OpenidDiscovery();

            if (data.hasOwnProperty('authorization_endpoint')) {
                obj['authorization_endpoint'] = ApiClient.convertToType(data['authorization_endpoint'], 'String');
            }
            if (data.hasOwnProperty('claims_supported')) {
                obj['claims_supported'] = ApiClient.convertToType(data['claims_supported'], ['String']);
            }
            if (data.hasOwnProperty('device_authorization_endpoint')) {
                obj['device_authorization_endpoint'] = ApiClient.convertToType(data['device_authorization_endpoint'], 'String');
            }
            if (data.hasOwnProperty('id_token_signing_alg_values_supported')) {
                obj['id_token_signing_alg_values_supported'] = ApiClient.convertToType(data['id_token_signing_alg_values_supported'], ['String']);
            }
            if (data.hasOwnProperty('issuer')) {
                obj['issuer'] = ApiClient.convertToType(data['issuer'], 'String');
            }
            if (data.hasOwnProperty('jwk_uri')) {
                obj['jwk_uri'] = ApiClient.convertToType(data['jwk_uri'], 'String');
            }
            if (data.hasOwnProperty('response_type_supported')) {
                obj['response_type_supported'] = ApiClient.convertToType(data['response_type_supported'], ['String']);
            }
            if (data.hasOwnProperty('revocation_endpoint')) {
                obj['revocation_endpoint'] = ApiClient.convertToType(data['revocation_endpoint'], 'String');
            }
            if (data.hasOwnProperty('scopes_supported')) {
                obj['scopes_supported'] = ApiClient.convertToType(data['scopes_supported'], ['String']);
            }
            if (data.hasOwnProperty('subject_type_supported')) {
                obj['subject_type_supported'] = ApiClient.convertToType(data['subject_type_supported'], ['String']);
            }
            if (data.hasOwnProperty('token_endpoint')) {
                obj['token_endpoint'] = ApiClient.convertToType(data['token_endpoint'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('userinfo_endpoint')) {
                obj['userinfo_endpoint'] = ApiClient.convertToType(data['userinfo_endpoint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OauthV1OpenidDiscovery</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OauthV1OpenidDiscovery</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['authorization_endpoint'] && !(typeof data['authorization_endpoint'] === 'string' || data['authorization_endpoint'] instanceof String)) {
            throw new Error("Expected the field `authorization_endpoint` to be a primitive type in the JSON string but got " + data['authorization_endpoint']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['claims_supported'])) {
            throw new Error("Expected the field `claims_supported` to be an array in the JSON data but got " + data['claims_supported']);
        }
        // ensure the json data is a string
        if (data['device_authorization_endpoint'] && !(typeof data['device_authorization_endpoint'] === 'string' || data['device_authorization_endpoint'] instanceof String)) {
            throw new Error("Expected the field `device_authorization_endpoint` to be a primitive type in the JSON string but got " + data['device_authorization_endpoint']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['id_token_signing_alg_values_supported'])) {
            throw new Error("Expected the field `id_token_signing_alg_values_supported` to be an array in the JSON data but got " + data['id_token_signing_alg_values_supported']);
        }
        // ensure the json data is a string
        if (data['issuer'] && !(typeof data['issuer'] === 'string' || data['issuer'] instanceof String)) {
            throw new Error("Expected the field `issuer` to be a primitive type in the JSON string but got " + data['issuer']);
        }
        // ensure the json data is a string
        if (data['jwk_uri'] && !(typeof data['jwk_uri'] === 'string' || data['jwk_uri'] instanceof String)) {
            throw new Error("Expected the field `jwk_uri` to be a primitive type in the JSON string but got " + data['jwk_uri']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['response_type_supported'])) {
            throw new Error("Expected the field `response_type_supported` to be an array in the JSON data but got " + data['response_type_supported']);
        }
        // ensure the json data is a string
        if (data['revocation_endpoint'] && !(typeof data['revocation_endpoint'] === 'string' || data['revocation_endpoint'] instanceof String)) {
            throw new Error("Expected the field `revocation_endpoint` to be a primitive type in the JSON string but got " + data['revocation_endpoint']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['scopes_supported'])) {
            throw new Error("Expected the field `scopes_supported` to be an array in the JSON data but got " + data['scopes_supported']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['subject_type_supported'])) {
            throw new Error("Expected the field `subject_type_supported` to be an array in the JSON data but got " + data['subject_type_supported']);
        }
        // ensure the json data is a string
        if (data['token_endpoint'] && !(typeof data['token_endpoint'] === 'string' || data['token_endpoint'] instanceof String)) {
            throw new Error("Expected the field `token_endpoint` to be a primitive type in the JSON string but got " + data['token_endpoint']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['userinfo_endpoint'] && !(typeof data['userinfo_endpoint'] === 'string' || data['userinfo_endpoint'] instanceof String)) {
            throw new Error("Expected the field `userinfo_endpoint` to be a primitive type in the JSON string but got " + data['userinfo_endpoint']);
        }

        return true;
    }


}



/**
 * The endpoint that validates all authorization requests.
 * @member {String} authorization_endpoint
 */
OauthV1OpenidDiscovery.prototype['authorization_endpoint'] = undefined;

/**
 * A collection of claims supported by authorization server for identity token
 * @member {Array.<String>} claims_supported
 */
OauthV1OpenidDiscovery.prototype['claims_supported'] = undefined;

/**
 * The endpoint that validates all device code related authorization requests.
 * @member {String} device_authorization_endpoint
 */
OauthV1OpenidDiscovery.prototype['device_authorization_endpoint'] = undefined;

/**
 * A collection of JWS signing algorithms supported by authorization server to sign identity token.
 * @member {Array.<String>} id_token_signing_alg_values_supported
 */
OauthV1OpenidDiscovery.prototype['id_token_signing_alg_values_supported'] = undefined;

/**
 * The URL of the party that will create the token and sign it with its private key.
 * @member {String} issuer
 */
OauthV1OpenidDiscovery.prototype['issuer'] = undefined;

/**
 * The URL of your JSON Web Key Set. This set is a collection of JSON Web Keys, a standard method for representing cryptographic keys in a JSON structure.
 * @member {String} jwk_uri
 */
OauthV1OpenidDiscovery.prototype['jwk_uri'] = undefined;

/**
 * A collection of response type supported by authorization server.
 * @member {Array.<String>} response_type_supported
 */
OauthV1OpenidDiscovery.prototype['response_type_supported'] = undefined;

/**
 * The endpoint used to revoke access or refresh tokens issued by the authorization server.
 * @member {String} revocation_endpoint
 */
OauthV1OpenidDiscovery.prototype['revocation_endpoint'] = undefined;

/**
 * A collection of scopes supported by authorization server for identity token
 * @member {Array.<String>} scopes_supported
 */
OauthV1OpenidDiscovery.prototype['scopes_supported'] = undefined;

/**
 * A collection of subject by authorization server.
 * @member {Array.<String>} subject_type_supported
 */
OauthV1OpenidDiscovery.prototype['subject_type_supported'] = undefined;

/**
 * The URL of the token endpoint. After a client has received an authorization code, that code is presented to the token endpoint and exchanged for an identity token, an access token, and a refresh token.
 * @member {String} token_endpoint
 */
OauthV1OpenidDiscovery.prototype['token_endpoint'] = undefined;

/**
 * @member {String} url
 */
OauthV1OpenidDiscovery.prototype['url'] = undefined;

/**
 * The URL of the user info endpoint, which returns user profile information to a client. Keep in mind that the user info endpoint returns only the information that has been requested.
 * @member {String} userinfo_endpoint
 */
OauthV1OpenidDiscovery.prototype['userinfo_endpoint'] = undefined;






export default OauthV1OpenidDiscovery;

