/**
 * Twilio - Oauth
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.53.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OauthV1Token from '../model/OauthV1Token';

/**
* OauthV1Token service.
* @module api/OauthV1TokenApi
* @version 1.53.0
*/
export default class OauthV1TokenApi {

    /**
    * Constructs a new OauthV1TokenApi. 
    * @alias module:api/OauthV1TokenApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createToken operation.
     * @callback module:api/OauthV1TokenApi~createTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OauthV1Token} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Issues a new Access token (optionally identity_token & refresh_token) in exchange of Oauth grant
     * @param {String} clientSid A 34 character string that uniquely identifies this OAuth App.
     * @param {String} grantType Grant type is a credential representing resource owner's authorization which can be used by client to obtain access token.
     * @param {Object} opts Optional parameters
     * @param {String} [clientSecret] The credential for confidential OAuth App.
     * @param {String} [code] JWT token related to the authorization code grant type.
     * @param {String} [codeVerifier] A code which is generation cryptographically.
     * @param {String} [deviceCode] JWT token related to the device code grant type.
     * @param {String} [deviceId] The Id of the device associated with the token (refresh token).
     * @param {String} [refreshToken] JWT token related to the refresh token grant type.
     * @param {module:api/OauthV1TokenApi~createTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OauthV1Token}
     */
    createToken(clientSid, grantType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'clientSid' is set
      if (clientSid === undefined || clientSid === null) {
        throw new Error("Missing the required parameter 'clientSid' when calling createToken");
      }
      // verify the required parameter 'grantType' is set
      if (grantType === undefined || grantType === null) {
        throw new Error("Missing the required parameter 'grantType' when calling createToken");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'ClientSecret': opts['clientSecret'],
        'ClientSid': clientSid,
        'Code': opts['code'],
        'CodeVerifier': opts['codeVerifier'],
        'DeviceCode': opts['deviceCode'],
        'DeviceId': opts['deviceId'],
        'GrantType': grantType,
        'RefreshToken': opts['refreshToken']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = OauthV1Token;
      let basePaths = ['https://oauth.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
