/**
 * Twilio - Oauth
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.53.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwilioOauth);
  }
}(this, function(expect, TwilioOauth) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwilioOauth.OauthV1OpenidDiscovery();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OauthV1OpenidDiscovery', function() {
    it('should create an instance of OauthV1OpenidDiscovery', function() {
      // uncomment below and update the code to test OauthV1OpenidDiscovery
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be.a(TwilioOauth.OauthV1OpenidDiscovery);
    });

    it('should have the property authorizationEndpoint (base name: "authorization_endpoint")', function() {
      // uncomment below and update the code to test the property authorizationEndpoint
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

    it('should have the property claimsSupported (base name: "claims_supported")', function() {
      // uncomment below and update the code to test the property claimsSupported
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

    it('should have the property deviceAuthorizationEndpoint (base name: "device_authorization_endpoint")', function() {
      // uncomment below and update the code to test the property deviceAuthorizationEndpoint
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

    it('should have the property idTokenSigningAlgValuesSupported (base name: "id_token_signing_alg_values_supported")', function() {
      // uncomment below and update the code to test the property idTokenSigningAlgValuesSupported
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

    it('should have the property issuer (base name: "issuer")', function() {
      // uncomment below and update the code to test the property issuer
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

    it('should have the property jwkUri (base name: "jwk_uri")', function() {
      // uncomment below and update the code to test the property jwkUri
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

    it('should have the property responseTypeSupported (base name: "response_type_supported")', function() {
      // uncomment below and update the code to test the property responseTypeSupported
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

    it('should have the property revocationEndpoint (base name: "revocation_endpoint")', function() {
      // uncomment below and update the code to test the property revocationEndpoint
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

    it('should have the property scopesSupported (base name: "scopes_supported")', function() {
      // uncomment below and update the code to test the property scopesSupported
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

    it('should have the property subjectTypeSupported (base name: "subject_type_supported")', function() {
      // uncomment below and update the code to test the property subjectTypeSupported
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

    it('should have the property tokenEndpoint (base name: "token_endpoint")', function() {
      // uncomment below and update the code to test the property tokenEndpoint
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

    it('should have the property userinfoEndpoint (base name: "userinfo_endpoint")', function() {
      // uncomment below and update the code to test the property userinfoEndpoint
      //var instance = new TwilioOauth.OauthV1OpenidDiscovery();
      //expect(instance).to.be();
    });

  });

}));
