# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class RoutesV2SipDomain(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, date_created: datetime=None, date_updated: datetime=None, friendly_name: str=None, sid: str=None, sip_domain: str=None, url: str=None, voice_region: str=None):
        """RoutesV2SipDomain - a model defined in OpenAPI

        :param account_sid: The account_sid of this RoutesV2SipDomain.
        :param date_created: The date_created of this RoutesV2SipDomain.
        :param date_updated: The date_updated of this RoutesV2SipDomain.
        :param friendly_name: The friendly_name of this RoutesV2SipDomain.
        :param sid: The sid of this RoutesV2SipDomain.
        :param sip_domain: The sip_domain of this RoutesV2SipDomain.
        :param url: The url of this RoutesV2SipDomain.
        :param voice_region: The voice_region of this RoutesV2SipDomain.
        """
        self.openapi_types = {
            'account_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'friendly_name': str,
            'sid': str,
            'sip_domain': str,
            'url': str,
            'voice_region': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'friendly_name': 'friendly_name',
            'sid': 'sid',
            'sip_domain': 'sip_domain',
            'url': 'url',
            'voice_region': 'voice_region'
        }

        self._account_sid = account_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._friendly_name = friendly_name
        self._sid = sid
        self._sip_domain = sip_domain
        self._url = url
        self._voice_region = voice_region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoutesV2SipDomain':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The routes.v2.sip_domain of this RoutesV2SipDomain.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this RoutesV2SipDomain.


        :return: The account_sid of this RoutesV2SipDomain.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this RoutesV2SipDomain.


        :param account_sid: The account_sid of this RoutesV2SipDomain.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def date_created(self):
        """Gets the date_created of this RoutesV2SipDomain.


        :return: The date_created of this RoutesV2SipDomain.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this RoutesV2SipDomain.


        :param date_created: The date_created of this RoutesV2SipDomain.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this RoutesV2SipDomain.


        :return: The date_updated of this RoutesV2SipDomain.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this RoutesV2SipDomain.


        :param date_updated: The date_updated of this RoutesV2SipDomain.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def friendly_name(self):
        """Gets the friendly_name of this RoutesV2SipDomain.


        :return: The friendly_name of this RoutesV2SipDomain.
        :rtype: str
        """
        return self._friendly_name

    @friendly_name.setter
    def friendly_name(self, friendly_name):
        """Sets the friendly_name of this RoutesV2SipDomain.


        :param friendly_name: The friendly_name of this RoutesV2SipDomain.
        :type friendly_name: str
        """

        self._friendly_name = friendly_name

    @property
    def sid(self):
        """Gets the sid of this RoutesV2SipDomain.


        :return: The sid of this RoutesV2SipDomain.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this RoutesV2SipDomain.


        :param sid: The sid of this RoutesV2SipDomain.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^QQ[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^QQ[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def sip_domain(self):
        """Gets the sip_domain of this RoutesV2SipDomain.


        :return: The sip_domain of this RoutesV2SipDomain.
        :rtype: str
        """
        return self._sip_domain

    @sip_domain.setter
    def sip_domain(self, sip_domain):
        """Sets the sip_domain of this RoutesV2SipDomain.


        :param sip_domain: The sip_domain of this RoutesV2SipDomain.
        :type sip_domain: str
        """

        self._sip_domain = sip_domain

    @property
    def url(self):
        """Gets the url of this RoutesV2SipDomain.


        :return: The url of this RoutesV2SipDomain.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this RoutesV2SipDomain.


        :param url: The url of this RoutesV2SipDomain.
        :type url: str
        """

        self._url = url

    @property
    def voice_region(self):
        """Gets the voice_region of this RoutesV2SipDomain.


        :return: The voice_region of this RoutesV2SipDomain.
        :rtype: str
        """
        return self._voice_region

    @voice_region.setter
    def voice_region(self, voice_region):
        """Sets the voice_region of this RoutesV2SipDomain.


        :param voice_region: The voice_region of this RoutesV2SipDomain.
        :type voice_region: str
        """

        self._voice_region = voice_region
