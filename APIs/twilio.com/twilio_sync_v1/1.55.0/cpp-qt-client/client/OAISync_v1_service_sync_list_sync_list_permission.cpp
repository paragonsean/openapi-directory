/**
 * Twilio - Sync
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISync_v1_service_sync_list_sync_list_permission.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISync_v1_service_sync_list_sync_list_permission::OAISync_v1_service_sync_list_sync_list_permission(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISync_v1_service_sync_list_sync_list_permission::OAISync_v1_service_sync_list_sync_list_permission() {
    this->initializeModel();
}

OAISync_v1_service_sync_list_sync_list_permission::~OAISync_v1_service_sync_list_sync_list_permission() {}

void OAISync_v1_service_sync_list_sync_list_permission::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_identity_isSet = false;
    m_identity_isValid = false;

    m_list_sid_isSet = false;
    m_list_sid_isValid = false;

    m_manage_isSet = false;
    m_manage_isValid = false;

    m_read_isSet = false;
    m_read_isValid = false;

    m_service_sid_isSet = false;
    m_service_sid_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_write_isSet = false;
    m_write_isValid = false;
}

void OAISync_v1_service_sync_list_sync_list_permission::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISync_v1_service_sync_list_sync_list_permission::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_identity_isValid = ::OpenAPI::fromJsonValue(m_identity, json[QString("identity")]);
    m_identity_isSet = !json[QString("identity")].isNull() && m_identity_isValid;

    m_list_sid_isValid = ::OpenAPI::fromJsonValue(m_list_sid, json[QString("list_sid")]);
    m_list_sid_isSet = !json[QString("list_sid")].isNull() && m_list_sid_isValid;

    m_manage_isValid = ::OpenAPI::fromJsonValue(m_manage, json[QString("manage")]);
    m_manage_isSet = !json[QString("manage")].isNull() && m_manage_isValid;

    m_read_isValid = ::OpenAPI::fromJsonValue(m_read, json[QString("read")]);
    m_read_isSet = !json[QString("read")].isNull() && m_read_isValid;

    m_service_sid_isValid = ::OpenAPI::fromJsonValue(m_service_sid, json[QString("service_sid")]);
    m_service_sid_isSet = !json[QString("service_sid")].isNull() && m_service_sid_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_write_isValid = ::OpenAPI::fromJsonValue(m_write, json[QString("write")]);
    m_write_isSet = !json[QString("write")].isNull() && m_write_isValid;
}

QString OAISync_v1_service_sync_list_sync_list_permission::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISync_v1_service_sync_list_sync_list_permission::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_identity_isSet) {
        obj.insert(QString("identity"), ::OpenAPI::toJsonValue(m_identity));
    }
    if (m_list_sid_isSet) {
        obj.insert(QString("list_sid"), ::OpenAPI::toJsonValue(m_list_sid));
    }
    if (m_manage_isSet) {
        obj.insert(QString("manage"), ::OpenAPI::toJsonValue(m_manage));
    }
    if (m_read_isSet) {
        obj.insert(QString("read"), ::OpenAPI::toJsonValue(m_read));
    }
    if (m_service_sid_isSet) {
        obj.insert(QString("service_sid"), ::OpenAPI::toJsonValue(m_service_sid));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_write_isSet) {
        obj.insert(QString("write"), ::OpenAPI::toJsonValue(m_write));
    }
    return obj;
}

QString OAISync_v1_service_sync_list_sync_list_permission::getAccountSid() const {
    return m_account_sid;
}
void OAISync_v1_service_sync_list_sync_list_permission::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAISync_v1_service_sync_list_sync_list_permission::getIdentity() const {
    return m_identity;
}
void OAISync_v1_service_sync_list_sync_list_permission::setIdentity(const QString &identity) {
    m_identity = identity;
    m_identity_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_identity_Set() const{
    return m_identity_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_identity_Valid() const{
    return m_identity_isValid;
}

QString OAISync_v1_service_sync_list_sync_list_permission::getListSid() const {
    return m_list_sid;
}
void OAISync_v1_service_sync_list_sync_list_permission::setListSid(const QString &list_sid) {
    m_list_sid = list_sid;
    m_list_sid_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_list_sid_Set() const{
    return m_list_sid_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_list_sid_Valid() const{
    return m_list_sid_isValid;
}

bool OAISync_v1_service_sync_list_sync_list_permission::isManage() const {
    return m_manage;
}
void OAISync_v1_service_sync_list_sync_list_permission::setManage(const bool &manage) {
    m_manage = manage;
    m_manage_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_manage_Set() const{
    return m_manage_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_manage_Valid() const{
    return m_manage_isValid;
}

bool OAISync_v1_service_sync_list_sync_list_permission::isRead() const {
    return m_read;
}
void OAISync_v1_service_sync_list_sync_list_permission::setRead(const bool &read) {
    m_read = read;
    m_read_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_read_Set() const{
    return m_read_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_read_Valid() const{
    return m_read_isValid;
}

QString OAISync_v1_service_sync_list_sync_list_permission::getServiceSid() const {
    return m_service_sid;
}
void OAISync_v1_service_sync_list_sync_list_permission::setServiceSid(const QString &service_sid) {
    m_service_sid = service_sid;
    m_service_sid_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_service_sid_Set() const{
    return m_service_sid_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_service_sid_Valid() const{
    return m_service_sid_isValid;
}

QString OAISync_v1_service_sync_list_sync_list_permission::getUrl() const {
    return m_url;
}
void OAISync_v1_service_sync_list_sync_list_permission::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_url_Set() const{
    return m_url_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_url_Valid() const{
    return m_url_isValid;
}

bool OAISync_v1_service_sync_list_sync_list_permission::isWrite() const {
    return m_write;
}
void OAISync_v1_service_sync_list_sync_list_permission::setWrite(const bool &write) {
    m_write = write;
    m_write_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_write_Set() const{
    return m_write_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_permission::is_write_Valid() const{
    return m_write_isValid;
}

bool OAISync_v1_service_sync_list_sync_list_permission::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_read_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_write_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISync_v1_service_sync_list_sync_list_permission::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
