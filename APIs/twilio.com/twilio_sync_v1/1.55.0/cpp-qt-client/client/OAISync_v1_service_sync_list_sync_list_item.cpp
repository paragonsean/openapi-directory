/**
 * Twilio - Sync
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISync_v1_service_sync_list_sync_list_item.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISync_v1_service_sync_list_sync_list_item::OAISync_v1_service_sync_list_sync_list_item(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISync_v1_service_sync_list_sync_list_item::OAISync_v1_service_sync_list_sync_list_item() {
    this->initializeModel();
}

OAISync_v1_service_sync_list_sync_list_item::~OAISync_v1_service_sync_list_sync_list_item() {}

void OAISync_v1_service_sync_list_sync_list_item::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_data_isSet = false;
    m_data_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_expires_isSet = false;
    m_date_expires_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_index_isSet = false;
    m_index_isValid = false;

    m_list_sid_isSet = false;
    m_list_sid_isValid = false;

    m_revision_isSet = false;
    m_revision_isValid = false;

    m_service_sid_isSet = false;
    m_service_sid_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAISync_v1_service_sync_list_sync_list_item::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISync_v1_service_sync_list_sync_list_item::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_expires_isValid = ::OpenAPI::fromJsonValue(m_date_expires, json[QString("date_expires")]);
    m_date_expires_isSet = !json[QString("date_expires")].isNull() && m_date_expires_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_index_isValid = ::OpenAPI::fromJsonValue(m_index, json[QString("index")]);
    m_index_isSet = !json[QString("index")].isNull() && m_index_isValid;

    m_list_sid_isValid = ::OpenAPI::fromJsonValue(m_list_sid, json[QString("list_sid")]);
    m_list_sid_isSet = !json[QString("list_sid")].isNull() && m_list_sid_isValid;

    m_revision_isValid = ::OpenAPI::fromJsonValue(m_revision, json[QString("revision")]);
    m_revision_isSet = !json[QString("revision")].isNull() && m_revision_isValid;

    m_service_sid_isValid = ::OpenAPI::fromJsonValue(m_service_sid, json[QString("service_sid")]);
    m_service_sid_isSet = !json[QString("service_sid")].isNull() && m_service_sid_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAISync_v1_service_sync_list_sync_list_item::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISync_v1_service_sync_list_sync_list_item::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_data_isSet) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_expires_isSet) {
        obj.insert(QString("date_expires"), ::OpenAPI::toJsonValue(m_date_expires));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_index_isSet) {
        obj.insert(QString("index"), ::OpenAPI::toJsonValue(m_index));
    }
    if (m_list_sid_isSet) {
        obj.insert(QString("list_sid"), ::OpenAPI::toJsonValue(m_list_sid));
    }
    if (m_revision_isSet) {
        obj.insert(QString("revision"), ::OpenAPI::toJsonValue(m_revision));
    }
    if (m_service_sid_isSet) {
        obj.insert(QString("service_sid"), ::OpenAPI::toJsonValue(m_service_sid));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAISync_v1_service_sync_list_sync_list_item::getAccountSid() const {
    return m_account_sid;
}
void OAISync_v1_service_sync_list_sync_list_item::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAISync_v1_service_sync_list_sync_list_item::getCreatedBy() const {
    return m_created_by;
}
void OAISync_v1_service_sync_list_sync_list_item::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QJsonValue OAISync_v1_service_sync_list_sync_list_item::getData() const {
    return m_data;
}
void OAISync_v1_service_sync_list_sync_list_item::setData(const QJsonValue &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_data_Set() const{
    return m_data_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_data_Valid() const{
    return m_data_isValid;
}

QDateTime OAISync_v1_service_sync_list_sync_list_item::getDateCreated() const {
    return m_date_created;
}
void OAISync_v1_service_sync_list_sync_list_item::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAISync_v1_service_sync_list_sync_list_item::getDateExpires() const {
    return m_date_expires;
}
void OAISync_v1_service_sync_list_sync_list_item::setDateExpires(const QDateTime &date_expires) {
    m_date_expires = date_expires;
    m_date_expires_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_date_expires_Set() const{
    return m_date_expires_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_date_expires_Valid() const{
    return m_date_expires_isValid;
}

QDateTime OAISync_v1_service_sync_list_sync_list_item::getDateUpdated() const {
    return m_date_updated;
}
void OAISync_v1_service_sync_list_sync_list_item::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

qint32 OAISync_v1_service_sync_list_sync_list_item::getIndex() const {
    return m_index;
}
void OAISync_v1_service_sync_list_sync_list_item::setIndex(const qint32 &index) {
    m_index = index;
    m_index_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_index_Set() const{
    return m_index_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_index_Valid() const{
    return m_index_isValid;
}

QString OAISync_v1_service_sync_list_sync_list_item::getListSid() const {
    return m_list_sid;
}
void OAISync_v1_service_sync_list_sync_list_item::setListSid(const QString &list_sid) {
    m_list_sid = list_sid;
    m_list_sid_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_list_sid_Set() const{
    return m_list_sid_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_list_sid_Valid() const{
    return m_list_sid_isValid;
}

QString OAISync_v1_service_sync_list_sync_list_item::getRevision() const {
    return m_revision;
}
void OAISync_v1_service_sync_list_sync_list_item::setRevision(const QString &revision) {
    m_revision = revision;
    m_revision_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_revision_Set() const{
    return m_revision_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_revision_Valid() const{
    return m_revision_isValid;
}

QString OAISync_v1_service_sync_list_sync_list_item::getServiceSid() const {
    return m_service_sid;
}
void OAISync_v1_service_sync_list_sync_list_item::setServiceSid(const QString &service_sid) {
    m_service_sid = service_sid;
    m_service_sid_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_service_sid_Set() const{
    return m_service_sid_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_service_sid_Valid() const{
    return m_service_sid_isValid;
}

QString OAISync_v1_service_sync_list_sync_list_item::getUrl() const {
    return m_url;
}
void OAISync_v1_service_sync_list_sync_list_item::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_url_Set() const{
    return m_url_isSet;
}

bool OAISync_v1_service_sync_list_sync_list_item::is_url_Valid() const{
    return m_url_isValid;
}

bool OAISync_v1_service_sync_list_sync_list_item::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_expires_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_list_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISync_v1_service_sync_list_sync_list_item::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
