/*
 * Twilio - Sync
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SyncV1ServiceDocumentDocumentPermission
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:41.285428-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SyncV1ServiceDocumentDocumentPermission {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_DOCUMENT_SID = "document_sid";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_SID)
  private String documentSid;

  public static final String SERIALIZED_NAME_IDENTITY = "identity";
  @SerializedName(SERIALIZED_NAME_IDENTITY)
  private String identity;

  public static final String SERIALIZED_NAME_MANAGE = "manage";
  @SerializedName(SERIALIZED_NAME_MANAGE)
  private Boolean manage;

  public static final String SERIALIZED_NAME_READ = "read";
  @SerializedName(SERIALIZED_NAME_READ)
  private Boolean read;

  public static final String SERIALIZED_NAME_SERVICE_SID = "service_sid";
  @SerializedName(SERIALIZED_NAME_SERVICE_SID)
  private String serviceSid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_WRITE = "write";
  @SerializedName(SERIALIZED_NAME_WRITE)
  private Boolean write;

  public SyncV1ServiceDocumentDocumentPermission() {
  }

  public SyncV1ServiceDocumentDocumentPermission accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Document Permission resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public SyncV1ServiceDocumentDocumentPermission documentSid(String documentSid) {
    this.documentSid = documentSid;
    return this;
  }

  /**
   * The SID of the Sync Document to which the Document Permission applies.
   * @return documentSid
   */
  @javax.annotation.Nullable
  public String getDocumentSid() {
    return documentSid;
  }

  public void setDocumentSid(String documentSid) {
    this.documentSid = documentSid;
  }


  public SyncV1ServiceDocumentDocumentPermission identity(String identity) {
    this.identity = identity;
    return this;
  }

  /**
   * The application-defined string that uniquely identifies the resource&#39;s User within the Service to an FPA token.
   * @return identity
   */
  @javax.annotation.Nullable
  public String getIdentity() {
    return identity;
  }

  public void setIdentity(String identity) {
    this.identity = identity;
  }


  public SyncV1ServiceDocumentDocumentPermission manage(Boolean manage) {
    this.manage = manage;
    return this;
  }

  /**
   * Whether the identity can delete the Sync Document.
   * @return manage
   */
  @javax.annotation.Nullable
  public Boolean getManage() {
    return manage;
  }

  public void setManage(Boolean manage) {
    this.manage = manage;
  }


  public SyncV1ServiceDocumentDocumentPermission read(Boolean read) {
    this.read = read;
    return this;
  }

  /**
   * Whether the identity can read the Sync Document.
   * @return read
   */
  @javax.annotation.Nullable
  public Boolean getRead() {
    return read;
  }

  public void setRead(Boolean read) {
    this.read = read;
  }


  public SyncV1ServiceDocumentDocumentPermission serviceSid(String serviceSid) {
    this.serviceSid = serviceSid;
    return this;
  }

  /**
   * The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) the resource is associated with.
   * @return serviceSid
   */
  @javax.annotation.Nullable
  public String getServiceSid() {
    return serviceSid;
  }

  public void setServiceSid(String serviceSid) {
    this.serviceSid = serviceSid;
  }


  public SyncV1ServiceDocumentDocumentPermission url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Sync Document Permission resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public SyncV1ServiceDocumentDocumentPermission write(Boolean write) {
    this.write = write;
    return this;
  }

  /**
   * Whether the identity can update the Sync Document.
   * @return write
   */
  @javax.annotation.Nullable
  public Boolean getWrite() {
    return write;
  }

  public void setWrite(Boolean write) {
    this.write = write;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SyncV1ServiceDocumentDocumentPermission syncV1ServiceDocumentDocumentPermission = (SyncV1ServiceDocumentDocumentPermission) o;
    return Objects.equals(this.accountSid, syncV1ServiceDocumentDocumentPermission.accountSid) &&
        Objects.equals(this.documentSid, syncV1ServiceDocumentDocumentPermission.documentSid) &&
        Objects.equals(this.identity, syncV1ServiceDocumentDocumentPermission.identity) &&
        Objects.equals(this.manage, syncV1ServiceDocumentDocumentPermission.manage) &&
        Objects.equals(this.read, syncV1ServiceDocumentDocumentPermission.read) &&
        Objects.equals(this.serviceSid, syncV1ServiceDocumentDocumentPermission.serviceSid) &&
        Objects.equals(this.url, syncV1ServiceDocumentDocumentPermission.url) &&
        Objects.equals(this.write, syncV1ServiceDocumentDocumentPermission.write);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, documentSid, identity, manage, read, serviceSid, url, write);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SyncV1ServiceDocumentDocumentPermission {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    documentSid: ").append(toIndentedString(documentSid)).append("\n");
    sb.append("    identity: ").append(toIndentedString(identity)).append("\n");
    sb.append("    manage: ").append(toIndentedString(manage)).append("\n");
    sb.append("    read: ").append(toIndentedString(read)).append("\n");
    sb.append("    serviceSid: ").append(toIndentedString(serviceSid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    write: ").append(toIndentedString(write)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("document_sid");
    openapiFields.add("identity");
    openapiFields.add("manage");
    openapiFields.add("read");
    openapiFields.add("service_sid");
    openapiFields.add("url");
    openapiFields.add("write");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SyncV1ServiceDocumentDocumentPermission
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SyncV1ServiceDocumentDocumentPermission.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SyncV1ServiceDocumentDocumentPermission is not found in the empty JSON string", SyncV1ServiceDocumentDocumentPermission.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SyncV1ServiceDocumentDocumentPermission.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SyncV1ServiceDocumentDocumentPermission` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("document_sid") != null && !jsonObj.get("document_sid").isJsonNull()) && !jsonObj.get("document_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document_sid").toString()));
      }
      if ((jsonObj.get("identity") != null && !jsonObj.get("identity").isJsonNull()) && !jsonObj.get("identity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identity").toString()));
      }
      if ((jsonObj.get("service_sid") != null && !jsonObj.get("service_sid").isJsonNull()) && !jsonObj.get("service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SyncV1ServiceDocumentDocumentPermission.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SyncV1ServiceDocumentDocumentPermission' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SyncV1ServiceDocumentDocumentPermission> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SyncV1ServiceDocumentDocumentPermission.class));

       return (TypeAdapter<T>) new TypeAdapter<SyncV1ServiceDocumentDocumentPermission>() {
           @Override
           public void write(JsonWriter out, SyncV1ServiceDocumentDocumentPermission value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SyncV1ServiceDocumentDocumentPermission read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SyncV1ServiceDocumentDocumentPermission given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SyncV1ServiceDocumentDocumentPermission
   * @throws IOException if the JSON string is invalid with respect to SyncV1ServiceDocumentDocumentPermission
   */
  public static SyncV1ServiceDocumentDocumentPermission fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SyncV1ServiceDocumentDocumentPermission.class);
  }

  /**
   * Convert an instance of SyncV1ServiceDocumentDocumentPermission to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

