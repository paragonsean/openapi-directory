/*
 * Twilio - Sync
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SyncV1ServiceSyncMapSyncMapItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:41.285428-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SyncV1ServiceSyncMapSyncMapItem {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Object data = null;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_EXPIRES = "date_expires";
  @SerializedName(SERIALIZED_NAME_DATE_EXPIRES)
  private OffsetDateTime dateExpires;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private String key;

  public static final String SERIALIZED_NAME_MAP_SID = "map_sid";
  @SerializedName(SERIALIZED_NAME_MAP_SID)
  private String mapSid;

  public static final String SERIALIZED_NAME_REVISION = "revision";
  @SerializedName(SERIALIZED_NAME_REVISION)
  private String revision;

  public static final String SERIALIZED_NAME_SERVICE_SID = "service_sid";
  @SerializedName(SERIALIZED_NAME_SERVICE_SID)
  private String serviceSid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public SyncV1ServiceSyncMapSyncMapItem() {
  }

  public SyncV1ServiceSyncMapSyncMapItem accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Map Item resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public SyncV1ServiceSyncMapSyncMapItem createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * The identity of the Map Item&#39;s creator. If the Map Item is created from the client SDK, the value matches the Access Token&#39;s &#x60;identity&#x60; field. If the Map Item was created from the REST API, the value is &#x60;system&#x60;.
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public SyncV1ServiceSyncMapSyncMapItem data(Object data) {
    this.data = data;
    return this;
  }

  /**
   * An arbitrary, schema-less object that the Map Item stores. Can be up to 16 KiB in length.
   * @return data
   */
  @javax.annotation.Nullable
  public Object getData() {
    return data;
  }

  public void setData(Object data) {
    this.data = data;
  }


  public SyncV1ServiceSyncMapSyncMapItem dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public SyncV1ServiceSyncMapSyncMapItem dateExpires(OffsetDateTime dateExpires) {
    this.dateExpires = dateExpires;
    return this;
  }

  /**
   * The date and time in GMT when the Map Item expires and will be deleted, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. If the Map Item does not expire, this value is &#x60;null&#x60;.  The Map Item might not be deleted immediately after it expires.
   * @return dateExpires
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateExpires() {
    return dateExpires;
  }

  public void setDateExpires(OffsetDateTime dateExpires) {
    this.dateExpires = dateExpires;
  }


  public SyncV1ServiceSyncMapSyncMapItem dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public SyncV1ServiceSyncMapSyncMapItem key(String key) {
    this.key = key;
    return this;
  }

  /**
   * The unique, user-defined key for the Map Item.
   * @return key
   */
  @javax.annotation.Nullable
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }


  public SyncV1ServiceSyncMapSyncMapItem mapSid(String mapSid) {
    this.mapSid = mapSid;
    return this;
  }

  /**
   * The SID of the Sync Map that contains the Map Item.
   * @return mapSid
   */
  @javax.annotation.Nullable
  public String getMapSid() {
    return mapSid;
  }

  public void setMapSid(String mapSid) {
    this.mapSid = mapSid;
  }


  public SyncV1ServiceSyncMapSyncMapItem revision(String revision) {
    this.revision = revision;
    return this;
  }

  /**
   * The current revision of the Map Item, represented as a string.
   * @return revision
   */
  @javax.annotation.Nullable
  public String getRevision() {
    return revision;
  }

  public void setRevision(String revision) {
    this.revision = revision;
  }


  public SyncV1ServiceSyncMapSyncMapItem serviceSid(String serviceSid) {
    this.serviceSid = serviceSid;
    return this;
  }

  /**
   * The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) the resource is associated with.
   * @return serviceSid
   */
  @javax.annotation.Nullable
  public String getServiceSid() {
    return serviceSid;
  }

  public void setServiceSid(String serviceSid) {
    this.serviceSid = serviceSid;
  }


  public SyncV1ServiceSyncMapSyncMapItem url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Map Item resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SyncV1ServiceSyncMapSyncMapItem syncV1ServiceSyncMapSyncMapItem = (SyncV1ServiceSyncMapSyncMapItem) o;
    return Objects.equals(this.accountSid, syncV1ServiceSyncMapSyncMapItem.accountSid) &&
        Objects.equals(this.createdBy, syncV1ServiceSyncMapSyncMapItem.createdBy) &&
        Objects.equals(this.data, syncV1ServiceSyncMapSyncMapItem.data) &&
        Objects.equals(this.dateCreated, syncV1ServiceSyncMapSyncMapItem.dateCreated) &&
        Objects.equals(this.dateExpires, syncV1ServiceSyncMapSyncMapItem.dateExpires) &&
        Objects.equals(this.dateUpdated, syncV1ServiceSyncMapSyncMapItem.dateUpdated) &&
        Objects.equals(this.key, syncV1ServiceSyncMapSyncMapItem.key) &&
        Objects.equals(this.mapSid, syncV1ServiceSyncMapSyncMapItem.mapSid) &&
        Objects.equals(this.revision, syncV1ServiceSyncMapSyncMapItem.revision) &&
        Objects.equals(this.serviceSid, syncV1ServiceSyncMapSyncMapItem.serviceSid) &&
        Objects.equals(this.url, syncV1ServiceSyncMapSyncMapItem.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, createdBy, data, dateCreated, dateExpires, dateUpdated, key, mapSid, revision, serviceSid, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SyncV1ServiceSyncMapSyncMapItem {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateExpires: ").append(toIndentedString(dateExpires)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    mapSid: ").append(toIndentedString(mapSid)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    serviceSid: ").append(toIndentedString(serviceSid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("created_by");
    openapiFields.add("data");
    openapiFields.add("date_created");
    openapiFields.add("date_expires");
    openapiFields.add("date_updated");
    openapiFields.add("key");
    openapiFields.add("map_sid");
    openapiFields.add("revision");
    openapiFields.add("service_sid");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SyncV1ServiceSyncMapSyncMapItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SyncV1ServiceSyncMapSyncMapItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SyncV1ServiceSyncMapSyncMapItem is not found in the empty JSON string", SyncV1ServiceSyncMapSyncMapItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SyncV1ServiceSyncMapSyncMapItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SyncV1ServiceSyncMapSyncMapItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("created_by") != null && !jsonObj.get("created_by").isJsonNull()) && !jsonObj.get("created_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_by").toString()));
      }
      if ((jsonObj.get("key") != null && !jsonObj.get("key").isJsonNull()) && !jsonObj.get("key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("key").toString()));
      }
      if ((jsonObj.get("map_sid") != null && !jsonObj.get("map_sid").isJsonNull()) && !jsonObj.get("map_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `map_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("map_sid").toString()));
      }
      if ((jsonObj.get("revision") != null && !jsonObj.get("revision").isJsonNull()) && !jsonObj.get("revision").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revision` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revision").toString()));
      }
      if ((jsonObj.get("service_sid") != null && !jsonObj.get("service_sid").isJsonNull()) && !jsonObj.get("service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SyncV1ServiceSyncMapSyncMapItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SyncV1ServiceSyncMapSyncMapItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SyncV1ServiceSyncMapSyncMapItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SyncV1ServiceSyncMapSyncMapItem.class));

       return (TypeAdapter<T>) new TypeAdapter<SyncV1ServiceSyncMapSyncMapItem>() {
           @Override
           public void write(JsonWriter out, SyncV1ServiceSyncMapSyncMapItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SyncV1ServiceSyncMapSyncMapItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SyncV1ServiceSyncMapSyncMapItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SyncV1ServiceSyncMapSyncMapItem
   * @throws IOException if the JSON string is invalid with respect to SyncV1ServiceSyncMapSyncMapItem
   */
  public static SyncV1ServiceSyncMapSyncMapItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SyncV1ServiceSyncMapSyncMapItem.class);
  }

  /**
   * Convert an instance of SyncV1ServiceSyncMapSyncMapItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

