/*
 * Twilio - Sync
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SyncV1Service
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:27:41.285428-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SyncV1Service {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ACL_ENABLED = "acl_enabled";
  @SerializedName(SERIALIZED_NAME_ACL_ENABLED)
  private Boolean aclEnabled;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_REACHABILITY_DEBOUNCING_ENABLED = "reachability_debouncing_enabled";
  @SerializedName(SERIALIZED_NAME_REACHABILITY_DEBOUNCING_ENABLED)
  private Boolean reachabilityDebouncingEnabled;

  public static final String SERIALIZED_NAME_REACHABILITY_DEBOUNCING_WINDOW = "reachability_debouncing_window";
  @SerializedName(SERIALIZED_NAME_REACHABILITY_DEBOUNCING_WINDOW)
  private Integer reachabilityDebouncingWindow;

  public static final String SERIALIZED_NAME_REACHABILITY_WEBHOOKS_ENABLED = "reachability_webhooks_enabled";
  @SerializedName(SERIALIZED_NAME_REACHABILITY_WEBHOOKS_ENABLED)
  private Boolean reachabilityWebhooksEnabled;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_UNIQUE_NAME = "unique_name";
  @SerializedName(SERIALIZED_NAME_UNIQUE_NAME)
  private String uniqueName;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_WEBHOOK_URL = "webhook_url";
  @SerializedName(SERIALIZED_NAME_WEBHOOK_URL)
  private URI webhookUrl;

  public static final String SERIALIZED_NAME_WEBHOOKS_FROM_REST_ENABLED = "webhooks_from_rest_enabled";
  @SerializedName(SERIALIZED_NAME_WEBHOOKS_FROM_REST_ENABLED)
  private Boolean webhooksFromRestEnabled;

  public SyncV1Service() {
  }

  public SyncV1Service accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public SyncV1Service aclEnabled(Boolean aclEnabled) {
    this.aclEnabled = aclEnabled;
    return this;
  }

  /**
   * Whether token identities in the Service must be granted access to Sync objects by using the [Permissions](https://www.twilio.com/docs/sync/api/sync-permissions) resource. It is disabled (false) by default.
   * @return aclEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAclEnabled() {
    return aclEnabled;
  }

  public void setAclEnabled(Boolean aclEnabled) {
    this.aclEnabled = aclEnabled;
  }


  public SyncV1Service dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public SyncV1Service dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public SyncV1Service friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The string that you assigned to describe the resource.
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public SyncV1Service links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * The URLs of related resources.
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public SyncV1Service reachabilityDebouncingEnabled(Boolean reachabilityDebouncingEnabled) {
    this.reachabilityDebouncingEnabled = reachabilityDebouncingEnabled;
    return this;
  }

  /**
   * Whether every &#x60;endpoint_disconnected&#x60; event should occur after a configurable delay. The default is &#x60;false&#x60;, where the &#x60;endpoint_disconnected&#x60; event occurs immediately after disconnection. When &#x60;true&#x60;, intervening reconnections can prevent the &#x60;endpoint_disconnected&#x60; event.
   * @return reachabilityDebouncingEnabled
   */
  @javax.annotation.Nullable
  public Boolean getReachabilityDebouncingEnabled() {
    return reachabilityDebouncingEnabled;
  }

  public void setReachabilityDebouncingEnabled(Boolean reachabilityDebouncingEnabled) {
    this.reachabilityDebouncingEnabled = reachabilityDebouncingEnabled;
  }


  public SyncV1Service reachabilityDebouncingWindow(Integer reachabilityDebouncingWindow) {
    this.reachabilityDebouncingWindow = reachabilityDebouncingWindow;
    return this;
  }

  /**
   * The reachability event delay in milliseconds if &#x60;reachability_debouncing_enabled&#x60; &#x3D; &#x60;true&#x60;.  Must be between 1,000 and 30,000 and defaults to 5,000. This is the number of milliseconds after the last running client disconnects, and a Sync identity is declared offline, before &#x60;webhook_url&#x60; is called, if all endpoints remain offline. A reconnection from the same identity by any endpoint during this interval prevents the reachability event from occurring.
   * @return reachabilityDebouncingWindow
   */
  @javax.annotation.Nullable
  public Integer getReachabilityDebouncingWindow() {
    return reachabilityDebouncingWindow;
  }

  public void setReachabilityDebouncingWindow(Integer reachabilityDebouncingWindow) {
    this.reachabilityDebouncingWindow = reachabilityDebouncingWindow;
  }


  public SyncV1Service reachabilityWebhooksEnabled(Boolean reachabilityWebhooksEnabled) {
    this.reachabilityWebhooksEnabled = reachabilityWebhooksEnabled;
    return this;
  }

  /**
   * Whether the service instance calls &#x60;webhook_url&#x60; when client endpoints connect to Sync. The default is &#x60;false&#x60;.
   * @return reachabilityWebhooksEnabled
   */
  @javax.annotation.Nullable
  public Boolean getReachabilityWebhooksEnabled() {
    return reachabilityWebhooksEnabled;
  }

  public void setReachabilityWebhooksEnabled(Boolean reachabilityWebhooksEnabled) {
    this.reachabilityWebhooksEnabled = reachabilityWebhooksEnabled;
  }


  public SyncV1Service sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Service resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public SyncV1Service uniqueName(String uniqueName) {
    this.uniqueName = uniqueName;
    return this;
  }

  /**
   * An application-defined string that uniquely identifies the resource. It can be used in place of the resource&#39;s &#x60;sid&#x60; in the URL to address the resource. It is a read-only property, it cannot be assigned using REST API.
   * @return uniqueName
   */
  @javax.annotation.Nullable
  public String getUniqueName() {
    return uniqueName;
  }

  public void setUniqueName(String uniqueName) {
    this.uniqueName = uniqueName;
  }


  public SyncV1Service url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Service resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public SyncV1Service webhookUrl(URI webhookUrl) {
    this.webhookUrl = webhookUrl;
    return this;
  }

  /**
   * The URL we call when Sync objects are manipulated.
   * @return webhookUrl
   */
  @javax.annotation.Nullable
  public URI getWebhookUrl() {
    return webhookUrl;
  }

  public void setWebhookUrl(URI webhookUrl) {
    this.webhookUrl = webhookUrl;
  }


  public SyncV1Service webhooksFromRestEnabled(Boolean webhooksFromRestEnabled) {
    this.webhooksFromRestEnabled = webhooksFromRestEnabled;
    return this;
  }

  /**
   * Whether the Service instance should call &#x60;webhook_url&#x60; when the REST API is used to update Sync objects. The default is &#x60;false&#x60;.
   * @return webhooksFromRestEnabled
   */
  @javax.annotation.Nullable
  public Boolean getWebhooksFromRestEnabled() {
    return webhooksFromRestEnabled;
  }

  public void setWebhooksFromRestEnabled(Boolean webhooksFromRestEnabled) {
    this.webhooksFromRestEnabled = webhooksFromRestEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SyncV1Service syncV1Service = (SyncV1Service) o;
    return Objects.equals(this.accountSid, syncV1Service.accountSid) &&
        Objects.equals(this.aclEnabled, syncV1Service.aclEnabled) &&
        Objects.equals(this.dateCreated, syncV1Service.dateCreated) &&
        Objects.equals(this.dateUpdated, syncV1Service.dateUpdated) &&
        Objects.equals(this.friendlyName, syncV1Service.friendlyName) &&
        Objects.equals(this.links, syncV1Service.links) &&
        Objects.equals(this.reachabilityDebouncingEnabled, syncV1Service.reachabilityDebouncingEnabled) &&
        Objects.equals(this.reachabilityDebouncingWindow, syncV1Service.reachabilityDebouncingWindow) &&
        Objects.equals(this.reachabilityWebhooksEnabled, syncV1Service.reachabilityWebhooksEnabled) &&
        Objects.equals(this.sid, syncV1Service.sid) &&
        Objects.equals(this.uniqueName, syncV1Service.uniqueName) &&
        Objects.equals(this.url, syncV1Service.url) &&
        Objects.equals(this.webhookUrl, syncV1Service.webhookUrl) &&
        Objects.equals(this.webhooksFromRestEnabled, syncV1Service.webhooksFromRestEnabled);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, aclEnabled, dateCreated, dateUpdated, friendlyName, links, reachabilityDebouncingEnabled, reachabilityDebouncingWindow, reachabilityWebhooksEnabled, sid, uniqueName, url, webhookUrl, webhooksFromRestEnabled);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SyncV1Service {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    aclEnabled: ").append(toIndentedString(aclEnabled)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    reachabilityDebouncingEnabled: ").append(toIndentedString(reachabilityDebouncingEnabled)).append("\n");
    sb.append("    reachabilityDebouncingWindow: ").append(toIndentedString(reachabilityDebouncingWindow)).append("\n");
    sb.append("    reachabilityWebhooksEnabled: ").append(toIndentedString(reachabilityWebhooksEnabled)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    uniqueName: ").append(toIndentedString(uniqueName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("    webhooksFromRestEnabled: ").append(toIndentedString(webhooksFromRestEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("acl_enabled");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("friendly_name");
    openapiFields.add("links");
    openapiFields.add("reachability_debouncing_enabled");
    openapiFields.add("reachability_debouncing_window");
    openapiFields.add("reachability_webhooks_enabled");
    openapiFields.add("sid");
    openapiFields.add("unique_name");
    openapiFields.add("url");
    openapiFields.add("webhook_url");
    openapiFields.add("webhooks_from_rest_enabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SyncV1Service
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SyncV1Service.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SyncV1Service is not found in the empty JSON string", SyncV1Service.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SyncV1Service.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SyncV1Service` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("unique_name") != null && !jsonObj.get("unique_name").isJsonNull()) && !jsonObj.get("unique_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unique_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unique_name").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("webhook_url") != null && !jsonObj.get("webhook_url").isJsonNull()) && !jsonObj.get("webhook_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webhook_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webhook_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SyncV1Service.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SyncV1Service' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SyncV1Service> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SyncV1Service.class));

       return (TypeAdapter<T>) new TypeAdapter<SyncV1Service>() {
           @Override
           public void write(JsonWriter out, SyncV1Service value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SyncV1Service read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SyncV1Service given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SyncV1Service
   * @throws IOException if the JSON string is invalid with respect to SyncV1Service
   */
  public static SyncV1Service fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SyncV1Service.class);
  }

  /**
   * Convert an instance of SyncV1Service to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

