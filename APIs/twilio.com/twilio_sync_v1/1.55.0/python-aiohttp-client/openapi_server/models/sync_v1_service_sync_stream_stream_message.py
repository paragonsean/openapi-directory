# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class SyncV1ServiceSyncStreamStreamMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: object=None, sid: str=None):
        """SyncV1ServiceSyncStreamStreamMessage - a model defined in OpenAPI

        :param data: The data of this SyncV1ServiceSyncStreamStreamMessage.
        :param sid: The sid of this SyncV1ServiceSyncStreamStreamMessage.
        """
        self.openapi_types = {
            'data': object,
            'sid': str
        }

        self.attribute_map = {
            'data': 'data',
            'sid': 'sid'
        }

        self._data = data
        self._sid = sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SyncV1ServiceSyncStreamStreamMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sync.v1.service.sync_stream.stream_message of this SyncV1ServiceSyncStreamStreamMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this SyncV1ServiceSyncStreamStreamMessage.

        An arbitrary, schema-less object that contains the Stream Message body. Can be up to 4 KiB in length.

        :return: The data of this SyncV1ServiceSyncStreamStreamMessage.
        :rtype: object
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this SyncV1ServiceSyncStreamStreamMessage.

        An arbitrary, schema-less object that contains the Stream Message body. Can be up to 4 KiB in length.

        :param data: The data of this SyncV1ServiceSyncStreamStreamMessage.
        :type data: object
        """

        self._data = data

    @property
    def sid(self):
        """Gets the sid of this SyncV1ServiceSyncStreamStreamMessage.

        The unique string that we created to identify the Stream Message resource.

        :return: The sid of this SyncV1ServiceSyncStreamStreamMessage.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this SyncV1ServiceSyncStreamStreamMessage.

        The unique string that we created to identify the Stream Message resource.

        :param sid: The sid of this SyncV1ServiceSyncStreamStreamMessage.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^TZ[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^TZ[0-9a-fA-F]{32}$/`")

        self._sid = sid
