# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class SyncV1ServiceSyncMapSyncMapItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, created_by: str=None, data: object=None, date_created: datetime=None, date_expires: datetime=None, date_updated: datetime=None, key: str=None, map_sid: str=None, revision: str=None, service_sid: str=None, url: str=None):
        """SyncV1ServiceSyncMapSyncMapItem - a model defined in OpenAPI

        :param account_sid: The account_sid of this SyncV1ServiceSyncMapSyncMapItem.
        :param created_by: The created_by of this SyncV1ServiceSyncMapSyncMapItem.
        :param data: The data of this SyncV1ServiceSyncMapSyncMapItem.
        :param date_created: The date_created of this SyncV1ServiceSyncMapSyncMapItem.
        :param date_expires: The date_expires of this SyncV1ServiceSyncMapSyncMapItem.
        :param date_updated: The date_updated of this SyncV1ServiceSyncMapSyncMapItem.
        :param key: The key of this SyncV1ServiceSyncMapSyncMapItem.
        :param map_sid: The map_sid of this SyncV1ServiceSyncMapSyncMapItem.
        :param revision: The revision of this SyncV1ServiceSyncMapSyncMapItem.
        :param service_sid: The service_sid of this SyncV1ServiceSyncMapSyncMapItem.
        :param url: The url of this SyncV1ServiceSyncMapSyncMapItem.
        """
        self.openapi_types = {
            'account_sid': str,
            'created_by': str,
            'data': object,
            'date_created': datetime,
            'date_expires': datetime,
            'date_updated': datetime,
            'key': str,
            'map_sid': str,
            'revision': str,
            'service_sid': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'created_by': 'created_by',
            'data': 'data',
            'date_created': 'date_created',
            'date_expires': 'date_expires',
            'date_updated': 'date_updated',
            'key': 'key',
            'map_sid': 'map_sid',
            'revision': 'revision',
            'service_sid': 'service_sid',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._created_by = created_by
        self._data = data
        self._date_created = date_created
        self._date_expires = date_expires
        self._date_updated = date_updated
        self._key = key
        self._map_sid = map_sid
        self._revision = revision
        self._service_sid = service_sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SyncV1ServiceSyncMapSyncMapItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sync.v1.service.sync_map.sync_map_item of this SyncV1ServiceSyncMapSyncMapItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this SyncV1ServiceSyncMapSyncMapItem.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Map Item resource.

        :return: The account_sid of this SyncV1ServiceSyncMapSyncMapItem.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this SyncV1ServiceSyncMapSyncMapItem.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Map Item resource.

        :param account_sid: The account_sid of this SyncV1ServiceSyncMapSyncMapItem.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def created_by(self):
        """Gets the created_by of this SyncV1ServiceSyncMapSyncMapItem.

        The identity of the Map Item's creator. If the Map Item is created from the client SDK, the value matches the Access Token's `identity` field. If the Map Item was created from the REST API, the value is `system`.

        :return: The created_by of this SyncV1ServiceSyncMapSyncMapItem.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this SyncV1ServiceSyncMapSyncMapItem.

        The identity of the Map Item's creator. If the Map Item is created from the client SDK, the value matches the Access Token's `identity` field. If the Map Item was created from the REST API, the value is `system`.

        :param created_by: The created_by of this SyncV1ServiceSyncMapSyncMapItem.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def data(self):
        """Gets the data of this SyncV1ServiceSyncMapSyncMapItem.

        An arbitrary, schema-less object that the Map Item stores. Can be up to 16 KiB in length.

        :return: The data of this SyncV1ServiceSyncMapSyncMapItem.
        :rtype: object
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this SyncV1ServiceSyncMapSyncMapItem.

        An arbitrary, schema-less object that the Map Item stores. Can be up to 16 KiB in length.

        :param data: The data of this SyncV1ServiceSyncMapSyncMapItem.
        :type data: object
        """

        self._data = data

    @property
    def date_created(self):
        """Gets the date_created of this SyncV1ServiceSyncMapSyncMapItem.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this SyncV1ServiceSyncMapSyncMapItem.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this SyncV1ServiceSyncMapSyncMapItem.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this SyncV1ServiceSyncMapSyncMapItem.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_expires(self):
        """Gets the date_expires of this SyncV1ServiceSyncMapSyncMapItem.

        The date and time in GMT when the Map Item expires and will be deleted, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. If the Map Item does not expire, this value is `null`.  The Map Item might not be deleted immediately after it expires.

        :return: The date_expires of this SyncV1ServiceSyncMapSyncMapItem.
        :rtype: datetime
        """
        return self._date_expires

    @date_expires.setter
    def date_expires(self, date_expires):
        """Sets the date_expires of this SyncV1ServiceSyncMapSyncMapItem.

        The date and time in GMT when the Map Item expires and will be deleted, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. If the Map Item does not expire, this value is `null`.  The Map Item might not be deleted immediately after it expires.

        :param date_expires: The date_expires of this SyncV1ServiceSyncMapSyncMapItem.
        :type date_expires: datetime
        """

        self._date_expires = date_expires

    @property
    def date_updated(self):
        """Gets the date_updated of this SyncV1ServiceSyncMapSyncMapItem.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_updated of this SyncV1ServiceSyncMapSyncMapItem.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this SyncV1ServiceSyncMapSyncMapItem.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_updated: The date_updated of this SyncV1ServiceSyncMapSyncMapItem.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def key(self):
        """Gets the key of this SyncV1ServiceSyncMapSyncMapItem.

        The unique, user-defined key for the Map Item.

        :return: The key of this SyncV1ServiceSyncMapSyncMapItem.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this SyncV1ServiceSyncMapSyncMapItem.

        The unique, user-defined key for the Map Item.

        :param key: The key of this SyncV1ServiceSyncMapSyncMapItem.
        :type key: str
        """

        self._key = key

    @property
    def map_sid(self):
        """Gets the map_sid of this SyncV1ServiceSyncMapSyncMapItem.

        The SID of the Sync Map that contains the Map Item.

        :return: The map_sid of this SyncV1ServiceSyncMapSyncMapItem.
        :rtype: str
        """
        return self._map_sid

    @map_sid.setter
    def map_sid(self, map_sid):
        """Sets the map_sid of this SyncV1ServiceSyncMapSyncMapItem.

        The SID of the Sync Map that contains the Map Item.

        :param map_sid: The map_sid of this SyncV1ServiceSyncMapSyncMapItem.
        :type map_sid: str
        """
        if map_sid is not None and len(map_sid) > 34:
            raise ValueError("Invalid value for `map_sid`, length must be less than or equal to `34`")
        if map_sid is not None and len(map_sid) < 34:
            raise ValueError("Invalid value for `map_sid`, length must be greater than or equal to `34`")
        if map_sid is not None and not re.search(r'^MP[0-9a-fA-F]{32}$', map_sid):
            raise ValueError("Invalid value for `map_sid`, must be a follow pattern or equal to `/^MP[0-9a-fA-F]{32}$/`")

        self._map_sid = map_sid

    @property
    def revision(self):
        """Gets the revision of this SyncV1ServiceSyncMapSyncMapItem.

        The current revision of the Map Item, represented as a string.

        :return: The revision of this SyncV1ServiceSyncMapSyncMapItem.
        :rtype: str
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this SyncV1ServiceSyncMapSyncMapItem.

        The current revision of the Map Item, represented as a string.

        :param revision: The revision of this SyncV1ServiceSyncMapSyncMapItem.
        :type revision: str
        """

        self._revision = revision

    @property
    def service_sid(self):
        """Gets the service_sid of this SyncV1ServiceSyncMapSyncMapItem.

        The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) the resource is associated with.

        :return: The service_sid of this SyncV1ServiceSyncMapSyncMapItem.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this SyncV1ServiceSyncMapSyncMapItem.

        The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) the resource is associated with.

        :param service_sid: The service_sid of this SyncV1ServiceSyncMapSyncMapItem.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def url(self):
        """Gets the url of this SyncV1ServiceSyncMapSyncMapItem.

        The absolute URL of the Map Item resource.

        :return: The url of this SyncV1ServiceSyncMapSyncMapItem.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this SyncV1ServiceSyncMapSyncMapItem.

        The absolute URL of the Map Item resource.

        :param url: The url of this SyncV1ServiceSyncMapSyncMapItem.
        :type url: str
        """

        self._url = url
