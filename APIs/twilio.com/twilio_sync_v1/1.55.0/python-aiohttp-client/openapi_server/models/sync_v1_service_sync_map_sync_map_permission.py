# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class SyncV1ServiceSyncMapSyncMapPermission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, identity: str=None, manage: bool=None, map_sid: str=None, read: bool=None, service_sid: str=None, url: str=None, write: bool=None):
        """SyncV1ServiceSyncMapSyncMapPermission - a model defined in OpenAPI

        :param account_sid: The account_sid of this SyncV1ServiceSyncMapSyncMapPermission.
        :param identity: The identity of this SyncV1ServiceSyncMapSyncMapPermission.
        :param manage: The manage of this SyncV1ServiceSyncMapSyncMapPermission.
        :param map_sid: The map_sid of this SyncV1ServiceSyncMapSyncMapPermission.
        :param read: The read of this SyncV1ServiceSyncMapSyncMapPermission.
        :param service_sid: The service_sid of this SyncV1ServiceSyncMapSyncMapPermission.
        :param url: The url of this SyncV1ServiceSyncMapSyncMapPermission.
        :param write: The write of this SyncV1ServiceSyncMapSyncMapPermission.
        """
        self.openapi_types = {
            'account_sid': str,
            'identity': str,
            'manage': bool,
            'map_sid': str,
            'read': bool,
            'service_sid': str,
            'url': str,
            'write': bool
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'identity': 'identity',
            'manage': 'manage',
            'map_sid': 'map_sid',
            'read': 'read',
            'service_sid': 'service_sid',
            'url': 'url',
            'write': 'write'
        }

        self._account_sid = account_sid
        self._identity = identity
        self._manage = manage
        self._map_sid = map_sid
        self._read = read
        self._service_sid = service_sid
        self._url = url
        self._write = write

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SyncV1ServiceSyncMapSyncMapPermission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sync.v1.service.sync_map.sync_map_permission of this SyncV1ServiceSyncMapSyncMapPermission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this SyncV1ServiceSyncMapSyncMapPermission.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Sync Map Permission resource.

        :return: The account_sid of this SyncV1ServiceSyncMapSyncMapPermission.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this SyncV1ServiceSyncMapSyncMapPermission.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Sync Map Permission resource.

        :param account_sid: The account_sid of this SyncV1ServiceSyncMapSyncMapPermission.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def identity(self):
        """Gets the identity of this SyncV1ServiceSyncMapSyncMapPermission.

        The application-defined string that uniquely identifies the resource's User within the Service to an FPA token.

        :return: The identity of this SyncV1ServiceSyncMapSyncMapPermission.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this SyncV1ServiceSyncMapSyncMapPermission.

        The application-defined string that uniquely identifies the resource's User within the Service to an FPA token.

        :param identity: The identity of this SyncV1ServiceSyncMapSyncMapPermission.
        :type identity: str
        """

        self._identity = identity

    @property
    def manage(self):
        """Gets the manage of this SyncV1ServiceSyncMapSyncMapPermission.

        Whether the identity can delete the Sync Map.

        :return: The manage of this SyncV1ServiceSyncMapSyncMapPermission.
        :rtype: bool
        """
        return self._manage

    @manage.setter
    def manage(self, manage):
        """Sets the manage of this SyncV1ServiceSyncMapSyncMapPermission.

        Whether the identity can delete the Sync Map.

        :param manage: The manage of this SyncV1ServiceSyncMapSyncMapPermission.
        :type manage: bool
        """

        self._manage = manage

    @property
    def map_sid(self):
        """Gets the map_sid of this SyncV1ServiceSyncMapSyncMapPermission.

        The SID of the Sync Map to which the Permission applies.

        :return: The map_sid of this SyncV1ServiceSyncMapSyncMapPermission.
        :rtype: str
        """
        return self._map_sid

    @map_sid.setter
    def map_sid(self, map_sid):
        """Sets the map_sid of this SyncV1ServiceSyncMapSyncMapPermission.

        The SID of the Sync Map to which the Permission applies.

        :param map_sid: The map_sid of this SyncV1ServiceSyncMapSyncMapPermission.
        :type map_sid: str
        """
        if map_sid is not None and len(map_sid) > 34:
            raise ValueError("Invalid value for `map_sid`, length must be less than or equal to `34`")
        if map_sid is not None and len(map_sid) < 34:
            raise ValueError("Invalid value for `map_sid`, length must be greater than or equal to `34`")
        if map_sid is not None and not re.search(r'^MP[0-9a-fA-F]{32}$', map_sid):
            raise ValueError("Invalid value for `map_sid`, must be a follow pattern or equal to `/^MP[0-9a-fA-F]{32}$/`")

        self._map_sid = map_sid

    @property
    def read(self):
        """Gets the read of this SyncV1ServiceSyncMapSyncMapPermission.

        Whether the identity can read the Sync Map and its Items.

        :return: The read of this SyncV1ServiceSyncMapSyncMapPermission.
        :rtype: bool
        """
        return self._read

    @read.setter
    def read(self, read):
        """Sets the read of this SyncV1ServiceSyncMapSyncMapPermission.

        Whether the identity can read the Sync Map and its Items.

        :param read: The read of this SyncV1ServiceSyncMapSyncMapPermission.
        :type read: bool
        """

        self._read = read

    @property
    def service_sid(self):
        """Gets the service_sid of this SyncV1ServiceSyncMapSyncMapPermission.

        The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) the resource is associated with.

        :return: The service_sid of this SyncV1ServiceSyncMapSyncMapPermission.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this SyncV1ServiceSyncMapSyncMapPermission.

        The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) the resource is associated with.

        :param service_sid: The service_sid of this SyncV1ServiceSyncMapSyncMapPermission.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def url(self):
        """Gets the url of this SyncV1ServiceSyncMapSyncMapPermission.

        The absolute URL of the Sync Map Permission resource.

        :return: The url of this SyncV1ServiceSyncMapSyncMapPermission.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this SyncV1ServiceSyncMapSyncMapPermission.

        The absolute URL of the Sync Map Permission resource.

        :param url: The url of this SyncV1ServiceSyncMapSyncMapPermission.
        :type url: str
        """

        self._url = url

    @property
    def write(self):
        """Gets the write of this SyncV1ServiceSyncMapSyncMapPermission.

        Whether the identity can create, update, and delete Items in the Sync Map.

        :return: The write of this SyncV1ServiceSyncMapSyncMapPermission.
        :rtype: bool
        """
        return self._write

    @write.setter
    def write(self, write):
        """Sets the write of this SyncV1ServiceSyncMapSyncMapPermission.

        Whether the identity can create, update, and delete Items in the Sync Map.

        :param write: The write of this SyncV1ServiceSyncMapSyncMapPermission.
        :type write: bool
        """

        self._write = write
