/**
 * Twilio - Sync
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListSyncListItemResponse from '../model/ListSyncListItemResponse';
import SyncListItemEnumQueryFromBoundType from '../model/SyncListItemEnumQueryFromBoundType';
import SyncListItemEnumQueryResultOrder from '../model/SyncListItemEnumQueryResultOrder';
import SyncV1ServiceSyncListSyncListItem from '../model/SyncV1ServiceSyncListSyncListItem';

/**
* SyncV1SyncListItem service.
* @module api/SyncV1SyncListItemApi
* @version 1.55.0
*/
export default class SyncV1SyncListItemApi {

    /**
    * Constructs a new SyncV1SyncListItemApi. 
    * @alias module:api/SyncV1SyncListItemApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createSyncListItem operation.
     * @callback module:api/SyncV1SyncListItemApi~createSyncListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SyncV1ServiceSyncListSyncListItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} serviceSid The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) to create the new List Item in.
     * @param {String} listSid The SID of the Sync List to add the new List Item to. Can be the Sync List resource's `sid` or its `unique_name`.
     * @param {Object} data A JSON string that represents an arbitrary, schema-less object that the List Item stores. Can be up to 16 KiB in length.
     * @param {Object} opts Optional parameters
     * @param {Number} [collectionTtl] How long, [in seconds](https://www.twilio.com/docs/sync/limits#sync-payload-limits), before the List Item's parent Sync List expires (time-to-live) and is deleted.
     * @param {Number} [itemTtl] How long, [in seconds](https://www.twilio.com/docs/sync/limits#sync-payload-limits), before the List Item expires (time-to-live) and is deleted.
     * @param {Number} [ttl] An alias for `item_ttl`. If both parameters are provided, this value is ignored.
     * @param {module:api/SyncV1SyncListItemApi~createSyncListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SyncV1ServiceSyncListSyncListItem}
     */
    createSyncListItem(serviceSid, listSid, data, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling createSyncListItem");
      }
      // verify the required parameter 'listSid' is set
      if (listSid === undefined || listSid === null) {
        throw new Error("Missing the required parameter 'listSid' when calling createSyncListItem");
      }
      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling createSyncListItem");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'ListSid': listSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'CollectionTtl': opts['collectionTtl'],
        'Data': data,
        'ItemTtl': opts['itemTtl'],
        'Ttl': opts['ttl']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = SyncV1ServiceSyncListSyncListItem;
      let basePaths = ['https://sync.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Lists/{ListSid}/Items', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSyncListItem operation.
     * @callback module:api/SyncV1SyncListItemApi~deleteSyncListItemCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} serviceSid The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Sync List Item resource to delete.
     * @param {String} listSid The SID of the Sync List with the Sync List Item resource to delete. Can be the Sync List resource's `sid` or its `unique_name`.
     * @param {Number} index The index of the Sync List Item resource to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [ifMatch] If provided, applies this mutation if (and only if) the “revision” field of this [map item] matches the provided value. This matches the semantics of (and is implemented with) the HTTP [If-Match header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match).
     * @param {module:api/SyncV1SyncListItemApi~deleteSyncListItemCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteSyncListItem(serviceSid, listSid, index, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling deleteSyncListItem");
      }
      // verify the required parameter 'listSid' is set
      if (listSid === undefined || listSid === null) {
        throw new Error("Missing the required parameter 'listSid' when calling deleteSyncListItem");
      }
      // verify the required parameter 'index' is set
      if (index === undefined || index === null) {
        throw new Error("Missing the required parameter 'index' when calling deleteSyncListItem");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'ListSid': listSid,
        'Index': index
      };
      let queryParams = {
      };
      let headerParams = {
        'If-Match': opts['ifMatch']
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://sync.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Lists/{ListSid}/Items/{Index}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchSyncListItem operation.
     * @callback module:api/SyncV1SyncListItemApi~fetchSyncListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SyncV1ServiceSyncListSyncListItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} serviceSid The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Sync List Item resource to fetch.
     * @param {String} listSid The SID of the Sync List with the Sync List Item resource to fetch. Can be the Sync List resource's `sid` or its `unique_name`.
     * @param {Number} index The index of the Sync List Item resource to fetch.
     * @param {module:api/SyncV1SyncListItemApi~fetchSyncListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SyncV1ServiceSyncListSyncListItem}
     */
    fetchSyncListItem(serviceSid, listSid, index, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling fetchSyncListItem");
      }
      // verify the required parameter 'listSid' is set
      if (listSid === undefined || listSid === null) {
        throw new Error("Missing the required parameter 'listSid' when calling fetchSyncListItem");
      }
      // verify the required parameter 'index' is set
      if (index === undefined || index === null) {
        throw new Error("Missing the required parameter 'index' when calling fetchSyncListItem");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'ListSid': listSid,
        'Index': index
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SyncV1ServiceSyncListSyncListItem;
      let basePaths = ['https://sync.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Lists/{ListSid}/Items/{Index}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listSyncListItem operation.
     * @callback module:api/SyncV1SyncListItemApi~listSyncListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListSyncListItemResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} serviceSid The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the List Item resources to read.
     * @param {String} listSid The SID of the Sync List with the List Items to read. Can be the Sync List resource's `sid` or its `unique_name`.
     * @param {Object} opts Optional parameters
     * @param {module:model/SyncListItemEnumQueryResultOrder} [order] How to order the List Items returned by their `index` value. Can be: `asc` (ascending) or `desc` (descending) and the default is ascending.
     * @param {String} [from] The `index` of the first Sync List Item resource to read. See also `bounds`.
     * @param {module:model/SyncListItemEnumQueryFromBoundType} [bounds] Whether to include the List Item referenced by the `from` parameter. Can be: `inclusive` to include the List Item referenced by the `from` parameter or `exclusive` to start with the next List Item. The default value is `inclusive`.
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/SyncV1SyncListItemApi~listSyncListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListSyncListItemResponse}
     */
    listSyncListItem(serviceSid, listSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling listSyncListItem");
      }
      // verify the required parameter 'listSid' is set
      if (listSid === undefined || listSid === null) {
        throw new Error("Missing the required parameter 'listSid' when calling listSyncListItem");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'ListSid': listSid
      };
      let queryParams = {
        'Order': opts['order'],
        'From': opts['from'],
        'Bounds': opts['bounds'],
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListSyncListItemResponse;
      let basePaths = ['https://sync.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Lists/{ListSid}/Items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSyncListItem operation.
     * @callback module:api/SyncV1SyncListItemApi~updateSyncListItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SyncV1ServiceSyncListSyncListItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} serviceSid The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Sync List Item resource to update.
     * @param {String} listSid The SID of the Sync List with the Sync List Item resource to update. Can be the Sync List resource's `sid` or its `unique_name`.
     * @param {Number} index The index of the Sync List Item resource to update.
     * @param {Object} opts Optional parameters
     * @param {String} [ifMatch] If provided, applies this mutation if (and only if) the “revision” field of this [map item] matches the provided value. This matches the semantics of (and is implemented with) the HTTP [If-Match header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match).
     * @param {Number} [collectionTtl] How long, [in seconds](https://www.twilio.com/docs/sync/limits#sync-payload-limits), before the List Item's parent Sync List expires (time-to-live) and is deleted. This parameter can only be used when the List Item's `data` or `ttl` is updated in the same request.
     * @param {Object} [data] A JSON string that represents an arbitrary, schema-less object that the List Item stores. Can be up to 16 KiB in length.
     * @param {Number} [itemTtl] How long, [in seconds](https://www.twilio.com/docs/sync/limits#sync-payload-limits), before the List Item expires (time-to-live) and is deleted.
     * @param {Number} [ttl] An alias for `item_ttl`. If both parameters are provided, this value is ignored.
     * @param {module:api/SyncV1SyncListItemApi~updateSyncListItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SyncV1ServiceSyncListSyncListItem}
     */
    updateSyncListItem(serviceSid, listSid, index, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling updateSyncListItem");
      }
      // verify the required parameter 'listSid' is set
      if (listSid === undefined || listSid === null) {
        throw new Error("Missing the required parameter 'listSid' when calling updateSyncListItem");
      }
      // verify the required parameter 'index' is set
      if (index === undefined || index === null) {
        throw new Error("Missing the required parameter 'index' when calling updateSyncListItem");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'ListSid': listSid,
        'Index': index
      };
      let queryParams = {
      };
      let headerParams = {
        'If-Match': opts['ifMatch']
      };
      let formParams = {
        'CollectionTtl': opts['collectionTtl'],
        'Data': opts['data'],
        'ItemTtl': opts['itemTtl'],
        'Ttl': opts['ttl']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = SyncV1ServiceSyncListSyncListItem;
      let basePaths = ['https://sync.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Lists/{ListSid}/Items/{Index}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
