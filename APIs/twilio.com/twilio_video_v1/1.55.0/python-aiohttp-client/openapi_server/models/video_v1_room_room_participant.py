# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.room_participant_enum_status import RoomParticipantEnumStatus
import re
from openapi_server import util


class VideoV1RoomRoomParticipant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, date_created: datetime=None, date_updated: datetime=None, duration: int=None, end_time: datetime=None, identity: str=None, links: object=None, room_sid: str=None, sid: str=None, start_time: datetime=None, status: RoomParticipantEnumStatus=None, url: str=None):
        """VideoV1RoomRoomParticipant - a model defined in OpenAPI

        :param account_sid: The account_sid of this VideoV1RoomRoomParticipant.
        :param date_created: The date_created of this VideoV1RoomRoomParticipant.
        :param date_updated: The date_updated of this VideoV1RoomRoomParticipant.
        :param duration: The duration of this VideoV1RoomRoomParticipant.
        :param end_time: The end_time of this VideoV1RoomRoomParticipant.
        :param identity: The identity of this VideoV1RoomRoomParticipant.
        :param links: The links of this VideoV1RoomRoomParticipant.
        :param room_sid: The room_sid of this VideoV1RoomRoomParticipant.
        :param sid: The sid of this VideoV1RoomRoomParticipant.
        :param start_time: The start_time of this VideoV1RoomRoomParticipant.
        :param status: The status of this VideoV1RoomRoomParticipant.
        :param url: The url of this VideoV1RoomRoomParticipant.
        """
        self.openapi_types = {
            'account_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'duration': int,
            'end_time': datetime,
            'identity': str,
            'links': object,
            'room_sid': str,
            'sid': str,
            'start_time': datetime,
            'status': RoomParticipantEnumStatus,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'duration': 'duration',
            'end_time': 'end_time',
            'identity': 'identity',
            'links': 'links',
            'room_sid': 'room_sid',
            'sid': 'sid',
            'start_time': 'start_time',
            'status': 'status',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._duration = duration
        self._end_time = end_time
        self._identity = identity
        self._links = links
        self._room_sid = room_sid
        self._sid = sid
        self._start_time = start_time
        self._status = status
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoV1RoomRoomParticipant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The video.v1.room.room_participant of this VideoV1RoomRoomParticipant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this VideoV1RoomRoomParticipant.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the RoomParticipant resource.

        :return: The account_sid of this VideoV1RoomRoomParticipant.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this VideoV1RoomRoomParticipant.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the RoomParticipant resource.

        :param account_sid: The account_sid of this VideoV1RoomRoomParticipant.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def date_created(self):
        """Gets the date_created of this VideoV1RoomRoomParticipant.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this VideoV1RoomRoomParticipant.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this VideoV1RoomRoomParticipant.

        The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this VideoV1RoomRoomParticipant.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this VideoV1RoomRoomParticipant.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_updated of this VideoV1RoomRoomParticipant.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this VideoV1RoomRoomParticipant.

        The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_updated: The date_updated of this VideoV1RoomRoomParticipant.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def duration(self):
        """Gets the duration of this VideoV1RoomRoomParticipant.

        The duration in seconds that the participant was `connected`. Populated only after the participant is `disconnected`.

        :return: The duration of this VideoV1RoomRoomParticipant.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this VideoV1RoomRoomParticipant.

        The duration in seconds that the participant was `connected`. Populated only after the participant is `disconnected`.

        :param duration: The duration of this VideoV1RoomRoomParticipant.
        :type duration: int
        """

        self._duration = duration

    @property
    def end_time(self):
        """Gets the end_time of this VideoV1RoomRoomParticipant.

        The time when the participant disconnected from the room in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#UTC) format.

        :return: The end_time of this VideoV1RoomRoomParticipant.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this VideoV1RoomRoomParticipant.

        The time when the participant disconnected from the room in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#UTC) format.

        :param end_time: The end_time of this VideoV1RoomRoomParticipant.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def identity(self):
        """Gets the identity of this VideoV1RoomRoomParticipant.

        The application-defined string that uniquely identifies the resource's User within a Room. If a client joins with an existing Identity, the existing client is disconnected. See [access tokens](https://www.twilio.com/docs/video/tutorials/user-identity-access-tokens) and [limits](https://www.twilio.com/docs/video/programmable-video-limits) for more info. 

        :return: The identity of this VideoV1RoomRoomParticipant.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this VideoV1RoomRoomParticipant.

        The application-defined string that uniquely identifies the resource's User within a Room. If a client joins with an existing Identity, the existing client is disconnected. See [access tokens](https://www.twilio.com/docs/video/tutorials/user-identity-access-tokens) and [limits](https://www.twilio.com/docs/video/programmable-video-limits) for more info. 

        :param identity: The identity of this VideoV1RoomRoomParticipant.
        :type identity: str
        """

        self._identity = identity

    @property
    def links(self):
        """Gets the links of this VideoV1RoomRoomParticipant.

        The URLs of related resources.

        :return: The links of this VideoV1RoomRoomParticipant.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this VideoV1RoomRoomParticipant.

        The URLs of related resources.

        :param links: The links of this VideoV1RoomRoomParticipant.
        :type links: object
        """

        self._links = links

    @property
    def room_sid(self):
        """Gets the room_sid of this VideoV1RoomRoomParticipant.

        The SID of the participant's room.

        :return: The room_sid of this VideoV1RoomRoomParticipant.
        :rtype: str
        """
        return self._room_sid

    @room_sid.setter
    def room_sid(self, room_sid):
        """Sets the room_sid of this VideoV1RoomRoomParticipant.

        The SID of the participant's room.

        :param room_sid: The room_sid of this VideoV1RoomRoomParticipant.
        :type room_sid: str
        """
        if room_sid is not None and len(room_sid) > 34:
            raise ValueError("Invalid value for `room_sid`, length must be less than or equal to `34`")
        if room_sid is not None and len(room_sid) < 34:
            raise ValueError("Invalid value for `room_sid`, length must be greater than or equal to `34`")
        if room_sid is not None and not re.search(r'^RM[0-9a-fA-F]{32}$', room_sid):
            raise ValueError("Invalid value for `room_sid`, must be a follow pattern or equal to `/^RM[0-9a-fA-F]{32}$/`")

        self._room_sid = room_sid

    @property
    def sid(self):
        """Gets the sid of this VideoV1RoomRoomParticipant.

        The unique string that we created to identify the RoomParticipant resource.

        :return: The sid of this VideoV1RoomRoomParticipant.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this VideoV1RoomRoomParticipant.

        The unique string that we created to identify the RoomParticipant resource.

        :param sid: The sid of this VideoV1RoomRoomParticipant.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^PA[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^PA[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def start_time(self):
        """Gets the start_time of this VideoV1RoomRoomParticipant.

        The time of participant connected to the room in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#UTC) format.

        :return: The start_time of this VideoV1RoomRoomParticipant.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this VideoV1RoomRoomParticipant.

        The time of participant connected to the room in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#UTC) format.

        :param start_time: The start_time of this VideoV1RoomRoomParticipant.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def status(self):
        """Gets the status of this VideoV1RoomRoomParticipant.


        :return: The status of this VideoV1RoomRoomParticipant.
        :rtype: RoomParticipantEnumStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this VideoV1RoomRoomParticipant.


        :param status: The status of this VideoV1RoomRoomParticipant.
        :type status: RoomParticipantEnumStatus
        """

        self._status = status

    @property
    def url(self):
        """Gets the url of this VideoV1RoomRoomParticipant.

        The absolute URL of the resource.

        :return: The url of this VideoV1RoomRoomParticipant.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this VideoV1RoomRoomParticipant.

        The absolute URL of the resource.

        :param url: The url of this VideoV1RoomRoomParticipant.
        :type url: str
        """

        self._url = url
