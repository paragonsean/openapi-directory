# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all: bool=None, kind: str=None, priority: str=None, publisher: str=None, track: str=None, type: str=None):
        """VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner - a model defined in OpenAPI

        :param all: The all of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :param kind: The kind of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :param priority: The priority of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :param publisher: The publisher of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :param track: The track of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :param type: The type of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        """
        self.openapi_types = {
            'all': bool,
            'kind': str,
            'priority': str,
            'publisher': str,
            'track': str,
            'type': str
        }

        self.attribute_map = {
            'all': 'all',
            'kind': 'kind',
            'priority': 'priority',
            'publisher': 'publisher',
            'track': 'track',
            'type': 'type'
        }

        self._all = all
        self._kind = kind
        self._priority = priority
        self._publisher = publisher
        self._track = track
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The video_v1_room_room_participant_room_participant_subscribe_rule_rules_inner of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all(self):
        """Gets the all of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.


        :return: The all of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :rtype: bool
        """
        return self._all

    @all.setter
    def all(self, all):
        """Sets the all of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.


        :param all: The all of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :type all: bool
        """

        self._all = all

    @property
    def kind(self):
        """Gets the kind of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.


        :return: The kind of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.


        :param kind: The kind of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :type kind: str
        """

        self._kind = kind

    @property
    def priority(self):
        """Gets the priority of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.


        :return: The priority of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :rtype: str
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.


        :param priority: The priority of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :type priority: str
        """

        self._priority = priority

    @property
    def publisher(self):
        """Gets the publisher of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.


        :return: The publisher of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :rtype: str
        """
        return self._publisher

    @publisher.setter
    def publisher(self, publisher):
        """Sets the publisher of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.


        :param publisher: The publisher of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :type publisher: str
        """

        self._publisher = publisher

    @property
    def track(self):
        """Gets the track of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.


        :return: The track of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :rtype: str
        """
        return self._track

    @track.setter
    def track(self, track):
        """Sets the track of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.


        :param track: The track of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :type track: str
        """

        self._track = track

    @property
    def type(self):
        """Gets the type of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.


        :return: The type of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.


        :param type: The type of this VideoV1RoomRoomParticipantRoomParticipantSubscribeRuleRulesInner.
        :type type: str
        """

        self._type = type
