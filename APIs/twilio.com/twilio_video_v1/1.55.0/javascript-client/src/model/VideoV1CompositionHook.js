/**
 * Twilio - Video
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompositionHookEnumFormat from './CompositionHookEnumFormat';

/**
 * The VideoV1CompositionHook model module.
 * @module model/VideoV1CompositionHook
 * @version 1.55.0
 */
class VideoV1CompositionHook {
    /**
     * Constructs a new <code>VideoV1CompositionHook</code>.
     * @alias module:model/VideoV1CompositionHook
     */
    constructor() { 
        
        VideoV1CompositionHook.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VideoV1CompositionHook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoV1CompositionHook} obj Optional instance to populate.
     * @return {module:model/VideoV1CompositionHook} The populated <code>VideoV1CompositionHook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoV1CompositionHook();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('audio_sources')) {
                obj['audio_sources'] = ApiClient.convertToType(data['audio_sources'], ['String']);
            }
            if (data.hasOwnProperty('audio_sources_excluded')) {
                obj['audio_sources_excluded'] = ApiClient.convertToType(data['audio_sources_excluded'], ['String']);
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = CompositionHookEnumFormat.constructFromObject(data['format']);
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('resolution')) {
                obj['resolution'] = ApiClient.convertToType(data['resolution'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('status_callback')) {
                obj['status_callback'] = ApiClient.convertToType(data['status_callback'], 'String');
            }
            if (data.hasOwnProperty('status_callback_method')) {
                obj['status_callback_method'] = ApiClient.convertToType(data['status_callback_method'], 'String');
            }
            if (data.hasOwnProperty('trim')) {
                obj['trim'] = ApiClient.convertToType(data['trim'], 'Boolean');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('video_layout')) {
                obj['video_layout'] = ApiClient.convertToType(data['video_layout'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoV1CompositionHook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoV1CompositionHook</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['audio_sources'])) {
            throw new Error("Expected the field `audio_sources` to be an array in the JSON data but got " + data['audio_sources']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['audio_sources_excluded'])) {
            throw new Error("Expected the field `audio_sources_excluded` to be an array in the JSON data but got " + data['audio_sources_excluded']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['resolution'] && !(typeof data['resolution'] === 'string' || data['resolution'] instanceof String)) {
            throw new Error("Expected the field `resolution` to be a primitive type in the JSON string but got " + data['resolution']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['status_callback'] && !(typeof data['status_callback'] === 'string' || data['status_callback'] instanceof String)) {
            throw new Error("Expected the field `status_callback` to be a primitive type in the JSON string but got " + data['status_callback']);
        }
        // ensure the json data is a string
        if (data['status_callback_method'] && !(typeof data['status_callback_method'] === 'string' || data['status_callback_method'] instanceof String)) {
            throw new Error("Expected the field `status_callback_method` to be a primitive type in the JSON string but got " + data['status_callback_method']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CompositionHook resource.
 * @member {String} account_sid
 */
VideoV1CompositionHook.prototype['account_sid'] = undefined;

/**
 * The array of track names to include in the compositions created by the composition hook. A composition triggered by the composition hook includes all audio sources specified in `audio_sources` except those specified in `audio_sources_excluded`. The track names in this property can include an asterisk as a wild card character, which matches zero or more characters in a track name. For example, `student*` includes tracks named `student` as well as `studentTeam`. Please, be aware that either video_layout or audio_sources have to be provided to get a valid creation request
 * @member {Array.<String>} audio_sources
 */
VideoV1CompositionHook.prototype['audio_sources'] = undefined;

/**
 * The array of track names to exclude from the compositions created by the composition hook. A composition triggered by the composition hook includes all audio sources specified in `audio_sources` except for those specified in `audio_sources_excluded`. The track names in this property can include an asterisk as a wild card character, which matches zero or more characters in a track name. For example, `student*` excludes `student` as well as `studentTeam`. This parameter can also be empty.
 * @member {Array.<String>} audio_sources_excluded
 */
VideoV1CompositionHook.prototype['audio_sources_excluded'] = undefined;

/**
 * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_created
 */
VideoV1CompositionHook.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_updated
 */
VideoV1CompositionHook.prototype['date_updated'] = undefined;

/**
 * Whether the CompositionHook is active. When `true`, the CompositionHook is triggered for every completed Group Room on the account. When `false`, the CompositionHook is never triggered.
 * @member {Boolean} enabled
 */
VideoV1CompositionHook.prototype['enabled'] = undefined;

/**
 * @member {module:model/CompositionHookEnumFormat} format
 */
VideoV1CompositionHook.prototype['format'] = undefined;

/**
 * The string that you assigned to describe the resource. Can be up to 100 characters long and must be unique within the account.
 * @member {String} friendly_name
 */
VideoV1CompositionHook.prototype['friendly_name'] = undefined;

/**
 * The dimensions of the video image in pixels expressed as columns (width) and rows (height). The string's format is `{width}x{height}`, such as `640x480`.
 * @member {String} resolution
 */
VideoV1CompositionHook.prototype['resolution'] = undefined;

/**
 * The unique string that we created to identify the CompositionHook resource.
 * @member {String} sid
 */
VideoV1CompositionHook.prototype['sid'] = undefined;

/**
 * The URL we call using the `status_callback_method` to send status information to your application.
 * @member {String} status_callback
 */
VideoV1CompositionHook.prototype['status_callback'] = undefined;

/**
 * The HTTP method we should use to call `status_callback`. Can be `POST` or `GET` and defaults to `POST`.
 * @member {module:model/VideoV1CompositionHook.StatusCallbackMethodEnum} status_callback_method
 */
VideoV1CompositionHook.prototype['status_callback_method'] = undefined;

/**
 * Whether intervals with no media are clipped, as specified in the POST request that created the CompositionHook resource. Compositions with `trim` enabled are shorter when the Room is created and no Participant joins for a while as well as if all the Participants leave the room and join later, because those gaps will be removed. See [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) for more info.
 * @member {Boolean} trim
 */
VideoV1CompositionHook.prototype['trim'] = undefined;

/**
 * The absolute URL of the resource.
 * @member {String} url
 */
VideoV1CompositionHook.prototype['url'] = undefined;

/**
 * A JSON object that describes the video layout of the composition in terms of regions as specified in the HTTP POST request that created the CompositionHook resource. See [POST Parameters](https://www.twilio.com/docs/video/api/compositions-resource#http-post-parameters) for more information. Please, be aware that either video_layout or audio_sources have to be provided to get a valid creation request
 * @member {Object} video_layout
 */
VideoV1CompositionHook.prototype['video_layout'] = undefined;





/**
 * Allowed values for the <code>status_callback_method</code> property.
 * @enum {String}
 * @readonly
 */
VideoV1CompositionHook['StatusCallbackMethodEnum'] = {

    /**
     * value: "HEAD"
     * @const
     */
    "HEAD": "HEAD",

    /**
     * value: "GET"
     * @const
     */
    "GET": "GET",

    /**
     * value: "POST"
     * @const
     */
    "POST": "POST",

    /**
     * value: "PATCH"
     * @const
     */
    "PATCH": "PATCH",

    /**
     * value: "PUT"
     * @const
     */
    "PUT": "PUT",

    /**
     * value: "DELETE"
     * @const
     */
    "DELETE": "DELETE"
};



export default VideoV1CompositionHook;

