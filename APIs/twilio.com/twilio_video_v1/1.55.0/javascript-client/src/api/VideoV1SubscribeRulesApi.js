/**
 * Twilio - Video
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VideoV1RoomRoomParticipantRoomParticipantSubscribeRule from '../model/VideoV1RoomRoomParticipantRoomParticipantSubscribeRule';

/**
* VideoV1SubscribeRules service.
* @module api/VideoV1SubscribeRulesApi
* @version 1.55.0
*/
export default class VideoV1SubscribeRulesApi {

    /**
    * Constructs a new VideoV1SubscribeRulesApi. 
    * @alias module:api/VideoV1SubscribeRulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the fetchRoomParticipantSubscribeRule operation.
     * @callback module:api/VideoV1SubscribeRulesApi~fetchRoomParticipantSubscribeRuleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VideoV1RoomRoomParticipantRoomParticipantSubscribeRule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of Subscribe Rules for the Participant.
     * @param {String} roomSid The SID of the Room resource where the subscribe rules to fetch apply.
     * @param {String} participantSid The SID of the Participant resource with the subscribe rules to fetch.
     * @param {module:api/VideoV1SubscribeRulesApi~fetchRoomParticipantSubscribeRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VideoV1RoomRoomParticipantRoomParticipantSubscribeRule}
     */
    fetchRoomParticipantSubscribeRule(roomSid, participantSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'roomSid' is set
      if (roomSid === undefined || roomSid === null) {
        throw new Error("Missing the required parameter 'roomSid' when calling fetchRoomParticipantSubscribeRule");
      }
      // verify the required parameter 'participantSid' is set
      if (participantSid === undefined || participantSid === null) {
        throw new Error("Missing the required parameter 'participantSid' when calling fetchRoomParticipantSubscribeRule");
      }

      let pathParams = {
        'RoomSid': roomSid,
        'ParticipantSid': participantSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VideoV1RoomRoomParticipantRoomParticipantSubscribeRule;
      let basePaths = ['https://video.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Rooms/{RoomSid}/Participants/{ParticipantSid}/SubscribeRules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateRoomParticipantSubscribeRule operation.
     * @callback module:api/VideoV1SubscribeRulesApi~updateRoomParticipantSubscribeRuleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VideoV1RoomRoomParticipantRoomParticipantSubscribeRule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the Subscribe Rules for the Participant
     * @param {String} roomSid The SID of the Room resource where the subscribe rules to update apply.
     * @param {String} participantSid The SID of the Participant resource to update the Subscribe Rules.
     * @param {Object} opts Optional parameters
     * @param {Object} [rules] A JSON-encoded array of subscribe rules. See the [Specifying Subscribe Rules](https://www.twilio.com/docs/video/api/track-subscriptions#specifying-sr) section for further information.
     * @param {module:api/VideoV1SubscribeRulesApi~updateRoomParticipantSubscribeRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VideoV1RoomRoomParticipantRoomParticipantSubscribeRule}
     */
    updateRoomParticipantSubscribeRule(roomSid, participantSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'roomSid' is set
      if (roomSid === undefined || roomSid === null) {
        throw new Error("Missing the required parameter 'roomSid' when calling updateRoomParticipantSubscribeRule");
      }
      // verify the required parameter 'participantSid' is set
      if (participantSid === undefined || participantSid === null) {
        throw new Error("Missing the required parameter 'participantSid' when calling updateRoomParticipantSubscribeRule");
      }

      let pathParams = {
        'RoomSid': roomSid,
        'ParticipantSid': participantSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'Rules': opts['rules']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = VideoV1RoomRoomParticipantRoomParticipantSubscribeRule;
      let basePaths = ['https://video.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Rooms/{RoomSid}/Participants/{ParticipantSid}/SubscribeRules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
