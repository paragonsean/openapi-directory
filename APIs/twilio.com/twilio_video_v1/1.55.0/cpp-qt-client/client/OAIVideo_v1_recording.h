/**
 * Twilio - Video
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideo_v1_recording.h
 *
 * 
 */

#ifndef OAIVideo_v1_recording_H
#define OAIVideo_v1_recording_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIRecording_enum_codec.h"
#include "OAIRecording_enum_format.h"
#include "OAIRecording_enum_status.h"
#include "OAIRecording_enum_type.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVideo_v1_recording : public OAIObject {
public:
    OAIVideo_v1_recording();
    OAIVideo_v1_recording(QString json);
    ~OAIVideo_v1_recording() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    OAIRecording_enum_codec getCodec() const;
    void setCodec(const OAIRecording_enum_codec &codec);
    bool is_codec_Set() const;
    bool is_codec_Valid() const;

    OAIRecording_enum_format getContainerFormat() const;
    void setContainerFormat(const OAIRecording_enum_format &container_format);
    bool is_container_format_Set() const;
    bool is_container_format_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QJsonValue getGroupingSids() const;
    void setGroupingSids(const QJsonValue &grouping_sids);
    bool is_grouping_sids_Set() const;
    bool is_grouping_sids_Valid() const;

    OAIObject getLinks() const;
    void setLinks(const OAIObject &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getMediaExternalLocation() const;
    void setMediaExternalLocation(const QString &media_external_location);
    bool is_media_external_location_Set() const;
    bool is_media_external_location_Valid() const;

    qint64 getOffset() const;
    void setOffset(const qint64 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    qint64 getSize() const;
    void setSize(const qint64 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getSourceSid() const;
    void setSourceSid(const QString &source_sid);
    bool is_source_sid_Set() const;
    bool is_source_sid_Valid() const;

    OAIRecording_enum_status getStatus() const;
    void setStatus(const OAIRecording_enum_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStatusCallback() const;
    void setStatusCallback(const QString &status_callback);
    bool is_status_callback_Set() const;
    bool is_status_callback_Valid() const;

    QString getStatusCallbackMethod() const;
    void setStatusCallbackMethod(const QString &status_callback_method);
    bool is_status_callback_method_Set() const;
    bool is_status_callback_method_Valid() const;

    QString getTrackName() const;
    void setTrackName(const QString &track_name);
    bool is_track_name_Set() const;
    bool is_track_name_Valid() const;

    OAIRecording_enum_type getType() const;
    void setType(const OAIRecording_enum_type &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    OAIRecording_enum_codec m_codec;
    bool m_codec_isSet;
    bool m_codec_isValid;

    OAIRecording_enum_format m_container_format;
    bool m_container_format_isSet;
    bool m_container_format_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QJsonValue m_grouping_sids;
    bool m_grouping_sids_isSet;
    bool m_grouping_sids_isValid;

    OAIObject m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_media_external_location;
    bool m_media_external_location_isSet;
    bool m_media_external_location_isValid;

    qint64 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    qint64 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_source_sid;
    bool m_source_sid_isSet;
    bool m_source_sid_isValid;

    OAIRecording_enum_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_status_callback;
    bool m_status_callback_isSet;
    bool m_status_callback_isValid;

    QString m_status_callback_method;
    bool m_status_callback_method_isSet;
    bool m_status_callback_method_isValid;

    QString m_track_name;
    bool m_track_name_isSet;
    bool m_track_name_isValid;

    OAIRecording_enum_type m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideo_v1_recording)

#endif // OAIVideo_v1_recording_H
