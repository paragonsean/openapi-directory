/**
 * Twilio - Video
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner() {
    this->initializeModel();
}

OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::~OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner() {}

void OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::initializeModel() {

    m_all_isSet = false;
    m_all_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_publisher_isSet = false;
    m_publisher_isValid = false;

    m_track_isSet = false;
    m_track_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::fromJsonObject(QJsonObject json) {

    m_all_isValid = ::OpenAPI::fromJsonValue(m_all, json[QString("all")]);
    m_all_isSet = !json[QString("all")].isNull() && m_all_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;

    m_publisher_isValid = ::OpenAPI::fromJsonValue(m_publisher, json[QString("publisher")]);
    m_publisher_isSet = !json[QString("publisher")].isNull() && m_publisher_isValid;

    m_track_isValid = ::OpenAPI::fromJsonValue(m_track, json[QString("track")]);
    m_track_isSet = !json[QString("track")].isNull() && m_track_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_all_isSet) {
        obj.insert(QString("all"), ::OpenAPI::toJsonValue(m_all));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_publisher_isSet) {
        obj.insert(QString("publisher"), ::OpenAPI::toJsonValue(m_publisher));
    }
    if (m_track_isSet) {
        obj.insert(QString("track"), ::OpenAPI::toJsonValue(m_track));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::isAll() const {
    return m_all;
}
void OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::setAll(const bool &all) {
    m_all = all;
    m_all_isSet = true;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::is_all_Set() const{
    return m_all_isSet;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::is_all_Valid() const{
    return m_all_isValid;
}

QString OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::getKind() const {
    return m_kind;
}
void OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::getPriority() const {
    return m_priority;
}
void OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::setPriority(const QString &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::is_priority_Valid() const{
    return m_priority_isValid;
}

QString OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::getPublisher() const {
    return m_publisher;
}
void OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::setPublisher(const QString &publisher) {
    m_publisher = publisher;
    m_publisher_isSet = true;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::is_publisher_Set() const{
    return m_publisher_isSet;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::is_publisher_Valid() const{
    return m_publisher_isValid;
}

QString OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::getTrack() const {
    return m_track;
}
void OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::setTrack(const QString &track) {
    m_track = track;
    m_track_isSet = true;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::is_track_Set() const{
    return m_track_isSet;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::is_track_Valid() const{
    return m_track_isValid;
}

QString OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::getType() const {
    return m_type;
}
void OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::is_type_Set() const{
    return m_type_isSet;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_all_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_track_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVideo_v1_room_room_participant_room_participant_subscribe_rule_rules_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
