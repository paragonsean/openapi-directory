/**
 * Twilio - Video
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideo_v1_composition_hook.h
 *
 * 
 */

#ifndef OAIVideo_v1_composition_hook_H
#define OAIVideo_v1_composition_hook_H

#include <QJsonObject>

#include "OAIComposition_hook_enum_format.h"
#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVideo_v1_composition_hook : public OAIObject {
public:
    OAIVideo_v1_composition_hook();
    OAIVideo_v1_composition_hook(QString json);
    ~OAIVideo_v1_composition_hook() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QList<QString> getAudioSources() const;
    void setAudioSources(const QList<QString> &audio_sources);
    bool is_audio_sources_Set() const;
    bool is_audio_sources_Valid() const;

    QList<QString> getAudioSourcesExcluded() const;
    void setAudioSourcesExcluded(const QList<QString> &audio_sources_excluded);
    bool is_audio_sources_excluded_Set() const;
    bool is_audio_sources_excluded_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    OAIComposition_hook_enum_format getFormat() const;
    void setFormat(const OAIComposition_hook_enum_format &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QString getResolution() const;
    void setResolution(const QString &resolution);
    bool is_resolution_Set() const;
    bool is_resolution_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    QString getStatusCallback() const;
    void setStatusCallback(const QString &status_callback);
    bool is_status_callback_Set() const;
    bool is_status_callback_Valid() const;

    QString getStatusCallbackMethod() const;
    void setStatusCallbackMethod(const QString &status_callback_method);
    bool is_status_callback_method_Set() const;
    bool is_status_callback_method_Valid() const;

    bool isTrim() const;
    void setTrim(const bool &trim);
    bool is_trim_Set() const;
    bool is_trim_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QJsonValue getVideoLayout() const;
    void setVideoLayout(const QJsonValue &video_layout);
    bool is_video_layout_Set() const;
    bool is_video_layout_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QList<QString> m_audio_sources;
    bool m_audio_sources_isSet;
    bool m_audio_sources_isValid;

    QList<QString> m_audio_sources_excluded;
    bool m_audio_sources_excluded_isSet;
    bool m_audio_sources_excluded_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    OAIComposition_hook_enum_format m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QString m_resolution;
    bool m_resolution_isSet;
    bool m_resolution_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    QString m_status_callback;
    bool m_status_callback_isSet;
    bool m_status_callback_isValid;

    QString m_status_callback_method;
    bool m_status_callback_method_isSet;
    bool m_status_callback_method_isValid;

    bool m_trim;
    bool m_trim_isSet;
    bool m_trim_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QJsonValue m_video_layout;
    bool m_video_layout_isSet;
    bool m_video_layout_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideo_v1_composition_hook)

#endif // OAIVideo_v1_composition_hook_H
