/**
 * Twilio - Video
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVideo_v1_room_room_recording_rule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVideo_v1_room_room_recording_rule::OAIVideo_v1_room_room_recording_rule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVideo_v1_room_room_recording_rule::OAIVideo_v1_room_room_recording_rule() {
    this->initializeModel();
}

OAIVideo_v1_room_room_recording_rule::~OAIVideo_v1_room_room_recording_rule() {}

void OAIVideo_v1_room_room_recording_rule::initializeModel() {

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_room_sid_isSet = false;
    m_room_sid_isValid = false;

    m_rules_isSet = false;
    m_rules_isValid = false;
}

void OAIVideo_v1_room_room_recording_rule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVideo_v1_room_room_recording_rule::fromJsonObject(QJsonObject json) {

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_room_sid_isValid = ::OpenAPI::fromJsonValue(m_room_sid, json[QString("room_sid")]);
    m_room_sid_isSet = !json[QString("room_sid")].isNull() && m_room_sid_isValid;

    m_rules_isValid = ::OpenAPI::fromJsonValue(m_rules, json[QString("rules")]);
    m_rules_isSet = !json[QString("rules")].isNull() && m_rules_isValid;
}

QString OAIVideo_v1_room_room_recording_rule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVideo_v1_room_room_recording_rule::asJsonObject() const {
    QJsonObject obj;
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_room_sid_isSet) {
        obj.insert(QString("room_sid"), ::OpenAPI::toJsonValue(m_room_sid));
    }
    if (m_rules.size() > 0) {
        obj.insert(QString("rules"), ::OpenAPI::toJsonValue(m_rules));
    }
    return obj;
}

QDateTime OAIVideo_v1_room_room_recording_rule::getDateCreated() const {
    return m_date_created;
}
void OAIVideo_v1_room_room_recording_rule::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIVideo_v1_room_room_recording_rule::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIVideo_v1_room_room_recording_rule::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIVideo_v1_room_room_recording_rule::getDateUpdated() const {
    return m_date_updated;
}
void OAIVideo_v1_room_room_recording_rule::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIVideo_v1_room_room_recording_rule::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIVideo_v1_room_room_recording_rule::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIVideo_v1_room_room_recording_rule::getRoomSid() const {
    return m_room_sid;
}
void OAIVideo_v1_room_room_recording_rule::setRoomSid(const QString &room_sid) {
    m_room_sid = room_sid;
    m_room_sid_isSet = true;
}

bool OAIVideo_v1_room_room_recording_rule::is_room_sid_Set() const{
    return m_room_sid_isSet;
}

bool OAIVideo_v1_room_room_recording_rule::is_room_sid_Valid() const{
    return m_room_sid_isValid;
}

QList<OAIVideo_v1_room_room_recording_rule_rules_inner> OAIVideo_v1_room_room_recording_rule::getRules() const {
    return m_rules;
}
void OAIVideo_v1_room_room_recording_rule::setRules(const QList<OAIVideo_v1_room_room_recording_rule_rules_inner> &rules) {
    m_rules = rules;
    m_rules_isSet = true;
}

bool OAIVideo_v1_room_room_recording_rule::is_rules_Set() const{
    return m_rules_isSet;
}

bool OAIVideo_v1_room_room_recording_rule::is_rules_Valid() const{
    return m_rules_isValid;
}

bool OAIVideo_v1_room_room_recording_rule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_room_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVideo_v1_room_room_recording_rule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
