/*
 * Twilio - Video
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ListCompositionHookResponseMeta;
import org.openapitools.client.model.VideoV1RoomRoomParticipantRoomParticipantPublishedTrack;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListRoomParticipantPublishedTrackResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:06.985861-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListRoomParticipantPublishedTrackResponse {
  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private ListCompositionHookResponseMeta meta;

  public static final String SERIALIZED_NAME_PUBLISHED_TRACKS = "published_tracks";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_TRACKS)
  private List<VideoV1RoomRoomParticipantRoomParticipantPublishedTrack> publishedTracks = new ArrayList<>();

  public ListRoomParticipantPublishedTrackResponse() {
  }

  public ListRoomParticipantPublishedTrackResponse meta(ListCompositionHookResponseMeta meta) {
    this.meta = meta;
    return this;
  }

  /**
   * Get meta
   * @return meta
   */
  @javax.annotation.Nullable
  public ListCompositionHookResponseMeta getMeta() {
    return meta;
  }

  public void setMeta(ListCompositionHookResponseMeta meta) {
    this.meta = meta;
  }


  public ListRoomParticipantPublishedTrackResponse publishedTracks(List<VideoV1RoomRoomParticipantRoomParticipantPublishedTrack> publishedTracks) {
    this.publishedTracks = publishedTracks;
    return this;
  }

  public ListRoomParticipantPublishedTrackResponse addPublishedTracksItem(VideoV1RoomRoomParticipantRoomParticipantPublishedTrack publishedTracksItem) {
    if (this.publishedTracks == null) {
      this.publishedTracks = new ArrayList<>();
    }
    this.publishedTracks.add(publishedTracksItem);
    return this;
  }

  /**
   * Get publishedTracks
   * @return publishedTracks
   */
  @javax.annotation.Nullable
  public List<VideoV1RoomRoomParticipantRoomParticipantPublishedTrack> getPublishedTracks() {
    return publishedTracks;
  }

  public void setPublishedTracks(List<VideoV1RoomRoomParticipantRoomParticipantPublishedTrack> publishedTracks) {
    this.publishedTracks = publishedTracks;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListRoomParticipantPublishedTrackResponse listRoomParticipantPublishedTrackResponse = (ListRoomParticipantPublishedTrackResponse) o;
    return Objects.equals(this.meta, listRoomParticipantPublishedTrackResponse.meta) &&
        Objects.equals(this.publishedTracks, listRoomParticipantPublishedTrackResponse.publishedTracks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meta, publishedTracks);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListRoomParticipantPublishedTrackResponse {\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    publishedTracks: ").append(toIndentedString(publishedTracks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("meta");
    openapiFields.add("published_tracks");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListRoomParticipantPublishedTrackResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListRoomParticipantPublishedTrackResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListRoomParticipantPublishedTrackResponse is not found in the empty JSON string", ListRoomParticipantPublishedTrackResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListRoomParticipantPublishedTrackResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListRoomParticipantPublishedTrackResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `meta`
      if (jsonObj.get("meta") != null && !jsonObj.get("meta").isJsonNull()) {
        ListCompositionHookResponseMeta.validateJsonElement(jsonObj.get("meta"));
      }
      if (jsonObj.get("published_tracks") != null && !jsonObj.get("published_tracks").isJsonNull()) {
        JsonArray jsonArraypublishedTracks = jsonObj.getAsJsonArray("published_tracks");
        if (jsonArraypublishedTracks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("published_tracks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `published_tracks` to be an array in the JSON string but got `%s`", jsonObj.get("published_tracks").toString()));
          }

          // validate the optional field `published_tracks` (array)
          for (int i = 0; i < jsonArraypublishedTracks.size(); i++) {
            VideoV1RoomRoomParticipantRoomParticipantPublishedTrack.validateJsonElement(jsonArraypublishedTracks.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListRoomParticipantPublishedTrackResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListRoomParticipantPublishedTrackResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListRoomParticipantPublishedTrackResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListRoomParticipantPublishedTrackResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ListRoomParticipantPublishedTrackResponse>() {
           @Override
           public void write(JsonWriter out, ListRoomParticipantPublishedTrackResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListRoomParticipantPublishedTrackResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListRoomParticipantPublishedTrackResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListRoomParticipantPublishedTrackResponse
   * @throws IOException if the JSON string is invalid with respect to ListRoomParticipantPublishedTrackResponse
   */
  public static ListRoomParticipantPublishedTrackResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListRoomParticipantPublishedTrackResponse.class);
  }

  /**
   * Convert an instance of ListRoomParticipantPublishedTrackResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

