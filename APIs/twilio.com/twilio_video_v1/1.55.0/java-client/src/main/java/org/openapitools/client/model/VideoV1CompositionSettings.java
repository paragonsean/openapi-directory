/*
 * Twilio - Video
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VideoV1CompositionSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:06.985861-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VideoV1CompositionSettings {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_AWS_CREDENTIALS_SID = "aws_credentials_sid";
  @SerializedName(SERIALIZED_NAME_AWS_CREDENTIALS_SID)
  private String awsCredentialsSid;

  public static final String SERIALIZED_NAME_AWS_S3_URL = "aws_s3_url";
  @SerializedName(SERIALIZED_NAME_AWS_S3_URL)
  private URI awsS3Url;

  public static final String SERIALIZED_NAME_AWS_STORAGE_ENABLED = "aws_storage_enabled";
  @SerializedName(SERIALIZED_NAME_AWS_STORAGE_ENABLED)
  private Boolean awsStorageEnabled;

  public static final String SERIALIZED_NAME_ENCRYPTION_ENABLED = "encryption_enabled";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_ENABLED)
  private Boolean encryptionEnabled;

  public static final String SERIALIZED_NAME_ENCRYPTION_KEY_SID = "encryption_key_sid";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_KEY_SID)
  private String encryptionKeySid;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendly_name";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public VideoV1CompositionSettings() {
  }

  public VideoV1CompositionSettings accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CompositionSettings resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public VideoV1CompositionSettings awsCredentialsSid(String awsCredentialsSid) {
    this.awsCredentialsSid = awsCredentialsSid;
    return this;
  }

  /**
   * The SID of the stored Credential resource.
   * @return awsCredentialsSid
   */
  @javax.annotation.Nullable
  public String getAwsCredentialsSid() {
    return awsCredentialsSid;
  }

  public void setAwsCredentialsSid(String awsCredentialsSid) {
    this.awsCredentialsSid = awsCredentialsSid;
  }


  public VideoV1CompositionSettings awsS3Url(URI awsS3Url) {
    this.awsS3Url = awsS3Url;
    return this;
  }

  /**
   * The URL of the AWS S3 bucket where the compositions are stored. We only support DNS-compliant URLs like &#x60;https://documentation-example-twilio-bucket/compositions&#x60;, where &#x60;compositions&#x60; is the path in which you want the compositions to be stored. This URL accepts only URI-valid characters, as described in the [RFC 3986](https://tools.ietf.org/html/rfc3986#section-2).
   * @return awsS3Url
   */
  @javax.annotation.Nullable
  public URI getAwsS3Url() {
    return awsS3Url;
  }

  public void setAwsS3Url(URI awsS3Url) {
    this.awsS3Url = awsS3Url;
  }


  public VideoV1CompositionSettings awsStorageEnabled(Boolean awsStorageEnabled) {
    this.awsStorageEnabled = awsStorageEnabled;
    return this;
  }

  /**
   * Whether all compositions are written to the &#x60;aws_s3_url&#x60;. When &#x60;false&#x60;, all compositions are stored in our cloud.
   * @return awsStorageEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAwsStorageEnabled() {
    return awsStorageEnabled;
  }

  public void setAwsStorageEnabled(Boolean awsStorageEnabled) {
    this.awsStorageEnabled = awsStorageEnabled;
  }


  public VideoV1CompositionSettings encryptionEnabled(Boolean encryptionEnabled) {
    this.encryptionEnabled = encryptionEnabled;
    return this;
  }

  /**
   * Whether all compositions are stored in an encrypted form. The default is &#x60;false&#x60;.
   * @return encryptionEnabled
   */
  @javax.annotation.Nullable
  public Boolean getEncryptionEnabled() {
    return encryptionEnabled;
  }

  public void setEncryptionEnabled(Boolean encryptionEnabled) {
    this.encryptionEnabled = encryptionEnabled;
  }


  public VideoV1CompositionSettings encryptionKeySid(String encryptionKeySid) {
    this.encryptionKeySid = encryptionKeySid;
    return this;
  }

  /**
   * The SID of the Public Key resource used for encryption.
   * @return encryptionKeySid
   */
  @javax.annotation.Nullable
  public String getEncryptionKeySid() {
    return encryptionKeySid;
  }

  public void setEncryptionKeySid(String encryptionKeySid) {
    this.encryptionKeySid = encryptionKeySid;
  }


  public VideoV1CompositionSettings friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

  /**
   * The string that you assigned to describe the resource and that will be shown in the console
   * @return friendlyName
   */
  @javax.annotation.Nullable
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public VideoV1CompositionSettings url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoV1CompositionSettings videoV1CompositionSettings = (VideoV1CompositionSettings) o;
    return Objects.equals(this.accountSid, videoV1CompositionSettings.accountSid) &&
        Objects.equals(this.awsCredentialsSid, videoV1CompositionSettings.awsCredentialsSid) &&
        Objects.equals(this.awsS3Url, videoV1CompositionSettings.awsS3Url) &&
        Objects.equals(this.awsStorageEnabled, videoV1CompositionSettings.awsStorageEnabled) &&
        Objects.equals(this.encryptionEnabled, videoV1CompositionSettings.encryptionEnabled) &&
        Objects.equals(this.encryptionKeySid, videoV1CompositionSettings.encryptionKeySid) &&
        Objects.equals(this.friendlyName, videoV1CompositionSettings.friendlyName) &&
        Objects.equals(this.url, videoV1CompositionSettings.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, awsCredentialsSid, awsS3Url, awsStorageEnabled, encryptionEnabled, encryptionKeySid, friendlyName, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoV1CompositionSettings {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    awsCredentialsSid: ").append(toIndentedString(awsCredentialsSid)).append("\n");
    sb.append("    awsS3Url: ").append(toIndentedString(awsS3Url)).append("\n");
    sb.append("    awsStorageEnabled: ").append(toIndentedString(awsStorageEnabled)).append("\n");
    sb.append("    encryptionEnabled: ").append(toIndentedString(encryptionEnabled)).append("\n");
    sb.append("    encryptionKeySid: ").append(toIndentedString(encryptionKeySid)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("aws_credentials_sid");
    openapiFields.add("aws_s3_url");
    openapiFields.add("aws_storage_enabled");
    openapiFields.add("encryption_enabled");
    openapiFields.add("encryption_key_sid");
    openapiFields.add("friendly_name");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VideoV1CompositionSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VideoV1CompositionSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VideoV1CompositionSettings is not found in the empty JSON string", VideoV1CompositionSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VideoV1CompositionSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VideoV1CompositionSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("aws_credentials_sid") != null && !jsonObj.get("aws_credentials_sid").isJsonNull()) && !jsonObj.get("aws_credentials_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws_credentials_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws_credentials_sid").toString()));
      }
      if ((jsonObj.get("aws_s3_url") != null && !jsonObj.get("aws_s3_url").isJsonNull()) && !jsonObj.get("aws_s3_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aws_s3_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aws_s3_url").toString()));
      }
      if ((jsonObj.get("encryption_key_sid") != null && !jsonObj.get("encryption_key_sid").isJsonNull()) && !jsonObj.get("encryption_key_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `encryption_key_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("encryption_key_sid").toString()));
      }
      if ((jsonObj.get("friendly_name") != null && !jsonObj.get("friendly_name").isJsonNull()) && !jsonObj.get("friendly_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `friendly_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("friendly_name").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VideoV1CompositionSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VideoV1CompositionSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VideoV1CompositionSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VideoV1CompositionSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<VideoV1CompositionSettings>() {
           @Override
           public void write(JsonWriter out, VideoV1CompositionSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VideoV1CompositionSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VideoV1CompositionSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VideoV1CompositionSettings
   * @throws IOException if the JSON string is invalid with respect to VideoV1CompositionSettings
   */
  public static VideoV1CompositionSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VideoV1CompositionSettings.class);
  }

  /**
   * Convert an instance of VideoV1CompositionSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

