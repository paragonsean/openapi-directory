/*
 * Twilio - Video
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VideoV1RoomRoomRecordingRuleRulesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:06.985861-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VideoV1RoomRoomRecordingRuleRulesInner {
  public static final String SERIALIZED_NAME_ALL = "all";
  @SerializedName(SERIALIZED_NAME_ALL)
  private Boolean all;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_PUBLISHER = "publisher";
  @SerializedName(SERIALIZED_NAME_PUBLISHER)
  private String publisher;

  public static final String SERIALIZED_NAME_TRACK = "track";
  @SerializedName(SERIALIZED_NAME_TRACK)
  private String track;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public VideoV1RoomRoomRecordingRuleRulesInner() {
  }

  public VideoV1RoomRoomRecordingRuleRulesInner all(Boolean all) {
    this.all = all;
    return this;
  }

  /**
   * Get all
   * @return all
   */
  @javax.annotation.Nullable
  public Boolean getAll() {
    return all;
  }

  public void setAll(Boolean all) {
    this.all = all;
  }


  public VideoV1RoomRoomRecordingRuleRulesInner kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Get kind
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public VideoV1RoomRoomRecordingRuleRulesInner publisher(String publisher) {
    this.publisher = publisher;
    return this;
  }

  /**
   * Get publisher
   * @return publisher
   */
  @javax.annotation.Nullable
  public String getPublisher() {
    return publisher;
  }

  public void setPublisher(String publisher) {
    this.publisher = publisher;
  }


  public VideoV1RoomRoomRecordingRuleRulesInner track(String track) {
    this.track = track;
    return this;
  }

  /**
   * Get track
   * @return track
   */
  @javax.annotation.Nullable
  public String getTrack() {
    return track;
  }

  public void setTrack(String track) {
    this.track = track;
  }


  public VideoV1RoomRoomRecordingRuleRulesInner type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoV1RoomRoomRecordingRuleRulesInner videoV1RoomRoomRecordingRuleRulesInner = (VideoV1RoomRoomRecordingRuleRulesInner) o;
    return Objects.equals(this.all, videoV1RoomRoomRecordingRuleRulesInner.all) &&
        Objects.equals(this.kind, videoV1RoomRoomRecordingRuleRulesInner.kind) &&
        Objects.equals(this.publisher, videoV1RoomRoomRecordingRuleRulesInner.publisher) &&
        Objects.equals(this.track, videoV1RoomRoomRecordingRuleRulesInner.track) &&
        Objects.equals(this.type, videoV1RoomRoomRecordingRuleRulesInner.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(all, kind, publisher, track, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoV1RoomRoomRecordingRuleRulesInner {\n");
    sb.append("    all: ").append(toIndentedString(all)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    track: ").append(toIndentedString(track)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("all");
    openapiFields.add("kind");
    openapiFields.add("publisher");
    openapiFields.add("track");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VideoV1RoomRoomRecordingRuleRulesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VideoV1RoomRoomRecordingRuleRulesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VideoV1RoomRoomRecordingRuleRulesInner is not found in the empty JSON string", VideoV1RoomRoomRecordingRuleRulesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VideoV1RoomRoomRecordingRuleRulesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VideoV1RoomRoomRecordingRuleRulesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      if ((jsonObj.get("publisher") != null && !jsonObj.get("publisher").isJsonNull()) && !jsonObj.get("publisher").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisher` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisher").toString()));
      }
      if ((jsonObj.get("track") != null && !jsonObj.get("track").isJsonNull()) && !jsonObj.get("track").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `track` to be a primitive type in the JSON string but got `%s`", jsonObj.get("track").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VideoV1RoomRoomRecordingRuleRulesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VideoV1RoomRoomRecordingRuleRulesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VideoV1RoomRoomRecordingRuleRulesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VideoV1RoomRoomRecordingRuleRulesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<VideoV1RoomRoomRecordingRuleRulesInner>() {
           @Override
           public void write(JsonWriter out, VideoV1RoomRoomRecordingRuleRulesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VideoV1RoomRoomRecordingRuleRulesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VideoV1RoomRoomRecordingRuleRulesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VideoV1RoomRoomRecordingRuleRulesInner
   * @throws IOException if the JSON string is invalid with respect to VideoV1RoomRoomRecordingRuleRulesInner
   */
  public static VideoV1RoomRoomRecordingRuleRulesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VideoV1RoomRoomRecordingRuleRulesInner.class);
  }

  /**
   * Convert an instance of VideoV1RoomRoomRecordingRuleRulesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

