/*
 * Twilio - Video
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CompositionEnumFormat;
import org.openapitools.client.model.CompositionEnumStatus;
import org.openapitools.client.model.ListCompositionResponse;
import java.time.OffsetDateTime;
import java.net.URI;
import org.openapitools.client.model.VideoV1Composition;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VideoV1CompositionApi
 */
@Disabled
public class VideoV1CompositionApiTest {

    private final VideoV1CompositionApi api = new VideoV1CompositionApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCompositionTest() throws ApiException {
        String roomSid = null;
        List<String> audioSources = null;
        List<String> audioSourcesExcluded = null;
        CompositionEnumFormat format = null;
        String resolution = null;
        URI statusCallback = null;
        String statusCallbackMethod = null;
        Boolean trim = null;
        Object videoLayout = null;
        VideoV1Composition response = api.createComposition(roomSid, audioSources, audioSourcesExcluded, format, resolution, statusCallback, statusCallbackMethod, trim, videoLayout);
        // TODO: test validations
    }

    /**
     * Delete a Recording Composition resource identified by a Composition SID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCompositionTest() throws ApiException {
        String sid = null;
        api.deleteComposition(sid);
        // TODO: test validations
    }

    /**
     * Returns a single Composition resource identified by a Composition SID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchCompositionTest() throws ApiException {
        String sid = null;
        VideoV1Composition response = api.fetchComposition(sid);
        // TODO: test validations
    }

    /**
     * List of all Recording compositions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCompositionTest() throws ApiException {
        CompositionEnumStatus status = null;
        OffsetDateTime dateCreatedAfter = null;
        OffsetDateTime dateCreatedBefore = null;
        String roomSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListCompositionResponse response = api.listComposition(status, dateCreatedAfter, dateCreatedBefore, roomSid, pageSize, page, pageToken);
        // TODO: test validations
    }

}
