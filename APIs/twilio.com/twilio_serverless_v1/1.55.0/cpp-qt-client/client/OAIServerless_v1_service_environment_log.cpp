/**
 * Twilio - Serverless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServerless_v1_service_environment_log.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServerless_v1_service_environment_log::OAIServerless_v1_service_environment_log(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServerless_v1_service_environment_log::OAIServerless_v1_service_environment_log() {
    this->initializeModel();
}

OAIServerless_v1_service_environment_log::~OAIServerless_v1_service_environment_log() {}

void OAIServerless_v1_service_environment_log::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_build_sid_isSet = false;
    m_build_sid_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_deployment_sid_isSet = false;
    m_deployment_sid_isValid = false;

    m_environment_sid_isSet = false;
    m_environment_sid_isValid = false;

    m_function_sid_isSet = false;
    m_function_sid_isValid = false;

    m_level_isSet = false;
    m_level_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_request_sid_isSet = false;
    m_request_sid_isValid = false;

    m_service_sid_isSet = false;
    m_service_sid_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIServerless_v1_service_environment_log::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServerless_v1_service_environment_log::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_build_sid_isValid = ::OpenAPI::fromJsonValue(m_build_sid, json[QString("build_sid")]);
    m_build_sid_isSet = !json[QString("build_sid")].isNull() && m_build_sid_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_deployment_sid_isValid = ::OpenAPI::fromJsonValue(m_deployment_sid, json[QString("deployment_sid")]);
    m_deployment_sid_isSet = !json[QString("deployment_sid")].isNull() && m_deployment_sid_isValid;

    m_environment_sid_isValid = ::OpenAPI::fromJsonValue(m_environment_sid, json[QString("environment_sid")]);
    m_environment_sid_isSet = !json[QString("environment_sid")].isNull() && m_environment_sid_isValid;

    m_function_sid_isValid = ::OpenAPI::fromJsonValue(m_function_sid, json[QString("function_sid")]);
    m_function_sid_isSet = !json[QString("function_sid")].isNull() && m_function_sid_isValid;

    m_level_isValid = ::OpenAPI::fromJsonValue(m_level, json[QString("level")]);
    m_level_isSet = !json[QString("level")].isNull() && m_level_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_request_sid_isValid = ::OpenAPI::fromJsonValue(m_request_sid, json[QString("request_sid")]);
    m_request_sid_isSet = !json[QString("request_sid")].isNull() && m_request_sid_isValid;

    m_service_sid_isValid = ::OpenAPI::fromJsonValue(m_service_sid, json[QString("service_sid")]);
    m_service_sid_isSet = !json[QString("service_sid")].isNull() && m_service_sid_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIServerless_v1_service_environment_log::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServerless_v1_service_environment_log::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_build_sid_isSet) {
        obj.insert(QString("build_sid"), ::OpenAPI::toJsonValue(m_build_sid));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_deployment_sid_isSet) {
        obj.insert(QString("deployment_sid"), ::OpenAPI::toJsonValue(m_deployment_sid));
    }
    if (m_environment_sid_isSet) {
        obj.insert(QString("environment_sid"), ::OpenAPI::toJsonValue(m_environment_sid));
    }
    if (m_function_sid_isSet) {
        obj.insert(QString("function_sid"), ::OpenAPI::toJsonValue(m_function_sid));
    }
    if (m_level.isSet()) {
        obj.insert(QString("level"), ::OpenAPI::toJsonValue(m_level));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_request_sid_isSet) {
        obj.insert(QString("request_sid"), ::OpenAPI::toJsonValue(m_request_sid));
    }
    if (m_service_sid_isSet) {
        obj.insert(QString("service_sid"), ::OpenAPI::toJsonValue(m_service_sid));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIServerless_v1_service_environment_log::getAccountSid() const {
    return m_account_sid;
}
void OAIServerless_v1_service_environment_log::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIServerless_v1_service_environment_log::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIServerless_v1_service_environment_log::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIServerless_v1_service_environment_log::getBuildSid() const {
    return m_build_sid;
}
void OAIServerless_v1_service_environment_log::setBuildSid(const QString &build_sid) {
    m_build_sid = build_sid;
    m_build_sid_isSet = true;
}

bool OAIServerless_v1_service_environment_log::is_build_sid_Set() const{
    return m_build_sid_isSet;
}

bool OAIServerless_v1_service_environment_log::is_build_sid_Valid() const{
    return m_build_sid_isValid;
}

QDateTime OAIServerless_v1_service_environment_log::getDateCreated() const {
    return m_date_created;
}
void OAIServerless_v1_service_environment_log::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIServerless_v1_service_environment_log::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIServerless_v1_service_environment_log::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIServerless_v1_service_environment_log::getDeploymentSid() const {
    return m_deployment_sid;
}
void OAIServerless_v1_service_environment_log::setDeploymentSid(const QString &deployment_sid) {
    m_deployment_sid = deployment_sid;
    m_deployment_sid_isSet = true;
}

bool OAIServerless_v1_service_environment_log::is_deployment_sid_Set() const{
    return m_deployment_sid_isSet;
}

bool OAIServerless_v1_service_environment_log::is_deployment_sid_Valid() const{
    return m_deployment_sid_isValid;
}

QString OAIServerless_v1_service_environment_log::getEnvironmentSid() const {
    return m_environment_sid;
}
void OAIServerless_v1_service_environment_log::setEnvironmentSid(const QString &environment_sid) {
    m_environment_sid = environment_sid;
    m_environment_sid_isSet = true;
}

bool OAIServerless_v1_service_environment_log::is_environment_sid_Set() const{
    return m_environment_sid_isSet;
}

bool OAIServerless_v1_service_environment_log::is_environment_sid_Valid() const{
    return m_environment_sid_isValid;
}

QString OAIServerless_v1_service_environment_log::getFunctionSid() const {
    return m_function_sid;
}
void OAIServerless_v1_service_environment_log::setFunctionSid(const QString &function_sid) {
    m_function_sid = function_sid;
    m_function_sid_isSet = true;
}

bool OAIServerless_v1_service_environment_log::is_function_sid_Set() const{
    return m_function_sid_isSet;
}

bool OAIServerless_v1_service_environment_log::is_function_sid_Valid() const{
    return m_function_sid_isValid;
}

OAILog_enum_level OAIServerless_v1_service_environment_log::getLevel() const {
    return m_level;
}
void OAIServerless_v1_service_environment_log::setLevel(const OAILog_enum_level &level) {
    m_level = level;
    m_level_isSet = true;
}

bool OAIServerless_v1_service_environment_log::is_level_Set() const{
    return m_level_isSet;
}

bool OAIServerless_v1_service_environment_log::is_level_Valid() const{
    return m_level_isValid;
}

QString OAIServerless_v1_service_environment_log::getMessage() const {
    return m_message;
}
void OAIServerless_v1_service_environment_log::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIServerless_v1_service_environment_log::is_message_Set() const{
    return m_message_isSet;
}

bool OAIServerless_v1_service_environment_log::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIServerless_v1_service_environment_log::getRequestSid() const {
    return m_request_sid;
}
void OAIServerless_v1_service_environment_log::setRequestSid(const QString &request_sid) {
    m_request_sid = request_sid;
    m_request_sid_isSet = true;
}

bool OAIServerless_v1_service_environment_log::is_request_sid_Set() const{
    return m_request_sid_isSet;
}

bool OAIServerless_v1_service_environment_log::is_request_sid_Valid() const{
    return m_request_sid_isValid;
}

QString OAIServerless_v1_service_environment_log::getServiceSid() const {
    return m_service_sid;
}
void OAIServerless_v1_service_environment_log::setServiceSid(const QString &service_sid) {
    m_service_sid = service_sid;
    m_service_sid_isSet = true;
}

bool OAIServerless_v1_service_environment_log::is_service_sid_Set() const{
    return m_service_sid_isSet;
}

bool OAIServerless_v1_service_environment_log::is_service_sid_Valid() const{
    return m_service_sid_isValid;
}

QString OAIServerless_v1_service_environment_log::getSid() const {
    return m_sid;
}
void OAIServerless_v1_service_environment_log::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIServerless_v1_service_environment_log::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIServerless_v1_service_environment_log::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIServerless_v1_service_environment_log::getUrl() const {
    return m_url;
}
void OAIServerless_v1_service_environment_log::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIServerless_v1_service_environment_log::is_url_Set() const{
    return m_url_isSet;
}

bool OAIServerless_v1_service_environment_log::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIServerless_v1_service_environment_log::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_build_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_function_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_level.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServerless_v1_service_environment_log::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
