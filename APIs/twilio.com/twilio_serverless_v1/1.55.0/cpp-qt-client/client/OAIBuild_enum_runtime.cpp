/**
 * Twilio - Serverless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuild_enum_runtime.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuild_enum_runtime::OAIBuild_enum_runtime(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuild_enum_runtime::OAIBuild_enum_runtime() {
    this->initializeModel();
}

OAIBuild_enum_runtime::~OAIBuild_enum_runtime() {}

void OAIBuild_enum_runtime::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIBuild_enum_runtime::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIBuild_enum_runtime::fromJson(QString jsonString) {
    
    if ( jsonString.compare("node8", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBuild_enum_runtime::NODE8;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("node10", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBuild_enum_runtime::NODE10;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("node12", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBuild_enum_runtime::NODE12;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("node14", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBuild_enum_runtime::NODE14;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("node16", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBuild_enum_runtime::NODE16;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("node18", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBuild_enum_runtime::NODE18;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIBuild_enum_runtime::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIBuild_enum_runtime::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIBuild_enum_runtime::NODE8:
            val = "node8";
            break;
        case eOAIBuild_enum_runtime::NODE10:
            val = "node10";
            break;
        case eOAIBuild_enum_runtime::NODE12:
            val = "node12";
            break;
        case eOAIBuild_enum_runtime::NODE14:
            val = "node14";
            break;
        case eOAIBuild_enum_runtime::NODE16:
            val = "node16";
            break;
        case eOAIBuild_enum_runtime::NODE18:
            val = "node18";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIBuild_enum_runtime::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIBuild_enum_runtime::eOAIBuild_enum_runtime OAIBuild_enum_runtime::getValue() const {
    return m_value;
}

void OAIBuild_enum_runtime::setValue(const OAIBuild_enum_runtime::eOAIBuild_enum_runtime& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIBuild_enum_runtime::isSet() const {
    
    return m_value_isSet;
}

bool OAIBuild_enum_runtime::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
