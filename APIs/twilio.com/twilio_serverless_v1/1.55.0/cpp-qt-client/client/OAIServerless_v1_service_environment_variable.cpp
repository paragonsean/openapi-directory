/**
 * Twilio - Serverless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServerless_v1_service_environment_variable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServerless_v1_service_environment_variable::OAIServerless_v1_service_environment_variable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServerless_v1_service_environment_variable::OAIServerless_v1_service_environment_variable() {
    this->initializeModel();
}

OAIServerless_v1_service_environment_variable::~OAIServerless_v1_service_environment_variable() {}

void OAIServerless_v1_service_environment_variable::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_environment_sid_isSet = false;
    m_environment_sid_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_service_sid_isSet = false;
    m_service_sid_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIServerless_v1_service_environment_variable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServerless_v1_service_environment_variable::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_environment_sid_isValid = ::OpenAPI::fromJsonValue(m_environment_sid, json[QString("environment_sid")]);
    m_environment_sid_isSet = !json[QString("environment_sid")].isNull() && m_environment_sid_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_service_sid_isValid = ::OpenAPI::fromJsonValue(m_service_sid, json[QString("service_sid")]);
    m_service_sid_isSet = !json[QString("service_sid")].isNull() && m_service_sid_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIServerless_v1_service_environment_variable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServerless_v1_service_environment_variable::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_environment_sid_isSet) {
        obj.insert(QString("environment_sid"), ::OpenAPI::toJsonValue(m_environment_sid));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_service_sid_isSet) {
        obj.insert(QString("service_sid"), ::OpenAPI::toJsonValue(m_service_sid));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIServerless_v1_service_environment_variable::getAccountSid() const {
    return m_account_sid;
}
void OAIServerless_v1_service_environment_variable::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIServerless_v1_service_environment_variable::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIServerless_v1_service_environment_variable::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QDateTime OAIServerless_v1_service_environment_variable::getDateCreated() const {
    return m_date_created;
}
void OAIServerless_v1_service_environment_variable::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIServerless_v1_service_environment_variable::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIServerless_v1_service_environment_variable::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIServerless_v1_service_environment_variable::getDateUpdated() const {
    return m_date_updated;
}
void OAIServerless_v1_service_environment_variable::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIServerless_v1_service_environment_variable::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIServerless_v1_service_environment_variable::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIServerless_v1_service_environment_variable::getEnvironmentSid() const {
    return m_environment_sid;
}
void OAIServerless_v1_service_environment_variable::setEnvironmentSid(const QString &environment_sid) {
    m_environment_sid = environment_sid;
    m_environment_sid_isSet = true;
}

bool OAIServerless_v1_service_environment_variable::is_environment_sid_Set() const{
    return m_environment_sid_isSet;
}

bool OAIServerless_v1_service_environment_variable::is_environment_sid_Valid() const{
    return m_environment_sid_isValid;
}

QString OAIServerless_v1_service_environment_variable::getKey() const {
    return m_key;
}
void OAIServerless_v1_service_environment_variable::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIServerless_v1_service_environment_variable::is_key_Set() const{
    return m_key_isSet;
}

bool OAIServerless_v1_service_environment_variable::is_key_Valid() const{
    return m_key_isValid;
}

QString OAIServerless_v1_service_environment_variable::getServiceSid() const {
    return m_service_sid;
}
void OAIServerless_v1_service_environment_variable::setServiceSid(const QString &service_sid) {
    m_service_sid = service_sid;
    m_service_sid_isSet = true;
}

bool OAIServerless_v1_service_environment_variable::is_service_sid_Set() const{
    return m_service_sid_isSet;
}

bool OAIServerless_v1_service_environment_variable::is_service_sid_Valid() const{
    return m_service_sid_isValid;
}

QString OAIServerless_v1_service_environment_variable::getSid() const {
    return m_sid;
}
void OAIServerless_v1_service_environment_variable::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIServerless_v1_service_environment_variable::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIServerless_v1_service_environment_variable::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIServerless_v1_service_environment_variable::getUrl() const {
    return m_url;
}
void OAIServerless_v1_service_environment_variable::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIServerless_v1_service_environment_variable::is_url_Set() const{
    return m_url_isSet;
}

bool OAIServerless_v1_service_environment_variable::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIServerless_v1_service_environment_variable::getValue() const {
    return m_value;
}
void OAIServerless_v1_service_environment_variable::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIServerless_v1_service_environment_variable::is_value_Set() const{
    return m_value_isSet;
}

bool OAIServerless_v1_service_environment_variable::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIServerless_v1_service_environment_variable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServerless_v1_service_environment_variable::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
