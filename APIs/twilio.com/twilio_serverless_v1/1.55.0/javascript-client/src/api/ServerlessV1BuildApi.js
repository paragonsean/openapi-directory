/**
 * Twilio - Serverless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListBuildResponse from '../model/ListBuildResponse';
import ServerlessV1ServiceBuild from '../model/ServerlessV1ServiceBuild';

/**
* ServerlessV1Build service.
* @module api/ServerlessV1BuildApi
* @version 1.55.0
*/
export default class ServerlessV1BuildApi {

    /**
    * Constructs a new ServerlessV1BuildApi. 
    * @alias module:api/ServerlessV1BuildApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createBuild operation.
     * @callback module:api/ServerlessV1BuildApi~createBuildCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServerlessV1ServiceBuild} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new Build resource. At least one function version or asset version is required.
     * @param {String} serviceSid The SID of the Service to create the Build resource under.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [assetVersions] The list of Asset Version resource SIDs to include in the Build.
     * @param {String} [dependencies] A list of objects that describe the Dependencies included in the Build. Each object contains the `name` and `version` of the dependency.
     * @param {Array.<String>} [functionVersions] The list of the Function Version resource SIDs to include in the Build.
     * @param {String} [runtime] The Runtime version that will be used to run the Build resource when it is deployed.
     * @param {module:api/ServerlessV1BuildApi~createBuildCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServerlessV1ServiceBuild}
     */
    createBuild(serviceSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling createBuild");
      }

      let pathParams = {
        'ServiceSid': serviceSid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'AssetVersions': this.apiClient.buildCollectionParam(opts['assetVersions'], 'csv'),
        'Dependencies': opts['dependencies'],
        'FunctionVersions': this.apiClient.buildCollectionParam(opts['functionVersions'], 'csv'),
        'Runtime': opts['runtime']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = ServerlessV1ServiceBuild;
      let basePaths = ['https://serverless.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Builds', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteBuild operation.
     * @callback module:api/ServerlessV1BuildApi~deleteBuildCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a Build resource.
     * @param {String} serviceSid The SID of the Service to delete the Build resource from.
     * @param {String} sid The SID of the Build resource to delete.
     * @param {module:api/ServerlessV1BuildApi~deleteBuildCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteBuild(serviceSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling deleteBuild");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteBuild");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://serverless.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Builds/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchBuild operation.
     * @callback module:api/ServerlessV1BuildApi~fetchBuildCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ServerlessV1ServiceBuild} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a specific Build resource.
     * @param {String} serviceSid The SID of the Service to fetch the Build resource from.
     * @param {String} sid The SID of the Build resource to fetch.
     * @param {module:api/ServerlessV1BuildApi~fetchBuildCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ServerlessV1ServiceBuild}
     */
    fetchBuild(serviceSid, sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling fetchBuild");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchBuild");
      }

      let pathParams = {
        'ServiceSid': serviceSid,
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ServerlessV1ServiceBuild;
      let basePaths = ['https://serverless.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Builds/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listBuild operation.
     * @callback module:api/ServerlessV1BuildApi~listBuildCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListBuildResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of all Builds.
     * @param {String} serviceSid The SID of the Service to read the Build resources from.
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/ServerlessV1BuildApi~listBuildCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListBuildResponse}
     */
    listBuild(serviceSid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'serviceSid' is set
      if (serviceSid === undefined || serviceSid === null) {
        throw new Error("Missing the required parameter 'serviceSid' when calling listBuild");
      }

      let pathParams = {
        'ServiceSid': serviceSid
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListBuildResponse;
      let basePaths = ['https://serverless.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/Services/{ServiceSid}/Builds', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
