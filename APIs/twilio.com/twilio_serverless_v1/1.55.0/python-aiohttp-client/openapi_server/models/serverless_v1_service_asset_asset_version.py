# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset_version_enum_visibility import AssetVersionEnumVisibility
import re
from openapi_server import util


class ServerlessV1ServiceAssetAssetVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, asset_sid: str=None, date_created: datetime=None, path: str=None, service_sid: str=None, sid: str=None, url: str=None, visibility: AssetVersionEnumVisibility=None):
        """ServerlessV1ServiceAssetAssetVersion - a model defined in OpenAPI

        :param account_sid: The account_sid of this ServerlessV1ServiceAssetAssetVersion.
        :param asset_sid: The asset_sid of this ServerlessV1ServiceAssetAssetVersion.
        :param date_created: The date_created of this ServerlessV1ServiceAssetAssetVersion.
        :param path: The path of this ServerlessV1ServiceAssetAssetVersion.
        :param service_sid: The service_sid of this ServerlessV1ServiceAssetAssetVersion.
        :param sid: The sid of this ServerlessV1ServiceAssetAssetVersion.
        :param url: The url of this ServerlessV1ServiceAssetAssetVersion.
        :param visibility: The visibility of this ServerlessV1ServiceAssetAssetVersion.
        """
        self.openapi_types = {
            'account_sid': str,
            'asset_sid': str,
            'date_created': datetime,
            'path': str,
            'service_sid': str,
            'sid': str,
            'url': str,
            'visibility': AssetVersionEnumVisibility
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'asset_sid': 'asset_sid',
            'date_created': 'date_created',
            'path': 'path',
            'service_sid': 'service_sid',
            'sid': 'sid',
            'url': 'url',
            'visibility': 'visibility'
        }

        self._account_sid = account_sid
        self._asset_sid = asset_sid
        self._date_created = date_created
        self._path = path
        self._service_sid = service_sid
        self._sid = sid
        self._url = url
        self._visibility = visibility

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerlessV1ServiceAssetAssetVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The serverless.v1.service.asset.asset_version of this ServerlessV1ServiceAssetAssetVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ServerlessV1ServiceAssetAssetVersion.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Asset Version resource.

        :return: The account_sid of this ServerlessV1ServiceAssetAssetVersion.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ServerlessV1ServiceAssetAssetVersion.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Asset Version resource.

        :param account_sid: The account_sid of this ServerlessV1ServiceAssetAssetVersion.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def asset_sid(self):
        """Gets the asset_sid of this ServerlessV1ServiceAssetAssetVersion.

        The SID of the Asset resource that is the parent of the Asset Version.

        :return: The asset_sid of this ServerlessV1ServiceAssetAssetVersion.
        :rtype: str
        """
        return self._asset_sid

    @asset_sid.setter
    def asset_sid(self, asset_sid):
        """Sets the asset_sid of this ServerlessV1ServiceAssetAssetVersion.

        The SID of the Asset resource that is the parent of the Asset Version.

        :param asset_sid: The asset_sid of this ServerlessV1ServiceAssetAssetVersion.
        :type asset_sid: str
        """
        if asset_sid is not None and len(asset_sid) > 34:
            raise ValueError("Invalid value for `asset_sid`, length must be less than or equal to `34`")
        if asset_sid is not None and len(asset_sid) < 34:
            raise ValueError("Invalid value for `asset_sid`, length must be greater than or equal to `34`")
        if asset_sid is not None and not re.search(r'^ZH[0-9a-fA-F]{32}$', asset_sid):
            raise ValueError("Invalid value for `asset_sid`, must be a follow pattern or equal to `/^ZH[0-9a-fA-F]{32}$/`")

        self._asset_sid = asset_sid

    @property
    def date_created(self):
        """Gets the date_created of this ServerlessV1ServiceAssetAssetVersion.

        The date and time in GMT when the Asset Version resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :return: The date_created of this ServerlessV1ServiceAssetAssetVersion.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ServerlessV1ServiceAssetAssetVersion.

        The date and time in GMT when the Asset Version resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.

        :param date_created: The date_created of this ServerlessV1ServiceAssetAssetVersion.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def path(self):
        """Gets the path of this ServerlessV1ServiceAssetAssetVersion.

        The URL-friendly string by which the Asset Version can be referenced. It can be a maximum of 255 characters. All paths begin with a forward slash ('/'). If an Asset Version creation request is submitted with a path not containing a leading slash, the path will automatically be prepended with one.

        :return: The path of this ServerlessV1ServiceAssetAssetVersion.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ServerlessV1ServiceAssetAssetVersion.

        The URL-friendly string by which the Asset Version can be referenced. It can be a maximum of 255 characters. All paths begin with a forward slash ('/'). If an Asset Version creation request is submitted with a path not containing a leading slash, the path will automatically be prepended with one.

        :param path: The path of this ServerlessV1ServiceAssetAssetVersion.
        :type path: str
        """

        self._path = path

    @property
    def service_sid(self):
        """Gets the service_sid of this ServerlessV1ServiceAssetAssetVersion.

        The SID of the Service that the Asset Version resource is associated with.

        :return: The service_sid of this ServerlessV1ServiceAssetAssetVersion.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this ServerlessV1ServiceAssetAssetVersion.

        The SID of the Service that the Asset Version resource is associated with.

        :param service_sid: The service_sid of this ServerlessV1ServiceAssetAssetVersion.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^ZS[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^ZS[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def sid(self):
        """Gets the sid of this ServerlessV1ServiceAssetAssetVersion.

        The unique string that we created to identify the Asset Version resource.

        :return: The sid of this ServerlessV1ServiceAssetAssetVersion.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ServerlessV1ServiceAssetAssetVersion.

        The unique string that we created to identify the Asset Version resource.

        :param sid: The sid of this ServerlessV1ServiceAssetAssetVersion.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^ZN[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^ZN[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def url(self):
        """Gets the url of this ServerlessV1ServiceAssetAssetVersion.

        The absolute URL of the Asset Version resource.

        :return: The url of this ServerlessV1ServiceAssetAssetVersion.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ServerlessV1ServiceAssetAssetVersion.

        The absolute URL of the Asset Version resource.

        :param url: The url of this ServerlessV1ServiceAssetAssetVersion.
        :type url: str
        """

        self._url = url

    @property
    def visibility(self):
        """Gets the visibility of this ServerlessV1ServiceAssetAssetVersion.


        :return: The visibility of this ServerlessV1ServiceAssetAssetVersion.
        :rtype: AssetVersionEnumVisibility
        """
        return self._visibility

    @visibility.setter
    def visibility(self, visibility):
        """Sets the visibility of this ServerlessV1ServiceAssetAssetVersion.


        :param visibility: The visibility of this ServerlessV1ServiceAssetAssetVersion.
        :type visibility: AssetVersionEnumVisibility
        """

        self._visibility = visibility
