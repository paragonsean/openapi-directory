/*
 * Twilio - Serverless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ServerlessV1ServiceEnvironmentDeployment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:26.580952-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ServerlessV1ServiceEnvironmentDeployment {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_BUILD_SID = "build_sid";
  @SerializedName(SERIALIZED_NAME_BUILD_SID)
  private String buildSid;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_ENVIRONMENT_SID = "environment_sid";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_SID)
  private String environmentSid;

  public static final String SERIALIZED_NAME_SERVICE_SID = "service_sid";
  @SerializedName(SERIALIZED_NAME_SERVICE_SID)
  private String serviceSid;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public ServerlessV1ServiceEnvironmentDeployment() {
  }

  public ServerlessV1ServiceEnvironmentDeployment accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Deployment resource.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public ServerlessV1ServiceEnvironmentDeployment buildSid(String buildSid) {
    this.buildSid = buildSid;
    return this;
  }

  /**
   * The SID of the Build for the deployment.
   * @return buildSid
   */
  @javax.annotation.Nullable
  public String getBuildSid() {
    return buildSid;
  }

  public void setBuildSid(String buildSid) {
    this.buildSid = buildSid;
  }


  public ServerlessV1ServiceEnvironmentDeployment dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date and time in GMT when the Deployment resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ServerlessV1ServiceEnvironmentDeployment dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date and time in GMT when the Deployment resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public ServerlessV1ServiceEnvironmentDeployment environmentSid(String environmentSid) {
    this.environmentSid = environmentSid;
    return this;
  }

  /**
   * The SID of the Environment for the Deployment.
   * @return environmentSid
   */
  @javax.annotation.Nullable
  public String getEnvironmentSid() {
    return environmentSid;
  }

  public void setEnvironmentSid(String environmentSid) {
    this.environmentSid = environmentSid;
  }


  public ServerlessV1ServiceEnvironmentDeployment serviceSid(String serviceSid) {
    this.serviceSid = serviceSid;
    return this;
  }

  /**
   * The SID of the Service that the Deployment resource is associated with.
   * @return serviceSid
   */
  @javax.annotation.Nullable
  public String getServiceSid() {
    return serviceSid;
  }

  public void setServiceSid(String serviceSid) {
    this.serviceSid = serviceSid;
  }


  public ServerlessV1ServiceEnvironmentDeployment sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * The unique string that we created to identify the Deployment resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public ServerlessV1ServiceEnvironmentDeployment url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * The absolute URL of the Deployment resource.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServerlessV1ServiceEnvironmentDeployment serverlessV1ServiceEnvironmentDeployment = (ServerlessV1ServiceEnvironmentDeployment) o;
    return Objects.equals(this.accountSid, serverlessV1ServiceEnvironmentDeployment.accountSid) &&
        Objects.equals(this.buildSid, serverlessV1ServiceEnvironmentDeployment.buildSid) &&
        Objects.equals(this.dateCreated, serverlessV1ServiceEnvironmentDeployment.dateCreated) &&
        Objects.equals(this.dateUpdated, serverlessV1ServiceEnvironmentDeployment.dateUpdated) &&
        Objects.equals(this.environmentSid, serverlessV1ServiceEnvironmentDeployment.environmentSid) &&
        Objects.equals(this.serviceSid, serverlessV1ServiceEnvironmentDeployment.serviceSid) &&
        Objects.equals(this.sid, serverlessV1ServiceEnvironmentDeployment.sid) &&
        Objects.equals(this.url, serverlessV1ServiceEnvironmentDeployment.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, buildSid, dateCreated, dateUpdated, environmentSid, serviceSid, sid, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServerlessV1ServiceEnvironmentDeployment {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    buildSid: ").append(toIndentedString(buildSid)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    environmentSid: ").append(toIndentedString(environmentSid)).append("\n");
    sb.append("    serviceSid: ").append(toIndentedString(serviceSid)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("build_sid");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("environment_sid");
    openapiFields.add("service_sid");
    openapiFields.add("sid");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ServerlessV1ServiceEnvironmentDeployment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ServerlessV1ServiceEnvironmentDeployment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServerlessV1ServiceEnvironmentDeployment is not found in the empty JSON string", ServerlessV1ServiceEnvironmentDeployment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ServerlessV1ServiceEnvironmentDeployment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServerlessV1ServiceEnvironmentDeployment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("build_sid") != null && !jsonObj.get("build_sid").isJsonNull()) && !jsonObj.get("build_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `build_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("build_sid").toString()));
      }
      if ((jsonObj.get("environment_sid") != null && !jsonObj.get("environment_sid").isJsonNull()) && !jsonObj.get("environment_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `environment_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("environment_sid").toString()));
      }
      if ((jsonObj.get("service_sid") != null && !jsonObj.get("service_sid").isJsonNull()) && !jsonObj.get("service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServerlessV1ServiceEnvironmentDeployment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServerlessV1ServiceEnvironmentDeployment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServerlessV1ServiceEnvironmentDeployment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServerlessV1ServiceEnvironmentDeployment.class));

       return (TypeAdapter<T>) new TypeAdapter<ServerlessV1ServiceEnvironmentDeployment>() {
           @Override
           public void write(JsonWriter out, ServerlessV1ServiceEnvironmentDeployment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServerlessV1ServiceEnvironmentDeployment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ServerlessV1ServiceEnvironmentDeployment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ServerlessV1ServiceEnvironmentDeployment
   * @throws IOException if the JSON string is invalid with respect to ServerlessV1ServiceEnvironmentDeployment
   */
  public static ServerlessV1ServiceEnvironmentDeployment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServerlessV1ServiceEnvironmentDeployment.class);
  }

  /**
   * Convert an instance of ServerlessV1ServiceEnvironmentDeployment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

