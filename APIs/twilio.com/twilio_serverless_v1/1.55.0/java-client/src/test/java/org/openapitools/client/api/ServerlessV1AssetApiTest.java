/*
 * Twilio - Serverless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListAssetResponse;
import org.openapitools.client.model.ServerlessV1ServiceAsset;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerlessV1AssetApi
 */
@Disabled
public class ServerlessV1AssetApiTest {

    private final ServerlessV1AssetApi api = new ServerlessV1AssetApi();

    /**
     * Create a new Asset resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAssetTest() throws ApiException {
        String serviceSid = null;
        String friendlyName = null;
        ServerlessV1ServiceAsset response = api.createAsset(serviceSid, friendlyName);
        // TODO: test validations
    }

    /**
     * Delete an Asset resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAssetTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        api.deleteAsset(serviceSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a specific Asset resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchAssetTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        ServerlessV1ServiceAsset response = api.fetchAsset(serviceSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all Assets.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAssetTest() throws ApiException {
        String serviceSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListAssetResponse response = api.listAsset(serviceSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update a specific Asset resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAssetTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        String friendlyName = null;
        ServerlessV1ServiceAsset response = api.updateAsset(serviceSid, sid, friendlyName);
        // TODO: test validations
    }

}
