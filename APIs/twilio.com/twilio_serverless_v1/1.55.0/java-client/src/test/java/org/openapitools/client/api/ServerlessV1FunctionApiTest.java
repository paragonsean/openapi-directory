/*
 * Twilio - Serverless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListFunctionResponse;
import org.openapitools.client.model.ServerlessV1ServiceFunction;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerlessV1FunctionApi
 */
@Disabled
public class ServerlessV1FunctionApiTest {

    private final ServerlessV1FunctionApi api = new ServerlessV1FunctionApi();

    /**
     * Create a new Function resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFunctionTest() throws ApiException {
        String serviceSid = null;
        String friendlyName = null;
        ServerlessV1ServiceFunction response = api.createFunction(serviceSid, friendlyName);
        // TODO: test validations
    }

    /**
     * Delete a Function resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFunctionTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        api.deleteFunction(serviceSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a specific Function resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchFunctionTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        ServerlessV1ServiceFunction response = api.fetchFunction(serviceSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all Functions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listFunctionTest() throws ApiException {
        String serviceSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListFunctionResponse response = api.listFunction(serviceSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update a specific Function resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateFunctionTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        String friendlyName = null;
        ServerlessV1ServiceFunction response = api.updateFunction(serviceSid, sid, friendlyName);
        // TODO: test validations
    }

}
