/*
 * Twilio - Serverless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListBuildResponse;
import org.openapitools.client.model.ServerlessV1ServiceBuild;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServerlessV1BuildApi
 */
@Disabled
public class ServerlessV1BuildApiTest {

    private final ServerlessV1BuildApi api = new ServerlessV1BuildApi();

    /**
     * Create a new Build resource. At least one function version or asset version is required.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBuildTest() throws ApiException {
        String serviceSid = null;
        List<String> assetVersions = null;
        String dependencies = null;
        List<String> functionVersions = null;
        String runtime = null;
        ServerlessV1ServiceBuild response = api.createBuild(serviceSid, assetVersions, dependencies, functionVersions, runtime);
        // TODO: test validations
    }

    /**
     * Delete a Build resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBuildTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        api.deleteBuild(serviceSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a specific Build resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchBuildTest() throws ApiException {
        String serviceSid = null;
        String sid = null;
        ServerlessV1ServiceBuild response = api.fetchBuild(serviceSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all Builds.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listBuildTest() throws ApiException {
        String serviceSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListBuildResponse response = api.listBuild(serviceSid, pageSize, page, pageToken);
        // TODO: test validations
    }

}
