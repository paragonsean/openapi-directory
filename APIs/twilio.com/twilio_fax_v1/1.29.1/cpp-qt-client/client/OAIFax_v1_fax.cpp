/**
 * Twilio - Fax
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.29.1
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFax_v1_fax.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFax_v1_fax::OAIFax_v1_fax(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFax_v1_fax::OAIFax_v1_fax() {
    this->initializeModel();
}

OAIFax_v1_fax::~OAIFax_v1_fax() {}

void OAIFax_v1_fax::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_api_version_isSet = false;
    m_api_version_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_direction_isSet = false;
    m_direction_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_from_isSet = false;
    m_from_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;

    m_media_sid_isSet = false;
    m_media_sid_isValid = false;

    m_media_url_isSet = false;
    m_media_url_isValid = false;

    m_num_pages_isSet = false;
    m_num_pages_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_price_unit_isSet = false;
    m_price_unit_isValid = false;

    m_quality_isSet = false;
    m_quality_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIFax_v1_fax::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFax_v1_fax::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_api_version_isValid = ::OpenAPI::fromJsonValue(m_api_version, json[QString("api_version")]);
    m_api_version_isSet = !json[QString("api_version")].isNull() && m_api_version_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_direction_isValid = ::OpenAPI::fromJsonValue(m_direction, json[QString("direction")]);
    m_direction_isSet = !json[QString("direction")].isNull() && m_direction_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_from_isValid = ::OpenAPI::fromJsonValue(m_from, json[QString("from")]);
    m_from_isSet = !json[QString("from")].isNull() && m_from_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_media_sid_isValid = ::OpenAPI::fromJsonValue(m_media_sid, json[QString("media_sid")]);
    m_media_sid_isSet = !json[QString("media_sid")].isNull() && m_media_sid_isValid;

    m_media_url_isValid = ::OpenAPI::fromJsonValue(m_media_url, json[QString("media_url")]);
    m_media_url_isSet = !json[QString("media_url")].isNull() && m_media_url_isValid;

    m_num_pages_isValid = ::OpenAPI::fromJsonValue(m_num_pages, json[QString("num_pages")]);
    m_num_pages_isSet = !json[QString("num_pages")].isNull() && m_num_pages_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_price_unit_isValid = ::OpenAPI::fromJsonValue(m_price_unit, json[QString("price_unit")]);
    m_price_unit_isSet = !json[QString("price_unit")].isNull() && m_price_unit_isValid;

    m_quality_isValid = ::OpenAPI::fromJsonValue(m_quality, json[QString("quality")]);
    m_quality_isSet = !json[QString("quality")].isNull() && m_quality_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIFax_v1_fax::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFax_v1_fax::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_api_version_isSet) {
        obj.insert(QString("api_version"), ::OpenAPI::toJsonValue(m_api_version));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_direction_isSet) {
        obj.insert(QString("direction"), ::OpenAPI::toJsonValue(m_direction));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_from_isSet) {
        obj.insert(QString("from"), ::OpenAPI::toJsonValue(m_from));
    }
    if (m_links_isSet) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_media_sid_isSet) {
        obj.insert(QString("media_sid"), ::OpenAPI::toJsonValue(m_media_sid));
    }
    if (m_media_url_isSet) {
        obj.insert(QString("media_url"), ::OpenAPI::toJsonValue(m_media_url));
    }
    if (m_num_pages_isSet) {
        obj.insert(QString("num_pages"), ::OpenAPI::toJsonValue(m_num_pages));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_price_unit_isSet) {
        obj.insert(QString("price_unit"), ::OpenAPI::toJsonValue(m_price_unit));
    }
    if (m_quality_isSet) {
        obj.insert(QString("quality"), ::OpenAPI::toJsonValue(m_quality));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_to_isSet) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIFax_v1_fax::getAccountSid() const {
    return m_account_sid;
}
void OAIFax_v1_fax::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIFax_v1_fax::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIFax_v1_fax::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIFax_v1_fax::getApiVersion() const {
    return m_api_version;
}
void OAIFax_v1_fax::setApiVersion(const QString &api_version) {
    m_api_version = api_version;
    m_api_version_isSet = true;
}

bool OAIFax_v1_fax::is_api_version_Set() const{
    return m_api_version_isSet;
}

bool OAIFax_v1_fax::is_api_version_Valid() const{
    return m_api_version_isValid;
}

QDateTime OAIFax_v1_fax::getDateCreated() const {
    return m_date_created;
}
void OAIFax_v1_fax::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIFax_v1_fax::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIFax_v1_fax::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIFax_v1_fax::getDateUpdated() const {
    return m_date_updated;
}
void OAIFax_v1_fax::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIFax_v1_fax::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIFax_v1_fax::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIFax_v1_fax::getDirection() const {
    return m_direction;
}
void OAIFax_v1_fax::setDirection(const QString &direction) {
    m_direction = direction;
    m_direction_isSet = true;
}

bool OAIFax_v1_fax::is_direction_Set() const{
    return m_direction_isSet;
}

bool OAIFax_v1_fax::is_direction_Valid() const{
    return m_direction_isValid;
}

qint32 OAIFax_v1_fax::getDuration() const {
    return m_duration;
}
void OAIFax_v1_fax::setDuration(const qint32 &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIFax_v1_fax::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIFax_v1_fax::is_duration_Valid() const{
    return m_duration_isValid;
}

QString OAIFax_v1_fax::getFrom() const {
    return m_from;
}
void OAIFax_v1_fax::setFrom(const QString &from) {
    m_from = from;
    m_from_isSet = true;
}

bool OAIFax_v1_fax::is_from_Set() const{
    return m_from_isSet;
}

bool OAIFax_v1_fax::is_from_Valid() const{
    return m_from_isValid;
}

OAIObject OAIFax_v1_fax::getLinks() const {
    return m_links;
}
void OAIFax_v1_fax::setLinks(const OAIObject &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIFax_v1_fax::is_links_Set() const{
    return m_links_isSet;
}

bool OAIFax_v1_fax::is_links_Valid() const{
    return m_links_isValid;
}

QString OAIFax_v1_fax::getMediaSid() const {
    return m_media_sid;
}
void OAIFax_v1_fax::setMediaSid(const QString &media_sid) {
    m_media_sid = media_sid;
    m_media_sid_isSet = true;
}

bool OAIFax_v1_fax::is_media_sid_Set() const{
    return m_media_sid_isSet;
}

bool OAIFax_v1_fax::is_media_sid_Valid() const{
    return m_media_sid_isValid;
}

QString OAIFax_v1_fax::getMediaUrl() const {
    return m_media_url;
}
void OAIFax_v1_fax::setMediaUrl(const QString &media_url) {
    m_media_url = media_url;
    m_media_url_isSet = true;
}

bool OAIFax_v1_fax::is_media_url_Set() const{
    return m_media_url_isSet;
}

bool OAIFax_v1_fax::is_media_url_Valid() const{
    return m_media_url_isValid;
}

qint32 OAIFax_v1_fax::getNumPages() const {
    return m_num_pages;
}
void OAIFax_v1_fax::setNumPages(const qint32 &num_pages) {
    m_num_pages = num_pages;
    m_num_pages_isSet = true;
}

bool OAIFax_v1_fax::is_num_pages_Set() const{
    return m_num_pages_isSet;
}

bool OAIFax_v1_fax::is_num_pages_Valid() const{
    return m_num_pages_isValid;
}

double OAIFax_v1_fax::getPrice() const {
    return m_price;
}
void OAIFax_v1_fax::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIFax_v1_fax::is_price_Set() const{
    return m_price_isSet;
}

bool OAIFax_v1_fax::is_price_Valid() const{
    return m_price_isValid;
}

QString OAIFax_v1_fax::getPriceUnit() const {
    return m_price_unit;
}
void OAIFax_v1_fax::setPriceUnit(const QString &price_unit) {
    m_price_unit = price_unit;
    m_price_unit_isSet = true;
}

bool OAIFax_v1_fax::is_price_unit_Set() const{
    return m_price_unit_isSet;
}

bool OAIFax_v1_fax::is_price_unit_Valid() const{
    return m_price_unit_isValid;
}

QString OAIFax_v1_fax::getQuality() const {
    return m_quality;
}
void OAIFax_v1_fax::setQuality(const QString &quality) {
    m_quality = quality;
    m_quality_isSet = true;
}

bool OAIFax_v1_fax::is_quality_Set() const{
    return m_quality_isSet;
}

bool OAIFax_v1_fax::is_quality_Valid() const{
    return m_quality_isValid;
}

QString OAIFax_v1_fax::getSid() const {
    return m_sid;
}
void OAIFax_v1_fax::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIFax_v1_fax::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIFax_v1_fax::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIFax_v1_fax::getStatus() const {
    return m_status;
}
void OAIFax_v1_fax::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIFax_v1_fax::is_status_Set() const{
    return m_status_isSet;
}

bool OAIFax_v1_fax::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIFax_v1_fax::getTo() const {
    return m_to;
}
void OAIFax_v1_fax::setTo(const QString &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIFax_v1_fax::is_to_Set() const{
    return m_to_isSet;
}

bool OAIFax_v1_fax::is_to_Valid() const{
    return m_to_isValid;
}

QString OAIFax_v1_fax::getUrl() const {
    return m_url;
}
void OAIFax_v1_fax::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIFax_v1_fax::is_url_Set() const{
    return m_url_isSet;
}

bool OAIFax_v1_fax::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIFax_v1_fax::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_direction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_links_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_pages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quality_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFax_v1_fax::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
