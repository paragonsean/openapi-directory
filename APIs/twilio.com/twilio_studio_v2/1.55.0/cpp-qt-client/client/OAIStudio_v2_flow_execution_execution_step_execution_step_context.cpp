/**
 * Twilio - Studio
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStudio_v2_flow_execution_execution_step_execution_step_context.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStudio_v2_flow_execution_execution_step_execution_step_context::OAIStudio_v2_flow_execution_execution_step_execution_step_context(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStudio_v2_flow_execution_execution_step_execution_step_context::OAIStudio_v2_flow_execution_execution_step_execution_step_context() {
    this->initializeModel();
}

OAIStudio_v2_flow_execution_execution_step_execution_step_context::~OAIStudio_v2_flow_execution_execution_step_execution_step_context() {}

void OAIStudio_v2_flow_execution_execution_step_execution_step_context::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_context_isSet = false;
    m_context_isValid = false;

    m_execution_sid_isSet = false;
    m_execution_sid_isValid = false;

    m_flow_sid_isSet = false;
    m_flow_sid_isValid = false;

    m_step_sid_isSet = false;
    m_step_sid_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIStudio_v2_flow_execution_execution_step_execution_step_context::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStudio_v2_flow_execution_execution_step_execution_step_context::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_context_isValid = ::OpenAPI::fromJsonValue(m_context, json[QString("context")]);
    m_context_isSet = !json[QString("context")].isNull() && m_context_isValid;

    m_execution_sid_isValid = ::OpenAPI::fromJsonValue(m_execution_sid, json[QString("execution_sid")]);
    m_execution_sid_isSet = !json[QString("execution_sid")].isNull() && m_execution_sid_isValid;

    m_flow_sid_isValid = ::OpenAPI::fromJsonValue(m_flow_sid, json[QString("flow_sid")]);
    m_flow_sid_isSet = !json[QString("flow_sid")].isNull() && m_flow_sid_isValid;

    m_step_sid_isValid = ::OpenAPI::fromJsonValue(m_step_sid, json[QString("step_sid")]);
    m_step_sid_isSet = !json[QString("step_sid")].isNull() && m_step_sid_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIStudio_v2_flow_execution_execution_step_execution_step_context::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStudio_v2_flow_execution_execution_step_execution_step_context::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_context_isSet) {
        obj.insert(QString("context"), ::OpenAPI::toJsonValue(m_context));
    }
    if (m_execution_sid_isSet) {
        obj.insert(QString("execution_sid"), ::OpenAPI::toJsonValue(m_execution_sid));
    }
    if (m_flow_sid_isSet) {
        obj.insert(QString("flow_sid"), ::OpenAPI::toJsonValue(m_flow_sid));
    }
    if (m_step_sid_isSet) {
        obj.insert(QString("step_sid"), ::OpenAPI::toJsonValue(m_step_sid));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIStudio_v2_flow_execution_execution_step_execution_step_context::getAccountSid() const {
    return m_account_sid;
}
void OAIStudio_v2_flow_execution_execution_step_execution_step_context::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QJsonValue OAIStudio_v2_flow_execution_execution_step_execution_step_context::getContext() const {
    return m_context;
}
void OAIStudio_v2_flow_execution_execution_step_execution_step_context::setContext(const QJsonValue &context) {
    m_context = context;
    m_context_isSet = true;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::is_context_Set() const{
    return m_context_isSet;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::is_context_Valid() const{
    return m_context_isValid;
}

QString OAIStudio_v2_flow_execution_execution_step_execution_step_context::getExecutionSid() const {
    return m_execution_sid;
}
void OAIStudio_v2_flow_execution_execution_step_execution_step_context::setExecutionSid(const QString &execution_sid) {
    m_execution_sid = execution_sid;
    m_execution_sid_isSet = true;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::is_execution_sid_Set() const{
    return m_execution_sid_isSet;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::is_execution_sid_Valid() const{
    return m_execution_sid_isValid;
}

QString OAIStudio_v2_flow_execution_execution_step_execution_step_context::getFlowSid() const {
    return m_flow_sid;
}
void OAIStudio_v2_flow_execution_execution_step_execution_step_context::setFlowSid(const QString &flow_sid) {
    m_flow_sid = flow_sid;
    m_flow_sid_isSet = true;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::is_flow_sid_Set() const{
    return m_flow_sid_isSet;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::is_flow_sid_Valid() const{
    return m_flow_sid_isValid;
}

QString OAIStudio_v2_flow_execution_execution_step_execution_step_context::getStepSid() const {
    return m_step_sid;
}
void OAIStudio_v2_flow_execution_execution_step_execution_step_context::setStepSid(const QString &step_sid) {
    m_step_sid = step_sid;
    m_step_sid_isSet = true;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::is_step_sid_Set() const{
    return m_step_sid_isSet;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::is_step_sid_Valid() const{
    return m_step_sid_isValid;
}

QString OAIStudio_v2_flow_execution_execution_step_execution_step_context::getUrl() const {
    return m_url;
}
void OAIStudio_v2_flow_execution_execution_step_execution_step_context::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::is_url_Set() const{
    return m_url_isSet;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_context_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flow_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_step_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStudio_v2_flow_execution_execution_step_execution_step_context::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
