/**
 * Twilio - Studio
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FlowValidateEnumStatus from '../model/FlowValidateEnumStatus';
import StudioV2FlowValidate from '../model/StudioV2FlowValidate';

/**
* StudioV2FlowValidate service.
* @module api/StudioV2FlowValidateApi
* @version 1.55.0
*/
export default class StudioV2FlowValidateApi {

    /**
    * Constructs a new StudioV2FlowValidateApi. 
    * @alias module:api/StudioV2FlowValidateApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the updateFlowValidate operation.
     * @callback module:api/StudioV2FlowValidateApi~updateFlowValidateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StudioV2FlowValidate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validate flow JSON definition
     * @param {Object} definition JSON representation of flow definition.
     * @param {String} friendlyName The string that you assigned to describe the Flow.
     * @param {module:model/FlowValidateEnumStatus} status 
     * @param {Object} opts Optional parameters
     * @param {String} [commitMessage] Description of change made in the revision.
     * @param {module:api/StudioV2FlowValidateApi~updateFlowValidateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StudioV2FlowValidate}
     */
    updateFlowValidate(definition, friendlyName, status, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'definition' is set
      if (definition === undefined || definition === null) {
        throw new Error("Missing the required parameter 'definition' when calling updateFlowValidate");
      }
      // verify the required parameter 'friendlyName' is set
      if (friendlyName === undefined || friendlyName === null) {
        throw new Error("Missing the required parameter 'friendlyName' when calling updateFlowValidate");
      }
      // verify the required parameter 'status' is set
      if (status === undefined || status === null) {
        throw new Error("Missing the required parameter 'status' when calling updateFlowValidate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'CommitMessage': opts['commitMessage'],
        'Definition': definition,
        'FriendlyName': friendlyName,
        'Status': status
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = StudioV2FlowValidate;
      let basePaths = ['https://studio.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v2/Flows/Validate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
