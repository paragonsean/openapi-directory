/**
 * Twilio - Wireless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRate_plan_enum_data_limit_strategy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRate_plan_enum_data_limit_strategy::OAIRate_plan_enum_data_limit_strategy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRate_plan_enum_data_limit_strategy::OAIRate_plan_enum_data_limit_strategy() {
    this->initializeModel();
}

OAIRate_plan_enum_data_limit_strategy::~OAIRate_plan_enum_data_limit_strategy() {}

void OAIRate_plan_enum_data_limit_strategy::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIRate_plan_enum_data_limit_strategy::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIRate_plan_enum_data_limit_strategy::fromJson(QString jsonString) {
    
    if ( jsonString.compare("block", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRate_plan_enum_data_limit_strategy::BLOCK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("throttle", Qt::CaseInsensitive) == 0) {
        m_value = eOAIRate_plan_enum_data_limit_strategy::THROTTLE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIRate_plan_enum_data_limit_strategy::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIRate_plan_enum_data_limit_strategy::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIRate_plan_enum_data_limit_strategy::BLOCK:
            val = "block";
            break;
        case eOAIRate_plan_enum_data_limit_strategy::THROTTLE:
            val = "throttle";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIRate_plan_enum_data_limit_strategy::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIRate_plan_enum_data_limit_strategy::eOAIRate_plan_enum_data_limit_strategy OAIRate_plan_enum_data_limit_strategy::getValue() const {
    return m_value;
}

void OAIRate_plan_enum_data_limit_strategy::setValue(const OAIRate_plan_enum_data_limit_strategy::eOAIRate_plan_enum_data_limit_strategy& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIRate_plan_enum_data_limit_strategy::isSet() const {
    
    return m_value_isSet;
}

bool OAIRate_plan_enum_data_limit_strategy::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
