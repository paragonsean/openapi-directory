/**
 * Twilio - Wireless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccount_usage_record_enum_granularity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccount_usage_record_enum_granularity::OAIAccount_usage_record_enum_granularity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccount_usage_record_enum_granularity::OAIAccount_usage_record_enum_granularity() {
    this->initializeModel();
}

OAIAccount_usage_record_enum_granularity::~OAIAccount_usage_record_enum_granularity() {}

void OAIAccount_usage_record_enum_granularity::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAccount_usage_record_enum_granularity::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAccount_usage_record_enum_granularity::fromJson(QString jsonString) {
    
    if ( jsonString.compare("hourly", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccount_usage_record_enum_granularity::HOURLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("daily", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccount_usage_record_enum_granularity::DAILY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("all", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAccount_usage_record_enum_granularity::ALL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAccount_usage_record_enum_granularity::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAccount_usage_record_enum_granularity::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAccount_usage_record_enum_granularity::HOURLY:
            val = "hourly";
            break;
        case eOAIAccount_usage_record_enum_granularity::DAILY:
            val = "daily";
            break;
        case eOAIAccount_usage_record_enum_granularity::ALL:
            val = "all";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAccount_usage_record_enum_granularity::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAccount_usage_record_enum_granularity::eOAIAccount_usage_record_enum_granularity OAIAccount_usage_record_enum_granularity::getValue() const {
    return m_value;
}

void OAIAccount_usage_record_enum_granularity::setValue(const OAIAccount_usage_record_enum_granularity::eOAIAccount_usage_record_enum_granularity& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAccount_usage_record_enum_granularity::isSet() const {
    
    return m_value_isSet;
}

bool OAIAccount_usage_record_enum_granularity::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
