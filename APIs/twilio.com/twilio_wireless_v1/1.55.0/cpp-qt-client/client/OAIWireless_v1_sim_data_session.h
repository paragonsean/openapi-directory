/**
 * Twilio - Wireless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWireless_v1_sim_data_session.h
 *
 * 
 */

#ifndef OAIWireless_v1_sim_data_session_H
#define OAIWireless_v1_sim_data_session_H

#include <QJsonObject>

#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWireless_v1_sim_data_session : public OAIObject {
public:
    OAIWireless_v1_sim_data_session();
    OAIWireless_v1_sim_data_session(QString json);
    ~OAIWireless_v1_sim_data_session() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getCellId() const;
    void setCellId(const QString &cell_id);
    bool is_cell_id_Set() const;
    bool is_cell_id_Valid() const;

    QJsonValue getCellLocationEstimate() const;
    void setCellLocationEstimate(const QJsonValue &cell_location_estimate);
    bool is_cell_location_estimate_Set() const;
    bool is_cell_location_estimate_Valid() const;

    QDateTime getEnd() const;
    void setEnd(const QDateTime &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    QString getImei() const;
    void setImei(const QString &imei);
    bool is_imei_Set() const;
    bool is_imei_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getOperatorCountry() const;
    void setOperatorCountry(const QString &operator_country);
    bool is_operator_country_Set() const;
    bool is_operator_country_Valid() const;

    QString getOperatorMcc() const;
    void setOperatorMcc(const QString &operator_mcc);
    bool is_operator_mcc_Set() const;
    bool is_operator_mcc_Valid() const;

    QString getOperatorMnc() const;
    void setOperatorMnc(const QString &operator_mnc);
    bool is_operator_mnc_Set() const;
    bool is_operator_mnc_Valid() const;

    QString getOperatorName() const;
    void setOperatorName(const QString &operator_name);
    bool is_operator_name_Set() const;
    bool is_operator_name_Valid() const;

    qint32 getPacketsDownloaded() const;
    void setPacketsDownloaded(const qint32 &packets_downloaded);
    bool is_packets_downloaded_Set() const;
    bool is_packets_downloaded_Valid() const;

    qint32 getPacketsUploaded() const;
    void setPacketsUploaded(const qint32 &packets_uploaded);
    bool is_packets_uploaded_Set() const;
    bool is_packets_uploaded_Valid() const;

    QString getRadioLink() const;
    void setRadioLink(const QString &radio_link);
    bool is_radio_link_Set() const;
    bool is_radio_link_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    QString getSimSid() const;
    void setSimSid(const QString &sim_sid);
    bool is_sim_sid_Set() const;
    bool is_sim_sid_Valid() const;

    QDateTime getStart() const;
    void setStart(const QDateTime &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_cell_id;
    bool m_cell_id_isSet;
    bool m_cell_id_isValid;

    QJsonValue m_cell_location_estimate;
    bool m_cell_location_estimate_isSet;
    bool m_cell_location_estimate_isValid;

    QDateTime m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    QString m_imei;
    bool m_imei_isSet;
    bool m_imei_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_operator_country;
    bool m_operator_country_isSet;
    bool m_operator_country_isValid;

    QString m_operator_mcc;
    bool m_operator_mcc_isSet;
    bool m_operator_mcc_isValid;

    QString m_operator_mnc;
    bool m_operator_mnc_isSet;
    bool m_operator_mnc_isValid;

    QString m_operator_name;
    bool m_operator_name_isSet;
    bool m_operator_name_isValid;

    qint32 m_packets_downloaded;
    bool m_packets_downloaded_isSet;
    bool m_packets_downloaded_isValid;

    qint32 m_packets_uploaded;
    bool m_packets_uploaded_isSet;
    bool m_packets_uploaded_isValid;

    QString m_radio_link;
    bool m_radio_link_isSet;
    bool m_radio_link_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    QString m_sim_sid;
    bool m_sim_sid_isSet;
    bool m_sim_sid_isValid;

    QDateTime m_start;
    bool m_start_isSet;
    bool m_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWireless_v1_sim_data_session)

#endif // OAIWireless_v1_sim_data_session_H
