/**
 * Twilio - Wireless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ListRatePlanResponse from '../model/ListRatePlanResponse';
import WirelessV1RatePlan from '../model/WirelessV1RatePlan';

/**
* WirelessV1RatePlan service.
* @module api/WirelessV1RatePlanApi
* @version 1.55.0
*/
export default class WirelessV1RatePlanApi {

    /**
    * Constructs a new WirelessV1RatePlanApi. 
    * @alias module:api/WirelessV1RatePlanApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createRatePlan operation.
     * @callback module:api/WirelessV1RatePlanApi~createRatePlanCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessV1RatePlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {Boolean} [dataEnabled] Whether SIMs can use GPRS/3G/4G/LTE data connectivity.
     * @param {Number} [dataLimit] The total data usage (download and upload combined) in Megabytes that the Network allows during one month on the home network (T-Mobile USA). The metering period begins the day of activation and ends on the same day in the following month. Can be up to 2TB and the default value is `1000`.
     * @param {String} [dataMetering] The model used to meter data usage. Can be: `payg` and `quota-1`, `quota-10`, and `quota-50`. Learn more about the available [data metering models](https://www.twilio.com/docs/iot/wireless/api/rateplan-resource#payg-vs-quota-data-plans).
     * @param {String} [friendlyName] A descriptive string that you create to describe the resource. It does not have to be unique.
     * @param {Array.<String>} [internationalRoaming] The list of services that SIMs capable of using GPRS/3G/4G/LTE data connectivity can use outside of the United States. Can contain: `data` and `messaging`.
     * @param {Number} [internationalRoamingDataLimit] The total data usage (download and upload combined) in Megabytes that the Network allows during one month when roaming outside the United States. Can be up to 2TB.
     * @param {Boolean} [messagingEnabled] Whether SIMs can make, send, and receive SMS using [Commands](https://www.twilio.com/docs/iot/wireless/api/command-resource).
     * @param {Number} [nationalRoamingDataLimit] The total data usage (download and upload combined) in Megabytes that the Network allows during one month on non-home networks in the United States. The metering period begins the day of activation and ends on the same day in the following month. Can be up to 2TB. See [national roaming](https://www.twilio.com/docs/iot/wireless/api/rateplan-resource#national-roaming) for more info.
     * @param {Boolean} [nationalRoamingEnabled] Whether SIMs can roam on networks other than the home network (T-Mobile USA) in the United States. See [national roaming](https://www.twilio.com/docs/iot/wireless/api/rateplan-resource#national-roaming).
     * @param {String} [uniqueName] An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.
     * @param {Boolean} [voiceEnabled] Deprecated.
     * @param {module:api/WirelessV1RatePlanApi~createRatePlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessV1RatePlan}
     */
    createRatePlan(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'DataEnabled': opts['dataEnabled'],
        'DataLimit': opts['dataLimit'],
        'DataMetering': opts['dataMetering'],
        'FriendlyName': opts['friendlyName'],
        'InternationalRoaming': this.apiClient.buildCollectionParam(opts['internationalRoaming'], 'csv'),
        'InternationalRoamingDataLimit': opts['internationalRoamingDataLimit'],
        'MessagingEnabled': opts['messagingEnabled'],
        'NationalRoamingDataLimit': opts['nationalRoamingDataLimit'],
        'NationalRoamingEnabled': opts['nationalRoamingEnabled'],
        'UniqueName': opts['uniqueName'],
        'VoiceEnabled': opts['voiceEnabled']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = WirelessV1RatePlan;
      let basePaths = ['https://wireless.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/RatePlans', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteRatePlan operation.
     * @callback module:api/WirelessV1RatePlanApi~deleteRatePlanCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} sid The SID of the RatePlan resource to delete.
     * @param {module:api/WirelessV1RatePlanApi~deleteRatePlanCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteRatePlan(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling deleteRatePlan");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://wireless.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/RatePlans/{Sid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the fetchRatePlan operation.
     * @callback module:api/WirelessV1RatePlanApi~fetchRatePlanCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessV1RatePlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} sid The SID of the RatePlan resource to fetch.
     * @param {module:api/WirelessV1RatePlanApi~fetchRatePlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessV1RatePlan}
     */
    fetchRatePlan(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling fetchRatePlan");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WirelessV1RatePlan;
      let basePaths = ['https://wireless.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/RatePlans/{Sid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the listRatePlan operation.
     * @callback module:api/WirelessV1RatePlanApi~listRatePlanCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListRatePlanResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize] How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * @param {Number} [page] The page index. This value is simply for client state.
     * @param {String} [pageToken] The page token. This is provided by the API.
     * @param {module:api/WirelessV1RatePlanApi~listRatePlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListRatePlanResponse}
     */
    listRatePlan(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'PageSize': opts['pageSize'],
        'Page': opts['page'],
        'PageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListRatePlanResponse;
      let basePaths = ['https://wireless.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/RatePlans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }

    /**
     * Callback function to receive the result of the updateRatePlan operation.
     * @callback module:api/WirelessV1RatePlanApi~updateRatePlanCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WirelessV1RatePlan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} sid The SID of the RatePlan resource to update.
     * @param {Object} opts Optional parameters
     * @param {String} [friendlyName] A descriptive string that you create to describe the resource. It does not have to be unique.
     * @param {String} [uniqueName] An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.
     * @param {module:api/WirelessV1RatePlanApi~updateRatePlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WirelessV1RatePlan}
     */
    updateRatePlan(sid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling updateRatePlan");
      }

      let pathParams = {
        'Sid': sid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'FriendlyName': opts['friendlyName'],
        'UniqueName': opts['uniqueName']
      };

      let authNames = ['accountSid_authToken'];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = WirelessV1RatePlan;
      let basePaths = ['https://wireless.twilio.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/v1/RatePlans/{Sid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
