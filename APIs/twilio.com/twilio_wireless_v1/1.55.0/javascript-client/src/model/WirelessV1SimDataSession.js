/**
 * Twilio - Wireless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WirelessV1SimDataSession model module.
 * @module model/WirelessV1SimDataSession
 * @version 1.55.0
 */
class WirelessV1SimDataSession {
    /**
     * Constructs a new <code>WirelessV1SimDataSession</code>.
     * @alias module:model/WirelessV1SimDataSession
     */
    constructor() { 
        
        WirelessV1SimDataSession.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WirelessV1SimDataSession</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WirelessV1SimDataSession} obj Optional instance to populate.
     * @return {module:model/WirelessV1SimDataSession} The populated <code>WirelessV1SimDataSession</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WirelessV1SimDataSession();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('cell_id')) {
                obj['cell_id'] = ApiClient.convertToType(data['cell_id'], 'String');
            }
            if (data.hasOwnProperty('cell_location_estimate')) {
                obj['cell_location_estimate'] = ApiClient.convertToType(data['cell_location_estimate'], Object);
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'Date');
            }
            if (data.hasOwnProperty('imei')) {
                obj['imei'] = ApiClient.convertToType(data['imei'], 'String');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'Date');
            }
            if (data.hasOwnProperty('operator_country')) {
                obj['operator_country'] = ApiClient.convertToType(data['operator_country'], 'String');
            }
            if (data.hasOwnProperty('operator_mcc')) {
                obj['operator_mcc'] = ApiClient.convertToType(data['operator_mcc'], 'String');
            }
            if (data.hasOwnProperty('operator_mnc')) {
                obj['operator_mnc'] = ApiClient.convertToType(data['operator_mnc'], 'String');
            }
            if (data.hasOwnProperty('operator_name')) {
                obj['operator_name'] = ApiClient.convertToType(data['operator_name'], 'String');
            }
            if (data.hasOwnProperty('packets_downloaded')) {
                obj['packets_downloaded'] = ApiClient.convertToType(data['packets_downloaded'], 'Number');
            }
            if (data.hasOwnProperty('packets_uploaded')) {
                obj['packets_uploaded'] = ApiClient.convertToType(data['packets_uploaded'], 'Number');
            }
            if (data.hasOwnProperty('radio_link')) {
                obj['radio_link'] = ApiClient.convertToType(data['radio_link'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('sim_sid')) {
                obj['sim_sid'] = ApiClient.convertToType(data['sim_sid'], 'String');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WirelessV1SimDataSession</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WirelessV1SimDataSession</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['cell_id'] && !(typeof data['cell_id'] === 'string' || data['cell_id'] instanceof String)) {
            throw new Error("Expected the field `cell_id` to be a primitive type in the JSON string but got " + data['cell_id']);
        }
        // ensure the json data is a string
        if (data['imei'] && !(typeof data['imei'] === 'string' || data['imei'] instanceof String)) {
            throw new Error("Expected the field `imei` to be a primitive type in the JSON string but got " + data['imei']);
        }
        // ensure the json data is a string
        if (data['operator_country'] && !(typeof data['operator_country'] === 'string' || data['operator_country'] instanceof String)) {
            throw new Error("Expected the field `operator_country` to be a primitive type in the JSON string but got " + data['operator_country']);
        }
        // ensure the json data is a string
        if (data['operator_mcc'] && !(typeof data['operator_mcc'] === 'string' || data['operator_mcc'] instanceof String)) {
            throw new Error("Expected the field `operator_mcc` to be a primitive type in the JSON string but got " + data['operator_mcc']);
        }
        // ensure the json data is a string
        if (data['operator_mnc'] && !(typeof data['operator_mnc'] === 'string' || data['operator_mnc'] instanceof String)) {
            throw new Error("Expected the field `operator_mnc` to be a primitive type in the JSON string but got " + data['operator_mnc']);
        }
        // ensure the json data is a string
        if (data['operator_name'] && !(typeof data['operator_name'] === 'string' || data['operator_name'] instanceof String)) {
            throw new Error("Expected the field `operator_name` to be a primitive type in the JSON string but got " + data['operator_name']);
        }
        // ensure the json data is a string
        if (data['radio_link'] && !(typeof data['radio_link'] === 'string' || data['radio_link'] instanceof String)) {
            throw new Error("Expected the field `radio_link` to be a primitive type in the JSON string but got " + data['radio_link']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['sim_sid'] && !(typeof data['sim_sid'] === 'string' || data['sim_sid'] instanceof String)) {
            throw new Error("Expected the field `sim_sid` to be a primitive type in the JSON string but got " + data['sim_sid']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the DataSession resource.
 * @member {String} account_sid
 */
WirelessV1SimDataSession.prototype['account_sid'] = undefined;

/**
 * The unique ID of the cellular tower that the device was attached to at the moment when the Data Session was last updated.
 * @member {String} cell_id
 */
WirelessV1SimDataSession.prototype['cell_id'] = undefined;

/**
 * An object that describes the estimated location in latitude and longitude where the device's Data Session took place. The location is derived from the `cell_id` when the Data Session was last updated. See [Cell Location Estimate Object](https://www.twilio.com/docs/iot/wireless/api/datasession-resource#cell-location-estimate-object). 
 * @member {Object} cell_location_estimate
 */
WirelessV1SimDataSession.prototype['cell_location_estimate'] = undefined;

/**
 * The date that the record ended, given as GMT in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
 * @member {Date} end
 */
WirelessV1SimDataSession.prototype['end'] = undefined;

/**
 * The 'international mobile equipment identity' is the unique ID of the device using the SIM to connect. An IMEI is a 15-digit string: 14 digits for the device identifier plus a check digit calculated using the Luhn formula.
 * @member {String} imei
 */
WirelessV1SimDataSession.prototype['imei'] = undefined;

/**
 * The date that the resource was last updated, given as GMT in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
 * @member {Date} last_updated
 */
WirelessV1SimDataSession.prototype['last_updated'] = undefined;

/**
 * The three letter country code representing where the device's Data Session took place. This is determined by looking up the `operator_mcc`.
 * @member {String} operator_country
 */
WirelessV1SimDataSession.prototype['operator_country'] = undefined;

/**
 * The 'mobile country code' is the unique ID of the home country where the Data Session took place. See: [MCC/MNC lookup](http://mcc-mnc.com/).
 * @member {String} operator_mcc
 */
WirelessV1SimDataSession.prototype['operator_mcc'] = undefined;

/**
 * The 'mobile network code' is the unique ID specific to the mobile operator network where the Data Session took place.
 * @member {String} operator_mnc
 */
WirelessV1SimDataSession.prototype['operator_mnc'] = undefined;

/**
 * The friendly name of the mobile operator network that the [SIM](https://www.twilio.com/docs/iot/wireless/api/sim-resource)-connected device is attached to. This is determined by looking up the `operator_mnc`.
 * @member {String} operator_name
 */
WirelessV1SimDataSession.prototype['operator_name'] = undefined;

/**
 * The number of packets downloaded by the device between the `start` time and when the Data Session was last updated.
 * @member {Number} packets_downloaded
 */
WirelessV1SimDataSession.prototype['packets_downloaded'] = undefined;

/**
 * The number of packets uploaded by the device between the `start` time and when the Data Session was last updated.
 * @member {Number} packets_uploaded
 */
WirelessV1SimDataSession.prototype['packets_uploaded'] = undefined;

/**
 * The generation of wireless technology that the device was using.
 * @member {String} radio_link
 */
WirelessV1SimDataSession.prototype['radio_link'] = undefined;

/**
 * The unique string that we created to identify the DataSession resource.
 * @member {String} sid
 */
WirelessV1SimDataSession.prototype['sid'] = undefined;

/**
 * The SID of the [Sim resource](https://www.twilio.com/docs/iot/wireless/api/sim-resource) that the Data Session is for.
 * @member {String} sim_sid
 */
WirelessV1SimDataSession.prototype['sim_sid'] = undefined;

/**
 * The date that the Data Session started, given as GMT in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
 * @member {Date} start
 */
WirelessV1SimDataSession.prototype['start'] = undefined;






export default WirelessV1SimDataSession;

