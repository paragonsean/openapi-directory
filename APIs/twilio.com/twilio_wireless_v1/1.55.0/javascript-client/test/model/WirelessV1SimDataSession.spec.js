/**
 * Twilio - Wireless
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwilioWireless);
  }
}(this, function(expect, TwilioWireless) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwilioWireless.WirelessV1SimDataSession();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WirelessV1SimDataSession', function() {
    it('should create an instance of WirelessV1SimDataSession', function() {
      // uncomment below and update the code to test WirelessV1SimDataSession
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be.a(TwilioWireless.WirelessV1SimDataSession);
    });

    it('should have the property accountSid (base name: "account_sid")', function() {
      // uncomment below and update the code to test the property accountSid
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property cellId (base name: "cell_id")', function() {
      // uncomment below and update the code to test the property cellId
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property cellLocationEstimate (base name: "cell_location_estimate")', function() {
      // uncomment below and update the code to test the property cellLocationEstimate
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property end (base name: "end")', function() {
      // uncomment below and update the code to test the property end
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property imei (base name: "imei")', function() {
      // uncomment below and update the code to test the property imei
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdated (base name: "last_updated")', function() {
      // uncomment below and update the code to test the property lastUpdated
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property operatorCountry (base name: "operator_country")', function() {
      // uncomment below and update the code to test the property operatorCountry
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property operatorMcc (base name: "operator_mcc")', function() {
      // uncomment below and update the code to test the property operatorMcc
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property operatorMnc (base name: "operator_mnc")', function() {
      // uncomment below and update the code to test the property operatorMnc
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property operatorName (base name: "operator_name")', function() {
      // uncomment below and update the code to test the property operatorName
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property packetsDownloaded (base name: "packets_downloaded")', function() {
      // uncomment below and update the code to test the property packetsDownloaded
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property packetsUploaded (base name: "packets_uploaded")', function() {
      // uncomment below and update the code to test the property packetsUploaded
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property radioLink (base name: "radio_link")', function() {
      // uncomment below and update the code to test the property radioLink
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property sid (base name: "sid")', function() {
      // uncomment below and update the code to test the property sid
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property simSid (base name: "sim_sid")', function() {
      // uncomment below and update the code to test the property simSid
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

    it('should have the property start (base name: "start")', function() {
      // uncomment below and update the code to test the property start
      //var instance = new TwilioWireless.WirelessV1SimDataSession();
      //expect(instance).to.be();
    });

  });

}));
