/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIParticipant_conversation_enum_state.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIParticipant_conversation_enum_state::OAIParticipant_conversation_enum_state(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIParticipant_conversation_enum_state::OAIParticipant_conversation_enum_state() {
    this->initializeModel();
}

OAIParticipant_conversation_enum_state::~OAIParticipant_conversation_enum_state() {}

void OAIParticipant_conversation_enum_state::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIParticipant_conversation_enum_state::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIParticipant_conversation_enum_state::fromJson(QString jsonString) {
    
    if ( jsonString.compare("inactive", Qt::CaseInsensitive) == 0) {
        m_value = eOAIParticipant_conversation_enum_state::INACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("active", Qt::CaseInsensitive) == 0) {
        m_value = eOAIParticipant_conversation_enum_state::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("closed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIParticipant_conversation_enum_state::CLOSED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIParticipant_conversation_enum_state::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIParticipant_conversation_enum_state::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIParticipant_conversation_enum_state::INACTIVE:
            val = "inactive";
            break;
        case eOAIParticipant_conversation_enum_state::ACTIVE:
            val = "active";
            break;
        case eOAIParticipant_conversation_enum_state::CLOSED:
            val = "closed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIParticipant_conversation_enum_state::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIParticipant_conversation_enum_state::eOAIParticipant_conversation_enum_state OAIParticipant_conversation_enum_state::getValue() const {
    return m_value;
}

void OAIParticipant_conversation_enum_state::setValue(const OAIParticipant_conversation_enum_state::eOAIParticipant_conversation_enum_state& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIParticipant_conversation_enum_state::isSet() const {
    
    return m_value_isSet;
}

bool OAIParticipant_conversation_enum_state::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
