/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConversations_v1_conversation_conversation_message_conversation_message_receipt.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::OAIConversations_v1_conversation_conversation_message_conversation_message_receipt(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::OAIConversations_v1_conversation_conversation_message_conversation_message_receipt() {
    this->initializeModel();
}

OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::~OAIConversations_v1_conversation_conversation_message_conversation_message_receipt() {}

void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_channel_message_sid_isSet = false;
    m_channel_message_sid_isValid = false;

    m_conversation_sid_isSet = false;
    m_conversation_sid_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_message_sid_isSet = false;
    m_message_sid_isValid = false;

    m_participant_sid_isSet = false;
    m_participant_sid_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_channel_message_sid_isValid = ::OpenAPI::fromJsonValue(m_channel_message_sid, json[QString("channel_message_sid")]);
    m_channel_message_sid_isSet = !json[QString("channel_message_sid")].isNull() && m_channel_message_sid_isValid;

    m_conversation_sid_isValid = ::OpenAPI::fromJsonValue(m_conversation_sid, json[QString("conversation_sid")]);
    m_conversation_sid_isSet = !json[QString("conversation_sid")].isNull() && m_conversation_sid_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("error_code")]);
    m_error_code_isSet = !json[QString("error_code")].isNull() && m_error_code_isValid;

    m_message_sid_isValid = ::OpenAPI::fromJsonValue(m_message_sid, json[QString("message_sid")]);
    m_message_sid_isSet = !json[QString("message_sid")].isNull() && m_message_sid_isValid;

    m_participant_sid_isValid = ::OpenAPI::fromJsonValue(m_participant_sid, json[QString("participant_sid")]);
    m_participant_sid_isSet = !json[QString("participant_sid")].isNull() && m_participant_sid_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_channel_message_sid_isSet) {
        obj.insert(QString("channel_message_sid"), ::OpenAPI::toJsonValue(m_channel_message_sid));
    }
    if (m_conversation_sid_isSet) {
        obj.insert(QString("conversation_sid"), ::OpenAPI::toJsonValue(m_conversation_sid));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_error_code_isSet) {
        obj.insert(QString("error_code"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_message_sid_isSet) {
        obj.insert(QString("message_sid"), ::OpenAPI::toJsonValue(m_message_sid));
    }
    if (m_participant_sid_isSet) {
        obj.insert(QString("participant_sid"), ::OpenAPI::toJsonValue(m_participant_sid));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::getAccountSid() const {
    return m_account_sid;
}
void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QString OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::getChannelMessageSid() const {
    return m_channel_message_sid;
}
void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::setChannelMessageSid(const QString &channel_message_sid) {
    m_channel_message_sid = channel_message_sid;
    m_channel_message_sid_isSet = true;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_channel_message_sid_Set() const{
    return m_channel_message_sid_isSet;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_channel_message_sid_Valid() const{
    return m_channel_message_sid_isValid;
}

QString OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::getConversationSid() const {
    return m_conversation_sid;
}
void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::setConversationSid(const QString &conversation_sid) {
    m_conversation_sid = conversation_sid;
    m_conversation_sid_isSet = true;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_conversation_sid_Set() const{
    return m_conversation_sid_isSet;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_conversation_sid_Valid() const{
    return m_conversation_sid_isValid;
}

QDateTime OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::getDateCreated() const {
    return m_date_created;
}
void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::getDateUpdated() const {
    return m_date_updated;
}
void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

qint32 OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::getErrorCode() const {
    return m_error_code;
}
void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::setErrorCode(const qint32 &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::getMessageSid() const {
    return m_message_sid;
}
void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::setMessageSid(const QString &message_sid) {
    m_message_sid = message_sid;
    m_message_sid_isSet = true;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_message_sid_Set() const{
    return m_message_sid_isSet;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_message_sid_Valid() const{
    return m_message_sid_isValid;
}

QString OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::getParticipantSid() const {
    return m_participant_sid;
}
void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::setParticipantSid(const QString &participant_sid) {
    m_participant_sid = participant_sid;
    m_participant_sid_isSet = true;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_participant_sid_Set() const{
    return m_participant_sid_isSet;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_participant_sid_Valid() const{
    return m_participant_sid_isValid;
}

QString OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::getSid() const {
    return m_sid;
}
void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_sid_Valid() const{
    return m_sid_isValid;
}

OAIConversation_message_receipt_enum_delivery_status OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::getStatus() const {
    return m_status;
}
void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::setStatus(const OAIConversation_message_receipt_enum_delivery_status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_status_Set() const{
    return m_status_isSet;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::getUrl() const {
    return m_url;
}
void OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_url_Set() const{
    return m_url_isSet;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_message_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversation_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_participant_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConversations_v1_conversation_conversation_message_conversation_message_receipt::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
