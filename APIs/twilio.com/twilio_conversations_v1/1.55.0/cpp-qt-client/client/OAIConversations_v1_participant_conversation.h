/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConversations_v1_participant_conversation.h
 *
 * 
 */

#ifndef OAIConversations_v1_participant_conversation_H
#define OAIConversations_v1_participant_conversation_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIParticipant_conversation_enum_state.h"
#include <QDateTime>
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConversations_v1_participant_conversation : public OAIObject {
public:
    OAIConversations_v1_participant_conversation();
    OAIConversations_v1_participant_conversation(QString json);
    ~OAIConversations_v1_participant_conversation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getChatServiceSid() const;
    void setChatServiceSid(const QString &chat_service_sid);
    bool is_chat_service_sid_Set() const;
    bool is_chat_service_sid_Valid() const;

    QString getConversationAttributes() const;
    void setConversationAttributes(const QString &conversation_attributes);
    bool is_conversation_attributes_Set() const;
    bool is_conversation_attributes_Valid() const;

    QString getConversationCreatedBy() const;
    void setConversationCreatedBy(const QString &conversation_created_by);
    bool is_conversation_created_by_Set() const;
    bool is_conversation_created_by_Valid() const;

    QDateTime getConversationDateCreated() const;
    void setConversationDateCreated(const QDateTime &conversation_date_created);
    bool is_conversation_date_created_Set() const;
    bool is_conversation_date_created_Valid() const;

    QDateTime getConversationDateUpdated() const;
    void setConversationDateUpdated(const QDateTime &conversation_date_updated);
    bool is_conversation_date_updated_Set() const;
    bool is_conversation_date_updated_Valid() const;

    QString getConversationFriendlyName() const;
    void setConversationFriendlyName(const QString &conversation_friendly_name);
    bool is_conversation_friendly_name_Set() const;
    bool is_conversation_friendly_name_Valid() const;

    QString getConversationSid() const;
    void setConversationSid(const QString &conversation_sid);
    bool is_conversation_sid_Set() const;
    bool is_conversation_sid_Valid() const;

    OAIParticipant_conversation_enum_state getConversationState() const;
    void setConversationState(const OAIParticipant_conversation_enum_state &conversation_state);
    bool is_conversation_state_Set() const;
    bool is_conversation_state_Valid() const;

    QJsonValue getConversationTimers() const;
    void setConversationTimers(const QJsonValue &conversation_timers);
    bool is_conversation_timers_Set() const;
    bool is_conversation_timers_Valid() const;

    QString getConversationUniqueName() const;
    void setConversationUniqueName(const QString &conversation_unique_name);
    bool is_conversation_unique_name_Set() const;
    bool is_conversation_unique_name_Valid() const;

    OAIObject getLinks() const;
    void setLinks(const OAIObject &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getParticipantIdentity() const;
    void setParticipantIdentity(const QString &participant_identity);
    bool is_participant_identity_Set() const;
    bool is_participant_identity_Valid() const;

    QJsonValue getParticipantMessagingBinding() const;
    void setParticipantMessagingBinding(const QJsonValue &participant_messaging_binding);
    bool is_participant_messaging_binding_Set() const;
    bool is_participant_messaging_binding_Valid() const;

    QString getParticipantSid() const;
    void setParticipantSid(const QString &participant_sid);
    bool is_participant_sid_Set() const;
    bool is_participant_sid_Valid() const;

    QString getParticipantUserSid() const;
    void setParticipantUserSid(const QString &participant_user_sid);
    bool is_participant_user_sid_Set() const;
    bool is_participant_user_sid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_chat_service_sid;
    bool m_chat_service_sid_isSet;
    bool m_chat_service_sid_isValid;

    QString m_conversation_attributes;
    bool m_conversation_attributes_isSet;
    bool m_conversation_attributes_isValid;

    QString m_conversation_created_by;
    bool m_conversation_created_by_isSet;
    bool m_conversation_created_by_isValid;

    QDateTime m_conversation_date_created;
    bool m_conversation_date_created_isSet;
    bool m_conversation_date_created_isValid;

    QDateTime m_conversation_date_updated;
    bool m_conversation_date_updated_isSet;
    bool m_conversation_date_updated_isValid;

    QString m_conversation_friendly_name;
    bool m_conversation_friendly_name_isSet;
    bool m_conversation_friendly_name_isValid;

    QString m_conversation_sid;
    bool m_conversation_sid_isSet;
    bool m_conversation_sid_isValid;

    OAIParticipant_conversation_enum_state m_conversation_state;
    bool m_conversation_state_isSet;
    bool m_conversation_state_isValid;

    QJsonValue m_conversation_timers;
    bool m_conversation_timers_isSet;
    bool m_conversation_timers_isValid;

    QString m_conversation_unique_name;
    bool m_conversation_unique_name_isSet;
    bool m_conversation_unique_name_isValid;

    OAIObject m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_participant_identity;
    bool m_participant_identity_isSet;
    bool m_participant_identity_isValid;

    QJsonValue m_participant_messaging_binding;
    bool m_participant_messaging_binding_isSet;
    bool m_participant_messaging_binding_isValid;

    QString m_participant_sid;
    bool m_participant_sid_isSet;
    bool m_participant_sid_isValid;

    QString m_participant_user_sid;
    bool m_participant_user_sid_isSet;
    bool m_participant_user_sid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConversations_v1_participant_conversation)

#endif // OAIConversations_v1_participant_conversation_H
