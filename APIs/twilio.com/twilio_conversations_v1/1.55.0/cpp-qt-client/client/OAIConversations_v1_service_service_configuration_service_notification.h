/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConversations_v1_service_service_configuration_service_notification.h
 *
 * 
 */

#ifndef OAIConversations_v1_service_service_configuration_service_notification_H
#define OAIConversations_v1_service_service_configuration_service_notification_H

#include <QJsonObject>

#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConversations_v1_service_service_configuration_service_notification : public OAIObject {
public:
    OAIConversations_v1_service_service_configuration_service_notification();
    OAIConversations_v1_service_service_configuration_service_notification(QString json);
    ~OAIConversations_v1_service_service_configuration_service_notification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QJsonValue getAddedToConversation() const;
    void setAddedToConversation(const QJsonValue &added_to_conversation);
    bool is_added_to_conversation_Set() const;
    bool is_added_to_conversation_Valid() const;

    QString getChatServiceSid() const;
    void setChatServiceSid(const QString &chat_service_sid);
    bool is_chat_service_sid_Set() const;
    bool is_chat_service_sid_Valid() const;

    bool isLogEnabled() const;
    void setLogEnabled(const bool &log_enabled);
    bool is_log_enabled_Set() const;
    bool is_log_enabled_Valid() const;

    QJsonValue getNewMessage() const;
    void setNewMessage(const QJsonValue &new_message);
    bool is_new_message_Set() const;
    bool is_new_message_Valid() const;

    QJsonValue getRemovedFromConversation() const;
    void setRemovedFromConversation(const QJsonValue &removed_from_conversation);
    bool is_removed_from_conversation_Set() const;
    bool is_removed_from_conversation_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QJsonValue m_added_to_conversation;
    bool m_added_to_conversation_isSet;
    bool m_added_to_conversation_isValid;

    QString m_chat_service_sid;
    bool m_chat_service_sid_isSet;
    bool m_chat_service_sid_isValid;

    bool m_log_enabled;
    bool m_log_enabled_isSet;
    bool m_log_enabled_isValid;

    QJsonValue m_new_message;
    bool m_new_message_isSet;
    bool m_new_message_isValid;

    QJsonValue m_removed_from_conversation;
    bool m_removed_from_conversation_isSet;
    bool m_removed_from_conversation_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConversations_v1_service_service_configuration_service_notification)

#endif // OAIConversations_v1_service_service_configuration_service_notification_H
