/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConversations_v1_configuration_configuration_webhook.h
 *
 * 
 */

#ifndef OAIConversations_v1_configuration_configuration_webhook_H
#define OAIConversations_v1_configuration_configuration_webhook_H

#include <QJsonObject>

#include "OAIConfiguration_webhook_enum_method.h"
#include "OAIConfiguration_webhook_enum_target.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConversations_v1_configuration_configuration_webhook : public OAIObject {
public:
    OAIConversations_v1_configuration_configuration_webhook();
    OAIConversations_v1_configuration_configuration_webhook(QString json);
    ~OAIConversations_v1_configuration_configuration_webhook() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QList<QString> getFilters() const;
    void setFilters(const QList<QString> &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    OAIConfiguration_webhook_enum_method getMethod() const;
    void setMethod(const OAIConfiguration_webhook_enum_method &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    QString getPostWebhookUrl() const;
    void setPostWebhookUrl(const QString &post_webhook_url);
    bool is_post_webhook_url_Set() const;
    bool is_post_webhook_url_Valid() const;

    QString getPreWebhookUrl() const;
    void setPreWebhookUrl(const QString &pre_webhook_url);
    bool is_pre_webhook_url_Set() const;
    bool is_pre_webhook_url_Valid() const;

    OAIConfiguration_webhook_enum_target getTarget() const;
    void setTarget(const OAIConfiguration_webhook_enum_target &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QList<QString> m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;

    OAIConfiguration_webhook_enum_method m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    QString m_post_webhook_url;
    bool m_post_webhook_url_isSet;
    bool m_post_webhook_url_isValid;

    QString m_pre_webhook_url;
    bool m_pre_webhook_url_isSet;
    bool m_pre_webhook_url_isValid;

    OAIConfiguration_webhook_enum_target m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConversations_v1_configuration_configuration_webhook)

#endif // OAIConversations_v1_configuration_configuration_webhook_H
