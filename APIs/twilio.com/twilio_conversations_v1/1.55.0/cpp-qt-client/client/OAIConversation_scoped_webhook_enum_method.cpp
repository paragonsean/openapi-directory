/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConversation_scoped_webhook_enum_method.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConversation_scoped_webhook_enum_method::OAIConversation_scoped_webhook_enum_method(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConversation_scoped_webhook_enum_method::OAIConversation_scoped_webhook_enum_method() {
    this->initializeModel();
}

OAIConversation_scoped_webhook_enum_method::~OAIConversation_scoped_webhook_enum_method() {}

void OAIConversation_scoped_webhook_enum_method::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIConversation_scoped_webhook_enum_method::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIConversation_scoped_webhook_enum_method::fromJson(QString jsonString) {
    
    if ( jsonString.compare("GET", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConversation_scoped_webhook_enum_method::GET;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("POST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIConversation_scoped_webhook_enum_method::POST;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIConversation_scoped_webhook_enum_method::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIConversation_scoped_webhook_enum_method::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIConversation_scoped_webhook_enum_method::GET:
            val = "GET";
            break;
        case eOAIConversation_scoped_webhook_enum_method::POST:
            val = "POST";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIConversation_scoped_webhook_enum_method::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIConversation_scoped_webhook_enum_method::eOAIConversation_scoped_webhook_enum_method OAIConversation_scoped_webhook_enum_method::getValue() const {
    return m_value;
}

void OAIConversation_scoped_webhook_enum_method::setValue(const OAIConversation_scoped_webhook_enum_method::eOAIConversation_scoped_webhook_enum_method& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIConversation_scoped_webhook_enum_method::isSet() const {
    
    return m_value_isSet;
}

bool OAIConversation_scoped_webhook_enum_method::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
