/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConversations_v1_conversation_conversation_message.h
 *
 * 
 */

#ifndef OAIConversations_v1_conversation_conversation_message_H
#define OAIConversations_v1_conversation_conversation_message_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConversations_v1_conversation_conversation_message : public OAIObject {
public:
    OAIConversations_v1_conversation_conversation_message();
    OAIConversations_v1_conversation_conversation_message(QString json);
    ~OAIConversations_v1_conversation_conversation_message() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountSid() const;
    void setAccountSid(const QString &account_sid);
    bool is_account_sid_Set() const;
    bool is_account_sid_Valid() const;

    QString getAttributes() const;
    void setAttributes(const QString &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getAuthor() const;
    void setAuthor(const QString &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getContentSid() const;
    void setContentSid(const QString &content_sid);
    bool is_content_sid_Set() const;
    bool is_content_sid_Valid() const;

    QString getConversationSid() const;
    void setConversationSid(const QString &conversation_sid);
    bool is_conversation_sid_Set() const;
    bool is_conversation_sid_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QDateTime getDateUpdated() const;
    void setDateUpdated(const QDateTime &date_updated);
    bool is_date_updated_Set() const;
    bool is_date_updated_Valid() const;

    QJsonValue getDelivery() const;
    void setDelivery(const QJsonValue &delivery);
    bool is_delivery_Set() const;
    bool is_delivery_Valid() const;

    qint32 getIndex() const;
    void setIndex(const qint32 &index);
    bool is_index_Set() const;
    bool is_index_Valid() const;

    OAIObject getLinks() const;
    void setLinks(const OAIObject &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QList<QJsonValue> getMedia() const;
    void setMedia(const QList<QJsonValue> &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    QString getParticipantSid() const;
    void setParticipantSid(const QString &participant_sid);
    bool is_participant_sid_Set() const;
    bool is_participant_sid_Valid() const;

    QString getSid() const;
    void setSid(const QString &sid);
    bool is_sid_Set() const;
    bool is_sid_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_sid;
    bool m_account_sid_isSet;
    bool m_account_sid_isValid;

    QString m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_content_sid;
    bool m_content_sid_isSet;
    bool m_content_sid_isValid;

    QString m_conversation_sid;
    bool m_conversation_sid_isSet;
    bool m_conversation_sid_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QDateTime m_date_updated;
    bool m_date_updated_isSet;
    bool m_date_updated_isValid;

    QJsonValue m_delivery;
    bool m_delivery_isSet;
    bool m_delivery_isValid;

    qint32 m_index;
    bool m_index_isSet;
    bool m_index_isValid;

    OAIObject m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QList<QJsonValue> m_media;
    bool m_media_isSet;
    bool m_media_isValid;

    QString m_participant_sid;
    bool m_participant_sid_isSet;
    bool m_participant_sid_isValid;

    QString m_sid;
    bool m_sid_isSet;
    bool m_sid_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConversations_v1_conversation_conversation_message)

#endif // OAIConversations_v1_conversation_conversation_message_H
