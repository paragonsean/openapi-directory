# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.participant_conversation_enum_state import ParticipantConversationEnumState
import re
from openapi_server import util


class ConversationsV1ParticipantConversation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, chat_service_sid: str=None, conversation_attributes: str=None, conversation_created_by: str=None, conversation_date_created: datetime=None, conversation_date_updated: datetime=None, conversation_friendly_name: str=None, conversation_sid: str=None, conversation_state: ParticipantConversationEnumState=None, conversation_timers: object=None, conversation_unique_name: str=None, links: object=None, participant_identity: str=None, participant_messaging_binding: object=None, participant_sid: str=None, participant_user_sid: str=None):
        """ConversationsV1ParticipantConversation - a model defined in OpenAPI

        :param account_sid: The account_sid of this ConversationsV1ParticipantConversation.
        :param chat_service_sid: The chat_service_sid of this ConversationsV1ParticipantConversation.
        :param conversation_attributes: The conversation_attributes of this ConversationsV1ParticipantConversation.
        :param conversation_created_by: The conversation_created_by of this ConversationsV1ParticipantConversation.
        :param conversation_date_created: The conversation_date_created of this ConversationsV1ParticipantConversation.
        :param conversation_date_updated: The conversation_date_updated of this ConversationsV1ParticipantConversation.
        :param conversation_friendly_name: The conversation_friendly_name of this ConversationsV1ParticipantConversation.
        :param conversation_sid: The conversation_sid of this ConversationsV1ParticipantConversation.
        :param conversation_state: The conversation_state of this ConversationsV1ParticipantConversation.
        :param conversation_timers: The conversation_timers of this ConversationsV1ParticipantConversation.
        :param conversation_unique_name: The conversation_unique_name of this ConversationsV1ParticipantConversation.
        :param links: The links of this ConversationsV1ParticipantConversation.
        :param participant_identity: The participant_identity of this ConversationsV1ParticipantConversation.
        :param participant_messaging_binding: The participant_messaging_binding of this ConversationsV1ParticipantConversation.
        :param participant_sid: The participant_sid of this ConversationsV1ParticipantConversation.
        :param participant_user_sid: The participant_user_sid of this ConversationsV1ParticipantConversation.
        """
        self.openapi_types = {
            'account_sid': str,
            'chat_service_sid': str,
            'conversation_attributes': str,
            'conversation_created_by': str,
            'conversation_date_created': datetime,
            'conversation_date_updated': datetime,
            'conversation_friendly_name': str,
            'conversation_sid': str,
            'conversation_state': ParticipantConversationEnumState,
            'conversation_timers': object,
            'conversation_unique_name': str,
            'links': object,
            'participant_identity': str,
            'participant_messaging_binding': object,
            'participant_sid': str,
            'participant_user_sid': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'chat_service_sid': 'chat_service_sid',
            'conversation_attributes': 'conversation_attributes',
            'conversation_created_by': 'conversation_created_by',
            'conversation_date_created': 'conversation_date_created',
            'conversation_date_updated': 'conversation_date_updated',
            'conversation_friendly_name': 'conversation_friendly_name',
            'conversation_sid': 'conversation_sid',
            'conversation_state': 'conversation_state',
            'conversation_timers': 'conversation_timers',
            'conversation_unique_name': 'conversation_unique_name',
            'links': 'links',
            'participant_identity': 'participant_identity',
            'participant_messaging_binding': 'participant_messaging_binding',
            'participant_sid': 'participant_sid',
            'participant_user_sid': 'participant_user_sid'
        }

        self._account_sid = account_sid
        self._chat_service_sid = chat_service_sid
        self._conversation_attributes = conversation_attributes
        self._conversation_created_by = conversation_created_by
        self._conversation_date_created = conversation_date_created
        self._conversation_date_updated = conversation_date_updated
        self._conversation_friendly_name = conversation_friendly_name
        self._conversation_sid = conversation_sid
        self._conversation_state = conversation_state
        self._conversation_timers = conversation_timers
        self._conversation_unique_name = conversation_unique_name
        self._links = links
        self._participant_identity = participant_identity
        self._participant_messaging_binding = participant_messaging_binding
        self._participant_sid = participant_sid
        self._participant_user_sid = participant_user_sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsV1ParticipantConversation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations.v1.participant_conversation of this ConversationsV1ParticipantConversation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ConversationsV1ParticipantConversation.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.

        :return: The account_sid of this ConversationsV1ParticipantConversation.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ConversationsV1ParticipantConversation.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.

        :param account_sid: The account_sid of this ConversationsV1ParticipantConversation.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def chat_service_sid(self):
        """Gets the chat_service_sid of this ConversationsV1ParticipantConversation.

        The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.

        :return: The chat_service_sid of this ConversationsV1ParticipantConversation.
        :rtype: str
        """
        return self._chat_service_sid

    @chat_service_sid.setter
    def chat_service_sid(self, chat_service_sid):
        """Sets the chat_service_sid of this ConversationsV1ParticipantConversation.

        The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.

        :param chat_service_sid: The chat_service_sid of this ConversationsV1ParticipantConversation.
        :type chat_service_sid: str
        """
        if chat_service_sid is not None and len(chat_service_sid) > 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be less than or equal to `34`")
        if chat_service_sid is not None and len(chat_service_sid) < 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be greater than or equal to `34`")
        if chat_service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', chat_service_sid):
            raise ValueError("Invalid value for `chat_service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._chat_service_sid = chat_service_sid

    @property
    def conversation_attributes(self):
        """Gets the conversation_attributes of this ConversationsV1ParticipantConversation.

        An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.

        :return: The conversation_attributes of this ConversationsV1ParticipantConversation.
        :rtype: str
        """
        return self._conversation_attributes

    @conversation_attributes.setter
    def conversation_attributes(self, conversation_attributes):
        """Sets the conversation_attributes of this ConversationsV1ParticipantConversation.

        An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.

        :param conversation_attributes: The conversation_attributes of this ConversationsV1ParticipantConversation.
        :type conversation_attributes: str
        """

        self._conversation_attributes = conversation_attributes

    @property
    def conversation_created_by(self):
        """Gets the conversation_created_by of this ConversationsV1ParticipantConversation.

        Identity of the creator of this Conversation.

        :return: The conversation_created_by of this ConversationsV1ParticipantConversation.
        :rtype: str
        """
        return self._conversation_created_by

    @conversation_created_by.setter
    def conversation_created_by(self, conversation_created_by):
        """Sets the conversation_created_by of this ConversationsV1ParticipantConversation.

        Identity of the creator of this Conversation.

        :param conversation_created_by: The conversation_created_by of this ConversationsV1ParticipantConversation.
        :type conversation_created_by: str
        """

        self._conversation_created_by = conversation_created_by

    @property
    def conversation_date_created(self):
        """Gets the conversation_date_created of this ConversationsV1ParticipantConversation.

        The date that this conversation was created, given in ISO 8601 format.

        :return: The conversation_date_created of this ConversationsV1ParticipantConversation.
        :rtype: datetime
        """
        return self._conversation_date_created

    @conversation_date_created.setter
    def conversation_date_created(self, conversation_date_created):
        """Sets the conversation_date_created of this ConversationsV1ParticipantConversation.

        The date that this conversation was created, given in ISO 8601 format.

        :param conversation_date_created: The conversation_date_created of this ConversationsV1ParticipantConversation.
        :type conversation_date_created: datetime
        """

        self._conversation_date_created = conversation_date_created

    @property
    def conversation_date_updated(self):
        """Gets the conversation_date_updated of this ConversationsV1ParticipantConversation.

        The date that this conversation was last updated, given in ISO 8601 format.

        :return: The conversation_date_updated of this ConversationsV1ParticipantConversation.
        :rtype: datetime
        """
        return self._conversation_date_updated

    @conversation_date_updated.setter
    def conversation_date_updated(self, conversation_date_updated):
        """Sets the conversation_date_updated of this ConversationsV1ParticipantConversation.

        The date that this conversation was last updated, given in ISO 8601 format.

        :param conversation_date_updated: The conversation_date_updated of this ConversationsV1ParticipantConversation.
        :type conversation_date_updated: datetime
        """

        self._conversation_date_updated = conversation_date_updated

    @property
    def conversation_friendly_name(self):
        """Gets the conversation_friendly_name of this ConversationsV1ParticipantConversation.

        The human-readable name of this conversation, limited to 256 characters. Optional.

        :return: The conversation_friendly_name of this ConversationsV1ParticipantConversation.
        :rtype: str
        """
        return self._conversation_friendly_name

    @conversation_friendly_name.setter
    def conversation_friendly_name(self, conversation_friendly_name):
        """Sets the conversation_friendly_name of this ConversationsV1ParticipantConversation.

        The human-readable name of this conversation, limited to 256 characters. Optional.

        :param conversation_friendly_name: The conversation_friendly_name of this ConversationsV1ParticipantConversation.
        :type conversation_friendly_name: str
        """

        self._conversation_friendly_name = conversation_friendly_name

    @property
    def conversation_sid(self):
        """Gets the conversation_sid of this ConversationsV1ParticipantConversation.

        The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) this Participant belongs to.

        :return: The conversation_sid of this ConversationsV1ParticipantConversation.
        :rtype: str
        """
        return self._conversation_sid

    @conversation_sid.setter
    def conversation_sid(self, conversation_sid):
        """Sets the conversation_sid of this ConversationsV1ParticipantConversation.

        The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) this Participant belongs to.

        :param conversation_sid: The conversation_sid of this ConversationsV1ParticipantConversation.
        :type conversation_sid: str
        """
        if conversation_sid is not None and len(conversation_sid) > 34:
            raise ValueError("Invalid value for `conversation_sid`, length must be less than or equal to `34`")
        if conversation_sid is not None and len(conversation_sid) < 34:
            raise ValueError("Invalid value for `conversation_sid`, length must be greater than or equal to `34`")
        if conversation_sid is not None and not re.search(r'^CH[0-9a-fA-F]{32}$', conversation_sid):
            raise ValueError("Invalid value for `conversation_sid`, must be a follow pattern or equal to `/^CH[0-9a-fA-F]{32}$/`")

        self._conversation_sid = conversation_sid

    @property
    def conversation_state(self):
        """Gets the conversation_state of this ConversationsV1ParticipantConversation.


        :return: The conversation_state of this ConversationsV1ParticipantConversation.
        :rtype: ParticipantConversationEnumState
        """
        return self._conversation_state

    @conversation_state.setter
    def conversation_state(self, conversation_state):
        """Sets the conversation_state of this ConversationsV1ParticipantConversation.


        :param conversation_state: The conversation_state of this ConversationsV1ParticipantConversation.
        :type conversation_state: ParticipantConversationEnumState
        """

        self._conversation_state = conversation_state

    @property
    def conversation_timers(self):
        """Gets the conversation_timers of this ConversationsV1ParticipantConversation.

        Timer date values representing state update for this conversation.

        :return: The conversation_timers of this ConversationsV1ParticipantConversation.
        :rtype: object
        """
        return self._conversation_timers

    @conversation_timers.setter
    def conversation_timers(self, conversation_timers):
        """Sets the conversation_timers of this ConversationsV1ParticipantConversation.

        Timer date values representing state update for this conversation.

        :param conversation_timers: The conversation_timers of this ConversationsV1ParticipantConversation.
        :type conversation_timers: object
        """

        self._conversation_timers = conversation_timers

    @property
    def conversation_unique_name(self):
        """Gets the conversation_unique_name of this ConversationsV1ParticipantConversation.

        An application-defined string that uniquely identifies the Conversation resource.

        :return: The conversation_unique_name of this ConversationsV1ParticipantConversation.
        :rtype: str
        """
        return self._conversation_unique_name

    @conversation_unique_name.setter
    def conversation_unique_name(self, conversation_unique_name):
        """Sets the conversation_unique_name of this ConversationsV1ParticipantConversation.

        An application-defined string that uniquely identifies the Conversation resource.

        :param conversation_unique_name: The conversation_unique_name of this ConversationsV1ParticipantConversation.
        :type conversation_unique_name: str
        """

        self._conversation_unique_name = conversation_unique_name

    @property
    def links(self):
        """Gets the links of this ConversationsV1ParticipantConversation.

        Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.

        :return: The links of this ConversationsV1ParticipantConversation.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ConversationsV1ParticipantConversation.

        Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.

        :param links: The links of this ConversationsV1ParticipantConversation.
        :type links: object
        """

        self._links = links

    @property
    def participant_identity(self):
        """Gets the participant_identity of this ConversationsV1ParticipantConversation.

        A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.

        :return: The participant_identity of this ConversationsV1ParticipantConversation.
        :rtype: str
        """
        return self._participant_identity

    @participant_identity.setter
    def participant_identity(self, participant_identity):
        """Sets the participant_identity of this ConversationsV1ParticipantConversation.

        A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.

        :param participant_identity: The participant_identity of this ConversationsV1ParticipantConversation.
        :type participant_identity: str
        """

        self._participant_identity = participant_identity

    @property
    def participant_messaging_binding(self):
        """Gets the participant_messaging_binding of this ConversationsV1ParticipantConversation.

        Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.

        :return: The participant_messaging_binding of this ConversationsV1ParticipantConversation.
        :rtype: object
        """
        return self._participant_messaging_binding

    @participant_messaging_binding.setter
    def participant_messaging_binding(self, participant_messaging_binding):
        """Sets the participant_messaging_binding of this ConversationsV1ParticipantConversation.

        Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.

        :param participant_messaging_binding: The participant_messaging_binding of this ConversationsV1ParticipantConversation.
        :type participant_messaging_binding: object
        """

        self._participant_messaging_binding = participant_messaging_binding

    @property
    def participant_sid(self):
        """Gets the participant_sid of this ConversationsV1ParticipantConversation.

        The unique ID of the [Participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource).

        :return: The participant_sid of this ConversationsV1ParticipantConversation.
        :rtype: str
        """
        return self._participant_sid

    @participant_sid.setter
    def participant_sid(self, participant_sid):
        """Sets the participant_sid of this ConversationsV1ParticipantConversation.

        The unique ID of the [Participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource).

        :param participant_sid: The participant_sid of this ConversationsV1ParticipantConversation.
        :type participant_sid: str
        """
        if participant_sid is not None and len(participant_sid) > 34:
            raise ValueError("Invalid value for `participant_sid`, length must be less than or equal to `34`")
        if participant_sid is not None and len(participant_sid) < 34:
            raise ValueError("Invalid value for `participant_sid`, length must be greater than or equal to `34`")
        if participant_sid is not None and not re.search(r'^MB[0-9a-fA-F]{32}$', participant_sid):
            raise ValueError("Invalid value for `participant_sid`, must be a follow pattern or equal to `/^MB[0-9a-fA-F]{32}$/`")

        self._participant_sid = participant_sid

    @property
    def participant_user_sid(self):
        """Gets the participant_user_sid of this ConversationsV1ParticipantConversation.

        The unique string that identifies the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource).

        :return: The participant_user_sid of this ConversationsV1ParticipantConversation.
        :rtype: str
        """
        return self._participant_user_sid

    @participant_user_sid.setter
    def participant_user_sid(self, participant_user_sid):
        """Sets the participant_user_sid of this ConversationsV1ParticipantConversation.

        The unique string that identifies the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource).

        :param participant_user_sid: The participant_user_sid of this ConversationsV1ParticipantConversation.
        :type participant_user_sid: str
        """
        if participant_user_sid is not None and len(participant_user_sid) > 34:
            raise ValueError("Invalid value for `participant_user_sid`, length must be less than or equal to `34`")
        if participant_user_sid is not None and len(participant_user_sid) < 34:
            raise ValueError("Invalid value for `participant_user_sid`, length must be greater than or equal to `34`")
        if participant_user_sid is not None and not re.search(r'^US[0-9a-fA-F]{32}$', participant_user_sid):
            raise ValueError("Invalid value for `participant_user_sid`, must be a follow pattern or equal to `/^US[0-9a-fA-F]{32}$/`")

        self._participant_user_sid = participant_user_sid
