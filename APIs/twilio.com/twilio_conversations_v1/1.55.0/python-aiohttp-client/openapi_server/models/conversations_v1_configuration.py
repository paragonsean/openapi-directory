# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ConversationsV1Configuration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, default_chat_service_sid: str=None, default_closed_timer: str=None, default_inactive_timer: str=None, default_messaging_service_sid: str=None, links: object=None, url: str=None):
        """ConversationsV1Configuration - a model defined in OpenAPI

        :param account_sid: The account_sid of this ConversationsV1Configuration.
        :param default_chat_service_sid: The default_chat_service_sid of this ConversationsV1Configuration.
        :param default_closed_timer: The default_closed_timer of this ConversationsV1Configuration.
        :param default_inactive_timer: The default_inactive_timer of this ConversationsV1Configuration.
        :param default_messaging_service_sid: The default_messaging_service_sid of this ConversationsV1Configuration.
        :param links: The links of this ConversationsV1Configuration.
        :param url: The url of this ConversationsV1Configuration.
        """
        self.openapi_types = {
            'account_sid': str,
            'default_chat_service_sid': str,
            'default_closed_timer': str,
            'default_inactive_timer': str,
            'default_messaging_service_sid': str,
            'links': object,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'default_chat_service_sid': 'default_chat_service_sid',
            'default_closed_timer': 'default_closed_timer',
            'default_inactive_timer': 'default_inactive_timer',
            'default_messaging_service_sid': 'default_messaging_service_sid',
            'links': 'links',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._default_chat_service_sid = default_chat_service_sid
        self._default_closed_timer = default_closed_timer
        self._default_inactive_timer = default_inactive_timer
        self._default_messaging_service_sid = default_messaging_service_sid
        self._links = links
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsV1Configuration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations.v1.configuration of this ConversationsV1Configuration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ConversationsV1Configuration.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.

        :return: The account_sid of this ConversationsV1Configuration.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ConversationsV1Configuration.

        The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.

        :param account_sid: The account_sid of this ConversationsV1Configuration.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def default_chat_service_sid(self):
        """Gets the default_chat_service_sid of this ConversationsV1Configuration.

        The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) used when creating a conversation.

        :return: The default_chat_service_sid of this ConversationsV1Configuration.
        :rtype: str
        """
        return self._default_chat_service_sid

    @default_chat_service_sid.setter
    def default_chat_service_sid(self, default_chat_service_sid):
        """Sets the default_chat_service_sid of this ConversationsV1Configuration.

        The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) used when creating a conversation.

        :param default_chat_service_sid: The default_chat_service_sid of this ConversationsV1Configuration.
        :type default_chat_service_sid: str
        """
        if default_chat_service_sid is not None and len(default_chat_service_sid) > 34:
            raise ValueError("Invalid value for `default_chat_service_sid`, length must be less than or equal to `34`")
        if default_chat_service_sid is not None and len(default_chat_service_sid) < 34:
            raise ValueError("Invalid value for `default_chat_service_sid`, length must be greater than or equal to `34`")
        if default_chat_service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', default_chat_service_sid):
            raise ValueError("Invalid value for `default_chat_service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._default_chat_service_sid = default_chat_service_sid

    @property
    def default_closed_timer(self):
        """Gets the default_closed_timer of this ConversationsV1Configuration.

        Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.

        :return: The default_closed_timer of this ConversationsV1Configuration.
        :rtype: str
        """
        return self._default_closed_timer

    @default_closed_timer.setter
    def default_closed_timer(self, default_closed_timer):
        """Sets the default_closed_timer of this ConversationsV1Configuration.

        Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.

        :param default_closed_timer: The default_closed_timer of this ConversationsV1Configuration.
        :type default_closed_timer: str
        """

        self._default_closed_timer = default_closed_timer

    @property
    def default_inactive_timer(self):
        """Gets the default_inactive_timer of this ConversationsV1Configuration.

        Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.

        :return: The default_inactive_timer of this ConversationsV1Configuration.
        :rtype: str
        """
        return self._default_inactive_timer

    @default_inactive_timer.setter
    def default_inactive_timer(self, default_inactive_timer):
        """Sets the default_inactive_timer of this ConversationsV1Configuration.

        Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.

        :param default_inactive_timer: The default_inactive_timer of this ConversationsV1Configuration.
        :type default_inactive_timer: str
        """

        self._default_inactive_timer = default_inactive_timer

    @property
    def default_messaging_service_sid(self):
        """Gets the default_messaging_service_sid of this ConversationsV1Configuration.

        The SID of the default [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) used when creating a conversation.

        :return: The default_messaging_service_sid of this ConversationsV1Configuration.
        :rtype: str
        """
        return self._default_messaging_service_sid

    @default_messaging_service_sid.setter
    def default_messaging_service_sid(self, default_messaging_service_sid):
        """Sets the default_messaging_service_sid of this ConversationsV1Configuration.

        The SID of the default [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) used when creating a conversation.

        :param default_messaging_service_sid: The default_messaging_service_sid of this ConversationsV1Configuration.
        :type default_messaging_service_sid: str
        """
        if default_messaging_service_sid is not None and len(default_messaging_service_sid) > 34:
            raise ValueError("Invalid value for `default_messaging_service_sid`, length must be less than or equal to `34`")
        if default_messaging_service_sid is not None and len(default_messaging_service_sid) < 34:
            raise ValueError("Invalid value for `default_messaging_service_sid`, length must be greater than or equal to `34`")
        if default_messaging_service_sid is not None and not re.search(r'^MG[0-9a-fA-F]{32}$', default_messaging_service_sid):
            raise ValueError("Invalid value for `default_messaging_service_sid`, must be a follow pattern or equal to `/^MG[0-9a-fA-F]{32}$/`")

        self._default_messaging_service_sid = default_messaging_service_sid

    @property
    def links(self):
        """Gets the links of this ConversationsV1Configuration.

        Contains absolute API resource URLs to access the webhook and default service configurations.

        :return: The links of this ConversationsV1Configuration.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ConversationsV1Configuration.

        Contains absolute API resource URLs to access the webhook and default service configurations.

        :param links: The links of this ConversationsV1Configuration.
        :type links: object
        """

        self._links = links

    @property
    def url(self):
        """Gets the url of this ConversationsV1Configuration.

        An absolute API resource URL for this global configuration.

        :return: The url of this ConversationsV1Configuration.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ConversationsV1Configuration.

        An absolute API resource URL for this global configuration.

        :param url: The url of this ConversationsV1Configuration.
        :type url: str
        """

        self._url = url
