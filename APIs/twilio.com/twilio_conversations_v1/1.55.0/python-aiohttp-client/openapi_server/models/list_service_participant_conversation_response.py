# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conversations_v1_service_service_participant_conversation import ConversationsV1ServiceServiceParticipantConversation
from openapi_server.models.list_configuration_address_response_meta import ListConfigurationAddressResponseMeta
from openapi_server import util


class ListServiceParticipantConversationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversations: List[ConversationsV1ServiceServiceParticipantConversation]=None, meta: ListConfigurationAddressResponseMeta=None):
        """ListServiceParticipantConversationResponse - a model defined in OpenAPI

        :param conversations: The conversations of this ListServiceParticipantConversationResponse.
        :param meta: The meta of this ListServiceParticipantConversationResponse.
        """
        self.openapi_types = {
            'conversations': List[ConversationsV1ServiceServiceParticipantConversation],
            'meta': ListConfigurationAddressResponseMeta
        }

        self.attribute_map = {
            'conversations': 'conversations',
            'meta': 'meta'
        }

        self._conversations = conversations
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListServiceParticipantConversationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListServiceParticipantConversationResponse of this ListServiceParticipantConversationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversations(self):
        """Gets the conversations of this ListServiceParticipantConversationResponse.


        :return: The conversations of this ListServiceParticipantConversationResponse.
        :rtype: List[ConversationsV1ServiceServiceParticipantConversation]
        """
        return self._conversations

    @conversations.setter
    def conversations(self, conversations):
        """Sets the conversations of this ListServiceParticipantConversationResponse.


        :param conversations: The conversations of this ListServiceParticipantConversationResponse.
        :type conversations: List[ConversationsV1ServiceServiceParticipantConversation]
        """

        self._conversations = conversations

    @property
    def meta(self):
        """Gets the meta of this ListServiceParticipantConversationResponse.


        :return: The meta of this ListServiceParticipantConversationResponse.
        :rtype: ListConfigurationAddressResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ListServiceParticipantConversationResponse.


        :param meta: The meta of this ListServiceParticipantConversationResponse.
        :type meta: ListConfigurationAddressResponseMeta
        """

        self._meta = meta
