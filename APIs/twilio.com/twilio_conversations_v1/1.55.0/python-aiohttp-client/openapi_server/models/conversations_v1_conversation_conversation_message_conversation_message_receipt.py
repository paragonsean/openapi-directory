# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conversation_message_receipt_enum_delivery_status import ConversationMessageReceiptEnumDeliveryStatus
import re
from openapi_server import util


class ConversationsV1ConversationConversationMessageConversationMessageReceipt(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, channel_message_sid: str=None, conversation_sid: str=None, date_created: datetime=None, date_updated: datetime=None, error_code: int=None, message_sid: str=None, participant_sid: str=None, sid: str=None, status: ConversationMessageReceiptEnumDeliveryStatus=None, url: str=None):
        """ConversationsV1ConversationConversationMessageConversationMessageReceipt - a model defined in OpenAPI

        :param account_sid: The account_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :param channel_message_sid: The channel_message_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :param conversation_sid: The conversation_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :param date_created: The date_created of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :param date_updated: The date_updated of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :param error_code: The error_code of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :param message_sid: The message_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :param participant_sid: The participant_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :param sid: The sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :param status: The status of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :param url: The url of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        """
        self.openapi_types = {
            'account_sid': str,
            'channel_message_sid': str,
            'conversation_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'error_code': int,
            'message_sid': str,
            'participant_sid': str,
            'sid': str,
            'status': ConversationMessageReceiptEnumDeliveryStatus,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'channel_message_sid': 'channel_message_sid',
            'conversation_sid': 'conversation_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'error_code': 'error_code',
            'message_sid': 'message_sid',
            'participant_sid': 'participant_sid',
            'sid': 'sid',
            'status': 'status',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._channel_message_sid = channel_message_sid
        self._conversation_sid = conversation_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._error_code = error_code
        self._message_sid = message_sid
        self._participant_sid = participant_sid
        self._sid = sid
        self._status = status
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsV1ConversationConversationMessageConversationMessageReceipt':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations.v1.conversation.conversation_message.conversation_message_receipt of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.

        :return: The account_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.

        :param account_sid: The account_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def channel_message_sid(self):
        """Gets the channel_message_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        A messaging channel-specific identifier for the message delivered to participant e.g. `SMxx` for SMS, `WAxx` for Whatsapp etc. 

        :return: The channel_message_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :rtype: str
        """
        return self._channel_message_sid

    @channel_message_sid.setter
    def channel_message_sid(self, channel_message_sid):
        """Sets the channel_message_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        A messaging channel-specific identifier for the message delivered to participant e.g. `SMxx` for SMS, `WAxx` for Whatsapp etc. 

        :param channel_message_sid: The channel_message_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :type channel_message_sid: str
        """
        if channel_message_sid is not None and len(channel_message_sid) > 34:
            raise ValueError("Invalid value for `channel_message_sid`, length must be less than or equal to `34`")
        if channel_message_sid is not None and len(channel_message_sid) < 34:
            raise ValueError("Invalid value for `channel_message_sid`, length must be greater than or equal to `34`")
        if channel_message_sid is not None and not re.search(r'^[a-zA-Z]{2}[0-9a-fA-F]{32}$', channel_message_sid):
            raise ValueError("Invalid value for `channel_message_sid`, must be a follow pattern or equal to `/^[a-zA-Z]{2}[0-9a-fA-F]{32}$/`")

        self._channel_message_sid = channel_message_sid

    @property
    def conversation_sid(self):
        """Gets the conversation_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.

        :return: The conversation_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :rtype: str
        """
        return self._conversation_sid

    @conversation_sid.setter
    def conversation_sid(self, conversation_sid):
        """Sets the conversation_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.

        :param conversation_sid: The conversation_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :type conversation_sid: str
        """
        if conversation_sid is not None and len(conversation_sid) > 34:
            raise ValueError("Invalid value for `conversation_sid`, length must be less than or equal to `34`")
        if conversation_sid is not None and len(conversation_sid) < 34:
            raise ValueError("Invalid value for `conversation_sid`, length must be greater than or equal to `34`")
        if conversation_sid is not None and not re.search(r'^CH[0-9a-fA-F]{32}$', conversation_sid):
            raise ValueError("Invalid value for `conversation_sid`, must be a follow pattern or equal to `/^CH[0-9a-fA-F]{32}$/`")

        self._conversation_sid = conversation_sid

    @property
    def date_created(self):
        """Gets the date_created of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The date that this resource was created.

        :return: The date_created of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The date that this resource was created.

        :param date_created: The date_created of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The date that this resource was last updated. `null` if the delivery receipt has not been updated.

        :return: The date_updated of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The date that this resource was last updated. `null` if the delivery receipt has not been updated.

        :param date_updated: The date_updated of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def error_code(self):
        """Gets the error_code of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status, 

        :return: The error_code of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :rtype: int
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status, 

        :param error_code: The error_code of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :type error_code: int
        """

        self._error_code = error_code

    @property
    def message_sid(self):
        """Gets the message_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to

        :return: The message_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :rtype: str
        """
        return self._message_sid

    @message_sid.setter
    def message_sid(self, message_sid):
        """Sets the message_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to

        :param message_sid: The message_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :type message_sid: str
        """
        if message_sid is not None and len(message_sid) > 34:
            raise ValueError("Invalid value for `message_sid`, length must be less than or equal to `34`")
        if message_sid is not None and len(message_sid) < 34:
            raise ValueError("Invalid value for `message_sid`, length must be greater than or equal to `34`")
        if message_sid is not None and not re.search(r'^IM[0-9a-fA-F]{32}$', message_sid):
            raise ValueError("Invalid value for `message_sid`, must be a follow pattern or equal to `/^IM[0-9a-fA-F]{32}$/`")

        self._message_sid = message_sid

    @property
    def participant_sid(self):
        """Gets the participant_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The unique ID of the participant the delivery receipt belongs to.

        :return: The participant_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :rtype: str
        """
        return self._participant_sid

    @participant_sid.setter
    def participant_sid(self, participant_sid):
        """Sets the participant_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        The unique ID of the participant the delivery receipt belongs to.

        :param participant_sid: The participant_sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :type participant_sid: str
        """
        if participant_sid is not None and len(participant_sid) > 34:
            raise ValueError("Invalid value for `participant_sid`, length must be less than or equal to `34`")
        if participant_sid is not None and len(participant_sid) < 34:
            raise ValueError("Invalid value for `participant_sid`, length must be greater than or equal to `34`")
        if participant_sid is not None and not re.search(r'^MB[0-9a-fA-F]{32}$', participant_sid):
            raise ValueError("Invalid value for `participant_sid`, must be a follow pattern or equal to `/^MB[0-9a-fA-F]{32}$/`")

        self._participant_sid = participant_sid

    @property
    def sid(self):
        """Gets the sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        A 34 character string that uniquely identifies this resource.

        :return: The sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        A 34 character string that uniquely identifies this resource.

        :param sid: The sid of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^DY[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^DY[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def status(self):
        """Gets the status of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.


        :return: The status of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :rtype: ConversationMessageReceiptEnumDeliveryStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.


        :param status: The status of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :type status: ConversationMessageReceiptEnumDeliveryStatus
        """

        self._status = status

    @property
    def url(self):
        """Gets the url of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        An absolute API resource URL for this delivery receipt.

        :return: The url of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.

        An absolute API resource URL for this delivery receipt.

        :param url: The url of this ConversationsV1ConversationConversationMessageConversationMessageReceipt.
        :type url: str
        """

        self._url = url
