# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ConversationsV1ServiceServiceConversationServiceConversationParticipant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, attributes: str=None, chat_service_sid: str=None, conversation_sid: str=None, date_created: datetime=None, date_updated: datetime=None, identity: str=None, last_read_message_index: int=None, last_read_timestamp: str=None, messaging_binding: object=None, role_sid: str=None, sid: str=None, url: str=None):
        """ConversationsV1ServiceServiceConversationServiceConversationParticipant - a model defined in OpenAPI

        :param account_sid: The account_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :param attributes: The attributes of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :param chat_service_sid: The chat_service_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :param conversation_sid: The conversation_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :param date_created: The date_created of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :param date_updated: The date_updated of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :param identity: The identity of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :param last_read_message_index: The last_read_message_index of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :param last_read_timestamp: The last_read_timestamp of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :param messaging_binding: The messaging_binding of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :param role_sid: The role_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :param sid: The sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :param url: The url of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        """
        self.openapi_types = {
            'account_sid': str,
            'attributes': str,
            'chat_service_sid': str,
            'conversation_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'identity': str,
            'last_read_message_index': int,
            'last_read_timestamp': str,
            'messaging_binding': object,
            'role_sid': str,
            'sid': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'attributes': 'attributes',
            'chat_service_sid': 'chat_service_sid',
            'conversation_sid': 'conversation_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'identity': 'identity',
            'last_read_message_index': 'last_read_message_index',
            'last_read_timestamp': 'last_read_timestamp',
            'messaging_binding': 'messaging_binding',
            'role_sid': 'role_sid',
            'sid': 'sid',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._attributes = attributes
        self._chat_service_sid = chat_service_sid
        self._conversation_sid = conversation_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._identity = identity
        self._last_read_message_index = last_read_message_index
        self._last_read_timestamp = last_read_timestamp
        self._messaging_binding = messaging_binding
        self._role_sid = role_sid
        self._sid = sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsV1ServiceServiceConversationServiceConversationParticipant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations.v1.service.service_conversation.service_conversation_participant of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.

        :return: The account_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.

        :param account_sid: The account_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def attributes(self):
        """Gets the attributes of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set `{}` will be returned.

        :return: The attributes of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: str
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set `{}` will be returned.

        :param attributes: The attributes of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type attributes: str
        """

        self._attributes = attributes

    @property
    def chat_service_sid(self):
        """Gets the chat_service_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.

        :return: The chat_service_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: str
        """
        return self._chat_service_sid

    @chat_service_sid.setter
    def chat_service_sid(self, chat_service_sid):
        """Sets the chat_service_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.

        :param chat_service_sid: The chat_service_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type chat_service_sid: str
        """
        if chat_service_sid is not None and len(chat_service_sid) > 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be less than or equal to `34`")
        if chat_service_sid is not None and len(chat_service_sid) < 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be greater than or equal to `34`")
        if chat_service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', chat_service_sid):
            raise ValueError("Invalid value for `chat_service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._chat_service_sid = chat_service_sid

    @property
    def conversation_sid(self):
        """Gets the conversation_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.

        :return: The conversation_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: str
        """
        return self._conversation_sid

    @conversation_sid.setter
    def conversation_sid(self, conversation_sid):
        """Sets the conversation_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.

        :param conversation_sid: The conversation_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type conversation_sid: str
        """
        if conversation_sid is not None and len(conversation_sid) > 34:
            raise ValueError("Invalid value for `conversation_sid`, length must be less than or equal to `34`")
        if conversation_sid is not None and len(conversation_sid) < 34:
            raise ValueError("Invalid value for `conversation_sid`, length must be greater than or equal to `34`")
        if conversation_sid is not None and not re.search(r'^CH[0-9a-fA-F]{32}$', conversation_sid):
            raise ValueError("Invalid value for `conversation_sid`, must be a follow pattern or equal to `/^CH[0-9a-fA-F]{32}$/`")

        self._conversation_sid = conversation_sid

    @property
    def date_created(self):
        """Gets the date_created of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        The date on which this resource was created.

        :return: The date_created of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        The date on which this resource was created.

        :param date_created: The date_created of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        The date on which this resource was last updated.

        :return: The date_updated of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        The date on which this resource was last updated.

        :param date_updated: The date_updated of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def identity(self):
        """Gets the identity of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters.

        :return: The identity of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters.

        :param identity: The identity of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type identity: str
        """

        self._identity = identity

    @property
    def last_read_message_index(self):
        """Gets the last_read_message_index of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.

        :return: The last_read_message_index of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: int
        """
        return self._last_read_message_index

    @last_read_message_index.setter
    def last_read_message_index(self, last_read_message_index):
        """Sets the last_read_message_index of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.

        :param last_read_message_index: The last_read_message_index of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type last_read_message_index: int
        """

        self._last_read_message_index = last_read_message_index

    @property
    def last_read_timestamp(self):
        """Gets the last_read_timestamp of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.

        :return: The last_read_timestamp of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: str
        """
        return self._last_read_timestamp

    @last_read_timestamp.setter
    def last_read_timestamp(self, last_read_timestamp):
        """Sets the last_read_timestamp of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.

        :param last_read_timestamp: The last_read_timestamp of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type last_read_timestamp: str
        """

        self._last_read_timestamp = last_read_timestamp

    @property
    def messaging_binding(self):
        """Gets the messaging_binding of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.

        :return: The messaging_binding of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: object
        """
        return self._messaging_binding

    @messaging_binding.setter
    def messaging_binding(self, messaging_binding):
        """Sets the messaging_binding of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.

        :param messaging_binding: The messaging_binding of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type messaging_binding: object
        """

        self._messaging_binding = messaging_binding

    @property
    def role_sid(self):
        """Gets the role_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.

        :return: The role_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: str
        """
        return self._role_sid

    @role_sid.setter
    def role_sid(self, role_sid):
        """Sets the role_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.

        :param role_sid: The role_sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type role_sid: str
        """
        if role_sid is not None and len(role_sid) > 34:
            raise ValueError("Invalid value for `role_sid`, length must be less than or equal to `34`")
        if role_sid is not None and len(role_sid) < 34:
            raise ValueError("Invalid value for `role_sid`, length must be greater than or equal to `34`")
        if role_sid is not None and not re.search(r'^RL[0-9a-fA-F]{32}$', role_sid):
            raise ValueError("Invalid value for `role_sid`, must be a follow pattern or equal to `/^RL[0-9a-fA-F]{32}$/`")

        self._role_sid = role_sid

    @property
    def sid(self):
        """Gets the sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        A 34 character string that uniquely identifies this resource.

        :return: The sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        A 34 character string that uniquely identifies this resource.

        :param sid: The sid of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^MB[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^MB[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def url(self):
        """Gets the url of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        An absolute API resource URL for this participant.

        :return: The url of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.

        An absolute API resource URL for this participant.

        :param url: The url of this ConversationsV1ServiceServiceConversationServiceConversationParticipant.
        :type url: str
        """

        self._url = url
