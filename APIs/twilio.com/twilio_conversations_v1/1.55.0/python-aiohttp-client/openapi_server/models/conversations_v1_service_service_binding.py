# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_binding_enum_binding_type import ServiceBindingEnumBindingType
import re
from openapi_server import util


class ConversationsV1ServiceServiceBinding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, binding_type: ServiceBindingEnumBindingType=None, chat_service_sid: str=None, credential_sid: str=None, date_created: datetime=None, date_updated: datetime=None, endpoint: str=None, identity: str=None, message_types: List[str]=None, sid: str=None, url: str=None):
        """ConversationsV1ServiceServiceBinding - a model defined in OpenAPI

        :param account_sid: The account_sid of this ConversationsV1ServiceServiceBinding.
        :param binding_type: The binding_type of this ConversationsV1ServiceServiceBinding.
        :param chat_service_sid: The chat_service_sid of this ConversationsV1ServiceServiceBinding.
        :param credential_sid: The credential_sid of this ConversationsV1ServiceServiceBinding.
        :param date_created: The date_created of this ConversationsV1ServiceServiceBinding.
        :param date_updated: The date_updated of this ConversationsV1ServiceServiceBinding.
        :param endpoint: The endpoint of this ConversationsV1ServiceServiceBinding.
        :param identity: The identity of this ConversationsV1ServiceServiceBinding.
        :param message_types: The message_types of this ConversationsV1ServiceServiceBinding.
        :param sid: The sid of this ConversationsV1ServiceServiceBinding.
        :param url: The url of this ConversationsV1ServiceServiceBinding.
        """
        self.openapi_types = {
            'account_sid': str,
            'binding_type': ServiceBindingEnumBindingType,
            'chat_service_sid': str,
            'credential_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'endpoint': str,
            'identity': str,
            'message_types': List[str],
            'sid': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'binding_type': 'binding_type',
            'chat_service_sid': 'chat_service_sid',
            'credential_sid': 'credential_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'endpoint': 'endpoint',
            'identity': 'identity',
            'message_types': 'message_types',
            'sid': 'sid',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._binding_type = binding_type
        self._chat_service_sid = chat_service_sid
        self._credential_sid = credential_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._endpoint = endpoint
        self._identity = identity
        self._message_types = message_types
        self._sid = sid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsV1ServiceServiceBinding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations.v1.service.service_binding of this ConversationsV1ServiceServiceBinding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ConversationsV1ServiceServiceBinding.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this binding.

        :return: The account_sid of this ConversationsV1ServiceServiceBinding.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ConversationsV1ServiceServiceBinding.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this binding.

        :param account_sid: The account_sid of this ConversationsV1ServiceServiceBinding.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def binding_type(self):
        """Gets the binding_type of this ConversationsV1ServiceServiceBinding.


        :return: The binding_type of this ConversationsV1ServiceServiceBinding.
        :rtype: ServiceBindingEnumBindingType
        """
        return self._binding_type

    @binding_type.setter
    def binding_type(self, binding_type):
        """Sets the binding_type of this ConversationsV1ServiceServiceBinding.


        :param binding_type: The binding_type of this ConversationsV1ServiceServiceBinding.
        :type binding_type: ServiceBindingEnumBindingType
        """

        self._binding_type = binding_type

    @property
    def chat_service_sid(self):
        """Gets the chat_service_sid of this ConversationsV1ServiceServiceBinding.

        The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Binding resource is associated with.

        :return: The chat_service_sid of this ConversationsV1ServiceServiceBinding.
        :rtype: str
        """
        return self._chat_service_sid

    @chat_service_sid.setter
    def chat_service_sid(self, chat_service_sid):
        """Sets the chat_service_sid of this ConversationsV1ServiceServiceBinding.

        The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Binding resource is associated with.

        :param chat_service_sid: The chat_service_sid of this ConversationsV1ServiceServiceBinding.
        :type chat_service_sid: str
        """
        if chat_service_sid is not None and len(chat_service_sid) > 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be less than or equal to `34`")
        if chat_service_sid is not None and len(chat_service_sid) < 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be greater than or equal to `34`")
        if chat_service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', chat_service_sid):
            raise ValueError("Invalid value for `chat_service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._chat_service_sid = chat_service_sid

    @property
    def credential_sid(self):
        """Gets the credential_sid of this ConversationsV1ServiceServiceBinding.

        The SID of the [Credential](https://www.twilio.com/docs/conversations/api/credential-resource) for the binding. See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.

        :return: The credential_sid of this ConversationsV1ServiceServiceBinding.
        :rtype: str
        """
        return self._credential_sid

    @credential_sid.setter
    def credential_sid(self, credential_sid):
        """Sets the credential_sid of this ConversationsV1ServiceServiceBinding.

        The SID of the [Credential](https://www.twilio.com/docs/conversations/api/credential-resource) for the binding. See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.

        :param credential_sid: The credential_sid of this ConversationsV1ServiceServiceBinding.
        :type credential_sid: str
        """
        if credential_sid is not None and len(credential_sid) > 34:
            raise ValueError("Invalid value for `credential_sid`, length must be less than or equal to `34`")
        if credential_sid is not None and len(credential_sid) < 34:
            raise ValueError("Invalid value for `credential_sid`, length must be greater than or equal to `34`")
        if credential_sid is not None and not re.search(r'^CR[0-9a-fA-F]{32}$', credential_sid):
            raise ValueError("Invalid value for `credential_sid`, must be a follow pattern or equal to `/^CR[0-9a-fA-F]{32}$/`")

        self._credential_sid = credential_sid

    @property
    def date_created(self):
        """Gets the date_created of this ConversationsV1ServiceServiceBinding.

        The date that this resource was created.

        :return: The date_created of this ConversationsV1ServiceServiceBinding.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ConversationsV1ServiceServiceBinding.

        The date that this resource was created.

        :param date_created: The date_created of this ConversationsV1ServiceServiceBinding.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ConversationsV1ServiceServiceBinding.

        The date that this resource was last updated.

        :return: The date_updated of this ConversationsV1ServiceServiceBinding.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ConversationsV1ServiceServiceBinding.

        The date that this resource was last updated.

        :param date_updated: The date_updated of this ConversationsV1ServiceServiceBinding.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def endpoint(self):
        """Gets the endpoint of this ConversationsV1ServiceServiceBinding.

        The unique endpoint identifier for the Binding. The format of this value depends on the `binding_type`.

        :return: The endpoint of this ConversationsV1ServiceServiceBinding.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this ConversationsV1ServiceServiceBinding.

        The unique endpoint identifier for the Binding. The format of this value depends on the `binding_type`.

        :param endpoint: The endpoint of this ConversationsV1ServiceServiceBinding.
        :type endpoint: str
        """

        self._endpoint = endpoint

    @property
    def identity(self):
        """Gets the identity of this ConversationsV1ServiceServiceBinding.

        The application-defined string that uniquely identifies the [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource) within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). See [access tokens](https://www.twilio.com/docs/conversations/create-tokens) for more info.

        :return: The identity of this ConversationsV1ServiceServiceBinding.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this ConversationsV1ServiceServiceBinding.

        The application-defined string that uniquely identifies the [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource) within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). See [access tokens](https://www.twilio.com/docs/conversations/create-tokens) for more info.

        :param identity: The identity of this ConversationsV1ServiceServiceBinding.
        :type identity: str
        """

        self._identity = identity

    @property
    def message_types(self):
        """Gets the message_types of this ConversationsV1ServiceServiceBinding.

        The [Conversation message types](https://www.twilio.com/docs/chat/push-notification-configuration#push-types) the binding is subscribed to.

        :return: The message_types of this ConversationsV1ServiceServiceBinding.
        :rtype: List[str]
        """
        return self._message_types

    @message_types.setter
    def message_types(self, message_types):
        """Sets the message_types of this ConversationsV1ServiceServiceBinding.

        The [Conversation message types](https://www.twilio.com/docs/chat/push-notification-configuration#push-types) the binding is subscribed to.

        :param message_types: The message_types of this ConversationsV1ServiceServiceBinding.
        :type message_types: List[str]
        """

        self._message_types = message_types

    @property
    def sid(self):
        """Gets the sid of this ConversationsV1ServiceServiceBinding.

        A 34 character string that uniquely identifies this resource.

        :return: The sid of this ConversationsV1ServiceServiceBinding.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ConversationsV1ServiceServiceBinding.

        A 34 character string that uniquely identifies this resource.

        :param sid: The sid of this ConversationsV1ServiceServiceBinding.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^BS[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^BS[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def url(self):
        """Gets the url of this ConversationsV1ServiceServiceBinding.

        An absolute API resource URL for this binding.

        :return: The url of this ConversationsV1ServiceServiceBinding.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ConversationsV1ServiceServiceBinding.

        An absolute API resource URL for this binding.

        :param url: The url of this ConversationsV1ServiceServiceBinding.
        :type url: str
        """

        self._url = url
