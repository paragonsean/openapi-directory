# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ConversationsV1ServiceServiceConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chat_service_sid: str=None, default_chat_service_role_sid: str=None, default_conversation_creator_role_sid: str=None, default_conversation_role_sid: str=None, links: object=None, reachability_enabled: bool=None, url: str=None):
        """ConversationsV1ServiceServiceConfiguration - a model defined in OpenAPI

        :param chat_service_sid: The chat_service_sid of this ConversationsV1ServiceServiceConfiguration.
        :param default_chat_service_role_sid: The default_chat_service_role_sid of this ConversationsV1ServiceServiceConfiguration.
        :param default_conversation_creator_role_sid: The default_conversation_creator_role_sid of this ConversationsV1ServiceServiceConfiguration.
        :param default_conversation_role_sid: The default_conversation_role_sid of this ConversationsV1ServiceServiceConfiguration.
        :param links: The links of this ConversationsV1ServiceServiceConfiguration.
        :param reachability_enabled: The reachability_enabled of this ConversationsV1ServiceServiceConfiguration.
        :param url: The url of this ConversationsV1ServiceServiceConfiguration.
        """
        self.openapi_types = {
            'chat_service_sid': str,
            'default_chat_service_role_sid': str,
            'default_conversation_creator_role_sid': str,
            'default_conversation_role_sid': str,
            'links': object,
            'reachability_enabled': bool,
            'url': str
        }

        self.attribute_map = {
            'chat_service_sid': 'chat_service_sid',
            'default_chat_service_role_sid': 'default_chat_service_role_sid',
            'default_conversation_creator_role_sid': 'default_conversation_creator_role_sid',
            'default_conversation_role_sid': 'default_conversation_role_sid',
            'links': 'links',
            'reachability_enabled': 'reachability_enabled',
            'url': 'url'
        }

        self._chat_service_sid = chat_service_sid
        self._default_chat_service_role_sid = default_chat_service_role_sid
        self._default_conversation_creator_role_sid = default_conversation_creator_role_sid
        self._default_conversation_role_sid = default_conversation_role_sid
        self._links = links
        self._reachability_enabled = reachability_enabled
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsV1ServiceServiceConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations.v1.service.service_configuration of this ConversationsV1ServiceServiceConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chat_service_sid(self):
        """Gets the chat_service_sid of this ConversationsV1ServiceServiceConfiguration.

        The unique string that we created to identify the Service configuration resource.

        :return: The chat_service_sid of this ConversationsV1ServiceServiceConfiguration.
        :rtype: str
        """
        return self._chat_service_sid

    @chat_service_sid.setter
    def chat_service_sid(self, chat_service_sid):
        """Sets the chat_service_sid of this ConversationsV1ServiceServiceConfiguration.

        The unique string that we created to identify the Service configuration resource.

        :param chat_service_sid: The chat_service_sid of this ConversationsV1ServiceServiceConfiguration.
        :type chat_service_sid: str
        """
        if chat_service_sid is not None and len(chat_service_sid) > 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be less than or equal to `34`")
        if chat_service_sid is not None and len(chat_service_sid) < 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be greater than or equal to `34`")
        if chat_service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', chat_service_sid):
            raise ValueError("Invalid value for `chat_service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._chat_service_sid = chat_service_sid

    @property
    def default_chat_service_role_sid(self):
        """Gets the default_chat_service_role_sid of this ConversationsV1ServiceServiceConfiguration.

        The service-level role assigned to users when they are added to the service. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.

        :return: The default_chat_service_role_sid of this ConversationsV1ServiceServiceConfiguration.
        :rtype: str
        """
        return self._default_chat_service_role_sid

    @default_chat_service_role_sid.setter
    def default_chat_service_role_sid(self, default_chat_service_role_sid):
        """Sets the default_chat_service_role_sid of this ConversationsV1ServiceServiceConfiguration.

        The service-level role assigned to users when they are added to the service. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.

        :param default_chat_service_role_sid: The default_chat_service_role_sid of this ConversationsV1ServiceServiceConfiguration.
        :type default_chat_service_role_sid: str
        """
        if default_chat_service_role_sid is not None and len(default_chat_service_role_sid) > 34:
            raise ValueError("Invalid value for `default_chat_service_role_sid`, length must be less than or equal to `34`")
        if default_chat_service_role_sid is not None and len(default_chat_service_role_sid) < 34:
            raise ValueError("Invalid value for `default_chat_service_role_sid`, length must be greater than or equal to `34`")
        if default_chat_service_role_sid is not None and not re.search(r'^RL[0-9a-fA-F]{32}$', default_chat_service_role_sid):
            raise ValueError("Invalid value for `default_chat_service_role_sid`, must be a follow pattern or equal to `/^RL[0-9a-fA-F]{32}$/`")

        self._default_chat_service_role_sid = default_chat_service_role_sid

    @property
    def default_conversation_creator_role_sid(self):
        """Gets the default_conversation_creator_role_sid of this ConversationsV1ServiceServiceConfiguration.

        The conversation-level role assigned to a conversation creator when they join a new conversation. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.

        :return: The default_conversation_creator_role_sid of this ConversationsV1ServiceServiceConfiguration.
        :rtype: str
        """
        return self._default_conversation_creator_role_sid

    @default_conversation_creator_role_sid.setter
    def default_conversation_creator_role_sid(self, default_conversation_creator_role_sid):
        """Sets the default_conversation_creator_role_sid of this ConversationsV1ServiceServiceConfiguration.

        The conversation-level role assigned to a conversation creator when they join a new conversation. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.

        :param default_conversation_creator_role_sid: The default_conversation_creator_role_sid of this ConversationsV1ServiceServiceConfiguration.
        :type default_conversation_creator_role_sid: str
        """
        if default_conversation_creator_role_sid is not None and len(default_conversation_creator_role_sid) > 34:
            raise ValueError("Invalid value for `default_conversation_creator_role_sid`, length must be less than or equal to `34`")
        if default_conversation_creator_role_sid is not None and len(default_conversation_creator_role_sid) < 34:
            raise ValueError("Invalid value for `default_conversation_creator_role_sid`, length must be greater than or equal to `34`")
        if default_conversation_creator_role_sid is not None and not re.search(r'^RL[0-9a-fA-F]{32}$', default_conversation_creator_role_sid):
            raise ValueError("Invalid value for `default_conversation_creator_role_sid`, must be a follow pattern or equal to `/^RL[0-9a-fA-F]{32}$/`")

        self._default_conversation_creator_role_sid = default_conversation_creator_role_sid

    @property
    def default_conversation_role_sid(self):
        """Gets the default_conversation_role_sid of this ConversationsV1ServiceServiceConfiguration.

        The conversation-level role assigned to users when they are added to a conversation. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.

        :return: The default_conversation_role_sid of this ConversationsV1ServiceServiceConfiguration.
        :rtype: str
        """
        return self._default_conversation_role_sid

    @default_conversation_role_sid.setter
    def default_conversation_role_sid(self, default_conversation_role_sid):
        """Sets the default_conversation_role_sid of this ConversationsV1ServiceServiceConfiguration.

        The conversation-level role assigned to users when they are added to a conversation. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.

        :param default_conversation_role_sid: The default_conversation_role_sid of this ConversationsV1ServiceServiceConfiguration.
        :type default_conversation_role_sid: str
        """
        if default_conversation_role_sid is not None and len(default_conversation_role_sid) > 34:
            raise ValueError("Invalid value for `default_conversation_role_sid`, length must be less than or equal to `34`")
        if default_conversation_role_sid is not None and len(default_conversation_role_sid) < 34:
            raise ValueError("Invalid value for `default_conversation_role_sid`, length must be greater than or equal to `34`")
        if default_conversation_role_sid is not None and not re.search(r'^RL[0-9a-fA-F]{32}$', default_conversation_role_sid):
            raise ValueError("Invalid value for `default_conversation_role_sid`, must be a follow pattern or equal to `/^RL[0-9a-fA-F]{32}$/`")

        self._default_conversation_role_sid = default_conversation_role_sid

    @property
    def links(self):
        """Gets the links of this ConversationsV1ServiceServiceConfiguration.

        Contains an absolute API resource URL to access the push notifications configuration of this service.

        :return: The links of this ConversationsV1ServiceServiceConfiguration.
        :rtype: object
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ConversationsV1ServiceServiceConfiguration.

        Contains an absolute API resource URL to access the push notifications configuration of this service.

        :param links: The links of this ConversationsV1ServiceServiceConfiguration.
        :type links: object
        """

        self._links = links

    @property
    def reachability_enabled(self):
        """Gets the reachability_enabled of this ConversationsV1ServiceServiceConfiguration.

        Whether the [Reachability Indicator](https://www.twilio.com/docs/conversations/reachability) is enabled for this Conversations Service. The default is `false`.

        :return: The reachability_enabled of this ConversationsV1ServiceServiceConfiguration.
        :rtype: bool
        """
        return self._reachability_enabled

    @reachability_enabled.setter
    def reachability_enabled(self, reachability_enabled):
        """Sets the reachability_enabled of this ConversationsV1ServiceServiceConfiguration.

        Whether the [Reachability Indicator](https://www.twilio.com/docs/conversations/reachability) is enabled for this Conversations Service. The default is `false`.

        :param reachability_enabled: The reachability_enabled of this ConversationsV1ServiceServiceConfiguration.
        :type reachability_enabled: bool
        """

        self._reachability_enabled = reachability_enabled

    @property
    def url(self):
        """Gets the url of this ConversationsV1ServiceServiceConfiguration.

        An absolute API resource URL for this service configuration.

        :return: The url of this ConversationsV1ServiceServiceConfiguration.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ConversationsV1ServiceServiceConfiguration.

        An absolute API resource URL for this service configuration.

        :param url: The url of this ConversationsV1ServiceServiceConfiguration.
        :type url: str
        """

        self._url = url
