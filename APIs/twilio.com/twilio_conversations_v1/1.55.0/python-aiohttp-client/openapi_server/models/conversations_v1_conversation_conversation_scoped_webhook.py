# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ConversationsV1ConversationConversationScopedWebhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, configuration: object=None, conversation_sid: str=None, date_created: datetime=None, date_updated: datetime=None, sid: str=None, target: str=None, url: str=None):
        """ConversationsV1ConversationConversationScopedWebhook - a model defined in OpenAPI

        :param account_sid: The account_sid of this ConversationsV1ConversationConversationScopedWebhook.
        :param configuration: The configuration of this ConversationsV1ConversationConversationScopedWebhook.
        :param conversation_sid: The conversation_sid of this ConversationsV1ConversationConversationScopedWebhook.
        :param date_created: The date_created of this ConversationsV1ConversationConversationScopedWebhook.
        :param date_updated: The date_updated of this ConversationsV1ConversationConversationScopedWebhook.
        :param sid: The sid of this ConversationsV1ConversationConversationScopedWebhook.
        :param target: The target of this ConversationsV1ConversationConversationScopedWebhook.
        :param url: The url of this ConversationsV1ConversationConversationScopedWebhook.
        """
        self.openapi_types = {
            'account_sid': str,
            'configuration': object,
            'conversation_sid': str,
            'date_created': datetime,
            'date_updated': datetime,
            'sid': str,
            'target': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'configuration': 'configuration',
            'conversation_sid': 'conversation_sid',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'sid': 'sid',
            'target': 'target',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._configuration = configuration
        self._conversation_sid = conversation_sid
        self._date_created = date_created
        self._date_updated = date_updated
        self._sid = sid
        self._target = target
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsV1ConversationConversationScopedWebhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations.v1.conversation.conversation_scoped_webhook of this ConversationsV1ConversationConversationScopedWebhook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ConversationsV1ConversationConversationScopedWebhook.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.

        :return: The account_sid of this ConversationsV1ConversationConversationScopedWebhook.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ConversationsV1ConversationConversationScopedWebhook.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.

        :param account_sid: The account_sid of this ConversationsV1ConversationConversationScopedWebhook.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def configuration(self):
        """Gets the configuration of this ConversationsV1ConversationConversationScopedWebhook.

        The configuration of this webhook. Is defined based on target.

        :return: The configuration of this ConversationsV1ConversationConversationScopedWebhook.
        :rtype: object
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this ConversationsV1ConversationConversationScopedWebhook.

        The configuration of this webhook. Is defined based on target.

        :param configuration: The configuration of this ConversationsV1ConversationConversationScopedWebhook.
        :type configuration: object
        """

        self._configuration = configuration

    @property
    def conversation_sid(self):
        """Gets the conversation_sid of this ConversationsV1ConversationConversationScopedWebhook.

        The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.

        :return: The conversation_sid of this ConversationsV1ConversationConversationScopedWebhook.
        :rtype: str
        """
        return self._conversation_sid

    @conversation_sid.setter
    def conversation_sid(self, conversation_sid):
        """Sets the conversation_sid of this ConversationsV1ConversationConversationScopedWebhook.

        The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.

        :param conversation_sid: The conversation_sid of this ConversationsV1ConversationConversationScopedWebhook.
        :type conversation_sid: str
        """
        if conversation_sid is not None and len(conversation_sid) > 34:
            raise ValueError("Invalid value for `conversation_sid`, length must be less than or equal to `34`")
        if conversation_sid is not None and len(conversation_sid) < 34:
            raise ValueError("Invalid value for `conversation_sid`, length must be greater than or equal to `34`")
        if conversation_sid is not None and not re.search(r'^CH[0-9a-fA-F]{32}$', conversation_sid):
            raise ValueError("Invalid value for `conversation_sid`, must be a follow pattern or equal to `/^CH[0-9a-fA-F]{32}$/`")

        self._conversation_sid = conversation_sid

    @property
    def date_created(self):
        """Gets the date_created of this ConversationsV1ConversationConversationScopedWebhook.

        The date that this resource was created.

        :return: The date_created of this ConversationsV1ConversationConversationScopedWebhook.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ConversationsV1ConversationConversationScopedWebhook.

        The date that this resource was created.

        :param date_created: The date_created of this ConversationsV1ConversationConversationScopedWebhook.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this ConversationsV1ConversationConversationScopedWebhook.

        The date that this resource was last updated.

        :return: The date_updated of this ConversationsV1ConversationConversationScopedWebhook.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this ConversationsV1ConversationConversationScopedWebhook.

        The date that this resource was last updated.

        :param date_updated: The date_updated of this ConversationsV1ConversationConversationScopedWebhook.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def sid(self):
        """Gets the sid of this ConversationsV1ConversationConversationScopedWebhook.

        A 34 character string that uniquely identifies this resource.

        :return: The sid of this ConversationsV1ConversationConversationScopedWebhook.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this ConversationsV1ConversationConversationScopedWebhook.

        A 34 character string that uniquely identifies this resource.

        :param sid: The sid of this ConversationsV1ConversationConversationScopedWebhook.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^WH[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^WH[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def target(self):
        """Gets the target of this ConversationsV1ConversationConversationScopedWebhook.

        The target of this webhook: `webhook`, `studio`, `trigger`

        :return: The target of this ConversationsV1ConversationConversationScopedWebhook.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this ConversationsV1ConversationConversationScopedWebhook.

        The target of this webhook: `webhook`, `studio`, `trigger`

        :param target: The target of this ConversationsV1ConversationConversationScopedWebhook.
        :type target: str
        """

        self._target = target

    @property
    def url(self):
        """Gets the url of this ConversationsV1ConversationConversationScopedWebhook.

        An absolute API resource URL for this webhook.

        :return: The url of this ConversationsV1ConversationConversationScopedWebhook.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ConversationsV1ConversationConversationScopedWebhook.

        An absolute API resource URL for this webhook.

        :param url: The url of this ConversationsV1ConversationConversationScopedWebhook.
        :type url: str
        """

        self._url = url
