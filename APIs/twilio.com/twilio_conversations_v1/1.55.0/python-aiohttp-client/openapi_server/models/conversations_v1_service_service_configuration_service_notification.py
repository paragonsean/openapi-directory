# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ConversationsV1ServiceServiceConfigurationServiceNotification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, added_to_conversation: object=None, chat_service_sid: str=None, log_enabled: bool=None, new_message: object=None, removed_from_conversation: object=None, url: str=None):
        """ConversationsV1ServiceServiceConfigurationServiceNotification - a model defined in OpenAPI

        :param account_sid: The account_sid of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :param added_to_conversation: The added_to_conversation of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :param chat_service_sid: The chat_service_sid of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :param log_enabled: The log_enabled of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :param new_message: The new_message of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :param removed_from_conversation: The removed_from_conversation of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :param url: The url of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        """
        self.openapi_types = {
            'account_sid': str,
            'added_to_conversation': object,
            'chat_service_sid': str,
            'log_enabled': bool,
            'new_message': object,
            'removed_from_conversation': object,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'added_to_conversation': 'added_to_conversation',
            'chat_service_sid': 'chat_service_sid',
            'log_enabled': 'log_enabled',
            'new_message': 'new_message',
            'removed_from_conversation': 'removed_from_conversation',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._added_to_conversation = added_to_conversation
        self._chat_service_sid = chat_service_sid
        self._log_enabled = log_enabled
        self._new_message = new_message
        self._removed_from_conversation = removed_from_conversation
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsV1ServiceServiceConfigurationServiceNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations.v1.service.service_configuration.service_notification of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.

        :return: The account_sid of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.

        :param account_sid: The account_sid of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def added_to_conversation(self):
        """Gets the added_to_conversation of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        The Push Notification configuration for being added to a Conversation.

        :return: The added_to_conversation of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :rtype: object
        """
        return self._added_to_conversation

    @added_to_conversation.setter
    def added_to_conversation(self, added_to_conversation):
        """Sets the added_to_conversation of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        The Push Notification configuration for being added to a Conversation.

        :param added_to_conversation: The added_to_conversation of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :type added_to_conversation: object
        """

        self._added_to_conversation = added_to_conversation

    @property
    def chat_service_sid(self):
        """Gets the chat_service_sid of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.

        :return: The chat_service_sid of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :rtype: str
        """
        return self._chat_service_sid

    @chat_service_sid.setter
    def chat_service_sid(self, chat_service_sid):
        """Sets the chat_service_sid of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.

        :param chat_service_sid: The chat_service_sid of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :type chat_service_sid: str
        """
        if chat_service_sid is not None and len(chat_service_sid) > 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be less than or equal to `34`")
        if chat_service_sid is not None and len(chat_service_sid) < 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be greater than or equal to `34`")
        if chat_service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', chat_service_sid):
            raise ValueError("Invalid value for `chat_service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._chat_service_sid = chat_service_sid

    @property
    def log_enabled(self):
        """Gets the log_enabled of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        Weather the notification logging is enabled.

        :return: The log_enabled of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :rtype: bool
        """
        return self._log_enabled

    @log_enabled.setter
    def log_enabled(self, log_enabled):
        """Sets the log_enabled of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        Weather the notification logging is enabled.

        :param log_enabled: The log_enabled of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :type log_enabled: bool
        """

        self._log_enabled = log_enabled

    @property
    def new_message(self):
        """Gets the new_message of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        The Push Notification configuration for New Messages.

        :return: The new_message of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :rtype: object
        """
        return self._new_message

    @new_message.setter
    def new_message(self, new_message):
        """Sets the new_message of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        The Push Notification configuration for New Messages.

        :param new_message: The new_message of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :type new_message: object
        """

        self._new_message = new_message

    @property
    def removed_from_conversation(self):
        """Gets the removed_from_conversation of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        The Push Notification configuration for being removed from a Conversation.

        :return: The removed_from_conversation of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :rtype: object
        """
        return self._removed_from_conversation

    @removed_from_conversation.setter
    def removed_from_conversation(self, removed_from_conversation):
        """Sets the removed_from_conversation of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        The Push Notification configuration for being removed from a Conversation.

        :param removed_from_conversation: The removed_from_conversation of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :type removed_from_conversation: object
        """

        self._removed_from_conversation = removed_from_conversation

    @property
    def url(self):
        """Gets the url of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        An absolute API resource URL for this configuration.

        :return: The url of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ConversationsV1ServiceServiceConfigurationServiceNotification.

        An absolute API resource URL for this configuration.

        :param url: The url of this ConversationsV1ServiceServiceConfigurationServiceNotification.
        :type url: str
        """

        self._url = url
