# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_webhook_configuration_enum_method import ServiceWebhookConfigurationEnumMethod
import re
from openapi_server import util


class ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, chat_service_sid: str=None, filters: List[str]=None, method: ServiceWebhookConfigurationEnumMethod=None, post_webhook_url: str=None, pre_webhook_url: str=None, url: str=None):
        """ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration - a model defined in OpenAPI

        :param account_sid: The account_sid of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :param chat_service_sid: The chat_service_sid of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :param filters: The filters of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :param method: The method of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :param post_webhook_url: The post_webhook_url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :param pre_webhook_url: The pre_webhook_url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :param url: The url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        """
        self.openapi_types = {
            'account_sid': str,
            'chat_service_sid': str,
            'filters': List[str],
            'method': ServiceWebhookConfigurationEnumMethod,
            'post_webhook_url': str,
            'pre_webhook_url': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'chat_service_sid': 'chat_service_sid',
            'filters': 'filters',
            'method': 'method',
            'post_webhook_url': 'post_webhook_url',
            'pre_webhook_url': 'pre_webhook_url',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._chat_service_sid = chat_service_sid
        self._filters = filters
        self._method = method
        self._post_webhook_url = post_webhook_url
        self._pre_webhook_url = pre_webhook_url
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations.v1.service.service_configuration.service_webhook_configuration of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.

        :return: The account_sid of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.

        The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.

        :param account_sid: The account_sid of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def chat_service_sid(self):
        """Gets the chat_service_sid of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.

        The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.

        :return: The chat_service_sid of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :rtype: str
        """
        return self._chat_service_sid

    @chat_service_sid.setter
    def chat_service_sid(self, chat_service_sid):
        """Sets the chat_service_sid of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.

        The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.

        :param chat_service_sid: The chat_service_sid of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :type chat_service_sid: str
        """
        if chat_service_sid is not None and len(chat_service_sid) > 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be less than or equal to `34`")
        if chat_service_sid is not None and len(chat_service_sid) < 34:
            raise ValueError("Invalid value for `chat_service_sid`, length must be greater than or equal to `34`")
        if chat_service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', chat_service_sid):
            raise ValueError("Invalid value for `chat_service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._chat_service_sid = chat_service_sid

    @property
    def filters(self):
        """Gets the filters of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.

        The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.

        :return: The filters of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :rtype: List[str]
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.

        The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.

        :param filters: The filters of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :type filters: List[str]
        """

        self._filters = filters

    @property
    def method(self):
        """Gets the method of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.


        :return: The method of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :rtype: ServiceWebhookConfigurationEnumMethod
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.


        :param method: The method of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :type method: ServiceWebhookConfigurationEnumMethod
        """

        self._method = method

    @property
    def post_webhook_url(self):
        """Gets the post_webhook_url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.

        The absolute url the post-event webhook request should be sent to.

        :return: The post_webhook_url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :rtype: str
        """
        return self._post_webhook_url

    @post_webhook_url.setter
    def post_webhook_url(self, post_webhook_url):
        """Sets the post_webhook_url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.

        The absolute url the post-event webhook request should be sent to.

        :param post_webhook_url: The post_webhook_url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :type post_webhook_url: str
        """

        self._post_webhook_url = post_webhook_url

    @property
    def pre_webhook_url(self):
        """Gets the pre_webhook_url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.

        The absolute url the pre-event webhook request should be sent to.

        :return: The pre_webhook_url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :rtype: str
        """
        return self._pre_webhook_url

    @pre_webhook_url.setter
    def pre_webhook_url(self, pre_webhook_url):
        """Sets the pre_webhook_url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.

        The absolute url the pre-event webhook request should be sent to.

        :param pre_webhook_url: The pre_webhook_url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :type pre_webhook_url: str
        """

        self._pre_webhook_url = pre_webhook_url

    @property
    def url(self):
        """Gets the url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.

        An absolute API resource URL for this webhook.

        :return: The url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.

        An absolute API resource URL for this webhook.

        :param url: The url of this ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.
        :type url: str
        """

        self._url = url
