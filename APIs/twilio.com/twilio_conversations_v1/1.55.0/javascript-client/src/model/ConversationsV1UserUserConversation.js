/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserConversationEnumNotificationLevel from './UserConversationEnumNotificationLevel';
import UserConversationEnumState from './UserConversationEnumState';

/**
 * The ConversationsV1UserUserConversation model module.
 * @module model/ConversationsV1UserUserConversation
 * @version 1.55.0
 */
class ConversationsV1UserUserConversation {
    /**
     * Constructs a new <code>ConversationsV1UserUserConversation</code>.
     * @alias module:model/ConversationsV1UserUserConversation
     */
    constructor() { 
        
        ConversationsV1UserUserConversation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversationsV1UserUserConversation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationsV1UserUserConversation} obj Optional instance to populate.
     * @return {module:model/ConversationsV1UserUserConversation} The populated <code>ConversationsV1UserUserConversation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationsV1UserUserConversation();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], 'String');
            }
            if (data.hasOwnProperty('chat_service_sid')) {
                obj['chat_service_sid'] = ApiClient.convertToType(data['chat_service_sid'], 'String');
            }
            if (data.hasOwnProperty('conversation_sid')) {
                obj['conversation_sid'] = ApiClient.convertToType(data['conversation_sid'], 'String');
            }
            if (data.hasOwnProperty('conversation_state')) {
                obj['conversation_state'] = UserConversationEnumState.constructFromObject(data['conversation_state']);
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('last_read_message_index')) {
                obj['last_read_message_index'] = ApiClient.convertToType(data['last_read_message_index'], 'Number');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('notification_level')) {
                obj['notification_level'] = UserConversationEnumNotificationLevel.constructFromObject(data['notification_level']);
            }
            if (data.hasOwnProperty('participant_sid')) {
                obj['participant_sid'] = ApiClient.convertToType(data['participant_sid'], 'String');
            }
            if (data.hasOwnProperty('timers')) {
                obj['timers'] = ApiClient.convertToType(data['timers'], Object);
            }
            if (data.hasOwnProperty('unique_name')) {
                obj['unique_name'] = ApiClient.convertToType(data['unique_name'], 'String');
            }
            if (data.hasOwnProperty('unread_messages_count')) {
                obj['unread_messages_count'] = ApiClient.convertToType(data['unread_messages_count'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('user_sid')) {
                obj['user_sid'] = ApiClient.convertToType(data['user_sid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationsV1UserUserConversation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationsV1UserUserConversation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['attributes'] && !(typeof data['attributes'] === 'string' || data['attributes'] instanceof String)) {
            throw new Error("Expected the field `attributes` to be a primitive type in the JSON string but got " + data['attributes']);
        }
        // ensure the json data is a string
        if (data['chat_service_sid'] && !(typeof data['chat_service_sid'] === 'string' || data['chat_service_sid'] instanceof String)) {
            throw new Error("Expected the field `chat_service_sid` to be a primitive type in the JSON string but got " + data['chat_service_sid']);
        }
        // ensure the json data is a string
        if (data['conversation_sid'] && !(typeof data['conversation_sid'] === 'string' || data['conversation_sid'] instanceof String)) {
            throw new Error("Expected the field `conversation_sid` to be a primitive type in the JSON string but got " + data['conversation_sid']);
        }
        // ensure the json data is a string
        if (data['conversation_state'] && !(typeof data['conversation_state'] === 'string' || data['conversation_state'] instanceof String)) {
            throw new Error("Expected the field `conversation_state` to be a primitive type in the JSON string but got " + data['conversation_state']);
        }
        // ensure the json data is a string
        if (data['created_by'] && !(typeof data['created_by'] === 'string' || data['created_by'] instanceof String)) {
            throw new Error("Expected the field `created_by` to be a primitive type in the JSON string but got " + data['created_by']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['notification_level'] && !(typeof data['notification_level'] === 'string' || data['notification_level'] instanceof String)) {
            throw new Error("Expected the field `notification_level` to be a primitive type in the JSON string but got " + data['notification_level']);
        }
        // ensure the json data is a string
        if (data['participant_sid'] && !(typeof data['participant_sid'] === 'string' || data['participant_sid'] instanceof String)) {
            throw new Error("Expected the field `participant_sid` to be a primitive type in the JSON string but got " + data['participant_sid']);
        }
        // ensure the json data is a string
        if (data['unique_name'] && !(typeof data['unique_name'] === 'string' || data['unique_name'] instanceof String)) {
            throw new Error("Expected the field `unique_name` to be a primitive type in the JSON string but got " + data['unique_name']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['user_sid'] && !(typeof data['user_sid'] === 'string' || data['user_sid'] instanceof String)) {
            throw new Error("Expected the field `user_sid` to be a primitive type in the JSON string but got " + data['user_sid']);
        }

        return true;
    }


}



/**
 * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.
 * @member {String} account_sid
 */
ConversationsV1UserUserConversation.prototype['account_sid'] = undefined;

/**
 * An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.
 * @member {String} attributes
 */
ConversationsV1UserUserConversation.prototype['attributes'] = undefined;

/**
 * The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.
 * @member {String} chat_service_sid
 */
ConversationsV1UserUserConversation.prototype['chat_service_sid'] = undefined;

/**
 * The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.
 * @member {String} conversation_sid
 */
ConversationsV1UserUserConversation.prototype['conversation_sid'] = undefined;

/**
 * @member {module:model/UserConversationEnumState} conversation_state
 */
ConversationsV1UserUserConversation.prototype['conversation_state'] = undefined;

/**
 * Identity of the creator of this Conversation.
 * @member {String} created_by
 */
ConversationsV1UserUserConversation.prototype['created_by'] = undefined;

/**
 * The date that this conversation was created, given in ISO 8601 format.
 * @member {Date} date_created
 */
ConversationsV1UserUserConversation.prototype['date_created'] = undefined;

/**
 * The date that this conversation was last updated, given in ISO 8601 format.
 * @member {Date} date_updated
 */
ConversationsV1UserUserConversation.prototype['date_updated'] = undefined;

/**
 * The human-readable name of this conversation, limited to 256 characters. Optional.
 * @member {String} friendly_name
 */
ConversationsV1UserUserConversation.prototype['friendly_name'] = undefined;

/**
 * The index of the last Message in the Conversation that the Participant has read.
 * @member {Number} last_read_message_index
 */
ConversationsV1UserUserConversation.prototype['last_read_message_index'] = undefined;

/**
 * Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.
 * @member {Object} links
 */
ConversationsV1UserUserConversation.prototype['links'] = undefined;

/**
 * @member {module:model/UserConversationEnumNotificationLevel} notification_level
 */
ConversationsV1UserUserConversation.prototype['notification_level'] = undefined;

/**
 * The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.
 * @member {String} participant_sid
 */
ConversationsV1UserUserConversation.prototype['participant_sid'] = undefined;

/**
 * Timer date values representing state update for this conversation.
 * @member {Object} timers
 */
ConversationsV1UserUserConversation.prototype['timers'] = undefined;

/**
 * An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.
 * @member {String} unique_name
 */
ConversationsV1UserUserConversation.prototype['unique_name'] = undefined;

/**
 * The number of unread Messages in the Conversation for the Participant.
 * @member {Number} unread_messages_count
 */
ConversationsV1UserUserConversation.prototype['unread_messages_count'] = undefined;

/**
 * @member {String} url
 */
ConversationsV1UserUserConversation.prototype['url'] = undefined;

/**
 * The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).
 * @member {String} user_sid
 */
ConversationsV1UserUserConversation.prototype['user_sid'] = undefined;






export default ConversationsV1UserUserConversation;

