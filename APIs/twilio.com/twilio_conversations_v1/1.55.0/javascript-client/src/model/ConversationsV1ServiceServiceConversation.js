/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceConversationEnumState from './ServiceConversationEnumState';

/**
 * The ConversationsV1ServiceServiceConversation model module.
 * @module model/ConversationsV1ServiceServiceConversation
 * @version 1.55.0
 */
class ConversationsV1ServiceServiceConversation {
    /**
     * Constructs a new <code>ConversationsV1ServiceServiceConversation</code>.
     * @alias module:model/ConversationsV1ServiceServiceConversation
     */
    constructor() { 
        
        ConversationsV1ServiceServiceConversation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversationsV1ServiceServiceConversation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationsV1ServiceServiceConversation} obj Optional instance to populate.
     * @return {module:model/ConversationsV1ServiceServiceConversation} The populated <code>ConversationsV1ServiceServiceConversation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationsV1ServiceServiceConversation();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], 'String');
            }
            if (data.hasOwnProperty('bindings')) {
                obj['bindings'] = ApiClient.convertToType(data['bindings'], Object);
            }
            if (data.hasOwnProperty('chat_service_sid')) {
                obj['chat_service_sid'] = ApiClient.convertToType(data['chat_service_sid'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('messaging_service_sid')) {
                obj['messaging_service_sid'] = ApiClient.convertToType(data['messaging_service_sid'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ServiceConversationEnumState.constructFromObject(data['state']);
            }
            if (data.hasOwnProperty('timers')) {
                obj['timers'] = ApiClient.convertToType(data['timers'], Object);
            }
            if (data.hasOwnProperty('unique_name')) {
                obj['unique_name'] = ApiClient.convertToType(data['unique_name'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationsV1ServiceServiceConversation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationsV1ServiceServiceConversation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['attributes'] && !(typeof data['attributes'] === 'string' || data['attributes'] instanceof String)) {
            throw new Error("Expected the field `attributes` to be a primitive type in the JSON string but got " + data['attributes']);
        }
        // ensure the json data is a string
        if (data['chat_service_sid'] && !(typeof data['chat_service_sid'] === 'string' || data['chat_service_sid'] instanceof String)) {
            throw new Error("Expected the field `chat_service_sid` to be a primitive type in the JSON string but got " + data['chat_service_sid']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['messaging_service_sid'] && !(typeof data['messaging_service_sid'] === 'string' || data['messaging_service_sid'] instanceof String)) {
            throw new Error("Expected the field `messaging_service_sid` to be a primitive type in the JSON string but got " + data['messaging_service_sid']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['unique_name'] && !(typeof data['unique_name'] === 'string' || data['unique_name'] instanceof String)) {
            throw new Error("Expected the field `unique_name` to be a primitive type in the JSON string but got " + data['unique_name']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.
 * @member {String} account_sid
 */
ConversationsV1ServiceServiceConversation.prototype['account_sid'] = undefined;

/**
 * An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.
 * @member {String} attributes
 */
ConversationsV1ServiceServiceConversation.prototype['attributes'] = undefined;

/**
 * @member {Object} bindings
 */
ConversationsV1ServiceServiceConversation.prototype['bindings'] = undefined;

/**
 * The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.
 * @member {String} chat_service_sid
 */
ConversationsV1ServiceServiceConversation.prototype['chat_service_sid'] = undefined;

/**
 * The date that this resource was created.
 * @member {Date} date_created
 */
ConversationsV1ServiceServiceConversation.prototype['date_created'] = undefined;

/**
 * The date that this resource was last updated.
 * @member {Date} date_updated
 */
ConversationsV1ServiceServiceConversation.prototype['date_updated'] = undefined;

/**
 * The human-readable name of this conversation, limited to 256 characters. Optional.
 * @member {String} friendly_name
 */
ConversationsV1ServiceServiceConversation.prototype['friendly_name'] = undefined;

/**
 * Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.
 * @member {Object} links
 */
ConversationsV1ServiceServiceConversation.prototype['links'] = undefined;

/**
 * The unique ID of the [Messaging Service](https://www.twilio.com/docs/messaging/api/service-resource) this conversation belongs to.
 * @member {String} messaging_service_sid
 */
ConversationsV1ServiceServiceConversation.prototype['messaging_service_sid'] = undefined;

/**
 * A 34 character string that uniquely identifies this resource.
 * @member {String} sid
 */
ConversationsV1ServiceServiceConversation.prototype['sid'] = undefined;

/**
 * @member {module:model/ServiceConversationEnumState} state
 */
ConversationsV1ServiceServiceConversation.prototype['state'] = undefined;

/**
 * Timer date values representing state update for this conversation.
 * @member {Object} timers
 */
ConversationsV1ServiceServiceConversation.prototype['timers'] = undefined;

/**
 * An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.
 * @member {String} unique_name
 */
ConversationsV1ServiceServiceConversation.prototype['unique_name'] = undefined;

/**
 * An absolute API resource URL for this conversation.
 * @member {String} url
 */
ConversationsV1ServiceServiceConversation.prototype['url'] = undefined;






export default ConversationsV1ServiceServiceConversation;

