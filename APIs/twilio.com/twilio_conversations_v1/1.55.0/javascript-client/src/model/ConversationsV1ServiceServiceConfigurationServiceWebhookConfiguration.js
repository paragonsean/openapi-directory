/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceWebhookConfigurationEnumMethod from './ServiceWebhookConfigurationEnumMethod';

/**
 * The ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration model module.
 * @module model/ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration
 * @version 1.55.0
 */
class ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration {
    /**
     * Constructs a new <code>ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration</code>.
     * @alias module:model/ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration
     */
    constructor() { 
        
        ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration} obj Optional instance to populate.
     * @return {module:model/ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration} The populated <code>ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('chat_service_sid')) {
                obj['chat_service_sid'] = ApiClient.convertToType(data['chat_service_sid'], 'String');
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = ApiClient.convertToType(data['filters'], ['String']);
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ServiceWebhookConfigurationEnumMethod.constructFromObject(data['method']);
            }
            if (data.hasOwnProperty('post_webhook_url')) {
                obj['post_webhook_url'] = ApiClient.convertToType(data['post_webhook_url'], 'String');
            }
            if (data.hasOwnProperty('pre_webhook_url')) {
                obj['pre_webhook_url'] = ApiClient.convertToType(data['pre_webhook_url'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['chat_service_sid'] && !(typeof data['chat_service_sid'] === 'string' || data['chat_service_sid'] instanceof String)) {
            throw new Error("Expected the field `chat_service_sid` to be a primitive type in the JSON string but got " + data['chat_service_sid']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['filters'])) {
            throw new Error("Expected the field `filters` to be an array in the JSON data but got " + data['filters']);
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['post_webhook_url'] && !(typeof data['post_webhook_url'] === 'string' || data['post_webhook_url'] instanceof String)) {
            throw new Error("Expected the field `post_webhook_url` to be a primitive type in the JSON string but got " + data['post_webhook_url']);
        }
        // ensure the json data is a string
        if (data['pre_webhook_url'] && !(typeof data['pre_webhook_url'] === 'string' || data['pre_webhook_url'] instanceof String)) {
            throw new Error("Expected the field `pre_webhook_url` to be a primitive type in the JSON string but got " + data['pre_webhook_url']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.
 * @member {String} account_sid
 */
ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.prototype['account_sid'] = undefined;

/**
 * The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.
 * @member {String} chat_service_sid
 */
ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.prototype['chat_service_sid'] = undefined;

/**
 * The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.
 * @member {Array.<String>} filters
 */
ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.prototype['filters'] = undefined;

/**
 * @member {module:model/ServiceWebhookConfigurationEnumMethod} method
 */
ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.prototype['method'] = undefined;

/**
 * The absolute url the post-event webhook request should be sent to.
 * @member {String} post_webhook_url
 */
ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.prototype['post_webhook_url'] = undefined;

/**
 * The absolute url the pre-event webhook request should be sent to.
 * @member {String} pre_webhook_url
 */
ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.prototype['pre_webhook_url'] = undefined;

/**
 * An absolute API resource URL for this webhook.
 * @member {String} url
 */
ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration.prototype['url'] = undefined;






export default ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration;

