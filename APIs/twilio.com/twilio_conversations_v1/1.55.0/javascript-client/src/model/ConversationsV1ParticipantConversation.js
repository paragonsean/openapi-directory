/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ParticipantConversationEnumState from './ParticipantConversationEnumState';

/**
 * The ConversationsV1ParticipantConversation model module.
 * @module model/ConversationsV1ParticipantConversation
 * @version 1.55.0
 */
class ConversationsV1ParticipantConversation {
    /**
     * Constructs a new <code>ConversationsV1ParticipantConversation</code>.
     * @alias module:model/ConversationsV1ParticipantConversation
     */
    constructor() { 
        
        ConversationsV1ParticipantConversation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversationsV1ParticipantConversation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationsV1ParticipantConversation} obj Optional instance to populate.
     * @return {module:model/ConversationsV1ParticipantConversation} The populated <code>ConversationsV1ParticipantConversation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationsV1ParticipantConversation();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('chat_service_sid')) {
                obj['chat_service_sid'] = ApiClient.convertToType(data['chat_service_sid'], 'String');
            }
            if (data.hasOwnProperty('conversation_attributes')) {
                obj['conversation_attributes'] = ApiClient.convertToType(data['conversation_attributes'], 'String');
            }
            if (data.hasOwnProperty('conversation_created_by')) {
                obj['conversation_created_by'] = ApiClient.convertToType(data['conversation_created_by'], 'String');
            }
            if (data.hasOwnProperty('conversation_date_created')) {
                obj['conversation_date_created'] = ApiClient.convertToType(data['conversation_date_created'], 'Date');
            }
            if (data.hasOwnProperty('conversation_date_updated')) {
                obj['conversation_date_updated'] = ApiClient.convertToType(data['conversation_date_updated'], 'Date');
            }
            if (data.hasOwnProperty('conversation_friendly_name')) {
                obj['conversation_friendly_name'] = ApiClient.convertToType(data['conversation_friendly_name'], 'String');
            }
            if (data.hasOwnProperty('conversation_sid')) {
                obj['conversation_sid'] = ApiClient.convertToType(data['conversation_sid'], 'String');
            }
            if (data.hasOwnProperty('conversation_state')) {
                obj['conversation_state'] = ParticipantConversationEnumState.constructFromObject(data['conversation_state']);
            }
            if (data.hasOwnProperty('conversation_timers')) {
                obj['conversation_timers'] = ApiClient.convertToType(data['conversation_timers'], Object);
            }
            if (data.hasOwnProperty('conversation_unique_name')) {
                obj['conversation_unique_name'] = ApiClient.convertToType(data['conversation_unique_name'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('participant_identity')) {
                obj['participant_identity'] = ApiClient.convertToType(data['participant_identity'], 'String');
            }
            if (data.hasOwnProperty('participant_messaging_binding')) {
                obj['participant_messaging_binding'] = ApiClient.convertToType(data['participant_messaging_binding'], Object);
            }
            if (data.hasOwnProperty('participant_sid')) {
                obj['participant_sid'] = ApiClient.convertToType(data['participant_sid'], 'String');
            }
            if (data.hasOwnProperty('participant_user_sid')) {
                obj['participant_user_sid'] = ApiClient.convertToType(data['participant_user_sid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationsV1ParticipantConversation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationsV1ParticipantConversation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['chat_service_sid'] && !(typeof data['chat_service_sid'] === 'string' || data['chat_service_sid'] instanceof String)) {
            throw new Error("Expected the field `chat_service_sid` to be a primitive type in the JSON string but got " + data['chat_service_sid']);
        }
        // ensure the json data is a string
        if (data['conversation_attributes'] && !(typeof data['conversation_attributes'] === 'string' || data['conversation_attributes'] instanceof String)) {
            throw new Error("Expected the field `conversation_attributes` to be a primitive type in the JSON string but got " + data['conversation_attributes']);
        }
        // ensure the json data is a string
        if (data['conversation_created_by'] && !(typeof data['conversation_created_by'] === 'string' || data['conversation_created_by'] instanceof String)) {
            throw new Error("Expected the field `conversation_created_by` to be a primitive type in the JSON string but got " + data['conversation_created_by']);
        }
        // ensure the json data is a string
        if (data['conversation_friendly_name'] && !(typeof data['conversation_friendly_name'] === 'string' || data['conversation_friendly_name'] instanceof String)) {
            throw new Error("Expected the field `conversation_friendly_name` to be a primitive type in the JSON string but got " + data['conversation_friendly_name']);
        }
        // ensure the json data is a string
        if (data['conversation_sid'] && !(typeof data['conversation_sid'] === 'string' || data['conversation_sid'] instanceof String)) {
            throw new Error("Expected the field `conversation_sid` to be a primitive type in the JSON string but got " + data['conversation_sid']);
        }
        // ensure the json data is a string
        if (data['conversation_state'] && !(typeof data['conversation_state'] === 'string' || data['conversation_state'] instanceof String)) {
            throw new Error("Expected the field `conversation_state` to be a primitive type in the JSON string but got " + data['conversation_state']);
        }
        // ensure the json data is a string
        if (data['conversation_unique_name'] && !(typeof data['conversation_unique_name'] === 'string' || data['conversation_unique_name'] instanceof String)) {
            throw new Error("Expected the field `conversation_unique_name` to be a primitive type in the JSON string but got " + data['conversation_unique_name']);
        }
        // ensure the json data is a string
        if (data['participant_identity'] && !(typeof data['participant_identity'] === 'string' || data['participant_identity'] instanceof String)) {
            throw new Error("Expected the field `participant_identity` to be a primitive type in the JSON string but got " + data['participant_identity']);
        }
        // ensure the json data is a string
        if (data['participant_sid'] && !(typeof data['participant_sid'] === 'string' || data['participant_sid'] instanceof String)) {
            throw new Error("Expected the field `participant_sid` to be a primitive type in the JSON string but got " + data['participant_sid']);
        }
        // ensure the json data is a string
        if (data['participant_user_sid'] && !(typeof data['participant_user_sid'] === 'string' || data['participant_user_sid'] instanceof String)) {
            throw new Error("Expected the field `participant_user_sid` to be a primitive type in the JSON string but got " + data['participant_user_sid']);
        }

        return true;
    }


}



/**
 * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.
 * @member {String} account_sid
 */
ConversationsV1ParticipantConversation.prototype['account_sid'] = undefined;

/**
 * The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.
 * @member {String} chat_service_sid
 */
ConversationsV1ParticipantConversation.prototype['chat_service_sid'] = undefined;

/**
 * An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.
 * @member {String} conversation_attributes
 */
ConversationsV1ParticipantConversation.prototype['conversation_attributes'] = undefined;

/**
 * Identity of the creator of this Conversation.
 * @member {String} conversation_created_by
 */
ConversationsV1ParticipantConversation.prototype['conversation_created_by'] = undefined;

/**
 * The date that this conversation was created, given in ISO 8601 format.
 * @member {Date} conversation_date_created
 */
ConversationsV1ParticipantConversation.prototype['conversation_date_created'] = undefined;

/**
 * The date that this conversation was last updated, given in ISO 8601 format.
 * @member {Date} conversation_date_updated
 */
ConversationsV1ParticipantConversation.prototype['conversation_date_updated'] = undefined;

/**
 * The human-readable name of this conversation, limited to 256 characters. Optional.
 * @member {String} conversation_friendly_name
 */
ConversationsV1ParticipantConversation.prototype['conversation_friendly_name'] = undefined;

/**
 * The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) this Participant belongs to.
 * @member {String} conversation_sid
 */
ConversationsV1ParticipantConversation.prototype['conversation_sid'] = undefined;

/**
 * @member {module:model/ParticipantConversationEnumState} conversation_state
 */
ConversationsV1ParticipantConversation.prototype['conversation_state'] = undefined;

/**
 * Timer date values representing state update for this conversation.
 * @member {Object} conversation_timers
 */
ConversationsV1ParticipantConversation.prototype['conversation_timers'] = undefined;

/**
 * An application-defined string that uniquely identifies the Conversation resource.
 * @member {String} conversation_unique_name
 */
ConversationsV1ParticipantConversation.prototype['conversation_unique_name'] = undefined;

/**
 * Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.
 * @member {Object} links
 */
ConversationsV1ParticipantConversation.prototype['links'] = undefined;

/**
 * A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.
 * @member {String} participant_identity
 */
ConversationsV1ParticipantConversation.prototype['participant_identity'] = undefined;

/**
 * Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.
 * @member {Object} participant_messaging_binding
 */
ConversationsV1ParticipantConversation.prototype['participant_messaging_binding'] = undefined;

/**
 * The unique ID of the [Participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource).
 * @member {String} participant_sid
 */
ConversationsV1ParticipantConversation.prototype['participant_sid'] = undefined;

/**
 * The unique string that identifies the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource).
 * @member {String} participant_user_sid
 */
ConversationsV1ParticipantConversation.prototype['participant_user_sid'] = undefined;






export default ConversationsV1ParticipantConversation;

