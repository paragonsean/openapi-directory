/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceBindingEnumBindingType from './ServiceBindingEnumBindingType';

/**
 * The ConversationsV1ServiceServiceBinding model module.
 * @module model/ConversationsV1ServiceServiceBinding
 * @version 1.55.0
 */
class ConversationsV1ServiceServiceBinding {
    /**
     * Constructs a new <code>ConversationsV1ServiceServiceBinding</code>.
     * @alias module:model/ConversationsV1ServiceServiceBinding
     */
    constructor() { 
        
        ConversationsV1ServiceServiceBinding.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversationsV1ServiceServiceBinding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationsV1ServiceServiceBinding} obj Optional instance to populate.
     * @return {module:model/ConversationsV1ServiceServiceBinding} The populated <code>ConversationsV1ServiceServiceBinding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationsV1ServiceServiceBinding();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('binding_type')) {
                obj['binding_type'] = ServiceBindingEnumBindingType.constructFromObject(data['binding_type']);
            }
            if (data.hasOwnProperty('chat_service_sid')) {
                obj['chat_service_sid'] = ApiClient.convertToType(data['chat_service_sid'], 'String');
            }
            if (data.hasOwnProperty('credential_sid')) {
                obj['credential_sid'] = ApiClient.convertToType(data['credential_sid'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('identity')) {
                obj['identity'] = ApiClient.convertToType(data['identity'], 'String');
            }
            if (data.hasOwnProperty('message_types')) {
                obj['message_types'] = ApiClient.convertToType(data['message_types'], ['String']);
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationsV1ServiceServiceBinding</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationsV1ServiceServiceBinding</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['binding_type'] && !(typeof data['binding_type'] === 'string' || data['binding_type'] instanceof String)) {
            throw new Error("Expected the field `binding_type` to be a primitive type in the JSON string but got " + data['binding_type']);
        }
        // ensure the json data is a string
        if (data['chat_service_sid'] && !(typeof data['chat_service_sid'] === 'string' || data['chat_service_sid'] instanceof String)) {
            throw new Error("Expected the field `chat_service_sid` to be a primitive type in the JSON string but got " + data['chat_service_sid']);
        }
        // ensure the json data is a string
        if (data['credential_sid'] && !(typeof data['credential_sid'] === 'string' || data['credential_sid'] instanceof String)) {
            throw new Error("Expected the field `credential_sid` to be a primitive type in the JSON string but got " + data['credential_sid']);
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['identity'] && !(typeof data['identity'] === 'string' || data['identity'] instanceof String)) {
            throw new Error("Expected the field `identity` to be a primitive type in the JSON string but got " + data['identity']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['message_types'])) {
            throw new Error("Expected the field `message_types` to be an array in the JSON data but got " + data['message_types']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this binding.
 * @member {String} account_sid
 */
ConversationsV1ServiceServiceBinding.prototype['account_sid'] = undefined;

/**
 * @member {module:model/ServiceBindingEnumBindingType} binding_type
 */
ConversationsV1ServiceServiceBinding.prototype['binding_type'] = undefined;

/**
 * The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Binding resource is associated with.
 * @member {String} chat_service_sid
 */
ConversationsV1ServiceServiceBinding.prototype['chat_service_sid'] = undefined;

/**
 * The SID of the [Credential](https://www.twilio.com/docs/conversations/api/credential-resource) for the binding. See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.
 * @member {String} credential_sid
 */
ConversationsV1ServiceServiceBinding.prototype['credential_sid'] = undefined;

/**
 * The date that this resource was created.
 * @member {Date} date_created
 */
ConversationsV1ServiceServiceBinding.prototype['date_created'] = undefined;

/**
 * The date that this resource was last updated.
 * @member {Date} date_updated
 */
ConversationsV1ServiceServiceBinding.prototype['date_updated'] = undefined;

/**
 * The unique endpoint identifier for the Binding. The format of this value depends on the `binding_type`.
 * @member {String} endpoint
 */
ConversationsV1ServiceServiceBinding.prototype['endpoint'] = undefined;

/**
 * The application-defined string that uniquely identifies the [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource) within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). See [access tokens](https://www.twilio.com/docs/conversations/create-tokens) for more info.
 * @member {String} identity
 */
ConversationsV1ServiceServiceBinding.prototype['identity'] = undefined;

/**
 * The [Conversation message types](https://www.twilio.com/docs/chat/push-notification-configuration#push-types) the binding is subscribed to.
 * @member {Array.<String>} message_types
 */
ConversationsV1ServiceServiceBinding.prototype['message_types'] = undefined;

/**
 * A 34 character string that uniquely identifies this resource.
 * @member {String} sid
 */
ConversationsV1ServiceServiceBinding.prototype['sid'] = undefined;

/**
 * An absolute API resource URL for this binding.
 * @member {String} url
 */
ConversationsV1ServiceServiceBinding.prototype['url'] = undefined;






export default ConversationsV1ServiceServiceBinding;

