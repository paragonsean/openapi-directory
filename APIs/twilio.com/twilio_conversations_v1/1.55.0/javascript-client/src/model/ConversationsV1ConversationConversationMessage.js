/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConversationsV1ConversationConversationMessage model module.
 * @module model/ConversationsV1ConversationConversationMessage
 * @version 1.55.0
 */
class ConversationsV1ConversationConversationMessage {
    /**
     * Constructs a new <code>ConversationsV1ConversationConversationMessage</code>.
     * @alias module:model/ConversationsV1ConversationConversationMessage
     */
    constructor() { 
        
        ConversationsV1ConversationConversationMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversationsV1ConversationConversationMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationsV1ConversationConversationMessage} obj Optional instance to populate.
     * @return {module:model/ConversationsV1ConversationConversationMessage} The populated <code>ConversationsV1ConversationConversationMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationsV1ConversationConversationMessage();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], 'String');
            }
            if (data.hasOwnProperty('author')) {
                obj['author'] = ApiClient.convertToType(data['author'], 'String');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('content_sid')) {
                obj['content_sid'] = ApiClient.convertToType(data['content_sid'], 'String');
            }
            if (data.hasOwnProperty('conversation_sid')) {
                obj['conversation_sid'] = ApiClient.convertToType(data['conversation_sid'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('delivery')) {
                obj['delivery'] = ApiClient.convertToType(data['delivery'], Object);
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('media')) {
                obj['media'] = ApiClient.convertToType(data['media'], [Object]);
            }
            if (data.hasOwnProperty('participant_sid')) {
                obj['participant_sid'] = ApiClient.convertToType(data['participant_sid'], 'String');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationsV1ConversationConversationMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationsV1ConversationConversationMessage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['attributes'] && !(typeof data['attributes'] === 'string' || data['attributes'] instanceof String)) {
            throw new Error("Expected the field `attributes` to be a primitive type in the JSON string but got " + data['attributes']);
        }
        // ensure the json data is a string
        if (data['author'] && !(typeof data['author'] === 'string' || data['author'] instanceof String)) {
            throw new Error("Expected the field `author` to be a primitive type in the JSON string but got " + data['author']);
        }
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['content_sid'] && !(typeof data['content_sid'] === 'string' || data['content_sid'] instanceof String)) {
            throw new Error("Expected the field `content_sid` to be a primitive type in the JSON string but got " + data['content_sid']);
        }
        // ensure the json data is a string
        if (data['conversation_sid'] && !(typeof data['conversation_sid'] === 'string' || data['conversation_sid'] instanceof String)) {
            throw new Error("Expected the field `conversation_sid` to be a primitive type in the JSON string but got " + data['conversation_sid']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['media'])) {
            throw new Error("Expected the field `media` to be an array in the JSON data but got " + data['media']);
        }
        // ensure the json data is a string
        if (data['participant_sid'] && !(typeof data['participant_sid'] === 'string' || data['participant_sid'] instanceof String)) {
            throw new Error("Expected the field `participant_sid` to be a primitive type in the JSON string but got " + data['participant_sid']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.
 * @member {String} account_sid
 */
ConversationsV1ConversationConversationMessage.prototype['account_sid'] = undefined;

/**
 * A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.
 * @member {String} attributes
 */
ConversationsV1ConversationConversationMessage.prototype['attributes'] = undefined;

/**
 * The channel specific identifier of the message's author. Defaults to `system`.
 * @member {String} author
 */
ConversationsV1ConversationConversationMessage.prototype['author'] = undefined;

/**
 * The content of the message, can be up to 1,600 characters long.
 * @member {String} body
 */
ConversationsV1ConversationConversationMessage.prototype['body'] = undefined;

/**
 * The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content) template.
 * @member {String} content_sid
 */
ConversationsV1ConversationConversationMessage.prototype['content_sid'] = undefined;

/**
 * The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.
 * @member {String} conversation_sid
 */
ConversationsV1ConversationConversationMessage.prototype['conversation_sid'] = undefined;

/**
 * The date that this resource was created.
 * @member {Date} date_created
 */
ConversationsV1ConversationConversationMessage.prototype['date_created'] = undefined;

/**
 * The date that this resource was last updated. `null` if the message has not been edited.
 * @member {Date} date_updated
 */
ConversationsV1ConversationConversationMessage.prototype['date_updated'] = undefined;

/**
 * An object that contains the summary of delivery statuses for the message to non-chat participants.
 * @member {Object} delivery
 */
ConversationsV1ConversationConversationMessage.prototype['delivery'] = undefined;

/**
 * The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.
 * @member {Number} index
 */
ConversationsV1ConversationConversationMessage.prototype['index'] = undefined;

/**
 * Contains an absolute API resource URL to access the delivery & read receipts of this message.
 * @member {Object} links
 */
ConversationsV1ConversationConversationMessage.prototype['links'] = undefined;

/**
 * An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.
 * @member {Array.<Object>} media
 */
ConversationsV1ConversationConversationMessage.prototype['media'] = undefined;

/**
 * The unique ID of messages's author participant. Null in case of `system` sent message.
 * @member {String} participant_sid
 */
ConversationsV1ConversationConversationMessage.prototype['participant_sid'] = undefined;

/**
 * A 34 character string that uniquely identifies this resource.
 * @member {String} sid
 */
ConversationsV1ConversationConversationMessage.prototype['sid'] = undefined;

/**
 * An absolute API resource API URL for this message.
 * @member {String} url
 */
ConversationsV1ConversationConversationMessage.prototype['url'] = undefined;






export default ConversationsV1ConversationConversationMessage;

