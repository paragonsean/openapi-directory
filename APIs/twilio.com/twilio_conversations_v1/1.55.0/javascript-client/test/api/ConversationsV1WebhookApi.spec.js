/**
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TwilioConversations);
  }
}(this, function(expect, TwilioConversations) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TwilioConversations.ConversationsV1WebhookApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConversationsV1WebhookApi', function() {
    describe('createConversationScopedWebhook', function() {
      it('should call createConversationScopedWebhook successfully', function(done) {
        //uncomment below and update the code to test createConversationScopedWebhook
        //instance.createConversationScopedWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createServiceConversationScopedWebhook', function() {
      it('should call createServiceConversationScopedWebhook successfully', function(done) {
        //uncomment below and update the code to test createServiceConversationScopedWebhook
        //instance.createServiceConversationScopedWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteConversationScopedWebhook', function() {
      it('should call deleteConversationScopedWebhook successfully', function(done) {
        //uncomment below and update the code to test deleteConversationScopedWebhook
        //instance.deleteConversationScopedWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteServiceConversationScopedWebhook', function() {
      it('should call deleteServiceConversationScopedWebhook successfully', function(done) {
        //uncomment below and update the code to test deleteServiceConversationScopedWebhook
        //instance.deleteServiceConversationScopedWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchConfigurationWebhook', function() {
      it('should call fetchConfigurationWebhook successfully', function(done) {
        //uncomment below and update the code to test fetchConfigurationWebhook
        //instance.fetchConfigurationWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchConversationScopedWebhook', function() {
      it('should call fetchConversationScopedWebhook successfully', function(done) {
        //uncomment below and update the code to test fetchConversationScopedWebhook
        //instance.fetchConversationScopedWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchServiceConversationScopedWebhook', function() {
      it('should call fetchServiceConversationScopedWebhook successfully', function(done) {
        //uncomment below and update the code to test fetchServiceConversationScopedWebhook
        //instance.fetchServiceConversationScopedWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fetchServiceWebhookConfiguration', function() {
      it('should call fetchServiceWebhookConfiguration successfully', function(done) {
        //uncomment below and update the code to test fetchServiceWebhookConfiguration
        //instance.fetchServiceWebhookConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listConversationScopedWebhook', function() {
      it('should call listConversationScopedWebhook successfully', function(done) {
        //uncomment below and update the code to test listConversationScopedWebhook
        //instance.listConversationScopedWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listServiceConversationScopedWebhook', function() {
      it('should call listServiceConversationScopedWebhook successfully', function(done) {
        //uncomment below and update the code to test listServiceConversationScopedWebhook
        //instance.listServiceConversationScopedWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateConfigurationWebhook', function() {
      it('should call updateConfigurationWebhook successfully', function(done) {
        //uncomment below and update the code to test updateConfigurationWebhook
        //instance.updateConfigurationWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateConversationScopedWebhook', function() {
      it('should call updateConversationScopedWebhook successfully', function(done) {
        //uncomment below and update the code to test updateConversationScopedWebhook
        //instance.updateConversationScopedWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateServiceConversationScopedWebhook', function() {
      it('should call updateServiceConversationScopedWebhook successfully', function(done) {
        //uncomment below and update the code to test updateServiceConversationScopedWebhook
        //instance.updateServiceConversationScopedWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateServiceWebhookConfiguration', function() {
      it('should call updateServiceWebhookConfiguration successfully', function(done) {
        //uncomment below and update the code to test updateServiceWebhookConfiguration
        //instance.updateServiceWebhookConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
