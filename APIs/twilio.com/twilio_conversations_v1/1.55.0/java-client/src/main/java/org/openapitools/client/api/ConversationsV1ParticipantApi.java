/*
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ConversationParticipantEnumWebhookEnabledType;
import org.openapitools.client.model.ConversationsV1ConversationConversationParticipant;
import org.openapitools.client.model.ConversationsV1ServiceServiceConversationServiceConversationParticipant;
import org.openapitools.client.model.ListConversationParticipantResponse;
import org.openapitools.client.model.ListServiceConversationParticipantResponse;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ServiceConversationParticipantEnumWebhookEnabledType;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ConversationsV1ParticipantApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ConversationsV1ParticipantApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ConversationsV1ParticipantApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createConversationParticipant
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \\\&quot;{}\\\&quot; will be returned. (optional)
     * @param dateCreated The date that this resource was created. (optional)
     * @param dateUpdated The date that this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters. (optional)
     * @param messagingBindingAddress The address of the participant&#39;s device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with proxy_address) is only null when the participant is interacting from an SDK endpoint (see the &#39;identity&#39; field). (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. Communication mask for the Conversation participant with Identity. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the &#39;identity&#39; field). (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createConversationParticipantCall(String conversationSid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, String messagingBindingAddress, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://conversations.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Conversations/{ConversationSid}/Participants"
            .replace("{" + "ConversationSid" + "}", localVarApiClient.escapeString(conversationSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (attributes != null) {
            localVarFormParams.put("Attributes", attributes);
        }

        if (dateCreated != null) {
            localVarFormParams.put("DateCreated", dateCreated);
        }

        if (dateUpdated != null) {
            localVarFormParams.put("DateUpdated", dateUpdated);
        }

        if (identity != null) {
            localVarFormParams.put("Identity", identity);
        }

        if (messagingBindingAddress != null) {
            localVarFormParams.put("MessagingBinding.Address", messagingBindingAddress);
        }

        if (messagingBindingProjectedAddress != null) {
            localVarFormParams.put("MessagingBinding.ProjectedAddress", messagingBindingProjectedAddress);
        }

        if (messagingBindingProxyAddress != null) {
            localVarFormParams.put("MessagingBinding.ProxyAddress", messagingBindingProxyAddress);
        }

        if (roleSid != null) {
            localVarFormParams.put("RoleSid", roleSid);
        }

        if (xTwilioWebhookEnabled != null) {
            localVarHeaderParams.put("X-Twilio-Webhook-Enabled", localVarApiClient.parameterToString(xTwilioWebhookEnabled));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createConversationParticipantValidateBeforeCall(String conversationSid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, String messagingBindingAddress, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'conversationSid' is set
        if (conversationSid == null) {
            throw new ApiException("Missing the required parameter 'conversationSid' when calling createConversationParticipant(Async)");
        }

        return createConversationParticipantCall(conversationSid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, messagingBindingAddress, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid, _callback);

    }

    /**
     * 
     * Add a new participant to the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \\\&quot;{}\\\&quot; will be returned. (optional)
     * @param dateCreated The date that this resource was created. (optional)
     * @param dateUpdated The date that this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters. (optional)
     * @param messagingBindingAddress The address of the participant&#39;s device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with proxy_address) is only null when the participant is interacting from an SDK endpoint (see the &#39;identity&#39; field). (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. Communication mask for the Conversation participant with Identity. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the &#39;identity&#39; field). (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @return ConversationsV1ConversationConversationParticipant
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ConversationsV1ConversationConversationParticipant createConversationParticipant(String conversationSid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, String messagingBindingAddress, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid) throws ApiException {
        ApiResponse<ConversationsV1ConversationConversationParticipant> localVarResp = createConversationParticipantWithHttpInfo(conversationSid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, messagingBindingAddress, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid);
        return localVarResp.getData();
    }

    /**
     * 
     * Add a new participant to the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \\\&quot;{}\\\&quot; will be returned. (optional)
     * @param dateCreated The date that this resource was created. (optional)
     * @param dateUpdated The date that this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters. (optional)
     * @param messagingBindingAddress The address of the participant&#39;s device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with proxy_address) is only null when the participant is interacting from an SDK endpoint (see the &#39;identity&#39; field). (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. Communication mask for the Conversation participant with Identity. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the &#39;identity&#39; field). (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @return ApiResponse&lt;ConversationsV1ConversationConversationParticipant&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ConversationsV1ConversationConversationParticipant> createConversationParticipantWithHttpInfo(String conversationSid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, String messagingBindingAddress, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid) throws ApiException {
        okhttp3.Call localVarCall = createConversationParticipantValidateBeforeCall(conversationSid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, messagingBindingAddress, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid, null);
        Type localVarReturnType = new TypeToken<ConversationsV1ConversationConversationParticipant>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Add a new participant to the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \\\&quot;{}\\\&quot; will be returned. (optional)
     * @param dateCreated The date that this resource was created. (optional)
     * @param dateUpdated The date that this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters. (optional)
     * @param messagingBindingAddress The address of the participant&#39;s device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with proxy_address) is only null when the participant is interacting from an SDK endpoint (see the &#39;identity&#39; field). (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. Communication mask for the Conversation participant with Identity. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the &#39;identity&#39; field). (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createConversationParticipantAsync(String conversationSid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, String messagingBindingAddress, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid, final ApiCallback<ConversationsV1ConversationConversationParticipant> _callback) throws ApiException {

        okhttp3.Call localVarCall = createConversationParticipantValidateBeforeCall(conversationSid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, messagingBindingAddress, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid, _callback);
        Type localVarReturnType = new TypeToken<ConversationsV1ConversationConversationParticipant>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for createServiceConversationParticipant
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set &#x60;{}&#x60; will be returned. (optional)
     * @param dateCreated The date on which this resource was created. (optional)
     * @param dateUpdated The date on which this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters. (optional)
     * @param messagingBindingAddress The address of the participant&#39;s device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with &#x60;proxy_address&#x60;) is only null when the participant is interacting from an SDK endpoint (see the &#x60;identity&#x60; field). (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the &#x60;identity&#x60; field). (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createServiceConversationParticipantCall(String chatServiceSid, String conversationSid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, String messagingBindingAddress, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://conversations.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants"
            .replace("{" + "ChatServiceSid" + "}", localVarApiClient.escapeString(chatServiceSid.toString()))
            .replace("{" + "ConversationSid" + "}", localVarApiClient.escapeString(conversationSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (attributes != null) {
            localVarFormParams.put("Attributes", attributes);
        }

        if (dateCreated != null) {
            localVarFormParams.put("DateCreated", dateCreated);
        }

        if (dateUpdated != null) {
            localVarFormParams.put("DateUpdated", dateUpdated);
        }

        if (identity != null) {
            localVarFormParams.put("Identity", identity);
        }

        if (messagingBindingAddress != null) {
            localVarFormParams.put("MessagingBinding.Address", messagingBindingAddress);
        }

        if (messagingBindingProjectedAddress != null) {
            localVarFormParams.put("MessagingBinding.ProjectedAddress", messagingBindingProjectedAddress);
        }

        if (messagingBindingProxyAddress != null) {
            localVarFormParams.put("MessagingBinding.ProxyAddress", messagingBindingProxyAddress);
        }

        if (roleSid != null) {
            localVarFormParams.put("RoleSid", roleSid);
        }

        if (xTwilioWebhookEnabled != null) {
            localVarHeaderParams.put("X-Twilio-Webhook-Enabled", localVarApiClient.parameterToString(xTwilioWebhookEnabled));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createServiceConversationParticipantValidateBeforeCall(String chatServiceSid, String conversationSid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, String messagingBindingAddress, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatServiceSid' is set
        if (chatServiceSid == null) {
            throw new ApiException("Missing the required parameter 'chatServiceSid' when calling createServiceConversationParticipant(Async)");
        }

        // verify the required parameter 'conversationSid' is set
        if (conversationSid == null) {
            throw new ApiException("Missing the required parameter 'conversationSid' when calling createServiceConversationParticipant(Async)");
        }

        return createServiceConversationParticipantCall(chatServiceSid, conversationSid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, messagingBindingAddress, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid, _callback);

    }

    /**
     * 
     * Add a new participant to the conversation in a specific service
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set &#x60;{}&#x60; will be returned. (optional)
     * @param dateCreated The date on which this resource was created. (optional)
     * @param dateUpdated The date on which this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters. (optional)
     * @param messagingBindingAddress The address of the participant&#39;s device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with &#x60;proxy_address&#x60;) is only null when the participant is interacting from an SDK endpoint (see the &#x60;identity&#x60; field). (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the &#x60;identity&#x60; field). (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @return ConversationsV1ServiceServiceConversationServiceConversationParticipant
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ConversationsV1ServiceServiceConversationServiceConversationParticipant createServiceConversationParticipant(String chatServiceSid, String conversationSid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, String messagingBindingAddress, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid) throws ApiException {
        ApiResponse<ConversationsV1ServiceServiceConversationServiceConversationParticipant> localVarResp = createServiceConversationParticipantWithHttpInfo(chatServiceSid, conversationSid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, messagingBindingAddress, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid);
        return localVarResp.getData();
    }

    /**
     * 
     * Add a new participant to the conversation in a specific service
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set &#x60;{}&#x60; will be returned. (optional)
     * @param dateCreated The date on which this resource was created. (optional)
     * @param dateUpdated The date on which this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters. (optional)
     * @param messagingBindingAddress The address of the participant&#39;s device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with &#x60;proxy_address&#x60;) is only null when the participant is interacting from an SDK endpoint (see the &#x60;identity&#x60; field). (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the &#x60;identity&#x60; field). (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @return ApiResponse&lt;ConversationsV1ServiceServiceConversationServiceConversationParticipant&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ConversationsV1ServiceServiceConversationServiceConversationParticipant> createServiceConversationParticipantWithHttpInfo(String chatServiceSid, String conversationSid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, String messagingBindingAddress, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid) throws ApiException {
        okhttp3.Call localVarCall = createServiceConversationParticipantValidateBeforeCall(chatServiceSid, conversationSid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, messagingBindingAddress, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid, null);
        Type localVarReturnType = new TypeToken<ConversationsV1ServiceServiceConversationServiceConversationParticipant>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Add a new participant to the conversation in a specific service
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set &#x60;{}&#x60; will be returned. (optional)
     * @param dateCreated The date on which this resource was created. (optional)
     * @param dateUpdated The date on which this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters. (optional)
     * @param messagingBindingAddress The address of the participant&#39;s device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with &#x60;proxy_address&#x60;) is only null when the participant is interacting from an SDK endpoint (see the &#x60;identity&#x60; field). (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the &#x60;identity&#x60; field). (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> Created </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createServiceConversationParticipantAsync(String chatServiceSid, String conversationSid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, String messagingBindingAddress, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid, final ApiCallback<ConversationsV1ServiceServiceConversationServiceConversationParticipant> _callback) throws ApiException {

        okhttp3.Call localVarCall = createServiceConversationParticipantValidateBeforeCall(chatServiceSid, conversationSid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, messagingBindingAddress, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid, _callback);
        Type localVarReturnType = new TypeToken<ConversationsV1ServiceServiceConversationServiceConversationParticipant>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteConversationParticipant
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteConversationParticipantCall(String conversationSid, String sid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://conversations.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Conversations/{ConversationSid}/Participants/{Sid}"
            .replace("{" + "ConversationSid" + "}", localVarApiClient.escapeString(conversationSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xTwilioWebhookEnabled != null) {
            localVarHeaderParams.put("X-Twilio-Webhook-Enabled", localVarApiClient.parameterToString(xTwilioWebhookEnabled));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteConversationParticipantValidateBeforeCall(String conversationSid, String sid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'conversationSid' is set
        if (conversationSid == null) {
            throw new ApiException("Missing the required parameter 'conversationSid' when calling deleteConversationParticipant(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling deleteConversationParticipant(Async)");
        }

        return deleteConversationParticipantCall(conversationSid, sid, xTwilioWebhookEnabled, _callback);

    }

    /**
     * 
     * Remove a participant from the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public void deleteConversationParticipant(String conversationSid, String sid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled) throws ApiException {
        deleteConversationParticipantWithHttpInfo(conversationSid, sid, xTwilioWebhookEnabled);
    }

    /**
     * 
     * Remove a participant from the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> deleteConversationParticipantWithHttpInfo(String conversationSid, String sid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled) throws ApiException {
        okhttp3.Call localVarCall = deleteConversationParticipantValidateBeforeCall(conversationSid, sid, xTwilioWebhookEnabled, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Remove a participant from the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteConversationParticipantAsync(String conversationSid, String sid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteConversationParticipantValidateBeforeCall(conversationSid, sid, xTwilioWebhookEnabled, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteServiceConversationParticipant
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteServiceConversationParticipantCall(String chatServiceSid, String conversationSid, String sid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://conversations.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants/{Sid}"
            .replace("{" + "ChatServiceSid" + "}", localVarApiClient.escapeString(chatServiceSid.toString()))
            .replace("{" + "ConversationSid" + "}", localVarApiClient.escapeString(conversationSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (xTwilioWebhookEnabled != null) {
            localVarHeaderParams.put("X-Twilio-Webhook-Enabled", localVarApiClient.parameterToString(xTwilioWebhookEnabled));
        }

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteServiceConversationParticipantValidateBeforeCall(String chatServiceSid, String conversationSid, String sid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatServiceSid' is set
        if (chatServiceSid == null) {
            throw new ApiException("Missing the required parameter 'chatServiceSid' when calling deleteServiceConversationParticipant(Async)");
        }

        // verify the required parameter 'conversationSid' is set
        if (conversationSid == null) {
            throw new ApiException("Missing the required parameter 'conversationSid' when calling deleteServiceConversationParticipant(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling deleteServiceConversationParticipant(Async)");
        }

        return deleteServiceConversationParticipantCall(chatServiceSid, conversationSid, sid, xTwilioWebhookEnabled, _callback);

    }

    /**
     * 
     * Remove a participant from the conversation
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public void deleteServiceConversationParticipant(String chatServiceSid, String conversationSid, String sid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled) throws ApiException {
        deleteServiceConversationParticipantWithHttpInfo(chatServiceSid, conversationSid, sid, xTwilioWebhookEnabled);
    }

    /**
     * 
     * Remove a participant from the conversation
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> deleteServiceConversationParticipantWithHttpInfo(String chatServiceSid, String conversationSid, String sid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled) throws ApiException {
        okhttp3.Call localVarCall = deleteServiceConversationParticipantValidateBeforeCall(chatServiceSid, conversationSid, sid, xTwilioWebhookEnabled, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Remove a participant from the conversation
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> The resource was deleted successfully. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteServiceConversationParticipantAsync(String chatServiceSid, String conversationSid, String sid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteServiceConversationParticipantValidateBeforeCall(chatServiceSid, conversationSid, sid, xTwilioWebhookEnabled, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchConversationParticipant
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. Alternatively, you can pass a Participant&#39;s &#x60;identity&#x60; rather than the SID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchConversationParticipantCall(String conversationSid, String sid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://conversations.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Conversations/{ConversationSid}/Participants/{Sid}"
            .replace("{" + "ConversationSid" + "}", localVarApiClient.escapeString(conversationSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchConversationParticipantValidateBeforeCall(String conversationSid, String sid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'conversationSid' is set
        if (conversationSid == null) {
            throw new ApiException("Missing the required parameter 'conversationSid' when calling fetchConversationParticipant(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling fetchConversationParticipant(Async)");
        }

        return fetchConversationParticipantCall(conversationSid, sid, _callback);

    }

    /**
     * 
     * Fetch a participant of the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. Alternatively, you can pass a Participant&#39;s &#x60;identity&#x60; rather than the SID. (required)
     * @return ConversationsV1ConversationConversationParticipant
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ConversationsV1ConversationConversationParticipant fetchConversationParticipant(String conversationSid, String sid) throws ApiException {
        ApiResponse<ConversationsV1ConversationConversationParticipant> localVarResp = fetchConversationParticipantWithHttpInfo(conversationSid, sid);
        return localVarResp.getData();
    }

    /**
     * 
     * Fetch a participant of the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. Alternatively, you can pass a Participant&#39;s &#x60;identity&#x60; rather than the SID. (required)
     * @return ApiResponse&lt;ConversationsV1ConversationConversationParticipant&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ConversationsV1ConversationConversationParticipant> fetchConversationParticipantWithHttpInfo(String conversationSid, String sid) throws ApiException {
        okhttp3.Call localVarCall = fetchConversationParticipantValidateBeforeCall(conversationSid, sid, null);
        Type localVarReturnType = new TypeToken<ConversationsV1ConversationConversationParticipant>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Fetch a participant of the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. Alternatively, you can pass a Participant&#39;s &#x60;identity&#x60; rather than the SID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchConversationParticipantAsync(String conversationSid, String sid, final ApiCallback<ConversationsV1ConversationConversationParticipant> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchConversationParticipantValidateBeforeCall(conversationSid, sid, _callback);
        Type localVarReturnType = new TypeToken<ConversationsV1ConversationConversationParticipant>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for fetchServiceConversationParticipant
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. Alternatively, you can pass a Participant&#39;s &#x60;identity&#x60; rather than the SID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchServiceConversationParticipantCall(String chatServiceSid, String conversationSid, String sid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://conversations.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants/{Sid}"
            .replace("{" + "ChatServiceSid" + "}", localVarApiClient.escapeString(chatServiceSid.toString()))
            .replace("{" + "ConversationSid" + "}", localVarApiClient.escapeString(conversationSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fetchServiceConversationParticipantValidateBeforeCall(String chatServiceSid, String conversationSid, String sid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatServiceSid' is set
        if (chatServiceSid == null) {
            throw new ApiException("Missing the required parameter 'chatServiceSid' when calling fetchServiceConversationParticipant(Async)");
        }

        // verify the required parameter 'conversationSid' is set
        if (conversationSid == null) {
            throw new ApiException("Missing the required parameter 'conversationSid' when calling fetchServiceConversationParticipant(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling fetchServiceConversationParticipant(Async)");
        }

        return fetchServiceConversationParticipantCall(chatServiceSid, conversationSid, sid, _callback);

    }

    /**
     * 
     * Fetch a participant of the conversation
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. Alternatively, you can pass a Participant&#39;s &#x60;identity&#x60; rather than the SID. (required)
     * @return ConversationsV1ServiceServiceConversationServiceConversationParticipant
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ConversationsV1ServiceServiceConversationServiceConversationParticipant fetchServiceConversationParticipant(String chatServiceSid, String conversationSid, String sid) throws ApiException {
        ApiResponse<ConversationsV1ServiceServiceConversationServiceConversationParticipant> localVarResp = fetchServiceConversationParticipantWithHttpInfo(chatServiceSid, conversationSid, sid);
        return localVarResp.getData();
    }

    /**
     * 
     * Fetch a participant of the conversation
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. Alternatively, you can pass a Participant&#39;s &#x60;identity&#x60; rather than the SID. (required)
     * @return ApiResponse&lt;ConversationsV1ServiceServiceConversationServiceConversationParticipant&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ConversationsV1ServiceServiceConversationServiceConversationParticipant> fetchServiceConversationParticipantWithHttpInfo(String chatServiceSid, String conversationSid, String sid) throws ApiException {
        okhttp3.Call localVarCall = fetchServiceConversationParticipantValidateBeforeCall(chatServiceSid, conversationSid, sid, null);
        Type localVarReturnType = new TypeToken<ConversationsV1ServiceServiceConversationServiceConversationParticipant>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Fetch a participant of the conversation
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. Alternatively, you can pass a Participant&#39;s &#x60;identity&#x60; rather than the SID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fetchServiceConversationParticipantAsync(String chatServiceSid, String conversationSid, String sid, final ApiCallback<ConversationsV1ServiceServiceConversationServiceConversationParticipant> _callback) throws ApiException {

        okhttp3.Call localVarCall = fetchServiceConversationParticipantValidateBeforeCall(chatServiceSid, conversationSid, sid, _callback);
        Type localVarReturnType = new TypeToken<ConversationsV1ServiceServiceConversationServiceConversationParticipant>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listConversationParticipant
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants. (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listConversationParticipantCall(String conversationSid, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://conversations.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Conversations/{ConversationSid}/Participants"
            .replace("{" + "ConversationSid" + "}", localVarApiClient.escapeString(conversationSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageSize", pageSize));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Page", page));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listConversationParticipantValidateBeforeCall(String conversationSid, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'conversationSid' is set
        if (conversationSid == null) {
            throw new ApiException("Missing the required parameter 'conversationSid' when calling listConversationParticipant(Async)");
        }

        return listConversationParticipantCall(conversationSid, pageSize, page, pageToken, _callback);

    }

    /**
     * 
     * Retrieve a list of all participants of the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants. (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ListConversationParticipantResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ListConversationParticipantResponse listConversationParticipant(String conversationSid, Integer pageSize, Integer page, String pageToken) throws ApiException {
        ApiResponse<ListConversationParticipantResponse> localVarResp = listConversationParticipantWithHttpInfo(conversationSid, pageSize, page, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve a list of all participants of the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants. (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ApiResponse&lt;ListConversationParticipantResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListConversationParticipantResponse> listConversationParticipantWithHttpInfo(String conversationSid, Integer pageSize, Integer page, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = listConversationParticipantValidateBeforeCall(conversationSid, pageSize, page, pageToken, null);
        Type localVarReturnType = new TypeToken<ListConversationParticipantResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve a list of all participants of the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants. (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listConversationParticipantAsync(String conversationSid, Integer pageSize, Integer page, String pageToken, final ApiCallback<ListConversationParticipantResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listConversationParticipantValidateBeforeCall(conversationSid, pageSize, page, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ListConversationParticipantResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listServiceConversationParticipant
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants. (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listServiceConversationParticipantCall(String chatServiceSid, String conversationSid, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://conversations.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants"
            .replace("{" + "ChatServiceSid" + "}", localVarApiClient.escapeString(chatServiceSid.toString()))
            .replace("{" + "ConversationSid" + "}", localVarApiClient.escapeString(conversationSid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageSize", pageSize));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Page", page));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listServiceConversationParticipantValidateBeforeCall(String chatServiceSid, String conversationSid, Integer pageSize, Integer page, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatServiceSid' is set
        if (chatServiceSid == null) {
            throw new ApiException("Missing the required parameter 'chatServiceSid' when calling listServiceConversationParticipant(Async)");
        }

        // verify the required parameter 'conversationSid' is set
        if (conversationSid == null) {
            throw new ApiException("Missing the required parameter 'conversationSid' when calling listServiceConversationParticipant(Async)");
        }

        return listServiceConversationParticipantCall(chatServiceSid, conversationSid, pageSize, page, pageToken, _callback);

    }

    /**
     * 
     * Retrieve a list of all participants of the conversation
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants. (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ListServiceConversationParticipantResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ListServiceConversationParticipantResponse listServiceConversationParticipant(String chatServiceSid, String conversationSid, Integer pageSize, Integer page, String pageToken) throws ApiException {
        ApiResponse<ListServiceConversationParticipantResponse> localVarResp = listServiceConversationParticipantWithHttpInfo(chatServiceSid, conversationSid, pageSize, page, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieve a list of all participants of the conversation
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants. (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @return ApiResponse&lt;ListServiceConversationParticipantResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListServiceConversationParticipantResponse> listServiceConversationParticipantWithHttpInfo(String chatServiceSid, String conversationSid, Integer pageSize, Integer page, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = listServiceConversationParticipantValidateBeforeCall(chatServiceSid, conversationSid, pageSize, page, pageToken, null);
        Type localVarReturnType = new TypeToken<ListServiceConversationParticipantResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieve a list of all participants of the conversation
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for participants. (required)
     * @param pageSize How many resources to return in each list page. The default is 50, and the maximum is 1000. (optional)
     * @param page The page index. This value is simply for client state. (optional)
     * @param pageToken The page token. This is provided by the API. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listServiceConversationParticipantAsync(String chatServiceSid, String conversationSid, Integer pageSize, Integer page, String pageToken, final ApiCallback<ListServiceConversationParticipantResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listServiceConversationParticipantValidateBeforeCall(chatServiceSid, conversationSid, pageSize, page, pageToken, _callback);
        Type localVarReturnType = new TypeToken<ListServiceConversationParticipantResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateConversationParticipant
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \\\&quot;{}\\\&quot; will be returned. (optional)
     * @param dateCreated The date that this resource was created. (optional)
     * @param dateUpdated The date that this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters. (optional)
     * @param lastReadMessageIndex Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param lastReadTimestamp Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. &#39;null&#39; value will remove it. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number that the participant is in contact with. &#39;null&#39; value will remove it. (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateConversationParticipantCall(String conversationSid, String sid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, Integer lastReadMessageIndex, String lastReadTimestamp, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://conversations.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Conversations/{ConversationSid}/Participants/{Sid}"
            .replace("{" + "ConversationSid" + "}", localVarApiClient.escapeString(conversationSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (attributes != null) {
            localVarFormParams.put("Attributes", attributes);
        }

        if (dateCreated != null) {
            localVarFormParams.put("DateCreated", dateCreated);
        }

        if (dateUpdated != null) {
            localVarFormParams.put("DateUpdated", dateUpdated);
        }

        if (identity != null) {
            localVarFormParams.put("Identity", identity);
        }

        if (lastReadMessageIndex != null) {
            localVarFormParams.put("LastReadMessageIndex", lastReadMessageIndex);
        }

        if (lastReadTimestamp != null) {
            localVarFormParams.put("LastReadTimestamp", lastReadTimestamp);
        }

        if (messagingBindingProjectedAddress != null) {
            localVarFormParams.put("MessagingBinding.ProjectedAddress", messagingBindingProjectedAddress);
        }

        if (messagingBindingProxyAddress != null) {
            localVarFormParams.put("MessagingBinding.ProxyAddress", messagingBindingProxyAddress);
        }

        if (roleSid != null) {
            localVarFormParams.put("RoleSid", roleSid);
        }

        if (xTwilioWebhookEnabled != null) {
            localVarHeaderParams.put("X-Twilio-Webhook-Enabled", localVarApiClient.parameterToString(xTwilioWebhookEnabled));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateConversationParticipantValidateBeforeCall(String conversationSid, String sid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, Integer lastReadMessageIndex, String lastReadTimestamp, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'conversationSid' is set
        if (conversationSid == null) {
            throw new ApiException("Missing the required parameter 'conversationSid' when calling updateConversationParticipant(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling updateConversationParticipant(Async)");
        }

        return updateConversationParticipantCall(conversationSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, lastReadMessageIndex, lastReadTimestamp, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid, _callback);

    }

    /**
     * 
     * Update an existing participant in the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \\\&quot;{}\\\&quot; will be returned. (optional)
     * @param dateCreated The date that this resource was created. (optional)
     * @param dateUpdated The date that this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters. (optional)
     * @param lastReadMessageIndex Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param lastReadTimestamp Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. &#39;null&#39; value will remove it. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number that the participant is in contact with. &#39;null&#39; value will remove it. (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @return ConversationsV1ConversationConversationParticipant
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ConversationsV1ConversationConversationParticipant updateConversationParticipant(String conversationSid, String sid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, Integer lastReadMessageIndex, String lastReadTimestamp, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid) throws ApiException {
        ApiResponse<ConversationsV1ConversationConversationParticipant> localVarResp = updateConversationParticipantWithHttpInfo(conversationSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, lastReadMessageIndex, lastReadTimestamp, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid);
        return localVarResp.getData();
    }

    /**
     * 
     * Update an existing participant in the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \\\&quot;{}\\\&quot; will be returned. (optional)
     * @param dateCreated The date that this resource was created. (optional)
     * @param dateUpdated The date that this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters. (optional)
     * @param lastReadMessageIndex Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param lastReadTimestamp Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. &#39;null&#39; value will remove it. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number that the participant is in contact with. &#39;null&#39; value will remove it. (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @return ApiResponse&lt;ConversationsV1ConversationConversationParticipant&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ConversationsV1ConversationConversationParticipant> updateConversationParticipantWithHttpInfo(String conversationSid, String sid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, Integer lastReadMessageIndex, String lastReadTimestamp, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid) throws ApiException {
        okhttp3.Call localVarCall = updateConversationParticipantValidateBeforeCall(conversationSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, lastReadMessageIndex, lastReadTimestamp, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid, null);
        Type localVarReturnType = new TypeToken<ConversationsV1ConversationConversationParticipant>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update an existing participant in the conversation
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \\\&quot;{}\\\&quot; will be returned. (optional)
     * @param dateCreated The date that this resource was created. (optional)
     * @param dateUpdated The date that this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters. (optional)
     * @param lastReadMessageIndex Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param lastReadTimestamp Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. &#39;null&#39; value will remove it. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number that the participant is in contact with. &#39;null&#39; value will remove it. (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateConversationParticipantAsync(String conversationSid, String sid, ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, Integer lastReadMessageIndex, String lastReadTimestamp, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid, final ApiCallback<ConversationsV1ConversationConversationParticipant> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateConversationParticipantValidateBeforeCall(conversationSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, lastReadMessageIndex, lastReadTimestamp, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid, _callback);
        Type localVarReturnType = new TypeToken<ConversationsV1ConversationConversationParticipant>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateServiceConversationParticipant
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set &#x60;{}&#x60; will be returned. (optional)
     * @param dateCreated The date on which this resource was created. (optional)
     * @param dateUpdated The date on which this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters. (optional)
     * @param lastReadMessageIndex Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param lastReadTimestamp Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. &#39;null&#39; value will remove it. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number that the participant is in contact with. &#39;null&#39; value will remove it. (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateServiceConversationParticipantCall(String chatServiceSid, String conversationSid, String sid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, Integer lastReadMessageIndex, String lastReadTimestamp, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] { "https://conversations.twilio.com" };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/Services/{ChatServiceSid}/Conversations/{ConversationSid}/Participants/{Sid}"
            .replace("{" + "ChatServiceSid" + "}", localVarApiClient.escapeString(chatServiceSid.toString()))
            .replace("{" + "ConversationSid" + "}", localVarApiClient.escapeString(conversationSid.toString()))
            .replace("{" + "Sid" + "}", localVarApiClient.escapeString(sid.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (attributes != null) {
            localVarFormParams.put("Attributes", attributes);
        }

        if (dateCreated != null) {
            localVarFormParams.put("DateCreated", dateCreated);
        }

        if (dateUpdated != null) {
            localVarFormParams.put("DateUpdated", dateUpdated);
        }

        if (identity != null) {
            localVarFormParams.put("Identity", identity);
        }

        if (lastReadMessageIndex != null) {
            localVarFormParams.put("LastReadMessageIndex", lastReadMessageIndex);
        }

        if (lastReadTimestamp != null) {
            localVarFormParams.put("LastReadTimestamp", lastReadTimestamp);
        }

        if (messagingBindingProjectedAddress != null) {
            localVarFormParams.put("MessagingBinding.ProjectedAddress", messagingBindingProjectedAddress);
        }

        if (messagingBindingProxyAddress != null) {
            localVarFormParams.put("MessagingBinding.ProxyAddress", messagingBindingProxyAddress);
        }

        if (roleSid != null) {
            localVarFormParams.put("RoleSid", roleSid);
        }

        if (xTwilioWebhookEnabled != null) {
            localVarHeaderParams.put("X-Twilio-Webhook-Enabled", localVarApiClient.parameterToString(xTwilioWebhookEnabled));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/x-www-form-urlencoded"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "accountSid_authToken" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateServiceConversationParticipantValidateBeforeCall(String chatServiceSid, String conversationSid, String sid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, Integer lastReadMessageIndex, String lastReadTimestamp, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'chatServiceSid' is set
        if (chatServiceSid == null) {
            throw new ApiException("Missing the required parameter 'chatServiceSid' when calling updateServiceConversationParticipant(Async)");
        }

        // verify the required parameter 'conversationSid' is set
        if (conversationSid == null) {
            throw new ApiException("Missing the required parameter 'conversationSid' when calling updateServiceConversationParticipant(Async)");
        }

        // verify the required parameter 'sid' is set
        if (sid == null) {
            throw new ApiException("Missing the required parameter 'sid' when calling updateServiceConversationParticipant(Async)");
        }

        return updateServiceConversationParticipantCall(chatServiceSid, conversationSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, lastReadMessageIndex, lastReadTimestamp, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid, _callback);

    }

    /**
     * 
     * Update an existing participant in the conversation
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set &#x60;{}&#x60; will be returned. (optional)
     * @param dateCreated The date on which this resource was created. (optional)
     * @param dateUpdated The date on which this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters. (optional)
     * @param lastReadMessageIndex Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param lastReadTimestamp Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. &#39;null&#39; value will remove it. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number that the participant is in contact with. &#39;null&#39; value will remove it. (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @return ConversationsV1ServiceServiceConversationServiceConversationParticipant
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ConversationsV1ServiceServiceConversationServiceConversationParticipant updateServiceConversationParticipant(String chatServiceSid, String conversationSid, String sid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, Integer lastReadMessageIndex, String lastReadTimestamp, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid) throws ApiException {
        ApiResponse<ConversationsV1ServiceServiceConversationServiceConversationParticipant> localVarResp = updateServiceConversationParticipantWithHttpInfo(chatServiceSid, conversationSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, lastReadMessageIndex, lastReadTimestamp, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid);
        return localVarResp.getData();
    }

    /**
     * 
     * Update an existing participant in the conversation
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set &#x60;{}&#x60; will be returned. (optional)
     * @param dateCreated The date on which this resource was created. (optional)
     * @param dateUpdated The date on which this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters. (optional)
     * @param lastReadMessageIndex Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param lastReadTimestamp Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. &#39;null&#39; value will remove it. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number that the participant is in contact with. &#39;null&#39; value will remove it. (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @return ApiResponse&lt;ConversationsV1ServiceServiceConversationServiceConversationParticipant&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ConversationsV1ServiceServiceConversationServiceConversationParticipant> updateServiceConversationParticipantWithHttpInfo(String chatServiceSid, String conversationSid, String sid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, Integer lastReadMessageIndex, String lastReadTimestamp, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid) throws ApiException {
        okhttp3.Call localVarCall = updateServiceConversationParticipantValidateBeforeCall(chatServiceSid, conversationSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, lastReadMessageIndex, lastReadTimestamp, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid, null);
        Type localVarReturnType = new TypeToken<ConversationsV1ServiceServiceConversationServiceConversationParticipant>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Update an existing participant in the conversation
     * @param chatServiceSid The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with. (required)
     * @param conversationSid The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant. (required)
     * @param sid A 34 character string that uniquely identifies this resource. (required)
     * @param xTwilioWebhookEnabled The X-Twilio-Webhook-Enabled HTTP request header (optional)
     * @param attributes An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set &#x60;{}&#x60; will be returned. (optional)
     * @param dateCreated The date on which this resource was created. (optional)
     * @param dateUpdated The date on which this resource was last updated. (optional)
     * @param identity A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the [Conversation SDK](https://www.twilio.com/docs/conversations/sdk-overview) to communicate. Limited to 256 characters. (optional)
     * @param lastReadMessageIndex Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param lastReadTimestamp Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant. (optional)
     * @param messagingBindingProjectedAddress The address of the Twilio phone number that is used in Group MMS. &#39;null&#39; value will remove it. (optional)
     * @param messagingBindingProxyAddress The address of the Twilio phone number that the participant is in contact with. &#39;null&#39; value will remove it. (optional)
     * @param roleSid The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateServiceConversationParticipantAsync(String chatServiceSid, String conversationSid, String sid, ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled, String attributes, OffsetDateTime dateCreated, OffsetDateTime dateUpdated, String identity, Integer lastReadMessageIndex, String lastReadTimestamp, String messagingBindingProjectedAddress, String messagingBindingProxyAddress, String roleSid, final ApiCallback<ConversationsV1ServiceServiceConversationServiceConversationParticipant> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateServiceConversationParticipantValidateBeforeCall(chatServiceSid, conversationSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, lastReadMessageIndex, lastReadTimestamp, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid, _callback);
        Type localVarReturnType = new TypeToken<ConversationsV1ServiceServiceConversationServiceConversationParticipant>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
