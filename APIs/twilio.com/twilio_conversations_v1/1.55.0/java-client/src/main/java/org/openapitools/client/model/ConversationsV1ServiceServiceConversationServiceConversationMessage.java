/*
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ConversationsV1ServiceServiceConversationServiceConversationMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:18.448958-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ConversationsV1ServiceServiceConversationServiceConversationMessage {
  public static final String SERIALIZED_NAME_ACCOUNT_SID = "account_sid";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SID)
  private String accountSid;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private String attributes;

  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_CHAT_SERVICE_SID = "chat_service_sid";
  @SerializedName(SERIALIZED_NAME_CHAT_SERVICE_SID)
  private String chatServiceSid;

  public static final String SERIALIZED_NAME_CONTENT_SID = "content_sid";
  @SerializedName(SERIALIZED_NAME_CONTENT_SID)
  private String contentSid;

  public static final String SERIALIZED_NAME_CONVERSATION_SID = "conversation_sid";
  @SerializedName(SERIALIZED_NAME_CONVERSATION_SID)
  private String conversationSid;

  public static final String SERIALIZED_NAME_DATE_CREATED = "date_created";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DATE_UPDATED = "date_updated";
  @SerializedName(SERIALIZED_NAME_DATE_UPDATED)
  private OffsetDateTime dateUpdated;

  public static final String SERIALIZED_NAME_DELIVERY = "delivery";
  @SerializedName(SERIALIZED_NAME_DELIVERY)
  private Object delivery = null;

  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private Integer index;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_MEDIA = "media";
  @SerializedName(SERIALIZED_NAME_MEDIA)
  private List<Object> media;

  public static final String SERIALIZED_NAME_PARTICIPANT_SID = "participant_sid";
  @SerializedName(SERIALIZED_NAME_PARTICIPANT_SID)
  private String participantSid;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public ConversationsV1ServiceServiceConversationServiceConversationMessage() {
  }

  public ConversationsV1ServiceServiceConversationServiceConversationMessage accountSid(String accountSid) {
    this.accountSid = accountSid;
    return this;
  }

  /**
   * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.
   * @return accountSid
   */
  @javax.annotation.Nullable
  public String getAccountSid() {
    return accountSid;
  }

  public void setAccountSid(String accountSid) {
    this.accountSid = accountSid;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage attributes(String attributes) {
    this.attributes = attributes;
    return this;
  }

  /**
   * A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \&quot;{}\&quot; will be returned.
   * @return attributes
   */
  @javax.annotation.Nullable
  public String getAttributes() {
    return attributes;
  }

  public void setAttributes(String attributes) {
    this.attributes = attributes;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage author(String author) {
    this.author = author;
    return this;
  }

  /**
   * The channel specific identifier of the message&#39;s author. Defaults to &#x60;system&#x60;.
   * @return author
   */
  @javax.annotation.Nullable
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage body(String body) {
    this.body = body;
    return this;
  }

  /**
   * The content of the message, can be up to 1,600 characters long.
   * @return body
   */
  @javax.annotation.Nullable
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage chatServiceSid(String chatServiceSid) {
    this.chatServiceSid = chatServiceSid;
    return this;
  }

  /**
   * The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.
   * @return chatServiceSid
   */
  @javax.annotation.Nullable
  public String getChatServiceSid() {
    return chatServiceSid;
  }

  public void setChatServiceSid(String chatServiceSid) {
    this.chatServiceSid = chatServiceSid;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage contentSid(String contentSid) {
    this.contentSid = contentSid;
    return this;
  }

  /**
   * The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content) template.
   * @return contentSid
   */
  @javax.annotation.Nullable
  public String getContentSid() {
    return contentSid;
  }

  public void setContentSid(String contentSid) {
    this.contentSid = contentSid;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage conversationSid(String conversationSid) {
    this.conversationSid = conversationSid;
    return this;
  }

  /**
   * The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.
   * @return conversationSid
   */
  @javax.annotation.Nullable
  public String getConversationSid() {
    return conversationSid;
  }

  public void setConversationSid(String conversationSid) {
    this.conversationSid = conversationSid;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage dateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * The date that this resource was created.
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage dateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
    return this;
  }

  /**
   * The date that this resource was last updated. &#x60;null&#x60; if the message has not been edited.
   * @return dateUpdated
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }

  public void setDateUpdated(OffsetDateTime dateUpdated) {
    this.dateUpdated = dateUpdated;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage delivery(Object delivery) {
    this.delivery = delivery;
    return this;
  }

  /**
   * An object that contains the summary of delivery statuses for the message to non-chat participants.
   * @return delivery
   */
  @javax.annotation.Nullable
  public Object getDelivery() {
    return delivery;
  }

  public void setDelivery(Object delivery) {
    this.delivery = delivery;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage index(Integer index) {
    this.index = index;
    return this;
  }

  /**
   * The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).
   * @return index
   */
  @javax.annotation.Nullable
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * Contains an absolute API resource URL to access the delivery &amp; read receipts of this message.
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage media(List<Object> media) {
    this.media = media;
    return this;
  }

  public ConversationsV1ServiceServiceConversationServiceConversationMessage addMediaItem(Object mediaItem) {
    if (this.media == null) {
      this.media = new ArrayList<>();
    }
    this.media.add(mediaItem);
    return this;
  }

  /**
   * An array of objects that describe the Message&#39;s media, if the message contains media. Each object contains these fields: &#x60;content_type&#x60; with the MIME type of the media, &#x60;filename&#x60; with the name of the media, &#x60;sid&#x60; with the SID of the Media resource, and &#x60;size&#x60; with the media object&#39;s file size in bytes. If the Message has no media, this value is &#x60;null&#x60;.
   * @return media
   */
  @javax.annotation.Nullable
  public List<Object> getMedia() {
    return media;
  }

  public void setMedia(List<Object> media) {
    this.media = media;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage participantSid(String participantSid) {
    this.participantSid = participantSid;
    return this;
  }

  /**
   * The unique ID of messages&#39;s author participant. Null in case of &#x60;system&#x60; sent message.
   * @return participantSid
   */
  @javax.annotation.Nullable
  public String getParticipantSid() {
    return participantSid;
  }

  public void setParticipantSid(String participantSid) {
    this.participantSid = participantSid;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage sid(String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * A 34 character string that uniquely identifies this resource.
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(String sid) {
    this.sid = sid;
  }


  public ConversationsV1ServiceServiceConversationServiceConversationMessage url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * An absolute API resource URL for this message.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationsV1ServiceServiceConversationServiceConversationMessage conversationsV1ServiceServiceConversationServiceConversationMessage = (ConversationsV1ServiceServiceConversationServiceConversationMessage) o;
    return Objects.equals(this.accountSid, conversationsV1ServiceServiceConversationServiceConversationMessage.accountSid) &&
        Objects.equals(this.attributes, conversationsV1ServiceServiceConversationServiceConversationMessage.attributes) &&
        Objects.equals(this.author, conversationsV1ServiceServiceConversationServiceConversationMessage.author) &&
        Objects.equals(this.body, conversationsV1ServiceServiceConversationServiceConversationMessage.body) &&
        Objects.equals(this.chatServiceSid, conversationsV1ServiceServiceConversationServiceConversationMessage.chatServiceSid) &&
        Objects.equals(this.contentSid, conversationsV1ServiceServiceConversationServiceConversationMessage.contentSid) &&
        Objects.equals(this.conversationSid, conversationsV1ServiceServiceConversationServiceConversationMessage.conversationSid) &&
        Objects.equals(this.dateCreated, conversationsV1ServiceServiceConversationServiceConversationMessage.dateCreated) &&
        Objects.equals(this.dateUpdated, conversationsV1ServiceServiceConversationServiceConversationMessage.dateUpdated) &&
        Objects.equals(this.delivery, conversationsV1ServiceServiceConversationServiceConversationMessage.delivery) &&
        Objects.equals(this.index, conversationsV1ServiceServiceConversationServiceConversationMessage.index) &&
        Objects.equals(this.links, conversationsV1ServiceServiceConversationServiceConversationMessage.links) &&
        Objects.equals(this.media, conversationsV1ServiceServiceConversationServiceConversationMessage.media) &&
        Objects.equals(this.participantSid, conversationsV1ServiceServiceConversationServiceConversationMessage.participantSid) &&
        Objects.equals(this.sid, conversationsV1ServiceServiceConversationServiceConversationMessage.sid) &&
        Objects.equals(this.url, conversationsV1ServiceServiceConversationServiceConversationMessage.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSid, attributes, author, body, chatServiceSid, contentSid, conversationSid, dateCreated, dateUpdated, delivery, index, links, media, participantSid, sid, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationsV1ServiceServiceConversationServiceConversationMessage {\n");
    sb.append("    accountSid: ").append(toIndentedString(accountSid)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    chatServiceSid: ").append(toIndentedString(chatServiceSid)).append("\n");
    sb.append("    contentSid: ").append(toIndentedString(contentSid)).append("\n");
    sb.append("    conversationSid: ").append(toIndentedString(conversationSid)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("    delivery: ").append(toIndentedString(delivery)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    participantSid: ").append(toIndentedString(participantSid)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_sid");
    openapiFields.add("attributes");
    openapiFields.add("author");
    openapiFields.add("body");
    openapiFields.add("chat_service_sid");
    openapiFields.add("content_sid");
    openapiFields.add("conversation_sid");
    openapiFields.add("date_created");
    openapiFields.add("date_updated");
    openapiFields.add("delivery");
    openapiFields.add("index");
    openapiFields.add("links");
    openapiFields.add("media");
    openapiFields.add("participant_sid");
    openapiFields.add("sid");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ConversationsV1ServiceServiceConversationServiceConversationMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ConversationsV1ServiceServiceConversationServiceConversationMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConversationsV1ServiceServiceConversationServiceConversationMessage is not found in the empty JSON string", ConversationsV1ServiceServiceConversationServiceConversationMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ConversationsV1ServiceServiceConversationServiceConversationMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConversationsV1ServiceServiceConversationServiceConversationMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_sid") != null && !jsonObj.get("account_sid").isJsonNull()) && !jsonObj.get("account_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_sid").toString()));
      }
      if ((jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) && !jsonObj.get("attributes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
      }
      if ((jsonObj.get("author") != null && !jsonObj.get("author").isJsonNull()) && !jsonObj.get("author").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `author` to be a primitive type in the JSON string but got `%s`", jsonObj.get("author").toString()));
      }
      if ((jsonObj.get("body") != null && !jsonObj.get("body").isJsonNull()) && !jsonObj.get("body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body").toString()));
      }
      if ((jsonObj.get("chat_service_sid") != null && !jsonObj.get("chat_service_sid").isJsonNull()) && !jsonObj.get("chat_service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chat_service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chat_service_sid").toString()));
      }
      if ((jsonObj.get("content_sid") != null && !jsonObj.get("content_sid").isJsonNull()) && !jsonObj.get("content_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content_sid").toString()));
      }
      if ((jsonObj.get("conversation_sid") != null && !jsonObj.get("conversation_sid").isJsonNull()) && !jsonObj.get("conversation_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `conversation_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("conversation_sid").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("media") != null && !jsonObj.get("media").isJsonNull() && !jsonObj.get("media").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `media` to be an array in the JSON string but got `%s`", jsonObj.get("media").toString()));
      }
      if ((jsonObj.get("participant_sid") != null && !jsonObj.get("participant_sid").isJsonNull()) && !jsonObj.get("participant_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `participant_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("participant_sid").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConversationsV1ServiceServiceConversationServiceConversationMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConversationsV1ServiceServiceConversationServiceConversationMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConversationsV1ServiceServiceConversationServiceConversationMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConversationsV1ServiceServiceConversationServiceConversationMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<ConversationsV1ServiceServiceConversationServiceConversationMessage>() {
           @Override
           public void write(JsonWriter out, ConversationsV1ServiceServiceConversationServiceConversationMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConversationsV1ServiceServiceConversationServiceConversationMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ConversationsV1ServiceServiceConversationServiceConversationMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ConversationsV1ServiceServiceConversationServiceConversationMessage
   * @throws IOException if the JSON string is invalid with respect to ConversationsV1ServiceServiceConversationServiceConversationMessage
   */
  public static ConversationsV1ServiceServiceConversationServiceConversationMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConversationsV1ServiceServiceConversationServiceConversationMessage.class);
  }

  /**
   * Convert an instance of ConversationsV1ServiceServiceConversationServiceConversationMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

