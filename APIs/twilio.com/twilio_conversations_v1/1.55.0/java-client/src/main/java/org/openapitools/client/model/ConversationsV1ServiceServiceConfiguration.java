/*
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ConversationsV1ServiceServiceConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:26:18.448958-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ConversationsV1ServiceServiceConfiguration {
  public static final String SERIALIZED_NAME_CHAT_SERVICE_SID = "chat_service_sid";
  @SerializedName(SERIALIZED_NAME_CHAT_SERVICE_SID)
  private String chatServiceSid;

  public static final String SERIALIZED_NAME_DEFAULT_CHAT_SERVICE_ROLE_SID = "default_chat_service_role_sid";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CHAT_SERVICE_ROLE_SID)
  private String defaultChatServiceRoleSid;

  public static final String SERIALIZED_NAME_DEFAULT_CONVERSATION_CREATOR_ROLE_SID = "default_conversation_creator_role_sid";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CONVERSATION_CREATOR_ROLE_SID)
  private String defaultConversationCreatorRoleSid;

  public static final String SERIALIZED_NAME_DEFAULT_CONVERSATION_ROLE_SID = "default_conversation_role_sid";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CONVERSATION_ROLE_SID)
  private String defaultConversationRoleSid;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private Object links;

  public static final String SERIALIZED_NAME_REACHABILITY_ENABLED = "reachability_enabled";
  @SerializedName(SERIALIZED_NAME_REACHABILITY_ENABLED)
  private Boolean reachabilityEnabled;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public ConversationsV1ServiceServiceConfiguration() {
  }

  public ConversationsV1ServiceServiceConfiguration chatServiceSid(String chatServiceSid) {
    this.chatServiceSid = chatServiceSid;
    return this;
  }

  /**
   * The unique string that we created to identify the Service configuration resource.
   * @return chatServiceSid
   */
  @javax.annotation.Nullable
  public String getChatServiceSid() {
    return chatServiceSid;
  }

  public void setChatServiceSid(String chatServiceSid) {
    this.chatServiceSid = chatServiceSid;
  }


  public ConversationsV1ServiceServiceConfiguration defaultChatServiceRoleSid(String defaultChatServiceRoleSid) {
    this.defaultChatServiceRoleSid = defaultChatServiceRoleSid;
    return this;
  }

  /**
   * The service-level role assigned to users when they are added to the service. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.
   * @return defaultChatServiceRoleSid
   */
  @javax.annotation.Nullable
  public String getDefaultChatServiceRoleSid() {
    return defaultChatServiceRoleSid;
  }

  public void setDefaultChatServiceRoleSid(String defaultChatServiceRoleSid) {
    this.defaultChatServiceRoleSid = defaultChatServiceRoleSid;
  }


  public ConversationsV1ServiceServiceConfiguration defaultConversationCreatorRoleSid(String defaultConversationCreatorRoleSid) {
    this.defaultConversationCreatorRoleSid = defaultConversationCreatorRoleSid;
    return this;
  }

  /**
   * The conversation-level role assigned to a conversation creator when they join a new conversation. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.
   * @return defaultConversationCreatorRoleSid
   */
  @javax.annotation.Nullable
  public String getDefaultConversationCreatorRoleSid() {
    return defaultConversationCreatorRoleSid;
  }

  public void setDefaultConversationCreatorRoleSid(String defaultConversationCreatorRoleSid) {
    this.defaultConversationCreatorRoleSid = defaultConversationCreatorRoleSid;
  }


  public ConversationsV1ServiceServiceConfiguration defaultConversationRoleSid(String defaultConversationRoleSid) {
    this.defaultConversationRoleSid = defaultConversationRoleSid;
    return this;
  }

  /**
   * The conversation-level role assigned to users when they are added to a conversation. See [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.
   * @return defaultConversationRoleSid
   */
  @javax.annotation.Nullable
  public String getDefaultConversationRoleSid() {
    return defaultConversationRoleSid;
  }

  public void setDefaultConversationRoleSid(String defaultConversationRoleSid) {
    this.defaultConversationRoleSid = defaultConversationRoleSid;
  }


  public ConversationsV1ServiceServiceConfiguration links(Object links) {
    this.links = links;
    return this;
  }

  /**
   * Contains an absolute API resource URL to access the push notifications configuration of this service.
   * @return links
   */
  @javax.annotation.Nullable
  public Object getLinks() {
    return links;
  }

  public void setLinks(Object links) {
    this.links = links;
  }


  public ConversationsV1ServiceServiceConfiguration reachabilityEnabled(Boolean reachabilityEnabled) {
    this.reachabilityEnabled = reachabilityEnabled;
    return this;
  }

  /**
   * Whether the [Reachability Indicator](https://www.twilio.com/docs/conversations/reachability) is enabled for this Conversations Service. The default is &#x60;false&#x60;.
   * @return reachabilityEnabled
   */
  @javax.annotation.Nullable
  public Boolean getReachabilityEnabled() {
    return reachabilityEnabled;
  }

  public void setReachabilityEnabled(Boolean reachabilityEnabled) {
    this.reachabilityEnabled = reachabilityEnabled;
  }


  public ConversationsV1ServiceServiceConfiguration url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * An absolute API resource URL for this service configuration.
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConversationsV1ServiceServiceConfiguration conversationsV1ServiceServiceConfiguration = (ConversationsV1ServiceServiceConfiguration) o;
    return Objects.equals(this.chatServiceSid, conversationsV1ServiceServiceConfiguration.chatServiceSid) &&
        Objects.equals(this.defaultChatServiceRoleSid, conversationsV1ServiceServiceConfiguration.defaultChatServiceRoleSid) &&
        Objects.equals(this.defaultConversationCreatorRoleSid, conversationsV1ServiceServiceConfiguration.defaultConversationCreatorRoleSid) &&
        Objects.equals(this.defaultConversationRoleSid, conversationsV1ServiceServiceConfiguration.defaultConversationRoleSid) &&
        Objects.equals(this.links, conversationsV1ServiceServiceConfiguration.links) &&
        Objects.equals(this.reachabilityEnabled, conversationsV1ServiceServiceConfiguration.reachabilityEnabled) &&
        Objects.equals(this.url, conversationsV1ServiceServiceConfiguration.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(chatServiceSid, defaultChatServiceRoleSid, defaultConversationCreatorRoleSid, defaultConversationRoleSid, links, reachabilityEnabled, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConversationsV1ServiceServiceConfiguration {\n");
    sb.append("    chatServiceSid: ").append(toIndentedString(chatServiceSid)).append("\n");
    sb.append("    defaultChatServiceRoleSid: ").append(toIndentedString(defaultChatServiceRoleSid)).append("\n");
    sb.append("    defaultConversationCreatorRoleSid: ").append(toIndentedString(defaultConversationCreatorRoleSid)).append("\n");
    sb.append("    defaultConversationRoleSid: ").append(toIndentedString(defaultConversationRoleSid)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    reachabilityEnabled: ").append(toIndentedString(reachabilityEnabled)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chat_service_sid");
    openapiFields.add("default_chat_service_role_sid");
    openapiFields.add("default_conversation_creator_role_sid");
    openapiFields.add("default_conversation_role_sid");
    openapiFields.add("links");
    openapiFields.add("reachability_enabled");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ConversationsV1ServiceServiceConfiguration
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ConversationsV1ServiceServiceConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConversationsV1ServiceServiceConfiguration is not found in the empty JSON string", ConversationsV1ServiceServiceConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ConversationsV1ServiceServiceConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConversationsV1ServiceServiceConfiguration` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("chat_service_sid") != null && !jsonObj.get("chat_service_sid").isJsonNull()) && !jsonObj.get("chat_service_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chat_service_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chat_service_sid").toString()));
      }
      if ((jsonObj.get("default_chat_service_role_sid") != null && !jsonObj.get("default_chat_service_role_sid").isJsonNull()) && !jsonObj.get("default_chat_service_role_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_chat_service_role_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_chat_service_role_sid").toString()));
      }
      if ((jsonObj.get("default_conversation_creator_role_sid") != null && !jsonObj.get("default_conversation_creator_role_sid").isJsonNull()) && !jsonObj.get("default_conversation_creator_role_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_conversation_creator_role_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_conversation_creator_role_sid").toString()));
      }
      if ((jsonObj.get("default_conversation_role_sid") != null && !jsonObj.get("default_conversation_role_sid").isJsonNull()) && !jsonObj.get("default_conversation_role_sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_conversation_role_sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_conversation_role_sid").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConversationsV1ServiceServiceConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConversationsV1ServiceServiceConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConversationsV1ServiceServiceConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConversationsV1ServiceServiceConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<ConversationsV1ServiceServiceConfiguration>() {
           @Override
           public void write(JsonWriter out, ConversationsV1ServiceServiceConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConversationsV1ServiceServiceConfiguration read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ConversationsV1ServiceServiceConfiguration given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ConversationsV1ServiceServiceConfiguration
   * @throws IOException if the JSON string is invalid with respect to ConversationsV1ServiceServiceConfiguration
   */
  public static ConversationsV1ServiceServiceConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConversationsV1ServiceServiceConfiguration.class);
  }

  /**
   * Convert an instance of ConversationsV1ServiceServiceConfiguration to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

