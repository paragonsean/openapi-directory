/*
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.ServiceUserConversationEnumNotificationLevel;
import org.openapitools.client.model.ServiceUserConversationEnumState;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ConversationsV1ServiceServiceUserServiceUserConversation
 */
public class ConversationsV1ServiceServiceUserServiceUserConversationTest {
    private final ConversationsV1ServiceServiceUserServiceUserConversation model = new ConversationsV1ServiceServiceUserServiceUserConversation();

    /**
     * Model tests for ConversationsV1ServiceServiceUserServiceUserConversation
     */
    @Test
    public void testConversationsV1ServiceServiceUserServiceUserConversation() {
        // TODO: test ConversationsV1ServiceServiceUserServiceUserConversation
    }

    /**
     * Test the property 'accountSid'
     */
    @Test
    public void accountSidTest() {
        // TODO: test accountSid
    }

    /**
     * Test the property 'attributes'
     */
    @Test
    public void attributesTest() {
        // TODO: test attributes
    }

    /**
     * Test the property 'chatServiceSid'
     */
    @Test
    public void chatServiceSidTest() {
        // TODO: test chatServiceSid
    }

    /**
     * Test the property 'conversationSid'
     */
    @Test
    public void conversationSidTest() {
        // TODO: test conversationSid
    }

    /**
     * Test the property 'conversationState'
     */
    @Test
    public void conversationStateTest() {
        // TODO: test conversationState
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'dateCreated'
     */
    @Test
    public void dateCreatedTest() {
        // TODO: test dateCreated
    }

    /**
     * Test the property 'dateUpdated'
     */
    @Test
    public void dateUpdatedTest() {
        // TODO: test dateUpdated
    }

    /**
     * Test the property 'friendlyName'
     */
    @Test
    public void friendlyNameTest() {
        // TODO: test friendlyName
    }

    /**
     * Test the property 'lastReadMessageIndex'
     */
    @Test
    public void lastReadMessageIndexTest() {
        // TODO: test lastReadMessageIndex
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'notificationLevel'
     */
    @Test
    public void notificationLevelTest() {
        // TODO: test notificationLevel
    }

    /**
     * Test the property 'participantSid'
     */
    @Test
    public void participantSidTest() {
        // TODO: test participantSid
    }

    /**
     * Test the property 'timers'
     */
    @Test
    public void timersTest() {
        // TODO: test timers
    }

    /**
     * Test the property 'uniqueName'
     */
    @Test
    public void uniqueNameTest() {
        // TODO: test uniqueName
    }

    /**
     * Test the property 'unreadMessagesCount'
     */
    @Test
    public void unreadMessagesCountTest() {
        // TODO: test unreadMessagesCount
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'userSid'
     */
    @Test
    public void userSidTest() {
        // TODO: test userSid
    }

}
