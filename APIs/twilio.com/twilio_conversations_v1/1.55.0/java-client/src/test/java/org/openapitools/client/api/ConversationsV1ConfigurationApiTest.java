/*
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConversationsV1Configuration;
import org.openapitools.client.model.ConversationsV1ServiceServiceConfiguration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConversationsV1ConfigurationApi
 */
@Disabled
public class ConversationsV1ConfigurationApiTest {

    private final ConversationsV1ConfigurationApi api = new ConversationsV1ConfigurationApi();

    /**
     * Fetch the global configuration of conversations on your account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchConfigurationTest() throws ApiException {
        ConversationsV1Configuration response = api.fetchConfiguration();
        // TODO: test validations
    }

    /**
     * Fetch the configuration of a conversation service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchServiceConfigurationTest() throws ApiException {
        String chatServiceSid = null;
        ConversationsV1ServiceServiceConfiguration response = api.fetchServiceConfiguration(chatServiceSid);
        // TODO: test validations
    }

    /**
     * Update the global configuration of conversations on your account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateConfigurationTest() throws ApiException {
        String defaultChatServiceSid = null;
        String defaultClosedTimer = null;
        String defaultInactiveTimer = null;
        String defaultMessagingServiceSid = null;
        ConversationsV1Configuration response = api.updateConfiguration(defaultChatServiceSid, defaultClosedTimer, defaultInactiveTimer, defaultMessagingServiceSid);
        // TODO: test validations
    }

    /**
     * Update configuration settings of a conversation service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateServiceConfigurationTest() throws ApiException {
        String chatServiceSid = null;
        String defaultChatServiceRoleSid = null;
        String defaultConversationCreatorRoleSid = null;
        String defaultConversationRoleSid = null;
        Boolean reachabilityEnabled = null;
        ConversationsV1ServiceServiceConfiguration response = api.updateServiceConfiguration(chatServiceSid, defaultChatServiceRoleSid, defaultConversationCreatorRoleSid, defaultConversationRoleSid, reachabilityEnabled);
        // TODO: test validations
    }

}
