/*
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConversationEnumState;
import org.openapitools.client.model.ConversationEnumWebhookEnabledType;
import org.openapitools.client.model.ConversationsV1Conversation;
import org.openapitools.client.model.ConversationsV1ServiceServiceConversation;
import org.openapitools.client.model.ListConversationResponse;
import org.openapitools.client.model.ListServiceConversationResponse;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ServiceConversationEnumState;
import org.openapitools.client.model.ServiceConversationEnumWebhookEnabledType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConversationsV1ConversationApi
 */
@Disabled
public class ConversationsV1ConversationApiTest {

    private final ConversationsV1ConversationApi api = new ConversationsV1ConversationApi();

    /**
     * Create a new conversation in your account&#39;s default service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createConversationTest() throws ApiException {
        ConversationEnumWebhookEnabledType xTwilioWebhookEnabled = null;
        String attributes = null;
        String bindingsEmailAddress = null;
        String bindingsEmailName = null;
        OffsetDateTime dateCreated = null;
        OffsetDateTime dateUpdated = null;
        String friendlyName = null;
        String messagingServiceSid = null;
        ConversationEnumState state = null;
        String timersClosed = null;
        String timersInactive = null;
        String uniqueName = null;
        ConversationsV1Conversation response = api.createConversation(xTwilioWebhookEnabled, attributes, bindingsEmailAddress, bindingsEmailName, dateCreated, dateUpdated, friendlyName, messagingServiceSid, state, timersClosed, timersInactive, uniqueName);
        // TODO: test validations
    }

    /**
     * Create a new conversation in your service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createServiceConversationTest() throws ApiException {
        String chatServiceSid = null;
        ServiceConversationEnumWebhookEnabledType xTwilioWebhookEnabled = null;
        String attributes = null;
        String bindingsEmailAddress = null;
        String bindingsEmailName = null;
        OffsetDateTime dateCreated = null;
        OffsetDateTime dateUpdated = null;
        String friendlyName = null;
        String messagingServiceSid = null;
        ServiceConversationEnumState state = null;
        String timersClosed = null;
        String timersInactive = null;
        String uniqueName = null;
        ConversationsV1ServiceServiceConversation response = api.createServiceConversation(chatServiceSid, xTwilioWebhookEnabled, attributes, bindingsEmailAddress, bindingsEmailName, dateCreated, dateUpdated, friendlyName, messagingServiceSid, state, timersClosed, timersInactive, uniqueName);
        // TODO: test validations
    }

    /**
     * Remove a conversation from your account&#39;s default service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteConversationTest() throws ApiException {
        String sid = null;
        ConversationEnumWebhookEnabledType xTwilioWebhookEnabled = null;
        api.deleteConversation(sid, xTwilioWebhookEnabled);
        // TODO: test validations
    }

    /**
     * Remove a conversation from your service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteServiceConversationTest() throws ApiException {
        String chatServiceSid = null;
        String sid = null;
        ServiceConversationEnumWebhookEnabledType xTwilioWebhookEnabled = null;
        api.deleteServiceConversation(chatServiceSid, sid, xTwilioWebhookEnabled);
        // TODO: test validations
    }

    /**
     * Fetch a conversation from your account&#39;s default service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchConversationTest() throws ApiException {
        String sid = null;
        ConversationsV1Conversation response = api.fetchConversation(sid);
        // TODO: test validations
    }

    /**
     * Fetch a conversation from your service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchServiceConversationTest() throws ApiException {
        String chatServiceSid = null;
        String sid = null;
        ConversationsV1ServiceServiceConversation response = api.fetchServiceConversation(chatServiceSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of conversations in your account&#39;s default service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listConversationTest() throws ApiException {
        String startDate = null;
        String endDate = null;
        ConversationEnumState state = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListConversationResponse response = api.listConversation(startDate, endDate, state, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Retrieve a list of conversations in your service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listServiceConversationTest() throws ApiException {
        String chatServiceSid = null;
        String startDate = null;
        String endDate = null;
        ServiceConversationEnumState state = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListServiceConversationResponse response = api.listServiceConversation(chatServiceSid, startDate, endDate, state, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update an existing conversation in your account&#39;s default service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateConversationTest() throws ApiException {
        String sid = null;
        ConversationEnumWebhookEnabledType xTwilioWebhookEnabled = null;
        String attributes = null;
        String bindingsEmailAddress = null;
        String bindingsEmailName = null;
        OffsetDateTime dateCreated = null;
        OffsetDateTime dateUpdated = null;
        String friendlyName = null;
        String messagingServiceSid = null;
        ConversationEnumState state = null;
        String timersClosed = null;
        String timersInactive = null;
        String uniqueName = null;
        ConversationsV1Conversation response = api.updateConversation(sid, xTwilioWebhookEnabled, attributes, bindingsEmailAddress, bindingsEmailName, dateCreated, dateUpdated, friendlyName, messagingServiceSid, state, timersClosed, timersInactive, uniqueName);
        // TODO: test validations
    }

    /**
     * Update an existing conversation in your service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateServiceConversationTest() throws ApiException {
        String chatServiceSid = null;
        String sid = null;
        ServiceConversationEnumWebhookEnabledType xTwilioWebhookEnabled = null;
        String attributes = null;
        String bindingsEmailAddress = null;
        String bindingsEmailName = null;
        OffsetDateTime dateCreated = null;
        OffsetDateTime dateUpdated = null;
        String friendlyName = null;
        String messagingServiceSid = null;
        ServiceConversationEnumState state = null;
        String timersClosed = null;
        String timersInactive = null;
        String uniqueName = null;
        ConversationsV1ServiceServiceConversation response = api.updateServiceConversation(chatServiceSid, sid, xTwilioWebhookEnabled, attributes, bindingsEmailAddress, bindingsEmailName, dateCreated, dateUpdated, friendlyName, messagingServiceSid, state, timersClosed, timersInactive, uniqueName);
        // TODO: test validations
    }

}
