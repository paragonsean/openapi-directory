/*
 * Twilio - Conversations
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConversationParticipantEnumWebhookEnabledType;
import org.openapitools.client.model.ConversationsV1ConversationConversationParticipant;
import org.openapitools.client.model.ConversationsV1ServiceServiceConversationServiceConversationParticipant;
import org.openapitools.client.model.ListConversationParticipantResponse;
import org.openapitools.client.model.ListServiceConversationParticipantResponse;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ServiceConversationParticipantEnumWebhookEnabledType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConversationsV1ParticipantApi
 */
@Disabled
public class ConversationsV1ParticipantApiTest {

    private final ConversationsV1ParticipantApi api = new ConversationsV1ParticipantApi();

    /**
     * Add a new participant to the conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createConversationParticipantTest() throws ApiException {
        String conversationSid = null;
        ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled = null;
        String attributes = null;
        OffsetDateTime dateCreated = null;
        OffsetDateTime dateUpdated = null;
        String identity = null;
        String messagingBindingAddress = null;
        String messagingBindingProjectedAddress = null;
        String messagingBindingProxyAddress = null;
        String roleSid = null;
        ConversationsV1ConversationConversationParticipant response = api.createConversationParticipant(conversationSid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, messagingBindingAddress, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid);
        // TODO: test validations
    }

    /**
     * Add a new participant to the conversation in a specific service
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createServiceConversationParticipantTest() throws ApiException {
        String chatServiceSid = null;
        String conversationSid = null;
        ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled = null;
        String attributes = null;
        OffsetDateTime dateCreated = null;
        OffsetDateTime dateUpdated = null;
        String identity = null;
        String messagingBindingAddress = null;
        String messagingBindingProjectedAddress = null;
        String messagingBindingProxyAddress = null;
        String roleSid = null;
        ConversationsV1ServiceServiceConversationServiceConversationParticipant response = api.createServiceConversationParticipant(chatServiceSid, conversationSid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, messagingBindingAddress, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid);
        // TODO: test validations
    }

    /**
     * Remove a participant from the conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteConversationParticipantTest() throws ApiException {
        String conversationSid = null;
        String sid = null;
        ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled = null;
        api.deleteConversationParticipant(conversationSid, sid, xTwilioWebhookEnabled);
        // TODO: test validations
    }

    /**
     * Remove a participant from the conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteServiceConversationParticipantTest() throws ApiException {
        String chatServiceSid = null;
        String conversationSid = null;
        String sid = null;
        ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled = null;
        api.deleteServiceConversationParticipant(chatServiceSid, conversationSid, sid, xTwilioWebhookEnabled);
        // TODO: test validations
    }

    /**
     * Fetch a participant of the conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchConversationParticipantTest() throws ApiException {
        String conversationSid = null;
        String sid = null;
        ConversationsV1ConversationConversationParticipant response = api.fetchConversationParticipant(conversationSid, sid);
        // TODO: test validations
    }

    /**
     * Fetch a participant of the conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchServiceConversationParticipantTest() throws ApiException {
        String chatServiceSid = null;
        String conversationSid = null;
        String sid = null;
        ConversationsV1ServiceServiceConversationServiceConversationParticipant response = api.fetchServiceConversationParticipant(chatServiceSid, conversationSid, sid);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all participants of the conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listConversationParticipantTest() throws ApiException {
        String conversationSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListConversationParticipantResponse response = api.listConversationParticipant(conversationSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Retrieve a list of all participants of the conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listServiceConversationParticipantTest() throws ApiException {
        String chatServiceSid = null;
        String conversationSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListServiceConversationParticipantResponse response = api.listServiceConversationParticipant(chatServiceSid, conversationSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * Update an existing participant in the conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateConversationParticipantTest() throws ApiException {
        String conversationSid = null;
        String sid = null;
        ConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled = null;
        String attributes = null;
        OffsetDateTime dateCreated = null;
        OffsetDateTime dateUpdated = null;
        String identity = null;
        Integer lastReadMessageIndex = null;
        String lastReadTimestamp = null;
        String messagingBindingProjectedAddress = null;
        String messagingBindingProxyAddress = null;
        String roleSid = null;
        ConversationsV1ConversationConversationParticipant response = api.updateConversationParticipant(conversationSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, lastReadMessageIndex, lastReadTimestamp, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid);
        // TODO: test validations
    }

    /**
     * Update an existing participant in the conversation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateServiceConversationParticipantTest() throws ApiException {
        String chatServiceSid = null;
        String conversationSid = null;
        String sid = null;
        ServiceConversationParticipantEnumWebhookEnabledType xTwilioWebhookEnabled = null;
        String attributes = null;
        OffsetDateTime dateCreated = null;
        OffsetDateTime dateUpdated = null;
        String identity = null;
        Integer lastReadMessageIndex = null;
        String lastReadTimestamp = null;
        String messagingBindingProjectedAddress = null;
        String messagingBindingProxyAddress = null;
        String roleSid = null;
        ConversationsV1ServiceServiceConversationServiceConversationParticipant response = api.updateServiceConversationParticipant(chatServiceSid, conversationSid, sid, xTwilioWebhookEnabled, attributes, dateCreated, dateUpdated, identity, lastReadMessageIndex, lastReadTimestamp, messagingBindingProjectedAddress, messagingBindingProxyAddress, roleSid);
        // TODO: test validations
    }

}
