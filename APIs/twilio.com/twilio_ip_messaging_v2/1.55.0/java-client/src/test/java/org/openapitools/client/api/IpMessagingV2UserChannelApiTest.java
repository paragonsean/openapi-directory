/*
 * Twilio - Ip_messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.IpMessagingV2ServiceUserUserChannel;
import org.openapitools.client.model.ListUserChannelResponse;
import java.time.OffsetDateTime;
import org.openapitools.client.model.UserChannelEnumNotificationLevel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IpMessagingV2UserChannelApi
 */
@Disabled
public class IpMessagingV2UserChannelApiTest {

    private final IpMessagingV2UserChannelApi api = new IpMessagingV2UserChannelApi();

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserChannelTest() throws ApiException {
        String serviceSid = null;
        String userSid = null;
        String channelSid = null;
        api.deleteUserChannel(serviceSid, userSid, channelSid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchUserChannelTest() throws ApiException {
        String serviceSid = null;
        String userSid = null;
        String channelSid = null;
        IpMessagingV2ServiceUserUserChannel response = api.fetchUserChannel(serviceSid, userSid, channelSid);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listUserChannelTest() throws ApiException {
        String serviceSid = null;
        String userSid = null;
        Integer pageSize = null;
        Integer page = null;
        String pageToken = null;
        ListUserChannelResponse response = api.listUserChannel(serviceSid, userSid, pageSize, page, pageToken);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUserChannelTest() throws ApiException {
        String serviceSid = null;
        String userSid = null;
        String channelSid = null;
        Integer lastConsumedMessageIndex = null;
        OffsetDateTime lastConsumptionTimestamp = null;
        UserChannelEnumNotificationLevel notificationLevel = null;
        IpMessagingV2ServiceUserUserChannel response = api.updateUserChannel(serviceSid, userSid, channelSid, lastConsumedMessageIndex, lastConsumptionTimestamp, notificationLevel);
        // TODO: test validations
    }

}
