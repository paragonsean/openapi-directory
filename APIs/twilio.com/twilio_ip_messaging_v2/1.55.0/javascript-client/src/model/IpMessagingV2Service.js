/**
 * Twilio - Ip_messaging
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IpMessagingV2Service model module.
 * @module model/IpMessagingV2Service
 * @version 1.55.0
 */
class IpMessagingV2Service {
    /**
     * Constructs a new <code>IpMessagingV2Service</code>.
     * @alias module:model/IpMessagingV2Service
     */
    constructor() { 
        
        IpMessagingV2Service.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IpMessagingV2Service</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IpMessagingV2Service} obj Optional instance to populate.
     * @return {module:model/IpMessagingV2Service} The populated <code>IpMessagingV2Service</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IpMessagingV2Service();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('consumption_report_interval')) {
                obj['consumption_report_interval'] = ApiClient.convertToType(data['consumption_report_interval'], 'Number');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('default_channel_creator_role_sid')) {
                obj['default_channel_creator_role_sid'] = ApiClient.convertToType(data['default_channel_creator_role_sid'], 'String');
            }
            if (data.hasOwnProperty('default_channel_role_sid')) {
                obj['default_channel_role_sid'] = ApiClient.convertToType(data['default_channel_role_sid'], 'String');
            }
            if (data.hasOwnProperty('default_service_role_sid')) {
                obj['default_service_role_sid'] = ApiClient.convertToType(data['default_service_role_sid'], 'String');
            }
            if (data.hasOwnProperty('friendly_name')) {
                obj['friendly_name'] = ApiClient.convertToType(data['friendly_name'], 'String');
            }
            if (data.hasOwnProperty('limits')) {
                obj['limits'] = ApiClient.convertToType(data['limits'], Object);
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('media')) {
                obj['media'] = ApiClient.convertToType(data['media'], Object);
            }
            if (data.hasOwnProperty('notifications')) {
                obj['notifications'] = ApiClient.convertToType(data['notifications'], Object);
            }
            if (data.hasOwnProperty('post_webhook_retry_count')) {
                obj['post_webhook_retry_count'] = ApiClient.convertToType(data['post_webhook_retry_count'], 'Number');
            }
            if (data.hasOwnProperty('post_webhook_url')) {
                obj['post_webhook_url'] = ApiClient.convertToType(data['post_webhook_url'], 'String');
            }
            if (data.hasOwnProperty('pre_webhook_retry_count')) {
                obj['pre_webhook_retry_count'] = ApiClient.convertToType(data['pre_webhook_retry_count'], 'Number');
            }
            if (data.hasOwnProperty('pre_webhook_url')) {
                obj['pre_webhook_url'] = ApiClient.convertToType(data['pre_webhook_url'], 'String');
            }
            if (data.hasOwnProperty('reachability_enabled')) {
                obj['reachability_enabled'] = ApiClient.convertToType(data['reachability_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('read_status_enabled')) {
                obj['read_status_enabled'] = ApiClient.convertToType(data['read_status_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('typing_indicator_timeout')) {
                obj['typing_indicator_timeout'] = ApiClient.convertToType(data['typing_indicator_timeout'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('webhook_filters')) {
                obj['webhook_filters'] = ApiClient.convertToType(data['webhook_filters'], ['String']);
            }
            if (data.hasOwnProperty('webhook_method')) {
                obj['webhook_method'] = ApiClient.convertToType(data['webhook_method'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IpMessagingV2Service</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IpMessagingV2Service</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['default_channel_creator_role_sid'] && !(typeof data['default_channel_creator_role_sid'] === 'string' || data['default_channel_creator_role_sid'] instanceof String)) {
            throw new Error("Expected the field `default_channel_creator_role_sid` to be a primitive type in the JSON string but got " + data['default_channel_creator_role_sid']);
        }
        // ensure the json data is a string
        if (data['default_channel_role_sid'] && !(typeof data['default_channel_role_sid'] === 'string' || data['default_channel_role_sid'] instanceof String)) {
            throw new Error("Expected the field `default_channel_role_sid` to be a primitive type in the JSON string but got " + data['default_channel_role_sid']);
        }
        // ensure the json data is a string
        if (data['default_service_role_sid'] && !(typeof data['default_service_role_sid'] === 'string' || data['default_service_role_sid'] instanceof String)) {
            throw new Error("Expected the field `default_service_role_sid` to be a primitive type in the JSON string but got " + data['default_service_role_sid']);
        }
        // ensure the json data is a string
        if (data['friendly_name'] && !(typeof data['friendly_name'] === 'string' || data['friendly_name'] instanceof String)) {
            throw new Error("Expected the field `friendly_name` to be a primitive type in the JSON string but got " + data['friendly_name']);
        }
        // ensure the json data is a string
        if (data['post_webhook_url'] && !(typeof data['post_webhook_url'] === 'string' || data['post_webhook_url'] instanceof String)) {
            throw new Error("Expected the field `post_webhook_url` to be a primitive type in the JSON string but got " + data['post_webhook_url']);
        }
        // ensure the json data is a string
        if (data['pre_webhook_url'] && !(typeof data['pre_webhook_url'] === 'string' || data['pre_webhook_url'] instanceof String)) {
            throw new Error("Expected the field `pre_webhook_url` to be a primitive type in the JSON string but got " + data['pre_webhook_url']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['webhook_filters'])) {
            throw new Error("Expected the field `webhook_filters` to be an array in the JSON data but got " + data['webhook_filters']);
        }
        // ensure the json data is a string
        if (data['webhook_method'] && !(typeof data['webhook_method'] === 'string' || data['webhook_method'] instanceof String)) {
            throw new Error("Expected the field `webhook_method` to be a primitive type in the JSON string but got " + data['webhook_method']);
        }

        return true;
    }


}



/**
 * @member {String} account_sid
 */
IpMessagingV2Service.prototype['account_sid'] = undefined;

/**
 * @member {Number} consumption_report_interval
 */
IpMessagingV2Service.prototype['consumption_report_interval'] = undefined;

/**
 * @member {Date} date_created
 */
IpMessagingV2Service.prototype['date_created'] = undefined;

/**
 * @member {Date} date_updated
 */
IpMessagingV2Service.prototype['date_updated'] = undefined;

/**
 * @member {String} default_channel_creator_role_sid
 */
IpMessagingV2Service.prototype['default_channel_creator_role_sid'] = undefined;

/**
 * @member {String} default_channel_role_sid
 */
IpMessagingV2Service.prototype['default_channel_role_sid'] = undefined;

/**
 * @member {String} default_service_role_sid
 */
IpMessagingV2Service.prototype['default_service_role_sid'] = undefined;

/**
 * @member {String} friendly_name
 */
IpMessagingV2Service.prototype['friendly_name'] = undefined;

/**
 * @member {Object} limits
 */
IpMessagingV2Service.prototype['limits'] = undefined;

/**
 * @member {Object} links
 */
IpMessagingV2Service.prototype['links'] = undefined;

/**
 * @member {Object} media
 */
IpMessagingV2Service.prototype['media'] = undefined;

/**
 * @member {Object} notifications
 */
IpMessagingV2Service.prototype['notifications'] = undefined;

/**
 * @member {Number} post_webhook_retry_count
 */
IpMessagingV2Service.prototype['post_webhook_retry_count'] = undefined;

/**
 * @member {String} post_webhook_url
 */
IpMessagingV2Service.prototype['post_webhook_url'] = undefined;

/**
 * @member {Number} pre_webhook_retry_count
 */
IpMessagingV2Service.prototype['pre_webhook_retry_count'] = undefined;

/**
 * @member {String} pre_webhook_url
 */
IpMessagingV2Service.prototype['pre_webhook_url'] = undefined;

/**
 * @member {Boolean} reachability_enabled
 */
IpMessagingV2Service.prototype['reachability_enabled'] = undefined;

/**
 * @member {Boolean} read_status_enabled
 */
IpMessagingV2Service.prototype['read_status_enabled'] = undefined;

/**
 * @member {String} sid
 */
IpMessagingV2Service.prototype['sid'] = undefined;

/**
 * @member {Number} typing_indicator_timeout
 */
IpMessagingV2Service.prototype['typing_indicator_timeout'] = undefined;

/**
 * @member {String} url
 */
IpMessagingV2Service.prototype['url'] = undefined;

/**
 * @member {Array.<String>} webhook_filters
 */
IpMessagingV2Service.prototype['webhook_filters'] = undefined;

/**
 * @member {String} webhook_method
 */
IpMessagingV2Service.prototype['webhook_method'] = undefined;






export default IpMessagingV2Service;

