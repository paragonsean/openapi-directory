# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class IpMessagingV2ServiceChannelChannelWebhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_sid: str=None, channel_sid: str=None, configuration: object=None, date_created: datetime=None, date_updated: datetime=None, service_sid: str=None, sid: str=None, type: str=None, url: str=None):
        """IpMessagingV2ServiceChannelChannelWebhook - a model defined in OpenAPI

        :param account_sid: The account_sid of this IpMessagingV2ServiceChannelChannelWebhook.
        :param channel_sid: The channel_sid of this IpMessagingV2ServiceChannelChannelWebhook.
        :param configuration: The configuration of this IpMessagingV2ServiceChannelChannelWebhook.
        :param date_created: The date_created of this IpMessagingV2ServiceChannelChannelWebhook.
        :param date_updated: The date_updated of this IpMessagingV2ServiceChannelChannelWebhook.
        :param service_sid: The service_sid of this IpMessagingV2ServiceChannelChannelWebhook.
        :param sid: The sid of this IpMessagingV2ServiceChannelChannelWebhook.
        :param type: The type of this IpMessagingV2ServiceChannelChannelWebhook.
        :param url: The url of this IpMessagingV2ServiceChannelChannelWebhook.
        """
        self.openapi_types = {
            'account_sid': str,
            'channel_sid': str,
            'configuration': object,
            'date_created': datetime,
            'date_updated': datetime,
            'service_sid': str,
            'sid': str,
            'type': str,
            'url': str
        }

        self.attribute_map = {
            'account_sid': 'account_sid',
            'channel_sid': 'channel_sid',
            'configuration': 'configuration',
            'date_created': 'date_created',
            'date_updated': 'date_updated',
            'service_sid': 'service_sid',
            'sid': 'sid',
            'type': 'type',
            'url': 'url'
        }

        self._account_sid = account_sid
        self._channel_sid = channel_sid
        self._configuration = configuration
        self._date_created = date_created
        self._date_updated = date_updated
        self._service_sid = service_sid
        self._sid = sid
        self._type = type
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IpMessagingV2ServiceChannelChannelWebhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ip_messaging.v2.service.channel.channel_webhook of this IpMessagingV2ServiceChannelChannelWebhook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_sid(self):
        """Gets the account_sid of this IpMessagingV2ServiceChannelChannelWebhook.


        :return: The account_sid of this IpMessagingV2ServiceChannelChannelWebhook.
        :rtype: str
        """
        return self._account_sid

    @account_sid.setter
    def account_sid(self, account_sid):
        """Sets the account_sid of this IpMessagingV2ServiceChannelChannelWebhook.


        :param account_sid: The account_sid of this IpMessagingV2ServiceChannelChannelWebhook.
        :type account_sid: str
        """
        if account_sid is not None and len(account_sid) > 34:
            raise ValueError("Invalid value for `account_sid`, length must be less than or equal to `34`")
        if account_sid is not None and len(account_sid) < 34:
            raise ValueError("Invalid value for `account_sid`, length must be greater than or equal to `34`")
        if account_sid is not None and not re.search(r'^AC[0-9a-fA-F]{32}$', account_sid):
            raise ValueError("Invalid value for `account_sid`, must be a follow pattern or equal to `/^AC[0-9a-fA-F]{32}$/`")

        self._account_sid = account_sid

    @property
    def channel_sid(self):
        """Gets the channel_sid of this IpMessagingV2ServiceChannelChannelWebhook.


        :return: The channel_sid of this IpMessagingV2ServiceChannelChannelWebhook.
        :rtype: str
        """
        return self._channel_sid

    @channel_sid.setter
    def channel_sid(self, channel_sid):
        """Sets the channel_sid of this IpMessagingV2ServiceChannelChannelWebhook.


        :param channel_sid: The channel_sid of this IpMessagingV2ServiceChannelChannelWebhook.
        :type channel_sid: str
        """
        if channel_sid is not None and len(channel_sid) > 34:
            raise ValueError("Invalid value for `channel_sid`, length must be less than or equal to `34`")
        if channel_sid is not None and len(channel_sid) < 34:
            raise ValueError("Invalid value for `channel_sid`, length must be greater than or equal to `34`")
        if channel_sid is not None and not re.search(r'^CH[0-9a-fA-F]{32}$', channel_sid):
            raise ValueError("Invalid value for `channel_sid`, must be a follow pattern or equal to `/^CH[0-9a-fA-F]{32}$/`")

        self._channel_sid = channel_sid

    @property
    def configuration(self):
        """Gets the configuration of this IpMessagingV2ServiceChannelChannelWebhook.


        :return: The configuration of this IpMessagingV2ServiceChannelChannelWebhook.
        :rtype: object
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this IpMessagingV2ServiceChannelChannelWebhook.


        :param configuration: The configuration of this IpMessagingV2ServiceChannelChannelWebhook.
        :type configuration: object
        """

        self._configuration = configuration

    @property
    def date_created(self):
        """Gets the date_created of this IpMessagingV2ServiceChannelChannelWebhook.


        :return: The date_created of this IpMessagingV2ServiceChannelChannelWebhook.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this IpMessagingV2ServiceChannelChannelWebhook.


        :param date_created: The date_created of this IpMessagingV2ServiceChannelChannelWebhook.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_updated(self):
        """Gets the date_updated of this IpMessagingV2ServiceChannelChannelWebhook.


        :return: The date_updated of this IpMessagingV2ServiceChannelChannelWebhook.
        :rtype: datetime
        """
        return self._date_updated

    @date_updated.setter
    def date_updated(self, date_updated):
        """Sets the date_updated of this IpMessagingV2ServiceChannelChannelWebhook.


        :param date_updated: The date_updated of this IpMessagingV2ServiceChannelChannelWebhook.
        :type date_updated: datetime
        """

        self._date_updated = date_updated

    @property
    def service_sid(self):
        """Gets the service_sid of this IpMessagingV2ServiceChannelChannelWebhook.


        :return: The service_sid of this IpMessagingV2ServiceChannelChannelWebhook.
        :rtype: str
        """
        return self._service_sid

    @service_sid.setter
    def service_sid(self, service_sid):
        """Sets the service_sid of this IpMessagingV2ServiceChannelChannelWebhook.


        :param service_sid: The service_sid of this IpMessagingV2ServiceChannelChannelWebhook.
        :type service_sid: str
        """
        if service_sid is not None and len(service_sid) > 34:
            raise ValueError("Invalid value for `service_sid`, length must be less than or equal to `34`")
        if service_sid is not None and len(service_sid) < 34:
            raise ValueError("Invalid value for `service_sid`, length must be greater than or equal to `34`")
        if service_sid is not None and not re.search(r'^IS[0-9a-fA-F]{32}$', service_sid):
            raise ValueError("Invalid value for `service_sid`, must be a follow pattern or equal to `/^IS[0-9a-fA-F]{32}$/`")

        self._service_sid = service_sid

    @property
    def sid(self):
        """Gets the sid of this IpMessagingV2ServiceChannelChannelWebhook.


        :return: The sid of this IpMessagingV2ServiceChannelChannelWebhook.
        :rtype: str
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this IpMessagingV2ServiceChannelChannelWebhook.


        :param sid: The sid of this IpMessagingV2ServiceChannelChannelWebhook.
        :type sid: str
        """
        if sid is not None and len(sid) > 34:
            raise ValueError("Invalid value for `sid`, length must be less than or equal to `34`")
        if sid is not None and len(sid) < 34:
            raise ValueError("Invalid value for `sid`, length must be greater than or equal to `34`")
        if sid is not None and not re.search(r'^WH[0-9a-fA-F]{32}$', sid):
            raise ValueError("Invalid value for `sid`, must be a follow pattern or equal to `/^WH[0-9a-fA-F]{32}$/`")

        self._sid = sid

    @property
    def type(self):
        """Gets the type of this IpMessagingV2ServiceChannelChannelWebhook.


        :return: The type of this IpMessagingV2ServiceChannelChannelWebhook.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this IpMessagingV2ServiceChannelChannelWebhook.


        :param type: The type of this IpMessagingV2ServiceChannelChannelWebhook.
        :type type: str
        """

        self._type = type

    @property
    def url(self):
        """Gets the url of this IpMessagingV2ServiceChannelChannelWebhook.


        :return: The url of this IpMessagingV2ServiceChannelChannelWebhook.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this IpMessagingV2ServiceChannelChannelWebhook.


        :param url: The url of this IpMessagingV2ServiceChannelChannelWebhook.
        :type url: str
        """

        self._url = url
