/**
 * Twilio - Studio
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EngagementEnumStatus from './EngagementEnumStatus';

/**
 * The StudioV1FlowEngagement model module.
 * @module model/StudioV1FlowEngagement
 * @version 1.55.0
 */
class StudioV1FlowEngagement {
    /**
     * Constructs a new <code>StudioV1FlowEngagement</code>.
     * @alias module:model/StudioV1FlowEngagement
     */
    constructor() { 
        
        StudioV1FlowEngagement.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StudioV1FlowEngagement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StudioV1FlowEngagement} obj Optional instance to populate.
     * @return {module:model/StudioV1FlowEngagement} The populated <code>StudioV1FlowEngagement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StudioV1FlowEngagement();

            if (data.hasOwnProperty('account_sid')) {
                obj['account_sid'] = ApiClient.convertToType(data['account_sid'], 'String');
            }
            if (data.hasOwnProperty('contact_channel_address')) {
                obj['contact_channel_address'] = ApiClient.convertToType(data['contact_channel_address'], 'String');
            }
            if (data.hasOwnProperty('contact_sid')) {
                obj['contact_sid'] = ApiClient.convertToType(data['contact_sid'], 'String');
            }
            if (data.hasOwnProperty('context')) {
                obj['context'] = ApiClient.convertToType(data['context'], Object);
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_updated')) {
                obj['date_updated'] = ApiClient.convertToType(data['date_updated'], 'Date');
            }
            if (data.hasOwnProperty('flow_sid')) {
                obj['flow_sid'] = ApiClient.convertToType(data['flow_sid'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], Object);
            }
            if (data.hasOwnProperty('sid')) {
                obj['sid'] = ApiClient.convertToType(data['sid'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = EngagementEnumStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StudioV1FlowEngagement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StudioV1FlowEngagement</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_sid'] && !(typeof data['account_sid'] === 'string' || data['account_sid'] instanceof String)) {
            throw new Error("Expected the field `account_sid` to be a primitive type in the JSON string but got " + data['account_sid']);
        }
        // ensure the json data is a string
        if (data['contact_channel_address'] && !(typeof data['contact_channel_address'] === 'string' || data['contact_channel_address'] instanceof String)) {
            throw new Error("Expected the field `contact_channel_address` to be a primitive type in the JSON string but got " + data['contact_channel_address']);
        }
        // ensure the json data is a string
        if (data['contact_sid'] && !(typeof data['contact_sid'] === 'string' || data['contact_sid'] instanceof String)) {
            throw new Error("Expected the field `contact_sid` to be a primitive type in the JSON string but got " + data['contact_sid']);
        }
        // ensure the json data is a string
        if (data['flow_sid'] && !(typeof data['flow_sid'] === 'string' || data['flow_sid'] instanceof String)) {
            throw new Error("Expected the field `flow_sid` to be a primitive type in the JSON string but got " + data['flow_sid']);
        }
        // ensure the json data is a string
        if (data['sid'] && !(typeof data['sid'] === 'string' || data['sid'] instanceof String)) {
            throw new Error("Expected the field `sid` to be a primitive type in the JSON string but got " + data['sid']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Engagement resource.
 * @member {String} account_sid
 */
StudioV1FlowEngagement.prototype['account_sid'] = undefined;

/**
 * The phone number, SIP address or Client identifier that triggered this Engagement. Phone numbers are in E.164 format (+16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.
 * @member {String} contact_channel_address
 */
StudioV1FlowEngagement.prototype['contact_channel_address'] = undefined;

/**
 * The SID of the Contact.
 * @member {String} contact_sid
 */
StudioV1FlowEngagement.prototype['contact_sid'] = undefined;

/**
 * The current state of the execution flow. As your flow executes, we save the state in a flow context. Your widgets can access the data in the flow context as variables, either in configuration fields or in text areas as variable substitution.
 * @member {Object} context
 */
StudioV1FlowEngagement.prototype['context'] = undefined;

/**
 * The date and time in GMT when the Engagement was created in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_created
 */
StudioV1FlowEngagement.prototype['date_created'] = undefined;

/**
 * The date and time in GMT when the Engagement was updated in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_updated
 */
StudioV1FlowEngagement.prototype['date_updated'] = undefined;

/**
 * The SID of the Flow.
 * @member {String} flow_sid
 */
StudioV1FlowEngagement.prototype['flow_sid'] = undefined;

/**
 * The URLs of the Engagement's nested resources.
 * @member {Object} links
 */
StudioV1FlowEngagement.prototype['links'] = undefined;

/**
 * The unique string that we created to identify the Engagement resource.
 * @member {String} sid
 */
StudioV1FlowEngagement.prototype['sid'] = undefined;

/**
 * @member {module:model/EngagementEnumStatus} status
 */
StudioV1FlowEngagement.prototype['status'] = undefined;

/**
 * The absolute URL of the resource.
 * @member {String} url
 */
StudioV1FlowEngagement.prototype['url'] = undefined;






export default StudioV1FlowEngagement;

