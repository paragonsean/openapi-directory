/**
 * Twilio - Studio
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.55.0
 * Contact: support@twilio.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStudio_v1_flow_engagement_step.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStudio_v1_flow_engagement_step::OAIStudio_v1_flow_engagement_step(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStudio_v1_flow_engagement_step::OAIStudio_v1_flow_engagement_step() {
    this->initializeModel();
}

OAIStudio_v1_flow_engagement_step::~OAIStudio_v1_flow_engagement_step() {}

void OAIStudio_v1_flow_engagement_step::initializeModel() {

    m_account_sid_isSet = false;
    m_account_sid_isValid = false;

    m_context_isSet = false;
    m_context_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_date_updated_isSet = false;
    m_date_updated_isValid = false;

    m_engagement_sid_isSet = false;
    m_engagement_sid_isValid = false;

    m_flow_sid_isSet = false;
    m_flow_sid_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_sid_isSet = false;
    m_sid_isValid = false;

    m_transitioned_from_isSet = false;
    m_transitioned_from_isValid = false;

    m_transitioned_to_isSet = false;
    m_transitioned_to_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIStudio_v1_flow_engagement_step::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStudio_v1_flow_engagement_step::fromJsonObject(QJsonObject json) {

    m_account_sid_isValid = ::OpenAPI::fromJsonValue(m_account_sid, json[QString("account_sid")]);
    m_account_sid_isSet = !json[QString("account_sid")].isNull() && m_account_sid_isValid;

    m_context_isValid = ::OpenAPI::fromJsonValue(m_context, json[QString("context")]);
    m_context_isSet = !json[QString("context")].isNull() && m_context_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_date_updated_isValid = ::OpenAPI::fromJsonValue(m_date_updated, json[QString("date_updated")]);
    m_date_updated_isSet = !json[QString("date_updated")].isNull() && m_date_updated_isValid;

    m_engagement_sid_isValid = ::OpenAPI::fromJsonValue(m_engagement_sid, json[QString("engagement_sid")]);
    m_engagement_sid_isSet = !json[QString("engagement_sid")].isNull() && m_engagement_sid_isValid;

    m_flow_sid_isValid = ::OpenAPI::fromJsonValue(m_flow_sid, json[QString("flow_sid")]);
    m_flow_sid_isSet = !json[QString("flow_sid")].isNull() && m_flow_sid_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_sid_isValid = ::OpenAPI::fromJsonValue(m_sid, json[QString("sid")]);
    m_sid_isSet = !json[QString("sid")].isNull() && m_sid_isValid;

    m_transitioned_from_isValid = ::OpenAPI::fromJsonValue(m_transitioned_from, json[QString("transitioned_from")]);
    m_transitioned_from_isSet = !json[QString("transitioned_from")].isNull() && m_transitioned_from_isValid;

    m_transitioned_to_isValid = ::OpenAPI::fromJsonValue(m_transitioned_to, json[QString("transitioned_to")]);
    m_transitioned_to_isSet = !json[QString("transitioned_to")].isNull() && m_transitioned_to_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIStudio_v1_flow_engagement_step::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStudio_v1_flow_engagement_step::asJsonObject() const {
    QJsonObject obj;
    if (m_account_sid_isSet) {
        obj.insert(QString("account_sid"), ::OpenAPI::toJsonValue(m_account_sid));
    }
    if (m_context_isSet) {
        obj.insert(QString("context"), ::OpenAPI::toJsonValue(m_context));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_date_updated_isSet) {
        obj.insert(QString("date_updated"), ::OpenAPI::toJsonValue(m_date_updated));
    }
    if (m_engagement_sid_isSet) {
        obj.insert(QString("engagement_sid"), ::OpenAPI::toJsonValue(m_engagement_sid));
    }
    if (m_flow_sid_isSet) {
        obj.insert(QString("flow_sid"), ::OpenAPI::toJsonValue(m_flow_sid));
    }
    if (m_links_isSet) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_sid_isSet) {
        obj.insert(QString("sid"), ::OpenAPI::toJsonValue(m_sid));
    }
    if (m_transitioned_from_isSet) {
        obj.insert(QString("transitioned_from"), ::OpenAPI::toJsonValue(m_transitioned_from));
    }
    if (m_transitioned_to_isSet) {
        obj.insert(QString("transitioned_to"), ::OpenAPI::toJsonValue(m_transitioned_to));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIStudio_v1_flow_engagement_step::getAccountSid() const {
    return m_account_sid;
}
void OAIStudio_v1_flow_engagement_step::setAccountSid(const QString &account_sid) {
    m_account_sid = account_sid;
    m_account_sid_isSet = true;
}

bool OAIStudio_v1_flow_engagement_step::is_account_sid_Set() const{
    return m_account_sid_isSet;
}

bool OAIStudio_v1_flow_engagement_step::is_account_sid_Valid() const{
    return m_account_sid_isValid;
}

QJsonValue OAIStudio_v1_flow_engagement_step::getContext() const {
    return m_context;
}
void OAIStudio_v1_flow_engagement_step::setContext(const QJsonValue &context) {
    m_context = context;
    m_context_isSet = true;
}

bool OAIStudio_v1_flow_engagement_step::is_context_Set() const{
    return m_context_isSet;
}

bool OAIStudio_v1_flow_engagement_step::is_context_Valid() const{
    return m_context_isValid;
}

QDateTime OAIStudio_v1_flow_engagement_step::getDateCreated() const {
    return m_date_created;
}
void OAIStudio_v1_flow_engagement_step::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIStudio_v1_flow_engagement_step::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIStudio_v1_flow_engagement_step::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QDateTime OAIStudio_v1_flow_engagement_step::getDateUpdated() const {
    return m_date_updated;
}
void OAIStudio_v1_flow_engagement_step::setDateUpdated(const QDateTime &date_updated) {
    m_date_updated = date_updated;
    m_date_updated_isSet = true;
}

bool OAIStudio_v1_flow_engagement_step::is_date_updated_Set() const{
    return m_date_updated_isSet;
}

bool OAIStudio_v1_flow_engagement_step::is_date_updated_Valid() const{
    return m_date_updated_isValid;
}

QString OAIStudio_v1_flow_engagement_step::getEngagementSid() const {
    return m_engagement_sid;
}
void OAIStudio_v1_flow_engagement_step::setEngagementSid(const QString &engagement_sid) {
    m_engagement_sid = engagement_sid;
    m_engagement_sid_isSet = true;
}

bool OAIStudio_v1_flow_engagement_step::is_engagement_sid_Set() const{
    return m_engagement_sid_isSet;
}

bool OAIStudio_v1_flow_engagement_step::is_engagement_sid_Valid() const{
    return m_engagement_sid_isValid;
}

QString OAIStudio_v1_flow_engagement_step::getFlowSid() const {
    return m_flow_sid;
}
void OAIStudio_v1_flow_engagement_step::setFlowSid(const QString &flow_sid) {
    m_flow_sid = flow_sid;
    m_flow_sid_isSet = true;
}

bool OAIStudio_v1_flow_engagement_step::is_flow_sid_Set() const{
    return m_flow_sid_isSet;
}

bool OAIStudio_v1_flow_engagement_step::is_flow_sid_Valid() const{
    return m_flow_sid_isValid;
}

OAIObject OAIStudio_v1_flow_engagement_step::getLinks() const {
    return m_links;
}
void OAIStudio_v1_flow_engagement_step::setLinks(const OAIObject &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIStudio_v1_flow_engagement_step::is_links_Set() const{
    return m_links_isSet;
}

bool OAIStudio_v1_flow_engagement_step::is_links_Valid() const{
    return m_links_isValid;
}

QString OAIStudio_v1_flow_engagement_step::getName() const {
    return m_name;
}
void OAIStudio_v1_flow_engagement_step::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIStudio_v1_flow_engagement_step::is_name_Set() const{
    return m_name_isSet;
}

bool OAIStudio_v1_flow_engagement_step::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIStudio_v1_flow_engagement_step::getSid() const {
    return m_sid;
}
void OAIStudio_v1_flow_engagement_step::setSid(const QString &sid) {
    m_sid = sid;
    m_sid_isSet = true;
}

bool OAIStudio_v1_flow_engagement_step::is_sid_Set() const{
    return m_sid_isSet;
}

bool OAIStudio_v1_flow_engagement_step::is_sid_Valid() const{
    return m_sid_isValid;
}

QString OAIStudio_v1_flow_engagement_step::getTransitionedFrom() const {
    return m_transitioned_from;
}
void OAIStudio_v1_flow_engagement_step::setTransitionedFrom(const QString &transitioned_from) {
    m_transitioned_from = transitioned_from;
    m_transitioned_from_isSet = true;
}

bool OAIStudio_v1_flow_engagement_step::is_transitioned_from_Set() const{
    return m_transitioned_from_isSet;
}

bool OAIStudio_v1_flow_engagement_step::is_transitioned_from_Valid() const{
    return m_transitioned_from_isValid;
}

QString OAIStudio_v1_flow_engagement_step::getTransitionedTo() const {
    return m_transitioned_to;
}
void OAIStudio_v1_flow_engagement_step::setTransitionedTo(const QString &transitioned_to) {
    m_transitioned_to = transitioned_to;
    m_transitioned_to_isSet = true;
}

bool OAIStudio_v1_flow_engagement_step::is_transitioned_to_Set() const{
    return m_transitioned_to_isSet;
}

bool OAIStudio_v1_flow_engagement_step::is_transitioned_to_Valid() const{
    return m_transitioned_to_isValid;
}

QString OAIStudio_v1_flow_engagement_step::getUrl() const {
    return m_url;
}
void OAIStudio_v1_flow_engagement_step::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIStudio_v1_flow_engagement_step::is_url_Set() const{
    return m_url_isSet;
}

bool OAIStudio_v1_flow_engagement_step::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIStudio_v1_flow_engagement_step::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_context_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_engagement_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flow_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_links_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transitioned_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transitioned_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStudio_v1_flow_engagement_step::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
