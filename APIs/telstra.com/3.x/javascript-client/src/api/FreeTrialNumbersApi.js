/**
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateTrialNumbersRequest from '../model/CreateTrialNumbersRequest';
import Errors from '../model/Errors';
import FreeTrialNumbers from '../model/FreeTrialNumbers';

/**
* FreeTrialNumbers service.
* @module api/FreeTrialNumbersApi
* @version 3.x
*/
export default class FreeTrialNumbersApi {

    /**
    * Constructs a new FreeTrialNumbersApi. 
    * @alias module:api/FreeTrialNumbersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createTrialNumbers operation.
     * @callback module:api/FreeTrialNumbersApi~createTrialNumbersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FreeTrialNumbers} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * create free trial number list
     * Your Free Trial Numbers are the 10 recipient mobile numbers that you can message during the Free Trial. The first five numbers you send an SMS/MMS to will automatically be added to your Free Trial Numbers list. After that, you can use this endpoint to register another five. Alternatively, you can use this endpoint to register all 10 numbers.    Use this endpoint to register a Free Trial Number to your account. To test out all the features that the trial has to offer, we recommend registering your own mobile number to your Free Trial Numbers list.   Note that you can only message mobile numbers that have been added to your Free Trial list and once registered, a Free Trial Number cannot be removed or replaced. 
     * @param {String} contentLanguage 
     * @param {String} authorization 
     * @param {String} accept 
     * @param {String} acceptCharset 
     * @param {String} contentType 
     * @param {module:model/CreateTrialNumbersRequest} createTrialNumbersRequest 
     * @param {Object} opts Optional parameters
     * @param {String} [telstraApiVersion] 
     * @param {module:api/FreeTrialNumbersApi~createTrialNumbersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FreeTrialNumbers}
     */
    createTrialNumbers(contentLanguage, authorization, accept, acceptCharset, contentType, createTrialNumbersRequest, opts, callback) {
      opts = opts || {};
      let postBody = createTrialNumbersRequest;
      // verify the required parameter 'contentLanguage' is set
      if (contentLanguage === undefined || contentLanguage === null) {
        throw new Error("Missing the required parameter 'contentLanguage' when calling createTrialNumbers");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling createTrialNumbers");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling createTrialNumbers");
      }
      // verify the required parameter 'acceptCharset' is set
      if (acceptCharset === undefined || acceptCharset === null) {
        throw new Error("Missing the required parameter 'acceptCharset' when calling createTrialNumbers");
      }
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling createTrialNumbers");
      }
      // verify the required parameter 'createTrialNumbersRequest' is set
      if (createTrialNumbersRequest === undefined || createTrialNumbersRequest === null) {
        throw new Error("Missing the required parameter 'createTrialNumbersRequest' when calling createTrialNumbers");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Telstra-api-version': opts['telstraApiVersion'],
        'Content-Language': contentLanguage,
        'Authorization': authorization,
        'Accept': accept,
        'Accept-Charset': acceptCharset,
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = ['bearer_auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = FreeTrialNumbers;
      return this.apiClient.callApi(
        '/free-trial-numbers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTrialNumbers operation.
     * @callback module:api/FreeTrialNumbersApi~getTrialNumbersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FreeTrialNumbers} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * get all free trial numbers
     * Use this endpoint to fetch the Free Trial Number(s) currently assigned to your account. These are the mobile numbers that you can message during the Free Trial.  If you're using a paid plan, there's no limit to the number of recipients that you can message, so you don't need to register Free Trial Numbers. 
     * @param {String} contentLanguage 
     * @param {String} authorization 
     * @param {String} accept 
     * @param {String} acceptCharset 
     * @param {String} contentType 
     * @param {Object} opts Optional parameters
     * @param {String} [telstraApiVersion] 
     * @param {module:api/FreeTrialNumbersApi~getTrialNumbersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FreeTrialNumbers}
     */
    getTrialNumbers(contentLanguage, authorization, accept, acceptCharset, contentType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'contentLanguage' is set
      if (contentLanguage === undefined || contentLanguage === null) {
        throw new Error("Missing the required parameter 'contentLanguage' when calling getTrialNumbers");
      }
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling getTrialNumbers");
      }
      // verify the required parameter 'accept' is set
      if (accept === undefined || accept === null) {
        throw new Error("Missing the required parameter 'accept' when calling getTrialNumbers");
      }
      // verify the required parameter 'acceptCharset' is set
      if (acceptCharset === undefined || acceptCharset === null) {
        throw new Error("Missing the required parameter 'acceptCharset' when calling getTrialNumbers");
      }
      // verify the required parameter 'contentType' is set
      if (contentType === undefined || contentType === null) {
        throw new Error("Missing the required parameter 'contentType' when calling getTrialNumbers");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Telstra-api-version': opts['telstraApiVersion'],
        'Content-Language': contentLanguage,
        'Authorization': authorization,
        'Accept': accept,
        'Accept-Charset': acceptCharset,
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = ['bearer_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FreeTrialNumbers;
      return this.apiClient.callApi(
        '/free-trial-numbers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
