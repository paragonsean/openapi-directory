/**
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AssignNumberRequest from './model/AssignNumberRequest';
import CreateTrialNumbersRequest from './model/CreateTrialNumbersRequest';
import CreateTrialNumbersRequestFreeTrialNumbers from './model/CreateTrialNumbersRequestFreeTrialNumbers';
import Error from './model/Error';
import Errors from './model/Errors';
import FreeTrialNumbers from './model/FreeTrialNumbers';
import GetMessages200Response from './model/GetMessages200Response';
import GetMessages200ResponsePaging from './model/GetMessages200ResponsePaging';
import GetNumbers200Response from './model/GetNumbers200Response';
import GetRecipientOptouts200Response from './model/GetRecipientOptouts200Response';
import GetReport200Response from './model/GetReport200Response';
import GetReports200Response from './model/GetReports200Response';
import GetReports200ResponseReportsInner from './model/GetReports200ResponseReportsInner';
import HealthCheck200Response from './model/HealthCheck200Response';
import MessageGet from './model/MessageGet';
import MessageSent from './model/MessageSent';
import MessageSentMessageId from './model/MessageSentMessageId';
import MessageSentTo from './model/MessageSentTo';
import MessageUpdate from './model/MessageUpdate';
import MessagesReport201Response from './model/MessagesReport201Response';
import MessagesReportRequest from './model/MessagesReportRequest';
import Multimedia from './model/Multimedia';
import MultimediaGet from './model/MultimediaGet';
import RecipientOptout from './model/RecipientOptout';
import SendMessagesRequest from './model/SendMessagesRequest';
import SendMessagesRequestTo from './model/SendMessagesRequestTo';
import UpdateMessageByIdRequest from './model/UpdateMessageByIdRequest';
import UpdateMessageTagsRequest from './model/UpdateMessageTagsRequest';
import UpdateNumberRequest from './model/UpdateNumberRequest';
import VirtualNumber from './model/VirtualNumber';
import FreeTrialNumbersApi from './api/FreeTrialNumbersApi';
import HealthCheckApi from './api/HealthCheckApi';
import MessagesApi from './api/MessagesApi';
import ReportsApi from './api/ReportsApi';
import VirtualNumbersApi from './api/VirtualNumbersApi';


/**
* Send and receive SMS &amp; MMS programmatically, leveraging Australia&#39;s leading mobile network. With Telstra&#39;s Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS &amp; MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MessagingApiV3X = require('index'); // See note below*.
* var xxxSvc = new MessagingApiV3X.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MessagingApiV3X.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MessagingApiV3X.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MessagingApiV3X.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 3.x
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AssignNumberRequest model constructor.
     * @property {module:model/AssignNumberRequest}
     */
    AssignNumberRequest,

    /**
     * The CreateTrialNumbersRequest model constructor.
     * @property {module:model/CreateTrialNumbersRequest}
     */
    CreateTrialNumbersRequest,

    /**
     * The CreateTrialNumbersRequestFreeTrialNumbers model constructor.
     * @property {module:model/CreateTrialNumbersRequestFreeTrialNumbers}
     */
    CreateTrialNumbersRequestFreeTrialNumbers,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The Errors model constructor.
     * @property {module:model/Errors}
     */
    Errors,

    /**
     * The FreeTrialNumbers model constructor.
     * @property {module:model/FreeTrialNumbers}
     */
    FreeTrialNumbers,

    /**
     * The GetMessages200Response model constructor.
     * @property {module:model/GetMessages200Response}
     */
    GetMessages200Response,

    /**
     * The GetMessages200ResponsePaging model constructor.
     * @property {module:model/GetMessages200ResponsePaging}
     */
    GetMessages200ResponsePaging,

    /**
     * The GetNumbers200Response model constructor.
     * @property {module:model/GetNumbers200Response}
     */
    GetNumbers200Response,

    /**
     * The GetRecipientOptouts200Response model constructor.
     * @property {module:model/GetRecipientOptouts200Response}
     */
    GetRecipientOptouts200Response,

    /**
     * The GetReport200Response model constructor.
     * @property {module:model/GetReport200Response}
     */
    GetReport200Response,

    /**
     * The GetReports200Response model constructor.
     * @property {module:model/GetReports200Response}
     */
    GetReports200Response,

    /**
     * The GetReports200ResponseReportsInner model constructor.
     * @property {module:model/GetReports200ResponseReportsInner}
     */
    GetReports200ResponseReportsInner,

    /**
     * The HealthCheck200Response model constructor.
     * @property {module:model/HealthCheck200Response}
     */
    HealthCheck200Response,

    /**
     * The MessageGet model constructor.
     * @property {module:model/MessageGet}
     */
    MessageGet,

    /**
     * The MessageSent model constructor.
     * @property {module:model/MessageSent}
     */
    MessageSent,

    /**
     * The MessageSentMessageId model constructor.
     * @property {module:model/MessageSentMessageId}
     */
    MessageSentMessageId,

    /**
     * The MessageSentTo model constructor.
     * @property {module:model/MessageSentTo}
     */
    MessageSentTo,

    /**
     * The MessageUpdate model constructor.
     * @property {module:model/MessageUpdate}
     */
    MessageUpdate,

    /**
     * The MessagesReport201Response model constructor.
     * @property {module:model/MessagesReport201Response}
     */
    MessagesReport201Response,

    /**
     * The MessagesReportRequest model constructor.
     * @property {module:model/MessagesReportRequest}
     */
    MessagesReportRequest,

    /**
     * The Multimedia model constructor.
     * @property {module:model/Multimedia}
     */
    Multimedia,

    /**
     * The MultimediaGet model constructor.
     * @property {module:model/MultimediaGet}
     */
    MultimediaGet,

    /**
     * The RecipientOptout model constructor.
     * @property {module:model/RecipientOptout}
     */
    RecipientOptout,

    /**
     * The SendMessagesRequest model constructor.
     * @property {module:model/SendMessagesRequest}
     */
    SendMessagesRequest,

    /**
     * The SendMessagesRequestTo model constructor.
     * @property {module:model/SendMessagesRequestTo}
     */
    SendMessagesRequestTo,

    /**
     * The UpdateMessageByIdRequest model constructor.
     * @property {module:model/UpdateMessageByIdRequest}
     */
    UpdateMessageByIdRequest,

    /**
     * The UpdateMessageTagsRequest model constructor.
     * @property {module:model/UpdateMessageTagsRequest}
     */
    UpdateMessageTagsRequest,

    /**
     * The UpdateNumberRequest model constructor.
     * @property {module:model/UpdateNumberRequest}
     */
    UpdateNumberRequest,

    /**
     * The VirtualNumber model constructor.
     * @property {module:model/VirtualNumber}
     */
    VirtualNumber,

    /**
    * The FreeTrialNumbersApi service constructor.
    * @property {module:api/FreeTrialNumbersApi}
    */
    FreeTrialNumbersApi,

    /**
    * The HealthCheckApi service constructor.
    * @property {module:api/HealthCheckApi}
    */
    HealthCheckApi,

    /**
    * The MessagesApi service constructor.
    * @property {module:api/MessagesApi}
    */
    MessagesApi,

    /**
    * The ReportsApi service constructor.
    * @property {module:api/ReportsApi}
    */
    ReportsApi,

    /**
    * The VirtualNumbersApi service constructor.
    * @property {module:api/VirtualNumbersApi}
    */
    VirtualNumbersApi
};
