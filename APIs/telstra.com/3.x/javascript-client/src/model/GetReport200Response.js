/**
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetReport200Response model module.
 * @module model/GetReport200Response
 * @version 3.x
 */
class GetReport200Response {
    /**
     * Constructs a new <code>GetReport200Response</code>.
     * @alias module:model/GetReport200Response
     */
    constructor() { 
        
        GetReport200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetReport200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetReport200Response} obj Optional instance to populate.
     * @return {module:model/GetReport200Response} The populated <code>GetReport200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetReport200Response();

            if (data.hasOwnProperty('reportId')) {
                obj['reportId'] = ApiClient.convertToType(data['reportId'], 'String');
            }
            if (data.hasOwnProperty('reportStatus')) {
                obj['reportStatus'] = ApiClient.convertToType(data['reportStatus'], 'String');
            }
            if (data.hasOwnProperty('reportUrl')) {
                obj['reportUrl'] = ApiClient.convertToType(data['reportUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetReport200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetReport200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['reportId'] && !(typeof data['reportId'] === 'string' || data['reportId'] instanceof String)) {
            throw new Error("Expected the field `reportId` to be a primitive type in the JSON string but got " + data['reportId']);
        }
        // ensure the json data is a string
        if (data['reportStatus'] && !(typeof data['reportStatus'] === 'string' || data['reportStatus'] instanceof String)) {
            throw new Error("Expected the field `reportStatus` to be a primitive type in the JSON string but got " + data['reportStatus']);
        }
        // ensure the json data is a string
        if (data['reportUrl'] && !(typeof data['reportUrl'] === 'string' || data['reportUrl'] instanceof String)) {
            throw new Error("Expected the field `reportUrl` to be a primitive type in the JSON string but got " + data['reportUrl']);
        }

        return true;
    }


}



/**
 * The UUID assigned to your report. 
 * @member {String} reportId
 */
GetReport200Response.prototype['reportId'] = undefined;

/**
 * The status of the report. It will be either:        * **queued** – the report is in the queue for generation.        * **completed** – the report is ready for download.        * **failed** – the report failed to generate. Please try again. 
 * @member {String} reportStatus
 */
GetReport200Response.prototype['reportStatus'] = undefined;

/**
 * Use this link to download your CSV file.
 * @member {String} reportUrl
 */
GetReport200Response.prototype['reportUrl'] = undefined;






export default GetReport200Response;

