/**
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateTrialNumbersRequestFreeTrialNumbers from './CreateTrialNumbersRequestFreeTrialNumbers';

/**
 * The CreateTrialNumbersRequest model module.
 * @module model/CreateTrialNumbersRequest
 * @version 3.x
 */
class CreateTrialNumbersRequest {
    /**
     * Constructs a new <code>CreateTrialNumbersRequest</code>.
     * @alias module:model/CreateTrialNumbersRequest
     * @param freeTrialNumbers {module:model/CreateTrialNumbersRequestFreeTrialNumbers} 
     */
    constructor(freeTrialNumbers) { 
        
        CreateTrialNumbersRequest.initialize(this, freeTrialNumbers);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, freeTrialNumbers) { 
        obj['freeTrialNumbers'] = freeTrialNumbers;
    }

    /**
     * Constructs a <code>CreateTrialNumbersRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateTrialNumbersRequest} obj Optional instance to populate.
     * @return {module:model/CreateTrialNumbersRequest} The populated <code>CreateTrialNumbersRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateTrialNumbersRequest();

            if (data.hasOwnProperty('freeTrialNumbers')) {
                obj['freeTrialNumbers'] = CreateTrialNumbersRequestFreeTrialNumbers.constructFromObject(data['freeTrialNumbers']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateTrialNumbersRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateTrialNumbersRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateTrialNumbersRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `freeTrialNumbers`
        if (data['freeTrialNumbers']) { // data not null
          CreateTrialNumbersRequestFreeTrialNumbers.validateJSON(data['freeTrialNumbers']);
        }

        return true;
    }


}

CreateTrialNumbersRequest.RequiredProperties = ["freeTrialNumbers"];

/**
 * @member {module:model/CreateTrialNumbersRequestFreeTrialNumbers} freeTrialNumbers
 */
CreateTrialNumbersRequest.prototype['freeTrialNumbers'] = undefined;






export default CreateTrialNumbersRequest;

