/**
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MessagingApiV3X);
  }
}(this, function(expect, MessagingApiV3X) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MessagingApiV3X.FreeTrialNumbers();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FreeTrialNumbers', function() {
    it('should create an instance of FreeTrialNumbers', function() {
      // uncomment below and update the code to test FreeTrialNumbers
      //var instance = new MessagingApiV3X.FreeTrialNumbers();
      //expect(instance).to.be.a(MessagingApiV3X.FreeTrialNumbers);
    });

    it('should have the property freeTrialNumbers (base name: "freeTrialNumbers")', function() {
      // uncomment below and update the code to test the property freeTrialNumbers
      //var instance = new MessagingApiV3X.FreeTrialNumbers();
      //expect(instance).to.be();
    });

  });

}));
