/**
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetReports_200_response_reports_inner.h
 *
 * 
 */

#ifndef OAIGetReports_200_response_reports_inner_H
#define OAIGetReports_200_response_reports_inner_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetReports_200_response_reports_inner : public OAIObject {
public:
    OAIGetReports_200_response_reports_inner();
    OAIGetReports_200_response_reports_inner(QString json);
    ~OAIGetReports_200_response_reports_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getReportExpiry() const;
    void setReportExpiry(const QDate &report_expiry);
    bool is_report_expiry_Set() const;
    bool is_report_expiry_Valid() const;

    QString getReportId() const;
    void setReportId(const QString &report_id);
    bool is_report_id_Set() const;
    bool is_report_id_Valid() const;

    QString getReportStatus() const;
    void setReportStatus(const QString &report_status);
    bool is_report_status_Set() const;
    bool is_report_status_Valid() const;

    QString getReportType() const;
    void setReportType(const QString &report_type);
    bool is_report_type_Set() const;
    bool is_report_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate m_report_expiry;
    bool m_report_expiry_isSet;
    bool m_report_expiry_isValid;

    QString m_report_id;
    bool m_report_id_isSet;
    bool m_report_id_isValid;

    QString m_report_status;
    bool m_report_status_isSet;
    bool m_report_status_isValid;

    QString m_report_type;
    bool m_report_type_isSet;
    bool m_report_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetReports_200_response_reports_inner)

#endif // OAIGetReports_200_response_reports_inner_H
