/**
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetRecipientOptouts_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetRecipientOptouts_200_response::OAIGetRecipientOptouts_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetRecipientOptouts_200_response::OAIGetRecipientOptouts_200_response() {
    this->initializeModel();
}

OAIGetRecipientOptouts_200_response::~OAIGetRecipientOptouts_200_response() {}

void OAIGetRecipientOptouts_200_response::initializeModel() {

    m_paging_isSet = false;
    m_paging_isValid = false;

    m_recipient_optouts_isSet = false;
    m_recipient_optouts_isValid = false;
}

void OAIGetRecipientOptouts_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetRecipientOptouts_200_response::fromJsonObject(QJsonObject json) {

    m_paging_isValid = ::OpenAPI::fromJsonValue(m_paging, json[QString("paging")]);
    m_paging_isSet = !json[QString("paging")].isNull() && m_paging_isValid;

    m_recipient_optouts_isValid = ::OpenAPI::fromJsonValue(m_recipient_optouts, json[QString("recipientOptouts")]);
    m_recipient_optouts_isSet = !json[QString("recipientOptouts")].isNull() && m_recipient_optouts_isValid;
}

QString OAIGetRecipientOptouts_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetRecipientOptouts_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_paging.isSet()) {
        obj.insert(QString("paging"), ::OpenAPI::toJsonValue(m_paging));
    }
    if (m_recipient_optouts.size() > 0) {
        obj.insert(QString("recipientOptouts"), ::OpenAPI::toJsonValue(m_recipient_optouts));
    }
    return obj;
}

OAIObject OAIGetRecipientOptouts_200_response::getPaging() const {
    return m_paging;
}
void OAIGetRecipientOptouts_200_response::setPaging(const OAIObject &paging) {
    m_paging = paging;
    m_paging_isSet = true;
}

bool OAIGetRecipientOptouts_200_response::is_paging_Set() const{
    return m_paging_isSet;
}

bool OAIGetRecipientOptouts_200_response::is_paging_Valid() const{
    return m_paging_isValid;
}

QList<OAIRecipient_optout> OAIGetRecipientOptouts_200_response::getRecipientOptouts() const {
    return m_recipient_optouts;
}
void OAIGetRecipientOptouts_200_response::setRecipientOptouts(const QList<OAIRecipient_optout> &recipient_optouts) {
    m_recipient_optouts = recipient_optouts;
    m_recipient_optouts_isSet = true;
}

bool OAIGetRecipientOptouts_200_response::is_recipient_optouts_Set() const{
    return m_recipient_optouts_isSet;
}

bool OAIGetRecipientOptouts_200_response::is_recipient_optouts_Valid() const{
    return m_recipient_optouts_isValid;
}

bool OAIGetRecipientOptouts_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_paging.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_optouts.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetRecipientOptouts_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
