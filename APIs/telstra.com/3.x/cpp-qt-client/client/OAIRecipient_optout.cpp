/**
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecipient_optout.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecipient_optout::OAIRecipient_optout(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecipient_optout::OAIRecipient_optout() {
    this->initializeModel();
}

OAIRecipient_optout::~OAIRecipient_optout() {}

void OAIRecipient_optout::initializeModel() {

    m_create_timestamp_isSet = false;
    m_create_timestamp_isValid = false;

    m_optout_number_isSet = false;
    m_optout_number_isValid = false;
}

void OAIRecipient_optout::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecipient_optout::fromJsonObject(QJsonObject json) {

    m_create_timestamp_isValid = ::OpenAPI::fromJsonValue(m_create_timestamp, json[QString("createTimestamp")]);
    m_create_timestamp_isSet = !json[QString("createTimestamp")].isNull() && m_create_timestamp_isValid;

    m_optout_number_isValid = ::OpenAPI::fromJsonValue(m_optout_number, json[QString("optoutNumber")]);
    m_optout_number_isSet = !json[QString("optoutNumber")].isNull() && m_optout_number_isValid;
}

QString OAIRecipient_optout::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecipient_optout::asJsonObject() const {
    QJsonObject obj;
    if (m_create_timestamp_isSet) {
        obj.insert(QString("createTimestamp"), ::OpenAPI::toJsonValue(m_create_timestamp));
    }
    if (m_optout_number_isSet) {
        obj.insert(QString("optoutNumber"), ::OpenAPI::toJsonValue(m_optout_number));
    }
    return obj;
}

QDateTime OAIRecipient_optout::getCreateTimestamp() const {
    return m_create_timestamp;
}
void OAIRecipient_optout::setCreateTimestamp(const QDateTime &create_timestamp) {
    m_create_timestamp = create_timestamp;
    m_create_timestamp_isSet = true;
}

bool OAIRecipient_optout::is_create_timestamp_Set() const{
    return m_create_timestamp_isSet;
}

bool OAIRecipient_optout::is_create_timestamp_Valid() const{
    return m_create_timestamp_isValid;
}

QString OAIRecipient_optout::getOptoutNumber() const {
    return m_optout_number;
}
void OAIRecipient_optout::setOptoutNumber(const QString &optout_number) {
    m_optout_number = optout_number;
    m_optout_number_isSet = true;
}

bool OAIRecipient_optout::is_optout_number_Set() const{
    return m_optout_number_isSet;
}

bool OAIRecipient_optout::is_optout_number_Valid() const{
    return m_optout_number_isValid;
}

bool OAIRecipient_optout::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_optout_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecipient_optout::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
