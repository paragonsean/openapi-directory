/**
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateNumber_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateNumber_request::OAIUpdateNumber_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateNumber_request::OAIUpdateNumber_request() {
    this->initializeModel();
}

OAIUpdateNumber_request::~OAIUpdateNumber_request() {}

void OAIUpdateNumber_request::initializeModel() {

    m_reply_callback_url_isSet = false;
    m_reply_callback_url_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIUpdateNumber_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateNumber_request::fromJsonObject(QJsonObject json) {

    m_reply_callback_url_isValid = ::OpenAPI::fromJsonValue(m_reply_callback_url, json[QString("replyCallbackUrl")]);
    m_reply_callback_url_isSet = !json[QString("replyCallbackUrl")].isNull() && m_reply_callback_url_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAIUpdateNumber_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateNumber_request::asJsonObject() const {
    QJsonObject obj;
    if (m_reply_callback_url_isSet) {
        obj.insert(QString("replyCallbackUrl"), ::OpenAPI::toJsonValue(m_reply_callback_url));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAIUpdateNumber_request::getReplyCallbackUrl() const {
    return m_reply_callback_url;
}
void OAIUpdateNumber_request::setReplyCallbackUrl(const QString &reply_callback_url) {
    m_reply_callback_url = reply_callback_url;
    m_reply_callback_url_isSet = true;
}

bool OAIUpdateNumber_request::is_reply_callback_url_Set() const{
    return m_reply_callback_url_isSet;
}

bool OAIUpdateNumber_request::is_reply_callback_url_Valid() const{
    return m_reply_callback_url_isValid;
}

QList<QString> OAIUpdateNumber_request::getTags() const {
    return m_tags;
}
void OAIUpdateNumber_request::setTags(const QList<QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIUpdateNumber_request::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIUpdateNumber_request::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIUpdateNumber_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_reply_callback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateNumber_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
