/*
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AssignNumberRequest;
import java.math.BigDecimal;
import org.openapitools.client.model.Errors;
import org.openapitools.client.model.GetNumbers200Response;
import org.openapitools.client.model.GetRecipientOptouts200Response;
import org.openapitools.client.model.UpdateNumberRequest;
import org.openapitools.client.model.VirtualNumber;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VirtualNumbersApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VirtualNumbersApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VirtualNumbersApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for assignNumber
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param assignNumberRequest  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> A 201 Created response means a Virtual Number has been assigned to your account. You can find this 10-digit number in the response body.  </td><td>  * Content-Language -  <br>  * Location -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | TAGS_ERR | Ensure you&#39;ve assigned no more than 10 tags, using up to 64 characters for each. | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). | | ACCOUNT_LIMIT_ERROR | Check the maximum number of Virtual Numbers that can be assigned to your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is POST. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 413 </td><td> Payload Too Large  | code | suggested_action | | :--- | :--- | | PAYLOAD_TOO_LARGE | Reduce body payload size |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call assignNumberCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, AssignNumberRequest assignNumberRequest, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = assignNumberRequest;

        // create path and map variables
        String localVarPath = "/virtual-numbers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (telstraApiVersion != null) {
            localVarHeaderParams.put("Telstra-api-version", localVarApiClient.parameterToString(telstraApiVersion));
        }

        if (contentLanguage != null) {
            localVarHeaderParams.put("Content-Language", localVarApiClient.parameterToString(contentLanguage));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        if (acceptCharset != null) {
            localVarHeaderParams.put("Accept-Charset", localVarApiClient.parameterToString(acceptCharset));
        }

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call assignNumberValidateBeforeCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, AssignNumberRequest assignNumberRequest, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling assignNumber(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling assignNumber(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling assignNumber(Async)");
        }

        // verify the required parameter 'acceptCharset' is set
        if (acceptCharset == null) {
            throw new ApiException("Missing the required parameter 'acceptCharset' when calling assignNumber(Async)");
        }

        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling assignNumber(Async)");
        }

        // verify the required parameter 'assignNumberRequest' is set
        if (assignNumberRequest == null) {
            throw new ApiException("Missing the required parameter 'assignNumberRequest' when calling assignNumber(Async)");
        }

        return assignNumberCall(contentLanguage, authorization, accept, acceptCharset, contentType, assignNumberRequest, telstraApiVersion, _callback);

    }

    /**
     * assign a virtual number
     * When a recipient receives your message, you can choose whether they&#39;ll see a privateNumber, Virtual Number or senderName (paid plans only) in the **from** field. If you want to use a Virtual Number, use this endpoint to assign one. Free Trial users can assign one Virtual Number, and those on a paid plan can assign up to 100.   Virtual Numbers that have not sent a message in 30 days (Free Trial) or sent/received a message in 18 months (paid plans) will be automatically unassigned from your account. You can check the **lastUse** date of your Virtual Number at any time using GET /virtual-numbers/{virtual-number}.  Note that Virtual Numbers used in v2 of the Messaging API cannot be used to send messages in v3. Please assign a new Virtual Number instead. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param assignNumberRequest  (required)
     * @param telstraApiVersion  (optional)
     * @return VirtualNumber
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> A 201 Created response means a Virtual Number has been assigned to your account. You can find this 10-digit number in the response body.  </td><td>  * Content-Language -  <br>  * Location -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | TAGS_ERR | Ensure you&#39;ve assigned no more than 10 tags, using up to 64 characters for each. | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). | | ACCOUNT_LIMIT_ERROR | Check the maximum number of Virtual Numbers that can be assigned to your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is POST. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 413 </td><td> Payload Too Large  | code | suggested_action | | :--- | :--- | | PAYLOAD_TOO_LARGE | Reduce body payload size |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public VirtualNumber assignNumber(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, AssignNumberRequest assignNumberRequest, String telstraApiVersion) throws ApiException {
        ApiResponse<VirtualNumber> localVarResp = assignNumberWithHttpInfo(contentLanguage, authorization, accept, acceptCharset, contentType, assignNumberRequest, telstraApiVersion);
        return localVarResp.getData();
    }

    /**
     * assign a virtual number
     * When a recipient receives your message, you can choose whether they&#39;ll see a privateNumber, Virtual Number or senderName (paid plans only) in the **from** field. If you want to use a Virtual Number, use this endpoint to assign one. Free Trial users can assign one Virtual Number, and those on a paid plan can assign up to 100.   Virtual Numbers that have not sent a message in 30 days (Free Trial) or sent/received a message in 18 months (paid plans) will be automatically unassigned from your account. You can check the **lastUse** date of your Virtual Number at any time using GET /virtual-numbers/{virtual-number}.  Note that Virtual Numbers used in v2 of the Messaging API cannot be used to send messages in v3. Please assign a new Virtual Number instead. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param assignNumberRequest  (required)
     * @param telstraApiVersion  (optional)
     * @return ApiResponse&lt;VirtualNumber&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> A 201 Created response means a Virtual Number has been assigned to your account. You can find this 10-digit number in the response body.  </td><td>  * Content-Language -  <br>  * Location -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | TAGS_ERR | Ensure you&#39;ve assigned no more than 10 tags, using up to 64 characters for each. | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). | | ACCOUNT_LIMIT_ERROR | Check the maximum number of Virtual Numbers that can be assigned to your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is POST. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 413 </td><td> Payload Too Large  | code | suggested_action | | :--- | :--- | | PAYLOAD_TOO_LARGE | Reduce body payload size |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<VirtualNumber> assignNumberWithHttpInfo(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, AssignNumberRequest assignNumberRequest, String telstraApiVersion) throws ApiException {
        okhttp3.Call localVarCall = assignNumberValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, assignNumberRequest, telstraApiVersion, null);
        Type localVarReturnType = new TypeToken<VirtualNumber>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * assign a virtual number (asynchronously)
     * When a recipient receives your message, you can choose whether they&#39;ll see a privateNumber, Virtual Number or senderName (paid plans only) in the **from** field. If you want to use a Virtual Number, use this endpoint to assign one. Free Trial users can assign one Virtual Number, and those on a paid plan can assign up to 100.   Virtual Numbers that have not sent a message in 30 days (Free Trial) or sent/received a message in 18 months (paid plans) will be automatically unassigned from your account. You can check the **lastUse** date of your Virtual Number at any time using GET /virtual-numbers/{virtual-number}.  Note that Virtual Numbers used in v2 of the Messaging API cannot be used to send messages in v3. Please assign a new Virtual Number instead. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param assignNumberRequest  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> A 201 Created response means a Virtual Number has been assigned to your account. You can find this 10-digit number in the response body.  </td><td>  * Content-Language -  <br>  * Location -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | TAGS_ERR | Ensure you&#39;ve assigned no more than 10 tags, using up to 64 characters for each. | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). | | ACCOUNT_LIMIT_ERROR | Check the maximum number of Virtual Numbers that can be assigned to your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is POST. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 413 </td><td> Payload Too Large  | code | suggested_action | | :--- | :--- | | PAYLOAD_TOO_LARGE | Reduce body payload size |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call assignNumberAsync(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, AssignNumberRequest assignNumberRequest, String telstraApiVersion, final ApiCallback<VirtualNumber> _callback) throws ApiException {

        okhttp3.Call localVarCall = assignNumberValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, assignNumberRequest, telstraApiVersion, _callback);
        Type localVarReturnType = new TypeToken<VirtualNumber>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteNumber
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> A 204 response means the Virtual Number has been successfully removed from your account.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. |  | FIELD_MISSING | Please supply all required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access Token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is DELETE. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call deleteNumberCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/virtual-numbers/{virtual-number}"
            .replace("{" + "virtual-number" + "}", localVarApiClient.escapeString(virtualNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (telstraApiVersion != null) {
            localVarHeaderParams.put("Telstra-api-version", localVarApiClient.parameterToString(telstraApiVersion));
        }

        if (contentLanguage != null) {
            localVarHeaderParams.put("Content-Language", localVarApiClient.parameterToString(contentLanguage));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        if (acceptCharset != null) {
            localVarHeaderParams.put("Accept-Charset", localVarApiClient.parameterToString(acceptCharset));
        }

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteNumberValidateBeforeCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling deleteNumber(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling deleteNumber(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling deleteNumber(Async)");
        }

        // verify the required parameter 'acceptCharset' is set
        if (acceptCharset == null) {
            throw new ApiException("Missing the required parameter 'acceptCharset' when calling deleteNumber(Async)");
        }

        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling deleteNumber(Async)");
        }

        // verify the required parameter 'virtualNumber' is set
        if (virtualNumber == null) {
            throw new ApiException("Missing the required parameter 'virtualNumber' when calling deleteNumber(Async)");
        }

        return deleteNumberCall(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, telstraApiVersion, _callback);

    }

    /**
     * delete a virtual number
     * Use **virtual-number** to remove a Virtual Number that&#39;s been assigned to your account. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param telstraApiVersion  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> A 204 response means the Virtual Number has been successfully removed from your account.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. |  | FIELD_MISSING | Please supply all required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access Token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is DELETE. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public void deleteNumber(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion) throws ApiException {
        deleteNumberWithHttpInfo(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, telstraApiVersion);
    }

    /**
     * delete a virtual number
     * Use **virtual-number** to remove a Virtual Number that&#39;s been assigned to your account. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param telstraApiVersion  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> A 204 response means the Virtual Number has been successfully removed from your account.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. |  | FIELD_MISSING | Please supply all required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access Token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is DELETE. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<Void> deleteNumberWithHttpInfo(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion) throws ApiException {
        okhttp3.Call localVarCall = deleteNumberValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, telstraApiVersion, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * delete a virtual number (asynchronously)
     * Use **virtual-number** to remove a Virtual Number that&#39;s been assigned to your account. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> A 204 response means the Virtual Number has been successfully removed from your account.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. |  | FIELD_MISSING | Please supply all required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access Token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is DELETE. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call deleteNumberAsync(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteNumberValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, telstraApiVersion, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for getNumbers
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param telstraApiVersion  (optional)
     * @param limit Tell us how many results you want us to return, up to a maximum of 50.  (optional, default to 10)
     * @param offset Use the offset to navigate between the response results. An offset of 0 will display the first page of results, and so on.  (optional, default to 0)
     * @param filter Filter your Virtual Numbers by tag or by number. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means your request has been successful. Your Virtual Number(s) will be returned in the response body.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getNumbersCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion, Integer limit, Integer offset, String filter, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/virtual-numbers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filter", filter));
        }

        if (telstraApiVersion != null) {
            localVarHeaderParams.put("Telstra-api-version", localVarApiClient.parameterToString(telstraApiVersion));
        }

        if (contentLanguage != null) {
            localVarHeaderParams.put("Content-Language", localVarApiClient.parameterToString(contentLanguage));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        if (acceptCharset != null) {
            localVarHeaderParams.put("Accept-Charset", localVarApiClient.parameterToString(acceptCharset));
        }

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getNumbersValidateBeforeCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion, Integer limit, Integer offset, String filter, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling getNumbers(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getNumbers(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling getNumbers(Async)");
        }

        // verify the required parameter 'acceptCharset' is set
        if (acceptCharset == null) {
            throw new ApiException("Missing the required parameter 'acceptCharset' when calling getNumbers(Async)");
        }

        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling getNumbers(Async)");
        }

        return getNumbersCall(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion, limit, offset, filter, _callback);

    }

    /**
     * fetch all virtual numbers
     * Use this endpoint to fetch all Virtual Numbers currently assigned to your account. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param telstraApiVersion  (optional)
     * @param limit Tell us how many results you want us to return, up to a maximum of 50.  (optional, default to 10)
     * @param offset Use the offset to navigate between the response results. An offset of 0 will display the first page of results, and so on.  (optional, default to 0)
     * @param filter Filter your Virtual Numbers by tag or by number. (optional)
     * @return GetNumbers200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means your request has been successful. Your Virtual Number(s) will be returned in the response body.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public GetNumbers200Response getNumbers(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion, Integer limit, Integer offset, String filter) throws ApiException {
        ApiResponse<GetNumbers200Response> localVarResp = getNumbersWithHttpInfo(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion, limit, offset, filter);
        return localVarResp.getData();
    }

    /**
     * fetch all virtual numbers
     * Use this endpoint to fetch all Virtual Numbers currently assigned to your account. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param telstraApiVersion  (optional)
     * @param limit Tell us how many results you want us to return, up to a maximum of 50.  (optional, default to 10)
     * @param offset Use the offset to navigate between the response results. An offset of 0 will display the first page of results, and so on.  (optional, default to 0)
     * @param filter Filter your Virtual Numbers by tag or by number. (optional)
     * @return ApiResponse&lt;GetNumbers200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means your request has been successful. Your Virtual Number(s) will be returned in the response body.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<GetNumbers200Response> getNumbersWithHttpInfo(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion, Integer limit, Integer offset, String filter) throws ApiException {
        okhttp3.Call localVarCall = getNumbersValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion, limit, offset, filter, null);
        Type localVarReturnType = new TypeToken<GetNumbers200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * fetch all virtual numbers (asynchronously)
     * Use this endpoint to fetch all Virtual Numbers currently assigned to your account. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param telstraApiVersion  (optional)
     * @param limit Tell us how many results you want us to return, up to a maximum of 50.  (optional, default to 10)
     * @param offset Use the offset to navigate between the response results. An offset of 0 will display the first page of results, and so on.  (optional, default to 0)
     * @param filter Filter your Virtual Numbers by tag or by number. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means your request has been successful. Your Virtual Number(s) will be returned in the response body.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getNumbersAsync(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion, Integer limit, Integer offset, String filter, final ApiCallback<GetNumbers200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getNumbersValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion, limit, offset, filter, _callback);
        Type localVarReturnType = new TypeToken<GetNumbers200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRecipientOptouts
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param telstraApiVersion  (optional)
     * @param limit Tell us how many results you want us to return, up to a maximum of 50.  (optional, default to 10)
     * @param offset Use the offset to navigate between the response results. An offset of 0 will display the first page of results, and so on.  (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_INVALID | Ensure the number is a 10-digit Australian mobile number in national format (e.g. 0412345678). | | FIELD_LENGTH_ERR | Ensure the number is 10 digits only (e.g. 0412345678). | | FIELD_MISSING | Please supply the number. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getRecipientOptoutsCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion, Integer limit, Integer offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/virtual-numbers/{virtual-number}/optouts"
            .replace("{" + "virtual-number" + "}", localVarApiClient.escapeString(virtualNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (telstraApiVersion != null) {
            localVarHeaderParams.put("Telstra-api-version", localVarApiClient.parameterToString(telstraApiVersion));
        }

        if (contentLanguage != null) {
            localVarHeaderParams.put("Content-Language", localVarApiClient.parameterToString(contentLanguage));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        if (acceptCharset != null) {
            localVarHeaderParams.put("Accept-Charset", localVarApiClient.parameterToString(acceptCharset));
        }

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRecipientOptoutsValidateBeforeCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion, Integer limit, Integer offset, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling getRecipientOptouts(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getRecipientOptouts(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling getRecipientOptouts(Async)");
        }

        // verify the required parameter 'acceptCharset' is set
        if (acceptCharset == null) {
            throw new ApiException("Missing the required parameter 'acceptCharset' when calling getRecipientOptouts(Async)");
        }

        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling getRecipientOptouts(Async)");
        }

        // verify the required parameter 'virtualNumber' is set
        if (virtualNumber == null) {
            throw new ApiException("Missing the required parameter 'virtualNumber' when calling getRecipientOptouts(Async)");
        }

        return getRecipientOptoutsCall(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, telstraApiVersion, limit, offset, _callback);

    }

    /**
     * Get recipient optouts list
     * Use this endpoint to fetch any mobile number(s) that have opted out of receiving messages from a Virtual Number assigned to your account.  Recipients can opt out at any time by sending a message with industry standard keywords such as STOP, STOPALL, UNSUBSCRIBE, QUIT, END and CANCEL. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param telstraApiVersion  (optional)
     * @param limit Tell us how many results you want us to return, up to a maximum of 50.  (optional, default to 10)
     * @param offset Use the offset to navigate between the response results. An offset of 0 will display the first page of results, and so on.  (optional, default to 0)
     * @return GetRecipientOptouts200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_INVALID | Ensure the number is a 10-digit Australian mobile number in national format (e.g. 0412345678). | | FIELD_LENGTH_ERR | Ensure the number is 10 digits only (e.g. 0412345678). | | FIELD_MISSING | Please supply the number. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public GetRecipientOptouts200Response getRecipientOptouts(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion, Integer limit, Integer offset) throws ApiException {
        ApiResponse<GetRecipientOptouts200Response> localVarResp = getRecipientOptoutsWithHttpInfo(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, telstraApiVersion, limit, offset);
        return localVarResp.getData();
    }

    /**
     * Get recipient optouts list
     * Use this endpoint to fetch any mobile number(s) that have opted out of receiving messages from a Virtual Number assigned to your account.  Recipients can opt out at any time by sending a message with industry standard keywords such as STOP, STOPALL, UNSUBSCRIBE, QUIT, END and CANCEL. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param telstraApiVersion  (optional)
     * @param limit Tell us how many results you want us to return, up to a maximum of 50.  (optional, default to 10)
     * @param offset Use the offset to navigate between the response results. An offset of 0 will display the first page of results, and so on.  (optional, default to 0)
     * @return ApiResponse&lt;GetRecipientOptouts200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_INVALID | Ensure the number is a 10-digit Australian mobile number in national format (e.g. 0412345678). | | FIELD_LENGTH_ERR | Ensure the number is 10 digits only (e.g. 0412345678). | | FIELD_MISSING | Please supply the number. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<GetRecipientOptouts200Response> getRecipientOptoutsWithHttpInfo(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion, Integer limit, Integer offset) throws ApiException {
        okhttp3.Call localVarCall = getRecipientOptoutsValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, telstraApiVersion, limit, offset, null);
        Type localVarReturnType = new TypeToken<GetRecipientOptouts200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get recipient optouts list (asynchronously)
     * Use this endpoint to fetch any mobile number(s) that have opted out of receiving messages from a Virtual Number assigned to your account.  Recipients can opt out at any time by sending a message with industry standard keywords such as STOP, STOPALL, UNSUBSCRIBE, QUIT, END and CANCEL. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param telstraApiVersion  (optional)
     * @param limit Tell us how many results you want us to return, up to a maximum of 50.  (optional, default to 10)
     * @param offset Use the offset to navigate between the response results. An offset of 0 will display the first page of results, and so on.  (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Response </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_INVALID | Ensure the number is a 10-digit Australian mobile number in national format (e.g. 0412345678). | | FIELD_LENGTH_ERR | Ensure the number is 10 digits only (e.g. 0412345678). | | FIELD_MISSING | Please supply the number. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getRecipientOptoutsAsync(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion, Integer limit, Integer offset, final ApiCallback<GetRecipientOptouts200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRecipientOptoutsValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, telstraApiVersion, limit, offset, _callback);
        Type localVarReturnType = new TypeToken<GetRecipientOptouts200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getVirtualNumber
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means your request has been successful.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_INVALID | Ensure the number is a 10-digit Australian mobile number in national format (e.g. 0412345678). | | FIELD_LENGTH_ERR | Ensure the number is 10 digits only (e.g. 0412345678). |  | FIELD_MISSING | Please supply the number. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getVirtualNumberCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/virtual-numbers/{virtual-number}"
            .replace("{" + "virtual-number" + "}", localVarApiClient.escapeString(virtualNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (telstraApiVersion != null) {
            localVarHeaderParams.put("Telstra-api-version", localVarApiClient.parameterToString(telstraApiVersion));
        }

        if (contentLanguage != null) {
            localVarHeaderParams.put("Content-Language", localVarApiClient.parameterToString(contentLanguage));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        if (acceptCharset != null) {
            localVarHeaderParams.put("Accept-Charset", localVarApiClient.parameterToString(acceptCharset));
        }

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getVirtualNumberValidateBeforeCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling getVirtualNumber(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getVirtualNumber(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling getVirtualNumber(Async)");
        }

        // verify the required parameter 'acceptCharset' is set
        if (acceptCharset == null) {
            throw new ApiException("Missing the required parameter 'acceptCharset' when calling getVirtualNumber(Async)");
        }

        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling getVirtualNumber(Async)");
        }

        // verify the required parameter 'virtualNumber' is set
        if (virtualNumber == null) {
            throw new ApiException("Missing the required parameter 'virtualNumber' when calling getVirtualNumber(Async)");
        }

        return getVirtualNumberCall(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, telstraApiVersion, _callback);

    }

    /**
     * fetch a virtual number
     * Fetch the tags, replyCallbackUrl and lastUse date for a Virtual Number.
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param telstraApiVersion  (optional)
     * @return VirtualNumber
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means your request has been successful.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_INVALID | Ensure the number is a 10-digit Australian mobile number in national format (e.g. 0412345678). | | FIELD_LENGTH_ERR | Ensure the number is 10 digits only (e.g. 0412345678). |  | FIELD_MISSING | Please supply the number. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public VirtualNumber getVirtualNumber(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion) throws ApiException {
        ApiResponse<VirtualNumber> localVarResp = getVirtualNumberWithHttpInfo(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, telstraApiVersion);
        return localVarResp.getData();
    }

    /**
     * fetch a virtual number
     * Fetch the tags, replyCallbackUrl and lastUse date for a Virtual Number.
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param telstraApiVersion  (optional)
     * @return ApiResponse&lt;VirtualNumber&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means your request has been successful.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_INVALID | Ensure the number is a 10-digit Australian mobile number in national format (e.g. 0412345678). | | FIELD_LENGTH_ERR | Ensure the number is 10 digits only (e.g. 0412345678). |  | FIELD_MISSING | Please supply the number. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<VirtualNumber> getVirtualNumberWithHttpInfo(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion) throws ApiException {
        okhttp3.Call localVarCall = getVirtualNumberValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, telstraApiVersion, null);
        Type localVarReturnType = new TypeToken<VirtualNumber>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * fetch a virtual number (asynchronously)
     * Fetch the tags, replyCallbackUrl and lastUse date for a Virtual Number.
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means your request has been successful.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_INVALID | Ensure the number is a 10-digit Australian mobile number in national format (e.g. 0412345678). | | FIELD_LENGTH_ERR | Ensure the number is 10 digits only (e.g. 0412345678). |  | FIELD_MISSING | Please supply the number. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getVirtualNumberAsync(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, String telstraApiVersion, final ApiCallback<VirtualNumber> _callback) throws ApiException {

        okhttp3.Call localVarCall = getVirtualNumberValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, telstraApiVersion, _callback);
        Type localVarReturnType = new TypeToken<VirtualNumber>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateNumber
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param updateNumberRequest  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means metadata for the Virtual Number has been successfully updated.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | TAGS_ERR | Ensure you&#39;ve assigned no more than 10 tags, using up to 64 characters for each. | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_LENGTH_ERR | Check the field is within character limits. |  | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Please supply all required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access Token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is PUT. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 413 </td><td> Payload Too Large  | code | suggested_action | | :--- | :--- | | PAYLOAD_TOO_LARGE | Reduce body payload size |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call updateNumberCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, UpdateNumberRequest updateNumberRequest, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = updateNumberRequest;

        // create path and map variables
        String localVarPath = "/virtual-numbers/{virtual-number}"
            .replace("{" + "virtual-number" + "}", localVarApiClient.escapeString(virtualNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (telstraApiVersion != null) {
            localVarHeaderParams.put("Telstra-api-version", localVarApiClient.parameterToString(telstraApiVersion));
        }

        if (contentLanguage != null) {
            localVarHeaderParams.put("Content-Language", localVarApiClient.parameterToString(contentLanguage));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        if (acceptCharset != null) {
            localVarHeaderParams.put("Accept-Charset", localVarApiClient.parameterToString(acceptCharset));
        }

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateNumberValidateBeforeCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, UpdateNumberRequest updateNumberRequest, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling updateNumber(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling updateNumber(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling updateNumber(Async)");
        }

        // verify the required parameter 'acceptCharset' is set
        if (acceptCharset == null) {
            throw new ApiException("Missing the required parameter 'acceptCharset' when calling updateNumber(Async)");
        }

        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling updateNumber(Async)");
        }

        // verify the required parameter 'virtualNumber' is set
        if (virtualNumber == null) {
            throw new ApiException("Missing the required parameter 'virtualNumber' when calling updateNumber(Async)");
        }

        // verify the required parameter 'updateNumberRequest' is set
        if (updateNumberRequest == null) {
            throw new ApiException("Missing the required parameter 'updateNumberRequest' when calling updateNumber(Async)");
        }

        return updateNumberCall(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, updateNumberRequest, telstraApiVersion, _callback);

    }

    /**
     * update a virtual number
     * Use **virtual-number** to update the tags and/or replyCallbackUrl of a Virtual Number.  This request body will override the original POST/ virtual-numbers call. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param updateNumberRequest  (required)
     * @param telstraApiVersion  (optional)
     * @return VirtualNumber
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means metadata for the Virtual Number has been successfully updated.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | TAGS_ERR | Ensure you&#39;ve assigned no more than 10 tags, using up to 64 characters for each. | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_LENGTH_ERR | Check the field is within character limits. |  | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Please supply all required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access Token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is PUT. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 413 </td><td> Payload Too Large  | code | suggested_action | | :--- | :--- | | PAYLOAD_TOO_LARGE | Reduce body payload size |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public VirtualNumber updateNumber(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, UpdateNumberRequest updateNumberRequest, String telstraApiVersion) throws ApiException {
        ApiResponse<VirtualNumber> localVarResp = updateNumberWithHttpInfo(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, updateNumberRequest, telstraApiVersion);
        return localVarResp.getData();
    }

    /**
     * update a virtual number
     * Use **virtual-number** to update the tags and/or replyCallbackUrl of a Virtual Number.  This request body will override the original POST/ virtual-numbers call. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param updateNumberRequest  (required)
     * @param telstraApiVersion  (optional)
     * @return ApiResponse&lt;VirtualNumber&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means metadata for the Virtual Number has been successfully updated.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | TAGS_ERR | Ensure you&#39;ve assigned no more than 10 tags, using up to 64 characters for each. | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_LENGTH_ERR | Check the field is within character limits. |  | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Please supply all required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access Token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is PUT. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 413 </td><td> Payload Too Large  | code | suggested_action | | :--- | :--- | | PAYLOAD_TOO_LARGE | Reduce body payload size |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<VirtualNumber> updateNumberWithHttpInfo(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, UpdateNumberRequest updateNumberRequest, String telstraApiVersion) throws ApiException {
        okhttp3.Call localVarCall = updateNumberValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, updateNumberRequest, telstraApiVersion, null);
        Type localVarReturnType = new TypeToken<VirtualNumber>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * update a virtual number (asynchronously)
     * Use **virtual-number** to update the tags and/or replyCallbackUrl of a Virtual Number.  This request body will override the original POST/ virtual-numbers call. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param virtualNumber Write the Virtual Number here, using national format (e.g. 0412345678).  (required)
     * @param updateNumberRequest  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means metadata for the Virtual Number has been successfully updated.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | TAGS_ERR | Ensure you&#39;ve assigned no more than 10 tags, using up to 64 characters for each. | | VIRTUAL_NUM_INVALID | Check the number is a valid Virtual Number. | | VIRTUAL_NUM_UNASSIGNED | Check the number is assigned to your account. | | FIELD_LENGTH_ERR | Check the field is within character limits. |  | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Please supply all required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access Token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | VIRTUAL_NUM_UNKNOWN | Check the number is a valid Virtual Number. | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is PUT. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 413 </td><td> Payload Too Large  | code | suggested_action | | :--- | :--- | | PAYLOAD_TOO_LARGE | Reduce body payload size |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call updateNumberAsync(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String virtualNumber, UpdateNumberRequest updateNumberRequest, String telstraApiVersion, final ApiCallback<VirtualNumber> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateNumberValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, virtualNumber, updateNumberRequest, telstraApiVersion, _callback);
        Type localVarReturnType = new TypeToken<VirtualNumber>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
