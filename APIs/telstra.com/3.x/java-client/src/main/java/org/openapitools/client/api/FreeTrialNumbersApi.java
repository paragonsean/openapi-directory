/*
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.math.BigDecimal;
import org.openapitools.client.model.CreateTrialNumbersRequest;
import org.openapitools.client.model.Errors;
import org.openapitools.client.model.FreeTrialNumbers;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class FreeTrialNumbersApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public FreeTrialNumbersApi() {
        this(Configuration.getDefaultApiClient());
    }

    public FreeTrialNumbersApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createTrialNumbers
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param createTrialNumbersRequest  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> A 201 OK response means your request has been successful. Your registered Free Trial Number(s) will be returned in the response.  </td><td>  * Content-Language -  <br>  * Location -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | FREE_TRIAL_INTERNATIONAL_ERR | Move to a paid plan to send a message to an international destination. |  | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). | | ACCOUNT_LIMIT_ERROR | You&#39;ve reached the maximum quota of Free Trial Numbers that can be registered to your account. Upgrade to a paid plan to send a message to this recipient.   |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | FREE_TRIAL_ERR | This call is only applicable to Free Trial users. Check if the call is required. | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is POST. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 413 </td><td> Payload Too Large  | code | suggested_action | | :--- | :--- | | PAYLOAD_TOO_LARGE | Reduce body payload size |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call createTrialNumbersCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, CreateTrialNumbersRequest createTrialNumbersRequest, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createTrialNumbersRequest;

        // create path and map variables
        String localVarPath = "/free-trial-numbers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (telstraApiVersion != null) {
            localVarHeaderParams.put("Telstra-api-version", localVarApiClient.parameterToString(telstraApiVersion));
        }

        if (contentLanguage != null) {
            localVarHeaderParams.put("Content-Language", localVarApiClient.parameterToString(contentLanguage));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        if (acceptCharset != null) {
            localVarHeaderParams.put("Accept-Charset", localVarApiClient.parameterToString(acceptCharset));
        }

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createTrialNumbersValidateBeforeCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, CreateTrialNumbersRequest createTrialNumbersRequest, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling createTrialNumbers(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling createTrialNumbers(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling createTrialNumbers(Async)");
        }

        // verify the required parameter 'acceptCharset' is set
        if (acceptCharset == null) {
            throw new ApiException("Missing the required parameter 'acceptCharset' when calling createTrialNumbers(Async)");
        }

        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling createTrialNumbers(Async)");
        }

        // verify the required parameter 'createTrialNumbersRequest' is set
        if (createTrialNumbersRequest == null) {
            throw new ApiException("Missing the required parameter 'createTrialNumbersRequest' when calling createTrialNumbers(Async)");
        }

        return createTrialNumbersCall(contentLanguage, authorization, accept, acceptCharset, contentType, createTrialNumbersRequest, telstraApiVersion, _callback);

    }

    /**
     * create free trial number list
     * Your Free Trial Numbers are the 10 recipient mobile numbers that you can message during the Free Trial. The first five numbers you send an SMS/MMS to will automatically be added to your Free Trial Numbers list. After that, you can use this endpoint to register another five. Alternatively, you can use this endpoint to register all 10 numbers.    Use this endpoint to register a Free Trial Number to your account. To test out all the features that the trial has to offer, we recommend registering your own mobile number to your Free Trial Numbers list.   Note that you can only message mobile numbers that have been added to your Free Trial list and once registered, a Free Trial Number cannot be removed or replaced. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param createTrialNumbersRequest  (required)
     * @param telstraApiVersion  (optional)
     * @return FreeTrialNumbers
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> A 201 OK response means your request has been successful. Your registered Free Trial Number(s) will be returned in the response.  </td><td>  * Content-Language -  <br>  * Location -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | FREE_TRIAL_INTERNATIONAL_ERR | Move to a paid plan to send a message to an international destination. |  | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). | | ACCOUNT_LIMIT_ERROR | You&#39;ve reached the maximum quota of Free Trial Numbers that can be registered to your account. Upgrade to a paid plan to send a message to this recipient.   |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | FREE_TRIAL_ERR | This call is only applicable to Free Trial users. Check if the call is required. | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is POST. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 413 </td><td> Payload Too Large  | code | suggested_action | | :--- | :--- | | PAYLOAD_TOO_LARGE | Reduce body payload size |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public FreeTrialNumbers createTrialNumbers(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, CreateTrialNumbersRequest createTrialNumbersRequest, String telstraApiVersion) throws ApiException {
        ApiResponse<FreeTrialNumbers> localVarResp = createTrialNumbersWithHttpInfo(contentLanguage, authorization, accept, acceptCharset, contentType, createTrialNumbersRequest, telstraApiVersion);
        return localVarResp.getData();
    }

    /**
     * create free trial number list
     * Your Free Trial Numbers are the 10 recipient mobile numbers that you can message during the Free Trial. The first five numbers you send an SMS/MMS to will automatically be added to your Free Trial Numbers list. After that, you can use this endpoint to register another five. Alternatively, you can use this endpoint to register all 10 numbers.    Use this endpoint to register a Free Trial Number to your account. To test out all the features that the trial has to offer, we recommend registering your own mobile number to your Free Trial Numbers list.   Note that you can only message mobile numbers that have been added to your Free Trial list and once registered, a Free Trial Number cannot be removed or replaced. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param createTrialNumbersRequest  (required)
     * @param telstraApiVersion  (optional)
     * @return ApiResponse&lt;FreeTrialNumbers&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> A 201 OK response means your request has been successful. Your registered Free Trial Number(s) will be returned in the response.  </td><td>  * Content-Language -  <br>  * Location -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | FREE_TRIAL_INTERNATIONAL_ERR | Move to a paid plan to send a message to an international destination. |  | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). | | ACCOUNT_LIMIT_ERROR | You&#39;ve reached the maximum quota of Free Trial Numbers that can be registered to your account. Upgrade to a paid plan to send a message to this recipient.   |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | FREE_TRIAL_ERR | This call is only applicable to Free Trial users. Check if the call is required. | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is POST. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 413 </td><td> Payload Too Large  | code | suggested_action | | :--- | :--- | | PAYLOAD_TOO_LARGE | Reduce body payload size |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<FreeTrialNumbers> createTrialNumbersWithHttpInfo(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, CreateTrialNumbersRequest createTrialNumbersRequest, String telstraApiVersion) throws ApiException {
        okhttp3.Call localVarCall = createTrialNumbersValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, createTrialNumbersRequest, telstraApiVersion, null);
        Type localVarReturnType = new TypeToken<FreeTrialNumbers>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * create free trial number list (asynchronously)
     * Your Free Trial Numbers are the 10 recipient mobile numbers that you can message during the Free Trial. The first five numbers you send an SMS/MMS to will automatically be added to your Free Trial Numbers list. After that, you can use this endpoint to register another five. Alternatively, you can use this endpoint to register all 10 numbers.    Use this endpoint to register a Free Trial Number to your account. To test out all the features that the trial has to offer, we recommend registering your own mobile number to your Free Trial Numbers list.   Note that you can only message mobile numbers that have been added to your Free Trial list and once registered, a Free Trial Number cannot be removed or replaced. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param createTrialNumbersRequest  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> A 201 OK response means your request has been successful. Your registered Free Trial Number(s) will be returned in the response.  </td><td>  * Content-Language -  <br>  * Location -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | FREE_TRIAL_INTERNATIONAL_ERR | Move to a paid plan to send a message to an international destination. |  | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). | | ACCOUNT_LIMIT_ERROR | You&#39;ve reached the maximum quota of Free Trial Numbers that can be registered to your account. Upgrade to a paid plan to send a message to this recipient.   |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | FREE_TRIAL_ERR | This call is only applicable to Free Trial users. Check if the call is required. | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is POST. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 413 </td><td> Payload Too Large  | code | suggested_action | | :--- | :--- | | PAYLOAD_TOO_LARGE | Reduce body payload size |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call createTrialNumbersAsync(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, CreateTrialNumbersRequest createTrialNumbersRequest, String telstraApiVersion, final ApiCallback<FreeTrialNumbers> _callback) throws ApiException {

        okhttp3.Call localVarCall = createTrialNumbersValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, createTrialNumbersRequest, telstraApiVersion, _callback);
        Type localVarReturnType = new TypeToken<FreeTrialNumbers>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getTrialNumbers
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means your request has been successful. Your Free Trial Number(s) will be returned in the response body.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | FREE_TRIAL_ERR | This call is only applicable to Free Trial users. Check if the call is required. | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getTrialNumbersCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/free-trial-numbers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (telstraApiVersion != null) {
            localVarHeaderParams.put("Telstra-api-version", localVarApiClient.parameterToString(telstraApiVersion));
        }

        if (contentLanguage != null) {
            localVarHeaderParams.put("Content-Language", localVarApiClient.parameterToString(contentLanguage));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        if (acceptCharset != null) {
            localVarHeaderParams.put("Accept-Charset", localVarApiClient.parameterToString(acceptCharset));
        }

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getTrialNumbersValidateBeforeCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling getTrialNumbers(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getTrialNumbers(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling getTrialNumbers(Async)");
        }

        // verify the required parameter 'acceptCharset' is set
        if (acceptCharset == null) {
            throw new ApiException("Missing the required parameter 'acceptCharset' when calling getTrialNumbers(Async)");
        }

        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling getTrialNumbers(Async)");
        }

        return getTrialNumbersCall(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion, _callback);

    }

    /**
     * get all free trial numbers
     * Use this endpoint to fetch the Free Trial Number(s) currently assigned to your account. These are the mobile numbers that you can message during the Free Trial.  If you&#39;re using a paid plan, there&#39;s no limit to the number of recipients that you can message, so you don&#39;t need to register Free Trial Numbers. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param telstraApiVersion  (optional)
     * @return FreeTrialNumbers
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means your request has been successful. Your Free Trial Number(s) will be returned in the response body.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | FREE_TRIAL_ERR | This call is only applicable to Free Trial users. Check if the call is required. | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public FreeTrialNumbers getTrialNumbers(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion) throws ApiException {
        ApiResponse<FreeTrialNumbers> localVarResp = getTrialNumbersWithHttpInfo(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion);
        return localVarResp.getData();
    }

    /**
     * get all free trial numbers
     * Use this endpoint to fetch the Free Trial Number(s) currently assigned to your account. These are the mobile numbers that you can message during the Free Trial.  If you&#39;re using a paid plan, there&#39;s no limit to the number of recipients that you can message, so you don&#39;t need to register Free Trial Numbers. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param telstraApiVersion  (optional)
     * @return ApiResponse&lt;FreeTrialNumbers&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means your request has been successful. Your Free Trial Number(s) will be returned in the response body.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | FREE_TRIAL_ERR | This call is only applicable to Free Trial users. Check if the call is required. | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<FreeTrialNumbers> getTrialNumbersWithHttpInfo(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion) throws ApiException {
        okhttp3.Call localVarCall = getTrialNumbersValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion, null);
        Type localVarReturnType = new TypeToken<FreeTrialNumbers>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * get all free trial numbers (asynchronously)
     * Use this endpoint to fetch the Free Trial Number(s) currently assigned to your account. These are the mobile numbers that you can message during the Free Trial.  If you&#39;re using a paid plan, there&#39;s no limit to the number of recipients that you can message, so you don&#39;t need to register Free Trial Numbers. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means your request has been successful. Your Free Trial Number(s) will be returned in the response body.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | ACCOUNT_NOT_LINKED | Check you&#39;ve registered for the Messaging API [here](https://dev.telstra.com). |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | FREE_TRIAL_ERR | This call is only applicable to Free Trial users. Check if the call is required. | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the API status page to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the API [status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the API [status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getTrialNumbersAsync(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion, final ApiCallback<FreeTrialNumbers> _callback) throws ApiException {

        okhttp3.Call localVarCall = getTrialNumbersValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion, _callback);
        Type localVarReturnType = new TypeToken<FreeTrialNumbers>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
