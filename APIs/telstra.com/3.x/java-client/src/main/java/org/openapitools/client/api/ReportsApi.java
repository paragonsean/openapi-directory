/*
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.math.BigDecimal;
import org.openapitools.client.model.Errors;
import org.openapitools.client.model.GetReport200Response;
import org.openapitools.client.model.GetReports200Response;
import org.openapitools.client.model.MessagesReport201Response;
import org.openapitools.client.model.MessagesReportRequest;
import java.util.UUID;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ReportsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ReportsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ReportsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getReport
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param reportId Use the reportId returned in the POST /reports/{reportType} response.  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means the call has been successful. Your download link (reportUrl) will be returned in the response.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the [API status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getReportCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, UUID reportId, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/reports/{reportId}"
            .replace("{" + "reportId" + "}", localVarApiClient.escapeString(reportId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (telstraApiVersion != null) {
            localVarHeaderParams.put("Telstra-api-version", localVarApiClient.parameterToString(telstraApiVersion));
        }

        if (contentLanguage != null) {
            localVarHeaderParams.put("Content-Language", localVarApiClient.parameterToString(contentLanguage));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        if (acceptCharset != null) {
            localVarHeaderParams.put("Accept-Charset", localVarApiClient.parameterToString(acceptCharset));
        }

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getReportValidateBeforeCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, UUID reportId, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling getReport(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getReport(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling getReport(Async)");
        }

        // verify the required parameter 'acceptCharset' is set
        if (acceptCharset == null) {
            throw new ApiException("Missing the required parameter 'acceptCharset' when calling getReport(Async)");
        }

        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling getReport(Async)");
        }

        // verify the required parameter 'reportId' is set
        if (reportId == null) {
            throw new ApiException("Missing the required parameter 'reportId' when calling getReport(Async)");
        }

        return getReportCall(contentLanguage, authorization, accept, acceptCharset, contentType, reportId, telstraApiVersion, _callback);

    }

    /**
     * fetch a specific report
     * Fetch a download link for a report generated with POST /reports/{reportId} using the **reportId** returned in the response. Once ready, your report will be available for download for one week. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param reportId Use the reportId returned in the POST /reports/{reportType} response.  (required)
     * @param telstraApiVersion  (optional)
     * @return GetReport200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means the call has been successful. Your download link (reportUrl) will be returned in the response.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the [API status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public GetReport200Response getReport(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, UUID reportId, String telstraApiVersion) throws ApiException {
        ApiResponse<GetReport200Response> localVarResp = getReportWithHttpInfo(contentLanguage, authorization, accept, acceptCharset, contentType, reportId, telstraApiVersion);
        return localVarResp.getData();
    }

    /**
     * fetch a specific report
     * Fetch a download link for a report generated with POST /reports/{reportId} using the **reportId** returned in the response. Once ready, your report will be available for download for one week. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param reportId Use the reportId returned in the POST /reports/{reportType} response.  (required)
     * @param telstraApiVersion  (optional)
     * @return ApiResponse&lt;GetReport200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means the call has been successful. Your download link (reportUrl) will be returned in the response.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the [API status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<GetReport200Response> getReportWithHttpInfo(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, UUID reportId, String telstraApiVersion) throws ApiException {
        okhttp3.Call localVarCall = getReportValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, reportId, telstraApiVersion, null);
        Type localVarReturnType = new TypeToken<GetReport200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * fetch a specific report (asynchronously)
     * Fetch a download link for a report generated with POST /reports/{reportId} using the **reportId** returned in the response. Once ready, your report will be available for download for one week. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param reportId Use the reportId returned in the POST /reports/{reportType} response.  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means the call has been successful. Your download link (reportUrl) will be returned in the response.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the [API status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getReportAsync(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, UUID reportId, String telstraApiVersion, final ApiCallback<GetReport200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getReportValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, reportId, telstraApiVersion, _callback);
        Type localVarReturnType = new TypeToken<GetReport200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getReports
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means the call has been successful. Details of any report(s) generated for your account will be returned in the response.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the [API status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getReportsCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/reports";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (telstraApiVersion != null) {
            localVarHeaderParams.put("Telstra-api-version", localVarApiClient.parameterToString(telstraApiVersion));
        }

        if (contentLanguage != null) {
            localVarHeaderParams.put("Content-Language", localVarApiClient.parameterToString(contentLanguage));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        if (acceptCharset != null) {
            localVarHeaderParams.put("Accept-Charset", localVarApiClient.parameterToString(acceptCharset));
        }

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getReportsValidateBeforeCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling getReports(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getReports(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling getReports(Async)");
        }

        // verify the required parameter 'acceptCharset' is set
        if (acceptCharset == null) {
            throw new ApiException("Missing the required parameter 'acceptCharset' when calling getReports(Async)");
        }

        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling getReports(Async)");
        }

        return getReportsCall(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion, _callback);

    }

    /**
     * fetch all reports
     * Fetch details of all reports recently generated for your account. Use it to check the status of a report, plus fetch the report ID, status, report type and expiry date. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param telstraApiVersion  (optional)
     * @return GetReports200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means the call has been successful. Details of any report(s) generated for your account will be returned in the response.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the [API status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public GetReports200Response getReports(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion) throws ApiException {
        ApiResponse<GetReports200Response> localVarResp = getReportsWithHttpInfo(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion);
        return localVarResp.getData();
    }

    /**
     * fetch all reports
     * Fetch details of all reports recently generated for your account. Use it to check the status of a report, plus fetch the report ID, status, report type and expiry date. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param telstraApiVersion  (optional)
     * @return ApiResponse&lt;GetReports200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means the call has been successful. Details of any report(s) generated for your account will be returned in the response.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the [API status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<GetReports200Response> getReportsWithHttpInfo(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion) throws ApiException {
        okhttp3.Call localVarCall = getReportsValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion, null);
        Type localVarReturnType = new TypeToken<GetReports200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * fetch all reports (asynchronously)
     * Fetch details of all reports recently generated for your account. Use it to check the status of a report, plus fetch the report ID, status, report type and expiry date. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A 200 OK response means the call has been successful. Details of any report(s) generated for your account will be returned in the response.  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is GET. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the [API status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getReportsAsync(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, String telstraApiVersion, final ApiCallback<GetReports200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = getReportsValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion, _callback);
        Type localVarReturnType = new TypeToken<GetReports200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for messagesReport
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param messagesReportRequest  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> A 201 Created response means the call has been successful. Your report is in the queue to be generated.  </td><td>  * Content-Language -  <br>  * Location -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is POST. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the [API status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call messagesReportCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, MessagesReportRequest messagesReportRequest, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = messagesReportRequest;

        // create path and map variables
        String localVarPath = "/reports/messages";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (telstraApiVersion != null) {
            localVarHeaderParams.put("Telstra-api-version", localVarApiClient.parameterToString(telstraApiVersion));
        }

        if (contentLanguage != null) {
            localVarHeaderParams.put("Content-Language", localVarApiClient.parameterToString(contentLanguage));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        if (acceptCharset != null) {
            localVarHeaderParams.put("Accept-Charset", localVarApiClient.parameterToString(acceptCharset));
        }

        if (contentType != null) {
            localVarHeaderParams.put("Content-Type", localVarApiClient.parameterToString(contentType));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "bearer_auth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call messagesReportValidateBeforeCall(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, MessagesReportRequest messagesReportRequest, String telstraApiVersion, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling messagesReport(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling messagesReport(Async)");
        }

        // verify the required parameter 'accept' is set
        if (accept == null) {
            throw new ApiException("Missing the required parameter 'accept' when calling messagesReport(Async)");
        }

        // verify the required parameter 'acceptCharset' is set
        if (acceptCharset == null) {
            throw new ApiException("Missing the required parameter 'acceptCharset' when calling messagesReport(Async)");
        }

        // verify the required parameter 'contentType' is set
        if (contentType == null) {
            throw new ApiException("Missing the required parameter 'contentType' when calling messagesReport(Async)");
        }

        // verify the required parameter 'messagesReportRequest' is set
        if (messagesReportRequest == null) {
            throw new ApiException("Missing the required parameter 'messagesReportRequest' when calling messagesReport(Async)");
        }

        return messagesReportCall(contentLanguage, authorization, accept, acceptCharset, contentType, messagesReportRequest, telstraApiVersion, _callback);

    }

    /**
     * submit a request for a messages report
     * Request a CSV report of messages (both incoming and outgoing) that have been sent to/from your account within the last three months. You can request details for a specific timeframe, and filter your messages by tags, recipient number or Virtual Number.  A 201 Created means your report has been queued for generation. Make a note of the reportId returned in the response. You&#39;ll need this to check the status of your report and fetch your download link with GET reports/{reportId}. If you supplied a reportCallbackUrl in the request we&#39;ll also notify it when your report is ready for download.  Once your report is generated, it will be available for download for one week. The expiry date is returned in the response. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param messagesReportRequest  (required)
     * @param telstraApiVersion  (optional)
     * @return MessagesReport201Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> A 201 Created response means the call has been successful. Your report is in the queue to be generated.  </td><td>  * Content-Language -  <br>  * Location -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is POST. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the [API status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public MessagesReport201Response messagesReport(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, MessagesReportRequest messagesReportRequest, String telstraApiVersion) throws ApiException {
        ApiResponse<MessagesReport201Response> localVarResp = messagesReportWithHttpInfo(contentLanguage, authorization, accept, acceptCharset, contentType, messagesReportRequest, telstraApiVersion);
        return localVarResp.getData();
    }

    /**
     * submit a request for a messages report
     * Request a CSV report of messages (both incoming and outgoing) that have been sent to/from your account within the last three months. You can request details for a specific timeframe, and filter your messages by tags, recipient number or Virtual Number.  A 201 Created means your report has been queued for generation. Make a note of the reportId returned in the response. You&#39;ll need this to check the status of your report and fetch your download link with GET reports/{reportId}. If you supplied a reportCallbackUrl in the request we&#39;ll also notify it when your report is ready for download.  Once your report is generated, it will be available for download for one week. The expiry date is returned in the response. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param messagesReportRequest  (required)
     * @param telstraApiVersion  (optional)
     * @return ApiResponse&lt;MessagesReport201Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> A 201 Created response means the call has been successful. Your report is in the queue to be generated.  </td><td>  * Content-Language -  <br>  * Location -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is POST. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the [API status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<MessagesReport201Response> messagesReportWithHttpInfo(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, MessagesReportRequest messagesReportRequest, String telstraApiVersion) throws ApiException {
        okhttp3.Call localVarCall = messagesReportValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, messagesReportRequest, telstraApiVersion, null);
        Type localVarReturnType = new TypeToken<MessagesReport201Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * submit a request for a messages report (asynchronously)
     * Request a CSV report of messages (both incoming and outgoing) that have been sent to/from your account within the last three months. You can request details for a specific timeframe, and filter your messages by tags, recipient number or Virtual Number.  A 201 Created means your report has been queued for generation. Make a note of the reportId returned in the response. You&#39;ll need this to check the status of your report and fetch your download link with GET reports/{reportId}. If you supplied a reportCallbackUrl in the request we&#39;ll also notify it when your report is ready for download.  Once your report is generated, it will be available for download for one week. The expiry date is returned in the response. 
     * @param contentLanguage  (required)
     * @param authorization  (required)
     * @param accept  (required)
     * @param acceptCharset  (required)
     * @param contentType  (required)
     * @param messagesReportRequest  (required)
     * @param telstraApiVersion  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td> A 201 Created response means the call has been successful. Your report is in the queue to be generated.  </td><td>  * Content-Language -  <br>  * Location -  <br>  </td></tr>
        <tr><td> 400 </td><td> Bad Request  | code | suggested_action | | :--- | :--- | | FIELD_INVALID | Check the field and the field formatting are correct. | | FIELD_LENGTH_ERR | Check the field is within character limits. | | FIELD_MISSING | Ensure you&#39;ve supplied all the required fields. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 401 </td><td> Unauthorized  | code | suggested_action | | :--- | :--- | | TOKEN_INVALID | Check the access token. | | TOKEN_EXPIRED | Please refresh the token. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 402 </td><td> Payment Required  | code | suggested_action | | :--- | :--- | | ACCOUNT_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. | | RATE_PLAN_ERR | Contact [support](mailto:telstradev@team.telstra.com) for help with your account. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 403 </td><td> Forbidden  | code | suggested_action | | :--- | :--- | | RESOURCE_AUTH_ERR | Check the permissions associated with your account. | | INSUFFICIENT_SCOPE | The access token you generated does not have sufficient permissions for this request. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 404 </td><td> Not Found  | code | suggested_action | | :--- | :--- | | RESOURCE_TEMP_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing a temporary issue with the resource. | | RESOURCE_NOT_FOUND | Check the endpoint is correct. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 405 </td><td> Method Not Allowed  | code | suggested_action | | :--- | :--- | | METHOD_INVALID | Ensure the method is POST. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 429 </td><td> Too Many Requests  | code | suggested_action | | :--- | :--- | | TOO_MANY_REQUESTS | Reduce the number of concurrent calls. |  </td><td>  * Content-Language -  <br>  * Retry-After -  <br>  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error  | code | suggested_action | | :--- | :--- | | INTERNAL_TIMEOUT | Try the call again. If the issue persists, check the [API status page](https://dev.telstra.com/api/status) to see if there&#39;s an active incident. | | INTERNAL_SERVER_ERR | Check the [API status page](https://dev.telstra.com/api/status) to see if an active incident is causing the internal error. | | NETWORK_ERR | Please try again later. |  </td><td>  * Content-Language -  <br>  </td></tr>
        <tr><td> 0 </td><td> Unexpected  </td><td>  * Content-Language -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call messagesReportAsync(String contentLanguage, String authorization, String accept, String acceptCharset, String contentType, MessagesReportRequest messagesReportRequest, String telstraApiVersion, final ApiCallback<MessagesReport201Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = messagesReportValidateBeforeCall(contentLanguage, authorization, accept, acceptCharset, contentType, messagesReportRequest, telstraApiVersion, _callback);
        Type localVarReturnType = new TypeToken<MessagesReport201Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
