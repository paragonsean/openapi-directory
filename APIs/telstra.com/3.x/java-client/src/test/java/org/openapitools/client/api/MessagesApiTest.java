/*
 * Messaging API v3.x
 * Send and receive SMS & MMS programmatically, leveraging Australia's leading mobile network. With Telstra's Messaging API, we take out the complexity to allow seamless messaging integration into your app, with just a few lines of code. Our REST API is enterprise grade, allowing you to communicate with engaging SMS & MMS messaging in your web and mobile apps in near real-time on a global scale.  # Introduction  # Features  # Getting Access to the API  # Getting Started  # Frequently Asked Questions 
 *
 * The version of the OpenAPI document: 3.x
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.Errors;
import org.openapitools.client.model.GetMessages200Response;
import org.openapitools.client.model.MessageGet;
import org.openapitools.client.model.MessageSent;
import org.openapitools.client.model.MessageUpdate;
import org.openapitools.client.model.SendMessagesRequest;
import java.util.UUID;
import org.openapitools.client.model.UpdateMessageByIdRequest;
import org.openapitools.client.model.UpdateMessageTagsRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MessagesApi
 */
@Disabled
public class MessagesApiTest {

    private final MessagesApi api = new MessagesApi();

    /**
     * delete a message
     *
     * Use this endpoint to delete a message that&#39;s been scheduled for sending, but hasn&#39;t yet sent. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMessageByIdTest() throws ApiException {
        String contentLanguage = null;
        String authorization = null;
        String accept = null;
        String acceptCharset = null;
        String contentType = null;
        UUID messageId = null;
        String telstraApiVersion = null;
        api.deleteMessageById(contentLanguage, authorization, accept, acceptCharset, contentType, messageId, telstraApiVersion);
        // TODO: test validations
    }

    /**
     * fetch a specific message
     *
     * Use the **messageId** to fetch a message that&#39;s been sent from/to your account within the last 30 days. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMessageByIdTest() throws ApiException {
        String contentLanguage = null;
        String authorization = null;
        String accept = null;
        String acceptCharset = null;
        String contentType = null;
        UUID messageId = null;
        String telstraApiVersion = null;
        MessageGet response = api.getMessageById(contentLanguage, authorization, accept, acceptCharset, contentType, messageId, telstraApiVersion);
        // TODO: test validations
    }

    /**
     * fetch all sent/received messages
     *
     * Fetch messages that have been sent from/to your account in the last 30 days.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMessagesTest() throws ApiException {
        String contentLanguage = null;
        String authorization = null;
        String accept = null;
        String acceptCharset = null;
        String contentType = null;
        String telstraApiVersion = null;
        Integer limit = null;
        Integer offset = null;
        String direction = null;
        String status = null;
        String filter = null;
        GetMessages200Response response = api.getMessages(contentLanguage, authorization, accept, acceptCharset, contentType, telstraApiVersion, limit, offset, direction, status, filter);
        // TODO: test validations
    }

    /**
     * send messages
     *
     * Send an SMS/MMS to a mobile number, or to multiple mobile numbers.  Free Trial users can message to up to 10 unique recipient numbers for free. The first five recipients will be automatically added to your Free Trial Numbers list. Need more? Just use the POST /free-trial-numbers call to add another five. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendMessagesTest() throws ApiException {
        String contentLanguage = null;
        String authorization = null;
        String accept = null;
        String acceptCharset = null;
        String contentType = null;
        SendMessagesRequest sendMessagesRequest = null;
        String telstraApiVersion = null;
        MessageSent response = api.sendMessages(contentLanguage, authorization, accept, acceptCharset, contentType, sendMessagesRequest, telstraApiVersion);
        // TODO: test validations
    }

    /**
     * update a message
     *
     * Need to update a message that&#39;s scheduled for sending? You can change any of the below parameters, as long as the message hasn&#39;t been sent yet. This request body will override the original POST/ messages call. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMessageByIdTest() throws ApiException {
        String contentLanguage = null;
        String authorization = null;
        String accept = null;
        String acceptCharset = null;
        String contentType = null;
        UUID messageId = null;
        UpdateMessageByIdRequest updateMessageByIdRequest = null;
        String telstraApiVersion = null;
        MessageUpdate response = api.updateMessageById(contentLanguage, authorization, accept, acceptCharset, contentType, messageId, updateMessageByIdRequest, telstraApiVersion);
        // TODO: test validations
    }

    /**
     * update message tags
     *
     * Use the **messageId** to update the tag(s) assigned to a message. You can use this endpoint any time, even after your message has been delivered. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMessageTagsTest() throws ApiException {
        String contentLanguage = null;
        String authorization = null;
        String accept = null;
        String acceptCharset = null;
        String contentType = null;
        UUID messageId = null;
        UpdateMessageTagsRequest updateMessageTagsRequest = null;
        String telstraApiVersion = null;
        api.updateMessageTags(contentLanguage, authorization, accept, acceptCharset, contentType, messageId, updateMessageTagsRequest, telstraApiVersion);
        // TODO: test validations
    }

}
