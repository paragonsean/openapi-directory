/*
 * Healthcare
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ArticlesListArticlesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:41:31.317110-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ArticlesListArticlesInner {
  public static final String SERIALIZED_NAME_BITE = "bite";
  @SerializedName(SERIALIZED_NAME_BITE)
  private String bite;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<List<String>> categories = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private String date;

  public static final String SERIALIZED_NAME_EXCERPT = "excerpt";
  @SerializedName(SERIALIZED_NAME_EXCERPT)
  private String excerpt;

  public static final String SERIALIZED_NAME_FEATURED = "featured";
  @SerializedName(SERIALIZED_NAME_FEATURED)
  private Boolean featured;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LANG = "lang";
  @SerializedName(SERIALIZED_NAME_LANG)
  private String lang;

  public static final String SERIALIZED_NAME_LAYOUT = "layout";
  @SerializedName(SERIALIZED_NAME_LAYOUT)
  private String layout;

  public static final String SERIALIZED_NAME_META_DESCRIPTION = "meta-description";
  @SerializedName(SERIALIZED_NAME_META_DESCRIPTION)
  private String metaDescription;

  public static final String SERIALIZED_NAME_META_TITLE = "meta-title";
  @SerializedName(SERIALIZED_NAME_META_TITLE)
  private String metaTitle;

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path;

  public static final String SERIALIZED_NAME_PUBLISHED = "published";
  @SerializedName(SERIALIZED_NAME_PUBLISHED)
  private Boolean published;

  public static final String SERIALIZED_NAME_RELATED = "related";
  @SerializedName(SERIALIZED_NAME_RELATED)
  private List<List<String>> related = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEO_KEYWORDS = "seo-keywords";
  @SerializedName(SERIALIZED_NAME_SEO_KEYWORDS)
  private String seoKeywords;

  public static final String SERIALIZED_NAME_SORT = "sort";
  @SerializedName(SERIALIZED_NAME_SORT)
  private BigDecimal sort;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<List<Object>> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TITLE_SHORT = "title-short";
  @SerializedName(SERIALIZED_NAME_TITLE_SHORT)
  private String titleShort;

  public static final String SERIALIZED_NAME_TOPICS = "topics";
  @SerializedName(SERIALIZED_NAME_TOPICS)
  private List<List<String>> topics = new ArrayList<>();

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public ArticlesListArticlesInner() {
  }

  public ArticlesListArticlesInner bite(String bite) {
    this.bite = bite;
    return this;
  }

  /**
   * Get bite
   * @return bite
   */
  @javax.annotation.Nullable
  public String getBite() {
    return bite;
  }

  public void setBite(String bite) {
    this.bite = bite;
  }


  public ArticlesListArticlesInner categories(List<List<String>> categories) {
    this.categories = categories;
    return this;
  }

  public ArticlesListArticlesInner addCategoriesItem(List<String> categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
   * Get categories
   * @return categories
   */
  @javax.annotation.Nullable
  public List<List<String>> getCategories() {
    return categories;
  }

  public void setCategories(List<List<String>> categories) {
    this.categories = categories;
  }


  public ArticlesListArticlesInner content(String content) {
    this.content = content;
    return this;
  }

  /**
   * Get content
   * @return content
   */
  @javax.annotation.Nullable
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }


  public ArticlesListArticlesInner date(String date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * @return date
   */
  @javax.annotation.Nullable
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }


  public ArticlesListArticlesInner excerpt(String excerpt) {
    this.excerpt = excerpt;
    return this;
  }

  /**
   * Get excerpt
   * @return excerpt
   */
  @javax.annotation.Nullable
  public String getExcerpt() {
    return excerpt;
  }

  public void setExcerpt(String excerpt) {
    this.excerpt = excerpt;
  }


  public ArticlesListArticlesInner featured(Boolean featured) {
    this.featured = featured;
    return this;
  }

  /**
   * Get featured
   * @return featured
   */
  @javax.annotation.Nullable
  public Boolean getFeatured() {
    return featured;
  }

  public void setFeatured(Boolean featured) {
    this.featured = featured;
  }


  public ArticlesListArticlesInner id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public ArticlesListArticlesInner lang(String lang) {
    this.lang = lang;
    return this;
  }

  /**
   * Get lang
   * @return lang
   */
  @javax.annotation.Nullable
  public String getLang() {
    return lang;
  }

  public void setLang(String lang) {
    this.lang = lang;
  }


  public ArticlesListArticlesInner layout(String layout) {
    this.layout = layout;
    return this;
  }

  /**
   * Get layout
   * @return layout
   */
  @javax.annotation.Nullable
  public String getLayout() {
    return layout;
  }

  public void setLayout(String layout) {
    this.layout = layout;
  }


  public ArticlesListArticlesInner metaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
    return this;
  }

  /**
   * Get metaDescription
   * @return metaDescription
   */
  @javax.annotation.Nullable
  public String getMetaDescription() {
    return metaDescription;
  }

  public void setMetaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
  }


  public ArticlesListArticlesInner metaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
    return this;
  }

  /**
   * Get metaTitle
   * @return metaTitle
   */
  @javax.annotation.Nullable
  public String getMetaTitle() {
    return metaTitle;
  }

  public void setMetaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
  }


  public ArticlesListArticlesInner path(String path) {
    this.path = path;
    return this;
  }

  /**
   * Get path
   * @return path
   */
  @javax.annotation.Nullable
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }


  public ArticlesListArticlesInner published(Boolean published) {
    this.published = published;
    return this;
  }

  /**
   * Get published
   * @return published
   */
  @javax.annotation.Nullable
  public Boolean getPublished() {
    return published;
  }

  public void setPublished(Boolean published) {
    this.published = published;
  }


  public ArticlesListArticlesInner related(List<List<String>> related) {
    this.related = related;
    return this;
  }

  public ArticlesListArticlesInner addRelatedItem(List<String> relatedItem) {
    if (this.related == null) {
      this.related = new ArrayList<>();
    }
    this.related.add(relatedItem);
    return this;
  }

  /**
   * Get related
   * @return related
   */
  @javax.annotation.Nullable
  public List<List<String>> getRelated() {
    return related;
  }

  public void setRelated(List<List<String>> related) {
    this.related = related;
  }


  public ArticlesListArticlesInner seoKeywords(String seoKeywords) {
    this.seoKeywords = seoKeywords;
    return this;
  }

  /**
   * Get seoKeywords
   * @return seoKeywords
   */
  @javax.annotation.Nullable
  public String getSeoKeywords() {
    return seoKeywords;
  }

  public void setSeoKeywords(String seoKeywords) {
    this.seoKeywords = seoKeywords;
  }


  public ArticlesListArticlesInner sort(BigDecimal sort) {
    this.sort = sort;
    return this;
  }

  /**
   * Get sort
   * @return sort
   */
  @javax.annotation.Nullable
  public BigDecimal getSort() {
    return sort;
  }

  public void setSort(BigDecimal sort) {
    this.sort = sort;
  }


  public ArticlesListArticlesInner tags(List<List<Object>> tags) {
    this.tags = tags;
    return this;
  }

  public ArticlesListArticlesInner addTagsItem(List<Object> tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List<List<Object>> getTags() {
    return tags;
  }

  public void setTags(List<List<Object>> tags) {
    this.tags = tags;
  }


  public ArticlesListArticlesInner title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public ArticlesListArticlesInner titleShort(String titleShort) {
    this.titleShort = titleShort;
    return this;
  }

  /**
   * Get titleShort
   * @return titleShort
   */
  @javax.annotation.Nullable
  public String getTitleShort() {
    return titleShort;
  }

  public void setTitleShort(String titleShort) {
    this.titleShort = titleShort;
  }


  public ArticlesListArticlesInner topics(List<List<String>> topics) {
    this.topics = topics;
    return this;
  }

  public ArticlesListArticlesInner addTopicsItem(List<String> topicsItem) {
    if (this.topics == null) {
      this.topics = new ArrayList<>();
    }
    this.topics.add(topicsItem);
    return this;
  }

  /**
   * Get topics
   * @return topics
   */
  @javax.annotation.Nullable
  public List<List<String>> getTopics() {
    return topics;
  }

  public void setTopics(List<List<String>> topics) {
    this.topics = topics;
  }


  public ArticlesListArticlesInner url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ArticlesListArticlesInner articlesListArticlesInner = (ArticlesListArticlesInner) o;
    return Objects.equals(this.bite, articlesListArticlesInner.bite) &&
        Objects.equals(this.categories, articlesListArticlesInner.categories) &&
        Objects.equals(this.content, articlesListArticlesInner.content) &&
        Objects.equals(this.date, articlesListArticlesInner.date) &&
        Objects.equals(this.excerpt, articlesListArticlesInner.excerpt) &&
        Objects.equals(this.featured, articlesListArticlesInner.featured) &&
        Objects.equals(this.id, articlesListArticlesInner.id) &&
        Objects.equals(this.lang, articlesListArticlesInner.lang) &&
        Objects.equals(this.layout, articlesListArticlesInner.layout) &&
        Objects.equals(this.metaDescription, articlesListArticlesInner.metaDescription) &&
        Objects.equals(this.metaTitle, articlesListArticlesInner.metaTitle) &&
        Objects.equals(this.path, articlesListArticlesInner.path) &&
        Objects.equals(this.published, articlesListArticlesInner.published) &&
        Objects.equals(this.related, articlesListArticlesInner.related) &&
        Objects.equals(this.seoKeywords, articlesListArticlesInner.seoKeywords) &&
        Objects.equals(this.sort, articlesListArticlesInner.sort) &&
        Objects.equals(this.tags, articlesListArticlesInner.tags) &&
        Objects.equals(this.title, articlesListArticlesInner.title) &&
        Objects.equals(this.titleShort, articlesListArticlesInner.titleShort) &&
        Objects.equals(this.topics, articlesListArticlesInner.topics) &&
        Objects.equals(this.url, articlesListArticlesInner.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bite, categories, content, date, excerpt, featured, id, lang, layout, metaDescription, metaTitle, path, published, related, seoKeywords, sort, tags, title, titleShort, topics, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ArticlesListArticlesInner {\n");
    sb.append("    bite: ").append(toIndentedString(bite)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    excerpt: ").append(toIndentedString(excerpt)).append("\n");
    sb.append("    featured: ").append(toIndentedString(featured)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    layout: ").append(toIndentedString(layout)).append("\n");
    sb.append("    metaDescription: ").append(toIndentedString(metaDescription)).append("\n");
    sb.append("    metaTitle: ").append(toIndentedString(metaTitle)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    related: ").append(toIndentedString(related)).append("\n");
    sb.append("    seoKeywords: ").append(toIndentedString(seoKeywords)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    titleShort: ").append(toIndentedString(titleShort)).append("\n");
    sb.append("    topics: ").append(toIndentedString(topics)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bite");
    openapiFields.add("categories");
    openapiFields.add("content");
    openapiFields.add("date");
    openapiFields.add("excerpt");
    openapiFields.add("featured");
    openapiFields.add("id");
    openapiFields.add("lang");
    openapiFields.add("layout");
    openapiFields.add("meta-description");
    openapiFields.add("meta-title");
    openapiFields.add("path");
    openapiFields.add("published");
    openapiFields.add("related");
    openapiFields.add("seo-keywords");
    openapiFields.add("sort");
    openapiFields.add("tags");
    openapiFields.add("title");
    openapiFields.add("title-short");
    openapiFields.add("topics");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ArticlesListArticlesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ArticlesListArticlesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ArticlesListArticlesInner is not found in the empty JSON string", ArticlesListArticlesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ArticlesListArticlesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ArticlesListArticlesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bite") != null && !jsonObj.get("bite").isJsonNull()) && !jsonObj.get("bite").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bite` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bite").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("categories") != null && !jsonObj.get("categories").isJsonNull() && !jsonObj.get("categories").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `categories` to be an array in the JSON string but got `%s`", jsonObj.get("categories").toString()));
      }
      if ((jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) && !jsonObj.get("content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content").toString()));
      }
      if ((jsonObj.get("date") != null && !jsonObj.get("date").isJsonNull()) && !jsonObj.get("date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("date").toString()));
      }
      if ((jsonObj.get("excerpt") != null && !jsonObj.get("excerpt").isJsonNull()) && !jsonObj.get("excerpt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `excerpt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("excerpt").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("lang") != null && !jsonObj.get("lang").isJsonNull()) && !jsonObj.get("lang").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lang").toString()));
      }
      if ((jsonObj.get("layout") != null && !jsonObj.get("layout").isJsonNull()) && !jsonObj.get("layout").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `layout` to be a primitive type in the JSON string but got `%s`", jsonObj.get("layout").toString()));
      }
      if ((jsonObj.get("meta-description") != null && !jsonObj.get("meta-description").isJsonNull()) && !jsonObj.get("meta-description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta-description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta-description").toString()));
      }
      if ((jsonObj.get("meta-title") != null && !jsonObj.get("meta-title").isJsonNull()) && !jsonObj.get("meta-title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta-title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta-title").toString()));
      }
      if ((jsonObj.get("path") != null && !jsonObj.get("path").isJsonNull()) && !jsonObj.get("path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("path").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("related") != null && !jsonObj.get("related").isJsonNull() && !jsonObj.get("related").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `related` to be an array in the JSON string but got `%s`", jsonObj.get("related").toString()));
      }
      if ((jsonObj.get("seo-keywords") != null && !jsonObj.get("seo-keywords").isJsonNull()) && !jsonObj.get("seo-keywords").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seo-keywords` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seo-keywords").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("title-short") != null && !jsonObj.get("title-short").isJsonNull()) && !jsonObj.get("title-short").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title-short` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title-short").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("topics") != null && !jsonObj.get("topics").isJsonNull() && !jsonObj.get("topics").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `topics` to be an array in the JSON string but got `%s`", jsonObj.get("topics").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ArticlesListArticlesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ArticlesListArticlesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ArticlesListArticlesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ArticlesListArticlesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ArticlesListArticlesInner>() {
           @Override
           public void write(JsonWriter out, ArticlesListArticlesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ArticlesListArticlesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ArticlesListArticlesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ArticlesListArticlesInner
   * @throws IOException if the JSON string is invalid with respect to ArticlesListArticlesInner
   */
  public static ArticlesListArticlesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ArticlesListArticlesInner.class);
  }

  /**
   * Convert an instance of ArticlesListArticlesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

