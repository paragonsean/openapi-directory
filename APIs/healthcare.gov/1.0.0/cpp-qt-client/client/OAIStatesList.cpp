/**
 * Healthcare
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStatesList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStatesList::OAIStatesList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStatesList::OAIStatesList() {
    this->initializeModel();
}

OAIStatesList::~OAIStatesList() {}

void OAIStatesList::initializeModel() {

    m_states_isSet = false;
    m_states_isValid = false;
}

void OAIStatesList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStatesList::fromJsonObject(QJsonObject json) {

    if(json["states"].isArray()){
        auto arr = json["states"].toArray();
        m_states_isValid = true;
        if(arr.count() > 0) {
            for (const QJsonValue jval : arr) {
                QList<OAIStatesList_states_inner_inner> item;
                m_states_isValid &= ::OpenAPI::fromJsonValue(item, jval);
                m_states_isSet = !jval.isNull() && m_states_isValid;
                m_states.push_back(item);
            }
        }
    }
}

QString OAIStatesList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStatesList::asJsonObject() const {
    QJsonObject obj;
    if (m_states.size() > 0) {
        
        obj.insert(QString("states"), toJsonValue(m_states));
    }
    return obj;
}

QList<QList<OAIStatesList_states_inner_inner>> OAIStatesList::getStates() const {
    return m_states;
}
void OAIStatesList::setStates(const QList<QList<OAIStatesList_states_inner_inner>> &states) {
    m_states = states;
    m_states_isSet = true;
}

bool OAIStatesList::is_states_Set() const{
    return m_states_isSet;
}

bool OAIStatesList::is_states_Valid() const{
    return m_states_isValid;
}

bool OAIStatesList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_states.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStatesList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
