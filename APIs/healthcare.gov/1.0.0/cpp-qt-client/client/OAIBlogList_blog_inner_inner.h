/**
 * Healthcare
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBlogList_blog_inner_inner.h
 *
 * 
 */

#ifndef OAIBlogList_blog_inner_inner_H
#define OAIBlogList_blog_inner_inner_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBlogList_blog_inner_inner : public OAIObject {
public:
    OAIBlogList_blog_inner_inner();
    OAIBlogList_blog_inner_inner(QString json);
    ~OAIBlogList_blog_inner_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QList<QString>> getCategories() const;
    void setCategories(const QList<QList<QString>> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getLang() const;
    void setLang(const QString &lang);
    bool is_lang_Set() const;
    bool is_lang_Valid() const;

    QString getLayout() const;
    void setLayout(const QString &layout);
    bool is_layout_Set() const;
    bool is_layout_Valid() const;

    QString getMetaDescription() const;
    void setMetaDescription(const QString &meta_description);
    bool is_meta_description_Set() const;
    bool is_meta_description_Valid() const;

    QString getMetaTitle() const;
    void setMetaTitle(const QString &meta_title);
    bool is_meta_title_Set() const;
    bool is_meta_title_Valid() const;

    bool isPublished() const;
    void setPublished(const bool &published);
    bool is_published_Set() const;
    bool is_published_Valid() const;

    QString getSeoKeywords() const;
    void setSeoKeywords(const QString &seo_keywords);
    bool is_seo_keywords_Set() const;
    bool is_seo_keywords_Valid() const;

    double getSort() const;
    void setSort(const double &sort);
    bool is_sort_Set() const;
    bool is_sort_Valid() const;

    QList<QList<QJsonValue>> getTags() const;
    void setTags(const QList<QList<QJsonValue>> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QList<QList<QString>> getTopics() const;
    void setTopics(const QList<QList<QString>> &topics);
    bool is_topics_Set() const;
    bool is_topics_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QList<QString>> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_lang;
    bool m_lang_isSet;
    bool m_lang_isValid;

    QString m_layout;
    bool m_layout_isSet;
    bool m_layout_isValid;

    QString m_meta_description;
    bool m_meta_description_isSet;
    bool m_meta_description_isValid;

    QString m_meta_title;
    bool m_meta_title_isSet;
    bool m_meta_title_isValid;

    bool m_published;
    bool m_published_isSet;
    bool m_published_isValid;

    QString m_seo_keywords;
    bool m_seo_keywords_isSet;
    bool m_seo_keywords_isValid;

    double m_sort;
    bool m_sort_isSet;
    bool m_sort_isValid;

    QList<QList<QJsonValue>> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QList<QList<QString>> m_topics;
    bool m_topics_isSet;
    bool m_topics_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBlogList_blog_inner_inner)

#endif // OAIBlogList_blog_inner_inner_H
