/**
 * Healthcare
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBlogList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBlogList::OAIBlogList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBlogList::OAIBlogList() {
    this->initializeModel();
}

OAIBlogList::~OAIBlogList() {}

void OAIBlogList::initializeModel() {

    m_blog_isSet = false;
    m_blog_isValid = false;
}

void OAIBlogList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBlogList::fromJsonObject(QJsonObject json) {

    if(json["blog"].isArray()){
        auto arr = json["blog"].toArray();
        m_blog_isValid = true;
        if(arr.count() > 0) {
            for (const QJsonValue jval : arr) {
                QList<OAIBlogList_blog_inner_inner> item;
                m_blog_isValid &= ::OpenAPI::fromJsonValue(item, jval);
                m_blog_isSet = !jval.isNull() && m_blog_isValid;
                m_blog.push_back(item);
            }
        }
    }
}

QString OAIBlogList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBlogList::asJsonObject() const {
    QJsonObject obj;
    if (m_blog.size() > 0) {
        
        obj.insert(QString("blog"), toJsonValue(m_blog));
    }
    return obj;
}

QList<QList<OAIBlogList_blog_inner_inner>> OAIBlogList::getBlog() const {
    return m_blog;
}
void OAIBlogList::setBlog(const QList<QList<OAIBlogList_blog_inner_inner>> &blog) {
    m_blog = blog;
    m_blog_isSet = true;
}

bool OAIBlogList::is_blog_Set() const{
    return m_blog_isSet;
}

bool OAIBlogList::is_blog_Valid() const{
    return m_blog_isValid;
}

bool OAIBlogList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_blog.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBlogList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
