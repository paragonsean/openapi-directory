/**
 * Healthcare
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ArticlesListArticlesInner model module.
 * @module model/ArticlesListArticlesInner
 * @version 1.0.0
 */
class ArticlesListArticlesInner {
    /**
     * Constructs a new <code>ArticlesListArticlesInner</code>.
     * @alias module:model/ArticlesListArticlesInner
     */
    constructor() { 
        
        ArticlesListArticlesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ArticlesListArticlesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ArticlesListArticlesInner} obj Optional instance to populate.
     * @return {module:model/ArticlesListArticlesInner} The populated <code>ArticlesListArticlesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ArticlesListArticlesInner();

            if (data.hasOwnProperty('bite')) {
                obj['bite'] = ApiClient.convertToType(data['bite'], 'String');
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], [['String']]);
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('excerpt')) {
                obj['excerpt'] = ApiClient.convertToType(data['excerpt'], 'String');
            }
            if (data.hasOwnProperty('featured')) {
                obj['featured'] = ApiClient.convertToType(data['featured'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('lang')) {
                obj['lang'] = ApiClient.convertToType(data['lang'], 'String');
            }
            if (data.hasOwnProperty('layout')) {
                obj['layout'] = ApiClient.convertToType(data['layout'], 'String');
            }
            if (data.hasOwnProperty('meta-description')) {
                obj['meta-description'] = ApiClient.convertToType(data['meta-description'], 'String');
            }
            if (data.hasOwnProperty('meta-title')) {
                obj['meta-title'] = ApiClient.convertToType(data['meta-title'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('published')) {
                obj['published'] = ApiClient.convertToType(data['published'], 'Boolean');
            }
            if (data.hasOwnProperty('related')) {
                obj['related'] = ApiClient.convertToType(data['related'], [['String']]);
            }
            if (data.hasOwnProperty('seo-keywords')) {
                obj['seo-keywords'] = ApiClient.convertToType(data['seo-keywords'], 'String');
            }
            if (data.hasOwnProperty('sort')) {
                obj['sort'] = ApiClient.convertToType(data['sort'], 'Number');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [[Object]]);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('title-short')) {
                obj['title-short'] = ApiClient.convertToType(data['title-short'], 'String');
            }
            if (data.hasOwnProperty('topics')) {
                obj['topics'] = ApiClient.convertToType(data['topics'], [['String']]);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ArticlesListArticlesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ArticlesListArticlesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bite'] && !(typeof data['bite'] === 'string' || data['bite'] instanceof String)) {
            throw new Error("Expected the field `bite` to be a primitive type in the JSON string but got " + data['bite']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['categories'])) {
            throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
        }
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }
        // ensure the json data is a string
        if (data['excerpt'] && !(typeof data['excerpt'] === 'string' || data['excerpt'] instanceof String)) {
            throw new Error("Expected the field `excerpt` to be a primitive type in the JSON string but got " + data['excerpt']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['lang'] && !(typeof data['lang'] === 'string' || data['lang'] instanceof String)) {
            throw new Error("Expected the field `lang` to be a primitive type in the JSON string but got " + data['lang']);
        }
        // ensure the json data is a string
        if (data['layout'] && !(typeof data['layout'] === 'string' || data['layout'] instanceof String)) {
            throw new Error("Expected the field `layout` to be a primitive type in the JSON string but got " + data['layout']);
        }
        // ensure the json data is a string
        if (data['meta-description'] && !(typeof data['meta-description'] === 'string' || data['meta-description'] instanceof String)) {
            throw new Error("Expected the field `meta-description` to be a primitive type in the JSON string but got " + data['meta-description']);
        }
        // ensure the json data is a string
        if (data['meta-title'] && !(typeof data['meta-title'] === 'string' || data['meta-title'] instanceof String)) {
            throw new Error("Expected the field `meta-title` to be a primitive type in the JSON string but got " + data['meta-title']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['related'])) {
            throw new Error("Expected the field `related` to be an array in the JSON data but got " + data['related']);
        }
        // ensure the json data is a string
        if (data['seo-keywords'] && !(typeof data['seo-keywords'] === 'string' || data['seo-keywords'] instanceof String)) {
            throw new Error("Expected the field `seo-keywords` to be a primitive type in the JSON string but got " + data['seo-keywords']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['title-short'] && !(typeof data['title-short'] === 'string' || data['title-short'] instanceof String)) {
            throw new Error("Expected the field `title-short` to be a primitive type in the JSON string but got " + data['title-short']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['topics'])) {
            throw new Error("Expected the field `topics` to be an array in the JSON data but got " + data['topics']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {String} bite
 */
ArticlesListArticlesInner.prototype['bite'] = undefined;

/**
 * @member {Array.<Array.<String>>} categories
 */
ArticlesListArticlesInner.prototype['categories'] = undefined;

/**
 * @member {String} content
 */
ArticlesListArticlesInner.prototype['content'] = undefined;

/**
 * @member {String} date
 */
ArticlesListArticlesInner.prototype['date'] = undefined;

/**
 * @member {String} excerpt
 */
ArticlesListArticlesInner.prototype['excerpt'] = undefined;

/**
 * @member {Boolean} featured
 */
ArticlesListArticlesInner.prototype['featured'] = undefined;

/**
 * @member {String} id
 */
ArticlesListArticlesInner.prototype['id'] = undefined;

/**
 * @member {String} lang
 */
ArticlesListArticlesInner.prototype['lang'] = undefined;

/**
 * @member {String} layout
 */
ArticlesListArticlesInner.prototype['layout'] = undefined;

/**
 * @member {String} meta-description
 */
ArticlesListArticlesInner.prototype['meta-description'] = undefined;

/**
 * @member {String} meta-title
 */
ArticlesListArticlesInner.prototype['meta-title'] = undefined;

/**
 * @member {String} path
 */
ArticlesListArticlesInner.prototype['path'] = undefined;

/**
 * @member {Boolean} published
 */
ArticlesListArticlesInner.prototype['published'] = undefined;

/**
 * @member {Array.<Array.<String>>} related
 */
ArticlesListArticlesInner.prototype['related'] = undefined;

/**
 * @member {String} seo-keywords
 */
ArticlesListArticlesInner.prototype['seo-keywords'] = undefined;

/**
 * @member {Number} sort
 */
ArticlesListArticlesInner.prototype['sort'] = undefined;

/**
 * @member {Array.<Array.<Object>>} tags
 */
ArticlesListArticlesInner.prototype['tags'] = undefined;

/**
 * @member {String} title
 */
ArticlesListArticlesInner.prototype['title'] = undefined;

/**
 * @member {String} title-short
 */
ArticlesListArticlesInner.prototype['title-short'] = undefined;

/**
 * @member {Array.<Array.<String>>} topics
 */
ArticlesListArticlesInner.prototype['topics'] = undefined;

/**
 * @member {String} url
 */
ArticlesListArticlesInner.prototype['url'] = undefined;






export default ArticlesListArticlesInner;

