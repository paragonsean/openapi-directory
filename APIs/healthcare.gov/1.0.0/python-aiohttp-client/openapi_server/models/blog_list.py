# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.blog_list_blog_inner_inner import BlogListBlogInnerInner
from openapi_server import util


class BlogList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blog: List[List[BlogListBlogInnerInner]]=None):
        """BlogList - a model defined in OpenAPI

        :param blog: The blog of this BlogList.
        """
        self.openapi_types = {
            'blog': List[List[BlogListBlogInnerInner]]
        }

        self.attribute_map = {
            'blog': 'blog'
        }

        self._blog = blog

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BlogList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The blogList of this BlogList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blog(self):
        """Gets the blog of this BlogList.


        :return: The blog of this BlogList.
        :rtype: List[List[BlogListBlogInnerInner]]
        """
        return self._blog

    @blog.setter
    def blog(self, blog):
        """Sets the blog of this BlogList.


        :param blog: The blog of this BlogList.
        :type blog: List[List[BlogListBlogInnerInner]]
        """

        self._blog = blog
