/**
 * Cenit IO - REST API Specification
 * Cenit IO is an Open Platform for Data and Business Integration (iPaaS) 
 *
 * The version of the OpenAPI document: v1
 * Contact: support@cenit.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlow.h
 *
 * 
 */

#ifndef OAIFlow_H
#define OAIFlow_H

#include <QJsonObject>

#include "OAIConnection_role.h"
#include "OAIData_type.h"
#include "OAINamespace.h"
#include "OAIObject.h"
#include "OAITranslator.h"
#include "OAIWebhook.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConnection_role;
class OAIData_type;
class OAINamespace;
class OAITranslator;
class OAIWebhook;

class OAIFlow : public OAIObject {
public:
    OAIFlow();
    OAIFlow(QString json);
    ~OAIFlow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    OAIConnection_role getConnectionRole() const;
    void setConnectionRole(const OAIConnection_role &connection_role);
    bool is_connection_role_Set() const;
    bool is_connection_role_Valid() const;

    OAIData_type getCustomDataType() const;
    void setCustomDataType(const OAIData_type &custom_data_type);
    bool is_custom_data_type_Set() const;
    bool is_custom_data_type_Valid() const;

    OAIObject getEvent() const;
    void setEvent(const OAIObject &event);
    bool is_event_Set() const;
    bool is_event_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINamespace getRNamespace() const;
    void setRNamespace(const OAINamespace &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    bool isNotifyRequest() const;
    void setNotifyRequest(const bool &notify_request);
    bool is_notify_request_Set() const;
    bool is_notify_request_Valid() const;

    bool isNotifyResponse() const;
    void setNotifyResponse(const bool &notify_response);
    bool is_notify_response_Set() const;
    bool is_notify_response_Valid() const;

    OAITranslator getResponseTranslator() const;
    void setResponseTranslator(const OAITranslator &response_translator);
    bool is_response_translator_Set() const;
    bool is_response_translator_Valid() const;

    OAITranslator getTranslator() const;
    void setTranslator(const OAITranslator &translator);
    bool is_translator_Set() const;
    bool is_translator_Valid() const;

    OAIWebhook getWebhook() const;
    void setWebhook(const OAIWebhook &webhook);
    bool is_webhook_Set() const;
    bool is_webhook_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    OAIConnection_role m_connection_role;
    bool m_connection_role_isSet;
    bool m_connection_role_isValid;

    OAIData_type m_custom_data_type;
    bool m_custom_data_type_isSet;
    bool m_custom_data_type_isValid;

    OAIObject m_event;
    bool m_event_isSet;
    bool m_event_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINamespace m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;

    bool m_notify_request;
    bool m_notify_request_isSet;
    bool m_notify_request_isValid;

    bool m_notify_response;
    bool m_notify_response_isSet;
    bool m_notify_response_isValid;

    OAITranslator m_response_translator;
    bool m_response_translator_isSet;
    bool m_response_translator_isValid;

    OAITranslator m_translator;
    bool m_translator_isSet;
    bool m_translator_isValid;

    OAIWebhook m_webhook;
    bool m_webhook_isSet;
    bool m_webhook_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlow)

#endif // OAIFlow_H
