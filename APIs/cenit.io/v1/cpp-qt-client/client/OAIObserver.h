/**
 * Cenit IO - REST API Specification
 * Cenit IO is an Open Platform for Data and Business Integration (iPaaS) 
 *
 * The version of the OpenAPI document: v1
 * Contact: support@cenit.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIObserver.h
 *
 * 
 */

#ifndef OAIObserver_H
#define OAIObserver_H

#include <QJsonObject>

#include "OAIData_type.h"
#include "OAINamespace.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIData_type;
class OAINamespace;

class OAIObserver : public OAIObject {
public:
    OAIObserver();
    OAIObserver(QString json);
    ~OAIObserver() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIData_type getDataType() const;
    void setDataType(const OAIData_type &data_type);
    bool is_data_type_Set() const;
    bool is_data_type_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINamespace getRNamespace() const;
    void setRNamespace(const OAINamespace &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    QString getTriggers() const;
    void setTriggers(const QString &triggers);
    bool is_triggers_Set() const;
    bool is_triggers_Valid() const;

    OAIObject getType() const;
    void setType(const OAIObject &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIData_type m_data_type;
    bool m_data_type_isSet;
    bool m_data_type_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINamespace m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;

    QString m_triggers;
    bool m_triggers_isSet;
    bool m_triggers_isValid;

    OAIObject m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIObserver)

#endif // OAIObserver_H
