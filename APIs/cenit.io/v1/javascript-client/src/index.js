/**
 * Cenit IO - REST API Specification
 * Cenit IO is an Open Platform for Data and Business Integration (iPaaS) 
 *
 * The version of the OpenAPI document: v1
 * Contact: support@cenit.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Connection from './model/Connection';
import ConnectionHeadersInner from './model/ConnectionHeadersInner';
import ConnectionRole from './model/ConnectionRole';
import DataType from './model/DataType';
import Flow from './model/Flow';
import Namespace from './model/Namespace';
import Observer from './model/Observer';
import Scheduler from './model/Scheduler';
import Schema from './model/Schema';
import Translator from './model/Translator';
import Webhook from './model/Webhook';
import ConnectionApi from './api/ConnectionApi';
import ConnectionRoleApi from './api/ConnectionRoleApi';
import DataEventApi from './api/DataEventApi';
import DataTypeApi from './api/DataTypeApi';
import FlowApi from './api/FlowApi';
import NamespaceApi from './api/NamespaceApi';
import SchedulerApi from './api/SchedulerApi';
import SchemaApi from './api/SchemaApi';
import TranslatorApi from './api/TranslatorApi';
import WebhookApi from './api/WebhookApi';


/**
* Cenit IO is an Open Platform for Data and Business Integration (iPaaS) .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CenitIoRestApiSpecification = require('index'); // See note below*.
* var xxxSvc = new CenitIoRestApiSpecification.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CenitIoRestApiSpecification.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CenitIoRestApiSpecification.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CenitIoRestApiSpecification.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Connection model constructor.
     * @property {module:model/Connection}
     */
    Connection,

    /**
     * The ConnectionHeadersInner model constructor.
     * @property {module:model/ConnectionHeadersInner}
     */
    ConnectionHeadersInner,

    /**
     * The ConnectionRole model constructor.
     * @property {module:model/ConnectionRole}
     */
    ConnectionRole,

    /**
     * The DataType model constructor.
     * @property {module:model/DataType}
     */
    DataType,

    /**
     * The Flow model constructor.
     * @property {module:model/Flow}
     */
    Flow,

    /**
     * The Namespace model constructor.
     * @property {module:model/Namespace}
     */
    Namespace,

    /**
     * The Observer model constructor.
     * @property {module:model/Observer}
     */
    Observer,

    /**
     * The Scheduler model constructor.
     * @property {module:model/Scheduler}
     */
    Scheduler,

    /**
     * The Schema model constructor.
     * @property {module:model/Schema}
     */
    Schema,

    /**
     * The Translator model constructor.
     * @property {module:model/Translator}
     */
    Translator,

    /**
     * The Webhook model constructor.
     * @property {module:model/Webhook}
     */
    Webhook,

    /**
    * The ConnectionApi service constructor.
    * @property {module:api/ConnectionApi}
    */
    ConnectionApi,

    /**
    * The ConnectionRoleApi service constructor.
    * @property {module:api/ConnectionRoleApi}
    */
    ConnectionRoleApi,

    /**
    * The DataEventApi service constructor.
    * @property {module:api/DataEventApi}
    */
    DataEventApi,

    /**
    * The DataTypeApi service constructor.
    * @property {module:api/DataTypeApi}
    */
    DataTypeApi,

    /**
    * The FlowApi service constructor.
    * @property {module:api/FlowApi}
    */
    FlowApi,

    /**
    * The NamespaceApi service constructor.
    * @property {module:api/NamespaceApi}
    */
    NamespaceApi,

    /**
    * The SchedulerApi service constructor.
    * @property {module:api/SchedulerApi}
    */
    SchedulerApi,

    /**
    * The SchemaApi service constructor.
    * @property {module:api/SchemaApi}
    */
    SchemaApi,

    /**
    * The TranslatorApi service constructor.
    * @property {module:api/TranslatorApi}
    */
    TranslatorApi,

    /**
    * The WebhookApi service constructor.
    * @property {module:api/WebhookApi}
    */
    WebhookApi
};
