# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.namespace import Namespace
from openapi_server import util


class ModelSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, namespace: Namespace=None, _schema: str=None, uri: str=None):
        """ModelSchema - a model defined in OpenAPI

        :param id: The id of this ModelSchema.
        :param namespace: The namespace of this ModelSchema.
        :param _schema: The _schema of this ModelSchema.
        :param uri: The uri of this ModelSchema.
        """
        self.openapi_types = {
            'id': str,
            'namespace': Namespace,
            '_schema': str,
            'uri': str
        }

        self.attribute_map = {
            'id': 'id',
            'namespace': 'namespace',
            '_schema': 'schema',
            'uri': 'uri'
        }

        self._id = id
        self._namespace = namespace
        self.__schema = _schema
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _schema of this ModelSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ModelSchema.


        :return: The id of this ModelSchema.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ModelSchema.


        :param id: The id of this ModelSchema.
        :type id: str
        """

        self._id = id

    @property
    def namespace(self):
        """Gets the namespace of this ModelSchema.


        :return: The namespace of this ModelSchema.
        :rtype: Namespace
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this ModelSchema.


        :param namespace: The namespace of this ModelSchema.
        :type namespace: Namespace
        """

        self._namespace = namespace

    @property
    def _schema(self):
        """Gets the _schema of this ModelSchema.


        :return: The _schema of this ModelSchema.
        :rtype: str
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this ModelSchema.


        :param _schema: The _schema of this ModelSchema.
        :type _schema: str
        """

        self.__schema = _schema

    @property
    def uri(self):
        """Gets the uri of this ModelSchema.


        :return: The uri of this ModelSchema.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this ModelSchema.


        :param uri: The uri of this ModelSchema.
        :type uri: str
        """

        self._uri = uri
