# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.connection_headers_inner import ConnectionHeadersInner
from openapi_server.models.namespace import Namespace
from openapi_server import util


class Webhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, headers: List[ConnectionHeadersInner]=None, id: str=None, name: str=None, namespace: Namespace=None, parameters: List[ConnectionHeadersInner]=None, path: str=None):
        """Webhook - a model defined in OpenAPI

        :param headers: The headers of this Webhook.
        :param id: The id of this Webhook.
        :param name: The name of this Webhook.
        :param namespace: The namespace of this Webhook.
        :param parameters: The parameters of this Webhook.
        :param path: The path of this Webhook.
        """
        self.openapi_types = {
            'headers': List[ConnectionHeadersInner],
            'id': str,
            'name': str,
            'namespace': Namespace,
            'parameters': List[ConnectionHeadersInner],
            'path': str
        }

        self.attribute_map = {
            'headers': 'headers',
            'id': 'id',
            'name': 'name',
            'namespace': 'namespace',
            'parameters': 'parameters',
            'path': 'path'
        }

        self._headers = headers
        self._id = id
        self._name = name
        self._namespace = namespace
        self._parameters = parameters
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Webhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The webhook of this Webhook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def headers(self):
        """Gets the headers of this Webhook.


        :return: The headers of this Webhook.
        :rtype: List[ConnectionHeadersInner]
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this Webhook.


        :param headers: The headers of this Webhook.
        :type headers: List[ConnectionHeadersInner]
        """

        self._headers = headers

    @property
    def id(self):
        """Gets the id of this Webhook.


        :return: The id of this Webhook.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Webhook.


        :param id: The id of this Webhook.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Webhook.


        :return: The name of this Webhook.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Webhook.


        :param name: The name of this Webhook.
        :type name: str
        """

        self._name = name

    @property
    def namespace(self):
        """Gets the namespace of this Webhook.


        :return: The namespace of this Webhook.
        :rtype: Namespace
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this Webhook.


        :param namespace: The namespace of this Webhook.
        :type namespace: Namespace
        """

        self._namespace = namespace

    @property
    def parameters(self):
        """Gets the parameters of this Webhook.


        :return: The parameters of this Webhook.
        :rtype: List[ConnectionHeadersInner]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this Webhook.


        :param parameters: The parameters of this Webhook.
        :type parameters: List[ConnectionHeadersInner]
        """

        self._parameters = parameters

    @property
    def path(self):
        """Gets the path of this Webhook.


        :return: The path of this Webhook.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this Webhook.


        :param path: The path of this Webhook.
        :type path: str
        """

        self._path = path
