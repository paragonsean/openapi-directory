# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.namespace import Namespace
from openapi_server import util


class DataType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, model_schema: str=None, name: str=None, namespace: Namespace=None, show_navigation_link: str=None, slug: str=None, title: str=None, type: object=None):
        """DataType - a model defined in OpenAPI

        :param id: The id of this DataType.
        :param model_schema: The model_schema of this DataType.
        :param name: The name of this DataType.
        :param namespace: The namespace of this DataType.
        :param show_navigation_link: The show_navigation_link of this DataType.
        :param slug: The slug of this DataType.
        :param title: The title of this DataType.
        :param type: The type of this DataType.
        """
        self.openapi_types = {
            'id': str,
            'model_schema': str,
            'name': str,
            'namespace': Namespace,
            'show_navigation_link': str,
            'slug': str,
            'title': str,
            'type': object
        }

        self.attribute_map = {
            'id': 'id',
            'model_schema': 'model_schema',
            'name': 'name',
            'namespace': 'namespace',
            'show_navigation_link': 'show_navigation_link',
            'slug': 'slug',
            'title': 'title',
            'type': 'type'
        }

        self._id = id
        self._model_schema = model_schema
        self._name = name
        self._namespace = namespace
        self._show_navigation_link = show_navigation_link
        self._slug = slug
        self._title = title
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The data_type of this DataType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this DataType.


        :return: The id of this DataType.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DataType.


        :param id: The id of this DataType.
        :type id: str
        """

        self._id = id

    @property
    def model_schema(self):
        """Gets the model_schema of this DataType.


        :return: The model_schema of this DataType.
        :rtype: str
        """
        return self._model_schema

    @model_schema.setter
    def model_schema(self, model_schema):
        """Sets the model_schema of this DataType.


        :param model_schema: The model_schema of this DataType.
        :type model_schema: str
        """

        self._model_schema = model_schema

    @property
    def name(self):
        """Gets the name of this DataType.


        :return: The name of this DataType.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DataType.


        :param name: The name of this DataType.
        :type name: str
        """

        self._name = name

    @property
    def namespace(self):
        """Gets the namespace of this DataType.


        :return: The namespace of this DataType.
        :rtype: Namespace
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this DataType.


        :param namespace: The namespace of this DataType.
        :type namespace: Namespace
        """

        self._namespace = namespace

    @property
    def show_navigation_link(self):
        """Gets the show_navigation_link of this DataType.


        :return: The show_navigation_link of this DataType.
        :rtype: str
        """
        return self._show_navigation_link

    @show_navigation_link.setter
    def show_navigation_link(self, show_navigation_link):
        """Sets the show_navigation_link of this DataType.


        :param show_navigation_link: The show_navigation_link of this DataType.
        :type show_navigation_link: str
        """

        self._show_navigation_link = show_navigation_link

    @property
    def slug(self):
        """Gets the slug of this DataType.


        :return: The slug of this DataType.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this DataType.


        :param slug: The slug of this DataType.
        :type slug: str
        """

        self._slug = slug

    @property
    def title(self):
        """Gets the title of this DataType.


        :return: The title of this DataType.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this DataType.


        :param title: The title of this DataType.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this DataType.


        :return: The type of this DataType.
        :rtype: object
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DataType.


        :param type: The type of this DataType.
        :type type: object
        """

        self._type = type
