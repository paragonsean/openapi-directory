/*
 * Cenit IO - REST API Specification
 * Cenit IO is an Open Platform for Data and Business Integration (iPaaS) 
 *
 * The version of the OpenAPI document: v1
 * Contact: support@cenit.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DataType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataTypeApi
 */
@Disabled
public class DataTypeApiTest {

    private final DataTypeApi api = new DataTypeApi();

    /**
     * Returns a list of data types
     *
     * Returns a list of data types you&#39;ve previously created. The data types are returned in sorted order, with the most recent DataType appearing first.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setupDataTypeGetTest() throws ApiException {
        List<DataType> response = api.setupDataTypeGet();
        // TODO: test validations
    }

    /**
     * Delete a data type
     *
     * Deletes the specified data type.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setupDataTypeIdDeleteTest() throws ApiException {
        String id = null;
        api.setupDataTypeIdDelete(id);
        // TODO: test validations
    }

    /**
     * Retrieve a data type
     *
     * Retrieves the details of an existing data type. You need only supply the unique data  type identifier that was returned upon DataType creation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setupDataTypeIdGetTest() throws ApiException {
        String id = null;
        DataType response = api.setupDataTypeIdGet(id);
        // TODO: test validations
    }

    /**
     * Create or update a data type
     *
     * Creates or updates the specified data type by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setupDataTypePostTest() throws ApiException {
        DataType response = api.setupDataTypePost();
        // TODO: test validations
    }

}
