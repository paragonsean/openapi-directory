# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.notification_provider_settings import NotificationProviderSettings
from openapi_server.models.stored_name_value import StoredNameValue
from openapi_server import util


class DeploymentEnvironmentSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, environment_variables: List[StoredNameValue]=None, notifications: List[NotificationProviderSettings]=None, provider_settings: List[StoredNameValue]=None):
        """DeploymentEnvironmentSettings - a model defined in OpenAPI

        :param environment_variables: The environment_variables of this DeploymentEnvironmentSettings.
        :param notifications: The notifications of this DeploymentEnvironmentSettings.
        :param provider_settings: The provider_settings of this DeploymentEnvironmentSettings.
        """
        self.openapi_types = {
            'environment_variables': List[StoredNameValue],
            'notifications': List[NotificationProviderSettings],
            'provider_settings': List[StoredNameValue]
        }

        self.attribute_map = {
            'environment_variables': 'environmentVariables',
            'notifications': 'notifications',
            'provider_settings': 'providerSettings'
        }

        self._environment_variables = environment_variables
        self._notifications = notifications
        self._provider_settings = provider_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentEnvironmentSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentEnvironmentSettings of this DeploymentEnvironmentSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def environment_variables(self):
        """Gets the environment_variables of this DeploymentEnvironmentSettings.


        :return: The environment_variables of this DeploymentEnvironmentSettings.
        :rtype: List[StoredNameValue]
        """
        return self._environment_variables

    @environment_variables.setter
    def environment_variables(self, environment_variables):
        """Sets the environment_variables of this DeploymentEnvironmentSettings.


        :param environment_variables: The environment_variables of this DeploymentEnvironmentSettings.
        :type environment_variables: List[StoredNameValue]
        """

        self._environment_variables = environment_variables

    @property
    def notifications(self):
        """Gets the notifications of this DeploymentEnvironmentSettings.


        :return: The notifications of this DeploymentEnvironmentSettings.
        :rtype: List[NotificationProviderSettings]
        """
        return self._notifications

    @notifications.setter
    def notifications(self, notifications):
        """Sets the notifications of this DeploymentEnvironmentSettings.


        :param notifications: The notifications of this DeploymentEnvironmentSettings.
        :type notifications: List[NotificationProviderSettings]
        """

        self._notifications = notifications

    @property
    def provider_settings(self):
        """Gets the provider_settings of this DeploymentEnvironmentSettings.


        :return: The provider_settings of this DeploymentEnvironmentSettings.
        :rtype: List[StoredNameValue]
        """
        return self._provider_settings

    @provider_settings.setter
    def provider_settings(self, provider_settings):
        """Sets the provider_settings of this DeploymentEnvironmentSettings.


        :param provider_settings: The provider_settings of this DeploymentEnvironmentSettings.
        :type provider_settings: List[StoredNameValue]
        """

        self._provider_settings = provider_settings
