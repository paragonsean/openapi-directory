# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.deployment_provider_type import DeploymentProviderType
from openapi_server import util


class DeploymentEnvironmentLookupModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployment_environment_id: int=None, name: str=None, provider: DeploymentProviderType=None):
        """DeploymentEnvironmentLookupModel - a model defined in OpenAPI

        :param deployment_environment_id: The deployment_environment_id of this DeploymentEnvironmentLookupModel.
        :param name: The name of this DeploymentEnvironmentLookupModel.
        :param provider: The provider of this DeploymentEnvironmentLookupModel.
        """
        self.openapi_types = {
            'deployment_environment_id': int,
            'name': str,
            'provider': DeploymentProviderType
        }

        self.attribute_map = {
            'deployment_environment_id': 'deploymentEnvironmentId',
            'name': 'name',
            'provider': 'provider'
        }

        self._deployment_environment_id = deployment_environment_id
        self._name = name
        self._provider = provider

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentEnvironmentLookupModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentEnvironmentLookupModel of this DeploymentEnvironmentLookupModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployment_environment_id(self):
        """Gets the deployment_environment_id of this DeploymentEnvironmentLookupModel.


        :return: The deployment_environment_id of this DeploymentEnvironmentLookupModel.
        :rtype: int
        """
        return self._deployment_environment_id

    @deployment_environment_id.setter
    def deployment_environment_id(self, deployment_environment_id):
        """Sets the deployment_environment_id of this DeploymentEnvironmentLookupModel.


        :param deployment_environment_id: The deployment_environment_id of this DeploymentEnvironmentLookupModel.
        :type deployment_environment_id: int
        """
        if deployment_environment_id is not None and deployment_environment_id < 0:
            raise ValueError("Invalid value for `deployment_environment_id`, must be a value greater than or equal to `0`")

        self._deployment_environment_id = deployment_environment_id

    @property
    def name(self):
        """Gets the name of this DeploymentEnvironmentLookupModel.


        :return: The name of this DeploymentEnvironmentLookupModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeploymentEnvironmentLookupModel.


        :param name: The name of this DeploymentEnvironmentLookupModel.
        :type name: str
        """

        self._name = name

    @property
    def provider(self):
        """Gets the provider of this DeploymentEnvironmentLookupModel.


        :return: The provider of this DeploymentEnvironmentLookupModel.
        :rtype: DeploymentProviderType
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this DeploymentEnvironmentLookupModel.


        :param provider: The provider of this DeploymentEnvironmentLookupModel.
        :type provider: DeploymentProviderType
        """

        self._provider = provider
