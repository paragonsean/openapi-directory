# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ace_access_right_definition import AceAccessRightDefinition
from openapi_server.models.role_ace import RoleAce
from openapi_server import util


class SecurityDescriptor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_right_definitions: List[AceAccessRightDefinition]=None, role_aces: List[RoleAce]=None):
        """SecurityDescriptor - a model defined in OpenAPI

        :param access_right_definitions: The access_right_definitions of this SecurityDescriptor.
        :param role_aces: The role_aces of this SecurityDescriptor.
        """
        self.openapi_types = {
            'access_right_definitions': List[AceAccessRightDefinition],
            'role_aces': List[RoleAce]
        }

        self.attribute_map = {
            'access_right_definitions': 'accessRightDefinitions',
            'role_aces': 'roleAces'
        }

        self._access_right_definitions = access_right_definitions
        self._role_aces = role_aces

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecurityDescriptor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecurityDescriptor of this SecurityDescriptor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_right_definitions(self):
        """Gets the access_right_definitions of this SecurityDescriptor.


        :return: The access_right_definitions of this SecurityDescriptor.
        :rtype: List[AceAccessRightDefinition]
        """
        return self._access_right_definitions

    @access_right_definitions.setter
    def access_right_definitions(self, access_right_definitions):
        """Sets the access_right_definitions of this SecurityDescriptor.


        :param access_right_definitions: The access_right_definitions of this SecurityDescriptor.
        :type access_right_definitions: List[AceAccessRightDefinition]
        """

        self._access_right_definitions = access_right_definitions

    @property
    def role_aces(self):
        """Gets the role_aces of this SecurityDescriptor.


        :return: The role_aces of this SecurityDescriptor.
        :rtype: List[RoleAce]
        """
        return self._role_aces

    @role_aces.setter
    def role_aces(self, role_aces):
        """Sets the role_aces of this SecurityDescriptor.


        :param role_aces: The role_aces of this SecurityDescriptor.
        :type role_aces: List[RoleAce]
        """

        self._role_aces = role_aces
