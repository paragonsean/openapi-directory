# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EncryptRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, plain_value: str=''):
        """EncryptRequest - a model defined in OpenAPI

        :param plain_value: The plain_value of this EncryptRequest.
        """
        self.openapi_types = {
            'plain_value': str
        }

        self.attribute_map = {
            'plain_value': 'plainValue'
        }

        self._plain_value = plain_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EncryptRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EncryptRequest of this EncryptRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plain_value(self):
        """Gets the plain_value of this EncryptRequest.


        :return: The plain_value of this EncryptRequest.
        :rtype: str
        """
        return self._plain_value

    @plain_value.setter
    def plain_value(self, plain_value):
        """Sets the plain_value of this EncryptRequest.


        :param plain_value: The plain_value of this EncryptRequest.
        :type plain_value: str
        """

        self._plain_value = plain_value
