# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build import Build
from openapi_server.models.project import Project
from openapi_server import util


class ProjectBuildResults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build: Build=None, project: Project=None):
        """ProjectBuildResults - a model defined in OpenAPI

        :param build: The build of this ProjectBuildResults.
        :param project: The project of this ProjectBuildResults.
        """
        self.openapi_types = {
            'build': Build,
            'project': Project
        }

        self.attribute_map = {
            'build': 'build',
            'project': 'project'
        }

        self._build = build
        self._project = project

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectBuildResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectBuildResults of this ProjectBuildResults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build(self):
        """Gets the build of this ProjectBuildResults.


        :return: The build of this ProjectBuildResults.
        :rtype: Build
        """
        return self._build

    @build.setter
    def build(self, build):
        """Sets the build of this ProjectBuildResults.


        :param build: The build of this ProjectBuildResults.
        :type build: Build
        """

        self._build = build

    @property
    def project(self):
        """Gets the project of this ProjectBuildResults.


        :return: The project of this ProjectBuildResults.
        :rtype: Project
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this ProjectBuildResults.


        :param project: The project of this ProjectBuildResults.
        :type project: Project
        """

        self._project = project
