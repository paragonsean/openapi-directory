# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.artifact import Artifact
from openapi_server.models.build_mode import BuildMode
from openapi_server.models.build_worker_image_inner import BuildWorkerImageInner
from openapi_server.models.deploy_mode import DeployMode
from openapi_server.models.deployment_provider import DeploymentProvider
from openapi_server.models.host_entry import HostEntry
from openapi_server.models.ms_build_verbosity import MSBuildVerbosity
from openapi_server.models.notification_provider_settings import NotificationProviderSettings
from openapi_server.models.os_services_to_start_during_the_build_process_inner import OSServicesToStartDuringTheBuildProcessInner
from openapi_server.models.project_branches_mode import ProjectBranchesMode
from openapi_server.models.project_configuration_platform_inner import ProjectConfigurationPlatformInner
from openapi_server.models.project_configuration_test_categories_matrix_inner import ProjectConfigurationTestCategoriesMatrixInner
from openapi_server.models.script import Script
from openapi_server.models.stored_name_value import StoredNameValue
from openapi_server.models.stored_name_value_matrix import StoredNameValueMatrix
from openapi_server.models.string_value_object import StringValueObject
from openapi_server.models.test_mode import TestMode
from openapi_server.models.unknown_type import UnknownType
from openapi_server import util


class ProjectConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, after_build_scripts: List[Script]=None, after_deploy_scripts: List[Script]=None, after_test_scripts: List[Script]=None, artifacts: List[Artifact]=None, assembly_file_version_format: str=None, assembly_info_file: str=None, assembly_informational_version_format: str=None, assembly_version_format: str=None, before_build_scripts: List[Script]=None, before_deploy_scripts: List[Script]=None, before_package_scripts: List[Script]=None, before_test_scripts: List[Script]=None, branches_mode: ProjectBranchesMode=None, build_cloud: List[StringValueObject]=None, build_mode: BuildMode=None, build_scripts: List[Script]=None, cache_entries: List[StringValueObject]=None, clone_depth: int=None, clone_folder: str=None, clone_scripts: List[Script]=None, configuration: List[StringValueObject]=None, configure_nu_get_account_source: bool=None, configure_nu_get_project_source: bool=None, deploy_mode: DeployMode=None, deploy_scripts: List[Script]=None, deployments: List[DeploymentProvider]=None, disable_nu_get_publish_for_octopus_packages: bool=None, disable_nu_get_publish_on_pull_requests: bool=None, do_not_increment_build_number_on_pull_requests: bool=None, dotnet_csproj_assembly_version_format: str=None, dotnet_csproj_file: str=None, dotnet_csproj_file_version_format: str=None, dotnet_csproj_informational_version_format: str=None, dotnet_csproj_package_version_format: str=None, dotnet_csproj_version_format: str=None, environment_variables: List[StoredNameValue]=None, environment_variables_matrix: List[StoredNameValueMatrix]=None, exclude_branches: List[StringValueObject]=None, force_https_clone: bool=None, hosts_entries: List[HostEntry]=None, hot_fix_scripts: List[Script]=None, include_branches: List[StringValueObject]=None, include_nu_get_references: bool=None, init_scripts: List[Script]=None, install_scripts: List[Script]=None, matrix_allow_failures: List[StoredNameValueMatrix]=None, matrix_except: List[StoredNameValueMatrix]=None, matrix_exclude: List[StoredNameValueMatrix]=None, matrix_fast_finish: bool=None, matrix_only: List[StoredNameValueMatrix]=None, max_jobs: int=None, ms_build_in_parallel: bool=None, ms_build_project_file_name: str=None, ms_build_verbosity: MSBuildVerbosity=None, notifications: List[NotificationProviderSettings]=None, on_build_error_scripts: List[Script]=None, on_build_finish_scripts: List[Script]=None, on_build_success_scripts: List[Script]=None, only_commits_files: List[StringValueObject]=None, operating_system: List[BuildWorkerImageInner]=None, package_asp_net_core_projects: bool=None, package_azure_cloud_service_projects: bool=None, package_dotnet_console_projects: bool=None, package_nu_get_projects: bool=None, package_nu_get_symbols: bool=None, package_web_application_projects: bool=None, package_web_application_projects_beanstalk: bool=None, package_web_application_projects_octopus: bool=None, package_web_application_projects_x_copy: bool=None, patch_assembly_info: bool=None, patch_dotnet_csproj: bool=None, platform: List[ProjectConfigurationPlatformInner]=None, services: List[OSServicesToStartDuringTheBuildProcessInner]=None, shallow_clone: bool=None, skip_branch_with_pull_requests: bool=None, skip_commits_files: List[StringValueObject]=None, skip_non_tags: bool=None, skip_tags: bool=None, stacks: List[UnknownType]=None, test_assemblies: List[StringValueObject]=None, test_categories: List[StringValueObject]=None, test_categories_matrix: List[ProjectConfigurationTestCategoriesMatrixInner]=None, test_categories_mode: str=None, test_mode: TestMode=None, test_scripts: List[Script]=None, xamarin_register_android_product: bool=None, xamarin_register_ios_product: bool=None):
        """ProjectConfiguration - a model defined in OpenAPI

        :param after_build_scripts: The after_build_scripts of this ProjectConfiguration.
        :param after_deploy_scripts: The after_deploy_scripts of this ProjectConfiguration.
        :param after_test_scripts: The after_test_scripts of this ProjectConfiguration.
        :param artifacts: The artifacts of this ProjectConfiguration.
        :param assembly_file_version_format: The assembly_file_version_format of this ProjectConfiguration.
        :param assembly_info_file: The assembly_info_file of this ProjectConfiguration.
        :param assembly_informational_version_format: The assembly_informational_version_format of this ProjectConfiguration.
        :param assembly_version_format: The assembly_version_format of this ProjectConfiguration.
        :param before_build_scripts: The before_build_scripts of this ProjectConfiguration.
        :param before_deploy_scripts: The before_deploy_scripts of this ProjectConfiguration.
        :param before_package_scripts: The before_package_scripts of this ProjectConfiguration.
        :param before_test_scripts: The before_test_scripts of this ProjectConfiguration.
        :param branches_mode: The branches_mode of this ProjectConfiguration.
        :param build_cloud: The build_cloud of this ProjectConfiguration.
        :param build_mode: The build_mode of this ProjectConfiguration.
        :param build_scripts: The build_scripts of this ProjectConfiguration.
        :param cache_entries: The cache_entries of this ProjectConfiguration.
        :param clone_depth: The clone_depth of this ProjectConfiguration.
        :param clone_folder: The clone_folder of this ProjectConfiguration.
        :param clone_scripts: The clone_scripts of this ProjectConfiguration.
        :param configuration: The configuration of this ProjectConfiguration.
        :param configure_nu_get_account_source: The configure_nu_get_account_source of this ProjectConfiguration.
        :param configure_nu_get_project_source: The configure_nu_get_project_source of this ProjectConfiguration.
        :param deploy_mode: The deploy_mode of this ProjectConfiguration.
        :param deploy_scripts: The deploy_scripts of this ProjectConfiguration.
        :param deployments: The deployments of this ProjectConfiguration.
        :param disable_nu_get_publish_for_octopus_packages: The disable_nu_get_publish_for_octopus_packages of this ProjectConfiguration.
        :param disable_nu_get_publish_on_pull_requests: The disable_nu_get_publish_on_pull_requests of this ProjectConfiguration.
        :param do_not_increment_build_number_on_pull_requests: The do_not_increment_build_number_on_pull_requests of this ProjectConfiguration.
        :param dotnet_csproj_assembly_version_format: The dotnet_csproj_assembly_version_format of this ProjectConfiguration.
        :param dotnet_csproj_file: The dotnet_csproj_file of this ProjectConfiguration.
        :param dotnet_csproj_file_version_format: The dotnet_csproj_file_version_format of this ProjectConfiguration.
        :param dotnet_csproj_informational_version_format: The dotnet_csproj_informational_version_format of this ProjectConfiguration.
        :param dotnet_csproj_package_version_format: The dotnet_csproj_package_version_format of this ProjectConfiguration.
        :param dotnet_csproj_version_format: The dotnet_csproj_version_format of this ProjectConfiguration.
        :param environment_variables: The environment_variables of this ProjectConfiguration.
        :param environment_variables_matrix: The environment_variables_matrix of this ProjectConfiguration.
        :param exclude_branches: The exclude_branches of this ProjectConfiguration.
        :param force_https_clone: The force_https_clone of this ProjectConfiguration.
        :param hosts_entries: The hosts_entries of this ProjectConfiguration.
        :param hot_fix_scripts: The hot_fix_scripts of this ProjectConfiguration.
        :param include_branches: The include_branches of this ProjectConfiguration.
        :param include_nu_get_references: The include_nu_get_references of this ProjectConfiguration.
        :param init_scripts: The init_scripts of this ProjectConfiguration.
        :param install_scripts: The install_scripts of this ProjectConfiguration.
        :param matrix_allow_failures: The matrix_allow_failures of this ProjectConfiguration.
        :param matrix_except: The matrix_except of this ProjectConfiguration.
        :param matrix_exclude: The matrix_exclude of this ProjectConfiguration.
        :param matrix_fast_finish: The matrix_fast_finish of this ProjectConfiguration.
        :param matrix_only: The matrix_only of this ProjectConfiguration.
        :param max_jobs: The max_jobs of this ProjectConfiguration.
        :param ms_build_in_parallel: The ms_build_in_parallel of this ProjectConfiguration.
        :param ms_build_project_file_name: The ms_build_project_file_name of this ProjectConfiguration.
        :param ms_build_verbosity: The ms_build_verbosity of this ProjectConfiguration.
        :param notifications: The notifications of this ProjectConfiguration.
        :param on_build_error_scripts: The on_build_error_scripts of this ProjectConfiguration.
        :param on_build_finish_scripts: The on_build_finish_scripts of this ProjectConfiguration.
        :param on_build_success_scripts: The on_build_success_scripts of this ProjectConfiguration.
        :param only_commits_files: The only_commits_files of this ProjectConfiguration.
        :param operating_system: The operating_system of this ProjectConfiguration.
        :param package_asp_net_core_projects: The package_asp_net_core_projects of this ProjectConfiguration.
        :param package_azure_cloud_service_projects: The package_azure_cloud_service_projects of this ProjectConfiguration.
        :param package_dotnet_console_projects: The package_dotnet_console_projects of this ProjectConfiguration.
        :param package_nu_get_projects: The package_nu_get_projects of this ProjectConfiguration.
        :param package_nu_get_symbols: The package_nu_get_symbols of this ProjectConfiguration.
        :param package_web_application_projects: The package_web_application_projects of this ProjectConfiguration.
        :param package_web_application_projects_beanstalk: The package_web_application_projects_beanstalk of this ProjectConfiguration.
        :param package_web_application_projects_octopus: The package_web_application_projects_octopus of this ProjectConfiguration.
        :param package_web_application_projects_x_copy: The package_web_application_projects_x_copy of this ProjectConfiguration.
        :param patch_assembly_info: The patch_assembly_info of this ProjectConfiguration.
        :param patch_dotnet_csproj: The patch_dotnet_csproj of this ProjectConfiguration.
        :param platform: The platform of this ProjectConfiguration.
        :param services: The services of this ProjectConfiguration.
        :param shallow_clone: The shallow_clone of this ProjectConfiguration.
        :param skip_branch_with_pull_requests: The skip_branch_with_pull_requests of this ProjectConfiguration.
        :param skip_commits_files: The skip_commits_files of this ProjectConfiguration.
        :param skip_non_tags: The skip_non_tags of this ProjectConfiguration.
        :param skip_tags: The skip_tags of this ProjectConfiguration.
        :param stacks: The stacks of this ProjectConfiguration.
        :param test_assemblies: The test_assemblies of this ProjectConfiguration.
        :param test_categories: The test_categories of this ProjectConfiguration.
        :param test_categories_matrix: The test_categories_matrix of this ProjectConfiguration.
        :param test_categories_mode: The test_categories_mode of this ProjectConfiguration.
        :param test_mode: The test_mode of this ProjectConfiguration.
        :param test_scripts: The test_scripts of this ProjectConfiguration.
        :param xamarin_register_android_product: The xamarin_register_android_product of this ProjectConfiguration.
        :param xamarin_register_ios_product: The xamarin_register_ios_product of this ProjectConfiguration.
        """
        self.openapi_types = {
            'after_build_scripts': List[Script],
            'after_deploy_scripts': List[Script],
            'after_test_scripts': List[Script],
            'artifacts': List[Artifact],
            'assembly_file_version_format': str,
            'assembly_info_file': str,
            'assembly_informational_version_format': str,
            'assembly_version_format': str,
            'before_build_scripts': List[Script],
            'before_deploy_scripts': List[Script],
            'before_package_scripts': List[Script],
            'before_test_scripts': List[Script],
            'branches_mode': ProjectBranchesMode,
            'build_cloud': List[StringValueObject],
            'build_mode': BuildMode,
            'build_scripts': List[Script],
            'cache_entries': List[StringValueObject],
            'clone_depth': int,
            'clone_folder': str,
            'clone_scripts': List[Script],
            'configuration': List[StringValueObject],
            'configure_nu_get_account_source': bool,
            'configure_nu_get_project_source': bool,
            'deploy_mode': DeployMode,
            'deploy_scripts': List[Script],
            'deployments': List[DeploymentProvider],
            'disable_nu_get_publish_for_octopus_packages': bool,
            'disable_nu_get_publish_on_pull_requests': bool,
            'do_not_increment_build_number_on_pull_requests': bool,
            'dotnet_csproj_assembly_version_format': str,
            'dotnet_csproj_file': str,
            'dotnet_csproj_file_version_format': str,
            'dotnet_csproj_informational_version_format': str,
            'dotnet_csproj_package_version_format': str,
            'dotnet_csproj_version_format': str,
            'environment_variables': List[StoredNameValue],
            'environment_variables_matrix': List[StoredNameValueMatrix],
            'exclude_branches': List[StringValueObject],
            'force_https_clone': bool,
            'hosts_entries': List[HostEntry],
            'hot_fix_scripts': List[Script],
            'include_branches': List[StringValueObject],
            'include_nu_get_references': bool,
            'init_scripts': List[Script],
            'install_scripts': List[Script],
            'matrix_allow_failures': List[StoredNameValueMatrix],
            'matrix_except': List[StoredNameValueMatrix],
            'matrix_exclude': List[StoredNameValueMatrix],
            'matrix_fast_finish': bool,
            'matrix_only': List[StoredNameValueMatrix],
            'max_jobs': int,
            'ms_build_in_parallel': bool,
            'ms_build_project_file_name': str,
            'ms_build_verbosity': MSBuildVerbosity,
            'notifications': List[NotificationProviderSettings],
            'on_build_error_scripts': List[Script],
            'on_build_finish_scripts': List[Script],
            'on_build_success_scripts': List[Script],
            'only_commits_files': List[StringValueObject],
            'operating_system': List[BuildWorkerImageInner],
            'package_asp_net_core_projects': bool,
            'package_azure_cloud_service_projects': bool,
            'package_dotnet_console_projects': bool,
            'package_nu_get_projects': bool,
            'package_nu_get_symbols': bool,
            'package_web_application_projects': bool,
            'package_web_application_projects_beanstalk': bool,
            'package_web_application_projects_octopus': bool,
            'package_web_application_projects_x_copy': bool,
            'patch_assembly_info': bool,
            'patch_dotnet_csproj': bool,
            'platform': List[ProjectConfigurationPlatformInner],
            'services': List[OSServicesToStartDuringTheBuildProcessInner],
            'shallow_clone': bool,
            'skip_branch_with_pull_requests': bool,
            'skip_commits_files': List[StringValueObject],
            'skip_non_tags': bool,
            'skip_tags': bool,
            'stacks': List[UnknownType],
            'test_assemblies': List[StringValueObject],
            'test_categories': List[StringValueObject],
            'test_categories_matrix': List[ProjectConfigurationTestCategoriesMatrixInner],
            'test_categories_mode': str,
            'test_mode': TestMode,
            'test_scripts': List[Script],
            'xamarin_register_android_product': bool,
            'xamarin_register_ios_product': bool
        }

        self.attribute_map = {
            'after_build_scripts': 'afterBuildScripts',
            'after_deploy_scripts': 'afterDeployScripts',
            'after_test_scripts': 'afterTestScripts',
            'artifacts': 'artifacts',
            'assembly_file_version_format': 'assemblyFileVersionFormat',
            'assembly_info_file': 'assemblyInfoFile',
            'assembly_informational_version_format': 'assemblyInformationalVersionFormat',
            'assembly_version_format': 'assemblyVersionFormat',
            'before_build_scripts': 'beforeBuildScripts',
            'before_deploy_scripts': 'beforeDeployScripts',
            'before_package_scripts': 'beforePackageScripts',
            'before_test_scripts': 'beforeTestScripts',
            'branches_mode': 'branchesMode',
            'build_cloud': 'buildCloud',
            'build_mode': 'buildMode',
            'build_scripts': 'buildScripts',
            'cache_entries': 'cacheEntries',
            'clone_depth': 'cloneDepth',
            'clone_folder': 'cloneFolder',
            'clone_scripts': 'cloneScripts',
            'configuration': 'configuration',
            'configure_nu_get_account_source': 'configureNuGetAccountSource',
            'configure_nu_get_project_source': 'configureNuGetProjectSource',
            'deploy_mode': 'deployMode',
            'deploy_scripts': 'deployScripts',
            'deployments': 'deployments',
            'disable_nu_get_publish_for_octopus_packages': 'disableNuGetPublishForOctopusPackages',
            'disable_nu_get_publish_on_pull_requests': 'disableNuGetPublishOnPullRequests',
            'do_not_increment_build_number_on_pull_requests': 'doNotIncrementBuildNumberOnPullRequests',
            'dotnet_csproj_assembly_version_format': 'dotnetCsprojAssemblyVersionFormat',
            'dotnet_csproj_file': 'dotnetCsprojFile',
            'dotnet_csproj_file_version_format': 'dotnetCsprojFileVersionFormat',
            'dotnet_csproj_informational_version_format': 'dotnetCsprojInformationalVersionFormat',
            'dotnet_csproj_package_version_format': 'dotnetCsprojPackageVersionFormat',
            'dotnet_csproj_version_format': 'dotnetCsprojVersionFormat',
            'environment_variables': 'environmentVariables',
            'environment_variables_matrix': 'environmentVariablesMatrix',
            'exclude_branches': 'excludeBranches',
            'force_https_clone': 'forceHttpsClone',
            'hosts_entries': 'hostsEntries',
            'hot_fix_scripts': 'hotFixScripts',
            'include_branches': 'includeBranches',
            'include_nu_get_references': 'includeNuGetReferences',
            'init_scripts': 'initScripts',
            'install_scripts': 'installScripts',
            'matrix_allow_failures': 'matrixAllowFailures',
            'matrix_except': 'matrixExcept',
            'matrix_exclude': 'matrixExclude',
            'matrix_fast_finish': 'matrixFastFinish',
            'matrix_only': 'matrixOnly',
            'max_jobs': 'maxJobs',
            'ms_build_in_parallel': 'msBuildInParallel',
            'ms_build_project_file_name': 'msBuildProjectFileName',
            'ms_build_verbosity': 'msBuildVerbosity',
            'notifications': 'notifications',
            'on_build_error_scripts': 'onBuildErrorScripts',
            'on_build_finish_scripts': 'onBuildFinishScripts',
            'on_build_success_scripts': 'onBuildSuccessScripts',
            'only_commits_files': 'onlyCommitsFiles',
            'operating_system': 'operatingSystem',
            'package_asp_net_core_projects': 'packageAspNetCoreProjects',
            'package_azure_cloud_service_projects': 'packageAzureCloudServiceProjects',
            'package_dotnet_console_projects': 'packageDotnetConsoleProjects',
            'package_nu_get_projects': 'packageNuGetProjects',
            'package_nu_get_symbols': 'packageNuGetSymbols',
            'package_web_application_projects': 'packageWebApplicationProjects',
            'package_web_application_projects_beanstalk': 'packageWebApplicationProjectsBeanstalk',
            'package_web_application_projects_octopus': 'packageWebApplicationProjectsOctopus',
            'package_web_application_projects_x_copy': 'packageWebApplicationProjectsXCopy',
            'patch_assembly_info': 'patchAssemblyInfo',
            'patch_dotnet_csproj': 'patchDotnetCsproj',
            'platform': 'platform',
            'services': 'services',
            'shallow_clone': 'shallowClone',
            'skip_branch_with_pull_requests': 'skipBranchWithPullRequests',
            'skip_commits_files': 'skipCommitsFiles',
            'skip_non_tags': 'skipNonTags',
            'skip_tags': 'skipTags',
            'stacks': 'stacks',
            'test_assemblies': 'testAssemblies',
            'test_categories': 'testCategories',
            'test_categories_matrix': 'testCategoriesMatrix',
            'test_categories_mode': 'testCategoriesMode',
            'test_mode': 'testMode',
            'test_scripts': 'testScripts',
            'xamarin_register_android_product': 'xamarinRegisterAndroidProduct',
            'xamarin_register_ios_product': 'xamarinRegisterIosProduct'
        }

        self._after_build_scripts = after_build_scripts
        self._after_deploy_scripts = after_deploy_scripts
        self._after_test_scripts = after_test_scripts
        self._artifacts = artifacts
        self._assembly_file_version_format = assembly_file_version_format
        self._assembly_info_file = assembly_info_file
        self._assembly_informational_version_format = assembly_informational_version_format
        self._assembly_version_format = assembly_version_format
        self._before_build_scripts = before_build_scripts
        self._before_deploy_scripts = before_deploy_scripts
        self._before_package_scripts = before_package_scripts
        self._before_test_scripts = before_test_scripts
        self._branches_mode = branches_mode
        self._build_cloud = build_cloud
        self._build_mode = build_mode
        self._build_scripts = build_scripts
        self._cache_entries = cache_entries
        self._clone_depth = clone_depth
        self._clone_folder = clone_folder
        self._clone_scripts = clone_scripts
        self._configuration = configuration
        self._configure_nu_get_account_source = configure_nu_get_account_source
        self._configure_nu_get_project_source = configure_nu_get_project_source
        self._deploy_mode = deploy_mode
        self._deploy_scripts = deploy_scripts
        self._deployments = deployments
        self._disable_nu_get_publish_for_octopus_packages = disable_nu_get_publish_for_octopus_packages
        self._disable_nu_get_publish_on_pull_requests = disable_nu_get_publish_on_pull_requests
        self._do_not_increment_build_number_on_pull_requests = do_not_increment_build_number_on_pull_requests
        self._dotnet_csproj_assembly_version_format = dotnet_csproj_assembly_version_format
        self._dotnet_csproj_file = dotnet_csproj_file
        self._dotnet_csproj_file_version_format = dotnet_csproj_file_version_format
        self._dotnet_csproj_informational_version_format = dotnet_csproj_informational_version_format
        self._dotnet_csproj_package_version_format = dotnet_csproj_package_version_format
        self._dotnet_csproj_version_format = dotnet_csproj_version_format
        self._environment_variables = environment_variables
        self._environment_variables_matrix = environment_variables_matrix
        self._exclude_branches = exclude_branches
        self._force_https_clone = force_https_clone
        self._hosts_entries = hosts_entries
        self._hot_fix_scripts = hot_fix_scripts
        self._include_branches = include_branches
        self._include_nu_get_references = include_nu_get_references
        self._init_scripts = init_scripts
        self._install_scripts = install_scripts
        self._matrix_allow_failures = matrix_allow_failures
        self._matrix_except = matrix_except
        self._matrix_exclude = matrix_exclude
        self._matrix_fast_finish = matrix_fast_finish
        self._matrix_only = matrix_only
        self._max_jobs = max_jobs
        self._ms_build_in_parallel = ms_build_in_parallel
        self._ms_build_project_file_name = ms_build_project_file_name
        self._ms_build_verbosity = ms_build_verbosity
        self._notifications = notifications
        self._on_build_error_scripts = on_build_error_scripts
        self._on_build_finish_scripts = on_build_finish_scripts
        self._on_build_success_scripts = on_build_success_scripts
        self._only_commits_files = only_commits_files
        self._operating_system = operating_system
        self._package_asp_net_core_projects = package_asp_net_core_projects
        self._package_azure_cloud_service_projects = package_azure_cloud_service_projects
        self._package_dotnet_console_projects = package_dotnet_console_projects
        self._package_nu_get_projects = package_nu_get_projects
        self._package_nu_get_symbols = package_nu_get_symbols
        self._package_web_application_projects = package_web_application_projects
        self._package_web_application_projects_beanstalk = package_web_application_projects_beanstalk
        self._package_web_application_projects_octopus = package_web_application_projects_octopus
        self._package_web_application_projects_x_copy = package_web_application_projects_x_copy
        self._patch_assembly_info = patch_assembly_info
        self._patch_dotnet_csproj = patch_dotnet_csproj
        self._platform = platform
        self._services = services
        self._shallow_clone = shallow_clone
        self._skip_branch_with_pull_requests = skip_branch_with_pull_requests
        self._skip_commits_files = skip_commits_files
        self._skip_non_tags = skip_non_tags
        self._skip_tags = skip_tags
        self._stacks = stacks
        self._test_assemblies = test_assemblies
        self._test_categories = test_categories
        self._test_categories_matrix = test_categories_matrix
        self._test_categories_mode = test_categories_mode
        self._test_mode = test_mode
        self._test_scripts = test_scripts
        self._xamarin_register_android_product = xamarin_register_android_product
        self._xamarin_register_ios_product = xamarin_register_ios_product

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectConfiguration of this ProjectConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def after_build_scripts(self):
        """Gets the after_build_scripts of this ProjectConfiguration.


        :return: The after_build_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._after_build_scripts

    @after_build_scripts.setter
    def after_build_scripts(self, after_build_scripts):
        """Sets the after_build_scripts of this ProjectConfiguration.


        :param after_build_scripts: The after_build_scripts of this ProjectConfiguration.
        :type after_build_scripts: List[Script]
        """

        self._after_build_scripts = after_build_scripts

    @property
    def after_deploy_scripts(self):
        """Gets the after_deploy_scripts of this ProjectConfiguration.


        :return: The after_deploy_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._after_deploy_scripts

    @after_deploy_scripts.setter
    def after_deploy_scripts(self, after_deploy_scripts):
        """Sets the after_deploy_scripts of this ProjectConfiguration.


        :param after_deploy_scripts: The after_deploy_scripts of this ProjectConfiguration.
        :type after_deploy_scripts: List[Script]
        """

        self._after_deploy_scripts = after_deploy_scripts

    @property
    def after_test_scripts(self):
        """Gets the after_test_scripts of this ProjectConfiguration.


        :return: The after_test_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._after_test_scripts

    @after_test_scripts.setter
    def after_test_scripts(self, after_test_scripts):
        """Sets the after_test_scripts of this ProjectConfiguration.


        :param after_test_scripts: The after_test_scripts of this ProjectConfiguration.
        :type after_test_scripts: List[Script]
        """

        self._after_test_scripts = after_test_scripts

    @property
    def artifacts(self):
        """Gets the artifacts of this ProjectConfiguration.


        :return: The artifacts of this ProjectConfiguration.
        :rtype: List[Artifact]
        """
        return self._artifacts

    @artifacts.setter
    def artifacts(self, artifacts):
        """Sets the artifacts of this ProjectConfiguration.


        :param artifacts: The artifacts of this ProjectConfiguration.
        :type artifacts: List[Artifact]
        """

        self._artifacts = artifacts

    @property
    def assembly_file_version_format(self):
        """Gets the assembly_file_version_format of this ProjectConfiguration.


        :return: The assembly_file_version_format of this ProjectConfiguration.
        :rtype: str
        """
        return self._assembly_file_version_format

    @assembly_file_version_format.setter
    def assembly_file_version_format(self, assembly_file_version_format):
        """Sets the assembly_file_version_format of this ProjectConfiguration.


        :param assembly_file_version_format: The assembly_file_version_format of this ProjectConfiguration.
        :type assembly_file_version_format: str
        """

        self._assembly_file_version_format = assembly_file_version_format

    @property
    def assembly_info_file(self):
        """Gets the assembly_info_file of this ProjectConfiguration.


        :return: The assembly_info_file of this ProjectConfiguration.
        :rtype: str
        """
        return self._assembly_info_file

    @assembly_info_file.setter
    def assembly_info_file(self, assembly_info_file):
        """Sets the assembly_info_file of this ProjectConfiguration.


        :param assembly_info_file: The assembly_info_file of this ProjectConfiguration.
        :type assembly_info_file: str
        """

        self._assembly_info_file = assembly_info_file

    @property
    def assembly_informational_version_format(self):
        """Gets the assembly_informational_version_format of this ProjectConfiguration.


        :return: The assembly_informational_version_format of this ProjectConfiguration.
        :rtype: str
        """
        return self._assembly_informational_version_format

    @assembly_informational_version_format.setter
    def assembly_informational_version_format(self, assembly_informational_version_format):
        """Sets the assembly_informational_version_format of this ProjectConfiguration.


        :param assembly_informational_version_format: The assembly_informational_version_format of this ProjectConfiguration.
        :type assembly_informational_version_format: str
        """

        self._assembly_informational_version_format = assembly_informational_version_format

    @property
    def assembly_version_format(self):
        """Gets the assembly_version_format of this ProjectConfiguration.


        :return: The assembly_version_format of this ProjectConfiguration.
        :rtype: str
        """
        return self._assembly_version_format

    @assembly_version_format.setter
    def assembly_version_format(self, assembly_version_format):
        """Sets the assembly_version_format of this ProjectConfiguration.


        :param assembly_version_format: The assembly_version_format of this ProjectConfiguration.
        :type assembly_version_format: str
        """

        self._assembly_version_format = assembly_version_format

    @property
    def before_build_scripts(self):
        """Gets the before_build_scripts of this ProjectConfiguration.


        :return: The before_build_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._before_build_scripts

    @before_build_scripts.setter
    def before_build_scripts(self, before_build_scripts):
        """Sets the before_build_scripts of this ProjectConfiguration.


        :param before_build_scripts: The before_build_scripts of this ProjectConfiguration.
        :type before_build_scripts: List[Script]
        """

        self._before_build_scripts = before_build_scripts

    @property
    def before_deploy_scripts(self):
        """Gets the before_deploy_scripts of this ProjectConfiguration.


        :return: The before_deploy_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._before_deploy_scripts

    @before_deploy_scripts.setter
    def before_deploy_scripts(self, before_deploy_scripts):
        """Sets the before_deploy_scripts of this ProjectConfiguration.


        :param before_deploy_scripts: The before_deploy_scripts of this ProjectConfiguration.
        :type before_deploy_scripts: List[Script]
        """

        self._before_deploy_scripts = before_deploy_scripts

    @property
    def before_package_scripts(self):
        """Gets the before_package_scripts of this ProjectConfiguration.


        :return: The before_package_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._before_package_scripts

    @before_package_scripts.setter
    def before_package_scripts(self, before_package_scripts):
        """Sets the before_package_scripts of this ProjectConfiguration.


        :param before_package_scripts: The before_package_scripts of this ProjectConfiguration.
        :type before_package_scripts: List[Script]
        """

        self._before_package_scripts = before_package_scripts

    @property
    def before_test_scripts(self):
        """Gets the before_test_scripts of this ProjectConfiguration.


        :return: The before_test_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._before_test_scripts

    @before_test_scripts.setter
    def before_test_scripts(self, before_test_scripts):
        """Sets the before_test_scripts of this ProjectConfiguration.


        :param before_test_scripts: The before_test_scripts of this ProjectConfiguration.
        :type before_test_scripts: List[Script]
        """

        self._before_test_scripts = before_test_scripts

    @property
    def branches_mode(self):
        """Gets the branches_mode of this ProjectConfiguration.


        :return: The branches_mode of this ProjectConfiguration.
        :rtype: ProjectBranchesMode
        """
        return self._branches_mode

    @branches_mode.setter
    def branches_mode(self, branches_mode):
        """Sets the branches_mode of this ProjectConfiguration.


        :param branches_mode: The branches_mode of this ProjectConfiguration.
        :type branches_mode: ProjectBranchesMode
        """

        self._branches_mode = branches_mode

    @property
    def build_cloud(self):
        """Gets the build_cloud of this ProjectConfiguration.


        :return: The build_cloud of this ProjectConfiguration.
        :rtype: List[StringValueObject]
        """
        return self._build_cloud

    @build_cloud.setter
    def build_cloud(self, build_cloud):
        """Sets the build_cloud of this ProjectConfiguration.


        :param build_cloud: The build_cloud of this ProjectConfiguration.
        :type build_cloud: List[StringValueObject]
        """

        self._build_cloud = build_cloud

    @property
    def build_mode(self):
        """Gets the build_mode of this ProjectConfiguration.


        :return: The build_mode of this ProjectConfiguration.
        :rtype: BuildMode
        """
        return self._build_mode

    @build_mode.setter
    def build_mode(self, build_mode):
        """Sets the build_mode of this ProjectConfiguration.


        :param build_mode: The build_mode of this ProjectConfiguration.
        :type build_mode: BuildMode
        """

        self._build_mode = build_mode

    @property
    def build_scripts(self):
        """Gets the build_scripts of this ProjectConfiguration.

        Only set/used when `buildMode` is `script`.

        :return: The build_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._build_scripts

    @build_scripts.setter
    def build_scripts(self, build_scripts):
        """Sets the build_scripts of this ProjectConfiguration.

        Only set/used when `buildMode` is `script`.

        :param build_scripts: The build_scripts of this ProjectConfiguration.
        :type build_scripts: List[Script]
        """

        self._build_scripts = build_scripts

    @property
    def cache_entries(self):
        """Gets the cache_entries of this ProjectConfiguration.


        :return: The cache_entries of this ProjectConfiguration.
        :rtype: List[StringValueObject]
        """
        return self._cache_entries

    @cache_entries.setter
    def cache_entries(self, cache_entries):
        """Sets the cache_entries of this ProjectConfiguration.


        :param cache_entries: The cache_entries of this ProjectConfiguration.
        :type cache_entries: List[StringValueObject]
        """

        self._cache_entries = cache_entries

    @property
    def clone_depth(self):
        """Gets the clone_depth of this ProjectConfiguration.


        :return: The clone_depth of this ProjectConfiguration.
        :rtype: int
        """
        return self._clone_depth

    @clone_depth.setter
    def clone_depth(self, clone_depth):
        """Sets the clone_depth of this ProjectConfiguration.


        :param clone_depth: The clone_depth of this ProjectConfiguration.
        :type clone_depth: int
        """
        if clone_depth is not None and clone_depth < 1:
            raise ValueError("Invalid value for `clone_depth`, must be a value greater than or equal to `1`")

        self._clone_depth = clone_depth

    @property
    def clone_folder(self):
        """Gets the clone_folder of this ProjectConfiguration.


        :return: The clone_folder of this ProjectConfiguration.
        :rtype: str
        """
        return self._clone_folder

    @clone_folder.setter
    def clone_folder(self, clone_folder):
        """Sets the clone_folder of this ProjectConfiguration.


        :param clone_folder: The clone_folder of this ProjectConfiguration.
        :type clone_folder: str
        """

        self._clone_folder = clone_folder

    @property
    def clone_scripts(self):
        """Gets the clone_scripts of this ProjectConfiguration.


        :return: The clone_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._clone_scripts

    @clone_scripts.setter
    def clone_scripts(self, clone_scripts):
        """Sets the clone_scripts of this ProjectConfiguration.


        :param clone_scripts: The clone_scripts of this ProjectConfiguration.
        :type clone_scripts: List[Script]
        """

        self._clone_scripts = clone_scripts

    @property
    def configuration(self):
        """Gets the configuration of this ProjectConfiguration.


        :return: The configuration of this ProjectConfiguration.
        :rtype: List[StringValueObject]
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this ProjectConfiguration.


        :param configuration: The configuration of this ProjectConfiguration.
        :type configuration: List[StringValueObject]
        """

        self._configuration = configuration

    @property
    def configure_nu_get_account_source(self):
        """Gets the configure_nu_get_account_source of this ProjectConfiguration.


        :return: The configure_nu_get_account_source of this ProjectConfiguration.
        :rtype: bool
        """
        return self._configure_nu_get_account_source

    @configure_nu_get_account_source.setter
    def configure_nu_get_account_source(self, configure_nu_get_account_source):
        """Sets the configure_nu_get_account_source of this ProjectConfiguration.


        :param configure_nu_get_account_source: The configure_nu_get_account_source of this ProjectConfiguration.
        :type configure_nu_get_account_source: bool
        """

        self._configure_nu_get_account_source = configure_nu_get_account_source

    @property
    def configure_nu_get_project_source(self):
        """Gets the configure_nu_get_project_source of this ProjectConfiguration.


        :return: The configure_nu_get_project_source of this ProjectConfiguration.
        :rtype: bool
        """
        return self._configure_nu_get_project_source

    @configure_nu_get_project_source.setter
    def configure_nu_get_project_source(self, configure_nu_get_project_source):
        """Sets the configure_nu_get_project_source of this ProjectConfiguration.


        :param configure_nu_get_project_source: The configure_nu_get_project_source of this ProjectConfiguration.
        :type configure_nu_get_project_source: bool
        """

        self._configure_nu_get_project_source = configure_nu_get_project_source

    @property
    def deploy_mode(self):
        """Gets the deploy_mode of this ProjectConfiguration.


        :return: The deploy_mode of this ProjectConfiguration.
        :rtype: DeployMode
        """
        return self._deploy_mode

    @deploy_mode.setter
    def deploy_mode(self, deploy_mode):
        """Sets the deploy_mode of this ProjectConfiguration.


        :param deploy_mode: The deploy_mode of this ProjectConfiguration.
        :type deploy_mode: DeployMode
        """

        self._deploy_mode = deploy_mode

    @property
    def deploy_scripts(self):
        """Gets the deploy_scripts of this ProjectConfiguration.


        :return: The deploy_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._deploy_scripts

    @deploy_scripts.setter
    def deploy_scripts(self, deploy_scripts):
        """Sets the deploy_scripts of this ProjectConfiguration.


        :param deploy_scripts: The deploy_scripts of this ProjectConfiguration.
        :type deploy_scripts: List[Script]
        """

        self._deploy_scripts = deploy_scripts

    @property
    def deployments(self):
        """Gets the deployments of this ProjectConfiguration.


        :return: The deployments of this ProjectConfiguration.
        :rtype: List[DeploymentProvider]
        """
        return self._deployments

    @deployments.setter
    def deployments(self, deployments):
        """Sets the deployments of this ProjectConfiguration.


        :param deployments: The deployments of this ProjectConfiguration.
        :type deployments: List[DeploymentProvider]
        """

        self._deployments = deployments

    @property
    def disable_nu_get_publish_for_octopus_packages(self):
        """Gets the disable_nu_get_publish_for_octopus_packages of this ProjectConfiguration.


        :return: The disable_nu_get_publish_for_octopus_packages of this ProjectConfiguration.
        :rtype: bool
        """
        return self._disable_nu_get_publish_for_octopus_packages

    @disable_nu_get_publish_for_octopus_packages.setter
    def disable_nu_get_publish_for_octopus_packages(self, disable_nu_get_publish_for_octopus_packages):
        """Sets the disable_nu_get_publish_for_octopus_packages of this ProjectConfiguration.


        :param disable_nu_get_publish_for_octopus_packages: The disable_nu_get_publish_for_octopus_packages of this ProjectConfiguration.
        :type disable_nu_get_publish_for_octopus_packages: bool
        """

        self._disable_nu_get_publish_for_octopus_packages = disable_nu_get_publish_for_octopus_packages

    @property
    def disable_nu_get_publish_on_pull_requests(self):
        """Gets the disable_nu_get_publish_on_pull_requests of this ProjectConfiguration.


        :return: The disable_nu_get_publish_on_pull_requests of this ProjectConfiguration.
        :rtype: bool
        """
        return self._disable_nu_get_publish_on_pull_requests

    @disable_nu_get_publish_on_pull_requests.setter
    def disable_nu_get_publish_on_pull_requests(self, disable_nu_get_publish_on_pull_requests):
        """Sets the disable_nu_get_publish_on_pull_requests of this ProjectConfiguration.


        :param disable_nu_get_publish_on_pull_requests: The disable_nu_get_publish_on_pull_requests of this ProjectConfiguration.
        :type disable_nu_get_publish_on_pull_requests: bool
        """

        self._disable_nu_get_publish_on_pull_requests = disable_nu_get_publish_on_pull_requests

    @property
    def do_not_increment_build_number_on_pull_requests(self):
        """Gets the do_not_increment_build_number_on_pull_requests of this ProjectConfiguration.


        :return: The do_not_increment_build_number_on_pull_requests of this ProjectConfiguration.
        :rtype: bool
        """
        return self._do_not_increment_build_number_on_pull_requests

    @do_not_increment_build_number_on_pull_requests.setter
    def do_not_increment_build_number_on_pull_requests(self, do_not_increment_build_number_on_pull_requests):
        """Sets the do_not_increment_build_number_on_pull_requests of this ProjectConfiguration.


        :param do_not_increment_build_number_on_pull_requests: The do_not_increment_build_number_on_pull_requests of this ProjectConfiguration.
        :type do_not_increment_build_number_on_pull_requests: bool
        """

        self._do_not_increment_build_number_on_pull_requests = do_not_increment_build_number_on_pull_requests

    @property
    def dotnet_csproj_assembly_version_format(self):
        """Gets the dotnet_csproj_assembly_version_format of this ProjectConfiguration.


        :return: The dotnet_csproj_assembly_version_format of this ProjectConfiguration.
        :rtype: str
        """
        return self._dotnet_csproj_assembly_version_format

    @dotnet_csproj_assembly_version_format.setter
    def dotnet_csproj_assembly_version_format(self, dotnet_csproj_assembly_version_format):
        """Sets the dotnet_csproj_assembly_version_format of this ProjectConfiguration.


        :param dotnet_csproj_assembly_version_format: The dotnet_csproj_assembly_version_format of this ProjectConfiguration.
        :type dotnet_csproj_assembly_version_format: str
        """

        self._dotnet_csproj_assembly_version_format = dotnet_csproj_assembly_version_format

    @property
    def dotnet_csproj_file(self):
        """Gets the dotnet_csproj_file of this ProjectConfiguration.


        :return: The dotnet_csproj_file of this ProjectConfiguration.
        :rtype: str
        """
        return self._dotnet_csproj_file

    @dotnet_csproj_file.setter
    def dotnet_csproj_file(self, dotnet_csproj_file):
        """Sets the dotnet_csproj_file of this ProjectConfiguration.


        :param dotnet_csproj_file: The dotnet_csproj_file of this ProjectConfiguration.
        :type dotnet_csproj_file: str
        """

        self._dotnet_csproj_file = dotnet_csproj_file

    @property
    def dotnet_csproj_file_version_format(self):
        """Gets the dotnet_csproj_file_version_format of this ProjectConfiguration.


        :return: The dotnet_csproj_file_version_format of this ProjectConfiguration.
        :rtype: str
        """
        return self._dotnet_csproj_file_version_format

    @dotnet_csproj_file_version_format.setter
    def dotnet_csproj_file_version_format(self, dotnet_csproj_file_version_format):
        """Sets the dotnet_csproj_file_version_format of this ProjectConfiguration.


        :param dotnet_csproj_file_version_format: The dotnet_csproj_file_version_format of this ProjectConfiguration.
        :type dotnet_csproj_file_version_format: str
        """

        self._dotnet_csproj_file_version_format = dotnet_csproj_file_version_format

    @property
    def dotnet_csproj_informational_version_format(self):
        """Gets the dotnet_csproj_informational_version_format of this ProjectConfiguration.


        :return: The dotnet_csproj_informational_version_format of this ProjectConfiguration.
        :rtype: str
        """
        return self._dotnet_csproj_informational_version_format

    @dotnet_csproj_informational_version_format.setter
    def dotnet_csproj_informational_version_format(self, dotnet_csproj_informational_version_format):
        """Sets the dotnet_csproj_informational_version_format of this ProjectConfiguration.


        :param dotnet_csproj_informational_version_format: The dotnet_csproj_informational_version_format of this ProjectConfiguration.
        :type dotnet_csproj_informational_version_format: str
        """

        self._dotnet_csproj_informational_version_format = dotnet_csproj_informational_version_format

    @property
    def dotnet_csproj_package_version_format(self):
        """Gets the dotnet_csproj_package_version_format of this ProjectConfiguration.


        :return: The dotnet_csproj_package_version_format of this ProjectConfiguration.
        :rtype: str
        """
        return self._dotnet_csproj_package_version_format

    @dotnet_csproj_package_version_format.setter
    def dotnet_csproj_package_version_format(self, dotnet_csproj_package_version_format):
        """Sets the dotnet_csproj_package_version_format of this ProjectConfiguration.


        :param dotnet_csproj_package_version_format: The dotnet_csproj_package_version_format of this ProjectConfiguration.
        :type dotnet_csproj_package_version_format: str
        """

        self._dotnet_csproj_package_version_format = dotnet_csproj_package_version_format

    @property
    def dotnet_csproj_version_format(self):
        """Gets the dotnet_csproj_version_format of this ProjectConfiguration.


        :return: The dotnet_csproj_version_format of this ProjectConfiguration.
        :rtype: str
        """
        return self._dotnet_csproj_version_format

    @dotnet_csproj_version_format.setter
    def dotnet_csproj_version_format(self, dotnet_csproj_version_format):
        """Sets the dotnet_csproj_version_format of this ProjectConfiguration.


        :param dotnet_csproj_version_format: The dotnet_csproj_version_format of this ProjectConfiguration.
        :type dotnet_csproj_version_format: str
        """

        self._dotnet_csproj_version_format = dotnet_csproj_version_format

    @property
    def environment_variables(self):
        """Gets the environment_variables of this ProjectConfiguration.


        :return: The environment_variables of this ProjectConfiguration.
        :rtype: List[StoredNameValue]
        """
        return self._environment_variables

    @environment_variables.setter
    def environment_variables(self, environment_variables):
        """Sets the environment_variables of this ProjectConfiguration.


        :param environment_variables: The environment_variables of this ProjectConfiguration.
        :type environment_variables: List[StoredNameValue]
        """

        self._environment_variables = environment_variables

    @property
    def environment_variables_matrix(self):
        """Gets the environment_variables_matrix of this ProjectConfiguration.


        :return: The environment_variables_matrix of this ProjectConfiguration.
        :rtype: List[StoredNameValueMatrix]
        """
        return self._environment_variables_matrix

    @environment_variables_matrix.setter
    def environment_variables_matrix(self, environment_variables_matrix):
        """Sets the environment_variables_matrix of this ProjectConfiguration.


        :param environment_variables_matrix: The environment_variables_matrix of this ProjectConfiguration.
        :type environment_variables_matrix: List[StoredNameValueMatrix]
        """

        self._environment_variables_matrix = environment_variables_matrix

    @property
    def exclude_branches(self):
        """Gets the exclude_branches of this ProjectConfiguration.


        :return: The exclude_branches of this ProjectConfiguration.
        :rtype: List[StringValueObject]
        """
        return self._exclude_branches

    @exclude_branches.setter
    def exclude_branches(self, exclude_branches):
        """Sets the exclude_branches of this ProjectConfiguration.


        :param exclude_branches: The exclude_branches of this ProjectConfiguration.
        :type exclude_branches: List[StringValueObject]
        """

        self._exclude_branches = exclude_branches

    @property
    def force_https_clone(self):
        """Gets the force_https_clone of this ProjectConfiguration.


        :return: The force_https_clone of this ProjectConfiguration.
        :rtype: bool
        """
        return self._force_https_clone

    @force_https_clone.setter
    def force_https_clone(self, force_https_clone):
        """Sets the force_https_clone of this ProjectConfiguration.


        :param force_https_clone: The force_https_clone of this ProjectConfiguration.
        :type force_https_clone: bool
        """

        self._force_https_clone = force_https_clone

    @property
    def hosts_entries(self):
        """Gets the hosts_entries of this ProjectConfiguration.


        :return: The hosts_entries of this ProjectConfiguration.
        :rtype: List[HostEntry]
        """
        return self._hosts_entries

    @hosts_entries.setter
    def hosts_entries(self, hosts_entries):
        """Sets the hosts_entries of this ProjectConfiguration.


        :param hosts_entries: The hosts_entries of this ProjectConfiguration.
        :type hosts_entries: List[HostEntry]
        """

        self._hosts_entries = hosts_entries

    @property
    def hot_fix_scripts(self):
        """Gets the hot_fix_scripts of this ProjectConfiguration.


        :return: The hot_fix_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._hot_fix_scripts

    @hot_fix_scripts.setter
    def hot_fix_scripts(self, hot_fix_scripts):
        """Sets the hot_fix_scripts of this ProjectConfiguration.


        :param hot_fix_scripts: The hot_fix_scripts of this ProjectConfiguration.
        :type hot_fix_scripts: List[Script]
        """

        self._hot_fix_scripts = hot_fix_scripts

    @property
    def include_branches(self):
        """Gets the include_branches of this ProjectConfiguration.


        :return: The include_branches of this ProjectConfiguration.
        :rtype: List[StringValueObject]
        """
        return self._include_branches

    @include_branches.setter
    def include_branches(self, include_branches):
        """Sets the include_branches of this ProjectConfiguration.


        :param include_branches: The include_branches of this ProjectConfiguration.
        :type include_branches: List[StringValueObject]
        """

        self._include_branches = include_branches

    @property
    def include_nu_get_references(self):
        """Gets the include_nu_get_references of this ProjectConfiguration.


        :return: The include_nu_get_references of this ProjectConfiguration.
        :rtype: bool
        """
        return self._include_nu_get_references

    @include_nu_get_references.setter
    def include_nu_get_references(self, include_nu_get_references):
        """Sets the include_nu_get_references of this ProjectConfiguration.


        :param include_nu_get_references: The include_nu_get_references of this ProjectConfiguration.
        :type include_nu_get_references: bool
        """

        self._include_nu_get_references = include_nu_get_references

    @property
    def init_scripts(self):
        """Gets the init_scripts of this ProjectConfiguration.


        :return: The init_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._init_scripts

    @init_scripts.setter
    def init_scripts(self, init_scripts):
        """Sets the init_scripts of this ProjectConfiguration.


        :param init_scripts: The init_scripts of this ProjectConfiguration.
        :type init_scripts: List[Script]
        """

        self._init_scripts = init_scripts

    @property
    def install_scripts(self):
        """Gets the install_scripts of this ProjectConfiguration.


        :return: The install_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._install_scripts

    @install_scripts.setter
    def install_scripts(self, install_scripts):
        """Sets the install_scripts of this ProjectConfiguration.


        :param install_scripts: The install_scripts of this ProjectConfiguration.
        :type install_scripts: List[Script]
        """

        self._install_scripts = install_scripts

    @property
    def matrix_allow_failures(self):
        """Gets the matrix_allow_failures of this ProjectConfiguration.

        Although the names and values are not enforced, the combinations which are meaningful are documented at https://www.appveyor.com/docs/build-configuration/#allow-failing-jobs

        :return: The matrix_allow_failures of this ProjectConfiguration.
        :rtype: List[StoredNameValueMatrix]
        """
        return self._matrix_allow_failures

    @matrix_allow_failures.setter
    def matrix_allow_failures(self, matrix_allow_failures):
        """Sets the matrix_allow_failures of this ProjectConfiguration.

        Although the names and values are not enforced, the combinations which are meaningful are documented at https://www.appveyor.com/docs/build-configuration/#allow-failing-jobs

        :param matrix_allow_failures: The matrix_allow_failures of this ProjectConfiguration.
        :type matrix_allow_failures: List[StoredNameValueMatrix]
        """

        self._matrix_allow_failures = matrix_allow_failures

    @property
    def matrix_except(self):
        """Gets the matrix_except of this ProjectConfiguration.


        :return: The matrix_except of this ProjectConfiguration.
        :rtype: List[StoredNameValueMatrix]
        """
        return self._matrix_except

    @matrix_except.setter
    def matrix_except(self, matrix_except):
        """Sets the matrix_except of this ProjectConfiguration.


        :param matrix_except: The matrix_except of this ProjectConfiguration.
        :type matrix_except: List[StoredNameValueMatrix]
        """

        self._matrix_except = matrix_except

    @property
    def matrix_exclude(self):
        """Gets the matrix_exclude of this ProjectConfiguration.


        :return: The matrix_exclude of this ProjectConfiguration.
        :rtype: List[StoredNameValueMatrix]
        """
        return self._matrix_exclude

    @matrix_exclude.setter
    def matrix_exclude(self, matrix_exclude):
        """Sets the matrix_exclude of this ProjectConfiguration.


        :param matrix_exclude: The matrix_exclude of this ProjectConfiguration.
        :type matrix_exclude: List[StoredNameValueMatrix]
        """

        self._matrix_exclude = matrix_exclude

    @property
    def matrix_fast_finish(self):
        """Gets the matrix_fast_finish of this ProjectConfiguration.


        :return: The matrix_fast_finish of this ProjectConfiguration.
        :rtype: bool
        """
        return self._matrix_fast_finish

    @matrix_fast_finish.setter
    def matrix_fast_finish(self, matrix_fast_finish):
        """Sets the matrix_fast_finish of this ProjectConfiguration.


        :param matrix_fast_finish: The matrix_fast_finish of this ProjectConfiguration.
        :type matrix_fast_finish: bool
        """

        self._matrix_fast_finish = matrix_fast_finish

    @property
    def matrix_only(self):
        """Gets the matrix_only of this ProjectConfiguration.


        :return: The matrix_only of this ProjectConfiguration.
        :rtype: List[StoredNameValueMatrix]
        """
        return self._matrix_only

    @matrix_only.setter
    def matrix_only(self, matrix_only):
        """Sets the matrix_only of this ProjectConfiguration.


        :param matrix_only: The matrix_only of this ProjectConfiguration.
        :type matrix_only: List[StoredNameValueMatrix]
        """

        self._matrix_only = matrix_only

    @property
    def max_jobs(self):
        """Gets the max_jobs of this ProjectConfiguration.


        :return: The max_jobs of this ProjectConfiguration.
        :rtype: int
        """
        return self._max_jobs

    @max_jobs.setter
    def max_jobs(self, max_jobs):
        """Sets the max_jobs of this ProjectConfiguration.


        :param max_jobs: The max_jobs of this ProjectConfiguration.
        :type max_jobs: int
        """
        if max_jobs is not None and max_jobs < 1:
            raise ValueError("Invalid value for `max_jobs`, must be a value greater than or equal to `1`")

        self._max_jobs = max_jobs

    @property
    def ms_build_in_parallel(self):
        """Gets the ms_build_in_parallel of this ProjectConfiguration.


        :return: The ms_build_in_parallel of this ProjectConfiguration.
        :rtype: bool
        """
        return self._ms_build_in_parallel

    @ms_build_in_parallel.setter
    def ms_build_in_parallel(self, ms_build_in_parallel):
        """Sets the ms_build_in_parallel of this ProjectConfiguration.


        :param ms_build_in_parallel: The ms_build_in_parallel of this ProjectConfiguration.
        :type ms_build_in_parallel: bool
        """

        self._ms_build_in_parallel = ms_build_in_parallel

    @property
    def ms_build_project_file_name(self):
        """Gets the ms_build_project_file_name of this ProjectConfiguration.


        :return: The ms_build_project_file_name of this ProjectConfiguration.
        :rtype: str
        """
        return self._ms_build_project_file_name

    @ms_build_project_file_name.setter
    def ms_build_project_file_name(self, ms_build_project_file_name):
        """Sets the ms_build_project_file_name of this ProjectConfiguration.


        :param ms_build_project_file_name: The ms_build_project_file_name of this ProjectConfiguration.
        :type ms_build_project_file_name: str
        """

        self._ms_build_project_file_name = ms_build_project_file_name

    @property
    def ms_build_verbosity(self):
        """Gets the ms_build_verbosity of this ProjectConfiguration.


        :return: The ms_build_verbosity of this ProjectConfiguration.
        :rtype: MSBuildVerbosity
        """
        return self._ms_build_verbosity

    @ms_build_verbosity.setter
    def ms_build_verbosity(self, ms_build_verbosity):
        """Sets the ms_build_verbosity of this ProjectConfiguration.


        :param ms_build_verbosity: The ms_build_verbosity of this ProjectConfiguration.
        :type ms_build_verbosity: MSBuildVerbosity
        """

        self._ms_build_verbosity = ms_build_verbosity

    @property
    def notifications(self):
        """Gets the notifications of this ProjectConfiguration.


        :return: The notifications of this ProjectConfiguration.
        :rtype: List[NotificationProviderSettings]
        """
        return self._notifications

    @notifications.setter
    def notifications(self, notifications):
        """Sets the notifications of this ProjectConfiguration.


        :param notifications: The notifications of this ProjectConfiguration.
        :type notifications: List[NotificationProviderSettings]
        """

        self._notifications = notifications

    @property
    def on_build_error_scripts(self):
        """Gets the on_build_error_scripts of this ProjectConfiguration.


        :return: The on_build_error_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._on_build_error_scripts

    @on_build_error_scripts.setter
    def on_build_error_scripts(self, on_build_error_scripts):
        """Sets the on_build_error_scripts of this ProjectConfiguration.


        :param on_build_error_scripts: The on_build_error_scripts of this ProjectConfiguration.
        :type on_build_error_scripts: List[Script]
        """

        self._on_build_error_scripts = on_build_error_scripts

    @property
    def on_build_finish_scripts(self):
        """Gets the on_build_finish_scripts of this ProjectConfiguration.


        :return: The on_build_finish_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._on_build_finish_scripts

    @on_build_finish_scripts.setter
    def on_build_finish_scripts(self, on_build_finish_scripts):
        """Sets the on_build_finish_scripts of this ProjectConfiguration.


        :param on_build_finish_scripts: The on_build_finish_scripts of this ProjectConfiguration.
        :type on_build_finish_scripts: List[Script]
        """

        self._on_build_finish_scripts = on_build_finish_scripts

    @property
    def on_build_success_scripts(self):
        """Gets the on_build_success_scripts of this ProjectConfiguration.


        :return: The on_build_success_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._on_build_success_scripts

    @on_build_success_scripts.setter
    def on_build_success_scripts(self, on_build_success_scripts):
        """Sets the on_build_success_scripts of this ProjectConfiguration.


        :param on_build_success_scripts: The on_build_success_scripts of this ProjectConfiguration.
        :type on_build_success_scripts: List[Script]
        """

        self._on_build_success_scripts = on_build_success_scripts

    @property
    def only_commits_files(self):
        """Gets the only_commits_files of this ProjectConfiguration.


        :return: The only_commits_files of this ProjectConfiguration.
        :rtype: List[StringValueObject]
        """
        return self._only_commits_files

    @only_commits_files.setter
    def only_commits_files(self, only_commits_files):
        """Sets the only_commits_files of this ProjectConfiguration.


        :param only_commits_files: The only_commits_files of this ProjectConfiguration.
        :type only_commits_files: List[StringValueObject]
        """

        self._only_commits_files = only_commits_files

    @property
    def operating_system(self):
        """Gets the operating_system of this ProjectConfiguration.


        :return: The operating_system of this ProjectConfiguration.
        :rtype: List[BuildWorkerImageInner]
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this ProjectConfiguration.


        :param operating_system: The operating_system of this ProjectConfiguration.
        :type operating_system: List[BuildWorkerImageInner]
        """

        self._operating_system = operating_system

    @property
    def package_asp_net_core_projects(self):
        """Gets the package_asp_net_core_projects of this ProjectConfiguration.


        :return: The package_asp_net_core_projects of this ProjectConfiguration.
        :rtype: bool
        """
        return self._package_asp_net_core_projects

    @package_asp_net_core_projects.setter
    def package_asp_net_core_projects(self, package_asp_net_core_projects):
        """Sets the package_asp_net_core_projects of this ProjectConfiguration.


        :param package_asp_net_core_projects: The package_asp_net_core_projects of this ProjectConfiguration.
        :type package_asp_net_core_projects: bool
        """

        self._package_asp_net_core_projects = package_asp_net_core_projects

    @property
    def package_azure_cloud_service_projects(self):
        """Gets the package_azure_cloud_service_projects of this ProjectConfiguration.


        :return: The package_azure_cloud_service_projects of this ProjectConfiguration.
        :rtype: bool
        """
        return self._package_azure_cloud_service_projects

    @package_azure_cloud_service_projects.setter
    def package_azure_cloud_service_projects(self, package_azure_cloud_service_projects):
        """Sets the package_azure_cloud_service_projects of this ProjectConfiguration.


        :param package_azure_cloud_service_projects: The package_azure_cloud_service_projects of this ProjectConfiguration.
        :type package_azure_cloud_service_projects: bool
        """

        self._package_azure_cloud_service_projects = package_azure_cloud_service_projects

    @property
    def package_dotnet_console_projects(self):
        """Gets the package_dotnet_console_projects of this ProjectConfiguration.


        :return: The package_dotnet_console_projects of this ProjectConfiguration.
        :rtype: bool
        """
        return self._package_dotnet_console_projects

    @package_dotnet_console_projects.setter
    def package_dotnet_console_projects(self, package_dotnet_console_projects):
        """Sets the package_dotnet_console_projects of this ProjectConfiguration.


        :param package_dotnet_console_projects: The package_dotnet_console_projects of this ProjectConfiguration.
        :type package_dotnet_console_projects: bool
        """

        self._package_dotnet_console_projects = package_dotnet_console_projects

    @property
    def package_nu_get_projects(self):
        """Gets the package_nu_get_projects of this ProjectConfiguration.


        :return: The package_nu_get_projects of this ProjectConfiguration.
        :rtype: bool
        """
        return self._package_nu_get_projects

    @package_nu_get_projects.setter
    def package_nu_get_projects(self, package_nu_get_projects):
        """Sets the package_nu_get_projects of this ProjectConfiguration.


        :param package_nu_get_projects: The package_nu_get_projects of this ProjectConfiguration.
        :type package_nu_get_projects: bool
        """

        self._package_nu_get_projects = package_nu_get_projects

    @property
    def package_nu_get_symbols(self):
        """Gets the package_nu_get_symbols of this ProjectConfiguration.


        :return: The package_nu_get_symbols of this ProjectConfiguration.
        :rtype: bool
        """
        return self._package_nu_get_symbols

    @package_nu_get_symbols.setter
    def package_nu_get_symbols(self, package_nu_get_symbols):
        """Sets the package_nu_get_symbols of this ProjectConfiguration.


        :param package_nu_get_symbols: The package_nu_get_symbols of this ProjectConfiguration.
        :type package_nu_get_symbols: bool
        """

        self._package_nu_get_symbols = package_nu_get_symbols

    @property
    def package_web_application_projects(self):
        """Gets the package_web_application_projects of this ProjectConfiguration.


        :return: The package_web_application_projects of this ProjectConfiguration.
        :rtype: bool
        """
        return self._package_web_application_projects

    @package_web_application_projects.setter
    def package_web_application_projects(self, package_web_application_projects):
        """Sets the package_web_application_projects of this ProjectConfiguration.


        :param package_web_application_projects: The package_web_application_projects of this ProjectConfiguration.
        :type package_web_application_projects: bool
        """

        self._package_web_application_projects = package_web_application_projects

    @property
    def package_web_application_projects_beanstalk(self):
        """Gets the package_web_application_projects_beanstalk of this ProjectConfiguration.


        :return: The package_web_application_projects_beanstalk of this ProjectConfiguration.
        :rtype: bool
        """
        return self._package_web_application_projects_beanstalk

    @package_web_application_projects_beanstalk.setter
    def package_web_application_projects_beanstalk(self, package_web_application_projects_beanstalk):
        """Sets the package_web_application_projects_beanstalk of this ProjectConfiguration.


        :param package_web_application_projects_beanstalk: The package_web_application_projects_beanstalk of this ProjectConfiguration.
        :type package_web_application_projects_beanstalk: bool
        """

        self._package_web_application_projects_beanstalk = package_web_application_projects_beanstalk

    @property
    def package_web_application_projects_octopus(self):
        """Gets the package_web_application_projects_octopus of this ProjectConfiguration.


        :return: The package_web_application_projects_octopus of this ProjectConfiguration.
        :rtype: bool
        """
        return self._package_web_application_projects_octopus

    @package_web_application_projects_octopus.setter
    def package_web_application_projects_octopus(self, package_web_application_projects_octopus):
        """Sets the package_web_application_projects_octopus of this ProjectConfiguration.


        :param package_web_application_projects_octopus: The package_web_application_projects_octopus of this ProjectConfiguration.
        :type package_web_application_projects_octopus: bool
        """

        self._package_web_application_projects_octopus = package_web_application_projects_octopus

    @property
    def package_web_application_projects_x_copy(self):
        """Gets the package_web_application_projects_x_copy of this ProjectConfiguration.


        :return: The package_web_application_projects_x_copy of this ProjectConfiguration.
        :rtype: bool
        """
        return self._package_web_application_projects_x_copy

    @package_web_application_projects_x_copy.setter
    def package_web_application_projects_x_copy(self, package_web_application_projects_x_copy):
        """Sets the package_web_application_projects_x_copy of this ProjectConfiguration.


        :param package_web_application_projects_x_copy: The package_web_application_projects_x_copy of this ProjectConfiguration.
        :type package_web_application_projects_x_copy: bool
        """

        self._package_web_application_projects_x_copy = package_web_application_projects_x_copy

    @property
    def patch_assembly_info(self):
        """Gets the patch_assembly_info of this ProjectConfiguration.


        :return: The patch_assembly_info of this ProjectConfiguration.
        :rtype: bool
        """
        return self._patch_assembly_info

    @patch_assembly_info.setter
    def patch_assembly_info(self, patch_assembly_info):
        """Sets the patch_assembly_info of this ProjectConfiguration.


        :param patch_assembly_info: The patch_assembly_info of this ProjectConfiguration.
        :type patch_assembly_info: bool
        """

        self._patch_assembly_info = patch_assembly_info

    @property
    def patch_dotnet_csproj(self):
        """Gets the patch_dotnet_csproj of this ProjectConfiguration.


        :return: The patch_dotnet_csproj of this ProjectConfiguration.
        :rtype: bool
        """
        return self._patch_dotnet_csproj

    @patch_dotnet_csproj.setter
    def patch_dotnet_csproj(self, patch_dotnet_csproj):
        """Sets the patch_dotnet_csproj of this ProjectConfiguration.


        :param patch_dotnet_csproj: The patch_dotnet_csproj of this ProjectConfiguration.
        :type patch_dotnet_csproj: bool
        """

        self._patch_dotnet_csproj = patch_dotnet_csproj

    @property
    def platform(self):
        """Gets the platform of this ProjectConfiguration.


        :return: The platform of this ProjectConfiguration.
        :rtype: List[ProjectConfigurationPlatformInner]
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this ProjectConfiguration.


        :param platform: The platform of this ProjectConfiguration.
        :type platform: List[ProjectConfigurationPlatformInner]
        """

        self._platform = platform

    @property
    def services(self):
        """Gets the services of this ProjectConfiguration.


        :return: The services of this ProjectConfiguration.
        :rtype: List[OSServicesToStartDuringTheBuildProcessInner]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this ProjectConfiguration.


        :param services: The services of this ProjectConfiguration.
        :type services: List[OSServicesToStartDuringTheBuildProcessInner]
        """

        self._services = services

    @property
    def shallow_clone(self):
        """Gets the shallow_clone of this ProjectConfiguration.


        :return: The shallow_clone of this ProjectConfiguration.
        :rtype: bool
        """
        return self._shallow_clone

    @shallow_clone.setter
    def shallow_clone(self, shallow_clone):
        """Sets the shallow_clone of this ProjectConfiguration.


        :param shallow_clone: The shallow_clone of this ProjectConfiguration.
        :type shallow_clone: bool
        """

        self._shallow_clone = shallow_clone

    @property
    def skip_branch_with_pull_requests(self):
        """Gets the skip_branch_with_pull_requests of this ProjectConfiguration.


        :return: The skip_branch_with_pull_requests of this ProjectConfiguration.
        :rtype: bool
        """
        return self._skip_branch_with_pull_requests

    @skip_branch_with_pull_requests.setter
    def skip_branch_with_pull_requests(self, skip_branch_with_pull_requests):
        """Sets the skip_branch_with_pull_requests of this ProjectConfiguration.


        :param skip_branch_with_pull_requests: The skip_branch_with_pull_requests of this ProjectConfiguration.
        :type skip_branch_with_pull_requests: bool
        """

        self._skip_branch_with_pull_requests = skip_branch_with_pull_requests

    @property
    def skip_commits_files(self):
        """Gets the skip_commits_files of this ProjectConfiguration.


        :return: The skip_commits_files of this ProjectConfiguration.
        :rtype: List[StringValueObject]
        """
        return self._skip_commits_files

    @skip_commits_files.setter
    def skip_commits_files(self, skip_commits_files):
        """Sets the skip_commits_files of this ProjectConfiguration.


        :param skip_commits_files: The skip_commits_files of this ProjectConfiguration.
        :type skip_commits_files: List[StringValueObject]
        """

        self._skip_commits_files = skip_commits_files

    @property
    def skip_non_tags(self):
        """Gets the skip_non_tags of this ProjectConfiguration.


        :return: The skip_non_tags of this ProjectConfiguration.
        :rtype: bool
        """
        return self._skip_non_tags

    @skip_non_tags.setter
    def skip_non_tags(self, skip_non_tags):
        """Sets the skip_non_tags of this ProjectConfiguration.


        :param skip_non_tags: The skip_non_tags of this ProjectConfiguration.
        :type skip_non_tags: bool
        """

        self._skip_non_tags = skip_non_tags

    @property
    def skip_tags(self):
        """Gets the skip_tags of this ProjectConfiguration.


        :return: The skip_tags of this ProjectConfiguration.
        :rtype: bool
        """
        return self._skip_tags

    @skip_tags.setter
    def skip_tags(self, skip_tags):
        """Sets the skip_tags of this ProjectConfiguration.


        :param skip_tags: The skip_tags of this ProjectConfiguration.
        :type skip_tags: bool
        """

        self._skip_tags = skip_tags

    @property
    def stacks(self):
        """Gets the stacks of this ProjectConfiguration.


        :return: The stacks of this ProjectConfiguration.
        :rtype: List[UnknownType]
        """
        return self._stacks

    @stacks.setter
    def stacks(self, stacks):
        """Sets the stacks of this ProjectConfiguration.


        :param stacks: The stacks of this ProjectConfiguration.
        :type stacks: List[UnknownType]
        """
        if stacks is not None and len(stacks) > 0:
            raise ValueError("Invalid value for `stacks`, number of items must be less than or equal to `0`")

        self._stacks = stacks

    @property
    def test_assemblies(self):
        """Gets the test_assemblies of this ProjectConfiguration.


        :return: The test_assemblies of this ProjectConfiguration.
        :rtype: List[StringValueObject]
        """
        return self._test_assemblies

    @test_assemblies.setter
    def test_assemblies(self, test_assemblies):
        """Sets the test_assemblies of this ProjectConfiguration.


        :param test_assemblies: The test_assemblies of this ProjectConfiguration.
        :type test_assemblies: List[StringValueObject]
        """

        self._test_assemblies = test_assemblies

    @property
    def test_categories(self):
        """Gets the test_categories of this ProjectConfiguration.


        :return: The test_categories of this ProjectConfiguration.
        :rtype: List[StringValueObject]
        """
        return self._test_categories

    @test_categories.setter
    def test_categories(self, test_categories):
        """Sets the test_categories of this ProjectConfiguration.


        :param test_categories: The test_categories of this ProjectConfiguration.
        :type test_categories: List[StringValueObject]
        """

        self._test_categories = test_categories

    @property
    def test_categories_matrix(self):
        """Gets the test_categories_matrix of this ProjectConfiguration.


        :return: The test_categories_matrix of this ProjectConfiguration.
        :rtype: List[ProjectConfigurationTestCategoriesMatrixInner]
        """
        return self._test_categories_matrix

    @test_categories_matrix.setter
    def test_categories_matrix(self, test_categories_matrix):
        """Sets the test_categories_matrix of this ProjectConfiguration.


        :param test_categories_matrix: The test_categories_matrix of this ProjectConfiguration.
        :type test_categories_matrix: List[ProjectConfigurationTestCategoriesMatrixInner]
        """

        self._test_categories_matrix = test_categories_matrix

    @property
    def test_categories_mode(self):
        """Gets the test_categories_mode of this ProjectConfiguration.


        :return: The test_categories_mode of this ProjectConfiguration.
        :rtype: str
        """
        return self._test_categories_mode

    @test_categories_mode.setter
    def test_categories_mode(self, test_categories_mode):
        """Sets the test_categories_mode of this ProjectConfiguration.


        :param test_categories_mode: The test_categories_mode of this ProjectConfiguration.
        :type test_categories_mode: str
        """
        allowed_values = ["exclude", "include"]  # noqa: E501
        if test_categories_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `test_categories_mode` ({0}), must be one of {1}"
                .format(test_categories_mode, allowed_values)
            )

        self._test_categories_mode = test_categories_mode

    @property
    def test_mode(self):
        """Gets the test_mode of this ProjectConfiguration.


        :return: The test_mode of this ProjectConfiguration.
        :rtype: TestMode
        """
        return self._test_mode

    @test_mode.setter
    def test_mode(self, test_mode):
        """Sets the test_mode of this ProjectConfiguration.


        :param test_mode: The test_mode of this ProjectConfiguration.
        :type test_mode: TestMode
        """

        self._test_mode = test_mode

    @property
    def test_scripts(self):
        """Gets the test_scripts of this ProjectConfiguration.

        Only set/used when `testMode` is `script`.

        :return: The test_scripts of this ProjectConfiguration.
        :rtype: List[Script]
        """
        return self._test_scripts

    @test_scripts.setter
    def test_scripts(self, test_scripts):
        """Sets the test_scripts of this ProjectConfiguration.

        Only set/used when `testMode` is `script`.

        :param test_scripts: The test_scripts of this ProjectConfiguration.
        :type test_scripts: List[Script]
        """

        self._test_scripts = test_scripts

    @property
    def xamarin_register_android_product(self):
        """Gets the xamarin_register_android_product of this ProjectConfiguration.


        :return: The xamarin_register_android_product of this ProjectConfiguration.
        :rtype: bool
        """
        return self._xamarin_register_android_product

    @xamarin_register_android_product.setter
    def xamarin_register_android_product(self, xamarin_register_android_product):
        """Sets the xamarin_register_android_product of this ProjectConfiguration.


        :param xamarin_register_android_product: The xamarin_register_android_product of this ProjectConfiguration.
        :type xamarin_register_android_product: bool
        """

        self._xamarin_register_android_product = xamarin_register_android_product

    @property
    def xamarin_register_ios_product(self):
        """Gets the xamarin_register_ios_product of this ProjectConfiguration.


        :return: The xamarin_register_ios_product of this ProjectConfiguration.
        :rtype: bool
        """
        return self._xamarin_register_ios_product

    @xamarin_register_ios_product.setter
    def xamarin_register_ios_product(self, xamarin_register_ios_product):
        """Sets the xamarin_register_ios_product of this ProjectConfiguration.


        :param xamarin_register_ios_product: The xamarin_register_ios_product of this ProjectConfiguration.
        :type xamarin_register_ios_product: bool
        """

        self._xamarin_register_ios_product = xamarin_register_ios_product
