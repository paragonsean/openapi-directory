# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.http_method_restricted import HttpMethodRestricted
from openapi_server.models.notification_settings_type import NotificationSettingsType
from openapi_server.models.stored_name_value import StoredNameValue
from openapi_server.models.stored_value import StoredValue
from openapi_server.models.string_value_object import StringValueObject
from openapi_server import util


class NotificationSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: NotificationSettingsType=None, account: str=None, add_custom_request_body: bool=None, auth_token: StoredValue=None, body_template: str=None, channel: str=None, custom_request_body: str=None, custom_request_body_content_type: str=None, _from: str=None, headers: List[StoredNameValue]=None, headers_value: str=None, incoming_webhook_url: str=None, method: HttpMethodRestricted=None, on_build_failure: bool=None, on_build_status_changed: bool=None, on_build_success: bool=None, password: StoredValue=None, recipients: List[StringValueObject]=None, recipients_value: str=None, room: str=None, server_url: str=None, subject_template: str=None, template: str=None, url: str=None, username: str=None, vso_account: str=None):
        """NotificationSettings - a model defined in OpenAPI

        :param type: The type of this NotificationSettings.
        :param account: The account of this NotificationSettings.
        :param add_custom_request_body: The add_custom_request_body of this NotificationSettings.
        :param auth_token: The auth_token of this NotificationSettings.
        :param body_template: The body_template of this NotificationSettings.
        :param channel: The channel of this NotificationSettings.
        :param custom_request_body: The custom_request_body of this NotificationSettings.
        :param custom_request_body_content_type: The custom_request_body_content_type of this NotificationSettings.
        :param _from: The _from of this NotificationSettings.
        :param headers: The headers of this NotificationSettings.
        :param headers_value: The headers_value of this NotificationSettings.
        :param incoming_webhook_url: The incoming_webhook_url of this NotificationSettings.
        :param method: The method of this NotificationSettings.
        :param on_build_failure: The on_build_failure of this NotificationSettings.
        :param on_build_status_changed: The on_build_status_changed of this NotificationSettings.
        :param on_build_success: The on_build_success of this NotificationSettings.
        :param password: The password of this NotificationSettings.
        :param recipients: The recipients of this NotificationSettings.
        :param recipients_value: The recipients_value of this NotificationSettings.
        :param room: The room of this NotificationSettings.
        :param server_url: The server_url of this NotificationSettings.
        :param subject_template: The subject_template of this NotificationSettings.
        :param template: The template of this NotificationSettings.
        :param url: The url of this NotificationSettings.
        :param username: The username of this NotificationSettings.
        :param vso_account: The vso_account of this NotificationSettings.
        """
        self.openapi_types = {
            'type': NotificationSettingsType,
            'account': str,
            'add_custom_request_body': bool,
            'auth_token': StoredValue,
            'body_template': str,
            'channel': str,
            'custom_request_body': str,
            'custom_request_body_content_type': str,
            '_from': str,
            'headers': List[StoredNameValue],
            'headers_value': str,
            'incoming_webhook_url': str,
            'method': HttpMethodRestricted,
            'on_build_failure': bool,
            'on_build_status_changed': bool,
            'on_build_success': bool,
            'password': StoredValue,
            'recipients': List[StringValueObject],
            'recipients_value': str,
            'room': str,
            'server_url': str,
            'subject_template': str,
            'template': str,
            'url': str,
            'username': str,
            'vso_account': str
        }

        self.attribute_map = {
            'type': '$type',
            'account': 'account',
            'add_custom_request_body': 'addCustomRequestBody',
            'auth_token': 'authToken',
            'body_template': 'bodyTemplate',
            'channel': 'channel',
            'custom_request_body': 'customRequestBody',
            'custom_request_body_content_type': 'customRequestBodyContentType',
            '_from': 'from',
            'headers': 'headers',
            'headers_value': 'headersValue',
            'incoming_webhook_url': 'incomingWebhookUrl',
            'method': 'method',
            'on_build_failure': 'onBuildFailure',
            'on_build_status_changed': 'onBuildStatusChanged',
            'on_build_success': 'onBuildSuccess',
            'password': 'password',
            'recipients': 'recipients',
            'recipients_value': 'recipientsValue',
            'room': 'room',
            'server_url': 'serverUrl',
            'subject_template': 'subjectTemplate',
            'template': 'template',
            'url': 'url',
            'username': 'username',
            'vso_account': 'vsoAccount'
        }

        self._type = type
        self._account = account
        self._add_custom_request_body = add_custom_request_body
        self._auth_token = auth_token
        self._body_template = body_template
        self._channel = channel
        self._custom_request_body = custom_request_body
        self._custom_request_body_content_type = custom_request_body_content_type
        self.__from = _from
        self._headers = headers
        self._headers_value = headers_value
        self._incoming_webhook_url = incoming_webhook_url
        self._method = method
        self._on_build_failure = on_build_failure
        self._on_build_status_changed = on_build_status_changed
        self._on_build_success = on_build_success
        self._password = password
        self._recipients = recipients
        self._recipients_value = recipients_value
        self._room = room
        self._server_url = server_url
        self._subject_template = subject_template
        self._template = template
        self._url = url
        self._username = username
        self._vso_account = vso_account

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotificationSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotificationSettings of this NotificationSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this NotificationSettings.


        :return: The type of this NotificationSettings.
        :rtype: NotificationSettingsType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this NotificationSettings.


        :param type: The type of this NotificationSettings.
        :type type: NotificationSettingsType
        """

        self._type = type

    @property
    def account(self):
        """Gets the account of this NotificationSettings.


        :return: The account of this NotificationSettings.
        :rtype: str
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this NotificationSettings.


        :param account: The account of this NotificationSettings.
        :type account: str
        """

        self._account = account

    @property
    def add_custom_request_body(self):
        """Gets the add_custom_request_body of this NotificationSettings.


        :return: The add_custom_request_body of this NotificationSettings.
        :rtype: bool
        """
        return self._add_custom_request_body

    @add_custom_request_body.setter
    def add_custom_request_body(self, add_custom_request_body):
        """Sets the add_custom_request_body of this NotificationSettings.


        :param add_custom_request_body: The add_custom_request_body of this NotificationSettings.
        :type add_custom_request_body: bool
        """

        self._add_custom_request_body = add_custom_request_body

    @property
    def auth_token(self):
        """Gets the auth_token of this NotificationSettings.


        :return: The auth_token of this NotificationSettings.
        :rtype: StoredValue
        """
        return self._auth_token

    @auth_token.setter
    def auth_token(self, auth_token):
        """Sets the auth_token of this NotificationSettings.


        :param auth_token: The auth_token of this NotificationSettings.
        :type auth_token: StoredValue
        """

        self._auth_token = auth_token

    @property
    def body_template(self):
        """Gets the body_template of this NotificationSettings.


        :return: The body_template of this NotificationSettings.
        :rtype: str
        """
        return self._body_template

    @body_template.setter
    def body_template(self, body_template):
        """Sets the body_template of this NotificationSettings.


        :param body_template: The body_template of this NotificationSettings.
        :type body_template: str
        """

        self._body_template = body_template

    @property
    def channel(self):
        """Gets the channel of this NotificationSettings.


        :return: The channel of this NotificationSettings.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this NotificationSettings.


        :param channel: The channel of this NotificationSettings.
        :type channel: str
        """

        self._channel = channel

    @property
    def custom_request_body(self):
        """Gets the custom_request_body of this NotificationSettings.


        :return: The custom_request_body of this NotificationSettings.
        :rtype: str
        """
        return self._custom_request_body

    @custom_request_body.setter
    def custom_request_body(self, custom_request_body):
        """Sets the custom_request_body of this NotificationSettings.


        :param custom_request_body: The custom_request_body of this NotificationSettings.
        :type custom_request_body: str
        """

        self._custom_request_body = custom_request_body

    @property
    def custom_request_body_content_type(self):
        """Gets the custom_request_body_content_type of this NotificationSettings.


        :return: The custom_request_body_content_type of this NotificationSettings.
        :rtype: str
        """
        return self._custom_request_body_content_type

    @custom_request_body_content_type.setter
    def custom_request_body_content_type(self, custom_request_body_content_type):
        """Sets the custom_request_body_content_type of this NotificationSettings.


        :param custom_request_body_content_type: The custom_request_body_content_type of this NotificationSettings.
        :type custom_request_body_content_type: str
        """

        self._custom_request_body_content_type = custom_request_body_content_type

    @property
    def _from(self):
        """Gets the _from of this NotificationSettings.


        :return: The _from of this NotificationSettings.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this NotificationSettings.


        :param _from: The _from of this NotificationSettings.
        :type _from: str
        """

        self.__from = _from

    @property
    def headers(self):
        """Gets the headers of this NotificationSettings.


        :return: The headers of this NotificationSettings.
        :rtype: List[StoredNameValue]
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this NotificationSettings.


        :param headers: The headers of this NotificationSettings.
        :type headers: List[StoredNameValue]
        """

        self._headers = headers

    @property
    def headers_value(self):
        """Gets the headers_value of this NotificationSettings.


        :return: The headers_value of this NotificationSettings.
        :rtype: str
        """
        return self._headers_value

    @headers_value.setter
    def headers_value(self, headers_value):
        """Sets the headers_value of this NotificationSettings.


        :param headers_value: The headers_value of this NotificationSettings.
        :type headers_value: str
        """

        self._headers_value = headers_value

    @property
    def incoming_webhook_url(self):
        """Gets the incoming_webhook_url of this NotificationSettings.


        :return: The incoming_webhook_url of this NotificationSettings.
        :rtype: str
        """
        return self._incoming_webhook_url

    @incoming_webhook_url.setter
    def incoming_webhook_url(self, incoming_webhook_url):
        """Sets the incoming_webhook_url of this NotificationSettings.


        :param incoming_webhook_url: The incoming_webhook_url of this NotificationSettings.
        :type incoming_webhook_url: str
        """

        self._incoming_webhook_url = incoming_webhook_url

    @property
    def method(self):
        """Gets the method of this NotificationSettings.


        :return: The method of this NotificationSettings.
        :rtype: HttpMethodRestricted
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this NotificationSettings.


        :param method: The method of this NotificationSettings.
        :type method: HttpMethodRestricted
        """

        self._method = method

    @property
    def on_build_failure(self):
        """Gets the on_build_failure of this NotificationSettings.


        :return: The on_build_failure of this NotificationSettings.
        :rtype: bool
        """
        return self._on_build_failure

    @on_build_failure.setter
    def on_build_failure(self, on_build_failure):
        """Sets the on_build_failure of this NotificationSettings.


        :param on_build_failure: The on_build_failure of this NotificationSettings.
        :type on_build_failure: bool
        """

        self._on_build_failure = on_build_failure

    @property
    def on_build_status_changed(self):
        """Gets the on_build_status_changed of this NotificationSettings.


        :return: The on_build_status_changed of this NotificationSettings.
        :rtype: bool
        """
        return self._on_build_status_changed

    @on_build_status_changed.setter
    def on_build_status_changed(self, on_build_status_changed):
        """Sets the on_build_status_changed of this NotificationSettings.


        :param on_build_status_changed: The on_build_status_changed of this NotificationSettings.
        :type on_build_status_changed: bool
        """

        self._on_build_status_changed = on_build_status_changed

    @property
    def on_build_success(self):
        """Gets the on_build_success of this NotificationSettings.


        :return: The on_build_success of this NotificationSettings.
        :rtype: bool
        """
        return self._on_build_success

    @on_build_success.setter
    def on_build_success(self, on_build_success):
        """Sets the on_build_success of this NotificationSettings.


        :param on_build_success: The on_build_success of this NotificationSettings.
        :type on_build_success: bool
        """

        self._on_build_success = on_build_success

    @property
    def password(self):
        """Gets the password of this NotificationSettings.


        :return: The password of this NotificationSettings.
        :rtype: StoredValue
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this NotificationSettings.


        :param password: The password of this NotificationSettings.
        :type password: StoredValue
        """

        self._password = password

    @property
    def recipients(self):
        """Gets the recipients of this NotificationSettings.


        :return: The recipients of this NotificationSettings.
        :rtype: List[StringValueObject]
        """
        return self._recipients

    @recipients.setter
    def recipients(self, recipients):
        """Sets the recipients of this NotificationSettings.


        :param recipients: The recipients of this NotificationSettings.
        :type recipients: List[StringValueObject]
        """

        self._recipients = recipients

    @property
    def recipients_value(self):
        """Gets the recipients_value of this NotificationSettings.


        :return: The recipients_value of this NotificationSettings.
        :rtype: str
        """
        return self._recipients_value

    @recipients_value.setter
    def recipients_value(self, recipients_value):
        """Sets the recipients_value of this NotificationSettings.


        :param recipients_value: The recipients_value of this NotificationSettings.
        :type recipients_value: str
        """

        self._recipients_value = recipients_value

    @property
    def room(self):
        """Gets the room of this NotificationSettings.


        :return: The room of this NotificationSettings.
        :rtype: str
        """
        return self._room

    @room.setter
    def room(self, room):
        """Sets the room of this NotificationSettings.


        :param room: The room of this NotificationSettings.
        :type room: str
        """

        self._room = room

    @property
    def server_url(self):
        """Gets the server_url of this NotificationSettings.


        :return: The server_url of this NotificationSettings.
        :rtype: str
        """
        return self._server_url

    @server_url.setter
    def server_url(self, server_url):
        """Sets the server_url of this NotificationSettings.


        :param server_url: The server_url of this NotificationSettings.
        :type server_url: str
        """

        self._server_url = server_url

    @property
    def subject_template(self):
        """Gets the subject_template of this NotificationSettings.


        :return: The subject_template of this NotificationSettings.
        :rtype: str
        """
        return self._subject_template

    @subject_template.setter
    def subject_template(self, subject_template):
        """Sets the subject_template of this NotificationSettings.


        :param subject_template: The subject_template of this NotificationSettings.
        :type subject_template: str
        """

        self._subject_template = subject_template

    @property
    def template(self):
        """Gets the template of this NotificationSettings.


        :return: The template of this NotificationSettings.
        :rtype: str
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this NotificationSettings.


        :param template: The template of this NotificationSettings.
        :type template: str
        """

        self._template = template

    @property
    def url(self):
        """Gets the url of this NotificationSettings.


        :return: The url of this NotificationSettings.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this NotificationSettings.


        :param url: The url of this NotificationSettings.
        :type url: str
        """

        self._url = url

    @property
    def username(self):
        """Gets the username of this NotificationSettings.


        :return: The username of this NotificationSettings.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this NotificationSettings.


        :param username: The username of this NotificationSettings.
        :type username: str
        """

        self._username = username

    @property
    def vso_account(self):
        """Gets the vso_account of this NotificationSettings.


        :return: The vso_account of this NotificationSettings.
        :rtype: str
        """
        return self._vso_account

    @vso_account.setter
    def vso_account(self, vso_account):
        """Sets the vso_account of this NotificationSettings.


        :param vso_account: The vso_account of this NotificationSettings.
        :type vso_account: str
        """

        self._vso_account = vso_account
