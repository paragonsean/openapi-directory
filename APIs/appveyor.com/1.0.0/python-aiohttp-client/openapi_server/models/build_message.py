# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build_message_category import BuildMessageCategory
from openapi_server import util


class BuildMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: BuildMessageCategory=None, created: datetime=None, message: str=None):
        """BuildMessage - a model defined in OpenAPI

        :param category: The category of this BuildMessage.
        :param created: The created of this BuildMessage.
        :param message: The message of this BuildMessage.
        """
        self.openapi_types = {
            'category': BuildMessageCategory,
            'created': datetime,
            'message': str
        }

        self.attribute_map = {
            'category': 'category',
            'created': 'created',
            'message': 'message'
        }

        self._category = category
        self._created = created
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuildMessage of this BuildMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this BuildMessage.


        :return: The category of this BuildMessage.
        :rtype: BuildMessageCategory
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this BuildMessage.


        :param category: The category of this BuildMessage.
        :type category: BuildMessageCategory
        """

        self._category = category

    @property
    def created(self):
        """Gets the created of this BuildMessage.


        :return: The created of this BuildMessage.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this BuildMessage.


        :param created: The created of this BuildMessage.
        :type created: datetime
        """

        self._created = created

    @property
    def message(self):
        """Gets the message of this BuildMessage.


        :return: The message of this BuildMessage.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this BuildMessage.


        :param message: The message of this BuildMessage.
        :type message: str
        """

        self._message = message
