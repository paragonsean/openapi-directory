# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class Job(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, updated: datetime=None, finished: datetime=None, job_id: str=None, name: str=None, started: datetime=None, status: Status=None):
        """Job - a model defined in OpenAPI

        :param created: The created of this Job.
        :param updated: The updated of this Job.
        :param finished: The finished of this Job.
        :param job_id: The job_id of this Job.
        :param name: The name of this Job.
        :param started: The started of this Job.
        :param status: The status of this Job.
        """
        self.openapi_types = {
            'created': datetime,
            'updated': datetime,
            'finished': datetime,
            'job_id': str,
            'name': str,
            'started': datetime,
            'status': Status
        }

        self.attribute_map = {
            'created': 'created',
            'updated': 'updated',
            'finished': 'finished',
            'job_id': 'jobId',
            'name': 'name',
            'started': 'started',
            'status': 'status'
        }

        self._created = created
        self._updated = updated
        self._finished = finished
        self._job_id = job_id
        self._name = name
        self._started = started
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Job':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Job of this Job.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this Job.


        :return: The created of this Job.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Job.


        :param created: The created of this Job.
        :type created: datetime
        """

        self._created = created

    @property
    def updated(self):
        """Gets the updated of this Job.


        :return: The updated of this Job.
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this Job.


        :param updated: The updated of this Job.
        :type updated: datetime
        """

        self._updated = updated

    @property
    def finished(self):
        """Gets the finished of this Job.


        :return: The finished of this Job.
        :rtype: datetime
        """
        return self._finished

    @finished.setter
    def finished(self, finished):
        """Sets the finished of this Job.


        :param finished: The finished of this Job.
        :type finished: datetime
        """

        self._finished = finished

    @property
    def job_id(self):
        """Gets the job_id of this Job.


        :return: The job_id of this Job.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this Job.


        :param job_id: The job_id of this Job.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def name(self):
        """Gets the name of this Job.


        :return: The name of this Job.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Job.


        :param name: The name of this Job.
        :type name: str
        """

        self._name = name

    @property
    def started(self):
        """Gets the started of this Job.


        :return: The started of this Job.
        :rtype: datetime
        """
        return self._started

    @started.setter
    def started(self, started):
        """Sets the started of this Job.


        :param started: The started of this Job.
        :type started: datetime
        """

        self._started = started

    @property
    def status(self):
        """Gets the status of this Job.


        :return: The status of this Job.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Job.


        :param status: The status of this Job.
        :type status: Status
        """

        self._status = status
