/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HttpMethodRestricted from './HttpMethodRestricted';
import NotificationSettingsType from './NotificationSettingsType';
import StoredNameValue from './StoredNameValue';
import StoredValue from './StoredValue';
import StringValueObject from './StringValueObject';

/**
 * The NotificationSettings model module.
 * @module model/NotificationSettings
 * @version 1.0.0
 */
class NotificationSettings {
    /**
     * Constructs a new <code>NotificationSettings</code>.
     * This type is the union of the settings types for each of the various notification types supported by the API.  The properties correspond to the following notification types:  #### All Types - onBuildSuccess - onBuildFailure - onBuildStatusChanged  #### Campfire - account - authToken - room - template  #### Email - subjectTemplate - bodyTemplate - recipients - recipientsValue  #### GitHubPullRequest - authToken - template  #### HipChat - authToken - from - room - template - serverUrl  #### Slack - incomingWebhookUrl - authToken - channel - template  #### Webhook - method - url - headers - headersValue - addCustomRequestBody - customRequestBodyContentType - customRequestBody  #### VSOTeamRoom - vsoAccount - username - password - room - template 
     * @alias module:model/NotificationSettings
     */
    constructor() { 
        
        NotificationSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NotificationSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationSettings} obj Optional instance to populate.
     * @return {module:model/NotificationSettings} The populated <code>NotificationSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationSettings();

            if (data.hasOwnProperty('$type')) {
                obj['$type'] = NotificationSettingsType.constructFromObject(data['$type']);
            }
            if (data.hasOwnProperty('account')) {
                obj['account'] = ApiClient.convertToType(data['account'], 'String');
            }
            if (data.hasOwnProperty('addCustomRequestBody')) {
                obj['addCustomRequestBody'] = ApiClient.convertToType(data['addCustomRequestBody'], 'Boolean');
            }
            if (data.hasOwnProperty('authToken')) {
                obj['authToken'] = StoredValue.constructFromObject(data['authToken']);
            }
            if (data.hasOwnProperty('bodyTemplate')) {
                obj['bodyTemplate'] = ApiClient.convertToType(data['bodyTemplate'], 'String');
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('customRequestBody')) {
                obj['customRequestBody'] = ApiClient.convertToType(data['customRequestBody'], 'String');
            }
            if (data.hasOwnProperty('customRequestBodyContentType')) {
                obj['customRequestBodyContentType'] = ApiClient.convertToType(data['customRequestBodyContentType'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'String');
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], [StoredNameValue]);
            }
            if (data.hasOwnProperty('headersValue')) {
                obj['headersValue'] = ApiClient.convertToType(data['headersValue'], 'String');
            }
            if (data.hasOwnProperty('incomingWebhookUrl')) {
                obj['incomingWebhookUrl'] = ApiClient.convertToType(data['incomingWebhookUrl'], 'String');
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = HttpMethodRestricted.constructFromObject(data['method']);
            }
            if (data.hasOwnProperty('onBuildFailure')) {
                obj['onBuildFailure'] = ApiClient.convertToType(data['onBuildFailure'], 'Boolean');
            }
            if (data.hasOwnProperty('onBuildStatusChanged')) {
                obj['onBuildStatusChanged'] = ApiClient.convertToType(data['onBuildStatusChanged'], 'Boolean');
            }
            if (data.hasOwnProperty('onBuildSuccess')) {
                obj['onBuildSuccess'] = ApiClient.convertToType(data['onBuildSuccess'], 'Boolean');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = StoredValue.constructFromObject(data['password']);
            }
            if (data.hasOwnProperty('recipients')) {
                obj['recipients'] = ApiClient.convertToType(data['recipients'], [StringValueObject]);
            }
            if (data.hasOwnProperty('recipientsValue')) {
                obj['recipientsValue'] = ApiClient.convertToType(data['recipientsValue'], 'String');
            }
            if (data.hasOwnProperty('room')) {
                obj['room'] = ApiClient.convertToType(data['room'], 'String');
            }
            if (data.hasOwnProperty('serverUrl')) {
                obj['serverUrl'] = ApiClient.convertToType(data['serverUrl'], 'String');
            }
            if (data.hasOwnProperty('subjectTemplate')) {
                obj['subjectTemplate'] = ApiClient.convertToType(data['subjectTemplate'], 'String');
            }
            if (data.hasOwnProperty('template')) {
                obj['template'] = ApiClient.convertToType(data['template'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('vsoAccount')) {
                obj['vsoAccount'] = ApiClient.convertToType(data['vsoAccount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account'] && !(typeof data['account'] === 'string' || data['account'] instanceof String)) {
            throw new Error("Expected the field `account` to be a primitive type in the JSON string but got " + data['account']);
        }
        // validate the optional field `authToken`
        if (data['authToken']) { // data not null
          StoredValue.validateJSON(data['authToken']);
        }
        // ensure the json data is a string
        if (data['bodyTemplate'] && !(typeof data['bodyTemplate'] === 'string' || data['bodyTemplate'] instanceof String)) {
            throw new Error("Expected the field `bodyTemplate` to be a primitive type in the JSON string but got " + data['bodyTemplate']);
        }
        // ensure the json data is a string
        if (data['channel'] && !(typeof data['channel'] === 'string' || data['channel'] instanceof String)) {
            throw new Error("Expected the field `channel` to be a primitive type in the JSON string but got " + data['channel']);
        }
        // ensure the json data is a string
        if (data['customRequestBody'] && !(typeof data['customRequestBody'] === 'string' || data['customRequestBody'] instanceof String)) {
            throw new Error("Expected the field `customRequestBody` to be a primitive type in the JSON string but got " + data['customRequestBody']);
        }
        // ensure the json data is a string
        if (data['customRequestBodyContentType'] && !(typeof data['customRequestBodyContentType'] === 'string' || data['customRequestBodyContentType'] instanceof String)) {
            throw new Error("Expected the field `customRequestBodyContentType` to be a primitive type in the JSON string but got " + data['customRequestBodyContentType']);
        }
        // ensure the json data is a string
        if (data['from'] && !(typeof data['from'] === 'string' || data['from'] instanceof String)) {
            throw new Error("Expected the field `from` to be a primitive type in the JSON string but got " + data['from']);
        }
        if (data['headers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['headers'])) {
                throw new Error("Expected the field `headers` to be an array in the JSON data but got " + data['headers']);
            }
            // validate the optional field `headers` (array)
            for (const item of data['headers']) {
                StoredNameValue.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['headersValue'] && !(typeof data['headersValue'] === 'string' || data['headersValue'] instanceof String)) {
            throw new Error("Expected the field `headersValue` to be a primitive type in the JSON string but got " + data['headersValue']);
        }
        // ensure the json data is a string
        if (data['incomingWebhookUrl'] && !(typeof data['incomingWebhookUrl'] === 'string' || data['incomingWebhookUrl'] instanceof String)) {
            throw new Error("Expected the field `incomingWebhookUrl` to be a primitive type in the JSON string but got " + data['incomingWebhookUrl']);
        }
        // validate the optional field `password`
        if (data['password']) { // data not null
          StoredValue.validateJSON(data['password']);
        }
        if (data['recipients']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recipients'])) {
                throw new Error("Expected the field `recipients` to be an array in the JSON data but got " + data['recipients']);
            }
            // validate the optional field `recipients` (array)
            for (const item of data['recipients']) {
                StringValueObject.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['recipientsValue'] && !(typeof data['recipientsValue'] === 'string' || data['recipientsValue'] instanceof String)) {
            throw new Error("Expected the field `recipientsValue` to be a primitive type in the JSON string but got " + data['recipientsValue']);
        }
        // ensure the json data is a string
        if (data['room'] && !(typeof data['room'] === 'string' || data['room'] instanceof String)) {
            throw new Error("Expected the field `room` to be a primitive type in the JSON string but got " + data['room']);
        }
        // ensure the json data is a string
        if (data['serverUrl'] && !(typeof data['serverUrl'] === 'string' || data['serverUrl'] instanceof String)) {
            throw new Error("Expected the field `serverUrl` to be a primitive type in the JSON string but got " + data['serverUrl']);
        }
        // ensure the json data is a string
        if (data['subjectTemplate'] && !(typeof data['subjectTemplate'] === 'string' || data['subjectTemplate'] instanceof String)) {
            throw new Error("Expected the field `subjectTemplate` to be a primitive type in the JSON string but got " + data['subjectTemplate']);
        }
        // ensure the json data is a string
        if (data['template'] && !(typeof data['template'] === 'string' || data['template'] instanceof String)) {
            throw new Error("Expected the field `template` to be a primitive type in the JSON string but got " + data['template']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }
        // ensure the json data is a string
        if (data['vsoAccount'] && !(typeof data['vsoAccount'] === 'string' || data['vsoAccount'] instanceof String)) {
            throw new Error("Expected the field `vsoAccount` to be a primitive type in the JSON string but got " + data['vsoAccount']);
        }

        return true;
    }


}



/**
 * @member {module:model/NotificationSettingsType} $type
 */
NotificationSettings.prototype['$type'] = undefined;

/**
 * @member {String} account
 */
NotificationSettings.prototype['account'] = undefined;

/**
 * @member {Boolean} addCustomRequestBody
 */
NotificationSettings.prototype['addCustomRequestBody'] = undefined;

/**
 * @member {module:model/StoredValue} authToken
 */
NotificationSettings.prototype['authToken'] = undefined;

/**
 * @member {String} bodyTemplate
 */
NotificationSettings.prototype['bodyTemplate'] = undefined;

/**
 * @member {String} channel
 */
NotificationSettings.prototype['channel'] = undefined;

/**
 * @member {String} customRequestBody
 */
NotificationSettings.prototype['customRequestBody'] = undefined;

/**
 * @member {String} customRequestBodyContentType
 */
NotificationSettings.prototype['customRequestBodyContentType'] = undefined;

/**
 * @member {String} from
 */
NotificationSettings.prototype['from'] = undefined;

/**
 * @member {Array.<module:model/StoredNameValue>} headers
 */
NotificationSettings.prototype['headers'] = undefined;

/**
 * @member {String} headersValue
 */
NotificationSettings.prototype['headersValue'] = undefined;

/**
 * @member {String} incomingWebhookUrl
 */
NotificationSettings.prototype['incomingWebhookUrl'] = undefined;

/**
 * @member {module:model/HttpMethodRestricted} method
 */
NotificationSettings.prototype['method'] = undefined;

/**
 * @member {Boolean} onBuildFailure
 */
NotificationSettings.prototype['onBuildFailure'] = undefined;

/**
 * @member {Boolean} onBuildStatusChanged
 */
NotificationSettings.prototype['onBuildStatusChanged'] = undefined;

/**
 * @member {Boolean} onBuildSuccess
 */
NotificationSettings.prototype['onBuildSuccess'] = undefined;

/**
 * @member {module:model/StoredValue} password
 */
NotificationSettings.prototype['password'] = undefined;

/**
 * @member {Array.<module:model/StringValueObject>} recipients
 */
NotificationSettings.prototype['recipients'] = undefined;

/**
 * @member {String} recipientsValue
 */
NotificationSettings.prototype['recipientsValue'] = undefined;

/**
 * @member {String} room
 */
NotificationSettings.prototype['room'] = undefined;

/**
 * @member {String} serverUrl
 */
NotificationSettings.prototype['serverUrl'] = undefined;

/**
 * @member {String} subjectTemplate
 */
NotificationSettings.prototype['subjectTemplate'] = undefined;

/**
 * @member {String} template
 */
NotificationSettings.prototype['template'] = undefined;

/**
 * @member {String} url
 */
NotificationSettings.prototype['url'] = undefined;

/**
 * @member {String} username
 */
NotificationSettings.prototype['username'] = undefined;

/**
 * @member {String} vsoAccount
 */
NotificationSettings.prototype['vsoAccount'] = undefined;






export default NotificationSettings;

