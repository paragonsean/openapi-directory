/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildNotificationFrequency from './BuildNotificationFrequency';
import DeploymentNotificationFrequency from './DeploymentNotificationFrequency';

/**
 * The UserAccountSettings model module.
 * @module model/UserAccountSettings
 * @version 1.0.0
 */
class UserAccountSettings {
    /**
     * Constructs a new <code>UserAccountSettings</code>.
     * @alias module:model/UserAccountSettings
     * @param failedBuildNotification {module:model/BuildNotificationFrequency} 
     * @param failedDeploymentNotification {module:model/DeploymentNotificationFrequency} 
     * @param successfulBuildNotification {module:model/BuildNotificationFrequency} 
     * @param successfulDeploymentNotification {module:model/DeploymentNotificationFrequency} 
     */
    constructor(failedBuildNotification, failedDeploymentNotification, successfulBuildNotification, successfulDeploymentNotification) { 
        
        UserAccountSettings.initialize(this, failedBuildNotification, failedDeploymentNotification, successfulBuildNotification, successfulDeploymentNotification);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, failedBuildNotification, failedDeploymentNotification, successfulBuildNotification, successfulDeploymentNotification) { 
        obj['failedBuildNotification'] = failedBuildNotification;
        obj['failedDeploymentNotification'] = failedDeploymentNotification;
        obj['notifyWhenBuildStatusChangedOnly'] = false;
        obj['notifyWhenDeploymentStatusChangedOnly'] = false;
        obj['successfulBuildNotification'] = successfulBuildNotification;
        obj['successfulDeploymentNotification'] = successfulDeploymentNotification;
    }

    /**
     * Constructs a <code>UserAccountSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserAccountSettings} obj Optional instance to populate.
     * @return {module:model/UserAccountSettings} The populated <code>UserAccountSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserAccountSettings();

            if (data.hasOwnProperty('failedBuildNotification')) {
                obj['failedBuildNotification'] = BuildNotificationFrequency.constructFromObject(data['failedBuildNotification']);
            }
            if (data.hasOwnProperty('failedDeploymentNotification')) {
                obj['failedDeploymentNotification'] = DeploymentNotificationFrequency.constructFromObject(data['failedDeploymentNotification']);
            }
            if (data.hasOwnProperty('notifyWhenBuildStatusChangedOnly')) {
                obj['notifyWhenBuildStatusChangedOnly'] = ApiClient.convertToType(data['notifyWhenBuildStatusChangedOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('notifyWhenDeploymentStatusChangedOnly')) {
                obj['notifyWhenDeploymentStatusChangedOnly'] = ApiClient.convertToType(data['notifyWhenDeploymentStatusChangedOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('successfulBuildNotification')) {
                obj['successfulBuildNotification'] = BuildNotificationFrequency.constructFromObject(data['successfulBuildNotification']);
            }
            if (data.hasOwnProperty('successfulDeploymentNotification')) {
                obj['successfulDeploymentNotification'] = DeploymentNotificationFrequency.constructFromObject(data['successfulDeploymentNotification']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserAccountSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserAccountSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserAccountSettings.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

UserAccountSettings.RequiredProperties = ["failedBuildNotification", "failedDeploymentNotification", "successfulBuildNotification", "successfulDeploymentNotification"];

/**
 * @member {module:model/BuildNotificationFrequency} failedBuildNotification
 */
UserAccountSettings.prototype['failedBuildNotification'] = undefined;

/**
 * @member {module:model/DeploymentNotificationFrequency} failedDeploymentNotification
 */
UserAccountSettings.prototype['failedDeploymentNotification'] = undefined;

/**
 * Note that this value is `true` on user creation, but behaves as `false` when not specified on update. 
 * @member {Boolean} notifyWhenBuildStatusChangedOnly
 * @default false
 */
UserAccountSettings.prototype['notifyWhenBuildStatusChangedOnly'] = false;

/**
 * Note that this value is `true` on user creation, but behaves as `false` when not specified on update. 
 * @member {Boolean} notifyWhenDeploymentStatusChangedOnly
 * @default false
 */
UserAccountSettings.prototype['notifyWhenDeploymentStatusChangedOnly'] = false;

/**
 * @member {module:model/BuildNotificationFrequency} successfulBuildNotification
 */
UserAccountSettings.prototype['successfulBuildNotification'] = undefined;

/**
 * @member {module:model/DeploymentNotificationFrequency} successfulDeploymentNotification
 */
UserAccountSettings.prototype['successfulDeploymentNotification'] = undefined;






export default UserAccountSettings;

