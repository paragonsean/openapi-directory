/*
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeploymentEnvironmentAddition;
import org.openapitools.client.model.DeploymentEnvironmentDeploymentsResults;
import org.openapitools.client.model.DeploymentEnvironmentLookupModel;
import org.openapitools.client.model.DeploymentEnvironmentSettingsResults;
import org.openapitools.client.model.DeploymentEnvironmentWithSettings;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EnvironmentApi
 */
@Disabled
public class EnvironmentApiTest {

    private final EnvironmentApi api = new EnvironmentApi();

    /**
     * Add environment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addEnvironmentTest() throws ApiException {
        DeploymentEnvironmentAddition body = null;
        DeploymentEnvironmentWithSettings response = api.addEnvironment(body);
        // TODO: test validations
    }

    /**
     * Delete environment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteEnvironmentTest() throws ApiException {
        Integer deploymentEnvironmentId = null;
        api.deleteEnvironment(deploymentEnvironmentId);
        // TODO: test validations
    }

    /**
     * Get environment deployments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEnvironmentDeploymentsTest() throws ApiException {
        Integer deploymentEnvironmentId = null;
        DeploymentEnvironmentDeploymentsResults response = api.getEnvironmentDeployments(deploymentEnvironmentId);
        // TODO: test validations
    }

    /**
     * Get environment settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEnvironmentSettingsTest() throws ApiException {
        Integer deploymentEnvironmentId = null;
        DeploymentEnvironmentSettingsResults response = api.getEnvironmentSettings(deploymentEnvironmentId);
        // TODO: test validations
    }

    /**
     * Get environments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEnvironmentsTest() throws ApiException {
        List<DeploymentEnvironmentLookupModel> response = api.getEnvironments();
        // TODO: test validations
    }

    /**
     * Update environment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateEnvironmentTest() throws ApiException {
        DeploymentEnvironmentWithSettings body = null;
        DeploymentEnvironmentWithSettings response = api.updateEnvironment(body);
        // TODO: test validations
    }

}
