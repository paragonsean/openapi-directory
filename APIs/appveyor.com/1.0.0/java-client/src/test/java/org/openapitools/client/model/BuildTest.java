/*
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BuildJob;
import org.openapitools.client.model.BuildMessage;
import org.openapitools.client.model.Status;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Build
 */
public class BuildTest {
    private final Build model = new Build();

    /**
     * Model tests for Build
     */
    @Test
    public void testBuild() {
        // TODO: test Build
    }

    /**
     * Test the property 'branch'
     */
    @Test
    public void branchTest() {
        // TODO: test branch
    }

    /**
     * Test the property 'buildId'
     */
    @Test
    public void buildIdTest() {
        // TODO: test buildId
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

    /**
     * Test the property 'authorName'
     */
    @Test
    public void authorNameTest() {
        // TODO: test authorName
    }

    /**
     * Test the property 'authorUsername'
     */
    @Test
    public void authorUsernameTest() {
        // TODO: test authorUsername
    }

    /**
     * Test the property 'buildNumber'
     */
    @Test
    public void buildNumberTest() {
        // TODO: test buildNumber
    }

    /**
     * Test the property 'commitId'
     */
    @Test
    public void commitIdTest() {
        // TODO: test commitId
    }

    /**
     * Test the property 'committed'
     */
    @Test
    public void committedTest() {
        // TODO: test committed
    }

    /**
     * Test the property 'committerName'
     */
    @Test
    public void committerNameTest() {
        // TODO: test committerName
    }

    /**
     * Test the property 'committerUsername'
     */
    @Test
    public void committerUsernameTest() {
        // TODO: test committerUsername
    }

    /**
     * Test the property 'finished'
     */
    @Test
    public void finishedTest() {
        // TODO: test finished
    }

    /**
     * Test the property 'isTag'
     */
    @Test
    public void isTagTest() {
        // TODO: test isTag
    }

    /**
     * Test the property 'jobs'
     */
    @Test
    public void jobsTest() {
        // TODO: test jobs
    }

    /**
     * Test the property 'messageExtended'
     */
    @Test
    public void messageExtendedTest() {
        // TODO: test messageExtended
    }

    /**
     * Test the property 'messages'
     */
    @Test
    public void messagesTest() {
        // TODO: test messages
    }

    /**
     * Test the property 'projectId'
     */
    @Test
    public void projectIdTest() {
        // TODO: test projectId
    }

    /**
     * Test the property 'pullRequestId'
     */
    @Test
    public void pullRequestIdTest() {
        // TODO: test pullRequestId
    }

    /**
     * Test the property 'pullRequestName'
     */
    @Test
    public void pullRequestNameTest() {
        // TODO: test pullRequestName
    }

    /**
     * Test the property 'started'
     */
    @Test
    public void startedTest() {
        // TODO: test started
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

}
