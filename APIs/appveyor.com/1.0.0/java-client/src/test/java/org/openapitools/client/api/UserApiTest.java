/*
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.InviteUserRequest;
import org.openapitools.client.model.JoinAccountRequest;
import org.openapitools.client.model.SessionModel;
import org.openapitools.client.model.UserAccount;
import org.openapitools.client.model.UserAccountRolesResults;
import org.openapitools.client.model.UserInvitationModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
@Disabled
public class UserApiTest {

    private final UserApi api = new UserApi();

    /**
     * Cancel user invitation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelUserInvitationTest() throws ApiException {
        String userInvitationId = null;
        api.cancelUserInvitation(userInvitationId);
        // TODO: test validations
    }

    /**
     * Delete user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        Integer userId = null;
        api.deleteUser(userId);
        // TODO: test validations
    }

    /**
     * Get user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserTest() throws ApiException {
        Integer userId = null;
        UserAccountRolesResults response = api.getUser(userId);
        // TODO: test validations
    }

    /**
     * Get user invitations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserInvitationsTest() throws ApiException {
        List<UserInvitationModel> response = api.getUserInvitations();
        // TODO: test validations
    }

    /**
     * Get users
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUsersTest() throws ApiException {
        List<UserAccount> response = api.getUsers();
        // TODO: test validations
    }

    /**
     * Invite user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inviteUserTest() throws ApiException {
        InviteUserRequest body = null;
        api.inviteUser(body);
        // TODO: test validations
    }

    /**
     * Join Account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void joinAccountTest() throws ApiException {
        JoinAccountRequest body = null;
        SessionModel response = api.joinAccount(body);
        // TODO: test validations
    }

    /**
     * Update user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        UserAccount body = null;
        api.updateUser(body);
        // TODO: test validations
    }

}
