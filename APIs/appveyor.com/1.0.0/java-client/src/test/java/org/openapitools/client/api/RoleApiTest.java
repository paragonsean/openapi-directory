/*
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Role;
import org.openapitools.client.model.RoleAddition;
import org.openapitools.client.model.RoleWithGroups;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RoleApi
 */
@Disabled
public class RoleApiTest {

    private final RoleApi api = new RoleApi();

    /**
     * Add role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addRoleTest() throws ApiException {
        RoleAddition body = null;
        RoleWithGroups response = api.addRole(body);
        // TODO: test validations
    }

    /**
     * Delete role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRoleTest() throws ApiException {
        Integer roleId = null;
        api.deleteRole(roleId);
        // TODO: test validations
    }

    /**
     * Get role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoleTest() throws ApiException {
        Integer roleId = null;
        RoleWithGroups response = api.getRole(roleId);
        // TODO: test validations
    }

    /**
     * Get roles
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRolesTest() throws ApiException {
        List<Role> response = api.getRoles();
        // TODO: test validations
    }

    /**
     * Update role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRoleTest() throws ApiException {
        RoleWithGroups body = null;
        RoleWithGroups response = api.updateRole(body);
        // TODO: test validations
    }

}
