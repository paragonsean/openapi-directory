/*
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.HttpMethodRestricted;
import org.openapitools.client.model.NotificationSettingsType;
import org.openapitools.client.model.StoredNameValue;
import org.openapitools.client.model.StoredValue;
import org.openapitools.client.model.StringValueObject;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This type is the union of the settings types for each of the various notification types supported by the API.  The properties correspond to the following notification types:  #### All Types - onBuildSuccess - onBuildFailure - onBuildStatusChanged  #### Campfire - account - authToken - room - template  #### Email - subjectTemplate - bodyTemplate - recipients - recipientsValue  #### GitHubPullRequest - authToken - template  #### HipChat - authToken - from - room - template - serverUrl  #### Slack - incomingWebhookUrl - authToken - channel - template  #### Webhook - method - url - headers - headersValue - addCustomRequestBody - customRequestBodyContentType - customRequestBody  #### VSOTeamRoom - vsoAccount - username - password - room - template 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:34.647088-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NotificationSettings {
  public static final String SERIALIZED_NAME_$_TYPE = "$type";
  @SerializedName(SERIALIZED_NAME_$_TYPE)
  private NotificationSettingsType $type;

  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private String account;

  public static final String SERIALIZED_NAME_ADD_CUSTOM_REQUEST_BODY = "addCustomRequestBody";
  @SerializedName(SERIALIZED_NAME_ADD_CUSTOM_REQUEST_BODY)
  private Boolean addCustomRequestBody;

  public static final String SERIALIZED_NAME_AUTH_TOKEN = "authToken";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN)
  private StoredValue authToken;

  public static final String SERIALIZED_NAME_BODY_TEMPLATE = "bodyTemplate";
  @SerializedName(SERIALIZED_NAME_BODY_TEMPLATE)
  private String bodyTemplate;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private String channel;

  public static final String SERIALIZED_NAME_CUSTOM_REQUEST_BODY = "customRequestBody";
  @SerializedName(SERIALIZED_NAME_CUSTOM_REQUEST_BODY)
  private String customRequestBody;

  public static final String SERIALIZED_NAME_CUSTOM_REQUEST_BODY_CONTENT_TYPE = "customRequestBodyContentType";
  @SerializedName(SERIALIZED_NAME_CUSTOM_REQUEST_BODY_CONTENT_TYPE)
  private String customRequestBodyContentType;

  public static final String SERIALIZED_NAME_FROM = "from";
  @SerializedName(SERIALIZED_NAME_FROM)
  private String from;

  public static final String SERIALIZED_NAME_HEADERS = "headers";
  @SerializedName(SERIALIZED_NAME_HEADERS)
  private List<StoredNameValue> headers = new ArrayList<>();

  public static final String SERIALIZED_NAME_HEADERS_VALUE = "headersValue";
  @SerializedName(SERIALIZED_NAME_HEADERS_VALUE)
  private String headersValue;

  public static final String SERIALIZED_NAME_INCOMING_WEBHOOK_URL = "incomingWebhookUrl";
  @SerializedName(SERIALIZED_NAME_INCOMING_WEBHOOK_URL)
  private URI incomingWebhookUrl;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private HttpMethodRestricted method;

  public static final String SERIALIZED_NAME_ON_BUILD_FAILURE = "onBuildFailure";
  @SerializedName(SERIALIZED_NAME_ON_BUILD_FAILURE)
  private Boolean onBuildFailure;

  public static final String SERIALIZED_NAME_ON_BUILD_STATUS_CHANGED = "onBuildStatusChanged";
  @SerializedName(SERIALIZED_NAME_ON_BUILD_STATUS_CHANGED)
  private Boolean onBuildStatusChanged;

  public static final String SERIALIZED_NAME_ON_BUILD_SUCCESS = "onBuildSuccess";
  @SerializedName(SERIALIZED_NAME_ON_BUILD_SUCCESS)
  private Boolean onBuildSuccess;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private StoredValue password;

  public static final String SERIALIZED_NAME_RECIPIENTS = "recipients";
  @SerializedName(SERIALIZED_NAME_RECIPIENTS)
  private List<StringValueObject> recipients = new ArrayList<>();

  public static final String SERIALIZED_NAME_RECIPIENTS_VALUE = "recipientsValue";
  @SerializedName(SERIALIZED_NAME_RECIPIENTS_VALUE)
  private String recipientsValue;

  public static final String SERIALIZED_NAME_ROOM = "room";
  @SerializedName(SERIALIZED_NAME_ROOM)
  private String room;

  public static final String SERIALIZED_NAME_SERVER_URL = "serverUrl";
  @SerializedName(SERIALIZED_NAME_SERVER_URL)
  private URI serverUrl;

  public static final String SERIALIZED_NAME_SUBJECT_TEMPLATE = "subjectTemplate";
  @SerializedName(SERIALIZED_NAME_SUBJECT_TEMPLATE)
  private String subjectTemplate;

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  private String template;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_VSO_ACCOUNT = "vsoAccount";
  @SerializedName(SERIALIZED_NAME_VSO_ACCOUNT)
  private String vsoAccount;

  public NotificationSettings() {
  }

  public NotificationSettings $type(NotificationSettingsType $type) {
    this.$type = $type;
    return this;
  }

  /**
   * Get $type
   * @return $type
   */
  @javax.annotation.Nullable
  public NotificationSettingsType get$Type() {
    return $type;
  }

  public void set$Type(NotificationSettingsType $type) {
    this.$type = $type;
  }


  public NotificationSettings account(String account) {
    this.account = account;
    return this;
  }

  /**
   * Get account
   * @return account
   */
  @javax.annotation.Nullable
  public String getAccount() {
    return account;
  }

  public void setAccount(String account) {
    this.account = account;
  }


  public NotificationSettings addCustomRequestBody(Boolean addCustomRequestBody) {
    this.addCustomRequestBody = addCustomRequestBody;
    return this;
  }

  /**
   * Get addCustomRequestBody
   * @return addCustomRequestBody
   */
  @javax.annotation.Nullable
  public Boolean getAddCustomRequestBody() {
    return addCustomRequestBody;
  }

  public void setAddCustomRequestBody(Boolean addCustomRequestBody) {
    this.addCustomRequestBody = addCustomRequestBody;
  }


  public NotificationSettings authToken(StoredValue authToken) {
    this.authToken = authToken;
    return this;
  }

  /**
   * Get authToken
   * @return authToken
   */
  @javax.annotation.Nullable
  public StoredValue getAuthToken() {
    return authToken;
  }

  public void setAuthToken(StoredValue authToken) {
    this.authToken = authToken;
  }


  public NotificationSettings bodyTemplate(String bodyTemplate) {
    this.bodyTemplate = bodyTemplate;
    return this;
  }

  /**
   * Get bodyTemplate
   * @return bodyTemplate
   */
  @javax.annotation.Nullable
  public String getBodyTemplate() {
    return bodyTemplate;
  }

  public void setBodyTemplate(String bodyTemplate) {
    this.bodyTemplate = bodyTemplate;
  }


  public NotificationSettings channel(String channel) {
    this.channel = channel;
    return this;
  }

  /**
   * Get channel
   * @return channel
   */
  @javax.annotation.Nullable
  public String getChannel() {
    return channel;
  }

  public void setChannel(String channel) {
    this.channel = channel;
  }


  public NotificationSettings customRequestBody(String customRequestBody) {
    this.customRequestBody = customRequestBody;
    return this;
  }

  /**
   * Get customRequestBody
   * @return customRequestBody
   */
  @javax.annotation.Nullable
  public String getCustomRequestBody() {
    return customRequestBody;
  }

  public void setCustomRequestBody(String customRequestBody) {
    this.customRequestBody = customRequestBody;
  }


  public NotificationSettings customRequestBodyContentType(String customRequestBodyContentType) {
    this.customRequestBodyContentType = customRequestBodyContentType;
    return this;
  }

  /**
   * Get customRequestBodyContentType
   * @return customRequestBodyContentType
   */
  @javax.annotation.Nullable
  public String getCustomRequestBodyContentType() {
    return customRequestBodyContentType;
  }

  public void setCustomRequestBodyContentType(String customRequestBodyContentType) {
    this.customRequestBodyContentType = customRequestBodyContentType;
  }


  public NotificationSettings from(String from) {
    this.from = from;
    return this;
  }

  /**
   * Get from
   * @return from
   */
  @javax.annotation.Nullable
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }


  public NotificationSettings headers(List<StoredNameValue> headers) {
    this.headers = headers;
    return this;
  }

  public NotificationSettings addHeadersItem(StoredNameValue headersItem) {
    if (this.headers == null) {
      this.headers = new ArrayList<>();
    }
    this.headers.add(headersItem);
    return this;
  }

  /**
   * Get headers
   * @return headers
   */
  @javax.annotation.Nullable
  public List<StoredNameValue> getHeaders() {
    return headers;
  }

  public void setHeaders(List<StoredNameValue> headers) {
    this.headers = headers;
  }


  public NotificationSettings headersValue(String headersValue) {
    this.headersValue = headersValue;
    return this;
  }

  /**
   * Get headersValue
   * @return headersValue
   */
  @javax.annotation.Nullable
  public String getHeadersValue() {
    return headersValue;
  }

  public void setHeadersValue(String headersValue) {
    this.headersValue = headersValue;
  }


  public NotificationSettings incomingWebhookUrl(URI incomingWebhookUrl) {
    this.incomingWebhookUrl = incomingWebhookUrl;
    return this;
  }

  /**
   * Get incomingWebhookUrl
   * @return incomingWebhookUrl
   */
  @javax.annotation.Nullable
  public URI getIncomingWebhookUrl() {
    return incomingWebhookUrl;
  }

  public void setIncomingWebhookUrl(URI incomingWebhookUrl) {
    this.incomingWebhookUrl = incomingWebhookUrl;
  }


  public NotificationSettings method(HttpMethodRestricted method) {
    this.method = method;
    return this;
  }

  /**
   * Get method
   * @return method
   */
  @javax.annotation.Nullable
  public HttpMethodRestricted getMethod() {
    return method;
  }

  public void setMethod(HttpMethodRestricted method) {
    this.method = method;
  }


  public NotificationSettings onBuildFailure(Boolean onBuildFailure) {
    this.onBuildFailure = onBuildFailure;
    return this;
  }

  /**
   * Get onBuildFailure
   * @return onBuildFailure
   */
  @javax.annotation.Nullable
  public Boolean getOnBuildFailure() {
    return onBuildFailure;
  }

  public void setOnBuildFailure(Boolean onBuildFailure) {
    this.onBuildFailure = onBuildFailure;
  }


  public NotificationSettings onBuildStatusChanged(Boolean onBuildStatusChanged) {
    this.onBuildStatusChanged = onBuildStatusChanged;
    return this;
  }

  /**
   * Get onBuildStatusChanged
   * @return onBuildStatusChanged
   */
  @javax.annotation.Nullable
  public Boolean getOnBuildStatusChanged() {
    return onBuildStatusChanged;
  }

  public void setOnBuildStatusChanged(Boolean onBuildStatusChanged) {
    this.onBuildStatusChanged = onBuildStatusChanged;
  }


  public NotificationSettings onBuildSuccess(Boolean onBuildSuccess) {
    this.onBuildSuccess = onBuildSuccess;
    return this;
  }

  /**
   * Get onBuildSuccess
   * @return onBuildSuccess
   */
  @javax.annotation.Nullable
  public Boolean getOnBuildSuccess() {
    return onBuildSuccess;
  }

  public void setOnBuildSuccess(Boolean onBuildSuccess) {
    this.onBuildSuccess = onBuildSuccess;
  }


  public NotificationSettings password(StoredValue password) {
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  public StoredValue getPassword() {
    return password;
  }

  public void setPassword(StoredValue password) {
    this.password = password;
  }


  public NotificationSettings recipients(List<StringValueObject> recipients) {
    this.recipients = recipients;
    return this;
  }

  public NotificationSettings addRecipientsItem(StringValueObject recipientsItem) {
    if (this.recipients == null) {
      this.recipients = new ArrayList<>();
    }
    this.recipients.add(recipientsItem);
    return this;
  }

  /**
   * Get recipients
   * @return recipients
   */
  @javax.annotation.Nullable
  public List<StringValueObject> getRecipients() {
    return recipients;
  }

  public void setRecipients(List<StringValueObject> recipients) {
    this.recipients = recipients;
  }


  public NotificationSettings recipientsValue(String recipientsValue) {
    this.recipientsValue = recipientsValue;
    return this;
  }

  /**
   * Get recipientsValue
   * @return recipientsValue
   */
  @javax.annotation.Nullable
  public String getRecipientsValue() {
    return recipientsValue;
  }

  public void setRecipientsValue(String recipientsValue) {
    this.recipientsValue = recipientsValue;
  }


  public NotificationSettings room(String room) {
    this.room = room;
    return this;
  }

  /**
   * Get room
   * @return room
   */
  @javax.annotation.Nullable
  public String getRoom() {
    return room;
  }

  public void setRoom(String room) {
    this.room = room;
  }


  public NotificationSettings serverUrl(URI serverUrl) {
    this.serverUrl = serverUrl;
    return this;
  }

  /**
   * Get serverUrl
   * @return serverUrl
   */
  @javax.annotation.Nullable
  public URI getServerUrl() {
    return serverUrl;
  }

  public void setServerUrl(URI serverUrl) {
    this.serverUrl = serverUrl;
  }


  public NotificationSettings subjectTemplate(String subjectTemplate) {
    this.subjectTemplate = subjectTemplate;
    return this;
  }

  /**
   * Get subjectTemplate
   * @return subjectTemplate
   */
  @javax.annotation.Nullable
  public String getSubjectTemplate() {
    return subjectTemplate;
  }

  public void setSubjectTemplate(String subjectTemplate) {
    this.subjectTemplate = subjectTemplate;
  }


  public NotificationSettings template(String template) {
    this.template = template;
    return this;
  }

  /**
   * Get template
   * @return template
   */
  @javax.annotation.Nullable
  public String getTemplate() {
    return template;
  }

  public void setTemplate(String template) {
    this.template = template;
  }


  public NotificationSettings url(URI url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public URI getUrl() {
    return url;
  }

  public void setUrl(URI url) {
    this.url = url;
  }


  public NotificationSettings username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  public NotificationSettings vsoAccount(String vsoAccount) {
    this.vsoAccount = vsoAccount;
    return this;
  }

  /**
   * Get vsoAccount
   * @return vsoAccount
   */
  @javax.annotation.Nullable
  public String getVsoAccount() {
    return vsoAccount;
  }

  public void setVsoAccount(String vsoAccount) {
    this.vsoAccount = vsoAccount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationSettings notificationSettings = (NotificationSettings) o;
    return Objects.equals(this.$type, notificationSettings.$type) &&
        Objects.equals(this.account, notificationSettings.account) &&
        Objects.equals(this.addCustomRequestBody, notificationSettings.addCustomRequestBody) &&
        Objects.equals(this.authToken, notificationSettings.authToken) &&
        Objects.equals(this.bodyTemplate, notificationSettings.bodyTemplate) &&
        Objects.equals(this.channel, notificationSettings.channel) &&
        Objects.equals(this.customRequestBody, notificationSettings.customRequestBody) &&
        Objects.equals(this.customRequestBodyContentType, notificationSettings.customRequestBodyContentType) &&
        Objects.equals(this.from, notificationSettings.from) &&
        Objects.equals(this.headers, notificationSettings.headers) &&
        Objects.equals(this.headersValue, notificationSettings.headersValue) &&
        Objects.equals(this.incomingWebhookUrl, notificationSettings.incomingWebhookUrl) &&
        Objects.equals(this.method, notificationSettings.method) &&
        Objects.equals(this.onBuildFailure, notificationSettings.onBuildFailure) &&
        Objects.equals(this.onBuildStatusChanged, notificationSettings.onBuildStatusChanged) &&
        Objects.equals(this.onBuildSuccess, notificationSettings.onBuildSuccess) &&
        Objects.equals(this.password, notificationSettings.password) &&
        Objects.equals(this.recipients, notificationSettings.recipients) &&
        Objects.equals(this.recipientsValue, notificationSettings.recipientsValue) &&
        Objects.equals(this.room, notificationSettings.room) &&
        Objects.equals(this.serverUrl, notificationSettings.serverUrl) &&
        Objects.equals(this.subjectTemplate, notificationSettings.subjectTemplate) &&
        Objects.equals(this.template, notificationSettings.template) &&
        Objects.equals(this.url, notificationSettings.url) &&
        Objects.equals(this.username, notificationSettings.username) &&
        Objects.equals(this.vsoAccount, notificationSettings.vsoAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash($type, account, addCustomRequestBody, authToken, bodyTemplate, channel, customRequestBody, customRequestBodyContentType, from, headers, headersValue, incomingWebhookUrl, method, onBuildFailure, onBuildStatusChanged, onBuildSuccess, password, recipients, recipientsValue, room, serverUrl, subjectTemplate, template, url, username, vsoAccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationSettings {\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    addCustomRequestBody: ").append(toIndentedString(addCustomRequestBody)).append("\n");
    sb.append("    authToken: ").append(toIndentedString(authToken)).append("\n");
    sb.append("    bodyTemplate: ").append(toIndentedString(bodyTemplate)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    customRequestBody: ").append(toIndentedString(customRequestBody)).append("\n");
    sb.append("    customRequestBodyContentType: ").append(toIndentedString(customRequestBodyContentType)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    headersValue: ").append(toIndentedString(headersValue)).append("\n");
    sb.append("    incomingWebhookUrl: ").append(toIndentedString(incomingWebhookUrl)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    onBuildFailure: ").append(toIndentedString(onBuildFailure)).append("\n");
    sb.append("    onBuildStatusChanged: ").append(toIndentedString(onBuildStatusChanged)).append("\n");
    sb.append("    onBuildSuccess: ").append(toIndentedString(onBuildSuccess)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    recipientsValue: ").append(toIndentedString(recipientsValue)).append("\n");
    sb.append("    room: ").append(toIndentedString(room)).append("\n");
    sb.append("    serverUrl: ").append(toIndentedString(serverUrl)).append("\n");
    sb.append("    subjectTemplate: ").append(toIndentedString(subjectTemplate)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    vsoAccount: ").append(toIndentedString(vsoAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("$type");
    openapiFields.add("account");
    openapiFields.add("addCustomRequestBody");
    openapiFields.add("authToken");
    openapiFields.add("bodyTemplate");
    openapiFields.add("channel");
    openapiFields.add("customRequestBody");
    openapiFields.add("customRequestBodyContentType");
    openapiFields.add("from");
    openapiFields.add("headers");
    openapiFields.add("headersValue");
    openapiFields.add("incomingWebhookUrl");
    openapiFields.add("method");
    openapiFields.add("onBuildFailure");
    openapiFields.add("onBuildStatusChanged");
    openapiFields.add("onBuildSuccess");
    openapiFields.add("password");
    openapiFields.add("recipients");
    openapiFields.add("recipientsValue");
    openapiFields.add("room");
    openapiFields.add("serverUrl");
    openapiFields.add("subjectTemplate");
    openapiFields.add("template");
    openapiFields.add("url");
    openapiFields.add("username");
    openapiFields.add("vsoAccount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NotificationSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NotificationSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NotificationSettings is not found in the empty JSON string", NotificationSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NotificationSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NotificationSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `$type`
      if (jsonObj.get("$type") != null && !jsonObj.get("$type").isJsonNull()) {
        NotificationSettingsType.validateJsonElement(jsonObj.get("$type"));
      }
      if ((jsonObj.get("account") != null && !jsonObj.get("account").isJsonNull()) && !jsonObj.get("account").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account").toString()));
      }
      // validate the optional field `authToken`
      if (jsonObj.get("authToken") != null && !jsonObj.get("authToken").isJsonNull()) {
        StoredValue.validateJsonElement(jsonObj.get("authToken"));
      }
      if ((jsonObj.get("bodyTemplate") != null && !jsonObj.get("bodyTemplate").isJsonNull()) && !jsonObj.get("bodyTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bodyTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bodyTemplate").toString()));
      }
      if ((jsonObj.get("channel") != null && !jsonObj.get("channel").isJsonNull()) && !jsonObj.get("channel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channel").toString()));
      }
      if ((jsonObj.get("customRequestBody") != null && !jsonObj.get("customRequestBody").isJsonNull()) && !jsonObj.get("customRequestBody").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customRequestBody` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customRequestBody").toString()));
      }
      if ((jsonObj.get("customRequestBodyContentType") != null && !jsonObj.get("customRequestBodyContentType").isJsonNull()) && !jsonObj.get("customRequestBodyContentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customRequestBodyContentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customRequestBodyContentType").toString()));
      }
      if ((jsonObj.get("from") != null && !jsonObj.get("from").isJsonNull()) && !jsonObj.get("from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from").toString()));
      }
      if (jsonObj.get("headers") != null && !jsonObj.get("headers").isJsonNull()) {
        JsonArray jsonArrayheaders = jsonObj.getAsJsonArray("headers");
        if (jsonArrayheaders != null) {
          // ensure the json data is an array
          if (!jsonObj.get("headers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `headers` to be an array in the JSON string but got `%s`", jsonObj.get("headers").toString()));
          }

          // validate the optional field `headers` (array)
          for (int i = 0; i < jsonArrayheaders.size(); i++) {
            StoredNameValue.validateJsonElement(jsonArrayheaders.get(i));
          };
        }
      }
      if ((jsonObj.get("headersValue") != null && !jsonObj.get("headersValue").isJsonNull()) && !jsonObj.get("headersValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `headersValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("headersValue").toString()));
      }
      if ((jsonObj.get("incomingWebhookUrl") != null && !jsonObj.get("incomingWebhookUrl").isJsonNull()) && !jsonObj.get("incomingWebhookUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `incomingWebhookUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("incomingWebhookUrl").toString()));
      }
      // validate the optional field `method`
      if (jsonObj.get("method") != null && !jsonObj.get("method").isJsonNull()) {
        HttpMethodRestricted.validateJsonElement(jsonObj.get("method"));
      }
      // validate the optional field `password`
      if (jsonObj.get("password") != null && !jsonObj.get("password").isJsonNull()) {
        StoredValue.validateJsonElement(jsonObj.get("password"));
      }
      if (jsonObj.get("recipients") != null && !jsonObj.get("recipients").isJsonNull()) {
        JsonArray jsonArrayrecipients = jsonObj.getAsJsonArray("recipients");
        if (jsonArrayrecipients != null) {
          // ensure the json data is an array
          if (!jsonObj.get("recipients").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `recipients` to be an array in the JSON string but got `%s`", jsonObj.get("recipients").toString()));
          }

          // validate the optional field `recipients` (array)
          for (int i = 0; i < jsonArrayrecipients.size(); i++) {
            StringValueObject.validateJsonElement(jsonArrayrecipients.get(i));
          };
        }
      }
      if ((jsonObj.get("recipientsValue") != null && !jsonObj.get("recipientsValue").isJsonNull()) && !jsonObj.get("recipientsValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipientsValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipientsValue").toString()));
      }
      if ((jsonObj.get("room") != null && !jsonObj.get("room").isJsonNull()) && !jsonObj.get("room").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `room` to be a primitive type in the JSON string but got `%s`", jsonObj.get("room").toString()));
      }
      if ((jsonObj.get("serverUrl") != null && !jsonObj.get("serverUrl").isJsonNull()) && !jsonObj.get("serverUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serverUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serverUrl").toString()));
      }
      if ((jsonObj.get("subjectTemplate") != null && !jsonObj.get("subjectTemplate").isJsonNull()) && !jsonObj.get("subjectTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subjectTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subjectTemplate").toString()));
      }
      if ((jsonObj.get("template") != null && !jsonObj.get("template").isJsonNull()) && !jsonObj.get("template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("template").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
      if ((jsonObj.get("vsoAccount") != null && !jsonObj.get("vsoAccount").isJsonNull()) && !jsonObj.get("vsoAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vsoAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vsoAccount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NotificationSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NotificationSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NotificationSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NotificationSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<NotificationSettings>() {
           @Override
           public void write(JsonWriter out, NotificationSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NotificationSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NotificationSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NotificationSettings
   * @throws IOException if the JSON string is invalid with respect to NotificationSettings
   */
  public static NotificationSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NotificationSettings.class);
  }

  /**
   * Convert an instance of NotificationSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

