/*
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BuildNotificationFrequency;
import org.openapitools.client.model.DeploymentNotificationFrequency;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserAccountSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:20:34.647088-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UserAccountSettings {
  public static final String SERIALIZED_NAME_FAILED_BUILD_NOTIFICATION = "failedBuildNotification";
  @SerializedName(SERIALIZED_NAME_FAILED_BUILD_NOTIFICATION)
  private BuildNotificationFrequency failedBuildNotification;

  public static final String SERIALIZED_NAME_FAILED_DEPLOYMENT_NOTIFICATION = "failedDeploymentNotification";
  @SerializedName(SERIALIZED_NAME_FAILED_DEPLOYMENT_NOTIFICATION)
  private DeploymentNotificationFrequency failedDeploymentNotification;

  public static final String SERIALIZED_NAME_NOTIFY_WHEN_BUILD_STATUS_CHANGED_ONLY = "notifyWhenBuildStatusChangedOnly";
  @SerializedName(SERIALIZED_NAME_NOTIFY_WHEN_BUILD_STATUS_CHANGED_ONLY)
  private Boolean notifyWhenBuildStatusChangedOnly = false;

  public static final String SERIALIZED_NAME_NOTIFY_WHEN_DEPLOYMENT_STATUS_CHANGED_ONLY = "notifyWhenDeploymentStatusChangedOnly";
  @SerializedName(SERIALIZED_NAME_NOTIFY_WHEN_DEPLOYMENT_STATUS_CHANGED_ONLY)
  private Boolean notifyWhenDeploymentStatusChangedOnly = false;

  public static final String SERIALIZED_NAME_SUCCESSFUL_BUILD_NOTIFICATION = "successfulBuildNotification";
  @SerializedName(SERIALIZED_NAME_SUCCESSFUL_BUILD_NOTIFICATION)
  private BuildNotificationFrequency successfulBuildNotification;

  public static final String SERIALIZED_NAME_SUCCESSFUL_DEPLOYMENT_NOTIFICATION = "successfulDeploymentNotification";
  @SerializedName(SERIALIZED_NAME_SUCCESSFUL_DEPLOYMENT_NOTIFICATION)
  private DeploymentNotificationFrequency successfulDeploymentNotification;

  public UserAccountSettings() {
  }

  public UserAccountSettings failedBuildNotification(BuildNotificationFrequency failedBuildNotification) {
    this.failedBuildNotification = failedBuildNotification;
    return this;
  }

  /**
   * Get failedBuildNotification
   * @return failedBuildNotification
   */
  @javax.annotation.Nonnull
  public BuildNotificationFrequency getFailedBuildNotification() {
    return failedBuildNotification;
  }

  public void setFailedBuildNotification(BuildNotificationFrequency failedBuildNotification) {
    this.failedBuildNotification = failedBuildNotification;
  }


  public UserAccountSettings failedDeploymentNotification(DeploymentNotificationFrequency failedDeploymentNotification) {
    this.failedDeploymentNotification = failedDeploymentNotification;
    return this;
  }

  /**
   * Get failedDeploymentNotification
   * @return failedDeploymentNotification
   */
  @javax.annotation.Nonnull
  public DeploymentNotificationFrequency getFailedDeploymentNotification() {
    return failedDeploymentNotification;
  }

  public void setFailedDeploymentNotification(DeploymentNotificationFrequency failedDeploymentNotification) {
    this.failedDeploymentNotification = failedDeploymentNotification;
  }


  public UserAccountSettings notifyWhenBuildStatusChangedOnly(Boolean notifyWhenBuildStatusChangedOnly) {
    this.notifyWhenBuildStatusChangedOnly = notifyWhenBuildStatusChangedOnly;
    return this;
  }

  /**
   * Note that this value is &#x60;true&#x60; on user creation, but behaves as &#x60;false&#x60; when not specified on update. 
   * @return notifyWhenBuildStatusChangedOnly
   */
  @javax.annotation.Nullable
  public Boolean getNotifyWhenBuildStatusChangedOnly() {
    return notifyWhenBuildStatusChangedOnly;
  }

  public void setNotifyWhenBuildStatusChangedOnly(Boolean notifyWhenBuildStatusChangedOnly) {
    this.notifyWhenBuildStatusChangedOnly = notifyWhenBuildStatusChangedOnly;
  }


  public UserAccountSettings notifyWhenDeploymentStatusChangedOnly(Boolean notifyWhenDeploymentStatusChangedOnly) {
    this.notifyWhenDeploymentStatusChangedOnly = notifyWhenDeploymentStatusChangedOnly;
    return this;
  }

  /**
   * Note that this value is &#x60;true&#x60; on user creation, but behaves as &#x60;false&#x60; when not specified on update. 
   * @return notifyWhenDeploymentStatusChangedOnly
   */
  @javax.annotation.Nullable
  public Boolean getNotifyWhenDeploymentStatusChangedOnly() {
    return notifyWhenDeploymentStatusChangedOnly;
  }

  public void setNotifyWhenDeploymentStatusChangedOnly(Boolean notifyWhenDeploymentStatusChangedOnly) {
    this.notifyWhenDeploymentStatusChangedOnly = notifyWhenDeploymentStatusChangedOnly;
  }


  public UserAccountSettings successfulBuildNotification(BuildNotificationFrequency successfulBuildNotification) {
    this.successfulBuildNotification = successfulBuildNotification;
    return this;
  }

  /**
   * Get successfulBuildNotification
   * @return successfulBuildNotification
   */
  @javax.annotation.Nonnull
  public BuildNotificationFrequency getSuccessfulBuildNotification() {
    return successfulBuildNotification;
  }

  public void setSuccessfulBuildNotification(BuildNotificationFrequency successfulBuildNotification) {
    this.successfulBuildNotification = successfulBuildNotification;
  }


  public UserAccountSettings successfulDeploymentNotification(DeploymentNotificationFrequency successfulDeploymentNotification) {
    this.successfulDeploymentNotification = successfulDeploymentNotification;
    return this;
  }

  /**
   * Get successfulDeploymentNotification
   * @return successfulDeploymentNotification
   */
  @javax.annotation.Nonnull
  public DeploymentNotificationFrequency getSuccessfulDeploymentNotification() {
    return successfulDeploymentNotification;
  }

  public void setSuccessfulDeploymentNotification(DeploymentNotificationFrequency successfulDeploymentNotification) {
    this.successfulDeploymentNotification = successfulDeploymentNotification;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserAccountSettings userAccountSettings = (UserAccountSettings) o;
    return Objects.equals(this.failedBuildNotification, userAccountSettings.failedBuildNotification) &&
        Objects.equals(this.failedDeploymentNotification, userAccountSettings.failedDeploymentNotification) &&
        Objects.equals(this.notifyWhenBuildStatusChangedOnly, userAccountSettings.notifyWhenBuildStatusChangedOnly) &&
        Objects.equals(this.notifyWhenDeploymentStatusChangedOnly, userAccountSettings.notifyWhenDeploymentStatusChangedOnly) &&
        Objects.equals(this.successfulBuildNotification, userAccountSettings.successfulBuildNotification) &&
        Objects.equals(this.successfulDeploymentNotification, userAccountSettings.successfulDeploymentNotification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(failedBuildNotification, failedDeploymentNotification, notifyWhenBuildStatusChangedOnly, notifyWhenDeploymentStatusChangedOnly, successfulBuildNotification, successfulDeploymentNotification);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserAccountSettings {\n");
    sb.append("    failedBuildNotification: ").append(toIndentedString(failedBuildNotification)).append("\n");
    sb.append("    failedDeploymentNotification: ").append(toIndentedString(failedDeploymentNotification)).append("\n");
    sb.append("    notifyWhenBuildStatusChangedOnly: ").append(toIndentedString(notifyWhenBuildStatusChangedOnly)).append("\n");
    sb.append("    notifyWhenDeploymentStatusChangedOnly: ").append(toIndentedString(notifyWhenDeploymentStatusChangedOnly)).append("\n");
    sb.append("    successfulBuildNotification: ").append(toIndentedString(successfulBuildNotification)).append("\n");
    sb.append("    successfulDeploymentNotification: ").append(toIndentedString(successfulDeploymentNotification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("failedBuildNotification");
    openapiFields.add("failedDeploymentNotification");
    openapiFields.add("notifyWhenBuildStatusChangedOnly");
    openapiFields.add("notifyWhenDeploymentStatusChangedOnly");
    openapiFields.add("successfulBuildNotification");
    openapiFields.add("successfulDeploymentNotification");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("failedBuildNotification");
    openapiRequiredFields.add("failedDeploymentNotification");
    openapiRequiredFields.add("successfulBuildNotification");
    openapiRequiredFields.add("successfulDeploymentNotification");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserAccountSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserAccountSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserAccountSettings is not found in the empty JSON string", UserAccountSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserAccountSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserAccountSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UserAccountSettings.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `failedBuildNotification`
      BuildNotificationFrequency.validateJsonElement(jsonObj.get("failedBuildNotification"));
      // validate the required field `failedDeploymentNotification`
      DeploymentNotificationFrequency.validateJsonElement(jsonObj.get("failedDeploymentNotification"));
      // validate the required field `successfulBuildNotification`
      BuildNotificationFrequency.validateJsonElement(jsonObj.get("successfulBuildNotification"));
      // validate the required field `successfulDeploymentNotification`
      DeploymentNotificationFrequency.validateJsonElement(jsonObj.get("successfulDeploymentNotification"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserAccountSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserAccountSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserAccountSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserAccountSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<UserAccountSettings>() {
           @Override
           public void write(JsonWriter out, UserAccountSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserAccountSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserAccountSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserAccountSettings
   * @throws IOException if the JSON string is invalid with respect to UserAccountSettings
   */
  public static UserAccountSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserAccountSettings.class);
  }

  /**
   * Convert an instance of UserAccountSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

