/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeploymentLookupModel.h
 *
 * 
 */

#ifndef OAIDeploymentLookupModel_H
#define OAIDeploymentLookupModel_H

#include <QJsonObject>

#include "OAIBuildLookupModel.h"
#include "OAIStatus.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBuildLookupModel;

class OAIDeploymentLookupModel : public OAIObject {
public:
    OAIDeploymentLookupModel();
    OAIDeploymentLookupModel(QString json);
    ~OAIDeploymentLookupModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBuildLookupModel getBuild() const;
    void setBuild(const OAIBuildLookupModel &build);
    bool is_build_Set() const;
    bool is_build_Valid() const;

    qint32 getDeploymentId() const;
    void setDeploymentId(const qint32 &deployment_id);
    bool is_deployment_id_Set() const;
    bool is_deployment_id_Valid() const;

    QDateTime getFinished() const;
    void setFinished(const QDateTime &finished);
    bool is_finished_Set() const;
    bool is_finished_Valid() const;

    QDateTime getStarted() const;
    void setStarted(const QDateTime &started);
    bool is_started_Set() const;
    bool is_started_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBuildLookupModel m_build;
    bool m_build_isSet;
    bool m_build_isValid;

    qint32 m_deployment_id;
    bool m_deployment_id_isSet;
    bool m_deployment_id_isValid;

    QDateTime m_finished;
    bool m_finished_isSet;
    bool m_finished_isValid;

    QDateTime m_started;
    bool m_started_isSet;
    bool m_started_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeploymentLookupModel)

#endif // OAIDeploymentLookupModel_H
