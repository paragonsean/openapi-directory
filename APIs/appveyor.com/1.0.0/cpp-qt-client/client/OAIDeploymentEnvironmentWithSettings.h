/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeploymentEnvironmentWithSettings.h
 *
 * 
 */

#ifndef OAIDeploymentEnvironmentWithSettings_H
#define OAIDeploymentEnvironmentWithSettings_H

#include <QJsonObject>

#include "OAIDeploymentEnvironmentProject.h"
#include "OAIDeploymentEnvironmentSettings.h"
#include "OAIDeploymentProjectSelectionMode.h"
#include "OAIDeploymentProviderType.h"
#include "OAISecurityDescriptor.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISecurityDescriptor;
class OAIDeploymentEnvironmentProject;
class OAIDeploymentEnvironmentSettings;

class OAIDeploymentEnvironmentWithSettings : public OAIObject {
public:
    OAIDeploymentEnvironmentWithSettings();
    OAIDeploymentEnvironmentWithSettings(QString json);
    ~OAIDeploymentEnvironmentWithSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDeploymentEnvironmentId() const;
    void setDeploymentEnvironmentId(const qint32 &deployment_environment_id);
    bool is_deployment_environment_id_Set() const;
    bool is_deployment_environment_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIDeploymentProviderType getProvider() const;
    void setProvider(const OAIDeploymentProviderType &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QDateTime getUpdated() const;
    void setUpdated(const QDateTime &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    qint32 getAccountId() const;
    void setAccountId(const qint32 &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    OAIDeploymentProjectSelectionMode getProjectsMode() const;
    void setProjectsMode(const OAIDeploymentProjectSelectionMode &projects_mode);
    bool is_projects_mode_Set() const;
    bool is_projects_mode_Valid() const;

    OAISecurityDescriptor getSecurityDescriptor() const;
    void setSecurityDescriptor(const OAISecurityDescriptor &security_descriptor);
    bool is_security_descriptor_Set() const;
    bool is_security_descriptor_Valid() const;

    QString getTags() const;
    void setTags(const QString &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getEnvironmentAccessKey() const;
    void setEnvironmentAccessKey(const QString &environment_access_key);
    bool is_environment_access_key_Set() const;
    bool is_environment_access_key_Valid() const;

    QList<OAIDeploymentEnvironmentProject> getProjects() const;
    void setProjects(const QList<OAIDeploymentEnvironmentProject> &projects);
    bool is_projects_Set() const;
    bool is_projects_Valid() const;

    QList<qint32> getSelectedProjects() const;
    void setSelectedProjects(const QList<qint32> &selected_projects);
    bool is_selected_projects_Set() const;
    bool is_selected_projects_Valid() const;

    OAIDeploymentEnvironmentSettings getSettings() const;
    void setSettings(const OAIDeploymentEnvironmentSettings &settings);
    bool is_settings_Set() const;
    bool is_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_deployment_environment_id;
    bool m_deployment_environment_id_isSet;
    bool m_deployment_environment_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIDeploymentProviderType m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QDateTime m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    qint32 m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    OAIDeploymentProjectSelectionMode m_projects_mode;
    bool m_projects_mode_isSet;
    bool m_projects_mode_isValid;

    OAISecurityDescriptor m_security_descriptor;
    bool m_security_descriptor_isSet;
    bool m_security_descriptor_isValid;

    QString m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_environment_access_key;
    bool m_environment_access_key_isSet;
    bool m_environment_access_key_isValid;

    QList<OAIDeploymentEnvironmentProject> m_projects;
    bool m_projects_isSet;
    bool m_projects_isValid;

    QList<qint32> m_selected_projects;
    bool m_selected_projects_isSet;
    bool m_selected_projects_isValid;

    OAIDeploymentEnvironmentSettings m_settings;
    bool m_settings_isSet;
    bool m_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeploymentEnvironmentWithSettings)

#endif // OAIDeploymentEnvironmentWithSettings_H
