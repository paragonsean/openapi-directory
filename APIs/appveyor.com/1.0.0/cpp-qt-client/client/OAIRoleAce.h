/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoleAce.h
 *
 * 
 */

#ifndef OAIRoleAce_H
#define OAIRoleAce_H

#include <QJsonObject>

#include "OAIAceAccessRight.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAceAccessRight;

class OAIRoleAce : public OAIObject {
public:
    OAIRoleAce();
    OAIRoleAce(QString json);
    ~OAIRoleAce() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAceAccessRight> getAccessRights() const;
    void setAccessRights(const QList<OAIAceAccessRight> &access_rights);
    bool is_access_rights_Set() const;
    bool is_access_rights_Valid() const;

    bool isIsAdmin() const;
    void setIsAdmin(const bool &is_admin);
    bool is_is_admin_Set() const;
    bool is_is_admin_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getRoleId() const;
    void setRoleId(const qint32 &role_id);
    bool is_role_id_Set() const;
    bool is_role_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAceAccessRight> m_access_rights;
    bool m_access_rights_isSet;
    bool m_access_rights_isValid;

    bool m_is_admin;
    bool m_is_admin_isSet;
    bool m_is_admin_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_role_id;
    bool m_role_id_isSet;
    bool m_role_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoleAce)

#endif // OAIRoleAce_H
