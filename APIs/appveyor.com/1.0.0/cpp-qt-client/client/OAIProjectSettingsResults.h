/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjectSettingsResults.h
 *
 * 
 */

#ifndef OAIProjectSettingsResults_H
#define OAIProjectSettingsResults_H

#include <QJsonObject>

#include "OAIBuildWorkerImage.h"
#include "OAIProject.h"
#include "OAIProjectWithConfiguration.h"
#include "OAIStringValueObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStringValueObject;
class OAIBuildWorkerImage;
class OAIProject;
class OAIProjectWithConfiguration;

class OAIProjectSettingsResults : public OAIObject {
public:
    OAIProjectSettingsResults();
    OAIProjectSettingsResults(QString json);
    ~OAIProjectSettingsResults() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIStringValueObject> getBuildClouds() const;
    void setBuildClouds(const QList<OAIStringValueObject> &build_clouds);
    bool is_build_clouds_Set() const;
    bool is_build_clouds_Valid() const;

    QString getDefaultImageName() const;
    void setDefaultImageName(const QString &default_image_name);
    bool is_default_image_name_Set() const;
    bool is_default_image_name_Valid() const;

    QList<OAIBuildWorkerImage> getImages() const;
    void setImages(const QList<OAIBuildWorkerImage> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    OAIProject getProject() const;
    void setProject(const OAIProject &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    OAIProjectWithConfiguration getSettings() const;
    void setSettings(const OAIProjectWithConfiguration &settings);
    bool is_settings_Set() const;
    bool is_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIStringValueObject> m_build_clouds;
    bool m_build_clouds_isSet;
    bool m_build_clouds_isValid;

    QString m_default_image_name;
    bool m_default_image_name_isSet;
    bool m_default_image_name_isValid;

    QList<OAIBuildWorkerImage> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    OAIProject m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    OAIProjectWithConfiguration m_settings;
    bool m_settings_isSet;
    bool m_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjectSettingsResults)

#endif // OAIProjectSettingsResults_H
