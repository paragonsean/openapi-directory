/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotificationSettings.h
 *
 * This type is the union of the settings types for each of the various notification types supported by the API.  The properties correspond to the following notification types:  #### All Types - onBuildSuccess - onBuildFailure - onBuildStatusChanged  #### Campfire - account - authToken - room - template  #### Email - subjectTemplate - bodyTemplate - recipients - recipientsValue  #### GitHubPullRequest - authToken - template  #### HipChat - authToken - from - room - template - serverUrl  #### Slack - incomingWebhookUrl - authToken - channel - template  #### Webhook - method - url - headers - headersValue - addCustomRequestBody - customRequestBodyContentType - customRequestBody  #### VSOTeamRoom - vsoAccount - username - password - room - template 
 */

#ifndef OAINotificationSettings_H
#define OAINotificationSettings_H

#include <QJsonObject>

#include "OAIHttpMethodRestricted.h"
#include "OAINotificationSettingsType.h"
#include "OAIStoredNameValue.h"
#include "OAIStoredValue.h"
#include "OAIStringValueObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStoredValue;
class OAIStoredNameValue;
class OAIStringValueObject;

class OAINotificationSettings : public OAIObject {
public:
    OAINotificationSettings();
    OAINotificationSettings(QString json);
    ~OAINotificationSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAINotificationSettingsType getType() const;
    void setType(const OAINotificationSettingsType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getAccount() const;
    void setAccount(const QString &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    bool isAddCustomRequestBody() const;
    void setAddCustomRequestBody(const bool &add_custom_request_body);
    bool is_add_custom_request_body_Set() const;
    bool is_add_custom_request_body_Valid() const;

    OAIStoredValue getAuthToken() const;
    void setAuthToken(const OAIStoredValue &auth_token);
    bool is_auth_token_Set() const;
    bool is_auth_token_Valid() const;

    QString getBodyTemplate() const;
    void setBodyTemplate(const QString &body_template);
    bool is_body_template_Set() const;
    bool is_body_template_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QString getCustomRequestBody() const;
    void setCustomRequestBody(const QString &custom_request_body);
    bool is_custom_request_body_Set() const;
    bool is_custom_request_body_Valid() const;

    QString getCustomRequestBodyContentType() const;
    void setCustomRequestBodyContentType(const QString &custom_request_body_content_type);
    bool is_custom_request_body_content_type_Set() const;
    bool is_custom_request_body_content_type_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QList<OAIStoredNameValue> getHeaders() const;
    void setHeaders(const QList<OAIStoredNameValue> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QString getHeadersValue() const;
    void setHeadersValue(const QString &headers_value);
    bool is_headers_value_Set() const;
    bool is_headers_value_Valid() const;

    QString getIncomingWebhookUrl() const;
    void setIncomingWebhookUrl(const QString &incoming_webhook_url);
    bool is_incoming_webhook_url_Set() const;
    bool is_incoming_webhook_url_Valid() const;

    OAIHttpMethodRestricted getMethod() const;
    void setMethod(const OAIHttpMethodRestricted &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    bool isOnBuildFailure() const;
    void setOnBuildFailure(const bool &on_build_failure);
    bool is_on_build_failure_Set() const;
    bool is_on_build_failure_Valid() const;

    bool isOnBuildStatusChanged() const;
    void setOnBuildStatusChanged(const bool &on_build_status_changed);
    bool is_on_build_status_changed_Set() const;
    bool is_on_build_status_changed_Valid() const;

    bool isOnBuildSuccess() const;
    void setOnBuildSuccess(const bool &on_build_success);
    bool is_on_build_success_Set() const;
    bool is_on_build_success_Valid() const;

    OAIStoredValue getPassword() const;
    void setPassword(const OAIStoredValue &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QList<OAIStringValueObject> getRecipients() const;
    void setRecipients(const QList<OAIStringValueObject> &recipients);
    bool is_recipients_Set() const;
    bool is_recipients_Valid() const;

    QString getRecipientsValue() const;
    void setRecipientsValue(const QString &recipients_value);
    bool is_recipients_value_Set() const;
    bool is_recipients_value_Valid() const;

    QString getRoom() const;
    void setRoom(const QString &room);
    bool is_room_Set() const;
    bool is_room_Valid() const;

    QString getServerUrl() const;
    void setServerUrl(const QString &server_url);
    bool is_server_url_Set() const;
    bool is_server_url_Valid() const;

    QString getSubjectTemplate() const;
    void setSubjectTemplate(const QString &subject_template);
    bool is_subject_template_Set() const;
    bool is_subject_template_Valid() const;

    QString getRTemplate() const;
    void setRTemplate(const QString &r_template);
    bool is_r_template_Set() const;
    bool is_r_template_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    QString getVsoAccount() const;
    void setVsoAccount(const QString &vso_account);
    bool is_vso_account_Set() const;
    bool is_vso_account_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAINotificationSettingsType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    bool m_add_custom_request_body;
    bool m_add_custom_request_body_isSet;
    bool m_add_custom_request_body_isValid;

    OAIStoredValue m_auth_token;
    bool m_auth_token_isSet;
    bool m_auth_token_isValid;

    QString m_body_template;
    bool m_body_template_isSet;
    bool m_body_template_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QString m_custom_request_body;
    bool m_custom_request_body_isSet;
    bool m_custom_request_body_isValid;

    QString m_custom_request_body_content_type;
    bool m_custom_request_body_content_type_isSet;
    bool m_custom_request_body_content_type_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QList<OAIStoredNameValue> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QString m_headers_value;
    bool m_headers_value_isSet;
    bool m_headers_value_isValid;

    QString m_incoming_webhook_url;
    bool m_incoming_webhook_url_isSet;
    bool m_incoming_webhook_url_isValid;

    OAIHttpMethodRestricted m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    bool m_on_build_failure;
    bool m_on_build_failure_isSet;
    bool m_on_build_failure_isValid;

    bool m_on_build_status_changed;
    bool m_on_build_status_changed_isSet;
    bool m_on_build_status_changed_isValid;

    bool m_on_build_success;
    bool m_on_build_success_isSet;
    bool m_on_build_success_isValid;

    OAIStoredValue m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QList<OAIStringValueObject> m_recipients;
    bool m_recipients_isSet;
    bool m_recipients_isValid;

    QString m_recipients_value;
    bool m_recipients_value_isSet;
    bool m_recipients_value_isValid;

    QString m_room;
    bool m_room_isSet;
    bool m_room_isValid;

    QString m_server_url;
    bool m_server_url_isSet;
    bool m_server_url_isValid;

    QString m_subject_template;
    bool m_subject_template_isSet;
    bool m_subject_template_isValid;

    QString m_r_template;
    bool m_r_template_isSet;
    bool m_r_template_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;

    QString m_vso_account;
    bool m_vso_account_isSet;
    bool m_vso_account_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotificationSettings)

#endif // OAINotificationSettings_H
