/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoleWithGroups.h
 *
 * 
 */

#ifndef OAIRoleWithGroups_H
#define OAIRoleWithGroups_H

#include <QJsonObject>

#include "OAIGroupPermissions.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroupPermissions;

class OAIRoleWithGroups : public OAIObject {
public:
    OAIRoleWithGroups();
    OAIRoleWithGroups(QString json);
    ~OAIRoleWithGroups() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QDateTime getUpdated() const;
    void setUpdated(const QDateTime &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    bool isIsSystem() const;
    void setIsSystem(const bool &is_system);
    bool is_is_system_Set() const;
    bool is_is_system_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getRoleId() const;
    void setRoleId(const qint32 &role_id);
    bool is_role_id_Set() const;
    bool is_role_id_Valid() const;

    QList<OAIGroupPermissions> getGroups() const;
    void setGroups(const QList<OAIGroupPermissions> &groups);
    bool is_groups_Set() const;
    bool is_groups_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QDateTime m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    bool m_is_system;
    bool m_is_system_isSet;
    bool m_is_system_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_role_id;
    bool m_role_id_isSet;
    bool m_role_id_isValid;

    QList<OAIGroupPermissions> m_groups;
    bool m_groups_isSet;
    bool m_groups_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoleWithGroups)

#endif // OAIRoleWithGroups_H
