/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeploymentProvider.h
 *
 * 
 */

#ifndef OAIDeploymentProvider_H
#define OAIDeploymentProvider_H

#include <QJsonObject>

#include "OAIDeploymentProviderType.h"
#include "OAIStoredNameValue.h"
#include "OAIStringValueObject.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStringValueObject;
class OAIStoredNameValue;

class OAIDeploymentProvider : public OAIObject {
public:
    OAIDeploymentProvider();
    OAIDeploymentProvider(QString json);
    ~OAIDeploymentProvider() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIStringValueObject> getOnBranch() const;
    void setOnBranch(const QList<OAIStringValueObject> &on_branch);
    bool is_on_branch_Set() const;
    bool is_on_branch_Valid() const;

    QList<OAIStoredNameValue> getOnEnvironmentVariables() const;
    void setOnEnvironmentVariables(const QList<OAIStoredNameValue> &on_environment_variables);
    bool is_on_environment_variables_Set() const;
    bool is_on_environment_variables_Valid() const;

    OAIDeploymentProviderType getProvider() const;
    void setProvider(const OAIDeploymentProviderType &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QList<OAIStoredNameValue> getProviderSettings() const;
    void setProviderSettings(const QList<OAIStoredNameValue> &provider_settings);
    bool is_provider_settings_Set() const;
    bool is_provider_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIStringValueObject> m_on_branch;
    bool m_on_branch_isSet;
    bool m_on_branch_isValid;

    QList<OAIStoredNameValue> m_on_environment_variables;
    bool m_on_environment_variables_isSet;
    bool m_on_environment_variables_isValid;

    OAIDeploymentProviderType m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QList<OAIStoredNameValue> m_provider_settings;
    bool m_provider_settings_isSet;
    bool m_provider_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeploymentProvider)

#endif // OAIDeploymentProvider_H
