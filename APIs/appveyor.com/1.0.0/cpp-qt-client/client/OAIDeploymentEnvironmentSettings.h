/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeploymentEnvironmentSettings.h
 *
 * 
 */

#ifndef OAIDeploymentEnvironmentSettings_H
#define OAIDeploymentEnvironmentSettings_H

#include <QJsonObject>

#include "OAINotificationProviderSettings.h"
#include "OAIStoredNameValue.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStoredNameValue;
class OAINotificationProviderSettings;

class OAIDeploymentEnvironmentSettings : public OAIObject {
public:
    OAIDeploymentEnvironmentSettings();
    OAIDeploymentEnvironmentSettings(QString json);
    ~OAIDeploymentEnvironmentSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIStoredNameValue> getEnvironmentVariables() const;
    void setEnvironmentVariables(const QList<OAIStoredNameValue> &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    QList<OAINotificationProviderSettings> getNotifications() const;
    void setNotifications(const QList<OAINotificationProviderSettings> &notifications);
    bool is_notifications_Set() const;
    bool is_notifications_Valid() const;

    QList<OAIStoredNameValue> getProviderSettings() const;
    void setProviderSettings(const QList<OAIStoredNameValue> &provider_settings);
    bool is_provider_settings_Set() const;
    bool is_provider_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIStoredNameValue> m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;

    QList<OAINotificationProviderSettings> m_notifications;
    bool m_notifications_isSet;
    bool m_notifications_isValid;

    QList<OAIStoredNameValue> m_provider_settings;
    bool m_provider_settings_isSet;
    bool m_provider_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeploymentEnvironmentSettings)

#endif // OAIDeploymentEnvironmentSettings_H
