/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISessionModel.h
 *
 * 
 */

#ifndef OAISessionModel_H
#define OAISessionModel_H

#include <QJsonObject>

#include "OAISessionUserAccountModel.h"
#include "OAISessionUserModel.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISessionUserAccountModel;
class OAISessionUserModel;

class OAISessionModel : public OAIObject {
public:
    OAISessionModel();
    OAISessionModel(QString json);
    ~OAISessionModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISessionUserAccountModel> getAccounts() const;
    void setAccounts(const QList<OAISessionUserAccountModel> &accounts);
    bool is_accounts_Set() const;
    bool is_accounts_Valid() const;

    bool isSetupRequired() const;
    void setSetupRequired(const bool &setup_required);
    bool is_setup_required_Set() const;
    bool is_setup_required_Valid() const;

    bool isTwoFactorAuthRequired() const;
    void setTwoFactorAuthRequired(const bool &two_factor_auth_required);
    bool is_two_factor_auth_required_Set() const;
    bool is_two_factor_auth_required_Valid() const;

    OAISessionUserModel getUser() const;
    void setUser(const OAISessionUserModel &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISessionUserAccountModel> m_accounts;
    bool m_accounts_isSet;
    bool m_accounts_isValid;

    bool m_setup_required;
    bool m_setup_required_isSet;
    bool m_setup_required_isValid;

    bool m_two_factor_auth_required;
    bool m_two_factor_auth_required_isSet;
    bool m_two_factor_auth_required_isValid;

    OAISessionUserModel m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISessionModel)

#endif // OAISessionModel_H
