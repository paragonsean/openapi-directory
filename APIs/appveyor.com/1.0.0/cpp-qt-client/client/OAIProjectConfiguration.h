/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjectConfiguration.h
 *
 * 
 */

#ifndef OAIProjectConfiguration_H
#define OAIProjectConfiguration_H

#include <QJsonObject>

#include "OAIArtifact.h"
#include "OAIBuildMode.h"
#include "OAIBuild_worker_image_inner.h"
#include "OAIDeployMode.h"
#include "OAIDeploymentProvider.h"
#include "OAIHostEntry.h"
#include "OAIMSBuildVerbosity.h"
#include "OAINotificationProviderSettings.h"
#include "OAIOS_services_to_start_during_the_build_process_inner.h"
#include "OAIProjectBranchesMode.h"
#include "OAIProjectConfiguration_platform_inner.h"
#include "OAIProjectConfiguration_testCategoriesMatrix_inner.h"
#include "OAIScript.h"
#include "OAIStoredNameValue.h"
#include "OAIStoredNameValueMatrix.h"
#include "OAIStringValueObject.h"
#include "OAITestMode.h"
#include "OAIUnknownType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScript;
class OAIArtifact;
class OAIStringValueObject;
class OAIDeploymentProvider;
class OAIStoredNameValue;
class OAIStoredNameValueMatrix;
class OAIHostEntry;
class OAINotificationProviderSettings;
class OAIBuild_worker_image_inner;
class OAIProjectConfiguration_platform_inner;
class OAIOS_services_to_start_during_the_build_process_inner;
class OAIProjectConfiguration_testCategoriesMatrix_inner;

class OAIProjectConfiguration : public OAIObject {
public:
    OAIProjectConfiguration();
    OAIProjectConfiguration(QString json);
    ~OAIProjectConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIScript> getAfterBuildScripts() const;
    void setAfterBuildScripts(const QList<OAIScript> &after_build_scripts);
    bool is_after_build_scripts_Set() const;
    bool is_after_build_scripts_Valid() const;

    QList<OAIScript> getAfterDeployScripts() const;
    void setAfterDeployScripts(const QList<OAIScript> &after_deploy_scripts);
    bool is_after_deploy_scripts_Set() const;
    bool is_after_deploy_scripts_Valid() const;

    QList<OAIScript> getAfterTestScripts() const;
    void setAfterTestScripts(const QList<OAIScript> &after_test_scripts);
    bool is_after_test_scripts_Set() const;
    bool is_after_test_scripts_Valid() const;

    QList<OAIArtifact> getArtifacts() const;
    void setArtifacts(const QList<OAIArtifact> &artifacts);
    bool is_artifacts_Set() const;
    bool is_artifacts_Valid() const;

    QString getAssemblyFileVersionFormat() const;
    void setAssemblyFileVersionFormat(const QString &assembly_file_version_format);
    bool is_assembly_file_version_format_Set() const;
    bool is_assembly_file_version_format_Valid() const;

    QString getAssemblyInfoFile() const;
    void setAssemblyInfoFile(const QString &assembly_info_file);
    bool is_assembly_info_file_Set() const;
    bool is_assembly_info_file_Valid() const;

    QString getAssemblyInformationalVersionFormat() const;
    void setAssemblyInformationalVersionFormat(const QString &assembly_informational_version_format);
    bool is_assembly_informational_version_format_Set() const;
    bool is_assembly_informational_version_format_Valid() const;

    QString getAssemblyVersionFormat() const;
    void setAssemblyVersionFormat(const QString &assembly_version_format);
    bool is_assembly_version_format_Set() const;
    bool is_assembly_version_format_Valid() const;

    QList<OAIScript> getBeforeBuildScripts() const;
    void setBeforeBuildScripts(const QList<OAIScript> &before_build_scripts);
    bool is_before_build_scripts_Set() const;
    bool is_before_build_scripts_Valid() const;

    QList<OAIScript> getBeforeDeployScripts() const;
    void setBeforeDeployScripts(const QList<OAIScript> &before_deploy_scripts);
    bool is_before_deploy_scripts_Set() const;
    bool is_before_deploy_scripts_Valid() const;

    QList<OAIScript> getBeforePackageScripts() const;
    void setBeforePackageScripts(const QList<OAIScript> &before_package_scripts);
    bool is_before_package_scripts_Set() const;
    bool is_before_package_scripts_Valid() const;

    QList<OAIScript> getBeforeTestScripts() const;
    void setBeforeTestScripts(const QList<OAIScript> &before_test_scripts);
    bool is_before_test_scripts_Set() const;
    bool is_before_test_scripts_Valid() const;

    OAIProjectBranchesMode getBranchesMode() const;
    void setBranchesMode(const OAIProjectBranchesMode &branches_mode);
    bool is_branches_mode_Set() const;
    bool is_branches_mode_Valid() const;

    QList<OAIStringValueObject> getBuildCloud() const;
    void setBuildCloud(const QList<OAIStringValueObject> &build_cloud);
    bool is_build_cloud_Set() const;
    bool is_build_cloud_Valid() const;

    OAIBuildMode getBuildMode() const;
    void setBuildMode(const OAIBuildMode &build_mode);
    bool is_build_mode_Set() const;
    bool is_build_mode_Valid() const;

    QList<OAIScript> getBuildScripts() const;
    void setBuildScripts(const QList<OAIScript> &build_scripts);
    bool is_build_scripts_Set() const;
    bool is_build_scripts_Valid() const;

    QList<OAIStringValueObject> getCacheEntries() const;
    void setCacheEntries(const QList<OAIStringValueObject> &cache_entries);
    bool is_cache_entries_Set() const;
    bool is_cache_entries_Valid() const;

    qint32 getCloneDepth() const;
    void setCloneDepth(const qint32 &clone_depth);
    bool is_clone_depth_Set() const;
    bool is_clone_depth_Valid() const;

    QString getCloneFolder() const;
    void setCloneFolder(const QString &clone_folder);
    bool is_clone_folder_Set() const;
    bool is_clone_folder_Valid() const;

    QList<OAIScript> getCloneScripts() const;
    void setCloneScripts(const QList<OAIScript> &clone_scripts);
    bool is_clone_scripts_Set() const;
    bool is_clone_scripts_Valid() const;

    QList<OAIStringValueObject> getConfiguration() const;
    void setConfiguration(const QList<OAIStringValueObject> &configuration);
    bool is_configuration_Set() const;
    bool is_configuration_Valid() const;

    bool isConfigureNuGetAccountSource() const;
    void setConfigureNuGetAccountSource(const bool &configure_nu_get_account_source);
    bool is_configure_nu_get_account_source_Set() const;
    bool is_configure_nu_get_account_source_Valid() const;

    bool isConfigureNuGetProjectSource() const;
    void setConfigureNuGetProjectSource(const bool &configure_nu_get_project_source);
    bool is_configure_nu_get_project_source_Set() const;
    bool is_configure_nu_get_project_source_Valid() const;

    OAIDeployMode getDeployMode() const;
    void setDeployMode(const OAIDeployMode &deploy_mode);
    bool is_deploy_mode_Set() const;
    bool is_deploy_mode_Valid() const;

    QList<OAIScript> getDeployScripts() const;
    void setDeployScripts(const QList<OAIScript> &deploy_scripts);
    bool is_deploy_scripts_Set() const;
    bool is_deploy_scripts_Valid() const;

    QList<OAIDeploymentProvider> getDeployments() const;
    void setDeployments(const QList<OAIDeploymentProvider> &deployments);
    bool is_deployments_Set() const;
    bool is_deployments_Valid() const;

    bool isDisableNuGetPublishForOctopusPackages() const;
    void setDisableNuGetPublishForOctopusPackages(const bool &disable_nu_get_publish_for_octopus_packages);
    bool is_disable_nu_get_publish_for_octopus_packages_Set() const;
    bool is_disable_nu_get_publish_for_octopus_packages_Valid() const;

    bool isDisableNuGetPublishOnPullRequests() const;
    void setDisableNuGetPublishOnPullRequests(const bool &disable_nu_get_publish_on_pull_requests);
    bool is_disable_nu_get_publish_on_pull_requests_Set() const;
    bool is_disable_nu_get_publish_on_pull_requests_Valid() const;

    bool isDoNotIncrementBuildNumberOnPullRequests() const;
    void setDoNotIncrementBuildNumberOnPullRequests(const bool &do_not_increment_build_number_on_pull_requests);
    bool is_do_not_increment_build_number_on_pull_requests_Set() const;
    bool is_do_not_increment_build_number_on_pull_requests_Valid() const;

    QString getDotnetCsprojAssemblyVersionFormat() const;
    void setDotnetCsprojAssemblyVersionFormat(const QString &dotnet_csproj_assembly_version_format);
    bool is_dotnet_csproj_assembly_version_format_Set() const;
    bool is_dotnet_csproj_assembly_version_format_Valid() const;

    QString getDotnetCsprojFile() const;
    void setDotnetCsprojFile(const QString &dotnet_csproj_file);
    bool is_dotnet_csproj_file_Set() const;
    bool is_dotnet_csproj_file_Valid() const;

    QString getDotnetCsprojFileVersionFormat() const;
    void setDotnetCsprojFileVersionFormat(const QString &dotnet_csproj_file_version_format);
    bool is_dotnet_csproj_file_version_format_Set() const;
    bool is_dotnet_csproj_file_version_format_Valid() const;

    QString getDotnetCsprojInformationalVersionFormat() const;
    void setDotnetCsprojInformationalVersionFormat(const QString &dotnet_csproj_informational_version_format);
    bool is_dotnet_csproj_informational_version_format_Set() const;
    bool is_dotnet_csproj_informational_version_format_Valid() const;

    QString getDotnetCsprojPackageVersionFormat() const;
    void setDotnetCsprojPackageVersionFormat(const QString &dotnet_csproj_package_version_format);
    bool is_dotnet_csproj_package_version_format_Set() const;
    bool is_dotnet_csproj_package_version_format_Valid() const;

    QString getDotnetCsprojVersionFormat() const;
    void setDotnetCsprojVersionFormat(const QString &dotnet_csproj_version_format);
    bool is_dotnet_csproj_version_format_Set() const;
    bool is_dotnet_csproj_version_format_Valid() const;

    QList<OAIStoredNameValue> getEnvironmentVariables() const;
    void setEnvironmentVariables(const QList<OAIStoredNameValue> &environment_variables);
    bool is_environment_variables_Set() const;
    bool is_environment_variables_Valid() const;

    QList<OAIStoredNameValueMatrix> getEnvironmentVariablesMatrix() const;
    void setEnvironmentVariablesMatrix(const QList<OAIStoredNameValueMatrix> &environment_variables_matrix);
    bool is_environment_variables_matrix_Set() const;
    bool is_environment_variables_matrix_Valid() const;

    QList<OAIStringValueObject> getExcludeBranches() const;
    void setExcludeBranches(const QList<OAIStringValueObject> &exclude_branches);
    bool is_exclude_branches_Set() const;
    bool is_exclude_branches_Valid() const;

    bool isForceHttpsClone() const;
    void setForceHttpsClone(const bool &force_https_clone);
    bool is_force_https_clone_Set() const;
    bool is_force_https_clone_Valid() const;

    QList<OAIHostEntry> getHostsEntries() const;
    void setHostsEntries(const QList<OAIHostEntry> &hosts_entries);
    bool is_hosts_entries_Set() const;
    bool is_hosts_entries_Valid() const;

    QList<OAIScript> getHotFixScripts() const;
    void setHotFixScripts(const QList<OAIScript> &hot_fix_scripts);
    bool is_hot_fix_scripts_Set() const;
    bool is_hot_fix_scripts_Valid() const;

    QList<OAIStringValueObject> getIncludeBranches() const;
    void setIncludeBranches(const QList<OAIStringValueObject> &include_branches);
    bool is_include_branches_Set() const;
    bool is_include_branches_Valid() const;

    bool isIncludeNuGetReferences() const;
    void setIncludeNuGetReferences(const bool &include_nu_get_references);
    bool is_include_nu_get_references_Set() const;
    bool is_include_nu_get_references_Valid() const;

    QList<OAIScript> getInitScripts() const;
    void setInitScripts(const QList<OAIScript> &init_scripts);
    bool is_init_scripts_Set() const;
    bool is_init_scripts_Valid() const;

    QList<OAIScript> getInstallScripts() const;
    void setInstallScripts(const QList<OAIScript> &install_scripts);
    bool is_install_scripts_Set() const;
    bool is_install_scripts_Valid() const;

    QList<OAIStoredNameValueMatrix> getMatrixAllowFailures() const;
    void setMatrixAllowFailures(const QList<OAIStoredNameValueMatrix> &matrix_allow_failures);
    bool is_matrix_allow_failures_Set() const;
    bool is_matrix_allow_failures_Valid() const;

    QList<OAIStoredNameValueMatrix> getMatrixExcept() const;
    void setMatrixExcept(const QList<OAIStoredNameValueMatrix> &matrix_except);
    bool is_matrix_except_Set() const;
    bool is_matrix_except_Valid() const;

    QList<OAIStoredNameValueMatrix> getMatrixExclude() const;
    void setMatrixExclude(const QList<OAIStoredNameValueMatrix> &matrix_exclude);
    bool is_matrix_exclude_Set() const;
    bool is_matrix_exclude_Valid() const;

    bool isMatrixFastFinish() const;
    void setMatrixFastFinish(const bool &matrix_fast_finish);
    bool is_matrix_fast_finish_Set() const;
    bool is_matrix_fast_finish_Valid() const;

    QList<OAIStoredNameValueMatrix> getMatrixOnly() const;
    void setMatrixOnly(const QList<OAIStoredNameValueMatrix> &matrix_only);
    bool is_matrix_only_Set() const;
    bool is_matrix_only_Valid() const;

    qint32 getMaxJobs() const;
    void setMaxJobs(const qint32 &max_jobs);
    bool is_max_jobs_Set() const;
    bool is_max_jobs_Valid() const;

    bool isMsBuildInParallel() const;
    void setMsBuildInParallel(const bool &ms_build_in_parallel);
    bool is_ms_build_in_parallel_Set() const;
    bool is_ms_build_in_parallel_Valid() const;

    QString getMsBuildProjectFileName() const;
    void setMsBuildProjectFileName(const QString &ms_build_project_file_name);
    bool is_ms_build_project_file_name_Set() const;
    bool is_ms_build_project_file_name_Valid() const;

    OAIMSBuildVerbosity getMsBuildVerbosity() const;
    void setMsBuildVerbosity(const OAIMSBuildVerbosity &ms_build_verbosity);
    bool is_ms_build_verbosity_Set() const;
    bool is_ms_build_verbosity_Valid() const;

    QList<OAINotificationProviderSettings> getNotifications() const;
    void setNotifications(const QList<OAINotificationProviderSettings> &notifications);
    bool is_notifications_Set() const;
    bool is_notifications_Valid() const;

    QList<OAIScript> getOnBuildErrorScripts() const;
    void setOnBuildErrorScripts(const QList<OAIScript> &on_build_error_scripts);
    bool is_on_build_error_scripts_Set() const;
    bool is_on_build_error_scripts_Valid() const;

    QList<OAIScript> getOnBuildFinishScripts() const;
    void setOnBuildFinishScripts(const QList<OAIScript> &on_build_finish_scripts);
    bool is_on_build_finish_scripts_Set() const;
    bool is_on_build_finish_scripts_Valid() const;

    QList<OAIScript> getOnBuildSuccessScripts() const;
    void setOnBuildSuccessScripts(const QList<OAIScript> &on_build_success_scripts);
    bool is_on_build_success_scripts_Set() const;
    bool is_on_build_success_scripts_Valid() const;

    QList<OAIStringValueObject> getOnlyCommitsFiles() const;
    void setOnlyCommitsFiles(const QList<OAIStringValueObject> &only_commits_files);
    bool is_only_commits_files_Set() const;
    bool is_only_commits_files_Valid() const;

    QList<OAIBuild_worker_image_inner> getOperatingSystem() const;
    void setOperatingSystem(const QList<OAIBuild_worker_image_inner> &operating_system);
    bool is_operating_system_Set() const;
    bool is_operating_system_Valid() const;

    bool isPackageAspNetCoreProjects() const;
    void setPackageAspNetCoreProjects(const bool &package_asp_net_core_projects);
    bool is_package_asp_net_core_projects_Set() const;
    bool is_package_asp_net_core_projects_Valid() const;

    bool isPackageAzureCloudServiceProjects() const;
    void setPackageAzureCloudServiceProjects(const bool &package_azure_cloud_service_projects);
    bool is_package_azure_cloud_service_projects_Set() const;
    bool is_package_azure_cloud_service_projects_Valid() const;

    bool isPackageDotnetConsoleProjects() const;
    void setPackageDotnetConsoleProjects(const bool &package_dotnet_console_projects);
    bool is_package_dotnet_console_projects_Set() const;
    bool is_package_dotnet_console_projects_Valid() const;

    bool isPackageNuGetProjects() const;
    void setPackageNuGetProjects(const bool &package_nu_get_projects);
    bool is_package_nu_get_projects_Set() const;
    bool is_package_nu_get_projects_Valid() const;

    bool isPackageNuGetSymbols() const;
    void setPackageNuGetSymbols(const bool &package_nu_get_symbols);
    bool is_package_nu_get_symbols_Set() const;
    bool is_package_nu_get_symbols_Valid() const;

    bool isPackageWebApplicationProjects() const;
    void setPackageWebApplicationProjects(const bool &package_web_application_projects);
    bool is_package_web_application_projects_Set() const;
    bool is_package_web_application_projects_Valid() const;

    bool isPackageWebApplicationProjectsBeanstalk() const;
    void setPackageWebApplicationProjectsBeanstalk(const bool &package_web_application_projects_beanstalk);
    bool is_package_web_application_projects_beanstalk_Set() const;
    bool is_package_web_application_projects_beanstalk_Valid() const;

    bool isPackageWebApplicationProjectsOctopus() const;
    void setPackageWebApplicationProjectsOctopus(const bool &package_web_application_projects_octopus);
    bool is_package_web_application_projects_octopus_Set() const;
    bool is_package_web_application_projects_octopus_Valid() const;

    bool isPackageWebApplicationProjectsXCopy() const;
    void setPackageWebApplicationProjectsXCopy(const bool &package_web_application_projects_x_copy);
    bool is_package_web_application_projects_x_copy_Set() const;
    bool is_package_web_application_projects_x_copy_Valid() const;

    bool isPatchAssemblyInfo() const;
    void setPatchAssemblyInfo(const bool &patch_assembly_info);
    bool is_patch_assembly_info_Set() const;
    bool is_patch_assembly_info_Valid() const;

    bool isPatchDotnetCsproj() const;
    void setPatchDotnetCsproj(const bool &patch_dotnet_csproj);
    bool is_patch_dotnet_csproj_Set() const;
    bool is_patch_dotnet_csproj_Valid() const;

    QList<OAIProjectConfiguration_platform_inner> getPlatform() const;
    void setPlatform(const QList<OAIProjectConfiguration_platform_inner> &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    QList<OAIOS_services_to_start_during_the_build_process_inner> getServices() const;
    void setServices(const QList<OAIOS_services_to_start_during_the_build_process_inner> &services);
    bool is_services_Set() const;
    bool is_services_Valid() const;

    bool isShallowClone() const;
    void setShallowClone(const bool &shallow_clone);
    bool is_shallow_clone_Set() const;
    bool is_shallow_clone_Valid() const;

    bool isSkipBranchWithPullRequests() const;
    void setSkipBranchWithPullRequests(const bool &skip_branch_with_pull_requests);
    bool is_skip_branch_with_pull_requests_Set() const;
    bool is_skip_branch_with_pull_requests_Valid() const;

    QList<OAIStringValueObject> getSkipCommitsFiles() const;
    void setSkipCommitsFiles(const QList<OAIStringValueObject> &skip_commits_files);
    bool is_skip_commits_files_Set() const;
    bool is_skip_commits_files_Valid() const;

    bool isSkipNonTags() const;
    void setSkipNonTags(const bool &skip_non_tags);
    bool is_skip_non_tags_Set() const;
    bool is_skip_non_tags_Valid() const;

    bool isSkipTags() const;
    void setSkipTags(const bool &skip_tags);
    bool is_skip_tags_Set() const;
    bool is_skip_tags_Valid() const;

    QList<OAIUnknownType> getStacks() const;
    void setStacks(const QList<OAIUnknownType> &stacks);
    bool is_stacks_Set() const;
    bool is_stacks_Valid() const;

    QList<OAIStringValueObject> getTestAssemblies() const;
    void setTestAssemblies(const QList<OAIStringValueObject> &test_assemblies);
    bool is_test_assemblies_Set() const;
    bool is_test_assemblies_Valid() const;

    QList<OAIStringValueObject> getTestCategories() const;
    void setTestCategories(const QList<OAIStringValueObject> &test_categories);
    bool is_test_categories_Set() const;
    bool is_test_categories_Valid() const;

    QList<OAIProjectConfiguration_testCategoriesMatrix_inner> getTestCategoriesMatrix() const;
    void setTestCategoriesMatrix(const QList<OAIProjectConfiguration_testCategoriesMatrix_inner> &test_categories_matrix);
    bool is_test_categories_matrix_Set() const;
    bool is_test_categories_matrix_Valid() const;

    QString getTestCategoriesMode() const;
    void setTestCategoriesMode(const QString &test_categories_mode);
    bool is_test_categories_mode_Set() const;
    bool is_test_categories_mode_Valid() const;

    OAITestMode getTestMode() const;
    void setTestMode(const OAITestMode &test_mode);
    bool is_test_mode_Set() const;
    bool is_test_mode_Valid() const;

    QList<OAIScript> getTestScripts() const;
    void setTestScripts(const QList<OAIScript> &test_scripts);
    bool is_test_scripts_Set() const;
    bool is_test_scripts_Valid() const;

    bool isXamarinRegisterAndroidProduct() const;
    void setXamarinRegisterAndroidProduct(const bool &xamarin_register_android_product);
    bool is_xamarin_register_android_product_Set() const;
    bool is_xamarin_register_android_product_Valid() const;

    bool isXamarinRegisterIosProduct() const;
    void setXamarinRegisterIosProduct(const bool &xamarin_register_ios_product);
    bool is_xamarin_register_ios_product_Set() const;
    bool is_xamarin_register_ios_product_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIScript> m_after_build_scripts;
    bool m_after_build_scripts_isSet;
    bool m_after_build_scripts_isValid;

    QList<OAIScript> m_after_deploy_scripts;
    bool m_after_deploy_scripts_isSet;
    bool m_after_deploy_scripts_isValid;

    QList<OAIScript> m_after_test_scripts;
    bool m_after_test_scripts_isSet;
    bool m_after_test_scripts_isValid;

    QList<OAIArtifact> m_artifacts;
    bool m_artifacts_isSet;
    bool m_artifacts_isValid;

    QString m_assembly_file_version_format;
    bool m_assembly_file_version_format_isSet;
    bool m_assembly_file_version_format_isValid;

    QString m_assembly_info_file;
    bool m_assembly_info_file_isSet;
    bool m_assembly_info_file_isValid;

    QString m_assembly_informational_version_format;
    bool m_assembly_informational_version_format_isSet;
    bool m_assembly_informational_version_format_isValid;

    QString m_assembly_version_format;
    bool m_assembly_version_format_isSet;
    bool m_assembly_version_format_isValid;

    QList<OAIScript> m_before_build_scripts;
    bool m_before_build_scripts_isSet;
    bool m_before_build_scripts_isValid;

    QList<OAIScript> m_before_deploy_scripts;
    bool m_before_deploy_scripts_isSet;
    bool m_before_deploy_scripts_isValid;

    QList<OAIScript> m_before_package_scripts;
    bool m_before_package_scripts_isSet;
    bool m_before_package_scripts_isValid;

    QList<OAIScript> m_before_test_scripts;
    bool m_before_test_scripts_isSet;
    bool m_before_test_scripts_isValid;

    OAIProjectBranchesMode m_branches_mode;
    bool m_branches_mode_isSet;
    bool m_branches_mode_isValid;

    QList<OAIStringValueObject> m_build_cloud;
    bool m_build_cloud_isSet;
    bool m_build_cloud_isValid;

    OAIBuildMode m_build_mode;
    bool m_build_mode_isSet;
    bool m_build_mode_isValid;

    QList<OAIScript> m_build_scripts;
    bool m_build_scripts_isSet;
    bool m_build_scripts_isValid;

    QList<OAIStringValueObject> m_cache_entries;
    bool m_cache_entries_isSet;
    bool m_cache_entries_isValid;

    qint32 m_clone_depth;
    bool m_clone_depth_isSet;
    bool m_clone_depth_isValid;

    QString m_clone_folder;
    bool m_clone_folder_isSet;
    bool m_clone_folder_isValid;

    QList<OAIScript> m_clone_scripts;
    bool m_clone_scripts_isSet;
    bool m_clone_scripts_isValid;

    QList<OAIStringValueObject> m_configuration;
    bool m_configuration_isSet;
    bool m_configuration_isValid;

    bool m_configure_nu_get_account_source;
    bool m_configure_nu_get_account_source_isSet;
    bool m_configure_nu_get_account_source_isValid;

    bool m_configure_nu_get_project_source;
    bool m_configure_nu_get_project_source_isSet;
    bool m_configure_nu_get_project_source_isValid;

    OAIDeployMode m_deploy_mode;
    bool m_deploy_mode_isSet;
    bool m_deploy_mode_isValid;

    QList<OAIScript> m_deploy_scripts;
    bool m_deploy_scripts_isSet;
    bool m_deploy_scripts_isValid;

    QList<OAIDeploymentProvider> m_deployments;
    bool m_deployments_isSet;
    bool m_deployments_isValid;

    bool m_disable_nu_get_publish_for_octopus_packages;
    bool m_disable_nu_get_publish_for_octopus_packages_isSet;
    bool m_disable_nu_get_publish_for_octopus_packages_isValid;

    bool m_disable_nu_get_publish_on_pull_requests;
    bool m_disable_nu_get_publish_on_pull_requests_isSet;
    bool m_disable_nu_get_publish_on_pull_requests_isValid;

    bool m_do_not_increment_build_number_on_pull_requests;
    bool m_do_not_increment_build_number_on_pull_requests_isSet;
    bool m_do_not_increment_build_number_on_pull_requests_isValid;

    QString m_dotnet_csproj_assembly_version_format;
    bool m_dotnet_csproj_assembly_version_format_isSet;
    bool m_dotnet_csproj_assembly_version_format_isValid;

    QString m_dotnet_csproj_file;
    bool m_dotnet_csproj_file_isSet;
    bool m_dotnet_csproj_file_isValid;

    QString m_dotnet_csproj_file_version_format;
    bool m_dotnet_csproj_file_version_format_isSet;
    bool m_dotnet_csproj_file_version_format_isValid;

    QString m_dotnet_csproj_informational_version_format;
    bool m_dotnet_csproj_informational_version_format_isSet;
    bool m_dotnet_csproj_informational_version_format_isValid;

    QString m_dotnet_csproj_package_version_format;
    bool m_dotnet_csproj_package_version_format_isSet;
    bool m_dotnet_csproj_package_version_format_isValid;

    QString m_dotnet_csproj_version_format;
    bool m_dotnet_csproj_version_format_isSet;
    bool m_dotnet_csproj_version_format_isValid;

    QList<OAIStoredNameValue> m_environment_variables;
    bool m_environment_variables_isSet;
    bool m_environment_variables_isValid;

    QList<OAIStoredNameValueMatrix> m_environment_variables_matrix;
    bool m_environment_variables_matrix_isSet;
    bool m_environment_variables_matrix_isValid;

    QList<OAIStringValueObject> m_exclude_branches;
    bool m_exclude_branches_isSet;
    bool m_exclude_branches_isValid;

    bool m_force_https_clone;
    bool m_force_https_clone_isSet;
    bool m_force_https_clone_isValid;

    QList<OAIHostEntry> m_hosts_entries;
    bool m_hosts_entries_isSet;
    bool m_hosts_entries_isValid;

    QList<OAIScript> m_hot_fix_scripts;
    bool m_hot_fix_scripts_isSet;
    bool m_hot_fix_scripts_isValid;

    QList<OAIStringValueObject> m_include_branches;
    bool m_include_branches_isSet;
    bool m_include_branches_isValid;

    bool m_include_nu_get_references;
    bool m_include_nu_get_references_isSet;
    bool m_include_nu_get_references_isValid;

    QList<OAIScript> m_init_scripts;
    bool m_init_scripts_isSet;
    bool m_init_scripts_isValid;

    QList<OAIScript> m_install_scripts;
    bool m_install_scripts_isSet;
    bool m_install_scripts_isValid;

    QList<OAIStoredNameValueMatrix> m_matrix_allow_failures;
    bool m_matrix_allow_failures_isSet;
    bool m_matrix_allow_failures_isValid;

    QList<OAIStoredNameValueMatrix> m_matrix_except;
    bool m_matrix_except_isSet;
    bool m_matrix_except_isValid;

    QList<OAIStoredNameValueMatrix> m_matrix_exclude;
    bool m_matrix_exclude_isSet;
    bool m_matrix_exclude_isValid;

    bool m_matrix_fast_finish;
    bool m_matrix_fast_finish_isSet;
    bool m_matrix_fast_finish_isValid;

    QList<OAIStoredNameValueMatrix> m_matrix_only;
    bool m_matrix_only_isSet;
    bool m_matrix_only_isValid;

    qint32 m_max_jobs;
    bool m_max_jobs_isSet;
    bool m_max_jobs_isValid;

    bool m_ms_build_in_parallel;
    bool m_ms_build_in_parallel_isSet;
    bool m_ms_build_in_parallel_isValid;

    QString m_ms_build_project_file_name;
    bool m_ms_build_project_file_name_isSet;
    bool m_ms_build_project_file_name_isValid;

    OAIMSBuildVerbosity m_ms_build_verbosity;
    bool m_ms_build_verbosity_isSet;
    bool m_ms_build_verbosity_isValid;

    QList<OAINotificationProviderSettings> m_notifications;
    bool m_notifications_isSet;
    bool m_notifications_isValid;

    QList<OAIScript> m_on_build_error_scripts;
    bool m_on_build_error_scripts_isSet;
    bool m_on_build_error_scripts_isValid;

    QList<OAIScript> m_on_build_finish_scripts;
    bool m_on_build_finish_scripts_isSet;
    bool m_on_build_finish_scripts_isValid;

    QList<OAIScript> m_on_build_success_scripts;
    bool m_on_build_success_scripts_isSet;
    bool m_on_build_success_scripts_isValid;

    QList<OAIStringValueObject> m_only_commits_files;
    bool m_only_commits_files_isSet;
    bool m_only_commits_files_isValid;

    QList<OAIBuild_worker_image_inner> m_operating_system;
    bool m_operating_system_isSet;
    bool m_operating_system_isValid;

    bool m_package_asp_net_core_projects;
    bool m_package_asp_net_core_projects_isSet;
    bool m_package_asp_net_core_projects_isValid;

    bool m_package_azure_cloud_service_projects;
    bool m_package_azure_cloud_service_projects_isSet;
    bool m_package_azure_cloud_service_projects_isValid;

    bool m_package_dotnet_console_projects;
    bool m_package_dotnet_console_projects_isSet;
    bool m_package_dotnet_console_projects_isValid;

    bool m_package_nu_get_projects;
    bool m_package_nu_get_projects_isSet;
    bool m_package_nu_get_projects_isValid;

    bool m_package_nu_get_symbols;
    bool m_package_nu_get_symbols_isSet;
    bool m_package_nu_get_symbols_isValid;

    bool m_package_web_application_projects;
    bool m_package_web_application_projects_isSet;
    bool m_package_web_application_projects_isValid;

    bool m_package_web_application_projects_beanstalk;
    bool m_package_web_application_projects_beanstalk_isSet;
    bool m_package_web_application_projects_beanstalk_isValid;

    bool m_package_web_application_projects_octopus;
    bool m_package_web_application_projects_octopus_isSet;
    bool m_package_web_application_projects_octopus_isValid;

    bool m_package_web_application_projects_x_copy;
    bool m_package_web_application_projects_x_copy_isSet;
    bool m_package_web_application_projects_x_copy_isValid;

    bool m_patch_assembly_info;
    bool m_patch_assembly_info_isSet;
    bool m_patch_assembly_info_isValid;

    bool m_patch_dotnet_csproj;
    bool m_patch_dotnet_csproj_isSet;
    bool m_patch_dotnet_csproj_isValid;

    QList<OAIProjectConfiguration_platform_inner> m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    QList<OAIOS_services_to_start_during_the_build_process_inner> m_services;
    bool m_services_isSet;
    bool m_services_isValid;

    bool m_shallow_clone;
    bool m_shallow_clone_isSet;
    bool m_shallow_clone_isValid;

    bool m_skip_branch_with_pull_requests;
    bool m_skip_branch_with_pull_requests_isSet;
    bool m_skip_branch_with_pull_requests_isValid;

    QList<OAIStringValueObject> m_skip_commits_files;
    bool m_skip_commits_files_isSet;
    bool m_skip_commits_files_isValid;

    bool m_skip_non_tags;
    bool m_skip_non_tags_isSet;
    bool m_skip_non_tags_isValid;

    bool m_skip_tags;
    bool m_skip_tags_isSet;
    bool m_skip_tags_isValid;

    QList<OAIUnknownType> m_stacks;
    bool m_stacks_isSet;
    bool m_stacks_isValid;

    QList<OAIStringValueObject> m_test_assemblies;
    bool m_test_assemblies_isSet;
    bool m_test_assemblies_isValid;

    QList<OAIStringValueObject> m_test_categories;
    bool m_test_categories_isSet;
    bool m_test_categories_isValid;

    QList<OAIProjectConfiguration_testCategoriesMatrix_inner> m_test_categories_matrix;
    bool m_test_categories_matrix_isSet;
    bool m_test_categories_matrix_isValid;

    QString m_test_categories_mode;
    bool m_test_categories_mode_isSet;
    bool m_test_categories_mode_isValid;

    OAITestMode m_test_mode;
    bool m_test_mode_isSet;
    bool m_test_mode_isValid;

    QList<OAIScript> m_test_scripts;
    bool m_test_scripts_isSet;
    bool m_test_scripts_isValid;

    bool m_xamarin_register_android_product;
    bool m_xamarin_register_android_product_isSet;
    bool m_xamarin_register_android_product_isValid;

    bool m_xamarin_register_ios_product;
    bool m_xamarin_register_ios_product_isSet;
    bool m_xamarin_register_ios_product_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjectConfiguration)

#endif // OAIProjectConfiguration_H
