/**
 * AppVeyor REST API
 * AppVeyor is a hosted continuous integration service which runs on Microsoft Windows.  The AppVeyor REST API provides a RESTful way to interact with the AppVeyor service.  This includes managing projects, builds, deployments, and the teams that build them.  Additional help and discussion of the AppVeyor REST API is available at http://help.appveyor.com/discussions  This Swagger definition is an **unofficial** description of the AppVeyor REST API maintained at https://github.com/kevinoid/appveyor-swagger Please report any issues or suggestions for this Swagger definition at https://github.com/kevinoid/appveyor-swagger/issues/new  #### API Conventions  Fields which are missing from update operations (`PUT` requests) are typically reset to their default values.  So although most fields are not technically required, they should usually be specified in practice. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: team@appveyor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeploymentEnvironmentAddition.h
 *
 * 
 */

#ifndef OAIDeploymentEnvironmentAddition_H
#define OAIDeploymentEnvironmentAddition_H

#include <QJsonObject>

#include "OAIDeploymentEnvironmentSettings.h"
#include "OAIDeploymentProviderType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeploymentEnvironmentSettings;

class OAIDeploymentEnvironmentAddition : public OAIObject {
public:
    OAIDeploymentEnvironmentAddition();
    OAIDeploymentEnvironmentAddition(QString json);
    ~OAIDeploymentEnvironmentAddition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIDeploymentProviderType getProvider() const;
    void setProvider(const OAIDeploymentProviderType &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    OAIDeploymentEnvironmentSettings getSettings() const;
    void setSettings(const OAIDeploymentEnvironmentSettings &settings);
    bool is_settings_Set() const;
    bool is_settings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIDeploymentProviderType m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    OAIDeploymentEnvironmentSettings m_settings;
    bool m_settings_isSet;
    bool m_settings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeploymentEnvironmentAddition)

#endif // OAIDeploymentEnvironmentAddition_H
