/**
 * doqs.dev | PDF filling API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BoundingBox from './BoundingBox';
import CheckBoxField from './CheckBoxField';
import DateField from './DateField';
import Eval from './Eval';
import Font from './Font';
import HorizontalAlign from './HorizontalAlign';
import ImageAnchor from './ImageAnchor';
import ImageField from './ImageField';
import TextField from './TextField';
import VerticalAlign from './VerticalAlign';

/**
 * The FieldsInner model module.
 * @module model/FieldsInner
 * @version 1.0
 */
class FieldsInner {
    /**
     * Constructs a new <code>FieldsInner</code>.
     * @alias module:model/FieldsInner
     * @param {(module:model/CheckBoxField|module:model/DateField|module:model/ImageField|module:model/TextField)} instance The actual instance to initialize FieldsInner.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "DateField") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                DateField.validateJSON(instance); // throw an exception if no match
                // create DateField from JS object
                this.actualInstance = DateField.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into DateField
            errorMessages.push("Failed to construct DateField: " + err)
        }

        try {
            if (typeof instance === "TextField") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                TextField.validateJSON(instance); // throw an exception if no match
                // create TextField from JS object
                this.actualInstance = TextField.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into TextField
            errorMessages.push("Failed to construct TextField: " + err)
        }

        try {
            if (typeof instance === "ImageField") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ImageField.validateJSON(instance); // throw an exception if no match
                // create ImageField from JS object
                this.actualInstance = ImageField.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ImageField
            errorMessages.push("Failed to construct ImageField: " + err)
        }

        try {
            if (typeof instance === "CheckBoxField") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CheckBoxField.validateJSON(instance); // throw an exception if no match
                // create CheckBoxField from JS object
                this.actualInstance = CheckBoxField.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CheckBoxField
            errorMessages.push("Failed to construct CheckBoxField: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `FieldsInner` with oneOf schemas CheckBoxField, DateField, ImageField, TextField. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `FieldsInner` with oneOf schemas CheckBoxField, DateField, ImageField, TextField. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>FieldsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FieldsInner} obj Optional instance to populate.
     * @return {module:model/FieldsInner} The populated <code>FieldsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        return new FieldsInner(data);
    }

    /**
     * Gets the actual instance, which can be <code>CheckBoxField</code>, <code>DateField</code>, <code>ImageField</code>, <code>TextField</code>.
     * @return {(module:model/CheckBoxField|module:model/DateField|module:model/ImageField|module:model/TextField)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>CheckBoxField</code>, <code>DateField</code>, <code>ImageField</code>, <code>TextField</code>.
     * @param {(module:model/CheckBoxField|module:model/DateField|module:model/ImageField|module:model/TextField)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = FieldsInner.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of FieldsInner from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/FieldsInner} An instance of FieldsInner.
     */
    static fromJSON = function(json_string){
        return FieldsInner.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/BoundingBox} bbox
 */
FieldsInner.prototype['bbox'] = undefined;

/**
 * @member {Number} cell_count
 * @default 0
 */
FieldsInner.prototype['cell_count'] = 0;

/**
 * @member {Number} cell_offset
 * @default 0
 */
FieldsInner.prototype['cell_offset'] = 0;

/**
 * @member {Boolean} cells
 * @default false
 */
FieldsInner.prototype['cells'] = false;

/**
 * @member {String} color
 * @default 'black'
 */
FieldsInner.prototype['color'] = 'black';

/**
 * @member {module:model/Font} font
 */
FieldsInner.prototype['font'] = undefined;

/**
 * @member {Number} font_size
 * @default 10
 */
FieldsInner.prototype['font_size'] = 10;

/**
 * @member {String} format
 */
FieldsInner.prototype['format'] = undefined;

/**
 * @member {module:model/HorizontalAlign} h_align
 */
FieldsInner.prototype['h_align'] = undefined;

/**
 * @member {String} locale
 * @default 'en_US'
 */
FieldsInner.prototype['locale'] = 'en_US';

/**
 * @member {String} name
 */
FieldsInner.prototype['name'] = undefined;

/**
 * @member {Number} page
 */
FieldsInner.prototype['page'] = undefined;

/**
 * @member {Boolean} required
 * @default true
 */
FieldsInner.prototype['required'] = true;

/**
 * @member {module:model/FieldsInner.TypeEnum} type
 */
FieldsInner.prototype['type'] = undefined;

/**
 * @member {module:model/VerticalAlign} v_align
 */
FieldsInner.prototype['v_align'] = undefined;

/**
 * @member {module:model/ImageAnchor} anchor
 */
FieldsInner.prototype['anchor'] = undefined;

/**
 * @member {module:model/Eval} eval
 */
FieldsInner.prototype['eval'] = undefined;


FieldsInner.OneOf = ["CheckBoxField", "DateField", "ImageField", "TextField"];

export default FieldsInner;

