/**
 * doqs.dev | PDF filling API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PreviewModel model module.
 * @module model/PreviewModel
 * @version 1.0
 */
class PreviewModel {
    /**
     * Constructs a new <code>PreviewModel</code>.
     * @alias module:model/PreviewModel
     * @param css {String} 
     * @param data {Object} 
     * @param templateHtml {String} 
     */
    constructor(css, data, templateHtml) { 
        
        PreviewModel.initialize(this, css, data, templateHtml);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, css, data, templateHtml) { 
        obj['css'] = css;
        obj['data'] = data;
        obj['template_html'] = templateHtml;
    }

    /**
     * Constructs a <code>PreviewModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PreviewModel} obj Optional instance to populate.
     * @return {module:model/PreviewModel} The populated <code>PreviewModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PreviewModel();

            if (data.hasOwnProperty('css')) {
                obj['css'] = ApiClient.convertToType(data['css'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], Object);
            }
            if (data.hasOwnProperty('footer_html')) {
                obj['footer_html'] = ApiClient.convertToType(data['footer_html'], 'String');
            }
            if (data.hasOwnProperty('header_html')) {
                obj['header_html'] = ApiClient.convertToType(data['header_html'], 'String');
            }
            if (data.hasOwnProperty('template_html')) {
                obj['template_html'] = ApiClient.convertToType(data['template_html'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PreviewModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PreviewModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PreviewModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['css'] && !(typeof data['css'] === 'string' || data['css'] instanceof String)) {
            throw new Error("Expected the field `css` to be a primitive type in the JSON string but got " + data['css']);
        }
        // ensure the json data is a string
        if (data['footer_html'] && !(typeof data['footer_html'] === 'string' || data['footer_html'] instanceof String)) {
            throw new Error("Expected the field `footer_html` to be a primitive type in the JSON string but got " + data['footer_html']);
        }
        // ensure the json data is a string
        if (data['header_html'] && !(typeof data['header_html'] === 'string' || data['header_html'] instanceof String)) {
            throw new Error("Expected the field `header_html` to be a primitive type in the JSON string but got " + data['header_html']);
        }
        // ensure the json data is a string
        if (data['template_html'] && !(typeof data['template_html'] === 'string' || data['template_html'] instanceof String)) {
            throw new Error("Expected the field `template_html` to be a primitive type in the JSON string but got " + data['template_html']);
        }

        return true;
    }


}

PreviewModel.RequiredProperties = ["css", "data", "template_html"];

/**
 * @member {String} css
 */
PreviewModel.prototype['css'] = undefined;

/**
 * @member {Object} data
 */
PreviewModel.prototype['data'] = undefined;

/**
 * @member {String} footer_html
 */
PreviewModel.prototype['footer_html'] = undefined;

/**
 * @member {String} header_html
 */
PreviewModel.prototype['header_html'] = undefined;

/**
 * @member {String} template_html
 */
PreviewModel.prototype['template_html'] = undefined;






export default PreviewModel;

