# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OccurrenceAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agency: str=None, bank_tax: float=None, charged_agency: str=None, code: str=None, code_name: str=None, credit_date: str=None, discount_value: float=None, document_number: str=None, due_date: str=None, iof_tax: float=None, is_dda: str=None, is_payment: bool=None, is_rejected_payment: bool=None, liquidation_code: str=None, liquidation_description: str=None, mulct_value: str=None, occurrence_date: str=None, others_credits_value: float=None, our_number: str=None, payer_allegation: str=None, rebate_value: float=None, received_value: float=None, sequencial_number: float=None, title_value: float=None, wallet: str=None):
        """OccurrenceAttributes - a model defined in OpenAPI

        :param agency: The agency of this OccurrenceAttributes.
        :param bank_tax: The bank_tax of this OccurrenceAttributes.
        :param charged_agency: The charged_agency of this OccurrenceAttributes.
        :param code: The code of this OccurrenceAttributes.
        :param code_name: The code_name of this OccurrenceAttributes.
        :param credit_date: The credit_date of this OccurrenceAttributes.
        :param discount_value: The discount_value of this OccurrenceAttributes.
        :param document_number: The document_number of this OccurrenceAttributes.
        :param due_date: The due_date of this OccurrenceAttributes.
        :param iof_tax: The iof_tax of this OccurrenceAttributes.
        :param is_dda: The is_dda of this OccurrenceAttributes.
        :param is_payment: The is_payment of this OccurrenceAttributes.
        :param is_rejected_payment: The is_rejected_payment of this OccurrenceAttributes.
        :param liquidation_code: The liquidation_code of this OccurrenceAttributes.
        :param liquidation_description: The liquidation_description of this OccurrenceAttributes.
        :param mulct_value: The mulct_value of this OccurrenceAttributes.
        :param occurrence_date: The occurrence_date of this OccurrenceAttributes.
        :param others_credits_value: The others_credits_value of this OccurrenceAttributes.
        :param our_number: The our_number of this OccurrenceAttributes.
        :param payer_allegation: The payer_allegation of this OccurrenceAttributes.
        :param rebate_value: The rebate_value of this OccurrenceAttributes.
        :param received_value: The received_value of this OccurrenceAttributes.
        :param sequencial_number: The sequencial_number of this OccurrenceAttributes.
        :param title_value: The title_value of this OccurrenceAttributes.
        :param wallet: The wallet of this OccurrenceAttributes.
        """
        self.openapi_types = {
            'agency': str,
            'bank_tax': float,
            'charged_agency': str,
            'code': str,
            'code_name': str,
            'credit_date': str,
            'discount_value': float,
            'document_number': str,
            'due_date': str,
            'iof_tax': float,
            'is_dda': str,
            'is_payment': bool,
            'is_rejected_payment': bool,
            'liquidation_code': str,
            'liquidation_description': str,
            'mulct_value': str,
            'occurrence_date': str,
            'others_credits_value': float,
            'our_number': str,
            'payer_allegation': str,
            'rebate_value': float,
            'received_value': float,
            'sequencial_number': float,
            'title_value': float,
            'wallet': str
        }

        self.attribute_map = {
            'agency': 'agency',
            'bank_tax': 'bank_tax',
            'charged_agency': 'charged_agency',
            'code': 'code',
            'code_name': 'code_name',
            'credit_date': 'credit_date',
            'discount_value': 'discount_value',
            'document_number': 'document_number',
            'due_date': 'due_date',
            'iof_tax': 'iof_tax',
            'is_dda': 'is_dda',
            'is_payment': 'is_payment',
            'is_rejected_payment': 'is_rejected_payment',
            'liquidation_code': 'liquidation_code',
            'liquidation_description': 'liquidation_description',
            'mulct_value': 'mulct_value',
            'occurrence_date': 'occurrence_date',
            'others_credits_value': 'others_credits_value',
            'our_number': 'our_number',
            'payer_allegation': 'payer_allegation',
            'rebate_value': 'rebate_value',
            'received_value': 'received_value',
            'sequencial_number': 'sequencial_number',
            'title_value': 'title_value',
            'wallet': 'wallet'
        }

        self._agency = agency
        self._bank_tax = bank_tax
        self._charged_agency = charged_agency
        self._code = code
        self._code_name = code_name
        self._credit_date = credit_date
        self._discount_value = discount_value
        self._document_number = document_number
        self._due_date = due_date
        self._iof_tax = iof_tax
        self._is_dda = is_dda
        self._is_payment = is_payment
        self._is_rejected_payment = is_rejected_payment
        self._liquidation_code = liquidation_code
        self._liquidation_description = liquidation_description
        self._mulct_value = mulct_value
        self._occurrence_date = occurrence_date
        self._others_credits_value = others_credits_value
        self._our_number = our_number
        self._payer_allegation = payer_allegation
        self._rebate_value = rebate_value
        self._received_value = received_value
        self._sequencial_number = sequencial_number
        self._title_value = title_value
        self._wallet = wallet

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OccurrenceAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Occurrence_attributes of this OccurrenceAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agency(self):
        """Gets the agency of this OccurrenceAttributes.

        Retorna o número da agencia

        :return: The agency of this OccurrenceAttributes.
        :rtype: str
        """
        return self._agency

    @agency.setter
    def agency(self, agency):
        """Sets the agency of this OccurrenceAttributes.

        Retorna o número da agencia

        :param agency: The agency of this OccurrenceAttributes.
        :type agency: str
        """

        self._agency = agency

    @property
    def bank_tax(self):
        """Gets the bank_tax of this OccurrenceAttributes.

        Tarifa bancária

        :return: The bank_tax of this OccurrenceAttributes.
        :rtype: float
        """
        return self._bank_tax

    @bank_tax.setter
    def bank_tax(self, bank_tax):
        """Sets the bank_tax of this OccurrenceAttributes.

        Tarifa bancária

        :param bank_tax: The bank_tax of this OccurrenceAttributes.
        :type bank_tax: float
        """

        self._bank_tax = bank_tax

    @property
    def charged_agency(self):
        """Gets the charged_agency of this OccurrenceAttributes.

        Retorna a agencia cobradora (com o digito)

        :return: The charged_agency of this OccurrenceAttributes.
        :rtype: str
        """
        return self._charged_agency

    @charged_agency.setter
    def charged_agency(self, charged_agency):
        """Sets the charged_agency of this OccurrenceAttributes.

        Retorna a agencia cobradora (com o digito)

        :param charged_agency: The charged_agency of this OccurrenceAttributes.
        :type charged_agency: str
        """

        self._charged_agency = charged_agency

    @property
    def code(self):
        """Gets the code of this OccurrenceAttributes.

        Código de Ocorrência conforme o padrão CNAB

        :return: The code of this OccurrenceAttributes.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this OccurrenceAttributes.

        Código de Ocorrência conforme o padrão CNAB

        :param code: The code of this OccurrenceAttributes.
        :type code: str
        """

        self._code = code

    @property
    def code_name(self):
        """Gets the code_name of this OccurrenceAttributes.

        Nome do código

        :return: The code_name of this OccurrenceAttributes.
        :rtype: str
        """
        return self._code_name

    @code_name.setter
    def code_name(self, code_name):
        """Sets the code_name of this OccurrenceAttributes.

        Nome do código

        :param code_name: The code_name of this OccurrenceAttributes.
        :type code_name: str
        """

        self._code_name = code_name

    @property
    def credit_date(self):
        """Gets the credit_date of this OccurrenceAttributes.

        Retorna a data em que o dinheiro caiu na conta

        :return: The credit_date of this OccurrenceAttributes.
        :rtype: str
        """
        return self._credit_date

    @credit_date.setter
    def credit_date(self, credit_date):
        """Sets the credit_date of this OccurrenceAttributes.

        Retorna a data em que o dinheiro caiu na conta

        :param credit_date: The credit_date of this OccurrenceAttributes.
        :type credit_date: str
        """

        self._credit_date = credit_date

    @property
    def discount_value(self):
        """Gets the discount_value of this OccurrenceAttributes.

        Valor de desconto

        :return: The discount_value of this OccurrenceAttributes.
        :rtype: float
        """
        return self._discount_value

    @discount_value.setter
    def discount_value(self, discount_value):
        """Sets the discount_value of this OccurrenceAttributes.

        Valor de desconto

        :param discount_value: The discount_value of this OccurrenceAttributes.
        :type discount_value: float
        """

        self._discount_value = discount_value

    @property
    def document_number(self):
        """Gets the document_number of this OccurrenceAttributes.

        Retorna o número do documento do boleto

        :return: The document_number of this OccurrenceAttributes.
        :rtype: str
        """
        return self._document_number

    @document_number.setter
    def document_number(self, document_number):
        """Sets the document_number of this OccurrenceAttributes.

        Retorna o número do documento do boleto

        :param document_number: The document_number of this OccurrenceAttributes.
        :type document_number: str
        """

        self._document_number = document_number

    @property
    def due_date(self):
        """Gets the due_date of this OccurrenceAttributes.

        Retorna a data de vencimento de boleto

        :return: The due_date of this OccurrenceAttributes.
        :rtype: str
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this OccurrenceAttributes.

        Retorna a data de vencimento de boleto

        :param due_date: The due_date of this OccurrenceAttributes.
        :type due_date: str
        """

        self._due_date = due_date

    @property
    def iof_tax(self):
        """Gets the iof_tax of this OccurrenceAttributes.

        Retorna o valor do Imposto sobre operações financeiras (IOF)

        :return: The iof_tax of this OccurrenceAttributes.
        :rtype: float
        """
        return self._iof_tax

    @iof_tax.setter
    def iof_tax(self, iof_tax):
        """Sets the iof_tax of this OccurrenceAttributes.

        Retorna o valor do Imposto sobre operações financeiras (IOF)

        :param iof_tax: The iof_tax of this OccurrenceAttributes.
        :type iof_tax: float
        """

        self._iof_tax = iof_tax

    @property
    def is_dda(self):
        """Gets the is_dda of this OccurrenceAttributes.

        Retorna de o boleto foi pago através do Débito Direto Autorizado

        :return: The is_dda of this OccurrenceAttributes.
        :rtype: str
        """
        return self._is_dda

    @is_dda.setter
    def is_dda(self, is_dda):
        """Sets the is_dda of this OccurrenceAttributes.

        Retorna de o boleto foi pago através do Débito Direto Autorizado

        :param is_dda: The is_dda of this OccurrenceAttributes.
        :type is_dda: str
        """

        self._is_dda = is_dda

    @property
    def is_payment(self):
        """Gets the is_payment of this OccurrenceAttributes.

        Retorna se é para dar baixa no boleto

        :return: The is_payment of this OccurrenceAttributes.
        :rtype: bool
        """
        return self._is_payment

    @is_payment.setter
    def is_payment(self, is_payment):
        """Sets the is_payment of this OccurrenceAttributes.

        Retorna se é para dar baixa no boleto

        :param is_payment: The is_payment of this OccurrenceAttributes.
        :type is_payment: bool
        """

        self._is_payment = is_payment

    @property
    def is_rejected_payment(self):
        """Gets the is_rejected_payment of this OccurrenceAttributes.

        Retorno se é uma baixa rejeitada (Ex: pedido de baixa foi rejeitado)

        :return: The is_rejected_payment of this OccurrenceAttributes.
        :rtype: bool
        """
        return self._is_rejected_payment

    @is_rejected_payment.setter
    def is_rejected_payment(self, is_rejected_payment):
        """Sets the is_rejected_payment of this OccurrenceAttributes.

        Retorno se é uma baixa rejeitada (Ex: pedido de baixa foi rejeitado)

        :param is_rejected_payment: The is_rejected_payment of this OccurrenceAttributes.
        :type is_rejected_payment: bool
        """

        self._is_rejected_payment = is_rejected_payment

    @property
    def liquidation_code(self):
        """Gets the liquidation_code of this OccurrenceAttributes.

        Retorna o código de liquidação, normalmente usado para saber onde o cliente efetuou o pagamento

        :return: The liquidation_code of this OccurrenceAttributes.
        :rtype: str
        """
        return self._liquidation_code

    @liquidation_code.setter
    def liquidation_code(self, liquidation_code):
        """Sets the liquidation_code of this OccurrenceAttributes.

        Retorna o código de liquidação, normalmente usado para saber onde o cliente efetuou o pagamento

        :param liquidation_code: The liquidation_code of this OccurrenceAttributes.
        :type liquidation_code: str
        """

        self._liquidation_code = liquidation_code

    @property
    def liquidation_description(self):
        """Gets the liquidation_description of this OccurrenceAttributes.

        Retorna a descrição do código de liquidação

        :return: The liquidation_description of this OccurrenceAttributes.
        :rtype: str
        """
        return self._liquidation_description

    @liquidation_description.setter
    def liquidation_description(self, liquidation_description):
        """Sets the liquidation_description of this OccurrenceAttributes.

        Retorna a descrição do código de liquidação

        :param liquidation_description: The liquidation_description of this OccurrenceAttributes.
        :type liquidation_description: str
        """

        self._liquidation_description = liquidation_description

    @property
    def mulct_value(self):
        """Gets the mulct_value of this OccurrenceAttributes.

        Retorna o valor de juros e mora

        :return: The mulct_value of this OccurrenceAttributes.
        :rtype: str
        """
        return self._mulct_value

    @mulct_value.setter
    def mulct_value(self, mulct_value):
        """Sets the mulct_value of this OccurrenceAttributes.

        Retorna o valor de juros e mora

        :param mulct_value: The mulct_value of this OccurrenceAttributes.
        :type mulct_value: str
        """

        self._mulct_value = mulct_value

    @property
    def occurrence_date(self):
        """Gets the occurrence_date of this OccurrenceAttributes.

        Retorna a data da ocorrencia, o dia do pagamento

        :return: The occurrence_date of this OccurrenceAttributes.
        :rtype: str
        """
        return self._occurrence_date

    @occurrence_date.setter
    def occurrence_date(self, occurrence_date):
        """Sets the occurrence_date of this OccurrenceAttributes.

        Retorna a data da ocorrencia, o dia do pagamento

        :param occurrence_date: The occurrence_date of this OccurrenceAttributes.
        :type occurrence_date: str
        """

        self._occurrence_date = occurrence_date

    @property
    def others_credits_value(self):
        """Gets the others_credits_value of this OccurrenceAttributes.

        Retorna o valor de outros creditos

        :return: The others_credits_value of this OccurrenceAttributes.
        :rtype: float
        """
        return self._others_credits_value

    @others_credits_value.setter
    def others_credits_value(self, others_credits_value):
        """Sets the others_credits_value of this OccurrenceAttributes.

        Retorna o valor de outros creditos

        :param others_credits_value: The others_credits_value of this OccurrenceAttributes.
        :type others_credits_value: float
        """

        self._others_credits_value = others_credits_value

    @property
    def our_number(self):
        """Gets the our_number of this OccurrenceAttributes.

        Retorna o nosso número do boleto (sem o digito)

        :return: The our_number of this OccurrenceAttributes.
        :rtype: str
        """
        return self._our_number

    @our_number.setter
    def our_number(self, our_number):
        """Sets the our_number of this OccurrenceAttributes.

        Retorna o nosso número do boleto (sem o digito)

        :param our_number: The our_number of this OccurrenceAttributes.
        :type our_number: str
        """

        self._our_number = our_number

    @property
    def payer_allegation(self):
        """Gets the payer_allegation of this OccurrenceAttributes.

        Retorna a alegação do pagador (para erros)

        :return: The payer_allegation of this OccurrenceAttributes.
        :rtype: str
        """
        return self._payer_allegation

    @payer_allegation.setter
    def payer_allegation(self, payer_allegation):
        """Sets the payer_allegation of this OccurrenceAttributes.

        Retorna a alegação do pagador (para erros)

        :param payer_allegation: The payer_allegation of this OccurrenceAttributes.
        :type payer_allegation: str
        """

        self._payer_allegation = payer_allegation

    @property
    def rebate_value(self):
        """Gets the rebate_value of this OccurrenceAttributes.

        Retornna o valor dos abatimentos concedidos (depois da emissão)

        :return: The rebate_value of this OccurrenceAttributes.
        :rtype: float
        """
        return self._rebate_value

    @rebate_value.setter
    def rebate_value(self, rebate_value):
        """Sets the rebate_value of this OccurrenceAttributes.

        Retornna o valor dos abatimentos concedidos (depois da emissão)

        :param rebate_value: The rebate_value of this OccurrenceAttributes.
        :type rebate_value: float
        """

        self._rebate_value = rebate_value

    @property
    def received_value(self):
        """Gets the received_value of this OccurrenceAttributes.

        Valor recebido

        :return: The received_value of this OccurrenceAttributes.
        :rtype: float
        """
        return self._received_value

    @received_value.setter
    def received_value(self, received_value):
        """Sets the received_value of this OccurrenceAttributes.

        Valor recebido

        :param received_value: The received_value of this OccurrenceAttributes.
        :type received_value: float
        """

        self._received_value = received_value

    @property
    def sequencial_number(self):
        """Gets the sequencial_number of this OccurrenceAttributes.

        Retorna o numero sequencial da ocorrência no arquivo

        :return: The sequencial_number of this OccurrenceAttributes.
        :rtype: float
        """
        return self._sequencial_number

    @sequencial_number.setter
    def sequencial_number(self, sequencial_number):
        """Sets the sequencial_number of this OccurrenceAttributes.

        Retorna o numero sequencial da ocorrência no arquivo

        :param sequencial_number: The sequencial_number of this OccurrenceAttributes.
        :type sequencial_number: float
        """

        self._sequencial_number = sequencial_number

    @property
    def title_value(self):
        """Gets the title_value of this OccurrenceAttributes.

        Valor do título (valor do boleto)

        :return: The title_value of this OccurrenceAttributes.
        :rtype: float
        """
        return self._title_value

    @title_value.setter
    def title_value(self, title_value):
        """Sets the title_value of this OccurrenceAttributes.

        Valor do título (valor do boleto)

        :param title_value: The title_value of this OccurrenceAttributes.
        :type title_value: float
        """

        self._title_value = title_value

    @property
    def wallet(self):
        """Gets the wallet of this OccurrenceAttributes.

        Retorna o número da carteira do boleto

        :return: The wallet of this OccurrenceAttributes.
        :rtype: str
        """
        return self._wallet

    @wallet.setter
    def wallet(self, wallet):
        """Sets the wallet of this OccurrenceAttributes.

        Retorna o número da carteira do boleto

        :param wallet: The wallet of this OccurrenceAttributes.
        :type wallet: str
        """

        self._wallet = wallet
