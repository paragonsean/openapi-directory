/**
 * Cnab Online
 * Processe arquivos de retorno CNAB
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIError_errors_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIError_errors_inner::OAIError_errors_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIError_errors_inner::OAIError_errors_inner() {
    this->initializeModel();
}

OAIError_errors_inner::~OAIError_errors_inner() {}

void OAIError_errors_inner::initializeModel() {

    m_detail_isSet = false;
    m_detail_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIError_errors_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIError_errors_inner::fromJsonObject(QJsonObject json) {

    m_detail_isValid = ::OpenAPI::fromJsonValue(m_detail, json[QString("detail")]);
    m_detail_isSet = !json[QString("detail")].isNull() && m_detail_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIError_errors_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIError_errors_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_detail_isSet) {
        obj.insert(QString("detail"), ::OpenAPI::toJsonValue(m_detail));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIError_errors_inner::getDetail() const {
    return m_detail;
}
void OAIError_errors_inner::setDetail(const QString &detail) {
    m_detail = detail;
    m_detail_isSet = true;
}

bool OAIError_errors_inner::is_detail_Set() const{
    return m_detail_isSet;
}

bool OAIError_errors_inner::is_detail_Valid() const{
    return m_detail_isValid;
}

QString OAIError_errors_inner::getTitle() const {
    return m_title;
}
void OAIError_errors_inner::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIError_errors_inner::is_title_Set() const{
    return m_title_isSet;
}

bool OAIError_errors_inner::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIError_errors_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_detail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIError_errors_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
