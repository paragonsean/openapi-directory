/**
 * Cnab Online
 * Processe arquivos de retorno CNAB
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import FileFileIdLinesGet200Response from '../model/FileFileIdLinesGet200Response';
import FileFileIdOccurrencesGet200Response from '../model/FileFileIdOccurrencesGet200Response';
import FilePost200Response from '../model/FilePost200Response';

/**
* File service.
* @module api/FileApi
* @version 1.0.0
*/
export default class FileApi {

    /**
    * Constructs a new FileApi. 
    * @alias module:api/FileApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the fileFileIdGet operation.
     * @callback module:api/FileApi~fileFileIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FilePost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retorna as informações básicas de um arquivo previamente processado
     * @param {String} fileId ID Temporário gerado no endpoint file
     * @param {module:api/FileApi~fileFileIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FilePost200Response}
     */
    fileFileIdGet(fileId, callback) {
      let postBody = null;
      // verify the required parameter 'fileId' is set
      if (fileId === undefined || fileId === null) {
        throw new Error("Missing the required parameter 'fileId' when calling fileFileIdGet");
      }

      let pathParams = {
        'fileId': fileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FilePost200Response;
      return this.apiClient.callApi(
        '/file/{fileId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the fileFileIdLinesGet operation.
     * @callback module:api/FileApi~fileFileIdLinesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FileFileIdLinesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retorna todas as linhas e seus respectivos campos (de forma não processada, apenas indicando os campos reconhecidos)
     * @param {String} fileId ID Temporário gerado no endpoint file
     * @param {module:api/FileApi~fileFileIdLinesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FileFileIdLinesGet200Response}
     */
    fileFileIdLinesGet(fileId, callback) {
      let postBody = null;
      // verify the required parameter 'fileId' is set
      if (fileId === undefined || fileId === null) {
        throw new Error("Missing the required parameter 'fileId' when calling fileFileIdLinesGet");
      }

      let pathParams = {
        'fileId': fileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FileFileIdLinesGet200Response;
      return this.apiClient.callApi(
        '/file/{fileId}/lines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the fileFileIdOccurrencesGet operation.
     * @callback module:api/FileApi~fileFileIdOccurrencesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FileFileIdOccurrencesGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retorna as informações de baixa de boletos e outros tipos de ocorrências
     * @param {String} fileId ID Temporário gerado no endpoint file
     * @param {module:api/FileApi~fileFileIdOccurrencesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FileFileIdOccurrencesGet200Response}
     */
    fileFileIdOccurrencesGet(fileId, callback) {
      let postBody = null;
      // verify the required parameter 'fileId' is set
      if (fileId === undefined || fileId === null) {
        throw new Error("Missing the required parameter 'fileId' when calling fileFileIdOccurrencesGet");
      }

      let pathParams = {
        'fileId': fileId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FileFileIdOccurrencesGet200Response;
      return this.apiClient.callApi(
        '/file/{fileId}/occurrences', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the filePost operation.
     * @callback module:api/FileApi~filePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FilePost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Faz o upload de um arquivo
     * Processa um arquivo CNAB para obter informações sobre o mesmo. Retorna um ID temporário para o mesmo. 
     * @param {File} file Arquivo CNAB
     * @param {module:api/FileApi~filePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FilePost200Response}
     */
    filePost(file, callback) {
      let postBody = null;
      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling filePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'file': file
      };

      let authNames = [];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = FilePost200Response;
      return this.apiClient.callApi(
        '/file', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
