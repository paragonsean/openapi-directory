/**
 * Cnab Online
 * Processe arquivos de retorno CNAB
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LineAttributesIdentifiedFieldsInner from './LineAttributesIdentifiedFieldsInner';

/**
 * The LineAttributes model module.
 * @module model/LineAttributes
 * @version 1.0.0
 */
class LineAttributes {
    /**
     * Constructs a new <code>LineAttributes</code>.
     * @alias module:model/LineAttributes
     */
    constructor() { 
        
        LineAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LineAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LineAttributes} obj Optional instance to populate.
     * @return {module:model/LineAttributes} The populated <code>LineAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LineAttributes();

            if (data.hasOwnProperty('identified_fields')) {
                obj['identified_fields'] = ApiClient.convertToType(data['identified_fields'], [LineAttributesIdentifiedFieldsInner]);
            }
            if (data.hasOwnProperty('raw_text')) {
                obj['raw_text'] = ApiClient.convertToType(data['raw_text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LineAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LineAttributes</code>.
     */
    static validateJSON(data) {
        if (data['identified_fields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['identified_fields'])) {
                throw new Error("Expected the field `identified_fields` to be an array in the JSON data but got " + data['identified_fields']);
            }
            // validate the optional field `identified_fields` (array)
            for (const item of data['identified_fields']) {
                LineAttributesIdentifiedFieldsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['raw_text'] && !(typeof data['raw_text'] === 'string' || data['raw_text'] instanceof String)) {
            throw new Error("Expected the field `raw_text` to be a primitive type in the JSON string but got " + data['raw_text']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/LineAttributesIdentifiedFieldsInner>} identified_fields
 */
LineAttributes.prototype['identified_fields'] = undefined;

/**
 * Linha completa (em texto)
 * @member {String} raw_text
 */
LineAttributes.prototype['raw_text'] = undefined;






export default LineAttributes;

