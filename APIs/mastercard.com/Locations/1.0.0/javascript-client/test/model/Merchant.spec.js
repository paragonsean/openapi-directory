/**
 * Locations API
 * The Locations API provides access to MasterCard's ATM and Merchant location database
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LocationsApi);
  }
}(this, function(expect, LocationsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LocationsApi.Merchant();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Merchant', function() {
    it('should create an instance of Merchant', function() {
      // uncomment below and update the code to test Merchant
      //var instance = new LocationsApi.Merchant();
      //expect(instance).to.be.a(LocationsApi.Merchant);
    });

    it('should have the property acceptance (base name: "Acceptance")', function() {
      // uncomment below and update the code to test the property acceptance
      //var instance = new LocationsApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "Category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new LocationsApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property features (base name: "Features")', function() {
      // uncomment below and update the code to test the property features
      //var instance = new LocationsApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new LocationsApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "Location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new LocationsApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property merchantOfferId (base name: "MerchantOfferId")', function() {
      // uncomment below and update the code to test the property merchantOfferId
      //var instance = new LocationsApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new LocationsApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "PhoneNumber")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instance = new LocationsApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property products (base name: "Products")', function() {
      // uncomment below and update the code to test the property products
      //var instance = new LocationsApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property topup (base name: "Topup")', function() {
      // uncomment below and update the code to test the property topup
      //var instance = new LocationsApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property websiteUrl (base name: "WebsiteUrl")', function() {
      // uncomment below and update the code to test the property websiteUrl
      //var instance = new LocationsApi.Merchant();
      //expect(instance).to.be();
    });

  });

}));
