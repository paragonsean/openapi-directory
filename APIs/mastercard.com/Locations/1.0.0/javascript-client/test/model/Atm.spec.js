/**
 * Locations API
 * The Locations API provides access to MasterCard's ATM and Merchant location database
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LocationsApi);
  }
}(this, function(expect, LocationsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LocationsApi.Atm();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Atm', function() {
    it('should create an instance of Atm', function() {
      // uncomment below and update the code to test Atm
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be.a(LocationsApi.Atm);
    });

    it('should have the property accessFees (base name: "AccessFees")', function() {
      // uncomment below and update the code to test the property accessFees
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be();
    });

    it('should have the property availability (base name: "Availability")', function() {
      // uncomment below and update the code to test the property availability
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be();
    });

    it('should have the property camera (base name: "Camera")', function() {
      // uncomment below and update the code to test the property camera
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be();
    });

    it('should have the property handicapAccessible (base name: "HandicapAccessible")', function() {
      // uncomment below and update the code to test the property handicapAccessible
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be();
    });

    it('should have the property internationalMaestroAccepted (base name: "InternationalMaestroAccepted")', function() {
      // uncomment below and update the code to test the property internationalMaestroAccepted
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "Location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "Owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be();
    });

    it('should have the property sharedDeposit (base name: "SharedDeposit")', function() {
      // uncomment below and update the code to test the property sharedDeposit
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be();
    });

    it('should have the property sponsor (base name: "Sponsor")', function() {
      // uncomment below and update the code to test the property sponsor
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be();
    });

    it('should have the property supportEMV (base name: "SupportEMV")', function() {
      // uncomment below and update the code to test the property supportEMV
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be();
    });

    it('should have the property surchargeFreeAlliance (base name: "SurchargeFreeAlliance")', function() {
      // uncomment below and update the code to test the property surchargeFreeAlliance
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be();
    });

    it('should have the property surchargeFreeAllianceNetwork (base name: "SurchargeFreeAllianceNetwork")', function() {
      // uncomment below and update the code to test the property surchargeFreeAllianceNetwork
      //var instance = new LocationsApi.Atm();
      //expect(instance).to.be();
    });

  });

}));
