/**
 * Locations API
 * The Locations API provides access to MasterCard's ATM and Merchant location database
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Cashback model module.
 * @module model/Cashback
 * @version 1.0.0
 */
class Cashback {
    /**
     * Constructs a new <code>Cashback</code>.
     * @alias module:model/Cashback
     */
    constructor() { 
        
        Cashback.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Cashback</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Cashback} obj Optional instance to populate.
     * @return {module:model/Cashback} The populated <code>Cashback</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Cashback();

            if (data.hasOwnProperty('MaximumAmount')) {
                obj['MaximumAmount'] = ApiClient.convertToType(data['MaximumAmount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Cashback</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Cashback</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Maximum cashback amount permitted at the location.
 * @member {Number} MaximumAmount
 */
Cashback.prototype['MaximumAmount'] = undefined;






export default Cashback;

