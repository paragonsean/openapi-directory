/**
 * Locations API
 * The Locations API provides access to MasterCard's ATM and Merchant location database
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Location from './Location';

/**
 * The Atm model module.
 * @module model/Atm
 * @version 1.0.0
 */
class Atm {
    /**
     * Constructs a new <code>Atm</code>.
     * @alias module:model/Atm
     */
    constructor() { 
        
        Atm.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Atm</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Atm} obj Optional instance to populate.
     * @return {module:model/Atm} The populated <code>Atm</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Atm();

            if (data.hasOwnProperty('AccessFees')) {
                obj['AccessFees'] = ApiClient.convertToType(data['AccessFees'], 'String');
            }
            if (data.hasOwnProperty('Availability')) {
                obj['Availability'] = ApiClient.convertToType(data['Availability'], 'String');
            }
            if (data.hasOwnProperty('Camera')) {
                obj['Camera'] = ApiClient.convertToType(data['Camera'], 'String');
            }
            if (data.hasOwnProperty('HandicapAccessible')) {
                obj['HandicapAccessible'] = ApiClient.convertToType(data['HandicapAccessible'], 'String');
            }
            if (data.hasOwnProperty('InternationalMaestroAccepted')) {
                obj['InternationalMaestroAccepted'] = ApiClient.convertToType(data['InternationalMaestroAccepted'], 'Number');
            }
            if (data.hasOwnProperty('Location')) {
                obj['Location'] = Location.constructFromObject(data['Location']);
            }
            if (data.hasOwnProperty('Owner')) {
                obj['Owner'] = ApiClient.convertToType(data['Owner'], 'String');
            }
            if (data.hasOwnProperty('SharedDeposit')) {
                obj['SharedDeposit'] = ApiClient.convertToType(data['SharedDeposit'], 'String');
            }
            if (data.hasOwnProperty('Sponsor')) {
                obj['Sponsor'] = ApiClient.convertToType(data['Sponsor'], 'String');
            }
            if (data.hasOwnProperty('SupportEMV')) {
                obj['SupportEMV'] = ApiClient.convertToType(data['SupportEMV'], 'Number');
            }
            if (data.hasOwnProperty('SurchargeFreeAlliance')) {
                obj['SurchargeFreeAlliance'] = ApiClient.convertToType(data['SurchargeFreeAlliance'], 'String');
            }
            if (data.hasOwnProperty('SurchargeFreeAllianceNetwork')) {
                obj['SurchargeFreeAllianceNetwork'] = ApiClient.convertToType(data['SurchargeFreeAllianceNetwork'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Atm</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Atm</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AccessFees'] && !(typeof data['AccessFees'] === 'string' || data['AccessFees'] instanceof String)) {
            throw new Error("Expected the field `AccessFees` to be a primitive type in the JSON string but got " + data['AccessFees']);
        }
        // ensure the json data is a string
        if (data['Availability'] && !(typeof data['Availability'] === 'string' || data['Availability'] instanceof String)) {
            throw new Error("Expected the field `Availability` to be a primitive type in the JSON string but got " + data['Availability']);
        }
        // ensure the json data is a string
        if (data['Camera'] && !(typeof data['Camera'] === 'string' || data['Camera'] instanceof String)) {
            throw new Error("Expected the field `Camera` to be a primitive type in the JSON string but got " + data['Camera']);
        }
        // ensure the json data is a string
        if (data['HandicapAccessible'] && !(typeof data['HandicapAccessible'] === 'string' || data['HandicapAccessible'] instanceof String)) {
            throw new Error("Expected the field `HandicapAccessible` to be a primitive type in the JSON string but got " + data['HandicapAccessible']);
        }
        // validate the optional field `Location`
        if (data['Location']) { // data not null
          Location.validateJSON(data['Location']);
        }
        // ensure the json data is a string
        if (data['Owner'] && !(typeof data['Owner'] === 'string' || data['Owner'] instanceof String)) {
            throw new Error("Expected the field `Owner` to be a primitive type in the JSON string but got " + data['Owner']);
        }
        // ensure the json data is a string
        if (data['SharedDeposit'] && !(typeof data['SharedDeposit'] === 'string' || data['SharedDeposit'] instanceof String)) {
            throw new Error("Expected the field `SharedDeposit` to be a primitive type in the JSON string but got " + data['SharedDeposit']);
        }
        // ensure the json data is a string
        if (data['Sponsor'] && !(typeof data['Sponsor'] === 'string' || data['Sponsor'] instanceof String)) {
            throw new Error("Expected the field `Sponsor` to be a primitive type in the JSON string but got " + data['Sponsor']);
        }
        // ensure the json data is a string
        if (data['SurchargeFreeAlliance'] && !(typeof data['SurchargeFreeAlliance'] === 'string' || data['SurchargeFreeAlliance'] instanceof String)) {
            throw new Error("Expected the field `SurchargeFreeAlliance` to be a primitive type in the JSON string but got " + data['SurchargeFreeAlliance']);
        }
        // ensure the json data is a string
        if (data['SurchargeFreeAllianceNetwork'] && !(typeof data['SurchargeFreeAllianceNetwork'] === 'string' || data['SurchargeFreeAllianceNetwork'] instanceof String)) {
            throw new Error("Expected the field `SurchargeFreeAllianceNetwork` to be a primitive type in the JSON string but got " + data['SurchargeFreeAllianceNetwork']);
        }

        return true;
    }


}



/**
 * This value indicates under what conditions access fees are charged. Options are UNKNOWN, DOMESTIC, INTERNATIONAL, DOMESTIC_AND_INTERNATIONAL, NO_FEE.
 * @member {String} AccessFees
 */
Atm.prototype['AccessFees'] = undefined;

/**
 * This value indicates the availability hours of the ATM. Options are UNKNOWN, ALWAYS_AVAILABLE, BUSINESS_HOURS, IRREGULAR_HOURS.
 * @member {String} Availability
 */
Atm.prototype['Availability'] = undefined;

/**
 * This value indicates whether or not a security camera is present or near ATM. Options are UNKNOWN, YES, NO.
 * @member {String} Camera
 */
Atm.prototype['Camera'] = undefined;

/**
 * This value indicates whether or not the ATM is accessible by wheelchair. Options are UNKNOWN, YES, NO.
 * @member {String} HandicapAccessible
 */
Atm.prototype['HandicapAccessible'] = undefined;

/**
 * This field will provide ATM Terminals which can still process Maestro transactions but are not yet EMV chip reader enabled. Information available only for USA and Argentina till October 2014. 1=Yes.
 * @member {Number} InternationalMaestroAccepted
 */
Atm.prototype['InternationalMaestroAccepted'] = undefined;

/**
 * @member {module:model/Location} Location
 */
Atm.prototype['Location'] = undefined;

/**
 * This is the DBA name of the financial institution affiliate or independent service organization.
 * @member {String} Owner
 */
Atm.prototype['Owner'] = undefined;

/**
 * This value indicates whether or not the ATM participates in the MasterCard Shared Deposit network. Options are YES or NO.
 * @member {String} SharedDeposit
 */
Atm.prototype['SharedDeposit'] = undefined;

/**
 * This is the legal or business name of the entity that sponsors the owner of the ATM into the MasterCard network.
 * @member {String} Sponsor
 */
Atm.prototype['Sponsor'] = undefined;

/**
 * This indicates whether the ATM has the ability to read chip cards or not. Options are 1 = Yes 2 = No or Empty = Unknown.
 * @member {Number} SupportEMV
 */
Atm.prototype['SupportEMV'] = undefined;

/**
 * This value indicates whether or not the ATM participates in the MasterCard Shared (only) Surcharge Free Alliance network. Options are YES or NO.
 * @member {String} SurchargeFreeAlliance
 */
Atm.prototype['SurchargeFreeAlliance'] = undefined;

/**
 * This value indicates whether or not the ATM participates in the MasterCard Shared (only) Surcharge Free Alliance network. Options are DOES_NOT_PARTICIPATE_IN_SFA, ALLPOINT_PREPAID, MONEYPASS_DEBIT, and ALL_SURCHARGE_FREE.
 * @member {String} SurchargeFreeAllianceNetwork
 */
Atm.prototype['SurchargeFreeAllianceNetwork'] = undefined;






export default Atm;

