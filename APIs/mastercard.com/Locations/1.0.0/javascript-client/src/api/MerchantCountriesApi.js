/**
 * Locations API
 * The Locations API provides access to MasterCard's ATM and Merchant location database
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CountriesResponse from '../model/CountriesResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* MerchantCountries service.
* @module api/MerchantCountriesApi
* @version 1.0.0
*/
export default class MerchantCountriesApi {

    /**
    * Constructs a new MerchantCountriesApi. 
    * @alias module:api/MerchantCountriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the merchantsV1CountryGet operation.
     * @callback module:api/MerchantCountriesApi~merchantsV1CountryGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CountriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns countries that have Merchants offering the following services: accept contactless-enabled cards and devices, allow customers to add money to an eligible MasterCard or Maestro prepaid card, issue MasterCard Prepaid Travel cards, offer cash at checkout when paying with a Debit MasterCard or Maestro Card. 
     * Returns countries that have Merchants offering the following services: accept contactless-enabled cards and devices, allow customers to add money to an eligible MasterCard or Maestro prepaid card, issue MasterCard Prepaid Travel cards, offer cash at checkout when paying with a Debit MasterCard or Maestro Card. 
     * @param {String} details This is the type of merchant location. Options  \"acceptance.paypass\" \"topup.repower\"  \"products.prepaidtravelcard\"  and \"offers.easysavings\"
     * @param {module:api/MerchantCountriesApi~merchantsV1CountryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CountriesResponse}
     */
    merchantsV1CountryGet(details, callback) {
      let postBody = null;
      // verify the required parameter 'details' is set
      if (details === undefined || details === null) {
        throw new Error("Missing the required parameter 'details' when calling merchantsV1CountryGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'details': details
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CountriesResponse;
      return this.apiClient.callApi(
        '/merchants/v1/country', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
