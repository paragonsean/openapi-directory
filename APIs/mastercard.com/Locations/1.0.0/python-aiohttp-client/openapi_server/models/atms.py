# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.atm import Atm
from openapi_server import util


class Atms(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, atm: List[Atm]=None, page_offset: str=None, total_count: int=None):
        """Atms - a model defined in OpenAPI

        :param atm: The atm of this Atms.
        :param page_offset: The page_offset of this Atms.
        :param total_count: The total_count of this Atms.
        """
        self.openapi_types = {
            'atm': List[Atm],
            'page_offset': str,
            'total_count': int
        }

        self.attribute_map = {
            'atm': 'Atm',
            'page_offset': 'PageOffset',
            'total_count': 'TotalCount'
        }

        self._atm = atm
        self._page_offset = page_offset
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Atms':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Atms of this Atms.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def atm(self):
        """Gets the atm of this Atms.


        :return: The atm of this Atms.
        :rtype: List[Atm]
        """
        return self._atm

    @atm.setter
    def atm(self, atm):
        """Sets the atm of this Atms.


        :param atm: The atm of this Atms.
        :type atm: List[Atm]
        """

        self._atm = atm

    @property
    def page_offset(self):
        """Gets the page_offset of this Atms.

        Zero-based offset where the response will start. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.

        :return: The page_offset of this Atms.
        :rtype: str
        """
        return self._page_offset

    @page_offset.setter
    def page_offset(self, page_offset):
        """Sets the page_offset of this Atms.

        Zero-based offset where the response will start. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.

        :param page_offset: The page_offset of this Atms.
        :type page_offset: str
        """

        self._page_offset = page_offset

    @property
    def total_count(self):
        """Gets the total_count of this Atms.

        This is the total number of ATMs that match your criteria.

        :return: The total_count of this Atms.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this Atms.

        This is the total number of ATMs that match your criteria.

        :param total_count: The total_count of this Atms.
        :type total_count: int
        """

        self._total_count = total_count
