# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.country_subdivisions import CountrySubdivisions
from openapi_server import util


class CountrySubdivisionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_subdivisions: CountrySubdivisions=None):
        """CountrySubdivisionResponse - a model defined in OpenAPI

        :param country_subdivisions: The country_subdivisions of this CountrySubdivisionResponse.
        """
        self.openapi_types = {
            'country_subdivisions': CountrySubdivisions
        }

        self.attribute_map = {
            'country_subdivisions': 'CountrySubdivisions'
        }

        self._country_subdivisions = country_subdivisions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CountrySubdivisionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CountrySubdivisionResponse of this CountrySubdivisionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_subdivisions(self):
        """Gets the country_subdivisions of this CountrySubdivisionResponse.


        :return: The country_subdivisions of this CountrySubdivisionResponse.
        :rtype: CountrySubdivisions
        """
        return self._country_subdivisions

    @country_subdivisions.setter
    def country_subdivisions(self, country_subdivisions):
        """Sets the country_subdivisions of this CountrySubdivisionResponse.


        :param country_subdivisions: The country_subdivisions of this CountrySubdivisionResponse.
        :type country_subdivisions: CountrySubdivisions
        """

        self._country_subdivisions = country_subdivisions
