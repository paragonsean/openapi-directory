# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.acceptance import Acceptance
from openapi_server.models.features import Features
from openapi_server.models.location import Location
from openapi_server.models.products import Products
from openapi_server.models.topup import Topup
from openapi_server import util


class Merchant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acceptance: Acceptance=None, category: str=None, features: Features=None, id: str=None, location: Location=None, merchant_offer_id: str=None, name: str=None, phone_number: str=None, products: Products=None, topup: Topup=None, website_url: str=None):
        """Merchant - a model defined in OpenAPI

        :param acceptance: The acceptance of this Merchant.
        :param category: The category of this Merchant.
        :param features: The features of this Merchant.
        :param id: The id of this Merchant.
        :param location: The location of this Merchant.
        :param merchant_offer_id: The merchant_offer_id of this Merchant.
        :param name: The name of this Merchant.
        :param phone_number: The phone_number of this Merchant.
        :param products: The products of this Merchant.
        :param topup: The topup of this Merchant.
        :param website_url: The website_url of this Merchant.
        """
        self.openapi_types = {
            'acceptance': Acceptance,
            'category': str,
            'features': Features,
            'id': str,
            'location': Location,
            'merchant_offer_id': str,
            'name': str,
            'phone_number': str,
            'products': Products,
            'topup': Topup,
            'website_url': str
        }

        self.attribute_map = {
            'acceptance': 'Acceptance',
            'category': 'Category',
            'features': 'Features',
            'id': 'Id',
            'location': 'Location',
            'merchant_offer_id': 'MerchantOfferId',
            'name': 'Name',
            'phone_number': 'PhoneNumber',
            'products': 'Products',
            'topup': 'Topup',
            'website_url': 'WebsiteUrl'
        }

        self._acceptance = acceptance
        self._category = category
        self._features = features
        self._id = id
        self._location = location
        self._merchant_offer_id = merchant_offer_id
        self._name = name
        self._phone_number = phone_number
        self._products = products
        self._topup = topup
        self._website_url = website_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Merchant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Merchant of this Merchant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acceptance(self):
        """Gets the acceptance of this Merchant.


        :return: The acceptance of this Merchant.
        :rtype: Acceptance
        """
        return self._acceptance

    @acceptance.setter
    def acceptance(self, acceptance):
        """Sets the acceptance of this Merchant.


        :param acceptance: The acceptance of this Merchant.
        :type acceptance: Acceptance
        """

        self._acceptance = acceptance

    @property
    def category(self):
        """Gets the category of this Merchant.

        Merchant's category.

        :return: The category of this Merchant.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this Merchant.

        Merchant's category.

        :param category: The category of this Merchant.
        :type category: str
        """

        self._category = category

    @property
    def features(self):
        """Gets the features of this Merchant.


        :return: The features of this Merchant.
        :rtype: Features
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this Merchant.


        :param features: The features of this Merchant.
        :type features: Features
        """

        self._features = features

    @property
    def id(self):
        """Gets the id of this Merchant.

        Numerical merchant identifier.

        :return: The id of this Merchant.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Merchant.

        Numerical merchant identifier.

        :param id: The id of this Merchant.
        :type id: str
        """

        self._id = id

    @property
    def location(self):
        """Gets the location of this Merchant.


        :return: The location of this Merchant.
        :rtype: Location
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Merchant.


        :param location: The location of this Merchant.
        :type location: Location
        """

        self._location = location

    @property
    def merchant_offer_id(self):
        """Gets the merchant_offer_id of this Merchant.

        Merchant's Easy Savings Offer Id

        :return: The merchant_offer_id of this Merchant.
        :rtype: str
        """
        return self._merchant_offer_id

    @merchant_offer_id.setter
    def merchant_offer_id(self, merchant_offer_id):
        """Sets the merchant_offer_id of this Merchant.

        Merchant's Easy Savings Offer Id

        :param merchant_offer_id: The merchant_offer_id of this Merchant.
        :type merchant_offer_id: str
        """

        self._merchant_offer_id = merchant_offer_id

    @property
    def name(self):
        """Gets the name of this Merchant.

        Name of the merchant

        :return: The name of this Merchant.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Merchant.

        Name of the merchant

        :param name: The name of this Merchant.
        :type name: str
        """

        self._name = name

    @property
    def phone_number(self):
        """Gets the phone_number of this Merchant.

        Merchant's phone number

        :return: The phone_number of this Merchant.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this Merchant.

        Merchant's phone number

        :param phone_number: The phone_number of this Merchant.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def products(self):
        """Gets the products of this Merchant.


        :return: The products of this Merchant.
        :rtype: Products
        """
        return self._products

    @products.setter
    def products(self, products):
        """Sets the products of this Merchant.


        :param products: The products of this Merchant.
        :type products: Products
        """

        self._products = products

    @property
    def topup(self):
        """Gets the topup of this Merchant.


        :return: The topup of this Merchant.
        :rtype: Topup
        """
        return self._topup

    @topup.setter
    def topup(self, topup):
        """Sets the topup of this Merchant.


        :param topup: The topup of this Merchant.
        :type topup: Topup
        """

        self._topup = topup

    @property
    def website_url(self):
        """Gets the website_url of this Merchant.

        Merchant's website URL address.

        :return: The website_url of this Merchant.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this Merchant.

        Merchant's website URL address.

        :param website_url: The website_url of this Merchant.
        :type website_url: str
        """

        self._website_url = website_url
