/**
 * Locations API
 * The Locations API provides access to MasterCard's ATM and Merchant location database
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICashback.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICashback::OAICashback(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICashback::OAICashback() {
    this->initializeModel();
}

OAICashback::~OAICashback() {}

void OAICashback::initializeModel() {

    m_maximum_amount_isSet = false;
    m_maximum_amount_isValid = false;
}

void OAICashback::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICashback::fromJsonObject(QJsonObject json) {

    m_maximum_amount_isValid = ::OpenAPI::fromJsonValue(m_maximum_amount, json[QString("MaximumAmount")]);
    m_maximum_amount_isSet = !json[QString("MaximumAmount")].isNull() && m_maximum_amount_isValid;
}

QString OAICashback::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICashback::asJsonObject() const {
    QJsonObject obj;
    if (m_maximum_amount_isSet) {
        obj.insert(QString("MaximumAmount"), ::OpenAPI::toJsonValue(m_maximum_amount));
    }
    return obj;
}

qint32 OAICashback::getMaximumAmount() const {
    return m_maximum_amount;
}
void OAICashback::setMaximumAmount(const qint32 &maximum_amount) {
    m_maximum_amount = maximum_amount;
    m_maximum_amount_isSet = true;
}

bool OAICashback::is_maximum_amount_Set() const{
    return m_maximum_amount_isSet;
}

bool OAICashback::is_maximum_amount_Valid() const{
    return m_maximum_amount_isValid;
}

bool OAICashback::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_maximum_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICashback::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
