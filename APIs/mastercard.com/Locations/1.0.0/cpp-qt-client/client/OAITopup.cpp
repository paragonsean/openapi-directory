/**
 * Locations API
 * The Locations API provides access to MasterCard's ATM and Merchant location database
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITopup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITopup::OAITopup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITopup::OAITopup() {
    this->initializeModel();
}

OAITopup::~OAITopup() {}

void OAITopup::initializeModel() {

    m_re_power_isSet = false;
    m_re_power_isValid = false;
}

void OAITopup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITopup::fromJsonObject(QJsonObject json) {

    m_re_power_isValid = ::OpenAPI::fromJsonValue(m_re_power, json[QString("rePower")]);
    m_re_power_isSet = !json[QString("rePower")].isNull() && m_re_power_isValid;
}

QString OAITopup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITopup::asJsonObject() const {
    QJsonObject obj;
    if (m_re_power.isSet()) {
        obj.insert(QString("rePower"), ::OpenAPI::toJsonValue(m_re_power));
    }
    return obj;
}

OAIRePower OAITopup::getRePower() const {
    return m_re_power;
}
void OAITopup::setRePower(const OAIRePower &re_power) {
    m_re_power = re_power;
    m_re_power_isSet = true;
}

bool OAITopup::is_re_power_Set() const{
    return m_re_power_isSet;
}

bool OAITopup::is_re_power_Valid() const{
    return m_re_power_isValid;
}

bool OAITopup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_re_power.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITopup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
