/**
 * Locations API
 * The Locations API provides access to MasterCard's ATM and Merchant location database
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProducts.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProducts::OAIProducts(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProducts::OAIProducts() {
    this->initializeModel();
}

OAIProducts::~OAIProducts() {}

void OAIProducts::initializeModel() {

    m_prepaid_travelcard_isSet = false;
    m_prepaid_travelcard_isValid = false;
}

void OAIProducts::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProducts::fromJsonObject(QJsonObject json) {

    m_prepaid_travelcard_isValid = ::OpenAPI::fromJsonValue(m_prepaid_travelcard, json[QString("PrepaidTravelcard")]);
    m_prepaid_travelcard_isSet = !json[QString("PrepaidTravelcard")].isNull() && m_prepaid_travelcard_isValid;
}

QString OAIProducts::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProducts::asJsonObject() const {
    QJsonObject obj;
    if (m_prepaid_travelcard_isSet) {
        obj.insert(QString("PrepaidTravelcard"), ::OpenAPI::toJsonValue(m_prepaid_travelcard));
    }
    return obj;
}

bool OAIProducts::isPrepaidTravelcard() const {
    return m_prepaid_travelcard;
}
void OAIProducts::setPrepaidTravelcard(const bool &prepaid_travelcard) {
    m_prepaid_travelcard = prepaid_travelcard;
    m_prepaid_travelcard_isSet = true;
}

bool OAIProducts::is_prepaid_travelcard_Set() const{
    return m_prepaid_travelcard_isSet;
}

bool OAIProducts::is_prepaid_travelcard_Valid() const{
    return m_prepaid_travelcard_isValid;
}

bool OAIProducts::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_prepaid_travelcard_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProducts::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
