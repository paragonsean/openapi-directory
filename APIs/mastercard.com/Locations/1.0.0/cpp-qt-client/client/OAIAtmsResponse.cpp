/**
 * Locations API
 * The Locations API provides access to MasterCard's ATM and Merchant location database
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAtmsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAtmsResponse::OAIAtmsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAtmsResponse::OAIAtmsResponse() {
    this->initializeModel();
}

OAIAtmsResponse::~OAIAtmsResponse() {}

void OAIAtmsResponse::initializeModel() {

    m_atms_isSet = false;
    m_atms_isValid = false;
}

void OAIAtmsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAtmsResponse::fromJsonObject(QJsonObject json) {

    m_atms_isValid = ::OpenAPI::fromJsonValue(m_atms, json[QString("Atms")]);
    m_atms_isSet = !json[QString("Atms")].isNull() && m_atms_isValid;
}

QString OAIAtmsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAtmsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_atms.isSet()) {
        obj.insert(QString("Atms"), ::OpenAPI::toJsonValue(m_atms));
    }
    return obj;
}

OAIAtms OAIAtmsResponse::getAtms() const {
    return m_atms;
}
void OAIAtmsResponse::setAtms(const OAIAtms &atms) {
    m_atms = atms;
    m_atms_isSet = true;
}

bool OAIAtmsResponse::is_atms_Set() const{
    return m_atms_isSet;
}

bool OAIAtmsResponse::is_atms_Valid() const{
    return m_atms_isValid;
}

bool OAIAtmsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_atms.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAtmsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
