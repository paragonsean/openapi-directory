/**
 * Locations API
 * The Locations API provides access to MasterCard's ATM and Merchant location database
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocation.h
 *
 * 
 */

#ifndef OAILocation_H
#define OAILocation_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAILocationType.h"
#include "OAIPoint.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress;
class OAILocationType;
class OAIPoint;

class OAILocation : public OAIObject {
public:
    OAILocation();
    OAILocation(QString json);
    ~OAILocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddress getAddress() const;
    void setAddress(const OAIAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    double getDistance() const;
    void setDistance(const double &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    QString getDistanceUnit() const;
    void setDistanceUnit(const QString &distance_unit);
    bool is_distance_unit_Set() const;
    bool is_distance_unit_Valid() const;

    OAILocationType getLocationType() const;
    void setLocationType(const OAILocationType &location_type);
    bool is_location_type_Set() const;
    bool is_location_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIPoint getPoint() const;
    void setPoint(const OAIPoint &point);
    bool is_point_Set() const;
    bool is_point_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    double m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    QString m_distance_unit;
    bool m_distance_unit_isSet;
    bool m_distance_unit_isValid;

    OAILocationType m_location_type;
    bool m_location_type_isSet;
    bool m_location_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIPoint m_point;
    bool m_point_isSet;
    bool m_point_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocation)

#endif // OAILocation_H
