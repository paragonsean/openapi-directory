/**
 * Locations API
 * The Locations API provides access to MasterCard's ATM and Merchant location database
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAcceptance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAcceptance::OAIAcceptance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAcceptance::OAIAcceptance() {
    this->initializeModel();
}

OAIAcceptance::~OAIAcceptance() {}

void OAIAcceptance::initializeModel() {

    m_pay_pass_isSet = false;
    m_pay_pass_isValid = false;
}

void OAIAcceptance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAcceptance::fromJsonObject(QJsonObject json) {

    m_pay_pass_isValid = ::OpenAPI::fromJsonValue(m_pay_pass, json[QString("PayPass")]);
    m_pay_pass_isSet = !json[QString("PayPass")].isNull() && m_pay_pass_isValid;
}

QString OAIAcceptance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAcceptance::asJsonObject() const {
    QJsonObject obj;
    if (m_pay_pass.isSet()) {
        obj.insert(QString("PayPass"), ::OpenAPI::toJsonValue(m_pay_pass));
    }
    return obj;
}

OAIPayPass OAIAcceptance::getPayPass() const {
    return m_pay_pass;
}
void OAIAcceptance::setPayPass(const OAIPayPass &pay_pass) {
    m_pay_pass = pay_pass;
    m_pay_pass_isSet = true;
}

bool OAIAcceptance::is_pay_pass_Set() const{
    return m_pay_pass_isSet;
}

bool OAIAcceptance::is_pay_pass_Valid() const{
    return m_pay_pass_isValid;
}

bool OAIAcceptance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pay_pass.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAcceptance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
