/**
 * Locations API
 * The Locations API provides access to MasterCard's ATM and Merchant location database
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICountrySubdivisionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICountrySubdivisionResponse::OAICountrySubdivisionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICountrySubdivisionResponse::OAICountrySubdivisionResponse() {
    this->initializeModel();
}

OAICountrySubdivisionResponse::~OAICountrySubdivisionResponse() {}

void OAICountrySubdivisionResponse::initializeModel() {

    m_country_subdivisions_isSet = false;
    m_country_subdivisions_isValid = false;
}

void OAICountrySubdivisionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICountrySubdivisionResponse::fromJsonObject(QJsonObject json) {

    m_country_subdivisions_isValid = ::OpenAPI::fromJsonValue(m_country_subdivisions, json[QString("CountrySubdivisions")]);
    m_country_subdivisions_isSet = !json[QString("CountrySubdivisions")].isNull() && m_country_subdivisions_isValid;
}

QString OAICountrySubdivisionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICountrySubdivisionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_country_subdivisions.isSet()) {
        obj.insert(QString("CountrySubdivisions"), ::OpenAPI::toJsonValue(m_country_subdivisions));
    }
    return obj;
}

OAICountrySubdivisions OAICountrySubdivisionResponse::getCountrySubdivisions() const {
    return m_country_subdivisions;
}
void OAICountrySubdivisionResponse::setCountrySubdivisions(const OAICountrySubdivisions &country_subdivisions) {
    m_country_subdivisions = country_subdivisions;
    m_country_subdivisions_isSet = true;
}

bool OAICountrySubdivisionResponse::is_country_subdivisions_Set() const{
    return m_country_subdivisions_isSet;
}

bool OAICountrySubdivisionResponse::is_country_subdivisions_Valid() const{
    return m_country_subdivisions_isValid;
}

bool OAICountrySubdivisionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_subdivisions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICountrySubdivisionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
