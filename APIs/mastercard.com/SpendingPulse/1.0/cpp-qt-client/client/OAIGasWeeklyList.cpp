/**
 * Spending Pulse
 * This API will provide monthly data which includes metrics such as sales volume and growth rate.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGasWeeklyList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGasWeeklyList::OAIGasWeeklyList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGasWeeklyList::OAIGasWeeklyList() {
    this->initializeModel();
}

OAIGasWeeklyList::~OAIGasWeeklyList() {}

void OAIGasWeeklyList::initializeModel() {

    m_count_isSet = false;
    m_count_isValid = false;

    m_gas_weekly_array_isSet = false;
    m_gas_weekly_array_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;
}

void OAIGasWeeklyList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGasWeeklyList::fromJsonObject(QJsonObject json) {

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("Count")]);
    m_count_isSet = !json[QString("Count")].isNull() && m_count_isValid;

    m_gas_weekly_array_isValid = ::OpenAPI::fromJsonValue(m_gas_weekly_array, json[QString("GasWeeklyArray")]);
    m_gas_weekly_array_isSet = !json[QString("GasWeeklyArray")].isNull() && m_gas_weekly_array_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("Message")]);
    m_message_isSet = !json[QString("Message")].isNull() && m_message_isValid;
}

QString OAIGasWeeklyList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGasWeeklyList::asJsonObject() const {
    QJsonObject obj;
    if (m_count_isSet) {
        obj.insert(QString("Count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_gas_weekly_array.isSet()) {
        obj.insert(QString("GasWeeklyArray"), ::OpenAPI::toJsonValue(m_gas_weekly_array));
    }
    if (m_message_isSet) {
        obj.insert(QString("Message"), ::OpenAPI::toJsonValue(m_message));
    }
    return obj;
}

QString OAIGasWeeklyList::getCount() const {
    return m_count;
}
void OAIGasWeeklyList::setCount(const QString &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAIGasWeeklyList::is_count_Set() const{
    return m_count_isSet;
}

bool OAIGasWeeklyList::is_count_Valid() const{
    return m_count_isValid;
}

OAIGasWeeklyArray OAIGasWeeklyList::getGasWeeklyArray() const {
    return m_gas_weekly_array;
}
void OAIGasWeeklyList::setGasWeeklyArray(const OAIGasWeeklyArray &gas_weekly_array) {
    m_gas_weekly_array = gas_weekly_array;
    m_gas_weekly_array_isSet = true;
}

bool OAIGasWeeklyList::is_gas_weekly_array_Set() const{
    return m_gas_weekly_array_isSet;
}

bool OAIGasWeeklyList::is_gas_weekly_array_Valid() const{
    return m_gas_weekly_array_isValid;
}

QString OAIGasWeeklyList::getMessage() const {
    return m_message;
}
void OAIGasWeeklyList::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGasWeeklyList::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGasWeeklyList::is_message_Valid() const{
    return m_message_isValid;
}

bool OAIGasWeeklyList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gas_weekly_array.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGasWeeklyList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
