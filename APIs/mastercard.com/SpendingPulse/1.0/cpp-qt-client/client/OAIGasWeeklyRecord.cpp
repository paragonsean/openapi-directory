/**
 * Spending Pulse
 * This API will provide monthly data which includes metrics such as sales volume and growth rate.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGasWeeklyRecord.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGasWeeklyRecord::OAIGasWeeklyRecord(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGasWeeklyRecord::OAIGasWeeklyRecord() {
    this->initializeModel();
}

OAIGasWeeklyRecord::~OAIGasWeeklyRecord() {}

void OAIGasWeeklyRecord::initializeModel() {

    m_average_price_per_gal_regular_gasoline_isSet = false;
    m_average_price_per_gal_regular_gasoline_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_padd_code_isSet = false;
    m_padd_code_isValid = false;

    m_padd_millionsof_barrels_sold_isSet = false;
    m_padd_millionsof_barrels_sold_isValid = false;

    m_padd_percent_change_in_barrels_from_prior_week_isSet = false;
    m_padd_percent_change_in_barrels_from_prior_week_isValid = false;

    m_padd_percent_changein_barrelsfrom52_weeks_ago_isSet = false;
    m_padd_percent_changein_barrelsfrom52_weeks_ago_isValid = false;

    m_period_isSet = false;
    m_period_isValid = false;

    m_product_line_isSet = false;
    m_product_line_isValid = false;

    m_publication_coverage_period_isSet = false;
    m_publication_coverage_period_isValid = false;

    m_report_type_isSet = false;
    m_report_type_isValid = false;

    m_sector_isSet = false;
    m_sector_isValid = false;

    m_segment_isSet = false;
    m_segment_isValid = false;

    m_sub_sector_isSet = false;
    m_sub_sector_isValid = false;

    m_total_barrels_change_from_prior_week_isSet = false;
    m_total_barrels_change_from_prior_week_isValid = false;

    m_total_millions_of_barrels4_week_average_isSet = false;
    m_total_millions_of_barrels4_week_average_isValid = false;

    m_total_millions_of_barrels_daily_average_isSet = false;
    m_total_millions_of_barrels_daily_average_isValid = false;

    m_total_millions_of_barrels_sold_isSet = false;
    m_total_millions_of_barrels_sold_isValid = false;

    m_total_percent_change_in_barrels_from52_weeks_ago_isSet = false;
    m_total_percent_change_in_barrels_from52_weeks_ago_isValid = false;

    m_total_percent_change_in_barrels_from_prior_week_isSet = false;
    m_total_percent_change_in_barrels_from_prior_week_isValid = false;

    m_total_percent_change_in_the4_week_average_from52_weeks_ago_isSet = false;
    m_total_percent_change_in_the4_week_average_from52_weeks_ago_isValid = false;

    m_week_end_date_isSet = false;
    m_week_end_date_isValid = false;
}

void OAIGasWeeklyRecord::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGasWeeklyRecord::fromJsonObject(QJsonObject json) {

    m_average_price_per_gal_regular_gasoline_isValid = ::OpenAPI::fromJsonValue(m_average_price_per_gal_regular_gasoline, json[QString("AveragePricePerGalRegularGasoline")]);
    m_average_price_per_gal_regular_gasoline_isSet = !json[QString("AveragePricePerGalRegularGasoline")].isNull() && m_average_price_per_gal_regular_gasoline_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("Country")]);
    m_country_isSet = !json[QString("Country")].isNull() && m_country_isValid;

    m_padd_code_isValid = ::OpenAPI::fromJsonValue(m_padd_code, json[QString("PADDCode")]);
    m_padd_code_isSet = !json[QString("PADDCode")].isNull() && m_padd_code_isValid;

    m_padd_millionsof_barrels_sold_isValid = ::OpenAPI::fromJsonValue(m_padd_millionsof_barrels_sold, json[QString("PADDMillionsofBarrelsSold")]);
    m_padd_millionsof_barrels_sold_isSet = !json[QString("PADDMillionsofBarrelsSold")].isNull() && m_padd_millionsof_barrels_sold_isValid;

    m_padd_percent_change_in_barrels_from_prior_week_isValid = ::OpenAPI::fromJsonValue(m_padd_percent_change_in_barrels_from_prior_week, json[QString("PADDPercentChangeInBarrelsFromPriorWeek")]);
    m_padd_percent_change_in_barrels_from_prior_week_isSet = !json[QString("PADDPercentChangeInBarrelsFromPriorWeek")].isNull() && m_padd_percent_change_in_barrels_from_prior_week_isValid;

    m_padd_percent_changein_barrelsfrom52_weeks_ago_isValid = ::OpenAPI::fromJsonValue(m_padd_percent_changein_barrelsfrom52_weeks_ago, json[QString("PADDPercentChangeinBarrelsfrom52WeeksAgo")]);
    m_padd_percent_changein_barrelsfrom52_weeks_ago_isSet = !json[QString("PADDPercentChangeinBarrelsfrom52WeeksAgo")].isNull() && m_padd_percent_changein_barrelsfrom52_weeks_ago_isValid;

    m_period_isValid = ::OpenAPI::fromJsonValue(m_period, json[QString("Period")]);
    m_period_isSet = !json[QString("Period")].isNull() && m_period_isValid;

    m_product_line_isValid = ::OpenAPI::fromJsonValue(m_product_line, json[QString("ProductLine")]);
    m_product_line_isSet = !json[QString("ProductLine")].isNull() && m_product_line_isValid;

    m_publication_coverage_period_isValid = ::OpenAPI::fromJsonValue(m_publication_coverage_period, json[QString("PublicationCoveragePeriod")]);
    m_publication_coverage_period_isSet = !json[QString("PublicationCoveragePeriod")].isNull() && m_publication_coverage_period_isValid;

    m_report_type_isValid = ::OpenAPI::fromJsonValue(m_report_type, json[QString("ReportType")]);
    m_report_type_isSet = !json[QString("ReportType")].isNull() && m_report_type_isValid;

    m_sector_isValid = ::OpenAPI::fromJsonValue(m_sector, json[QString("Sector")]);
    m_sector_isSet = !json[QString("Sector")].isNull() && m_sector_isValid;

    m_segment_isValid = ::OpenAPI::fromJsonValue(m_segment, json[QString("Segment")]);
    m_segment_isSet = !json[QString("Segment")].isNull() && m_segment_isValid;

    m_sub_sector_isValid = ::OpenAPI::fromJsonValue(m_sub_sector, json[QString("SubSector")]);
    m_sub_sector_isSet = !json[QString("SubSector")].isNull() && m_sub_sector_isValid;

    m_total_barrels_change_from_prior_week_isValid = ::OpenAPI::fromJsonValue(m_total_barrels_change_from_prior_week, json[QString("TotalBarrelsChangeFromPriorWeek")]);
    m_total_barrels_change_from_prior_week_isSet = !json[QString("TotalBarrelsChangeFromPriorWeek")].isNull() && m_total_barrels_change_from_prior_week_isValid;

    m_total_millions_of_barrels4_week_average_isValid = ::OpenAPI::fromJsonValue(m_total_millions_of_barrels4_week_average, json[QString("TotalMillionsOfBarrels4WeekAverage")]);
    m_total_millions_of_barrels4_week_average_isSet = !json[QString("TotalMillionsOfBarrels4WeekAverage")].isNull() && m_total_millions_of_barrels4_week_average_isValid;

    m_total_millions_of_barrels_daily_average_isValid = ::OpenAPI::fromJsonValue(m_total_millions_of_barrels_daily_average, json[QString("TotalMillionsOfBarrelsDailyAverage")]);
    m_total_millions_of_barrels_daily_average_isSet = !json[QString("TotalMillionsOfBarrelsDailyAverage")].isNull() && m_total_millions_of_barrels_daily_average_isValid;

    m_total_millions_of_barrels_sold_isValid = ::OpenAPI::fromJsonValue(m_total_millions_of_barrels_sold, json[QString("TotalMillionsOfBarrelsSold")]);
    m_total_millions_of_barrels_sold_isSet = !json[QString("TotalMillionsOfBarrelsSold")].isNull() && m_total_millions_of_barrels_sold_isValid;

    m_total_percent_change_in_barrels_from52_weeks_ago_isValid = ::OpenAPI::fromJsonValue(m_total_percent_change_in_barrels_from52_weeks_ago, json[QString("TotalPercentChangeInBarrelsFrom52WeeksAgo")]);
    m_total_percent_change_in_barrels_from52_weeks_ago_isSet = !json[QString("TotalPercentChangeInBarrelsFrom52WeeksAgo")].isNull() && m_total_percent_change_in_barrels_from52_weeks_ago_isValid;

    m_total_percent_change_in_barrels_from_prior_week_isValid = ::OpenAPI::fromJsonValue(m_total_percent_change_in_barrels_from_prior_week, json[QString("TotalPercentChangeInBarrelsFromPriorWeek")]);
    m_total_percent_change_in_barrels_from_prior_week_isSet = !json[QString("TotalPercentChangeInBarrelsFromPriorWeek")].isNull() && m_total_percent_change_in_barrels_from_prior_week_isValid;

    m_total_percent_change_in_the4_week_average_from52_weeks_ago_isValid = ::OpenAPI::fromJsonValue(m_total_percent_change_in_the4_week_average_from52_weeks_ago, json[QString("TotalPercentChangeInThe4WeekAverageFrom52WeeksAgo")]);
    m_total_percent_change_in_the4_week_average_from52_weeks_ago_isSet = !json[QString("TotalPercentChangeInThe4WeekAverageFrom52WeeksAgo")].isNull() && m_total_percent_change_in_the4_week_average_from52_weeks_ago_isValid;

    m_week_end_date_isValid = ::OpenAPI::fromJsonValue(m_week_end_date, json[QString("WeekEndDate")]);
    m_week_end_date_isSet = !json[QString("WeekEndDate")].isNull() && m_week_end_date_isValid;
}

QString OAIGasWeeklyRecord::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGasWeeklyRecord::asJsonObject() const {
    QJsonObject obj;
    if (m_average_price_per_gal_regular_gasoline_isSet) {
        obj.insert(QString("AveragePricePerGalRegularGasoline"), ::OpenAPI::toJsonValue(m_average_price_per_gal_regular_gasoline));
    }
    if (m_country_isSet) {
        obj.insert(QString("Country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_padd_code_isSet) {
        obj.insert(QString("PADDCode"), ::OpenAPI::toJsonValue(m_padd_code));
    }
    if (m_padd_millionsof_barrels_sold_isSet) {
        obj.insert(QString("PADDMillionsofBarrelsSold"), ::OpenAPI::toJsonValue(m_padd_millionsof_barrels_sold));
    }
    if (m_padd_percent_change_in_barrels_from_prior_week_isSet) {
        obj.insert(QString("PADDPercentChangeInBarrelsFromPriorWeek"), ::OpenAPI::toJsonValue(m_padd_percent_change_in_barrels_from_prior_week));
    }
    if (m_padd_percent_changein_barrelsfrom52_weeks_ago_isSet) {
        obj.insert(QString("PADDPercentChangeinBarrelsfrom52WeeksAgo"), ::OpenAPI::toJsonValue(m_padd_percent_changein_barrelsfrom52_weeks_ago));
    }
    if (m_period_isSet) {
        obj.insert(QString("Period"), ::OpenAPI::toJsonValue(m_period));
    }
    if (m_product_line_isSet) {
        obj.insert(QString("ProductLine"), ::OpenAPI::toJsonValue(m_product_line));
    }
    if (m_publication_coverage_period_isSet) {
        obj.insert(QString("PublicationCoveragePeriod"), ::OpenAPI::toJsonValue(m_publication_coverage_period));
    }
    if (m_report_type_isSet) {
        obj.insert(QString("ReportType"), ::OpenAPI::toJsonValue(m_report_type));
    }
    if (m_sector_isSet) {
        obj.insert(QString("Sector"), ::OpenAPI::toJsonValue(m_sector));
    }
    if (m_segment_isSet) {
        obj.insert(QString("Segment"), ::OpenAPI::toJsonValue(m_segment));
    }
    if (m_sub_sector_isSet) {
        obj.insert(QString("SubSector"), ::OpenAPI::toJsonValue(m_sub_sector));
    }
    if (m_total_barrels_change_from_prior_week_isSet) {
        obj.insert(QString("TotalBarrelsChangeFromPriorWeek"), ::OpenAPI::toJsonValue(m_total_barrels_change_from_prior_week));
    }
    if (m_total_millions_of_barrels4_week_average_isSet) {
        obj.insert(QString("TotalMillionsOfBarrels4WeekAverage"), ::OpenAPI::toJsonValue(m_total_millions_of_barrels4_week_average));
    }
    if (m_total_millions_of_barrels_daily_average_isSet) {
        obj.insert(QString("TotalMillionsOfBarrelsDailyAverage"), ::OpenAPI::toJsonValue(m_total_millions_of_barrels_daily_average));
    }
    if (m_total_millions_of_barrels_sold_isSet) {
        obj.insert(QString("TotalMillionsOfBarrelsSold"), ::OpenAPI::toJsonValue(m_total_millions_of_barrels_sold));
    }
    if (m_total_percent_change_in_barrels_from52_weeks_ago_isSet) {
        obj.insert(QString("TotalPercentChangeInBarrelsFrom52WeeksAgo"), ::OpenAPI::toJsonValue(m_total_percent_change_in_barrels_from52_weeks_ago));
    }
    if (m_total_percent_change_in_barrels_from_prior_week_isSet) {
        obj.insert(QString("TotalPercentChangeInBarrelsFromPriorWeek"), ::OpenAPI::toJsonValue(m_total_percent_change_in_barrels_from_prior_week));
    }
    if (m_total_percent_change_in_the4_week_average_from52_weeks_ago_isSet) {
        obj.insert(QString("TotalPercentChangeInThe4WeekAverageFrom52WeeksAgo"), ::OpenAPI::toJsonValue(m_total_percent_change_in_the4_week_average_from52_weeks_ago));
    }
    if (m_week_end_date_isSet) {
        obj.insert(QString("WeekEndDate"), ::OpenAPI::toJsonValue(m_week_end_date));
    }
    return obj;
}

QString OAIGasWeeklyRecord::getAveragePricePerGalRegularGasoline() const {
    return m_average_price_per_gal_regular_gasoline;
}
void OAIGasWeeklyRecord::setAveragePricePerGalRegularGasoline(const QString &average_price_per_gal_regular_gasoline) {
    m_average_price_per_gal_regular_gasoline = average_price_per_gal_regular_gasoline;
    m_average_price_per_gal_regular_gasoline_isSet = true;
}

bool OAIGasWeeklyRecord::is_average_price_per_gal_regular_gasoline_Set() const{
    return m_average_price_per_gal_regular_gasoline_isSet;
}

bool OAIGasWeeklyRecord::is_average_price_per_gal_regular_gasoline_Valid() const{
    return m_average_price_per_gal_regular_gasoline_isValid;
}

QString OAIGasWeeklyRecord::getCountry() const {
    return m_country;
}
void OAIGasWeeklyRecord::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIGasWeeklyRecord::is_country_Set() const{
    return m_country_isSet;
}

bool OAIGasWeeklyRecord::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIGasWeeklyRecord::getPaddCode() const {
    return m_padd_code;
}
void OAIGasWeeklyRecord::setPaddCode(const QString &padd_code) {
    m_padd_code = padd_code;
    m_padd_code_isSet = true;
}

bool OAIGasWeeklyRecord::is_padd_code_Set() const{
    return m_padd_code_isSet;
}

bool OAIGasWeeklyRecord::is_padd_code_Valid() const{
    return m_padd_code_isValid;
}

QString OAIGasWeeklyRecord::getPaddMillionsofBarrelsSold() const {
    return m_padd_millionsof_barrels_sold;
}
void OAIGasWeeklyRecord::setPaddMillionsofBarrelsSold(const QString &padd_millionsof_barrels_sold) {
    m_padd_millionsof_barrels_sold = padd_millionsof_barrels_sold;
    m_padd_millionsof_barrels_sold_isSet = true;
}

bool OAIGasWeeklyRecord::is_padd_millionsof_barrels_sold_Set() const{
    return m_padd_millionsof_barrels_sold_isSet;
}

bool OAIGasWeeklyRecord::is_padd_millionsof_barrels_sold_Valid() const{
    return m_padd_millionsof_barrels_sold_isValid;
}

QString OAIGasWeeklyRecord::getPaddPercentChangeInBarrelsFromPriorWeek() const {
    return m_padd_percent_change_in_barrels_from_prior_week;
}
void OAIGasWeeklyRecord::setPaddPercentChangeInBarrelsFromPriorWeek(const QString &padd_percent_change_in_barrels_from_prior_week) {
    m_padd_percent_change_in_barrels_from_prior_week = padd_percent_change_in_barrels_from_prior_week;
    m_padd_percent_change_in_barrels_from_prior_week_isSet = true;
}

bool OAIGasWeeklyRecord::is_padd_percent_change_in_barrels_from_prior_week_Set() const{
    return m_padd_percent_change_in_barrels_from_prior_week_isSet;
}

bool OAIGasWeeklyRecord::is_padd_percent_change_in_barrels_from_prior_week_Valid() const{
    return m_padd_percent_change_in_barrels_from_prior_week_isValid;
}

QString OAIGasWeeklyRecord::getPaddPercentChangeinBarrelsfrom52WeeksAgo() const {
    return m_padd_percent_changein_barrelsfrom52_weeks_ago;
}
void OAIGasWeeklyRecord::setPaddPercentChangeinBarrelsfrom52WeeksAgo(const QString &padd_percent_changein_barrelsfrom52_weeks_ago) {
    m_padd_percent_changein_barrelsfrom52_weeks_ago = padd_percent_changein_barrelsfrom52_weeks_ago;
    m_padd_percent_changein_barrelsfrom52_weeks_ago_isSet = true;
}

bool OAIGasWeeklyRecord::is_padd_percent_changein_barrelsfrom52_weeks_ago_Set() const{
    return m_padd_percent_changein_barrelsfrom52_weeks_ago_isSet;
}

bool OAIGasWeeklyRecord::is_padd_percent_changein_barrelsfrom52_weeks_ago_Valid() const{
    return m_padd_percent_changein_barrelsfrom52_weeks_ago_isValid;
}

QString OAIGasWeeklyRecord::getPeriod() const {
    return m_period;
}
void OAIGasWeeklyRecord::setPeriod(const QString &period) {
    m_period = period;
    m_period_isSet = true;
}

bool OAIGasWeeklyRecord::is_period_Set() const{
    return m_period_isSet;
}

bool OAIGasWeeklyRecord::is_period_Valid() const{
    return m_period_isValid;
}

QString OAIGasWeeklyRecord::getProductLine() const {
    return m_product_line;
}
void OAIGasWeeklyRecord::setProductLine(const QString &product_line) {
    m_product_line = product_line;
    m_product_line_isSet = true;
}

bool OAIGasWeeklyRecord::is_product_line_Set() const{
    return m_product_line_isSet;
}

bool OAIGasWeeklyRecord::is_product_line_Valid() const{
    return m_product_line_isValid;
}

QString OAIGasWeeklyRecord::getPublicationCoveragePeriod() const {
    return m_publication_coverage_period;
}
void OAIGasWeeklyRecord::setPublicationCoveragePeriod(const QString &publication_coverage_period) {
    m_publication_coverage_period = publication_coverage_period;
    m_publication_coverage_period_isSet = true;
}

bool OAIGasWeeklyRecord::is_publication_coverage_period_Set() const{
    return m_publication_coverage_period_isSet;
}

bool OAIGasWeeklyRecord::is_publication_coverage_period_Valid() const{
    return m_publication_coverage_period_isValid;
}

QString OAIGasWeeklyRecord::getReportType() const {
    return m_report_type;
}
void OAIGasWeeklyRecord::setReportType(const QString &report_type) {
    m_report_type = report_type;
    m_report_type_isSet = true;
}

bool OAIGasWeeklyRecord::is_report_type_Set() const{
    return m_report_type_isSet;
}

bool OAIGasWeeklyRecord::is_report_type_Valid() const{
    return m_report_type_isValid;
}

QString OAIGasWeeklyRecord::getSector() const {
    return m_sector;
}
void OAIGasWeeklyRecord::setSector(const QString &sector) {
    m_sector = sector;
    m_sector_isSet = true;
}

bool OAIGasWeeklyRecord::is_sector_Set() const{
    return m_sector_isSet;
}

bool OAIGasWeeklyRecord::is_sector_Valid() const{
    return m_sector_isValid;
}

QString OAIGasWeeklyRecord::getSegment() const {
    return m_segment;
}
void OAIGasWeeklyRecord::setSegment(const QString &segment) {
    m_segment = segment;
    m_segment_isSet = true;
}

bool OAIGasWeeklyRecord::is_segment_Set() const{
    return m_segment_isSet;
}

bool OAIGasWeeklyRecord::is_segment_Valid() const{
    return m_segment_isValid;
}

QString OAIGasWeeklyRecord::getSubSector() const {
    return m_sub_sector;
}
void OAIGasWeeklyRecord::setSubSector(const QString &sub_sector) {
    m_sub_sector = sub_sector;
    m_sub_sector_isSet = true;
}

bool OAIGasWeeklyRecord::is_sub_sector_Set() const{
    return m_sub_sector_isSet;
}

bool OAIGasWeeklyRecord::is_sub_sector_Valid() const{
    return m_sub_sector_isValid;
}

QString OAIGasWeeklyRecord::getTotalBarrelsChangeFromPriorWeek() const {
    return m_total_barrels_change_from_prior_week;
}
void OAIGasWeeklyRecord::setTotalBarrelsChangeFromPriorWeek(const QString &total_barrels_change_from_prior_week) {
    m_total_barrels_change_from_prior_week = total_barrels_change_from_prior_week;
    m_total_barrels_change_from_prior_week_isSet = true;
}

bool OAIGasWeeklyRecord::is_total_barrels_change_from_prior_week_Set() const{
    return m_total_barrels_change_from_prior_week_isSet;
}

bool OAIGasWeeklyRecord::is_total_barrels_change_from_prior_week_Valid() const{
    return m_total_barrels_change_from_prior_week_isValid;
}

QString OAIGasWeeklyRecord::getTotalMillionsOfBarrels4WeekAverage() const {
    return m_total_millions_of_barrels4_week_average;
}
void OAIGasWeeklyRecord::setTotalMillionsOfBarrels4WeekAverage(const QString &total_millions_of_barrels4_week_average) {
    m_total_millions_of_barrels4_week_average = total_millions_of_barrels4_week_average;
    m_total_millions_of_barrels4_week_average_isSet = true;
}

bool OAIGasWeeklyRecord::is_total_millions_of_barrels4_week_average_Set() const{
    return m_total_millions_of_barrels4_week_average_isSet;
}

bool OAIGasWeeklyRecord::is_total_millions_of_barrels4_week_average_Valid() const{
    return m_total_millions_of_barrels4_week_average_isValid;
}

QString OAIGasWeeklyRecord::getTotalMillionsOfBarrelsDailyAverage() const {
    return m_total_millions_of_barrels_daily_average;
}
void OAIGasWeeklyRecord::setTotalMillionsOfBarrelsDailyAverage(const QString &total_millions_of_barrels_daily_average) {
    m_total_millions_of_barrels_daily_average = total_millions_of_barrels_daily_average;
    m_total_millions_of_barrels_daily_average_isSet = true;
}

bool OAIGasWeeklyRecord::is_total_millions_of_barrels_daily_average_Set() const{
    return m_total_millions_of_barrels_daily_average_isSet;
}

bool OAIGasWeeklyRecord::is_total_millions_of_barrels_daily_average_Valid() const{
    return m_total_millions_of_barrels_daily_average_isValid;
}

QString OAIGasWeeklyRecord::getTotalMillionsOfBarrelsSold() const {
    return m_total_millions_of_barrels_sold;
}
void OAIGasWeeklyRecord::setTotalMillionsOfBarrelsSold(const QString &total_millions_of_barrels_sold) {
    m_total_millions_of_barrels_sold = total_millions_of_barrels_sold;
    m_total_millions_of_barrels_sold_isSet = true;
}

bool OAIGasWeeklyRecord::is_total_millions_of_barrels_sold_Set() const{
    return m_total_millions_of_barrels_sold_isSet;
}

bool OAIGasWeeklyRecord::is_total_millions_of_barrels_sold_Valid() const{
    return m_total_millions_of_barrels_sold_isValid;
}

QString OAIGasWeeklyRecord::getTotalPercentChangeInBarrelsFrom52WeeksAgo() const {
    return m_total_percent_change_in_barrels_from52_weeks_ago;
}
void OAIGasWeeklyRecord::setTotalPercentChangeInBarrelsFrom52WeeksAgo(const QString &total_percent_change_in_barrels_from52_weeks_ago) {
    m_total_percent_change_in_barrels_from52_weeks_ago = total_percent_change_in_barrels_from52_weeks_ago;
    m_total_percent_change_in_barrels_from52_weeks_ago_isSet = true;
}

bool OAIGasWeeklyRecord::is_total_percent_change_in_barrels_from52_weeks_ago_Set() const{
    return m_total_percent_change_in_barrels_from52_weeks_ago_isSet;
}

bool OAIGasWeeklyRecord::is_total_percent_change_in_barrels_from52_weeks_ago_Valid() const{
    return m_total_percent_change_in_barrels_from52_weeks_ago_isValid;
}

QString OAIGasWeeklyRecord::getTotalPercentChangeInBarrelsFromPriorWeek() const {
    return m_total_percent_change_in_barrels_from_prior_week;
}
void OAIGasWeeklyRecord::setTotalPercentChangeInBarrelsFromPriorWeek(const QString &total_percent_change_in_barrels_from_prior_week) {
    m_total_percent_change_in_barrels_from_prior_week = total_percent_change_in_barrels_from_prior_week;
    m_total_percent_change_in_barrels_from_prior_week_isSet = true;
}

bool OAIGasWeeklyRecord::is_total_percent_change_in_barrels_from_prior_week_Set() const{
    return m_total_percent_change_in_barrels_from_prior_week_isSet;
}

bool OAIGasWeeklyRecord::is_total_percent_change_in_barrels_from_prior_week_Valid() const{
    return m_total_percent_change_in_barrels_from_prior_week_isValid;
}

QString OAIGasWeeklyRecord::getTotalPercentChangeInThe4WeekAverageFrom52WeeksAgo() const {
    return m_total_percent_change_in_the4_week_average_from52_weeks_ago;
}
void OAIGasWeeklyRecord::setTotalPercentChangeInThe4WeekAverageFrom52WeeksAgo(const QString &total_percent_change_in_the4_week_average_from52_weeks_ago) {
    m_total_percent_change_in_the4_week_average_from52_weeks_ago = total_percent_change_in_the4_week_average_from52_weeks_ago;
    m_total_percent_change_in_the4_week_average_from52_weeks_ago_isSet = true;
}

bool OAIGasWeeklyRecord::is_total_percent_change_in_the4_week_average_from52_weeks_ago_Set() const{
    return m_total_percent_change_in_the4_week_average_from52_weeks_ago_isSet;
}

bool OAIGasWeeklyRecord::is_total_percent_change_in_the4_week_average_from52_weeks_ago_Valid() const{
    return m_total_percent_change_in_the4_week_average_from52_weeks_ago_isValid;
}

QString OAIGasWeeklyRecord::getWeekEndDate() const {
    return m_week_end_date;
}
void OAIGasWeeklyRecord::setWeekEndDate(const QString &week_end_date) {
    m_week_end_date = week_end_date;
    m_week_end_date_isSet = true;
}

bool OAIGasWeeklyRecord::is_week_end_date_Set() const{
    return m_week_end_date_isSet;
}

bool OAIGasWeeklyRecord::is_week_end_date_Valid() const{
    return m_week_end_date_isValid;
}

bool OAIGasWeeklyRecord::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_price_per_gal_regular_gasoline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_padd_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_padd_millionsof_barrels_sold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_padd_percent_change_in_barrels_from_prior_week_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_padd_percent_changein_barrelsfrom52_weeks_ago_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_line_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publication_coverage_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sector_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_sector_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_barrels_change_from_prior_week_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_millions_of_barrels4_week_average_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_millions_of_barrels_daily_average_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_millions_of_barrels_sold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_percent_change_in_barrels_from52_weeks_ago_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_percent_change_in_barrels_from_prior_week_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_percent_change_in_the4_week_average_from52_weeks_ago_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_week_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGasWeeklyRecord::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
