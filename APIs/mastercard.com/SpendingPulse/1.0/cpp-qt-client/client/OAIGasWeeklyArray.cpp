/**
 * Spending Pulse
 * This API will provide monthly data which includes metrics such as sales volume and growth rate.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGasWeeklyArray.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGasWeeklyArray::OAIGasWeeklyArray(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGasWeeklyArray::OAIGasWeeklyArray() {
    this->initializeModel();
}

OAIGasWeeklyArray::~OAIGasWeeklyArray() {}

void OAIGasWeeklyArray::initializeModel() {

    m_gas_weekly_record_isSet = false;
    m_gas_weekly_record_isValid = false;
}

void OAIGasWeeklyArray::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGasWeeklyArray::fromJsonObject(QJsonObject json) {

    m_gas_weekly_record_isValid = ::OpenAPI::fromJsonValue(m_gas_weekly_record, json[QString("GasWeeklyRecord")]);
    m_gas_weekly_record_isSet = !json[QString("GasWeeklyRecord")].isNull() && m_gas_weekly_record_isValid;
}

QString OAIGasWeeklyArray::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGasWeeklyArray::asJsonObject() const {
    QJsonObject obj;
    if (m_gas_weekly_record.size() > 0) {
        obj.insert(QString("GasWeeklyRecord"), ::OpenAPI::toJsonValue(m_gas_weekly_record));
    }
    return obj;
}

QList<OAIGasWeeklyRecord> OAIGasWeeklyArray::getGasWeeklyRecord() const {
    return m_gas_weekly_record;
}
void OAIGasWeeklyArray::setGasWeeklyRecord(const QList<OAIGasWeeklyRecord> &gas_weekly_record) {
    m_gas_weekly_record = gas_weekly_record;
    m_gas_weekly_record_isSet = true;
}

bool OAIGasWeeklyArray::is_gas_weekly_record_Set() const{
    return m_gas_weekly_record_isSet;
}

bool OAIGasWeeklyArray::is_gas_weekly_record_Valid() const{
    return m_gas_weekly_record_isValid;
}

bool OAIGasWeeklyArray::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gas_weekly_record.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGasWeeklyArray::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
