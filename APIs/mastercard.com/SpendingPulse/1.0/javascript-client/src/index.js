/**
 * Spending Pulse
 * This API will provide monthly data which includes metrics such as sales volume and growth rate.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Error from './model/Error';
import ErrorSchema from './model/ErrorSchema';
import Errors from './model/Errors';
import GasWeeklyArray from './model/GasWeeklyArray';
import GasWeeklyList from './model/GasWeeklyList';
import GasWeeklyListResponse from './model/GasWeeklyListResponse';
import GasWeeklyRecord from './model/GasWeeklyRecord';
import Parameter from './model/Parameter';
import ParameterArray from './model/ParameterArray';
import ParameterList from './model/ParameterList';
import ParameterListResponse from './model/ParameterListResponse';
import SpendingPulseArray from './model/SpendingPulseArray';
import SpendingPulseList from './model/SpendingPulseList';
import SpendingPulseListResponse from './model/SpendingPulseListResponse';
import SpendingPulseRecord from './model/SpendingPulseRecord';
import Subscription from './model/Subscription';
import SubscriptionArray from './model/SubscriptionArray';
import SubscriptionList from './model/SubscriptionList';
import SubscriptionListResponse from './model/SubscriptionListResponse';
import GasWeeklyApi from './api/GasWeeklyApi';
import ParametersApi from './api/ParametersApi';
import SpendingPulseReportApi from './api/SpendingPulseReportApi';
import SubscriptionApi from './api/SubscriptionApi';


/**
* This API will provide monthly data which includes metrics such as sales volume and growth rate..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SpendingPulse = require('index'); // See note below*.
* var xxxSvc = new SpendingPulse.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SpendingPulse.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SpendingPulse.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SpendingPulse.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorSchema model constructor.
     * @property {module:model/ErrorSchema}
     */
    ErrorSchema,

    /**
     * The Errors model constructor.
     * @property {module:model/Errors}
     */
    Errors,

    /**
     * The GasWeeklyArray model constructor.
     * @property {module:model/GasWeeklyArray}
     */
    GasWeeklyArray,

    /**
     * The GasWeeklyList model constructor.
     * @property {module:model/GasWeeklyList}
     */
    GasWeeklyList,

    /**
     * The GasWeeklyListResponse model constructor.
     * @property {module:model/GasWeeklyListResponse}
     */
    GasWeeklyListResponse,

    /**
     * The GasWeeklyRecord model constructor.
     * @property {module:model/GasWeeklyRecord}
     */
    GasWeeklyRecord,

    /**
     * The Parameter model constructor.
     * @property {module:model/Parameter}
     */
    Parameter,

    /**
     * The ParameterArray model constructor.
     * @property {module:model/ParameterArray}
     */
    ParameterArray,

    /**
     * The ParameterList model constructor.
     * @property {module:model/ParameterList}
     */
    ParameterList,

    /**
     * The ParameterListResponse model constructor.
     * @property {module:model/ParameterListResponse}
     */
    ParameterListResponse,

    /**
     * The SpendingPulseArray model constructor.
     * @property {module:model/SpendingPulseArray}
     */
    SpendingPulseArray,

    /**
     * The SpendingPulseList model constructor.
     * @property {module:model/SpendingPulseList}
     */
    SpendingPulseList,

    /**
     * The SpendingPulseListResponse model constructor.
     * @property {module:model/SpendingPulseListResponse}
     */
    SpendingPulseListResponse,

    /**
     * The SpendingPulseRecord model constructor.
     * @property {module:model/SpendingPulseRecord}
     */
    SpendingPulseRecord,

    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription,

    /**
     * The SubscriptionArray model constructor.
     * @property {module:model/SubscriptionArray}
     */
    SubscriptionArray,

    /**
     * The SubscriptionList model constructor.
     * @property {module:model/SubscriptionList}
     */
    SubscriptionList,

    /**
     * The SubscriptionListResponse model constructor.
     * @property {module:model/SubscriptionListResponse}
     */
    SubscriptionListResponse,

    /**
    * The GasWeeklyApi service constructor.
    * @property {module:api/GasWeeklyApi}
    */
    GasWeeklyApi,

    /**
    * The ParametersApi service constructor.
    * @property {module:api/ParametersApi}
    */
    ParametersApi,

    /**
    * The SpendingPulseReportApi service constructor.
    * @property {module:api/SpendingPulseReportApi}
    */
    SpendingPulseReportApi,

    /**
    * The SubscriptionApi service constructor.
    * @property {module:api/SubscriptionApi}
    */
    SubscriptionApi
};
