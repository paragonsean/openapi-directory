/**
 * Spending Pulse
 * This API will provide monthly data which includes metrics such as sales volume and growth rate.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SpendingPulse);
  }
}(this, function(expect, SpendingPulse) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SpendingPulse.SpendingPulseRecord();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SpendingPulseRecord', function() {
    it('should create an instance of SpendingPulseRecord', function() {
      // uncomment below and update the code to test SpendingPulseRecord
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be.a(SpendingPulse.SpendingPulseRecord);
    });

    it('should have the property country (base name: "Country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property currencyOfForSalesValue (base name: "CurrencyOfForSalesValue")', function() {
      // uncomment below and update the code to test the property currencyOfForSalesValue
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property ecomm (base name: "Ecomm")', function() {
      // uncomment below and update the code to test the property ecomm
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property impliedDeflatorMonthOverMonthChange (base name: "ImpliedDeflatorMonthOverMonthChange")', function() {
      // uncomment below and update the code to test the property impliedDeflatorMonthOverMonthChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property impliedDeflatorYearOverYearChange (base name: "ImpliedDeflatorYearOverYearChange")', function() {
      // uncomment below and update the code to test the property impliedDeflatorYearOverYearChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property nonGregorianReportingPeriod (base name: "NonGregorianReportingPeriod")', function() {
      // uncomment below and update the code to test the property nonGregorianReportingPeriod
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property period (base name: "Period")', function() {
      // uncomment below and update the code to test the property period
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property periodEndDate (base name: "PeriodEndDate")', function() {
      // uncomment below and update the code to test the property periodEndDate
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property periodStartDate (base name: "PeriodStartDate")', function() {
      // uncomment below and update the code to test the property periodStartDate
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property priceAdjustmentFlag (base name: "PriceAdjustmentFlag")', function() {
      // uncomment below and update the code to test the property priceAdjustmentFlag
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property priceIndex3MonthMovingAverageChange (base name: "PriceIndex3MonthMovingAverageChange")', function() {
      // uncomment below and update the code to test the property priceIndex3MonthMovingAverageChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property priceIndexMonthOverMonthChange (base name: "PriceIndexMonthOverMonthChange")', function() {
      // uncomment below and update the code to test the property priceIndexMonthOverMonthChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property priceIndexValue (base name: "PriceIndexValue")', function() {
      // uncomment below and update the code to test the property priceIndexValue
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property priceIndexYearOverYearChange (base name: "PriceIndexYearOverYearChange")', function() {
      // uncomment below and update the code to test the property priceIndexYearOverYearChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property productLine (base name: "ProductLine")', function() {
      // uncomment below and update the code to test the property productLine
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property publicationCoveragePeriod (base name: "PublicationCoveragePeriod")', function() {
      // uncomment below and update the code to test the property publicationCoveragePeriod
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property reportType (base name: "ReportType")', function() {
      // uncomment below and update the code to test the property reportType
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property reportingCalender (base name: "ReportingCalender")', function() {
      // uncomment below and update the code to test the property reportingCalender
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property sales3MonthMovingAverageChange (base name: "Sales3MonthMovingAverageChange")', function() {
      // uncomment below and update the code to test the property sales3MonthMovingAverageChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property salesMonthOverMonthChange (base name: "SalesMonthOverMonthChange")', function() {
      // uncomment below and update the code to test the property salesMonthOverMonthChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property salesValueIndex (base name: "SalesValueIndex")', function() {
      // uncomment below and update the code to test the property salesValueIndex
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property salesYearOverYearChange (base name: "SalesYearOverYearChange")', function() {
      // uncomment below and update the code to test the property salesYearOverYearChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property salesYearToDateChange (base name: "SalesYearToDateChange")', function() {
      // uncomment below and update the code to test the property salesYearToDateChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property sameStoreSalesIndex3MonthMovingAverageChange (base name: "SameStoreSalesIndex3MonthMovingAverageChange")', function() {
      // uncomment below and update the code to test the property sameStoreSalesIndex3MonthMovingAverageChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property sameStoreSalesIndexYearOverYearChange (base name: "SameStoreSalesIndexYearOverYearChange")', function() {
      // uncomment below and update the code to test the property sameStoreSalesIndexYearOverYearChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property seasonalAdjustmentFlag (base name: "SeasonalAdjustmentFlag")', function() {
      // uncomment below and update the code to test the property seasonalAdjustmentFlag
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property sector (base name: "Sector")', function() {
      // uncomment below and update the code to test the property sector
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property segment (base name: "Segment")', function() {
      // uncomment below and update the code to test the property segment
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property subGeographyValue (base name: "SubGeographyValue")', function() {
      // uncomment below and update the code to test the property subGeographyValue
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property subSector (base name: "SubSector")', function() {
      // uncomment below and update the code to test the property subSector
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property transactionIndex3MonthMovingAverageChange (base name: "TransactionIndex3MonthMovingAverageChange")', function() {
      // uncomment below and update the code to test the property transactionIndex3MonthMovingAverageChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property transactionIndexMonthOverMonthChange (base name: "TransactionIndexMonthOverMonthChange")', function() {
      // uncomment below and update the code to test the property transactionIndexMonthOverMonthChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property transactionIndexValue (base name: "TransactionIndexValue")', function() {
      // uncomment below and update the code to test the property transactionIndexValue
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

    it('should have the property transactionIndexYearOverYearChange (base name: "TransactionIndexYearOverYearChange")', function() {
      // uncomment below and update the code to test the property transactionIndexYearOverYearChange
      //var instance = new SpendingPulse.SpendingPulseRecord();
      //expect(instance).to.be();
    });

  });

}));
