# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gas_weekly_array import GasWeeklyArray
from openapi_server import util


class GasWeeklyList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: str=None, gas_weekly_array: GasWeeklyArray=None, message: str=None):
        """GasWeeklyList - a model defined in OpenAPI

        :param count: The count of this GasWeeklyList.
        :param gas_weekly_array: The gas_weekly_array of this GasWeeklyList.
        :param message: The message of this GasWeeklyList.
        """
        self.openapi_types = {
            'count': str,
            'gas_weekly_array': GasWeeklyArray,
            'message': str
        }

        self.attribute_map = {
            'count': 'Count',
            'gas_weekly_array': 'GasWeeklyArray',
            'message': 'Message'
        }

        self._count = count
        self._gas_weekly_array = gas_weekly_array
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GasWeeklyList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GasWeeklyList of this GasWeeklyList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this GasWeeklyList.

        Total number of records returned from the query.

        :return: The count of this GasWeeklyList.
        :rtype: str
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this GasWeeklyList.

        Total number of records returned from the query.

        :param count: The count of this GasWeeklyList.
        :type count: str
        """

        self._count = count

    @property
    def gas_weekly_array(self):
        """Gets the gas_weekly_array of this GasWeeklyList.


        :return: The gas_weekly_array of this GasWeeklyList.
        :rtype: GasWeeklyArray
        """
        return self._gas_weekly_array

    @gas_weekly_array.setter
    def gas_weekly_array(self, gas_weekly_array):
        """Sets the gas_weekly_array of this GasWeeklyList.


        :param gas_weekly_array: The gas_weekly_array of this GasWeeklyList.
        :type gas_weekly_array: GasWeeklyArray
        """

        self._gas_weekly_array = gas_weekly_array

    @property
    def message(self):
        """Gets the message of this GasWeeklyList.

        Success/Failure.

        :return: The message of this GasWeeklyList.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GasWeeklyList.

        Success/Failure.

        :param message: The message of this GasWeeklyList.
        :type message: str
        """

        self._message = message
