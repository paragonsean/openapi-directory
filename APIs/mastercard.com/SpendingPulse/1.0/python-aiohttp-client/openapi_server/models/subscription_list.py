# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subscription_array import SubscriptionArray
from openapi_server import util


class SubscriptionList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: str=None, message: str=None, subscription_array: SubscriptionArray=None):
        """SubscriptionList - a model defined in OpenAPI

        :param count: The count of this SubscriptionList.
        :param message: The message of this SubscriptionList.
        :param subscription_array: The subscription_array of this SubscriptionList.
        """
        self.openapi_types = {
            'count': str,
            'message': str,
            'subscription_array': SubscriptionArray
        }

        self.attribute_map = {
            'count': 'Count',
            'message': 'Message',
            'subscription_array': 'SubscriptionArray'
        }

        self._count = count
        self._message = message
        self._subscription_array = subscription_array

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionList of this SubscriptionList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this SubscriptionList.

        Total number of records returned from the query.

        :return: The count of this SubscriptionList.
        :rtype: str
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this SubscriptionList.

        Total number of records returned from the query.

        :param count: The count of this SubscriptionList.
        :type count: str
        """

        self._count = count

    @property
    def message(self):
        """Gets the message of this SubscriptionList.

        Success/Failure

        :return: The message of this SubscriptionList.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this SubscriptionList.

        Success/Failure

        :param message: The message of this SubscriptionList.
        :type message: str
        """

        self._message = message

    @property
    def subscription_array(self):
        """Gets the subscription_array of this SubscriptionList.


        :return: The subscription_array of this SubscriptionList.
        :rtype: SubscriptionArray
        """
        return self._subscription_array

    @subscription_array.setter
    def subscription_array(self, subscription_array):
        """Sets the subscription_array of this SubscriptionList.


        :param subscription_array: The subscription_array of this SubscriptionList.
        :type subscription_array: SubscriptionArray
        """

        self._subscription_array = subscription_array
