/**
 * API for the Settlement Currency Rate converter
 * This API provides a range of functions to get back currency conversion rates and amounts based on current Mastercard currency conversion values.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICurrency.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICurrency::OAICurrency(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICurrency::OAICurrency() {
    this->initializeModel();
}

OAICurrency::~OAICurrency() {}

void OAICurrency::initializeModel() {

    m_alpha_cd_isSet = false;
    m_alpha_cd_isValid = false;

    m_curr_nam_isSet = false;
    m_curr_nam_isValid = false;
}

void OAICurrency::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICurrency::fromJsonObject(QJsonObject json) {

    m_alpha_cd_isValid = ::OpenAPI::fromJsonValue(m_alpha_cd, json[QString("alphaCd")]);
    m_alpha_cd_isSet = !json[QString("alphaCd")].isNull() && m_alpha_cd_isValid;

    m_curr_nam_isValid = ::OpenAPI::fromJsonValue(m_curr_nam, json[QString("currNam")]);
    m_curr_nam_isSet = !json[QString("currNam")].isNull() && m_curr_nam_isValid;
}

QString OAICurrency::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICurrency::asJsonObject() const {
    QJsonObject obj;
    if (m_alpha_cd_isSet) {
        obj.insert(QString("alphaCd"), ::OpenAPI::toJsonValue(m_alpha_cd));
    }
    if (m_curr_nam_isSet) {
        obj.insert(QString("currNam"), ::OpenAPI::toJsonValue(m_curr_nam));
    }
    return obj;
}

QString OAICurrency::getAlphaCd() const {
    return m_alpha_cd;
}
void OAICurrency::setAlphaCd(const QString &alpha_cd) {
    m_alpha_cd = alpha_cd;
    m_alpha_cd_isSet = true;
}

bool OAICurrency::is_alpha_cd_Set() const{
    return m_alpha_cd_isSet;
}

bool OAICurrency::is_alpha_cd_Valid() const{
    return m_alpha_cd_isValid;
}

QString OAICurrency::getCurrNam() const {
    return m_curr_nam;
}
void OAICurrency::setCurrNam(const QString &curr_nam) {
    m_curr_nam = curr_nam;
    m_curr_nam_isSet = true;
}

bool OAICurrency::is_curr_nam_Set() const{
    return m_curr_nam_isSet;
}

bool OAICurrency::is_curr_nam_Valid() const{
    return m_curr_nam_isValid;
}

bool OAICurrency::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alpha_cd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_curr_nam_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICurrency::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
