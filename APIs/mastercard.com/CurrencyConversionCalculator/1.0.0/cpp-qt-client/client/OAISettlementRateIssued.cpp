/**
 * API for the Settlement Currency Rate converter
 * This API provides a range of functions to get back currency conversion rates and amounts based on current Mastercard currency conversion values.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISettlementRateIssued.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISettlementRateIssued::OAISettlementRateIssued(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISettlementRateIssued::OAISettlementRateIssued() {
    this->initializeModel();
}

OAISettlementRateIssued::~OAISettlementRateIssued() {}

void OAISettlementRateIssued::initializeModel() {

    m_rate_issued_isSet = false;
    m_rate_issued_isValid = false;
}

void OAISettlementRateIssued::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISettlementRateIssued::fromJsonObject(QJsonObject json) {

    m_rate_issued_isValid = ::OpenAPI::fromJsonValue(m_rate_issued, json[QString("rateIssued")]);
    m_rate_issued_isSet = !json[QString("rateIssued")].isNull() && m_rate_issued_isValid;
}

QString OAISettlementRateIssued::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISettlementRateIssued::asJsonObject() const {
    QJsonObject obj;
    if (m_rate_issued_isSet) {
        obj.insert(QString("rateIssued"), ::OpenAPI::toJsonValue(m_rate_issued));
    }
    return obj;
}

QString OAISettlementRateIssued::getRateIssued() const {
    return m_rate_issued;
}
void OAISettlementRateIssued::setRateIssued(const QString &rate_issued) {
    m_rate_issued = rate_issued;
    m_rate_issued_isSet = true;
}

bool OAISettlementRateIssued::is_rate_issued_Set() const{
    return m_rate_issued_isSet;
}

bool OAISettlementRateIssued::is_rate_issued_Valid() const{
    return m_rate_issued_isValid;
}

bool OAISettlementRateIssued::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rate_issued_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISettlementRateIssued::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
