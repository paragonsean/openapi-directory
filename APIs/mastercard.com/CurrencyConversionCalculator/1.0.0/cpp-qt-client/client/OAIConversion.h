/**
 * API for the Settlement Currency Rate converter
 * This API provides a range of functions to get back currency conversion rates and amounts based on current Mastercard currency conversion values.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConversion.h
 *
 * 
 */

#ifndef OAIConversion_H
#define OAIConversion_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConversion : public OAIObject {
public:
    OAIConversion();
    OAIConversion(QString json);
    ~OAIConversion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBankFee() const;
    void setBankFee(const double &bank_fee);
    bool is_bank_fee_Set() const;
    bool is_bank_fee_Valid() const;

    double getConversionRate() const;
    void setConversionRate(const double &conversion_rate);
    bool is_conversion_rate_Set() const;
    bool is_conversion_rate_Valid() const;

    double getCrdhldBillAmt() const;
    void setCrdhldBillAmt(const double &crdhld_bill_amt);
    bool is_crdhld_bill_amt_Set() const;
    bool is_crdhld_bill_amt_Valid() const;

    QString getCrdhldBillCurr() const;
    void setCrdhldBillCurr(const QString &crdhld_bill_curr);
    bool is_crdhld_bill_curr_Set() const;
    bool is_crdhld_bill_curr_Valid() const;

    QString getErrorCode() const;
    void setErrorCode(const QString &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QString getFxDate() const;
    void setFxDate(const QString &fx_date);
    bool is_fx_date_Set() const;
    bool is_fx_date_Valid() const;

    double getTransAmt() const;
    void setTransAmt(const double &trans_amt);
    bool is_trans_amt_Set() const;
    bool is_trans_amt_Valid() const;

    QString getTransCurr() const;
    void setTransCurr(const QString &trans_curr);
    bool is_trans_curr_Set() const;
    bool is_trans_curr_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_bank_fee;
    bool m_bank_fee_isSet;
    bool m_bank_fee_isValid;

    double m_conversion_rate;
    bool m_conversion_rate_isSet;
    bool m_conversion_rate_isValid;

    double m_crdhld_bill_amt;
    bool m_crdhld_bill_amt_isSet;
    bool m_crdhld_bill_amt_isValid;

    QString m_crdhld_bill_curr;
    bool m_crdhld_bill_curr_isSet;
    bool m_crdhld_bill_curr_isValid;

    QString m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QString m_fx_date;
    bool m_fx_date_isSet;
    bool m_fx_date_isValid;

    double m_trans_amt;
    bool m_trans_amt_isSet;
    bool m_trans_amt_isValid;

    QString m_trans_curr;
    bool m_trans_curr_isSet;
    bool m_trans_curr_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConversion)

#endif // OAIConversion_H
