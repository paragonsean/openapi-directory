# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BillPayAccountValidation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_number: str=None, biller_id: str=None, customer_identifier1: str=None, customer_identifier2: str=None, customer_identifier3: str=None, customer_identifier4: str=None, response_string: str=None, rpps_id: str=None, transaction_amount: str=None):
        """BillPayAccountValidation - a model defined in OpenAPI

        :param account_number: The account_number of this BillPayAccountValidation.
        :param biller_id: The biller_id of this BillPayAccountValidation.
        :param customer_identifier1: The customer_identifier1 of this BillPayAccountValidation.
        :param customer_identifier2: The customer_identifier2 of this BillPayAccountValidation.
        :param customer_identifier3: The customer_identifier3 of this BillPayAccountValidation.
        :param customer_identifier4: The customer_identifier4 of this BillPayAccountValidation.
        :param response_string: The response_string of this BillPayAccountValidation.
        :param rpps_id: The rpps_id of this BillPayAccountValidation.
        :param transaction_amount: The transaction_amount of this BillPayAccountValidation.
        """
        self.openapi_types = {
            'account_number': str,
            'biller_id': str,
            'customer_identifier1': str,
            'customer_identifier2': str,
            'customer_identifier3': str,
            'customer_identifier4': str,
            'response_string': str,
            'rpps_id': str,
            'transaction_amount': str
        }

        self.attribute_map = {
            'account_number': 'AccountNumber',
            'biller_id': 'BillerId',
            'customer_identifier1': 'CustomerIdentifier1',
            'customer_identifier2': 'CustomerIdentifier2',
            'customer_identifier3': 'CustomerIdentifier3',
            'customer_identifier4': 'CustomerIdentifier4',
            'response_string': 'ResponseString',
            'rpps_id': 'RppsId',
            'transaction_amount': 'TransactionAmount'
        }

        self._account_number = account_number
        self._biller_id = biller_id
        self._customer_identifier1 = customer_identifier1
        self._customer_identifier2 = customer_identifier2
        self._customer_identifier3 = customer_identifier3
        self._customer_identifier4 = customer_identifier4
        self._response_string = response_string
        self._rpps_id = rpps_id
        self._transaction_amount = transaction_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillPayAccountValidation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BillPayAccountValidation of this BillPayAccountValidation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_number(self):
        """Gets the account_number of this BillPayAccountValidation.

        Consumer account number populated in the message.  The minimum length is 8 and the maximum length is 22.

        :return: The account_number of this BillPayAccountValidation.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this BillPayAccountValidation.

        Consumer account number populated in the message.  The minimum length is 8 and the maximum length is 22.

        :param account_number: The account_number of this BillPayAccountValidation.
        :type account_number: str
        """

        self._account_number = account_number

    @property
    def biller_id(self):
        """Gets the biller_id of this BillPayAccountValidation.

        Biller ID populated in the message. The maximum length is 10.

        :return: The biller_id of this BillPayAccountValidation.
        :rtype: str
        """
        return self._biller_id

    @biller_id.setter
    def biller_id(self, biller_id):
        """Sets the biller_id of this BillPayAccountValidation.

        Biller ID populated in the message. The maximum length is 10.

        :param biller_id: The biller_id of this BillPayAccountValidation.
        :type biller_id: str
        """

        self._biller_id = biller_id

    @property
    def customer_identifier1(self):
        """Gets the customer_identifier1 of this BillPayAccountValidation.

        Consumer identifier populated in the message.

        :return: The customer_identifier1 of this BillPayAccountValidation.
        :rtype: str
        """
        return self._customer_identifier1

    @customer_identifier1.setter
    def customer_identifier1(self, customer_identifier1):
        """Sets the customer_identifier1 of this BillPayAccountValidation.

        Consumer identifier populated in the message.

        :param customer_identifier1: The customer_identifier1 of this BillPayAccountValidation.
        :type customer_identifier1: str
        """

        self._customer_identifier1 = customer_identifier1

    @property
    def customer_identifier2(self):
        """Gets the customer_identifier2 of this BillPayAccountValidation.

        Consumer identifier populated in the message.

        :return: The customer_identifier2 of this BillPayAccountValidation.
        :rtype: str
        """
        return self._customer_identifier2

    @customer_identifier2.setter
    def customer_identifier2(self, customer_identifier2):
        """Sets the customer_identifier2 of this BillPayAccountValidation.

        Consumer identifier populated in the message.

        :param customer_identifier2: The customer_identifier2 of this BillPayAccountValidation.
        :type customer_identifier2: str
        """

        self._customer_identifier2 = customer_identifier2

    @property
    def customer_identifier3(self):
        """Gets the customer_identifier3 of this BillPayAccountValidation.

        Consumer identifier populated in the message.

        :return: The customer_identifier3 of this BillPayAccountValidation.
        :rtype: str
        """
        return self._customer_identifier3

    @customer_identifier3.setter
    def customer_identifier3(self, customer_identifier3):
        """Sets the customer_identifier3 of this BillPayAccountValidation.

        Consumer identifier populated in the message.

        :param customer_identifier3: The customer_identifier3 of this BillPayAccountValidation.
        :type customer_identifier3: str
        """

        self._customer_identifier3 = customer_identifier3

    @property
    def customer_identifier4(self):
        """Gets the customer_identifier4 of this BillPayAccountValidation.

        Consumer identifier populated in the message.

        :return: The customer_identifier4 of this BillPayAccountValidation.
        :rtype: str
        """
        return self._customer_identifier4

    @customer_identifier4.setter
    def customer_identifier4(self, customer_identifier4):
        """Sets the customer_identifier4 of this BillPayAccountValidation.

        Consumer identifier populated in the message.

        :param customer_identifier4: The customer_identifier4 of this BillPayAccountValidation.
        :type customer_identifier4: str
        """

        self._customer_identifier4 = customer_identifier4

    @property
    def response_string(self):
        """Gets the response_string of this BillPayAccountValidation.

        Indicates if the bill payment transaction information passed all RPPS transaction processing edits for the specified biller ID or indicates errors. The minimum length is 0 and the maximum length is 120.

        :return: The response_string of this BillPayAccountValidation.
        :rtype: str
        """
        return self._response_string

    @response_string.setter
    def response_string(self, response_string):
        """Sets the response_string of this BillPayAccountValidation.

        Indicates if the bill payment transaction information passed all RPPS transaction processing edits for the specified biller ID or indicates errors. The minimum length is 0 and the maximum length is 120.

        :param response_string: The response_string of this BillPayAccountValidation.
        :type response_string: str
        """

        self._response_string = response_string

    @property
    def rpps_id(self):
        """Gets the rpps_id of this BillPayAccountValidation.

        Originator RPPS ID populated in the message.  The maximum length is 8.

        :return: The rpps_id of this BillPayAccountValidation.
        :rtype: str
        """
        return self._rpps_id

    @rpps_id.setter
    def rpps_id(self, rpps_id):
        """Sets the rpps_id of this BillPayAccountValidation.

        Originator RPPS ID populated in the message.  The maximum length is 8.

        :param rpps_id: The rpps_id of this BillPayAccountValidation.
        :type rpps_id: str
        """

        self._rpps_id = rpps_id

    @property
    def transaction_amount(self):
        """Gets the transaction_amount of this BillPayAccountValidation.

        Amount populated in the message.

        :return: The transaction_amount of this BillPayAccountValidation.
        :rtype: str
        """
        return self._transaction_amount

    @transaction_amount.setter
    def transaction_amount(self, transaction_amount):
        """Sets the transaction_amount of this BillPayAccountValidation.

        Amount populated in the message.

        :param transaction_amount: The transaction_amount of this BillPayAccountValidation.
        :type transaction_amount: str
        """

        self._transaction_amount = transaction_amount
