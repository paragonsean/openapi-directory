/**
 * Bill Payment Validator
 * The Bill Payment Validator service allows RPPS origination (payment sender) customers to identify if a potential RPPS transaction would process successfully before transmitting the formal payment transaction, reducing RPPS payment rejects and costly payment processing exceptions.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillPayAccountValidation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillPayAccountValidation::OAIBillPayAccountValidation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillPayAccountValidation::OAIBillPayAccountValidation() {
    this->initializeModel();
}

OAIBillPayAccountValidation::~OAIBillPayAccountValidation() {}

void OAIBillPayAccountValidation::initializeModel() {

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_biller_id_isSet = false;
    m_biller_id_isValid = false;

    m_customer_identifier1_isSet = false;
    m_customer_identifier1_isValid = false;

    m_customer_identifier2_isSet = false;
    m_customer_identifier2_isValid = false;

    m_customer_identifier3_isSet = false;
    m_customer_identifier3_isValid = false;

    m_customer_identifier4_isSet = false;
    m_customer_identifier4_isValid = false;

    m_response_string_isSet = false;
    m_response_string_isValid = false;

    m_rpps_id_isSet = false;
    m_rpps_id_isValid = false;

    m_transaction_amount_isSet = false;
    m_transaction_amount_isValid = false;
}

void OAIBillPayAccountValidation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillPayAccountValidation::fromJsonObject(QJsonObject json) {

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("AccountNumber")]);
    m_account_number_isSet = !json[QString("AccountNumber")].isNull() && m_account_number_isValid;

    m_biller_id_isValid = ::OpenAPI::fromJsonValue(m_biller_id, json[QString("BillerId")]);
    m_biller_id_isSet = !json[QString("BillerId")].isNull() && m_biller_id_isValid;

    m_customer_identifier1_isValid = ::OpenAPI::fromJsonValue(m_customer_identifier1, json[QString("CustomerIdentifier1")]);
    m_customer_identifier1_isSet = !json[QString("CustomerIdentifier1")].isNull() && m_customer_identifier1_isValid;

    m_customer_identifier2_isValid = ::OpenAPI::fromJsonValue(m_customer_identifier2, json[QString("CustomerIdentifier2")]);
    m_customer_identifier2_isSet = !json[QString("CustomerIdentifier2")].isNull() && m_customer_identifier2_isValid;

    m_customer_identifier3_isValid = ::OpenAPI::fromJsonValue(m_customer_identifier3, json[QString("CustomerIdentifier3")]);
    m_customer_identifier3_isSet = !json[QString("CustomerIdentifier3")].isNull() && m_customer_identifier3_isValid;

    m_customer_identifier4_isValid = ::OpenAPI::fromJsonValue(m_customer_identifier4, json[QString("CustomerIdentifier4")]);
    m_customer_identifier4_isSet = !json[QString("CustomerIdentifier4")].isNull() && m_customer_identifier4_isValid;

    m_response_string_isValid = ::OpenAPI::fromJsonValue(m_response_string, json[QString("ResponseString")]);
    m_response_string_isSet = !json[QString("ResponseString")].isNull() && m_response_string_isValid;

    m_rpps_id_isValid = ::OpenAPI::fromJsonValue(m_rpps_id, json[QString("RppsId")]);
    m_rpps_id_isSet = !json[QString("RppsId")].isNull() && m_rpps_id_isValid;

    m_transaction_amount_isValid = ::OpenAPI::fromJsonValue(m_transaction_amount, json[QString("TransactionAmount")]);
    m_transaction_amount_isSet = !json[QString("TransactionAmount")].isNull() && m_transaction_amount_isValid;
}

QString OAIBillPayAccountValidation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillPayAccountValidation::asJsonObject() const {
    QJsonObject obj;
    if (m_account_number_isSet) {
        obj.insert(QString("AccountNumber"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_biller_id_isSet) {
        obj.insert(QString("BillerId"), ::OpenAPI::toJsonValue(m_biller_id));
    }
    if (m_customer_identifier1_isSet) {
        obj.insert(QString("CustomerIdentifier1"), ::OpenAPI::toJsonValue(m_customer_identifier1));
    }
    if (m_customer_identifier2_isSet) {
        obj.insert(QString("CustomerIdentifier2"), ::OpenAPI::toJsonValue(m_customer_identifier2));
    }
    if (m_customer_identifier3_isSet) {
        obj.insert(QString("CustomerIdentifier3"), ::OpenAPI::toJsonValue(m_customer_identifier3));
    }
    if (m_customer_identifier4_isSet) {
        obj.insert(QString("CustomerIdentifier4"), ::OpenAPI::toJsonValue(m_customer_identifier4));
    }
    if (m_response_string_isSet) {
        obj.insert(QString("ResponseString"), ::OpenAPI::toJsonValue(m_response_string));
    }
    if (m_rpps_id_isSet) {
        obj.insert(QString("RppsId"), ::OpenAPI::toJsonValue(m_rpps_id));
    }
    if (m_transaction_amount_isSet) {
        obj.insert(QString("TransactionAmount"), ::OpenAPI::toJsonValue(m_transaction_amount));
    }
    return obj;
}

QString OAIBillPayAccountValidation::getAccountNumber() const {
    return m_account_number;
}
void OAIBillPayAccountValidation::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAIBillPayAccountValidation::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAIBillPayAccountValidation::is_account_number_Valid() const{
    return m_account_number_isValid;
}

QString OAIBillPayAccountValidation::getBillerId() const {
    return m_biller_id;
}
void OAIBillPayAccountValidation::setBillerId(const QString &biller_id) {
    m_biller_id = biller_id;
    m_biller_id_isSet = true;
}

bool OAIBillPayAccountValidation::is_biller_id_Set() const{
    return m_biller_id_isSet;
}

bool OAIBillPayAccountValidation::is_biller_id_Valid() const{
    return m_biller_id_isValid;
}

QString OAIBillPayAccountValidation::getCustomerIdentifier1() const {
    return m_customer_identifier1;
}
void OAIBillPayAccountValidation::setCustomerIdentifier1(const QString &customer_identifier1) {
    m_customer_identifier1 = customer_identifier1;
    m_customer_identifier1_isSet = true;
}

bool OAIBillPayAccountValidation::is_customer_identifier1_Set() const{
    return m_customer_identifier1_isSet;
}

bool OAIBillPayAccountValidation::is_customer_identifier1_Valid() const{
    return m_customer_identifier1_isValid;
}

QString OAIBillPayAccountValidation::getCustomerIdentifier2() const {
    return m_customer_identifier2;
}
void OAIBillPayAccountValidation::setCustomerIdentifier2(const QString &customer_identifier2) {
    m_customer_identifier2 = customer_identifier2;
    m_customer_identifier2_isSet = true;
}

bool OAIBillPayAccountValidation::is_customer_identifier2_Set() const{
    return m_customer_identifier2_isSet;
}

bool OAIBillPayAccountValidation::is_customer_identifier2_Valid() const{
    return m_customer_identifier2_isValid;
}

QString OAIBillPayAccountValidation::getCustomerIdentifier3() const {
    return m_customer_identifier3;
}
void OAIBillPayAccountValidation::setCustomerIdentifier3(const QString &customer_identifier3) {
    m_customer_identifier3 = customer_identifier3;
    m_customer_identifier3_isSet = true;
}

bool OAIBillPayAccountValidation::is_customer_identifier3_Set() const{
    return m_customer_identifier3_isSet;
}

bool OAIBillPayAccountValidation::is_customer_identifier3_Valid() const{
    return m_customer_identifier3_isValid;
}

QString OAIBillPayAccountValidation::getCustomerIdentifier4() const {
    return m_customer_identifier4;
}
void OAIBillPayAccountValidation::setCustomerIdentifier4(const QString &customer_identifier4) {
    m_customer_identifier4 = customer_identifier4;
    m_customer_identifier4_isSet = true;
}

bool OAIBillPayAccountValidation::is_customer_identifier4_Set() const{
    return m_customer_identifier4_isSet;
}

bool OAIBillPayAccountValidation::is_customer_identifier4_Valid() const{
    return m_customer_identifier4_isValid;
}

QString OAIBillPayAccountValidation::getResponseString() const {
    return m_response_string;
}
void OAIBillPayAccountValidation::setResponseString(const QString &response_string) {
    m_response_string = response_string;
    m_response_string_isSet = true;
}

bool OAIBillPayAccountValidation::is_response_string_Set() const{
    return m_response_string_isSet;
}

bool OAIBillPayAccountValidation::is_response_string_Valid() const{
    return m_response_string_isValid;
}

QString OAIBillPayAccountValidation::getRppsId() const {
    return m_rpps_id;
}
void OAIBillPayAccountValidation::setRppsId(const QString &rpps_id) {
    m_rpps_id = rpps_id;
    m_rpps_id_isSet = true;
}

bool OAIBillPayAccountValidation::is_rpps_id_Set() const{
    return m_rpps_id_isSet;
}

bool OAIBillPayAccountValidation::is_rpps_id_Valid() const{
    return m_rpps_id_isValid;
}

QString OAIBillPayAccountValidation::getTransactionAmount() const {
    return m_transaction_amount;
}
void OAIBillPayAccountValidation::setTransactionAmount(const QString &transaction_amount) {
    m_transaction_amount = transaction_amount;
    m_transaction_amount_isSet = true;
}

bool OAIBillPayAccountValidation::is_transaction_amount_Set() const{
    return m_transaction_amount_isSet;
}

bool OAIBillPayAccountValidation::is_transaction_amount_Valid() const{
    return m_transaction_amount_isValid;
}

bool OAIBillPayAccountValidation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_biller_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_identifier1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_identifier2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_identifier3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_identifier4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rpps_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillPayAccountValidation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
