/**
 * Bill Payment Validator
 * The Bill Payment Validator service allows RPPS origination (payment sender) customers to identify if a potential RPPS transaction would process successfully before transmitting the formal payment transaction, reducing RPPS payment rejects and costly payment processing exceptions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BillPayRequest from '../model/BillPayRequest';
import BillPayResponse from '../model/BillPayResponse';
import ErrorResponse from '../model/ErrorResponse';

/**
* RPPSPaymentValidatorAPI service.
* @module api/RPPSPaymentValidatorAPIApi
* @version 1.0
*/
export default class RPPSPaymentValidatorAPIApi {

    /**
    * Constructs a new RPPSPaymentValidatorAPIApi. 
    * @alias module:api/RPPSPaymentValidatorAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the isRoutingValidPost operation.
     * @callback module:api/RPPSPaymentValidatorAPIApi~isRoutingValidPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BillPayResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Bill Payment Validator service returns the processing status for a potential RPPS transaction
     * Bill Payment Validator performs real time transaction validation against the specified Biller ID's account masks, account check digits and all other registered RPPS processing parameters.
     * @param {Object} opts Optional parameters
     * @param {module:model/BillPayRequest} [billPayRequest] Contains the details of the get PAR API request message.
     * @param {module:api/RPPSPaymentValidatorAPIApi~isRoutingValidPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BillPayResponse}
     */
    isRoutingValidPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['billPayRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/JSON'];
      let accepts = ['application/JSON'];
      let returnType = BillPayResponse;
      return this.apiClient.callApi(
        '/isRoutingValid', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
