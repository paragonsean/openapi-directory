/**
 * Bill Payment Validator
 * The Bill Payment Validator service allows RPPS origination (payment sender) customers to identify if a potential RPPS transaction would process successfully before transmitting the formal payment transaction, reducing RPPS payment rejects and costly payment processing exceptions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BillPayAccountValidation model module.
 * @module model/BillPayAccountValidation
 * @version 1.0
 */
class BillPayAccountValidation {
    /**
     * Constructs a new <code>BillPayAccountValidation</code>.
     * @alias module:model/BillPayAccountValidation
     */
    constructor() { 
        
        BillPayAccountValidation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillPayAccountValidation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillPayAccountValidation} obj Optional instance to populate.
     * @return {module:model/BillPayAccountValidation} The populated <code>BillPayAccountValidation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillPayAccountValidation();

            if (data.hasOwnProperty('AccountNumber')) {
                obj['AccountNumber'] = ApiClient.convertToType(data['AccountNumber'], 'String');
            }
            if (data.hasOwnProperty('BillerId')) {
                obj['BillerId'] = ApiClient.convertToType(data['BillerId'], 'String');
            }
            if (data.hasOwnProperty('CustomerIdentifier1')) {
                obj['CustomerIdentifier1'] = ApiClient.convertToType(data['CustomerIdentifier1'], 'String');
            }
            if (data.hasOwnProperty('CustomerIdentifier2')) {
                obj['CustomerIdentifier2'] = ApiClient.convertToType(data['CustomerIdentifier2'], 'String');
            }
            if (data.hasOwnProperty('CustomerIdentifier3')) {
                obj['CustomerIdentifier3'] = ApiClient.convertToType(data['CustomerIdentifier3'], 'String');
            }
            if (data.hasOwnProperty('CustomerIdentifier4')) {
                obj['CustomerIdentifier4'] = ApiClient.convertToType(data['CustomerIdentifier4'], 'String');
            }
            if (data.hasOwnProperty('ResponseString')) {
                obj['ResponseString'] = ApiClient.convertToType(data['ResponseString'], 'String');
            }
            if (data.hasOwnProperty('RppsId')) {
                obj['RppsId'] = ApiClient.convertToType(data['RppsId'], 'String');
            }
            if (data.hasOwnProperty('TransactionAmount')) {
                obj['TransactionAmount'] = ApiClient.convertToType(data['TransactionAmount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillPayAccountValidation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillPayAccountValidation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AccountNumber'] && !(typeof data['AccountNumber'] === 'string' || data['AccountNumber'] instanceof String)) {
            throw new Error("Expected the field `AccountNumber` to be a primitive type in the JSON string but got " + data['AccountNumber']);
        }
        // ensure the json data is a string
        if (data['BillerId'] && !(typeof data['BillerId'] === 'string' || data['BillerId'] instanceof String)) {
            throw new Error("Expected the field `BillerId` to be a primitive type in the JSON string but got " + data['BillerId']);
        }
        // ensure the json data is a string
        if (data['CustomerIdentifier1'] && !(typeof data['CustomerIdentifier1'] === 'string' || data['CustomerIdentifier1'] instanceof String)) {
            throw new Error("Expected the field `CustomerIdentifier1` to be a primitive type in the JSON string but got " + data['CustomerIdentifier1']);
        }
        // ensure the json data is a string
        if (data['CustomerIdentifier2'] && !(typeof data['CustomerIdentifier2'] === 'string' || data['CustomerIdentifier2'] instanceof String)) {
            throw new Error("Expected the field `CustomerIdentifier2` to be a primitive type in the JSON string but got " + data['CustomerIdentifier2']);
        }
        // ensure the json data is a string
        if (data['CustomerIdentifier3'] && !(typeof data['CustomerIdentifier3'] === 'string' || data['CustomerIdentifier3'] instanceof String)) {
            throw new Error("Expected the field `CustomerIdentifier3` to be a primitive type in the JSON string but got " + data['CustomerIdentifier3']);
        }
        // ensure the json data is a string
        if (data['CustomerIdentifier4'] && !(typeof data['CustomerIdentifier4'] === 'string' || data['CustomerIdentifier4'] instanceof String)) {
            throw new Error("Expected the field `CustomerIdentifier4` to be a primitive type in the JSON string but got " + data['CustomerIdentifier4']);
        }
        // ensure the json data is a string
        if (data['ResponseString'] && !(typeof data['ResponseString'] === 'string' || data['ResponseString'] instanceof String)) {
            throw new Error("Expected the field `ResponseString` to be a primitive type in the JSON string but got " + data['ResponseString']);
        }
        // ensure the json data is a string
        if (data['RppsId'] && !(typeof data['RppsId'] === 'string' || data['RppsId'] instanceof String)) {
            throw new Error("Expected the field `RppsId` to be a primitive type in the JSON string but got " + data['RppsId']);
        }
        // ensure the json data is a string
        if (data['TransactionAmount'] && !(typeof data['TransactionAmount'] === 'string' || data['TransactionAmount'] instanceof String)) {
            throw new Error("Expected the field `TransactionAmount` to be a primitive type in the JSON string but got " + data['TransactionAmount']);
        }

        return true;
    }


}



/**
 * Consumer account number populated in the message.  The minimum length is 8 and the maximum length is 22.
 * @member {String} AccountNumber
 */
BillPayAccountValidation.prototype['AccountNumber'] = undefined;

/**
 * Biller ID populated in the message. The maximum length is 10.
 * @member {String} BillerId
 */
BillPayAccountValidation.prototype['BillerId'] = undefined;

/**
 * Consumer identifier populated in the message.
 * @member {String} CustomerIdentifier1
 */
BillPayAccountValidation.prototype['CustomerIdentifier1'] = undefined;

/**
 * Consumer identifier populated in the message.
 * @member {String} CustomerIdentifier2
 */
BillPayAccountValidation.prototype['CustomerIdentifier2'] = undefined;

/**
 * Consumer identifier populated in the message.
 * @member {String} CustomerIdentifier3
 */
BillPayAccountValidation.prototype['CustomerIdentifier3'] = undefined;

/**
 * Consumer identifier populated in the message.
 * @member {String} CustomerIdentifier4
 */
BillPayAccountValidation.prototype['CustomerIdentifier4'] = undefined;

/**
 * Indicates if the bill payment transaction information passed all RPPS transaction processing edits for the specified biller ID or indicates errors. The minimum length is 0 and the maximum length is 120.
 * @member {String} ResponseString
 */
BillPayAccountValidation.prototype['ResponseString'] = undefined;

/**
 * Originator RPPS ID populated in the message.  The maximum length is 8.
 * @member {String} RppsId
 */
BillPayAccountValidation.prototype['RppsId'] = undefined;

/**
 * Amount populated in the message.
 * @member {String} TransactionAmount
 */
BillPayAccountValidation.prototype['TransactionAmount'] = undefined;






export default BillPayAccountValidation;

