# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server import util


class Merchant(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: Address=None, brand_name: str=None, comment: str=None, descriptor_text: str=None, legal_corporate_name: str=None, location_id: int=None, match_confidence_score: int=None, merchant_category: str=None, merchant_dba_name: str=None, phone_number: str=None, sole_proprietor_name: str=None):
        """Merchant - a model defined in OpenAPI

        :param address: The address of this Merchant.
        :param brand_name: The brand_name of this Merchant.
        :param comment: The comment of this Merchant.
        :param descriptor_text: The descriptor_text of this Merchant.
        :param legal_corporate_name: The legal_corporate_name of this Merchant.
        :param location_id: The location_id of this Merchant.
        :param match_confidence_score: The match_confidence_score of this Merchant.
        :param merchant_category: The merchant_category of this Merchant.
        :param merchant_dba_name: The merchant_dba_name of this Merchant.
        :param phone_number: The phone_number of this Merchant.
        :param sole_proprietor_name: The sole_proprietor_name of this Merchant.
        """
        self.openapi_types = {
            'address': Address,
            'brand_name': str,
            'comment': str,
            'descriptor_text': str,
            'legal_corporate_name': str,
            'location_id': int,
            'match_confidence_score': int,
            'merchant_category': str,
            'merchant_dba_name': str,
            'phone_number': str,
            'sole_proprietor_name': str
        }

        self.attribute_map = {
            'address': 'address',
            'brand_name': 'brandName',
            'comment': 'comment',
            'descriptor_text': 'descriptorText',
            'legal_corporate_name': 'legalCorporateName',
            'location_id': 'locationId',
            'match_confidence_score': 'matchConfidenceScore',
            'merchant_category': 'merchantCategory',
            'merchant_dba_name': 'merchantDbaName',
            'phone_number': 'phoneNumber',
            'sole_proprietor_name': 'soleProprietorName'
        }

        self._address = address
        self._brand_name = brand_name
        self._comment = comment
        self._descriptor_text = descriptor_text
        self._legal_corporate_name = legal_corporate_name
        self._location_id = location_id
        self._match_confidence_score = match_confidence_score
        self._merchant_category = merchant_category
        self._merchant_dba_name = merchant_dba_name
        self._phone_number = phone_number
        self._sole_proprietor_name = sole_proprietor_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Merchant':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Merchant of this Merchant.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this Merchant.


        :return: The address of this Merchant.
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Merchant.


        :param address: The address of this Merchant.
        :type address: Address
        """

        self._address = address

    @property
    def brand_name(self):
        """Gets the brand_name of this Merchant.

        The brand name of the merchant.

        :return: The brand_name of this Merchant.
        :rtype: str
        """
        return self._brand_name

    @brand_name.setter
    def brand_name(self, brand_name):
        """Sets the brand_name of this Merchant.

        The brand name of the merchant.

        :param brand_name: The brand_name of this Merchant.
        :type brand_name: str
        """

        self._brand_name = brand_name

    @property
    def comment(self):
        """Gets the comment of this Merchant.

        Notes or comments returned about the merchant.

        :return: The comment of this Merchant.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this Merchant.

        Notes or comments returned about the merchant.

        :param comment: The comment of this Merchant.
        :type comment: str
        """

        self._comment = comment

    @property
    def descriptor_text(self):
        """Gets the descriptor_text of this Merchant.

        Descriptor for the merchant provided by the Merchant Service Provider(MSP).

        :return: The descriptor_text of this Merchant.
        :rtype: str
        """
        return self._descriptor_text

    @descriptor_text.setter
    def descriptor_text(self, descriptor_text):
        """Sets the descriptor_text of this Merchant.

        Descriptor for the merchant provided by the Merchant Service Provider(MSP).

        :param descriptor_text: The descriptor_text of this Merchant.
        :type descriptor_text: str
        """

        self._descriptor_text = descriptor_text

    @property
    def legal_corporate_name(self):
        """Gets the legal_corporate_name of this Merchant.

        Corporate legal name of the merchant.

        :return: The legal_corporate_name of this Merchant.
        :rtype: str
        """
        return self._legal_corporate_name

    @legal_corporate_name.setter
    def legal_corporate_name(self, legal_corporate_name):
        """Sets the legal_corporate_name of this Merchant.

        Corporate legal name of the merchant.

        :param legal_corporate_name: The legal_corporate_name of this Merchant.
        :type legal_corporate_name: str
        """

        self._legal_corporate_name = legal_corporate_name

    @property
    def location_id(self):
        """Gets the location_id of this Merchant.

        Merchant specific location identifier.

        :return: The location_id of this Merchant.
        :rtype: int
        """
        return self._location_id

    @location_id.setter
    def location_id(self, location_id):
        """Sets the location_id of this Merchant.

        Merchant specific location identifier.

        :param location_id: The location_id of this Merchant.
        :type location_id: int
        """

        self._location_id = location_id

    @property
    def match_confidence_score(self):
        """Gets the match_confidence_score of this Merchant.

        Confidence score (%) to help clients understand the quality of the search results.

        :return: The match_confidence_score of this Merchant.
        :rtype: int
        """
        return self._match_confidence_score

    @match_confidence_score.setter
    def match_confidence_score(self, match_confidence_score):
        """Sets the match_confidence_score of this Merchant.

        Confidence score (%) to help clients understand the quality of the search results.

        :param match_confidence_score: The match_confidence_score of this Merchant.
        :type match_confidence_score: int
        """

        self._match_confidence_score = match_confidence_score

    @property
    def merchant_category(self):
        """Gets the merchant_category of this Merchant.

        Merchant category code and description associated with the merchant category code for the merchant.   5814 - FAST FOOD RESTAURANTS, 5541 - SERVICE STATIONS WITH OR WITHOUT ANCILLARY SERVICE,   5735 - RECORD SHOPS, 5971 - ART DEALERS AND GALLERIES

        :return: The merchant_category of this Merchant.
        :rtype: str
        """
        return self._merchant_category

    @merchant_category.setter
    def merchant_category(self, merchant_category):
        """Sets the merchant_category of this Merchant.

        Merchant category code and description associated with the merchant category code for the merchant.   5814 - FAST FOOD RESTAURANTS, 5541 - SERVICE STATIONS WITH OR WITHOUT ANCILLARY SERVICE,   5735 - RECORD SHOPS, 5971 - ART DEALERS AND GALLERIES

        :param merchant_category: The merchant_category of this Merchant.
        :type merchant_category: str
        """

        self._merchant_category = merchant_category

    @property
    def merchant_dba_name(self):
        """Gets the merchant_dba_name of this Merchant.

        Name under which the merchant is 'doing business as'.

        :return: The merchant_dba_name of this Merchant.
        :rtype: str
        """
        return self._merchant_dba_name

    @merchant_dba_name.setter
    def merchant_dba_name(self, merchant_dba_name):
        """Sets the merchant_dba_name of this Merchant.

        Name under which the merchant is 'doing business as'.

        :param merchant_dba_name: The merchant_dba_name of this Merchant.
        :type merchant_dba_name: str
        """

        self._merchant_dba_name = merchant_dba_name

    @property
    def phone_number(self):
        """Gets the phone_number of this Merchant.

        The phone number of the merchant.

        :return: The phone_number of this Merchant.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this Merchant.

        The phone number of the merchant.

        :param phone_number: The phone_number of this Merchant.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def sole_proprietor_name(self):
        """Gets the sole_proprietor_name of this Merchant.

        

        :return: The sole_proprietor_name of this Merchant.
        :rtype: str
        """
        return self._sole_proprietor_name

    @sole_proprietor_name.setter
    def sole_proprietor_name(self, sole_proprietor_name):
        """Sets the sole_proprietor_name of this Merchant.

        

        :param sole_proprietor_name: The sole_proprietor_name of this Merchant.
        :type sole_proprietor_name: str
        """

        self._sole_proprietor_name = sole_proprietor_name
