/**
 * Merchant Identifier API V2
 * API for Merchant Identifier
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: ADS_Data_Services@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMerchant.h
 *
 * 
 */

#ifndef OAIMerchant_H
#define OAIMerchant_H

#include <QJsonObject>

#include "OAIAddress.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress;

class OAIMerchant : public OAIObject {
public:
    OAIMerchant();
    OAIMerchant(QString json);
    ~OAIMerchant() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddress getAddress() const;
    void setAddress(const OAIAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getBrandName() const;
    void setBrandName(const QString &brand_name);
    bool is_brand_name_Set() const;
    bool is_brand_name_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QString getDescriptorText() const;
    void setDescriptorText(const QString &descriptor_text);
    bool is_descriptor_text_Set() const;
    bool is_descriptor_text_Valid() const;

    QString getLegalCorporateName() const;
    void setLegalCorporateName(const QString &legal_corporate_name);
    bool is_legal_corporate_name_Set() const;
    bool is_legal_corporate_name_Valid() const;

    qint32 getLocationId() const;
    void setLocationId(const qint32 &location_id);
    bool is_location_id_Set() const;
    bool is_location_id_Valid() const;

    qint32 getMatchConfidenceScore() const;
    void setMatchConfidenceScore(const qint32 &match_confidence_score);
    bool is_match_confidence_score_Set() const;
    bool is_match_confidence_score_Valid() const;

    QString getMerchantCategory() const;
    void setMerchantCategory(const QString &merchant_category);
    bool is_merchant_category_Set() const;
    bool is_merchant_category_Valid() const;

    QString getMerchantDbaName() const;
    void setMerchantDbaName(const QString &merchant_dba_name);
    bool is_merchant_dba_name_Set() const;
    bool is_merchant_dba_name_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    QString getSoleProprietorName() const;
    void setSoleProprietorName(const QString &sole_proprietor_name);
    bool is_sole_proprietor_name_Set() const;
    bool is_sole_proprietor_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_brand_name;
    bool m_brand_name_isSet;
    bool m_brand_name_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QString m_descriptor_text;
    bool m_descriptor_text_isSet;
    bool m_descriptor_text_isValid;

    QString m_legal_corporate_name;
    bool m_legal_corporate_name_isSet;
    bool m_legal_corporate_name_isValid;

    qint32 m_location_id;
    bool m_location_id_isSet;
    bool m_location_id_isValid;

    qint32 m_match_confidence_score;
    bool m_match_confidence_score_isSet;
    bool m_match_confidence_score_isValid;

    QString m_merchant_category;
    bool m_merchant_category_isSet;
    bool m_merchant_category_isValid;

    QString m_merchant_dba_name;
    bool m_merchant_dba_name_isSet;
    bool m_merchant_dba_name_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    QString m_sole_proprietor_name;
    bool m_sole_proprietor_name_isSet;
    bool m_sole_proprietor_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMerchant)

#endif // OAIMerchant_H
