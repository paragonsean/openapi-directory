/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MdesCustomerService);
  }
}(this, function(expect, MdesCustomerService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MdesCustomerService.Token();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Token', function() {
    it('should create an instance of Token', function() {
      // uncomment below and update the code to test Token
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be.a(MdesCustomerService.Token);
    });

    it('should have the property accountPanSequenceNumber (base name: "AccountPanSequenceNumber")', function() {
      // uncomment below and update the code to test the property accountPanSequenceNumber
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property activationCodeExpirationDateTime (base name: "ActivationCodeExpirationDateTime")', function() {
      // uncomment below and update the code to test the property activationCodeExpirationDateTime
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property correlationId (base name: "CorrelationId")', function() {
      // uncomment below and update the code to test the property correlationId
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property currentStatusCode (base name: "CurrentStatusCode")', function() {
      // uncomment below and update the code to test the property currentStatusCode
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property currentStatusDateTime (base name: "CurrentStatusDateTime")', function() {
      // uncomment below and update the code to test the property currentStatusDateTime
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property currentStatusDescription (base name: "CurrentStatusDescription")', function() {
      // uncomment below and update the code to test the property currentStatusDescription
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property device (base name: "Device")', function() {
      // uncomment below and update the code to test the property device
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property digitizationRequestDateTime (base name: "DigitizationRequestDateTime")', function() {
      // uncomment below and update the code to test the property digitizationRequestDateTime
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property expirationDate (base name: "ExpirationDate")', function() {
      // uncomment below and update the code to test the property expirationDate
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property finalTokenizationDecision (base name: "FinalTokenizationDecision")', function() {
      // uncomment below and update the code to test the property finalTokenizationDecision
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property lastCommentId (base name: "LastCommentId")', function() {
      // uncomment below and update the code to test the property lastCommentId
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property paymentAppInstanceId (base name: "PaymentAppInstanceId")', function() {
      // uncomment below and update the code to test the property paymentAppInstanceId
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property primaryAccountNumberUniqueReference (base name: "PrimaryAccountNumberUniqueReference")', function() {
      // uncomment below and update the code to test the property primaryAccountNumberUniqueReference
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property provisioningStatusCode (base name: "ProvisioningStatusCode")', function() {
      // uncomment below and update the code to test the property provisioningStatusCode
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property provisioningStatusDescription (base name: "ProvisioningStatusDescription")', function() {
      // uncomment below and update the code to test the property provisioningStatusDescription
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property storageTechnology (base name: "StorageTechnology")', function() {
      // uncomment below and update the code to test the property storageTechnology
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property suspenders (base name: "Suspenders")', function() {
      // uncomment below and update the code to test the property suspenders
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property tokenActivatedDateTime (base name: "TokenActivatedDateTime")', function() {
      // uncomment below and update the code to test the property tokenActivatedDateTime
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property tokenAssuranceLevel (base name: "TokenAssuranceLevel")', function() {
      // uncomment below and update the code to test the property tokenAssuranceLevel
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property tokenDeletedFromConsumerApp (base name: "TokenDeletedFromConsumerApp")', function() {
      // uncomment below and update the code to test the property tokenDeletedFromConsumerApp
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property tokenRequestorConsumerFacingEntityName (base name: "TokenRequestorConsumerFacingEntityName")', function() {
      // uncomment below and update the code to test the property tokenRequestorConsumerFacingEntityName
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property tokenRequestorId (base name: "TokenRequestorId")', function() {
      // uncomment below and update the code to test the property tokenRequestorId
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property tokenRequestorName (base name: "TokenRequestorName")', function() {
      // uncomment below and update the code to test the property tokenRequestorName
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property tokenSuffix (base name: "TokenSuffix")', function() {
      // uncomment below and update the code to test the property tokenSuffix
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property tokenType (base name: "TokenType")', function() {
      // uncomment below and update the code to test the property tokenType
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property tokenUniqueReference (base name: "TokenUniqueReference")', function() {
      // uncomment below and update the code to test the property tokenUniqueReference
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

    it('should have the property walletId (base name: "WalletId")', function() {
      // uncomment below and update the code to test the property walletId
      //var instance = new MdesCustomerService.Token();
      //expect(instance).to.be();
    });

  });

}));
