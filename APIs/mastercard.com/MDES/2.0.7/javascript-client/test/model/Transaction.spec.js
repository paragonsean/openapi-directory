/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MdesCustomerService);
  }
}(this, function(expect, MdesCustomerService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MdesCustomerService.Transaction();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Transaction', function() {
    it('should create an instance of Transaction', function() {
      // uncomment below and update the code to test Transaction
      //var instance = new MdesCustomerService.Transaction();
      //expect(instance).to.be.a(MdesCustomerService.Transaction);
    });

    it('should have the property currencyCode (base name: "CurrencyCode")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instance = new MdesCustomerService.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property merchantCategoryCode (base name: "MerchantCategoryCode")', function() {
      // uncomment below and update the code to test the property merchantCategoryCode
      //var instance = new MdesCustomerService.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property merchantCategoryDescription (base name: "MerchantCategoryDescription")', function() {
      // uncomment below and update the code to test the property merchantCategoryDescription
      //var instance = new MdesCustomerService.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property merchantName (base name: "MerchantName")', function() {
      // uncomment below and update the code to test the property merchantName
      //var instance = new MdesCustomerService.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property pOSEntryMode (base name: "POSEntryMode")', function() {
      // uncomment below and update the code to test the property pOSEntryMode
      //var instance = new MdesCustomerService.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property transactionAmount (base name: "TransactionAmount")', function() {
      // uncomment below and update the code to test the property transactionAmount
      //var instance = new MdesCustomerService.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property transactionDateTime (base name: "TransactionDateTime")', function() {
      // uncomment below and update the code to test the property transactionDateTime
      //var instance = new MdesCustomerService.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property transactionStatusCode (base name: "TransactionStatusCode")', function() {
      // uncomment below and update the code to test the property transactionStatusCode
      //var instance = new MdesCustomerService.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property transactionTypeCode (base name: "TransactionTypeCode")', function() {
      // uncomment below and update the code to test the property transactionTypeCode
      //var instance = new MdesCustomerService.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property transactionTypeDescription (base name: "TransactionTypeDescription")', function() {
      // uncomment below and update the code to test the property transactionTypeDescription
      //var instance = new MdesCustomerService.Transaction();
      //expect(instance).to.be();
    });

  });

}));
