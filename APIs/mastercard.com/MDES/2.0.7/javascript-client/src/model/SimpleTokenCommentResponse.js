/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SimpleTokenCommentResponse model module.
 * @module model/SimpleTokenCommentResponse
 * @version 2.0.7
 */
class SimpleTokenCommentResponse {
    /**
     * Constructs a new <code>SimpleTokenCommentResponse</code>.
     * @alias module:model/SimpleTokenCommentResponse
     * @param tokenUniqueReference {String} Unique reference to the Token.
     */
    constructor(tokenUniqueReference) { 
        
        SimpleTokenCommentResponse.initialize(this, tokenUniqueReference);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, tokenUniqueReference) { 
        obj['TokenUniqueReference'] = tokenUniqueReference;
    }

    /**
     * Constructs a <code>SimpleTokenCommentResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SimpleTokenCommentResponse} obj Optional instance to populate.
     * @return {module:model/SimpleTokenCommentResponse} The populated <code>SimpleTokenCommentResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SimpleTokenCommentResponse();

            if (data.hasOwnProperty('CommentId')) {
                obj['CommentId'] = ApiClient.convertToType(data['CommentId'], 'String');
            }
            if (data.hasOwnProperty('TokenUniqueReference')) {
                obj['TokenUniqueReference'] = ApiClient.convertToType(data['TokenUniqueReference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SimpleTokenCommentResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SimpleTokenCommentResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SimpleTokenCommentResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['CommentId'] && !(typeof data['CommentId'] === 'string' || data['CommentId'] instanceof String)) {
            throw new Error("Expected the field `CommentId` to be a primitive type in the JSON string but got " + data['CommentId']);
        }
        // ensure the json data is a string
        if (data['TokenUniqueReference'] && !(typeof data['TokenUniqueReference'] === 'string' || data['TokenUniqueReference'] instanceof String)) {
            throw new Error("Expected the field `TokenUniqueReference` to be a primitive type in the JSON string but got " + data['TokenUniqueReference']);
        }

        return true;
    }


}

SimpleTokenCommentResponse.RequiredProperties = ["TokenUniqueReference"];

/**
 * Identifier of the comment added. Only present when comment text was provided in the request.
 * @member {String} CommentId
 */
SimpleTokenCommentResponse.prototype['CommentId'] = undefined;

/**
 * Unique reference to the Token.
 * @member {String} TokenUniqueReference
 */
SimpleTokenCommentResponse.prototype['TokenUniqueReference'] = undefined;






export default SimpleTokenCommentResponse;

