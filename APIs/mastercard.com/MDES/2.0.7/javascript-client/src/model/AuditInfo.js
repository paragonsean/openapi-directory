/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuditInfo model module.
 * @module model/AuditInfo
 * @version 2.0.7
 */
class AuditInfo {
    /**
     * Constructs a new <code>AuditInfo</code>.
     * @alias module:model/AuditInfo
     * @param organization {String} Name of the Issuer or Processor to which the Customer Service Representative who triggered the API request belongs.
     * @param userId {String} User ID (as assigned by the Issuer/Processor) of the Customer Service Representative who triggered the API request.
     * @param userName {String} User Name of the Customer Service Representative who triggered the API request.
     */
    constructor(organization, userId, userName) { 
        
        AuditInfo.initialize(this, organization, userId, userName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, organization, userId, userName) { 
        obj['Organization'] = organization;
        obj['UserId'] = userId;
        obj['UserName'] = userName;
    }

    /**
     * Constructs a <code>AuditInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuditInfo} obj Optional instance to populate.
     * @return {module:model/AuditInfo} The populated <code>AuditInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuditInfo();

            if (data.hasOwnProperty('Organization')) {
                obj['Organization'] = ApiClient.convertToType(data['Organization'], 'String');
            }
            if (data.hasOwnProperty('Phone')) {
                obj['Phone'] = ApiClient.convertToType(data['Phone'], 'String');
            }
            if (data.hasOwnProperty('UserId')) {
                obj['UserId'] = ApiClient.convertToType(data['UserId'], 'String');
            }
            if (data.hasOwnProperty('UserName')) {
                obj['UserName'] = ApiClient.convertToType(data['UserName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuditInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuditInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuditInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Organization'] && !(typeof data['Organization'] === 'string' || data['Organization'] instanceof String)) {
            throw new Error("Expected the field `Organization` to be a primitive type in the JSON string but got " + data['Organization']);
        }
        // ensure the json data is a string
        if (data['Phone'] && !(typeof data['Phone'] === 'string' || data['Phone'] instanceof String)) {
            throw new Error("Expected the field `Phone` to be a primitive type in the JSON string but got " + data['Phone']);
        }
        // ensure the json data is a string
        if (data['UserId'] && !(typeof data['UserId'] === 'string' || data['UserId'] instanceof String)) {
            throw new Error("Expected the field `UserId` to be a primitive type in the JSON string but got " + data['UserId']);
        }
        // ensure the json data is a string
        if (data['UserName'] && !(typeof data['UserName'] === 'string' || data['UserName'] instanceof String)) {
            throw new Error("Expected the field `UserName` to be a primitive type in the JSON string but got " + data['UserName']);
        }

        return true;
    }


}

AuditInfo.RequiredProperties = ["Organization", "UserId", "UserName"];

/**
 * Name of the Issuer or Processor to which the Customer Service Representative who triggered the API request belongs.
 * @member {String} Organization
 */
AuditInfo.prototype['Organization'] = undefined;

/**
 * Phone Number of the Customer Service Representative who triggered the API request.
 * @member {String} Phone
 */
AuditInfo.prototype['Phone'] = undefined;

/**
 * User ID (as assigned by the Issuer/Processor) of the Customer Service Representative who triggered the API request.
 * @member {String} UserId
 */
AuditInfo.prototype['UserId'] = undefined;

/**
 * User Name of the Customer Service Representative who triggered the API request.
 * @member {String} UserName
 */
AuditInfo.prototype['UserName'] = undefined;






export default AuditInfo;

