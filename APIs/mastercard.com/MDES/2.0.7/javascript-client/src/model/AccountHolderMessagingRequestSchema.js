/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuditInfo from './AuditInfo';

/**
 * The AccountHolderMessagingRequestSchema model module.
 * @module model/AccountHolderMessagingRequestSchema
 * @version 2.0.7
 */
class AccountHolderMessagingRequestSchema {
    /**
     * Constructs a new <code>AccountHolderMessagingRequestSchema</code>.
     * @alias module:model/AccountHolderMessagingRequestSchema
     * @param auditInfo {module:model/AuditInfo} 
     * @param issuerApplicationMessageDisplay {String} This is the indicator if the message can be viewed in the Issuer Application using the MessageIdentifier. <br>Please refer to the Apple Card Notification Specification for Notification Deep Linking. Mandatory field.  Valid values are;<br>TRUE ? The message can be viewed in the issuer application<br>FALSE ? The message cannot be viewed in the issuer application.
     * @param messageExpiration {String} Date and time after which the message is no longer valid.  Maximum value of 30 days in the future. Mandatory field.  __ISO 8601 format ? YYYY-MM-DDThh:mm:ssTZD__
     * @param messageIdentifier {String} This is the message identifier. This could be used for linking into the issuer application. Mandatory field.
     * @param messageLanguageCode {String} The language of the message.  Only messages with the requested language code will be presented to the account holder. Mandatory field.  <br>__ISO 639-1 format__
     * @param messageText {String} This is the message which will be displayed to the cardholder. Mandatory field.
     * @param tokenUniqueReference {String} When present, the search will return one specific matching token. Cannot be used together with any of the following search request parameters; AccountPan, Token, PaymentAppInstanceId, CommentId, or AlternateAccountIdentifier. Mandatory field.
     */
    constructor(auditInfo, issuerApplicationMessageDisplay, messageExpiration, messageIdentifier, messageLanguageCode, messageText, tokenUniqueReference) { 
        
        AccountHolderMessagingRequestSchema.initialize(this, auditInfo, issuerApplicationMessageDisplay, messageExpiration, messageIdentifier, messageLanguageCode, messageText, tokenUniqueReference);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, auditInfo, issuerApplicationMessageDisplay, messageExpiration, messageIdentifier, messageLanguageCode, messageText, tokenUniqueReference) { 
        obj['AuditInfo'] = auditInfo;
        obj['IssuerApplicationMessageDisplay'] = issuerApplicationMessageDisplay;
        obj['MessageExpiration'] = messageExpiration;
        obj['MessageIdentifier'] = messageIdentifier;
        obj['MessageLanguageCode'] = messageLanguageCode;
        obj['MessageText'] = messageText;
        obj['TokenUniqueReference'] = tokenUniqueReference;
    }

    /**
     * Constructs a <code>AccountHolderMessagingRequestSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountHolderMessagingRequestSchema} obj Optional instance to populate.
     * @return {module:model/AccountHolderMessagingRequestSchema} The populated <code>AccountHolderMessagingRequestSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountHolderMessagingRequestSchema();

            if (data.hasOwnProperty('AuditInfo')) {
                obj['AuditInfo'] = AuditInfo.constructFromObject(data['AuditInfo']);
            }
            if (data.hasOwnProperty('IssuerApplicationMessageDisplay')) {
                obj['IssuerApplicationMessageDisplay'] = ApiClient.convertToType(data['IssuerApplicationMessageDisplay'], 'String');
            }
            if (data.hasOwnProperty('MessageExpiration')) {
                obj['MessageExpiration'] = ApiClient.convertToType(data['MessageExpiration'], 'String');
            }
            if (data.hasOwnProperty('MessageIdentifier')) {
                obj['MessageIdentifier'] = ApiClient.convertToType(data['MessageIdentifier'], 'String');
            }
            if (data.hasOwnProperty('MessageLanguageCode')) {
                obj['MessageLanguageCode'] = ApiClient.convertToType(data['MessageLanguageCode'], 'String');
            }
            if (data.hasOwnProperty('MessageText')) {
                obj['MessageText'] = ApiClient.convertToType(data['MessageText'], 'String');
            }
            if (data.hasOwnProperty('TokenUniqueReference')) {
                obj['TokenUniqueReference'] = ApiClient.convertToType(data['TokenUniqueReference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountHolderMessagingRequestSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountHolderMessagingRequestSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AccountHolderMessagingRequestSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `AuditInfo`
        if (data['AuditInfo']) { // data not null
          AuditInfo.validateJSON(data['AuditInfo']);
        }
        // ensure the json data is a string
        if (data['IssuerApplicationMessageDisplay'] && !(typeof data['IssuerApplicationMessageDisplay'] === 'string' || data['IssuerApplicationMessageDisplay'] instanceof String)) {
            throw new Error("Expected the field `IssuerApplicationMessageDisplay` to be a primitive type in the JSON string but got " + data['IssuerApplicationMessageDisplay']);
        }
        // ensure the json data is a string
        if (data['MessageExpiration'] && !(typeof data['MessageExpiration'] === 'string' || data['MessageExpiration'] instanceof String)) {
            throw new Error("Expected the field `MessageExpiration` to be a primitive type in the JSON string but got " + data['MessageExpiration']);
        }
        // ensure the json data is a string
        if (data['MessageIdentifier'] && !(typeof data['MessageIdentifier'] === 'string' || data['MessageIdentifier'] instanceof String)) {
            throw new Error("Expected the field `MessageIdentifier` to be a primitive type in the JSON string but got " + data['MessageIdentifier']);
        }
        // ensure the json data is a string
        if (data['MessageLanguageCode'] && !(typeof data['MessageLanguageCode'] === 'string' || data['MessageLanguageCode'] instanceof String)) {
            throw new Error("Expected the field `MessageLanguageCode` to be a primitive type in the JSON string but got " + data['MessageLanguageCode']);
        }
        // ensure the json data is a string
        if (data['MessageText'] && !(typeof data['MessageText'] === 'string' || data['MessageText'] instanceof String)) {
            throw new Error("Expected the field `MessageText` to be a primitive type in the JSON string but got " + data['MessageText']);
        }
        // ensure the json data is a string
        if (data['TokenUniqueReference'] && !(typeof data['TokenUniqueReference'] === 'string' || data['TokenUniqueReference'] instanceof String)) {
            throw new Error("Expected the field `TokenUniqueReference` to be a primitive type in the JSON string but got " + data['TokenUniqueReference']);
        }

        return true;
    }


}

AccountHolderMessagingRequestSchema.RequiredProperties = ["AuditInfo", "IssuerApplicationMessageDisplay", "MessageExpiration", "MessageIdentifier", "MessageLanguageCode", "MessageText", "TokenUniqueReference"];

/**
 * @member {module:model/AuditInfo} AuditInfo
 */
AccountHolderMessagingRequestSchema.prototype['AuditInfo'] = undefined;

/**
 * This is the indicator if the message can be viewed in the Issuer Application using the MessageIdentifier. <br>Please refer to the Apple Card Notification Specification for Notification Deep Linking. Mandatory field.  Valid values are;<br>TRUE ? The message can be viewed in the issuer application<br>FALSE ? The message cannot be viewed in the issuer application.
 * @member {String} IssuerApplicationMessageDisplay
 */
AccountHolderMessagingRequestSchema.prototype['IssuerApplicationMessageDisplay'] = undefined;

/**
 * Date and time after which the message is no longer valid.  Maximum value of 30 days in the future. Mandatory field.  __ISO 8601 format ? YYYY-MM-DDThh:mm:ssTZD__
 * @member {String} MessageExpiration
 */
AccountHolderMessagingRequestSchema.prototype['MessageExpiration'] = undefined;

/**
 * This is the message identifier. This could be used for linking into the issuer application. Mandatory field.
 * @member {String} MessageIdentifier
 */
AccountHolderMessagingRequestSchema.prototype['MessageIdentifier'] = undefined;

/**
 * The language of the message.  Only messages with the requested language code will be presented to the account holder. Mandatory field.  <br>__ISO 639-1 format__
 * @member {String} MessageLanguageCode
 */
AccountHolderMessagingRequestSchema.prototype['MessageLanguageCode'] = undefined;

/**
 * This is the message which will be displayed to the cardholder. Mandatory field.
 * @member {String} MessageText
 */
AccountHolderMessagingRequestSchema.prototype['MessageText'] = undefined;

/**
 * When present, the search will return one specific matching token. Cannot be used together with any of the following search request parameters; AccountPan, Token, PaymentAppInstanceId, CommentId, or AlternateAccountIdentifier. Mandatory field.
 * @member {String} TokenUniqueReference
 */
AccountHolderMessagingRequestSchema.prototype['TokenUniqueReference'] = undefined;






export default AccountHolderMessagingRequestSchema;

