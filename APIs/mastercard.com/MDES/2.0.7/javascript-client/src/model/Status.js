/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuditInfo from './AuditInfo';

/**
 * The Status model module.
 * @module model/Status
 * @version 2.0.7
 */
class Status {
    /**
     * Constructs a new <code>Status</code>.
     * @alias module:model/Status
     */
    constructor() { 
        
        Status.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Status</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Status} obj Optional instance to populate.
     * @return {module:model/Status} The populated <code>Status</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Status();

            if (data.hasOwnProperty('AuditInfo')) {
                obj['AuditInfo'] = AuditInfo.constructFromObject(data['AuditInfo']);
            }
            if (data.hasOwnProperty('CommentId')) {
                obj['CommentId'] = ApiClient.convertToType(data['CommentId'], 'String');
            }
            if (data.hasOwnProperty('Initiator')) {
                obj['Initiator'] = ApiClient.convertToType(data['Initiator'], 'String');
            }
            if (data.hasOwnProperty('ReasonCode')) {
                obj['ReasonCode'] = ApiClient.convertToType(data['ReasonCode'], 'String');
            }
            if (data.hasOwnProperty('StatusCode')) {
                obj['StatusCode'] = ApiClient.convertToType(data['StatusCode'], 'String');
            }
            if (data.hasOwnProperty('StatusDateTime')) {
                obj['StatusDateTime'] = ApiClient.convertToType(data['StatusDateTime'], 'String');
            }
            if (data.hasOwnProperty('StatusDescription')) {
                obj['StatusDescription'] = ApiClient.convertToType(data['StatusDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Status</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Status</code>.
     */
    static validateJSON(data) {
        // validate the optional field `AuditInfo`
        if (data['AuditInfo']) { // data not null
          AuditInfo.validateJSON(data['AuditInfo']);
        }
        // ensure the json data is a string
        if (data['CommentId'] && !(typeof data['CommentId'] === 'string' || data['CommentId'] instanceof String)) {
            throw new Error("Expected the field `CommentId` to be a primitive type in the JSON string but got " + data['CommentId']);
        }
        // ensure the json data is a string
        if (data['Initiator'] && !(typeof data['Initiator'] === 'string' || data['Initiator'] instanceof String)) {
            throw new Error("Expected the field `Initiator` to be a primitive type in the JSON string but got " + data['Initiator']);
        }
        // ensure the json data is a string
        if (data['ReasonCode'] && !(typeof data['ReasonCode'] === 'string' || data['ReasonCode'] instanceof String)) {
            throw new Error("Expected the field `ReasonCode` to be a primitive type in the JSON string but got " + data['ReasonCode']);
        }
        // ensure the json data is a string
        if (data['StatusCode'] && !(typeof data['StatusCode'] === 'string' || data['StatusCode'] instanceof String)) {
            throw new Error("Expected the field `StatusCode` to be a primitive type in the JSON string but got " + data['StatusCode']);
        }
        // ensure the json data is a string
        if (data['StatusDateTime'] && !(typeof data['StatusDateTime'] === 'string' || data['StatusDateTime'] instanceof String)) {
            throw new Error("Expected the field `StatusDateTime` to be a primitive type in the JSON string but got " + data['StatusDateTime']);
        }
        // ensure the json data is a string
        if (data['StatusDescription'] && !(typeof data['StatusDescription'] === 'string' || data['StatusDescription'] instanceof String)) {
            throw new Error("Expected the field `StatusDescription` to be a primitive type in the JSON string but got " + data['StatusDescription']);
        }

        return true;
    }


}



/**
 * @member {module:model/AuditInfo} AuditInfo
 */
Status.prototype['AuditInfo'] = undefined;

/**
 * Identifier of the comment added.  Conditional field, only present when comment text was provided in the request.
 * @member {String} CommentId
 */
Status.prototype['CommentId'] = undefined;

/**
 * Party that initiated the status update. Valid values:<br />    \"I\" - Issuer.<br />    \"W\" - Token Requestor (including Wallet Provider).<br />    \"C\" - Cardholder.<br />    \"P\" - Mobile PIN Validation service.<br />    \"M\" - Mobile PIN Change Validation service.
 * @member {String} Initiator
 */
Status.prototype['Initiator'] = undefined;

/**
 * Reason for the status update.  Valid values:<br />    \"A\" ? Cardholder successfully authenticated using a mobile App prior to activation.<br />    \"C\" ? Cardholder successfully authenticated with a customer service agent prior to activation. (For 'Token Activate').<br />    \"C\" ? Account closed. (For 'Token Delete').<br />    \"F\" ? Cardholder reported token device found or not stolen.<br />    \"L\" ? Cardholder reported/confirmed token device lost.<br />    \"S\" ? Cardholder reported/confirmed token device stolen.<br />    \"T\" ? Issuer or cardholder reported fraudulent/then confirmed no fraudulent token transactions.<br />    \"Z\" ? Other.
 * @member {String} ReasonCode
 */
Status.prototype['ReasonCode'] = undefined;

/**
 * The status of the Token. Valid values:<br />    \"U\" - Unmapped. The token has not yet been linked to the Account PAN. The process of tokenization is ?In Progress?.<br />    \"A\" - Active. The token is linked to the Account PAN and may initiate new transactions to be authorized.<br />    \"S\" - Suspended. The token is linked to the Account PAN but may not perform transactions at the request of one or more suspenders.<br />    \"D\" - Deleted. The token is logically deleted but is still linked to the Account PAN for the purposes of post-authorization transaction processing.
 * @member {String} StatusCode
 */
Status.prototype['StatusCode'] = undefined;

/**
 * Date and time the status was updated. String, ISO 8691 format - YYYY-MM-DDThh:mm:ssTZD .
 * @member {String} StatusDateTime
 */
Status.prototype['StatusDateTime'] = undefined;

/**
 * Description of the current status.
 * @member {String} StatusDescription
 */
Status.prototype['StatusDescription'] = undefined;






export default Status;

