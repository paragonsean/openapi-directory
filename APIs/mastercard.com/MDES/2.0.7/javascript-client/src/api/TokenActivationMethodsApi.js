/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorsResponse from '../model/ErrorsResponse';
import TokenActivationMethodsRequestSchema from '../model/TokenActivationMethodsRequestSchema';
import TokenActivationMethodsResponseSchema from '../model/TokenActivationMethodsResponseSchema';

/**
* TokenActivationMethods service.
* @module api/TokenActivationMethodsApi
* @version 2.0.7
*/
export default class TokenActivationMethodsApi {

    /**
    * Constructs a new TokenActivationMethodsApi. 
    * @alias module:api/TokenActivationMethodsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the tokenActivationmethodsPost operation.
     * @callback module:api/TokenActivationMethodsApi~tokenActivationmethodsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TokenActivationMethodsResponseSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to retrieve the available Activation Methods for a token that is awaiting activation. Activation Methods are the means by which a cardholder may complete cardholder authentication with the issuer beyond the scope of MDES. It is possible that there are no Activation Methods for a token when an issuer did not provide any cardholder-specific information with the Tokenization Authorization Request (TAR) pre-digitization network message response. 
     * @param {Object} opts Optional parameters
     * @param {module:model/TokenActivationMethodsRequestSchema} [tokenActivationMethodsRequestSchema] Contains the details of the request message.
     * @param {module:api/TokenActivationMethodsApi~tokenActivationmethodsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TokenActivationMethodsResponseSchema}
     */
    tokenActivationmethodsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['tokenActivationMethodsRequestSchema'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TokenActivationMethodsResponseSchema;
      return this.apiClient.callApi(
        '/token/activationmethods', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
