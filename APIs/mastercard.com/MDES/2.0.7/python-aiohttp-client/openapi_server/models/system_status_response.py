# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SystemStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment_text: str=None, last_status_date_time: str=None):
        """SystemStatusResponse - a model defined in OpenAPI

        :param comment_text: The comment_text of this SystemStatusResponse.
        :param last_status_date_time: The last_status_date_time of this SystemStatusResponse.
        """
        self.openapi_types = {
            'comment_text': str,
            'last_status_date_time': str
        }

        self.attribute_map = {
            'comment_text': 'CommentText',
            'last_status_date_time': 'LastStatusDateTime'
        }

        self._comment_text = comment_text
        self._last_status_date_time = last_status_date_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SystemStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SystemStatusResponse of this SystemStatusResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment_text(self):
        """Gets the comment_text of this SystemStatusResponse.

        Comment regarding the status of the system.

        :return: The comment_text of this SystemStatusResponse.
        :rtype: str
        """
        return self._comment_text

    @comment_text.setter
    def comment_text(self, comment_text):
        """Sets the comment_text of this SystemStatusResponse.

        Comment regarding the status of the system.

        :param comment_text: The comment_text of this SystemStatusResponse.
        :type comment_text: str
        """
        if comment_text is not None and len(comment_text) > 0:
            raise ValueError("Invalid value for `comment_text`, length must be less than or equal to `0`")

        self._comment_text = comment_text

    @property
    def last_status_date_time(self):
        """Gets the last_status_date_time of this SystemStatusResponse.

        Date and time the status of the system was last updated. Format - YYYY-MM-DDThh:mm:ssTZD .

        :return: The last_status_date_time of this SystemStatusResponse.
        :rtype: str
        """
        return self._last_status_date_time

    @last_status_date_time.setter
    def last_status_date_time(self, last_status_date_time):
        """Sets the last_status_date_time of this SystemStatusResponse.

        Date and time the status of the system was last updated. Format - YYYY-MM-DDThh:mm:ssTZD .

        :param last_status_date_time: The last_status_date_time of this SystemStatusResponse.
        :type last_status_date_time: str
        """

        self._last_status_date_time = last_status_date_time
