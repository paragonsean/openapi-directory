# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.token_comments_request import TokenCommentsRequest
from openapi_server import util


class TokenCommentsRequestSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, token_comments_request: TokenCommentsRequest=None):
        """TokenCommentsRequestSchema - a model defined in OpenAPI

        :param token_comments_request: The token_comments_request of this TokenCommentsRequestSchema.
        """
        self.openapi_types = {
            'token_comments_request': TokenCommentsRequest
        }

        self.attribute_map = {
            'token_comments_request': 'TokenCommentsRequest'
        }

        self._token_comments_request = token_comments_request

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TokenCommentsRequestSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TokenCommentsRequestSchema of this TokenCommentsRequestSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token_comments_request(self):
        """Gets the token_comments_request of this TokenCommentsRequestSchema.


        :return: The token_comments_request of this TokenCommentsRequestSchema.
        :rtype: TokenCommentsRequest
        """
        return self._token_comments_request

    @token_comments_request.setter
    def token_comments_request(self, token_comments_request):
        """Sets the token_comments_request of this TokenCommentsRequestSchema.


        :param token_comments_request: The token_comments_request of this TokenCommentsRequestSchema.
        :type token_comments_request: TokenCommentsRequest
        """

        self._token_comments_request = token_comments_request
