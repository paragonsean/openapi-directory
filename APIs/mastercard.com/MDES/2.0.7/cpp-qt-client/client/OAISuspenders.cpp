/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISuspenders.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISuspenders::OAISuspenders(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISuspenders::OAISuspenders() {
    this->initializeModel();
}

OAISuspenders::~OAISuspenders() {}

void OAISuspenders::initializeModel() {

    m_suspender_isSet = false;
    m_suspender_isValid = false;
}

void OAISuspenders::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISuspenders::fromJsonObject(QJsonObject json) {

    m_suspender_isValid = ::OpenAPI::fromJsonValue(m_suspender, json[QString("Suspender")]);
    m_suspender_isSet = !json[QString("Suspender")].isNull() && m_suspender_isValid;
}

QString OAISuspenders::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISuspenders::asJsonObject() const {
    QJsonObject obj;
    if (m_suspender.size() > 0) {
        obj.insert(QString("Suspender"), ::OpenAPI::toJsonValue(m_suspender));
    }
    return obj;
}

QList<QString> OAISuspenders::getSuspender() const {
    return m_suspender;
}
void OAISuspenders::setSuspender(const QList<QString> &suspender) {
    m_suspender = suspender;
    m_suspender_isSet = true;
}

bool OAISuspenders::is_suspender_Set() const{
    return m_suspender_isSet;
}

bool OAISuspenders::is_suspender_Valid() const{
    return m_suspender_isValid;
}

bool OAISuspenders::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_suspender.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISuspenders::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
