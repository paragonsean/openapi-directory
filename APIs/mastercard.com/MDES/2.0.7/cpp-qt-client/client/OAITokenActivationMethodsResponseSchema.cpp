/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITokenActivationMethodsResponseSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITokenActivationMethodsResponseSchema::OAITokenActivationMethodsResponseSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITokenActivationMethodsResponseSchema::OAITokenActivationMethodsResponseSchema() {
    this->initializeModel();
}

OAITokenActivationMethodsResponseSchema::~OAITokenActivationMethodsResponseSchema() {}

void OAITokenActivationMethodsResponseSchema::initializeModel() {

    m_token_activation_methods_response_isSet = false;
    m_token_activation_methods_response_isValid = false;
}

void OAITokenActivationMethodsResponseSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITokenActivationMethodsResponseSchema::fromJsonObject(QJsonObject json) {

    m_token_activation_methods_response_isValid = ::OpenAPI::fromJsonValue(m_token_activation_methods_response, json[QString("TokenActivationMethodsResponse")]);
    m_token_activation_methods_response_isSet = !json[QString("TokenActivationMethodsResponse")].isNull() && m_token_activation_methods_response_isValid;
}

QString OAITokenActivationMethodsResponseSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITokenActivationMethodsResponseSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_token_activation_methods_response.isSet()) {
        obj.insert(QString("TokenActivationMethodsResponse"), ::OpenAPI::toJsonValue(m_token_activation_methods_response));
    }
    return obj;
}

OAITokenActivationMethodsResponse OAITokenActivationMethodsResponseSchema::getTokenActivationMethodsResponse() const {
    return m_token_activation_methods_response;
}
void OAITokenActivationMethodsResponseSchema::setTokenActivationMethodsResponse(const OAITokenActivationMethodsResponse &token_activation_methods_response) {
    m_token_activation_methods_response = token_activation_methods_response;
    m_token_activation_methods_response_isSet = true;
}

bool OAITokenActivationMethodsResponseSchema::is_token_activation_methods_response_Set() const{
    return m_token_activation_methods_response_isSet;
}

bool OAITokenActivationMethodsResponseSchema::is_token_activation_methods_response_Valid() const{
    return m_token_activation_methods_response_isValid;
}

bool OAITokenActivationMethodsResponseSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_token_activation_methods_response.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITokenActivationMethodsResponseSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
