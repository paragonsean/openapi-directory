/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransactionsRequestSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransactionsRequestSchema::OAITransactionsRequestSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransactionsRequestSchema::OAITransactionsRequestSchema() {
    this->initializeModel();
}

OAITransactionsRequestSchema::~OAITransactionsRequestSchema() {}

void OAITransactionsRequestSchema::initializeModel() {

    m_transactions_request_isSet = false;
    m_transactions_request_isValid = false;
}

void OAITransactionsRequestSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransactionsRequestSchema::fromJsonObject(QJsonObject json) {

    m_transactions_request_isValid = ::OpenAPI::fromJsonValue(m_transactions_request, json[QString("TransactionsRequest")]);
    m_transactions_request_isSet = !json[QString("TransactionsRequest")].isNull() && m_transactions_request_isValid;
}

QString OAITransactionsRequestSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransactionsRequestSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_transactions_request.isSet()) {
        obj.insert(QString("TransactionsRequest"), ::OpenAPI::toJsonValue(m_transactions_request));
    }
    return obj;
}

OAITransactionsRequest OAITransactionsRequestSchema::getTransactionsRequest() const {
    return m_transactions_request;
}
void OAITransactionsRequestSchema::setTransactionsRequest(const OAITransactionsRequest &transactions_request) {
    m_transactions_request = transactions_request;
    m_transactions_request_isSet = true;
}

bool OAITransactionsRequestSchema::is_transactions_request_Set() const{
    return m_transactions_request_isSet;
}

bool OAITransactionsRequestSchema::is_transactions_request_Valid() const{
    return m_transactions_request_isValid;
}

bool OAITransactionsRequestSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_transactions_request.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransactionsRequestSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
