/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITokenActivateRequestSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITokenActivateRequestSchema::OAITokenActivateRequestSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITokenActivateRequestSchema::OAITokenActivateRequestSchema() {
    this->initializeModel();
}

OAITokenActivateRequestSchema::~OAITokenActivateRequestSchema() {}

void OAITokenActivateRequestSchema::initializeModel() {

    m_token_activate_request_isSet = false;
    m_token_activate_request_isValid = false;
}

void OAITokenActivateRequestSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITokenActivateRequestSchema::fromJsonObject(QJsonObject json) {

    m_token_activate_request_isValid = ::OpenAPI::fromJsonValue(m_token_activate_request, json[QString("TokenActivateRequest")]);
    m_token_activate_request_isSet = !json[QString("TokenActivateRequest")].isNull() && m_token_activate_request_isValid;
}

QString OAITokenActivateRequestSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITokenActivateRequestSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_token_activate_request.isSet()) {
        obj.insert(QString("TokenActivateRequest"), ::OpenAPI::toJsonValue(m_token_activate_request));
    }
    return obj;
}

OAITokenActivateRequest OAITokenActivateRequestSchema::getTokenActivateRequest() const {
    return m_token_activate_request;
}
void OAITokenActivateRequestSchema::setTokenActivateRequest(const OAITokenActivateRequest &token_activate_request) {
    m_token_activate_request = token_activate_request;
    m_token_activate_request_isSet = true;
}

bool OAITokenActivateRequestSchema::is_token_activate_request_Set() const{
    return m_token_activate_request_isSet;
}

bool OAITokenActivateRequestSchema::is_token_activate_request_Valid() const{
    return m_token_activate_request_isValid;
}

bool OAITokenActivateRequestSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_token_activate_request.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITokenActivateRequestSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
