/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccount.h
 *
 * 
 */

#ifndef OAIAccount_H
#define OAIAccount_H

#include <QJsonObject>

#include "OAITokens.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITokens;

class OAIAccount : public OAIObject {
public:
    OAIAccount();
    OAIAccount(QString json);
    ~OAIAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountPanSuffix() const;
    void setAccountPanSuffix(const QString &account_pan_suffix);
    bool is_account_pan_suffix_Set() const;
    bool is_account_pan_suffix_Valid() const;

    QString getAlternateAccountIdentifierSuffix() const;
    void setAlternateAccountIdentifierSuffix(const QString &alternate_account_identifier_suffix);
    bool is_alternate_account_identifier_suffix_Set() const;
    bool is_alternate_account_identifier_suffix_Valid() const;

    QString getExpirationDate() const;
    void setExpirationDate(const QString &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    OAITokens getTokens() const;
    void setTokens(const OAITokens &tokens);
    bool is_tokens_Set() const;
    bool is_tokens_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_pan_suffix;
    bool m_account_pan_suffix_isSet;
    bool m_account_pan_suffix_isValid;

    QString m_alternate_account_identifier_suffix;
    bool m_alternate_account_identifier_suffix_isSet;
    bool m_alternate_account_identifier_suffix_isValid;

    QString m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    OAITokens m_tokens;
    bool m_tokens_isSet;
    bool m_tokens_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccount)

#endif // OAIAccount_H
