/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITokenUpdateRequest.h
 *
 * 
 */

#ifndef OAITokenUpdateRequest_H
#define OAITokenUpdateRequest_H

#include <QJsonObject>

#include "OAIAuditInfo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuditInfo;

class OAITokenUpdateRequest : public OAIObject {
public:
    OAITokenUpdateRequest();
    OAITokenUpdateRequest(QString json);
    ~OAITokenUpdateRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountPanSequenceNumber() const;
    void setAccountPanSequenceNumber(const QString &account_pan_sequence_number);
    bool is_account_pan_sequence_number_Set() const;
    bool is_account_pan_sequence_number_Valid() const;

    OAIAuditInfo getAuditInfo() const;
    void setAuditInfo(const OAIAuditInfo &audit_info);
    bool is_audit_info_Set() const;
    bool is_audit_info_Valid() const;

    QString getCommentText() const;
    void setCommentText(const QString &comment_text);
    bool is_comment_text_Set() const;
    bool is_comment_text_Valid() const;

    QString getCurrentAccountPan() const;
    void setCurrentAccountPan(const QString &current_account_pan);
    bool is_current_account_pan_Set() const;
    bool is_current_account_pan_Valid() const;

    QString getExpirationDate() const;
    void setExpirationDate(const QString &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    QString getIssuerProductConfigurationId() const;
    void setIssuerProductConfigurationId(const QString &issuer_product_configuration_id);
    bool is_issuer_product_configuration_id_Set() const;
    bool is_issuer_product_configuration_id_Valid() const;

    QString getNewAccountPan() const;
    void setNewAccountPan(const QString &new_account_pan);
    bool is_new_account_pan_Set() const;
    bool is_new_account_pan_Valid() const;

    QString getTokenUniqueReference() const;
    void setTokenUniqueReference(const QString &token_unique_reference);
    bool is_token_unique_reference_Set() const;
    bool is_token_unique_reference_Valid() const;

    QString getUpdateWalletProviderIndicator() const;
    void setUpdateWalletProviderIndicator(const QString &update_wallet_provider_indicator);
    bool is_update_wallet_provider_indicator_Set() const;
    bool is_update_wallet_provider_indicator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_pan_sequence_number;
    bool m_account_pan_sequence_number_isSet;
    bool m_account_pan_sequence_number_isValid;

    OAIAuditInfo m_audit_info;
    bool m_audit_info_isSet;
    bool m_audit_info_isValid;

    QString m_comment_text;
    bool m_comment_text_isSet;
    bool m_comment_text_isValid;

    QString m_current_account_pan;
    bool m_current_account_pan_isSet;
    bool m_current_account_pan_isValid;

    QString m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    QString m_issuer_product_configuration_id;
    bool m_issuer_product_configuration_id_isSet;
    bool m_issuer_product_configuration_id_isValid;

    QString m_new_account_pan;
    bool m_new_account_pan_isSet;
    bool m_new_account_pan_isValid;

    QString m_token_unique_reference;
    bool m_token_unique_reference_isSet;
    bool m_token_unique_reference_isValid;

    QString m_update_wallet_provider_indicator;
    bool m_update_wallet_provider_indicator_isSet;
    bool m_update_wallet_provider_indicator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITokenUpdateRequest)

#endif // OAITokenUpdateRequest_H
