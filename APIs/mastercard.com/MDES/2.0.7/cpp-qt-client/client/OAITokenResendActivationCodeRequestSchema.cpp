/**
 * MDES Customer Service
 * This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.
 *
 * The version of the OpenAPI document: 2.0.7
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITokenResendActivationCodeRequestSchema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITokenResendActivationCodeRequestSchema::OAITokenResendActivationCodeRequestSchema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITokenResendActivationCodeRequestSchema::OAITokenResendActivationCodeRequestSchema() {
    this->initializeModel();
}

OAITokenResendActivationCodeRequestSchema::~OAITokenResendActivationCodeRequestSchema() {}

void OAITokenResendActivationCodeRequestSchema::initializeModel() {

    m_token_resend_activation_code_request_isSet = false;
    m_token_resend_activation_code_request_isValid = false;
}

void OAITokenResendActivationCodeRequestSchema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITokenResendActivationCodeRequestSchema::fromJsonObject(QJsonObject json) {

    m_token_resend_activation_code_request_isValid = ::OpenAPI::fromJsonValue(m_token_resend_activation_code_request, json[QString("TokenResendActivationCodeRequest")]);
    m_token_resend_activation_code_request_isSet = !json[QString("TokenResendActivationCodeRequest")].isNull() && m_token_resend_activation_code_request_isValid;
}

QString OAITokenResendActivationCodeRequestSchema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITokenResendActivationCodeRequestSchema::asJsonObject() const {
    QJsonObject obj;
    if (m_token_resend_activation_code_request.isSet()) {
        obj.insert(QString("TokenResendActivationCodeRequest"), ::OpenAPI::toJsonValue(m_token_resend_activation_code_request));
    }
    return obj;
}

OAITokenResendActivationCodeRequest OAITokenResendActivationCodeRequestSchema::getTokenResendActivationCodeRequest() const {
    return m_token_resend_activation_code_request;
}
void OAITokenResendActivationCodeRequestSchema::setTokenResendActivationCodeRequest(const OAITokenResendActivationCodeRequest &token_resend_activation_code_request) {
    m_token_resend_activation_code_request = token_resend_activation_code_request;
    m_token_resend_activation_code_request_isSet = true;
}

bool OAITokenResendActivationCodeRequestSchema::is_token_resend_activation_code_request_Set() const{
    return m_token_resend_activation_code_request_isSet;
}

bool OAITokenResendActivationCodeRequestSchema::is_token_resend_activation_code_request_Valid() const{
    return m_token_resend_activation_code_request_isValid;
}

bool OAITokenResendActivationCodeRequestSchema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_token_resend_activation_code_request.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITokenResendActivationCodeRequestSchema::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
