/**
 * MasterCard ABU API
 * Mastercard ABU API
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ABU from '../model/ABU';
import AbuResponse from '../model/AbuResponse';

/**
* ABU service.
* @module api/ABUApi
* @version 1.1.0
*/
export default class ABUApi {

    /**
    * Constructs a new ABUApi. 
    * @alias module:api/ABUApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the abuPost operation.
     * @callback module:api/ABUApi~abuPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AbuResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Access methods for merchants to ABU program.
     * <ul>   <li><p><b>Pull model:</b></p>     <br>     <p>To receive information for a given PAN, the customer sends a request and will receive a response with the most up to date information.</p>     <p>In this page, customers can execute samples of requests to explore the pattern of the API responses. However, once the customer decides to start using the SDK, it is necessary to be fully onboarded to ABU API Pull model.</p>   </li>   <br>   <li><p><b>Push model:</b></p>     <br>     <p>Customers can choose to automatically receive ABU account update notifications on a designated endpoint. This means that a customer can subscribe to each PAN in order to receive updates, so that when these PANs have any changes, the customer will receive the updates via notifications on the designated endpoint.</p>     <p>Different fields on the API are mandatory to use this model.</p><p>In order to complete a full end-to-end test scenario (including the notifications), it is necessary to be fully onboarded on ABU API Push model:</p>     <p>- An endpoint provided by the customer must be registered with Mastercard so that notifications can be pro-actively sent out to the customer.</p>     <p>- A certificate provided by Mastercard representative must be used by the customer to receive notifications on the designated endpoint.</p>     <br>     <p><b>* For customers who are already enrolled to ABU API Pull model and want to start using ABU API Push model, it is necessary to perform a technical enrollment that involves a certificate exchange and must be registered as an ABU API Push model user.</b></p>     <br>     <p>For more details on how to proceed with onboarding for ABU API push model contact abu_push_onboarding@mastercard.com.</p><p>Note: This email is for ABU API push onboarding only. For general ABU API inquiry questions contact api_support@mastercard.com and for general ABU questions contact abu_helpdesk@mastercard.com.</p>   </li> </ul>
     * @param {module:model/ABU} abuRequest Request for ABU API
     * @param {module:api/ABUApi~abuPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AbuResponse}
     */
    abuPost(abuRequest, callback) {
      let postBody = abuRequest;
      // verify the required parameter 'abuRequest' is set
      if (abuRequest === undefined || abuRequest === null) {
        throw new Error("Missing the required parameter 'abuRequest' when calling abuPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AbuResponse;
      return this.apiClient.callApi(
        '/v1/maws', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
