/**
 * MasterCard ABU API
 * Mastercard ABU API
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AbuDTO model module.
 * @module model/AbuDTO
 * @version 1.1.0
 */
class AbuDTO {
    /**
     * Constructs a new <code>AbuDTO</code>.
     * @alias module:model/AbuDTO
     * @param merchantId {String} Registered merchant ID that is mapped to the Customer ID.
     * @param oldAccountNumber {String} Account number on file provided by merchant.
     * @param oldExpirationDate {String} Account number expiration date on file provided by merchant that must be in MMYY format.
     */
    constructor(merchantId, oldAccountNumber, oldExpirationDate) { 
        
        AbuDTO.initialize(this, merchantId, oldAccountNumber, oldExpirationDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, merchantId, oldAccountNumber, oldExpirationDate) { 
        obj['merchantId'] = merchantId;
        obj['oldAccountNumber'] = oldAccountNumber;
        obj['oldExpirationDate'] = oldExpirationDate;
    }

    /**
     * Constructs a <code>AbuDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AbuDTO} obj Optional instance to populate.
     * @return {module:model/AbuDTO} The populated <code>AbuDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AbuDTO();

            if (data.hasOwnProperty('discretionaryData')) {
                obj['discretionaryData'] = ApiClient.convertToType(data['discretionaryData'], 'String');
            }
            if (data.hasOwnProperty('ica')) {
                obj['ica'] = ApiClient.convertToType(data['ica'], 'String');
            }
            if (data.hasOwnProperty('merchantId')) {
                obj['merchantId'] = ApiClient.convertToType(data['merchantId'], 'String');
            }
            if (data.hasOwnProperty('oldAccountNumber')) {
                obj['oldAccountNumber'] = ApiClient.convertToType(data['oldAccountNumber'], 'String');
            }
            if (data.hasOwnProperty('oldExpirationDate')) {
                obj['oldExpirationDate'] = ApiClient.convertToType(data['oldExpirationDate'], 'String');
            }
            if (data.hasOwnProperty('subMerchantId')) {
                obj['subMerchantId'] = ApiClient.convertToType(data['subMerchantId'], 'String');
            }
            if (data.hasOwnProperty('subscribe')) {
                obj['subscribe'] = ApiClient.convertToType(data['subscribe'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AbuDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AbuDTO</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AbuDTO.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['discretionaryData'] && !(typeof data['discretionaryData'] === 'string' || data['discretionaryData'] instanceof String)) {
            throw new Error("Expected the field `discretionaryData` to be a primitive type in the JSON string but got " + data['discretionaryData']);
        }
        // ensure the json data is a string
        if (data['ica'] && !(typeof data['ica'] === 'string' || data['ica'] instanceof String)) {
            throw new Error("Expected the field `ica` to be a primitive type in the JSON string but got " + data['ica']);
        }
        // ensure the json data is a string
        if (data['merchantId'] && !(typeof data['merchantId'] === 'string' || data['merchantId'] instanceof String)) {
            throw new Error("Expected the field `merchantId` to be a primitive type in the JSON string but got " + data['merchantId']);
        }
        // ensure the json data is a string
        if (data['oldAccountNumber'] && !(typeof data['oldAccountNumber'] === 'string' || data['oldAccountNumber'] instanceof String)) {
            throw new Error("Expected the field `oldAccountNumber` to be a primitive type in the JSON string but got " + data['oldAccountNumber']);
        }
        // ensure the json data is a string
        if (data['oldExpirationDate'] && !(typeof data['oldExpirationDate'] === 'string' || data['oldExpirationDate'] instanceof String)) {
            throw new Error("Expected the field `oldExpirationDate` to be a primitive type in the JSON string but got " + data['oldExpirationDate']);
        }
        // ensure the json data is a string
        if (data['subMerchantId'] && !(typeof data['subMerchantId'] === 'string' || data['subMerchantId'] instanceof String)) {
            throw new Error("Expected the field `subMerchantId` to be a primitive type in the JSON string but got " + data['subMerchantId']);
        }
        // ensure the json data is a string
        if (data['subscribe'] && !(typeof data['subscribe'] === 'string' || data['subscribe'] instanceof String)) {
            throw new Error("Expected the field `subscribe` to be a primitive type in the JSON string but got " + data['subscribe']);
        }

        return true;
    }


}

AbuDTO.RequiredProperties = ["merchantId", "oldAccountNumber", "oldExpirationDate"];

/**
 * Optional data that can be used by the requested for matching to the original inquiry.
 * @member {String} discretionaryData
 */
AbuDTO.prototype['discretionaryData'] = undefined;

/**
 * <p class='suffix-required' style='margin-bottom:5px'>[This field is required when the multiple ICAs are registered under the same client key.]</p>Data that can be used to inform the ICA number: Interbank Card Association.
 * @member {String} ica
 */
AbuDTO.prototype['ica'] = undefined;

/**
 * Registered merchant ID that is mapped to the Customer ID.
 * @member {String} merchantId
 */
AbuDTO.prototype['merchantId'] = undefined;

/**
 * Account number on file provided by merchant.
 * @member {String} oldAccountNumber
 */
AbuDTO.prototype['oldAccountNumber'] = undefined;

/**
 * Account number expiration date on file provided by merchant that must be in MMYY format.
 * @member {String} oldExpirationDate
 */
AbuDTO.prototype['oldExpirationDate'] = undefined;

/**
 * Optionally populated when the merchant ID is actually a previously populated payment facilitator or payment aggregator.
 * @member {String} subMerchantId
 */
AbuDTO.prototype['subMerchantId'] = undefined;

/**
 * <p class=\"suffix-required\" style=\"margin-bottom:5px\">[Field used by Push Model only - REQUIRED]</p>Optional data that can be used to subscribe, un-subscribe or query subscription status for PAN updates. Valid values are \"subscribe\", \"un-subscribe\" and \"query\".
 * @member {String} subscribe
 */
AbuDTO.prototype['subscribe'] = undefined;






export default AbuDTO;

