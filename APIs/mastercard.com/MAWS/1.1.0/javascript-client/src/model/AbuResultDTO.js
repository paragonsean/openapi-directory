/**
 * MasterCard ABU API
 * Mastercard ABU API
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AbuResultDTO model module.
 * @module model/AbuResultDTO
 * @version 1.1.0
 */
class AbuResultDTO {
    /**
     * Constructs a new <code>AbuResultDTO</code>.
     * @alias module:model/AbuResultDTO
     */
    constructor() { 
        
        AbuResultDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AbuResultDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AbuResultDTO} obj Optional instance to populate.
     * @return {module:model/AbuResultDTO} The populated <code>AbuResultDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AbuResultDTO();

            if (data.hasOwnProperty('discretionaryData')) {
                obj['discretionaryData'] = ApiClient.convertToType(data['discretionaryData'], 'String');
            }
            if (data.hasOwnProperty('ica')) {
                obj['ica'] = ApiClient.convertToType(data['ica'], 'String');
            }
            if (data.hasOwnProperty('merchantId')) {
                obj['merchantId'] = ApiClient.convertToType(data['merchantId'], 'String');
            }
            if (data.hasOwnProperty('newAccountNumber')) {
                obj['newAccountNumber'] = ApiClient.convertToType(data['newAccountNumber'], 'String');
            }
            if (data.hasOwnProperty('newExpirationDate')) {
                obj['newExpirationDate'] = ApiClient.convertToType(data['newExpirationDate'], 'String');
            }
            if (data.hasOwnProperty('oldAccountNumber')) {
                obj['oldAccountNumber'] = ApiClient.convertToType(data['oldAccountNumber'], 'String');
            }
            if (data.hasOwnProperty('oldExpirationDate')) {
                obj['oldExpirationDate'] = ApiClient.convertToType(data['oldExpirationDate'], 'String');
            }
            if (data.hasOwnProperty('reasonIdentifier')) {
                obj['reasonIdentifier'] = ApiClient.convertToType(data['reasonIdentifier'], 'String');
            }
            if (data.hasOwnProperty('responseIndicator')) {
                obj['responseIndicator'] = ApiClient.convertToType(data['responseIndicator'], 'String');
            }
            if (data.hasOwnProperty('subMerchantId')) {
                obj['subMerchantId'] = ApiClient.convertToType(data['subMerchantId'], 'String');
            }
            if (data.hasOwnProperty('subscriptionIdentifier')) {
                obj['subscriptionIdentifier'] = ApiClient.convertToType(data['subscriptionIdentifier'], 'String');
            }
            if (data.hasOwnProperty('subscriptionIndicator')) {
                obj['subscriptionIndicator'] = ApiClient.convertToType(data['subscriptionIndicator'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AbuResultDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AbuResultDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['discretionaryData'] && !(typeof data['discretionaryData'] === 'string' || data['discretionaryData'] instanceof String)) {
            throw new Error("Expected the field `discretionaryData` to be a primitive type in the JSON string but got " + data['discretionaryData']);
        }
        // ensure the json data is a string
        if (data['ica'] && !(typeof data['ica'] === 'string' || data['ica'] instanceof String)) {
            throw new Error("Expected the field `ica` to be a primitive type in the JSON string but got " + data['ica']);
        }
        // ensure the json data is a string
        if (data['merchantId'] && !(typeof data['merchantId'] === 'string' || data['merchantId'] instanceof String)) {
            throw new Error("Expected the field `merchantId` to be a primitive type in the JSON string but got " + data['merchantId']);
        }
        // ensure the json data is a string
        if (data['newAccountNumber'] && !(typeof data['newAccountNumber'] === 'string' || data['newAccountNumber'] instanceof String)) {
            throw new Error("Expected the field `newAccountNumber` to be a primitive type in the JSON string but got " + data['newAccountNumber']);
        }
        // ensure the json data is a string
        if (data['newExpirationDate'] && !(typeof data['newExpirationDate'] === 'string' || data['newExpirationDate'] instanceof String)) {
            throw new Error("Expected the field `newExpirationDate` to be a primitive type in the JSON string but got " + data['newExpirationDate']);
        }
        // ensure the json data is a string
        if (data['oldAccountNumber'] && !(typeof data['oldAccountNumber'] === 'string' || data['oldAccountNumber'] instanceof String)) {
            throw new Error("Expected the field `oldAccountNumber` to be a primitive type in the JSON string but got " + data['oldAccountNumber']);
        }
        // ensure the json data is a string
        if (data['oldExpirationDate'] && !(typeof data['oldExpirationDate'] === 'string' || data['oldExpirationDate'] instanceof String)) {
            throw new Error("Expected the field `oldExpirationDate` to be a primitive type in the JSON string but got " + data['oldExpirationDate']);
        }
        // ensure the json data is a string
        if (data['reasonIdentifier'] && !(typeof data['reasonIdentifier'] === 'string' || data['reasonIdentifier'] instanceof String)) {
            throw new Error("Expected the field `reasonIdentifier` to be a primitive type in the JSON string but got " + data['reasonIdentifier']);
        }
        // ensure the json data is a string
        if (data['responseIndicator'] && !(typeof data['responseIndicator'] === 'string' || data['responseIndicator'] instanceof String)) {
            throw new Error("Expected the field `responseIndicator` to be a primitive type in the JSON string but got " + data['responseIndicator']);
        }
        // ensure the json data is a string
        if (data['subMerchantId'] && !(typeof data['subMerchantId'] === 'string' || data['subMerchantId'] instanceof String)) {
            throw new Error("Expected the field `subMerchantId` to be a primitive type in the JSON string but got " + data['subMerchantId']);
        }
        // ensure the json data is a string
        if (data['subscriptionIdentifier'] && !(typeof data['subscriptionIdentifier'] === 'string' || data['subscriptionIdentifier'] instanceof String)) {
            throw new Error("Expected the field `subscriptionIdentifier` to be a primitive type in the JSON string but got " + data['subscriptionIdentifier']);
        }
        // ensure the json data is a string
        if (data['subscriptionIndicator'] && !(typeof data['subscriptionIndicator'] === 'string' || data['subscriptionIndicator'] instanceof String)) {
            throw new Error("Expected the field `subscriptionIndicator` to be a primitive type in the JSON string but got " + data['subscriptionIndicator']);
        }

        return true;
    }


}



/**
 * Discretionary data as in the request.
 * @member {String} discretionaryData
 */
AbuResultDTO.prototype['discretionaryData'] = undefined;

/**
 * ICA number as in the request.
 * @member {String} ica
 */
AbuResultDTO.prototype['ica'] = undefined;

/**
 * Merchant ID as in the request.
 * @member {String} merchantId
 */
AbuResultDTO.prototype['merchantId'] = undefined;

/**
 * New account number.
 * @member {String} newAccountNumber
 */
AbuResultDTO.prototype['newAccountNumber'] = undefined;

/**
 * New account number expiration date, in MMYY format.
 * @member {String} newExpirationDate
 */
AbuResultDTO.prototype['newExpirationDate'] = undefined;

/**
 * Account number on file as in the request.
 * @member {String} oldAccountNumber
 */
AbuResultDTO.prototype['oldAccountNumber'] = undefined;

/**
 * Expiration date on file as in the request.
 * @member {String} oldExpirationDate
 */
AbuResultDTO.prototype['oldExpirationDate'] = undefined;

/**
 * Response Type based on requested account.
 * @member {String} reasonIdentifier
 */
AbuResultDTO.prototype['reasonIdentifier'] = undefined;

/**
 * One character additional data, returned bases on  reasonIdentifier.(Note- ResponseIndicator displayed only when ReasonIdentifier is VALID or UNKNWN)
 * @member {String} responseIndicator
 */
AbuResultDTO.prototype['responseIndicator'] = undefined;

/**
 * SubMerchantID as in the request.
 * @member {String} subMerchantId
 */
AbuResultDTO.prototype['subMerchantId'] = undefined;

/**
 * <p class=\"suffix-required\" style=\"margin-bottom:5px\">[Field used by Push Model only]</p> Response Type based on the status of subscribe/un-subscribe or query subscription status for PAN.
 * @member {String} subscriptionIdentifier
 */
AbuResultDTO.prototype['subscriptionIdentifier'] = undefined;

/**
 * <p class=\"suffix-required\" style=\"margin-bottom:5px\">[Field used by Push Model only]</p> One character additional data, returned based on subscriptionIdentifier:<ul><li>\"S\" for success</li><li>\"F\" for failures</li><li>\"T\" for token results.</li></ul>
 * @member {String} subscriptionIndicator
 */
AbuResultDTO.prototype['subscriptionIndicator'] = undefined;






export default AbuResultDTO;

