/*
 * MasterCard ABU API
 * Mastercard ABU API
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AbuResultDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:09:11.500532-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AbuResultDTO {
  public static final String SERIALIZED_NAME_DISCRETIONARY_DATA = "discretionaryData";
  @SerializedName(SERIALIZED_NAME_DISCRETIONARY_DATA)
  private String discretionaryData;

  public static final String SERIALIZED_NAME_ICA = "ica";
  @SerializedName(SERIALIZED_NAME_ICA)
  private String ica;

  public static final String SERIALIZED_NAME_MERCHANT_ID = "merchantId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_ID)
  private String merchantId;

  public static final String SERIALIZED_NAME_NEW_ACCOUNT_NUMBER = "newAccountNumber";
  @SerializedName(SERIALIZED_NAME_NEW_ACCOUNT_NUMBER)
  private String newAccountNumber;

  public static final String SERIALIZED_NAME_NEW_EXPIRATION_DATE = "newExpirationDate";
  @SerializedName(SERIALIZED_NAME_NEW_EXPIRATION_DATE)
  private String newExpirationDate;

  public static final String SERIALIZED_NAME_OLD_ACCOUNT_NUMBER = "oldAccountNumber";
  @SerializedName(SERIALIZED_NAME_OLD_ACCOUNT_NUMBER)
  private String oldAccountNumber;

  public static final String SERIALIZED_NAME_OLD_EXPIRATION_DATE = "oldExpirationDate";
  @SerializedName(SERIALIZED_NAME_OLD_EXPIRATION_DATE)
  private String oldExpirationDate;

  public static final String SERIALIZED_NAME_REASON_IDENTIFIER = "reasonIdentifier";
  @SerializedName(SERIALIZED_NAME_REASON_IDENTIFIER)
  private String reasonIdentifier;

  public static final String SERIALIZED_NAME_RESPONSE_INDICATOR = "responseIndicator";
  @SerializedName(SERIALIZED_NAME_RESPONSE_INDICATOR)
  private String responseIndicator;

  public static final String SERIALIZED_NAME_SUB_MERCHANT_ID = "subMerchantId";
  @SerializedName(SERIALIZED_NAME_SUB_MERCHANT_ID)
  private String subMerchantId;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_IDENTIFIER = "subscriptionIdentifier";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_IDENTIFIER)
  private String subscriptionIdentifier;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_INDICATOR = "subscriptionIndicator";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_INDICATOR)
  private String subscriptionIndicator;

  public AbuResultDTO() {
  }

  public AbuResultDTO discretionaryData(String discretionaryData) {
    this.discretionaryData = discretionaryData;
    return this;
  }

  /**
   * Discretionary data as in the request.
   * @return discretionaryData
   */
  @javax.annotation.Nullable
  public String getDiscretionaryData() {
    return discretionaryData;
  }

  public void setDiscretionaryData(String discretionaryData) {
    this.discretionaryData = discretionaryData;
  }


  public AbuResultDTO ica(String ica) {
    this.ica = ica;
    return this;
  }

  /**
   * ICA number as in the request.
   * @return ica
   */
  @javax.annotation.Nullable
  public String getIca() {
    return ica;
  }

  public void setIca(String ica) {
    this.ica = ica;
  }


  public AbuResultDTO merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  /**
   * Merchant ID as in the request.
   * @return merchantId
   */
  @javax.annotation.Nullable
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }


  public AbuResultDTO newAccountNumber(String newAccountNumber) {
    this.newAccountNumber = newAccountNumber;
    return this;
  }

  /**
   * New account number.
   * @return newAccountNumber
   */
  @javax.annotation.Nullable
  public String getNewAccountNumber() {
    return newAccountNumber;
  }

  public void setNewAccountNumber(String newAccountNumber) {
    this.newAccountNumber = newAccountNumber;
  }


  public AbuResultDTO newExpirationDate(String newExpirationDate) {
    this.newExpirationDate = newExpirationDate;
    return this;
  }

  /**
   * New account number expiration date, in MMYY format.
   * @return newExpirationDate
   */
  @javax.annotation.Nullable
  public String getNewExpirationDate() {
    return newExpirationDate;
  }

  public void setNewExpirationDate(String newExpirationDate) {
    this.newExpirationDate = newExpirationDate;
  }


  public AbuResultDTO oldAccountNumber(String oldAccountNumber) {
    this.oldAccountNumber = oldAccountNumber;
    return this;
  }

  /**
   * Account number on file as in the request.
   * @return oldAccountNumber
   */
  @javax.annotation.Nullable
  public String getOldAccountNumber() {
    return oldAccountNumber;
  }

  public void setOldAccountNumber(String oldAccountNumber) {
    this.oldAccountNumber = oldAccountNumber;
  }


  public AbuResultDTO oldExpirationDate(String oldExpirationDate) {
    this.oldExpirationDate = oldExpirationDate;
    return this;
  }

  /**
   * Expiration date on file as in the request.
   * @return oldExpirationDate
   */
  @javax.annotation.Nullable
  public String getOldExpirationDate() {
    return oldExpirationDate;
  }

  public void setOldExpirationDate(String oldExpirationDate) {
    this.oldExpirationDate = oldExpirationDate;
  }


  public AbuResultDTO reasonIdentifier(String reasonIdentifier) {
    this.reasonIdentifier = reasonIdentifier;
    return this;
  }

  /**
   * Response Type based on requested account.
   * @return reasonIdentifier
   */
  @javax.annotation.Nullable
  public String getReasonIdentifier() {
    return reasonIdentifier;
  }

  public void setReasonIdentifier(String reasonIdentifier) {
    this.reasonIdentifier = reasonIdentifier;
  }


  public AbuResultDTO responseIndicator(String responseIndicator) {
    this.responseIndicator = responseIndicator;
    return this;
  }

  /**
   * One character additional data, returned bases on  reasonIdentifier.(Note- ResponseIndicator displayed only when ReasonIdentifier is VALID or UNKNWN)
   * @return responseIndicator
   */
  @javax.annotation.Nullable
  public String getResponseIndicator() {
    return responseIndicator;
  }

  public void setResponseIndicator(String responseIndicator) {
    this.responseIndicator = responseIndicator;
  }


  public AbuResultDTO subMerchantId(String subMerchantId) {
    this.subMerchantId = subMerchantId;
    return this;
  }

  /**
   * SubMerchantID as in the request.
   * @return subMerchantId
   */
  @javax.annotation.Nullable
  public String getSubMerchantId() {
    return subMerchantId;
  }

  public void setSubMerchantId(String subMerchantId) {
    this.subMerchantId = subMerchantId;
  }


  public AbuResultDTO subscriptionIdentifier(String subscriptionIdentifier) {
    this.subscriptionIdentifier = subscriptionIdentifier;
    return this;
  }

  /**
   * &lt;p class&#x3D;\&quot;suffix-required\&quot; style&#x3D;\&quot;margin-bottom:5px\&quot;&gt;[Field used by Push Model only]&lt;/p&gt; Response Type based on the status of subscribe/un-subscribe or query subscription status for PAN.
   * @return subscriptionIdentifier
   */
  @javax.annotation.Nullable
  public String getSubscriptionIdentifier() {
    return subscriptionIdentifier;
  }

  public void setSubscriptionIdentifier(String subscriptionIdentifier) {
    this.subscriptionIdentifier = subscriptionIdentifier;
  }


  public AbuResultDTO subscriptionIndicator(String subscriptionIndicator) {
    this.subscriptionIndicator = subscriptionIndicator;
    return this;
  }

  /**
   * &lt;p class&#x3D;\&quot;suffix-required\&quot; style&#x3D;\&quot;margin-bottom:5px\&quot;&gt;[Field used by Push Model only]&lt;/p&gt; One character additional data, returned based on subscriptionIdentifier:&lt;ul&gt;&lt;li&gt;\&quot;S\&quot; for success&lt;/li&gt;&lt;li&gt;\&quot;F\&quot; for failures&lt;/li&gt;&lt;li&gt;\&quot;T\&quot; for token results.&lt;/li&gt;&lt;/ul&gt;
   * @return subscriptionIndicator
   */
  @javax.annotation.Nullable
  public String getSubscriptionIndicator() {
    return subscriptionIndicator;
  }

  public void setSubscriptionIndicator(String subscriptionIndicator) {
    this.subscriptionIndicator = subscriptionIndicator;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbuResultDTO abuResultDTO = (AbuResultDTO) o;
    return Objects.equals(this.discretionaryData, abuResultDTO.discretionaryData) &&
        Objects.equals(this.ica, abuResultDTO.ica) &&
        Objects.equals(this.merchantId, abuResultDTO.merchantId) &&
        Objects.equals(this.newAccountNumber, abuResultDTO.newAccountNumber) &&
        Objects.equals(this.newExpirationDate, abuResultDTO.newExpirationDate) &&
        Objects.equals(this.oldAccountNumber, abuResultDTO.oldAccountNumber) &&
        Objects.equals(this.oldExpirationDate, abuResultDTO.oldExpirationDate) &&
        Objects.equals(this.reasonIdentifier, abuResultDTO.reasonIdentifier) &&
        Objects.equals(this.responseIndicator, abuResultDTO.responseIndicator) &&
        Objects.equals(this.subMerchantId, abuResultDTO.subMerchantId) &&
        Objects.equals(this.subscriptionIdentifier, abuResultDTO.subscriptionIdentifier) &&
        Objects.equals(this.subscriptionIndicator, abuResultDTO.subscriptionIndicator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(discretionaryData, ica, merchantId, newAccountNumber, newExpirationDate, oldAccountNumber, oldExpirationDate, reasonIdentifier, responseIndicator, subMerchantId, subscriptionIdentifier, subscriptionIndicator);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AbuResultDTO {\n");
    sb.append("    discretionaryData: ").append(toIndentedString(discretionaryData)).append("\n");
    sb.append("    ica: ").append(toIndentedString(ica)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    newAccountNumber: ").append(toIndentedString(newAccountNumber)).append("\n");
    sb.append("    newExpirationDate: ").append(toIndentedString(newExpirationDate)).append("\n");
    sb.append("    oldAccountNumber: ").append(toIndentedString(oldAccountNumber)).append("\n");
    sb.append("    oldExpirationDate: ").append(toIndentedString(oldExpirationDate)).append("\n");
    sb.append("    reasonIdentifier: ").append(toIndentedString(reasonIdentifier)).append("\n");
    sb.append("    responseIndicator: ").append(toIndentedString(responseIndicator)).append("\n");
    sb.append("    subMerchantId: ").append(toIndentedString(subMerchantId)).append("\n");
    sb.append("    subscriptionIdentifier: ").append(toIndentedString(subscriptionIdentifier)).append("\n");
    sb.append("    subscriptionIndicator: ").append(toIndentedString(subscriptionIndicator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("discretionaryData");
    openapiFields.add("ica");
    openapiFields.add("merchantId");
    openapiFields.add("newAccountNumber");
    openapiFields.add("newExpirationDate");
    openapiFields.add("oldAccountNumber");
    openapiFields.add("oldExpirationDate");
    openapiFields.add("reasonIdentifier");
    openapiFields.add("responseIndicator");
    openapiFields.add("subMerchantId");
    openapiFields.add("subscriptionIdentifier");
    openapiFields.add("subscriptionIndicator");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AbuResultDTO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AbuResultDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AbuResultDTO is not found in the empty JSON string", AbuResultDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AbuResultDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AbuResultDTO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("discretionaryData") != null && !jsonObj.get("discretionaryData").isJsonNull()) && !jsonObj.get("discretionaryData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discretionaryData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discretionaryData").toString()));
      }
      if ((jsonObj.get("ica") != null && !jsonObj.get("ica").isJsonNull()) && !jsonObj.get("ica").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ica` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ica").toString()));
      }
      if ((jsonObj.get("merchantId") != null && !jsonObj.get("merchantId").isJsonNull()) && !jsonObj.get("merchantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchantId").toString()));
      }
      if ((jsonObj.get("newAccountNumber") != null && !jsonObj.get("newAccountNumber").isJsonNull()) && !jsonObj.get("newAccountNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `newAccountNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("newAccountNumber").toString()));
      }
      if ((jsonObj.get("newExpirationDate") != null && !jsonObj.get("newExpirationDate").isJsonNull()) && !jsonObj.get("newExpirationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `newExpirationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("newExpirationDate").toString()));
      }
      if ((jsonObj.get("oldAccountNumber") != null && !jsonObj.get("oldAccountNumber").isJsonNull()) && !jsonObj.get("oldAccountNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `oldAccountNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("oldAccountNumber").toString()));
      }
      if ((jsonObj.get("oldExpirationDate") != null && !jsonObj.get("oldExpirationDate").isJsonNull()) && !jsonObj.get("oldExpirationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `oldExpirationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("oldExpirationDate").toString()));
      }
      if ((jsonObj.get("reasonIdentifier") != null && !jsonObj.get("reasonIdentifier").isJsonNull()) && !jsonObj.get("reasonIdentifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reasonIdentifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reasonIdentifier").toString()));
      }
      if ((jsonObj.get("responseIndicator") != null && !jsonObj.get("responseIndicator").isJsonNull()) && !jsonObj.get("responseIndicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `responseIndicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("responseIndicator").toString()));
      }
      if ((jsonObj.get("subMerchantId") != null && !jsonObj.get("subMerchantId").isJsonNull()) && !jsonObj.get("subMerchantId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subMerchantId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subMerchantId").toString()));
      }
      if ((jsonObj.get("subscriptionIdentifier") != null && !jsonObj.get("subscriptionIdentifier").isJsonNull()) && !jsonObj.get("subscriptionIdentifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptionIdentifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptionIdentifier").toString()));
      }
      if ((jsonObj.get("subscriptionIndicator") != null && !jsonObj.get("subscriptionIndicator").isJsonNull()) && !jsonObj.get("subscriptionIndicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptionIndicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptionIndicator").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AbuResultDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AbuResultDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AbuResultDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AbuResultDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<AbuResultDTO>() {
           @Override
           public void write(JsonWriter out, AbuResultDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AbuResultDTO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AbuResultDTO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AbuResultDTO
   * @throws IOException if the JSON string is invalid with respect to AbuResultDTO
   */
  public static AbuResultDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AbuResultDTO.class);
  }

  /**
   * Convert an instance of AbuResultDTO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

