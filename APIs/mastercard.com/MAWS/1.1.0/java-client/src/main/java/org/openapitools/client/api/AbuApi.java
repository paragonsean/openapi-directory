/*
 * MasterCard ABU API
 * Mastercard ABU API
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ABU;
import org.openapitools.client.model.AbuResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AbuApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AbuApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AbuApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for abuPost
     * @param abuRequest Request for ABU API (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Possible causes: &lt;br&gt;Validation failure or System error.&lt;/br&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Possible causes:&lt;br&gt;ClientID not provisioned.&lt;br&gt; </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call abuPostCall(ABU abuRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = abuRequest;

        // create path and map variables
        String localVarPath = "/v1/maws";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call abuPostValidateBeforeCall(ABU abuRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'abuRequest' is set
        if (abuRequest == null) {
            throw new ApiException("Missing the required parameter 'abuRequest' when calling abuPost(Async)");
        }

        return abuPostCall(abuRequest, _callback);

    }

    /**
     * Access methods for merchants to ABU program.
     * &lt;ul&gt;   &lt;li&gt;&lt;p&gt;&lt;b&gt;Pull model:&lt;/b&gt;&lt;/p&gt;     &lt;br&gt;     &lt;p&gt;To receive information for a given PAN, the customer sends a request and will receive a response with the most up to date information.&lt;/p&gt;     &lt;p&gt;In this page, customers can execute samples of requests to explore the pattern of the API responses. However, once the customer decides to start using the SDK, it is necessary to be fully onboarded to ABU API Pull model.&lt;/p&gt;   &lt;/li&gt;   &lt;br&gt;   &lt;li&gt;&lt;p&gt;&lt;b&gt;Push model:&lt;/b&gt;&lt;/p&gt;     &lt;br&gt;     &lt;p&gt;Customers can choose to automatically receive ABU account update notifications on a designated endpoint. This means that a customer can subscribe to each PAN in order to receive updates, so that when these PANs have any changes, the customer will receive the updates via notifications on the designated endpoint.&lt;/p&gt;     &lt;p&gt;Different fields on the API are mandatory to use this model.&lt;/p&gt;&lt;p&gt;In order to complete a full end-to-end test scenario (including the notifications), it is necessary to be fully onboarded on ABU API Push model:&lt;/p&gt;     &lt;p&gt;- An endpoint provided by the customer must be registered with Mastercard so that notifications can be pro-actively sent out to the customer.&lt;/p&gt;     &lt;p&gt;- A certificate provided by Mastercard representative must be used by the customer to receive notifications on the designated endpoint.&lt;/p&gt;     &lt;br&gt;     &lt;p&gt;&lt;b&gt;* For customers who are already enrolled to ABU API Pull model and want to start using ABU API Push model, it is necessary to perform a technical enrollment that involves a certificate exchange and must be registered as an ABU API Push model user.&lt;/b&gt;&lt;/p&gt;     &lt;br&gt;     &lt;p&gt;For more details on how to proceed with onboarding for ABU API push model contact abu_push_onboarding@mastercard.com.&lt;/p&gt;&lt;p&gt;Note: This email is for ABU API push onboarding only. For general ABU API inquiry questions contact api_support@mastercard.com and for general ABU questions contact abu_helpdesk@mastercard.com.&lt;/p&gt;   &lt;/li&gt; &lt;/ul&gt;
     * @param abuRequest Request for ABU API (required)
     * @return AbuResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Possible causes: &lt;br&gt;Validation failure or System error.&lt;/br&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Possible causes:&lt;br&gt;ClientID not provisioned.&lt;br&gt; </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error. </td><td>  -  </td></tr>
     </table>
     */
    public AbuResponse abuPost(ABU abuRequest) throws ApiException {
        ApiResponse<AbuResponse> localVarResp = abuPostWithHttpInfo(abuRequest);
        return localVarResp.getData();
    }

    /**
     * Access methods for merchants to ABU program.
     * &lt;ul&gt;   &lt;li&gt;&lt;p&gt;&lt;b&gt;Pull model:&lt;/b&gt;&lt;/p&gt;     &lt;br&gt;     &lt;p&gt;To receive information for a given PAN, the customer sends a request and will receive a response with the most up to date information.&lt;/p&gt;     &lt;p&gt;In this page, customers can execute samples of requests to explore the pattern of the API responses. However, once the customer decides to start using the SDK, it is necessary to be fully onboarded to ABU API Pull model.&lt;/p&gt;   &lt;/li&gt;   &lt;br&gt;   &lt;li&gt;&lt;p&gt;&lt;b&gt;Push model:&lt;/b&gt;&lt;/p&gt;     &lt;br&gt;     &lt;p&gt;Customers can choose to automatically receive ABU account update notifications on a designated endpoint. This means that a customer can subscribe to each PAN in order to receive updates, so that when these PANs have any changes, the customer will receive the updates via notifications on the designated endpoint.&lt;/p&gt;     &lt;p&gt;Different fields on the API are mandatory to use this model.&lt;/p&gt;&lt;p&gt;In order to complete a full end-to-end test scenario (including the notifications), it is necessary to be fully onboarded on ABU API Push model:&lt;/p&gt;     &lt;p&gt;- An endpoint provided by the customer must be registered with Mastercard so that notifications can be pro-actively sent out to the customer.&lt;/p&gt;     &lt;p&gt;- A certificate provided by Mastercard representative must be used by the customer to receive notifications on the designated endpoint.&lt;/p&gt;     &lt;br&gt;     &lt;p&gt;&lt;b&gt;* For customers who are already enrolled to ABU API Pull model and want to start using ABU API Push model, it is necessary to perform a technical enrollment that involves a certificate exchange and must be registered as an ABU API Push model user.&lt;/b&gt;&lt;/p&gt;     &lt;br&gt;     &lt;p&gt;For more details on how to proceed with onboarding for ABU API push model contact abu_push_onboarding@mastercard.com.&lt;/p&gt;&lt;p&gt;Note: This email is for ABU API push onboarding only. For general ABU API inquiry questions contact api_support@mastercard.com and for general ABU questions contact abu_helpdesk@mastercard.com.&lt;/p&gt;   &lt;/li&gt; &lt;/ul&gt;
     * @param abuRequest Request for ABU API (required)
     * @return ApiResponse&lt;AbuResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Possible causes: &lt;br&gt;Validation failure or System error.&lt;/br&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Possible causes:&lt;br&gt;ClientID not provisioned.&lt;br&gt; </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AbuResponse> abuPostWithHttpInfo(ABU abuRequest) throws ApiException {
        okhttp3.Call localVarCall = abuPostValidateBeforeCall(abuRequest, null);
        Type localVarReturnType = new TypeToken<AbuResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Access methods for merchants to ABU program. (asynchronously)
     * &lt;ul&gt;   &lt;li&gt;&lt;p&gt;&lt;b&gt;Pull model:&lt;/b&gt;&lt;/p&gt;     &lt;br&gt;     &lt;p&gt;To receive information for a given PAN, the customer sends a request and will receive a response with the most up to date information.&lt;/p&gt;     &lt;p&gt;In this page, customers can execute samples of requests to explore the pattern of the API responses. However, once the customer decides to start using the SDK, it is necessary to be fully onboarded to ABU API Pull model.&lt;/p&gt;   &lt;/li&gt;   &lt;br&gt;   &lt;li&gt;&lt;p&gt;&lt;b&gt;Push model:&lt;/b&gt;&lt;/p&gt;     &lt;br&gt;     &lt;p&gt;Customers can choose to automatically receive ABU account update notifications on a designated endpoint. This means that a customer can subscribe to each PAN in order to receive updates, so that when these PANs have any changes, the customer will receive the updates via notifications on the designated endpoint.&lt;/p&gt;     &lt;p&gt;Different fields on the API are mandatory to use this model.&lt;/p&gt;&lt;p&gt;In order to complete a full end-to-end test scenario (including the notifications), it is necessary to be fully onboarded on ABU API Push model:&lt;/p&gt;     &lt;p&gt;- An endpoint provided by the customer must be registered with Mastercard so that notifications can be pro-actively sent out to the customer.&lt;/p&gt;     &lt;p&gt;- A certificate provided by Mastercard representative must be used by the customer to receive notifications on the designated endpoint.&lt;/p&gt;     &lt;br&gt;     &lt;p&gt;&lt;b&gt;* For customers who are already enrolled to ABU API Pull model and want to start using ABU API Push model, it is necessary to perform a technical enrollment that involves a certificate exchange and must be registered as an ABU API Push model user.&lt;/b&gt;&lt;/p&gt;     &lt;br&gt;     &lt;p&gt;For more details on how to proceed with onboarding for ABU API push model contact abu_push_onboarding@mastercard.com.&lt;/p&gt;&lt;p&gt;Note: This email is for ABU API push onboarding only. For general ABU API inquiry questions contact api_support@mastercard.com and for general ABU questions contact abu_helpdesk@mastercard.com.&lt;/p&gt;   &lt;/li&gt; &lt;/ul&gt;
     * @param abuRequest Request for ABU API (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Possible causes: &lt;br&gt;Validation failure or System error.&lt;/br&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Possible causes:&lt;br&gt;ClientID not provisioned.&lt;br&gt; </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> System error. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call abuPostAsync(ABU abuRequest, final ApiCallback<AbuResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = abuPostValidateBeforeCall(abuRequest, _callback);
        Type localVarReturnType = new TypeToken<AbuResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
