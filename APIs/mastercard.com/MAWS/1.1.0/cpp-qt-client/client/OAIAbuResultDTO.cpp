/**
 * MasterCard ABU API
 * Mastercard ABU API
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAbuResultDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAbuResultDTO::OAIAbuResultDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAbuResultDTO::OAIAbuResultDTO() {
    this->initializeModel();
}

OAIAbuResultDTO::~OAIAbuResultDTO() {}

void OAIAbuResultDTO::initializeModel() {

    m_discretionary_data_isSet = false;
    m_discretionary_data_isValid = false;

    m_ica_isSet = false;
    m_ica_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;

    m_new_account_number_isSet = false;
    m_new_account_number_isValid = false;

    m_new_expiration_date_isSet = false;
    m_new_expiration_date_isValid = false;

    m_old_account_number_isSet = false;
    m_old_account_number_isValid = false;

    m_old_expiration_date_isSet = false;
    m_old_expiration_date_isValid = false;

    m_reason_identifier_isSet = false;
    m_reason_identifier_isValid = false;

    m_response_indicator_isSet = false;
    m_response_indicator_isValid = false;

    m_sub_merchant_id_isSet = false;
    m_sub_merchant_id_isValid = false;

    m_subscription_identifier_isSet = false;
    m_subscription_identifier_isValid = false;

    m_subscription_indicator_isSet = false;
    m_subscription_indicator_isValid = false;
}

void OAIAbuResultDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAbuResultDTO::fromJsonObject(QJsonObject json) {

    m_discretionary_data_isValid = ::OpenAPI::fromJsonValue(m_discretionary_data, json[QString("discretionaryData")]);
    m_discretionary_data_isSet = !json[QString("discretionaryData")].isNull() && m_discretionary_data_isValid;

    m_ica_isValid = ::OpenAPI::fromJsonValue(m_ica, json[QString("ica")]);
    m_ica_isSet = !json[QString("ica")].isNull() && m_ica_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_id, json[QString("merchantId")]);
    m_merchant_id_isSet = !json[QString("merchantId")].isNull() && m_merchant_id_isValid;

    m_new_account_number_isValid = ::OpenAPI::fromJsonValue(m_new_account_number, json[QString("newAccountNumber")]);
    m_new_account_number_isSet = !json[QString("newAccountNumber")].isNull() && m_new_account_number_isValid;

    m_new_expiration_date_isValid = ::OpenAPI::fromJsonValue(m_new_expiration_date, json[QString("newExpirationDate")]);
    m_new_expiration_date_isSet = !json[QString("newExpirationDate")].isNull() && m_new_expiration_date_isValid;

    m_old_account_number_isValid = ::OpenAPI::fromJsonValue(m_old_account_number, json[QString("oldAccountNumber")]);
    m_old_account_number_isSet = !json[QString("oldAccountNumber")].isNull() && m_old_account_number_isValid;

    m_old_expiration_date_isValid = ::OpenAPI::fromJsonValue(m_old_expiration_date, json[QString("oldExpirationDate")]);
    m_old_expiration_date_isSet = !json[QString("oldExpirationDate")].isNull() && m_old_expiration_date_isValid;

    m_reason_identifier_isValid = ::OpenAPI::fromJsonValue(m_reason_identifier, json[QString("reasonIdentifier")]);
    m_reason_identifier_isSet = !json[QString("reasonIdentifier")].isNull() && m_reason_identifier_isValid;

    m_response_indicator_isValid = ::OpenAPI::fromJsonValue(m_response_indicator, json[QString("responseIndicator")]);
    m_response_indicator_isSet = !json[QString("responseIndicator")].isNull() && m_response_indicator_isValid;

    m_sub_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_id, json[QString("subMerchantId")]);
    m_sub_merchant_id_isSet = !json[QString("subMerchantId")].isNull() && m_sub_merchant_id_isValid;

    m_subscription_identifier_isValid = ::OpenAPI::fromJsonValue(m_subscription_identifier, json[QString("subscriptionIdentifier")]);
    m_subscription_identifier_isSet = !json[QString("subscriptionIdentifier")].isNull() && m_subscription_identifier_isValid;

    m_subscription_indicator_isValid = ::OpenAPI::fromJsonValue(m_subscription_indicator, json[QString("subscriptionIndicator")]);
    m_subscription_indicator_isSet = !json[QString("subscriptionIndicator")].isNull() && m_subscription_indicator_isValid;
}

QString OAIAbuResultDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAbuResultDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_discretionary_data_isSet) {
        obj.insert(QString("discretionaryData"), ::OpenAPI::toJsonValue(m_discretionary_data));
    }
    if (m_ica_isSet) {
        obj.insert(QString("ica"), ::OpenAPI::toJsonValue(m_ica));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchantId"), ::OpenAPI::toJsonValue(m_merchant_id));
    }
    if (m_new_account_number_isSet) {
        obj.insert(QString("newAccountNumber"), ::OpenAPI::toJsonValue(m_new_account_number));
    }
    if (m_new_expiration_date_isSet) {
        obj.insert(QString("newExpirationDate"), ::OpenAPI::toJsonValue(m_new_expiration_date));
    }
    if (m_old_account_number_isSet) {
        obj.insert(QString("oldAccountNumber"), ::OpenAPI::toJsonValue(m_old_account_number));
    }
    if (m_old_expiration_date_isSet) {
        obj.insert(QString("oldExpirationDate"), ::OpenAPI::toJsonValue(m_old_expiration_date));
    }
    if (m_reason_identifier_isSet) {
        obj.insert(QString("reasonIdentifier"), ::OpenAPI::toJsonValue(m_reason_identifier));
    }
    if (m_response_indicator_isSet) {
        obj.insert(QString("responseIndicator"), ::OpenAPI::toJsonValue(m_response_indicator));
    }
    if (m_sub_merchant_id_isSet) {
        obj.insert(QString("subMerchantId"), ::OpenAPI::toJsonValue(m_sub_merchant_id));
    }
    if (m_subscription_identifier_isSet) {
        obj.insert(QString("subscriptionIdentifier"), ::OpenAPI::toJsonValue(m_subscription_identifier));
    }
    if (m_subscription_indicator_isSet) {
        obj.insert(QString("subscriptionIndicator"), ::OpenAPI::toJsonValue(m_subscription_indicator));
    }
    return obj;
}

QString OAIAbuResultDTO::getDiscretionaryData() const {
    return m_discretionary_data;
}
void OAIAbuResultDTO::setDiscretionaryData(const QString &discretionary_data) {
    m_discretionary_data = discretionary_data;
    m_discretionary_data_isSet = true;
}

bool OAIAbuResultDTO::is_discretionary_data_Set() const{
    return m_discretionary_data_isSet;
}

bool OAIAbuResultDTO::is_discretionary_data_Valid() const{
    return m_discretionary_data_isValid;
}

QString OAIAbuResultDTO::getIca() const {
    return m_ica;
}
void OAIAbuResultDTO::setIca(const QString &ica) {
    m_ica = ica;
    m_ica_isSet = true;
}

bool OAIAbuResultDTO::is_ica_Set() const{
    return m_ica_isSet;
}

bool OAIAbuResultDTO::is_ica_Valid() const{
    return m_ica_isValid;
}

QString OAIAbuResultDTO::getMerchantId() const {
    return m_merchant_id;
}
void OAIAbuResultDTO::setMerchantId(const QString &merchant_id) {
    m_merchant_id = merchant_id;
    m_merchant_id_isSet = true;
}

bool OAIAbuResultDTO::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAIAbuResultDTO::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

QString OAIAbuResultDTO::getNewAccountNumber() const {
    return m_new_account_number;
}
void OAIAbuResultDTO::setNewAccountNumber(const QString &new_account_number) {
    m_new_account_number = new_account_number;
    m_new_account_number_isSet = true;
}

bool OAIAbuResultDTO::is_new_account_number_Set() const{
    return m_new_account_number_isSet;
}

bool OAIAbuResultDTO::is_new_account_number_Valid() const{
    return m_new_account_number_isValid;
}

QString OAIAbuResultDTO::getNewExpirationDate() const {
    return m_new_expiration_date;
}
void OAIAbuResultDTO::setNewExpirationDate(const QString &new_expiration_date) {
    m_new_expiration_date = new_expiration_date;
    m_new_expiration_date_isSet = true;
}

bool OAIAbuResultDTO::is_new_expiration_date_Set() const{
    return m_new_expiration_date_isSet;
}

bool OAIAbuResultDTO::is_new_expiration_date_Valid() const{
    return m_new_expiration_date_isValid;
}

QString OAIAbuResultDTO::getOldAccountNumber() const {
    return m_old_account_number;
}
void OAIAbuResultDTO::setOldAccountNumber(const QString &old_account_number) {
    m_old_account_number = old_account_number;
    m_old_account_number_isSet = true;
}

bool OAIAbuResultDTO::is_old_account_number_Set() const{
    return m_old_account_number_isSet;
}

bool OAIAbuResultDTO::is_old_account_number_Valid() const{
    return m_old_account_number_isValid;
}

QString OAIAbuResultDTO::getOldExpirationDate() const {
    return m_old_expiration_date;
}
void OAIAbuResultDTO::setOldExpirationDate(const QString &old_expiration_date) {
    m_old_expiration_date = old_expiration_date;
    m_old_expiration_date_isSet = true;
}

bool OAIAbuResultDTO::is_old_expiration_date_Set() const{
    return m_old_expiration_date_isSet;
}

bool OAIAbuResultDTO::is_old_expiration_date_Valid() const{
    return m_old_expiration_date_isValid;
}

QString OAIAbuResultDTO::getReasonIdentifier() const {
    return m_reason_identifier;
}
void OAIAbuResultDTO::setReasonIdentifier(const QString &reason_identifier) {
    m_reason_identifier = reason_identifier;
    m_reason_identifier_isSet = true;
}

bool OAIAbuResultDTO::is_reason_identifier_Set() const{
    return m_reason_identifier_isSet;
}

bool OAIAbuResultDTO::is_reason_identifier_Valid() const{
    return m_reason_identifier_isValid;
}

QString OAIAbuResultDTO::getResponseIndicator() const {
    return m_response_indicator;
}
void OAIAbuResultDTO::setResponseIndicator(const QString &response_indicator) {
    m_response_indicator = response_indicator;
    m_response_indicator_isSet = true;
}

bool OAIAbuResultDTO::is_response_indicator_Set() const{
    return m_response_indicator_isSet;
}

bool OAIAbuResultDTO::is_response_indicator_Valid() const{
    return m_response_indicator_isValid;
}

QString OAIAbuResultDTO::getSubMerchantId() const {
    return m_sub_merchant_id;
}
void OAIAbuResultDTO::setSubMerchantId(const QString &sub_merchant_id) {
    m_sub_merchant_id = sub_merchant_id;
    m_sub_merchant_id_isSet = true;
}

bool OAIAbuResultDTO::is_sub_merchant_id_Set() const{
    return m_sub_merchant_id_isSet;
}

bool OAIAbuResultDTO::is_sub_merchant_id_Valid() const{
    return m_sub_merchant_id_isValid;
}

QString OAIAbuResultDTO::getSubscriptionIdentifier() const {
    return m_subscription_identifier;
}
void OAIAbuResultDTO::setSubscriptionIdentifier(const QString &subscription_identifier) {
    m_subscription_identifier = subscription_identifier;
    m_subscription_identifier_isSet = true;
}

bool OAIAbuResultDTO::is_subscription_identifier_Set() const{
    return m_subscription_identifier_isSet;
}

bool OAIAbuResultDTO::is_subscription_identifier_Valid() const{
    return m_subscription_identifier_isValid;
}

QString OAIAbuResultDTO::getSubscriptionIndicator() const {
    return m_subscription_indicator;
}
void OAIAbuResultDTO::setSubscriptionIndicator(const QString &subscription_indicator) {
    m_subscription_indicator = subscription_indicator;
    m_subscription_indicator_isSet = true;
}

bool OAIAbuResultDTO::is_subscription_indicator_Set() const{
    return m_subscription_indicator_isSet;
}

bool OAIAbuResultDTO::is_subscription_indicator_Valid() const{
    return m_subscription_indicator_isValid;
}

bool OAIAbuResultDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_discretionary_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ica_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_expiration_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_old_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_old_expiration_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reason_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAbuResultDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
