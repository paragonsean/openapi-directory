/**
 * MasterCard ABU API
 * Mastercard ABU API
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAbuDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAbuDTO::OAIAbuDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAbuDTO::OAIAbuDTO() {
    this->initializeModel();
}

OAIAbuDTO::~OAIAbuDTO() {}

void OAIAbuDTO::initializeModel() {

    m_discretionary_data_isSet = false;
    m_discretionary_data_isValid = false;

    m_ica_isSet = false;
    m_ica_isValid = false;

    m_merchant_id_isSet = false;
    m_merchant_id_isValid = false;

    m_old_account_number_isSet = false;
    m_old_account_number_isValid = false;

    m_old_expiration_date_isSet = false;
    m_old_expiration_date_isValid = false;

    m_sub_merchant_id_isSet = false;
    m_sub_merchant_id_isValid = false;

    m_subscribe_isSet = false;
    m_subscribe_isValid = false;
}

void OAIAbuDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAbuDTO::fromJsonObject(QJsonObject json) {

    m_discretionary_data_isValid = ::OpenAPI::fromJsonValue(m_discretionary_data, json[QString("discretionaryData")]);
    m_discretionary_data_isSet = !json[QString("discretionaryData")].isNull() && m_discretionary_data_isValid;

    m_ica_isValid = ::OpenAPI::fromJsonValue(m_ica, json[QString("ica")]);
    m_ica_isSet = !json[QString("ica")].isNull() && m_ica_isValid;

    m_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_merchant_id, json[QString("merchantId")]);
    m_merchant_id_isSet = !json[QString("merchantId")].isNull() && m_merchant_id_isValid;

    m_old_account_number_isValid = ::OpenAPI::fromJsonValue(m_old_account_number, json[QString("oldAccountNumber")]);
    m_old_account_number_isSet = !json[QString("oldAccountNumber")].isNull() && m_old_account_number_isValid;

    m_old_expiration_date_isValid = ::OpenAPI::fromJsonValue(m_old_expiration_date, json[QString("oldExpirationDate")]);
    m_old_expiration_date_isSet = !json[QString("oldExpirationDate")].isNull() && m_old_expiration_date_isValid;

    m_sub_merchant_id_isValid = ::OpenAPI::fromJsonValue(m_sub_merchant_id, json[QString("subMerchantId")]);
    m_sub_merchant_id_isSet = !json[QString("subMerchantId")].isNull() && m_sub_merchant_id_isValid;

    m_subscribe_isValid = ::OpenAPI::fromJsonValue(m_subscribe, json[QString("subscribe")]);
    m_subscribe_isSet = !json[QString("subscribe")].isNull() && m_subscribe_isValid;
}

QString OAIAbuDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAbuDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_discretionary_data_isSet) {
        obj.insert(QString("discretionaryData"), ::OpenAPI::toJsonValue(m_discretionary_data));
    }
    if (m_ica_isSet) {
        obj.insert(QString("ica"), ::OpenAPI::toJsonValue(m_ica));
    }
    if (m_merchant_id_isSet) {
        obj.insert(QString("merchantId"), ::OpenAPI::toJsonValue(m_merchant_id));
    }
    if (m_old_account_number_isSet) {
        obj.insert(QString("oldAccountNumber"), ::OpenAPI::toJsonValue(m_old_account_number));
    }
    if (m_old_expiration_date_isSet) {
        obj.insert(QString("oldExpirationDate"), ::OpenAPI::toJsonValue(m_old_expiration_date));
    }
    if (m_sub_merchant_id_isSet) {
        obj.insert(QString("subMerchantId"), ::OpenAPI::toJsonValue(m_sub_merchant_id));
    }
    if (m_subscribe_isSet) {
        obj.insert(QString("subscribe"), ::OpenAPI::toJsonValue(m_subscribe));
    }
    return obj;
}

QString OAIAbuDTO::getDiscretionaryData() const {
    return m_discretionary_data;
}
void OAIAbuDTO::setDiscretionaryData(const QString &discretionary_data) {
    m_discretionary_data = discretionary_data;
    m_discretionary_data_isSet = true;
}

bool OAIAbuDTO::is_discretionary_data_Set() const{
    return m_discretionary_data_isSet;
}

bool OAIAbuDTO::is_discretionary_data_Valid() const{
    return m_discretionary_data_isValid;
}

QString OAIAbuDTO::getIca() const {
    return m_ica;
}
void OAIAbuDTO::setIca(const QString &ica) {
    m_ica = ica;
    m_ica_isSet = true;
}

bool OAIAbuDTO::is_ica_Set() const{
    return m_ica_isSet;
}

bool OAIAbuDTO::is_ica_Valid() const{
    return m_ica_isValid;
}

QString OAIAbuDTO::getMerchantId() const {
    return m_merchant_id;
}
void OAIAbuDTO::setMerchantId(const QString &merchant_id) {
    m_merchant_id = merchant_id;
    m_merchant_id_isSet = true;
}

bool OAIAbuDTO::is_merchant_id_Set() const{
    return m_merchant_id_isSet;
}

bool OAIAbuDTO::is_merchant_id_Valid() const{
    return m_merchant_id_isValid;
}

QString OAIAbuDTO::getOldAccountNumber() const {
    return m_old_account_number;
}
void OAIAbuDTO::setOldAccountNumber(const QString &old_account_number) {
    m_old_account_number = old_account_number;
    m_old_account_number_isSet = true;
}

bool OAIAbuDTO::is_old_account_number_Set() const{
    return m_old_account_number_isSet;
}

bool OAIAbuDTO::is_old_account_number_Valid() const{
    return m_old_account_number_isValid;
}

QString OAIAbuDTO::getOldExpirationDate() const {
    return m_old_expiration_date;
}
void OAIAbuDTO::setOldExpirationDate(const QString &old_expiration_date) {
    m_old_expiration_date = old_expiration_date;
    m_old_expiration_date_isSet = true;
}

bool OAIAbuDTO::is_old_expiration_date_Set() const{
    return m_old_expiration_date_isSet;
}

bool OAIAbuDTO::is_old_expiration_date_Valid() const{
    return m_old_expiration_date_isValid;
}

QString OAIAbuDTO::getSubMerchantId() const {
    return m_sub_merchant_id;
}
void OAIAbuDTO::setSubMerchantId(const QString &sub_merchant_id) {
    m_sub_merchant_id = sub_merchant_id;
    m_sub_merchant_id_isSet = true;
}

bool OAIAbuDTO::is_sub_merchant_id_Set() const{
    return m_sub_merchant_id_isSet;
}

bool OAIAbuDTO::is_sub_merchant_id_Valid() const{
    return m_sub_merchant_id_isValid;
}

QString OAIAbuDTO::getSubscribe() const {
    return m_subscribe;
}
void OAIAbuDTO::setSubscribe(const QString &subscribe) {
    m_subscribe = subscribe;
    m_subscribe_isSet = true;
}

bool OAIAbuDTO::is_subscribe_Set() const{
    return m_subscribe_isSet;
}

bool OAIAbuDTO::is_subscribe_Valid() const{
    return m_subscribe_isValid;
}

bool OAIAbuDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_discretionary_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ica_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_old_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_old_expiration_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_merchant_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscribe_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAbuDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_merchant_id_isValid && m_old_account_number_isValid && m_old_expiration_date_isValid && true;
}

} // namespace OpenAPI
