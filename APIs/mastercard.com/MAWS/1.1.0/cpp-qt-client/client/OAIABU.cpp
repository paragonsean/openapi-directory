/**
 * MasterCard ABU API
 * Mastercard ABU API
 *
 * The version of the OpenAPI document: 1.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIABU.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIABU::OAIABU(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIABU::OAIABU() {
    this->initializeModel();
}

OAIABU::~OAIABU() {}

void OAIABU::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_jsonrpc_isSet = false;
    m_jsonrpc_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_params_isSet = false;
    m_params_isValid = false;
}

void OAIABU::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIABU::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_jsonrpc_isValid = ::OpenAPI::fromJsonValue(m_jsonrpc, json[QString("jsonrpc")]);
    m_jsonrpc_isSet = !json[QString("jsonrpc")].isNull() && m_jsonrpc_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_params_isValid = ::OpenAPI::fromJsonValue(m_params, json[QString("params")]);
    m_params_isSet = !json[QString("params")].isNull() && m_params_isValid;
}

QString OAIABU::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIABU::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_jsonrpc_isSet) {
        obj.insert(QString("jsonrpc"), ::OpenAPI::toJsonValue(m_jsonrpc));
    }
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_params.isSet()) {
        obj.insert(QString("params"), ::OpenAPI::toJsonValue(m_params));
    }
    return obj;
}

QString OAIABU::getId() const {
    return m_id;
}
void OAIABU::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIABU::is_id_Set() const{
    return m_id_isSet;
}

bool OAIABU::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIABU::getJsonrpc() const {
    return m_jsonrpc;
}
void OAIABU::setJsonrpc(const QString &jsonrpc) {
    m_jsonrpc = jsonrpc;
    m_jsonrpc_isSet = true;
}

bool OAIABU::is_jsonrpc_Set() const{
    return m_jsonrpc_isSet;
}

bool OAIABU::is_jsonrpc_Valid() const{
    return m_jsonrpc_isValid;
}

QString OAIABU::getMethod() const {
    return m_method;
}
void OAIABU::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIABU::is_method_Set() const{
    return m_method_isSet;
}

bool OAIABU::is_method_Valid() const{
    return m_method_isValid;
}

OAIAbuDTO OAIABU::getParams() const {
    return m_params;
}
void OAIABU::setParams(const OAIAbuDTO &params) {
    m_params = params;
    m_params_isSet = true;
}

bool OAIABU::is_params_Set() const{
    return m_params_isSet;
}

bool OAIABU::is_params_Valid() const{
    return m_params_isValid;
}

bool OAIABU::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_jsonrpc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_params.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIABU::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_method_isValid && m_params_isValid && true;
}

} // namespace OpenAPI
