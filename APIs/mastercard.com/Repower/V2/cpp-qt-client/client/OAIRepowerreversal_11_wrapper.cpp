/**
 * rePower
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepowerreversal_11_wrapper.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepowerreversal_11_wrapper::OAIRepowerreversal_11_wrapper(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepowerreversal_11_wrapper::OAIRepowerreversal_11_wrapper() {
    this->initializeModel();
}

OAIRepowerreversal_11_wrapper::~OAIRepowerreversal_11_wrapper() {}

void OAIRepowerreversal_11_wrapper::initializeModel() {

    m_repower_reversal_isSet = false;
    m_repower_reversal_isValid = false;
}

void OAIRepowerreversal_11_wrapper::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepowerreversal_11_wrapper::fromJsonObject(QJsonObject json) {

    m_repower_reversal_isValid = ::OpenAPI::fromJsonValue(m_repower_reversal, json[QString("RepowerReversal")]);
    m_repower_reversal_isSet = !json[QString("RepowerReversal")].isNull() && m_repower_reversal_isValid;
}

QString OAIRepowerreversal_11_wrapper::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepowerreversal_11_wrapper::asJsonObject() const {
    QJsonObject obj;
    if (m_repower_reversal.isSet()) {
        obj.insert(QString("RepowerReversal"), ::OpenAPI::toJsonValue(m_repower_reversal));
    }
    return obj;
}

OAIRepowerreversal_11 OAIRepowerreversal_11_wrapper::getRepowerReversal() const {
    return m_repower_reversal;
}
void OAIRepowerreversal_11_wrapper::setRepowerReversal(const OAIRepowerreversal_11 &repower_reversal) {
    m_repower_reversal = repower_reversal;
    m_repower_reversal_isSet = true;
}

bool OAIRepowerreversal_11_wrapper::is_repower_reversal_Set() const{
    return m_repower_reversal_isSet;
}

bool OAIRepowerreversal_11_wrapper::is_repower_reversal_Valid() const{
    return m_repower_reversal_isValid;
}

bool OAIRepowerreversal_11_wrapper::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_repower_reversal.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepowerreversal_11_wrapper::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
