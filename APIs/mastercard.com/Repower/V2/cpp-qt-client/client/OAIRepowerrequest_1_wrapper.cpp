/**
 * rePower
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepowerrequest_1_wrapper.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepowerrequest_1_wrapper::OAIRepowerrequest_1_wrapper(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepowerrequest_1_wrapper::OAIRepowerrequest_1_wrapper() {
    this->initializeModel();
}

OAIRepowerrequest_1_wrapper::~OAIRepowerrequest_1_wrapper() {}

void OAIRepowerrequest_1_wrapper::initializeModel() {

    m_repower_request_isSet = false;
    m_repower_request_isValid = false;
}

void OAIRepowerrequest_1_wrapper::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepowerrequest_1_wrapper::fromJsonObject(QJsonObject json) {

    m_repower_request_isValid = ::OpenAPI::fromJsonValue(m_repower_request, json[QString("RepowerRequest")]);
    m_repower_request_isSet = !json[QString("RepowerRequest")].isNull() && m_repower_request_isValid;
}

QString OAIRepowerrequest_1_wrapper::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepowerrequest_1_wrapper::asJsonObject() const {
    QJsonObject obj;
    if (m_repower_request.isSet()) {
        obj.insert(QString("RepowerRequest"), ::OpenAPI::toJsonValue(m_repower_request));
    }
    return obj;
}

OAIRepowerrequest_1 OAIRepowerrequest_1_wrapper::getRepowerRequest() const {
    return m_repower_request;
}
void OAIRepowerrequest_1_wrapper::setRepowerRequest(const OAIRepowerrequest_1 &repower_request) {
    m_repower_request = repower_request;
    m_repower_request_isSet = true;
}

bool OAIRepowerrequest_1_wrapper::is_repower_request_Set() const{
    return m_repower_request_isSet;
}

bool OAIRepowerrequest_1_wrapper::is_repower_request_Valid() const{
    return m_repower_request_isValid;
}

bool OAIRepowerrequest_1_wrapper::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_repower_request.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepowerrequest_1_wrapper::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
