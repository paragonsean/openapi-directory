/**
 * rePower
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepowerreversalrequest_10.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepowerreversalrequest_10::OAIRepowerreversalrequest_10(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepowerreversalrequest_10::OAIRepowerreversalrequest_10() {
    this->initializeModel();
}

OAIRepowerreversalrequest_10::~OAIRepowerreversalrequest_10() {}

void OAIRepowerreversalrequest_10::initializeModel() {

    m_ica_isSet = false;
    m_ica_isValid = false;

    m_reversal_reason_isSet = false;
    m_reversal_reason_isValid = false;

    m_transaction_reference_isSet = false;
    m_transaction_reference_isValid = false;
}

void OAIRepowerreversalrequest_10::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepowerreversalrequest_10::fromJsonObject(QJsonObject json) {

    m_ica_isValid = ::OpenAPI::fromJsonValue(m_ica, json[QString("ICA")]);
    m_ica_isSet = !json[QString("ICA")].isNull() && m_ica_isValid;

    m_reversal_reason_isValid = ::OpenAPI::fromJsonValue(m_reversal_reason, json[QString("ReversalReason")]);
    m_reversal_reason_isSet = !json[QString("ReversalReason")].isNull() && m_reversal_reason_isValid;

    m_transaction_reference_isValid = ::OpenAPI::fromJsonValue(m_transaction_reference, json[QString("TransactionReference")]);
    m_transaction_reference_isSet = !json[QString("TransactionReference")].isNull() && m_transaction_reference_isValid;
}

QString OAIRepowerreversalrequest_10::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepowerreversalrequest_10::asJsonObject() const {
    QJsonObject obj;
    if (m_ica_isSet) {
        obj.insert(QString("ICA"), ::OpenAPI::toJsonValue(m_ica));
    }
    if (m_reversal_reason_isSet) {
        obj.insert(QString("ReversalReason"), ::OpenAPI::toJsonValue(m_reversal_reason));
    }
    if (m_transaction_reference_isSet) {
        obj.insert(QString("TransactionReference"), ::OpenAPI::toJsonValue(m_transaction_reference));
    }
    return obj;
}

QString OAIRepowerreversalrequest_10::getIca() const {
    return m_ica;
}
void OAIRepowerreversalrequest_10::setIca(const QString &ica) {
    m_ica = ica;
    m_ica_isSet = true;
}

bool OAIRepowerreversalrequest_10::is_ica_Set() const{
    return m_ica_isSet;
}

bool OAIRepowerreversalrequest_10::is_ica_Valid() const{
    return m_ica_isValid;
}

QString OAIRepowerreversalrequest_10::getReversalReason() const {
    return m_reversal_reason;
}
void OAIRepowerreversalrequest_10::setReversalReason(const QString &reversal_reason) {
    m_reversal_reason = reversal_reason;
    m_reversal_reason_isSet = true;
}

bool OAIRepowerreversalrequest_10::is_reversal_reason_Set() const{
    return m_reversal_reason_isSet;
}

bool OAIRepowerreversalrequest_10::is_reversal_reason_Valid() const{
    return m_reversal_reason_isValid;
}

QString OAIRepowerreversalrequest_10::getTransactionReference() const {
    return m_transaction_reference;
}
void OAIRepowerreversalrequest_10::setTransactionReference(const QString &transaction_reference) {
    m_transaction_reference = transaction_reference;
    m_transaction_reference_isSet = true;
}

bool OAIRepowerreversalrequest_10::is_transaction_reference_Set() const{
    return m_transaction_reference_isSet;
}

bool OAIRepowerreversalrequest_10::is_transaction_reference_Valid() const{
    return m_transaction_reference_isValid;
}

bool OAIRepowerreversalrequest_10::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ica_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reversal_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepowerreversalrequest_10::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ica_isValid && m_reversal_reason_isValid && m_transaction_reference_isValid && true;
}

} // namespace OpenAPI
