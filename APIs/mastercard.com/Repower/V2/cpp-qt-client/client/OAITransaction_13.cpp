/**
 * rePower
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransaction_13.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransaction_13::OAITransaction_13(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransaction_13::OAITransaction_13() {
    this->initializeModel();
}

OAITransaction_13::~OAITransaction_13() {}

void OAITransaction_13::initializeModel() {

    m_network_reference_number_isSet = false;
    m_network_reference_number_isValid = false;

    m_response_isSet = false;
    m_response_isValid = false;

    m_settlement_date_isSet = false;
    m_settlement_date_isValid = false;

    m_submit_date_time_isSet = false;
    m_submit_date_time_isValid = false;

    m_system_trace_audit_number_isSet = false;
    m_system_trace_audit_number_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAITransaction_13::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransaction_13::fromJsonObject(QJsonObject json) {

    m_network_reference_number_isValid = ::OpenAPI::fromJsonValue(m_network_reference_number, json[QString("NetworkReferenceNumber")]);
    m_network_reference_number_isSet = !json[QString("NetworkReferenceNumber")].isNull() && m_network_reference_number_isValid;

    m_response_isValid = ::OpenAPI::fromJsonValue(m_response, json[QString("Response")]);
    m_response_isSet = !json[QString("Response")].isNull() && m_response_isValid;

    m_settlement_date_isValid = ::OpenAPI::fromJsonValue(m_settlement_date, json[QString("SettlementDate")]);
    m_settlement_date_isSet = !json[QString("SettlementDate")].isNull() && m_settlement_date_isValid;

    m_submit_date_time_isValid = ::OpenAPI::fromJsonValue(m_submit_date_time, json[QString("SubmitDateTime")]);
    m_submit_date_time_isSet = !json[QString("SubmitDateTime")].isNull() && m_submit_date_time_isValid;

    m_system_trace_audit_number_isValid = ::OpenAPI::fromJsonValue(m_system_trace_audit_number, json[QString("SystemTraceAuditNumber")]);
    m_system_trace_audit_number_isSet = !json[QString("SystemTraceAuditNumber")].isNull() && m_system_trace_audit_number_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;
}

QString OAITransaction_13::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransaction_13::asJsonObject() const {
    QJsonObject obj;
    if (m_network_reference_number_isSet) {
        obj.insert(QString("NetworkReferenceNumber"), ::OpenAPI::toJsonValue(m_network_reference_number));
    }
    if (m_response.isSet()) {
        obj.insert(QString("Response"), ::OpenAPI::toJsonValue(m_response));
    }
    if (m_settlement_date_isSet) {
        obj.insert(QString("SettlementDate"), ::OpenAPI::toJsonValue(m_settlement_date));
    }
    if (m_submit_date_time_isSet) {
        obj.insert(QString("SubmitDateTime"), ::OpenAPI::toJsonValue(m_submit_date_time));
    }
    if (m_system_trace_audit_number_isSet) {
        obj.insert(QString("SystemTraceAuditNumber"), ::OpenAPI::toJsonValue(m_system_trace_audit_number));
    }
    if (m_type_isSet) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAITransaction_13::getNetworkReferenceNumber() const {
    return m_network_reference_number;
}
void OAITransaction_13::setNetworkReferenceNumber(const QString &network_reference_number) {
    m_network_reference_number = network_reference_number;
    m_network_reference_number_isSet = true;
}

bool OAITransaction_13::is_network_reference_number_Set() const{
    return m_network_reference_number_isSet;
}

bool OAITransaction_13::is_network_reference_number_Valid() const{
    return m_network_reference_number_isValid;
}

OAIResponse_14 OAITransaction_13::getResponse() const {
    return m_response;
}
void OAITransaction_13::setResponse(const OAIResponse_14 &response) {
    m_response = response;
    m_response_isSet = true;
}

bool OAITransaction_13::is_response_Set() const{
    return m_response_isSet;
}

bool OAITransaction_13::is_response_Valid() const{
    return m_response_isValid;
}

QString OAITransaction_13::getSettlementDate() const {
    return m_settlement_date;
}
void OAITransaction_13::setSettlementDate(const QString &settlement_date) {
    m_settlement_date = settlement_date;
    m_settlement_date_isSet = true;
}

bool OAITransaction_13::is_settlement_date_Set() const{
    return m_settlement_date_isSet;
}

bool OAITransaction_13::is_settlement_date_Valid() const{
    return m_settlement_date_isValid;
}

QString OAITransaction_13::getSubmitDateTime() const {
    return m_submit_date_time;
}
void OAITransaction_13::setSubmitDateTime(const QString &submit_date_time) {
    m_submit_date_time = submit_date_time;
    m_submit_date_time_isSet = true;
}

bool OAITransaction_13::is_submit_date_time_Set() const{
    return m_submit_date_time_isSet;
}

bool OAITransaction_13::is_submit_date_time_Valid() const{
    return m_submit_date_time_isValid;
}

QString OAITransaction_13::getSystemTraceAuditNumber() const {
    return m_system_trace_audit_number;
}
void OAITransaction_13::setSystemTraceAuditNumber(const QString &system_trace_audit_number) {
    m_system_trace_audit_number = system_trace_audit_number;
    m_system_trace_audit_number_isSet = true;
}

bool OAITransaction_13::is_system_trace_audit_number_Set() const{
    return m_system_trace_audit_number_isSet;
}

bool OAITransaction_13::is_system_trace_audit_number_Valid() const{
    return m_system_trace_audit_number_isValid;
}

QString OAITransaction_13::getType() const {
    return m_type;
}
void OAITransaction_13::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAITransaction_13::is_type_Set() const{
    return m_type_isSet;
}

bool OAITransaction_13::is_type_Valid() const{
    return m_type_isValid;
}

bool OAITransaction_13::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_network_reference_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_settlement_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submit_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_trace_audit_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransaction_13::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
