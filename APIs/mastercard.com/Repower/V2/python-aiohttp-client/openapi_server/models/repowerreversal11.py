# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transactionhistory12 import Transactionhistory12
from openapi_server import util


class Repowerreversal11(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, original_request_id: str=None, request_id: str=None, transaction_history: Transactionhistory12=None, transaction_reference: str=None):
        """Repowerreversal11 - a model defined in OpenAPI

        :param original_request_id: The original_request_id of this Repowerreversal11.
        :param request_id: The request_id of this Repowerreversal11.
        :param transaction_history: The transaction_history of this Repowerreversal11.
        :param transaction_reference: The transaction_reference of this Repowerreversal11.
        """
        self.openapi_types = {
            'original_request_id': str,
            'request_id': str,
            'transaction_history': Transactionhistory12,
            'transaction_reference': str
        }

        self.attribute_map = {
            'original_request_id': 'OriginalRequestId',
            'request_id': 'RequestId',
            'transaction_history': 'TransactionHistory',
            'transaction_reference': 'TransactionReference'
        }

        self._original_request_id = original_request_id
        self._request_id = request_id
        self._transaction_history = transaction_history
        self._transaction_reference = transaction_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Repowerreversal11':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Repowerreversal_11 of this Repowerreversal11.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def original_request_id(self):
        """Gets the original_request_id of this Repowerreversal11.

        Unique identifier assigned to the original rePower transaction request. Details- Numeric value, 1-19

        :return: The original_request_id of this Repowerreversal11.
        :rtype: str
        """
        return self._original_request_id

    @original_request_id.setter
    def original_request_id(self, original_request_id):
        """Sets the original_request_id of this Repowerreversal11.

        Unique identifier assigned to the original rePower transaction request. Details- Numeric value, 1-19

        :param original_request_id: The original_request_id of this Repowerreversal11.
        :type original_request_id: str
        """

        self._original_request_id = original_request_id

    @property
    def request_id(self):
        """Gets the request_id of this Repowerreversal11.

        This is the unique identifier for API Web service request. Details- Numeric value, variable length between 1 and 19 digits, without zero padding

        :return: The request_id of this Repowerreversal11.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this Repowerreversal11.

        This is the unique identifier for API Web service request. Details- Numeric value, variable length between 1 and 19 digits, without zero padding

        :param request_id: The request_id of this Repowerreversal11.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def transaction_history(self):
        """Gets the transaction_history of this Repowerreversal11.


        :return: The transaction_history of this Repowerreversal11.
        :rtype: Transactionhistory12
        """
        return self._transaction_history

    @transaction_history.setter
    def transaction_history(self, transaction_history):
        """Sets the transaction_history of this Repowerreversal11.


        :param transaction_history: The transaction_history of this Repowerreversal11.
        :type transaction_history: Transactionhistory12
        """

        self._transaction_history = transaction_history

    @property
    def transaction_reference(self):
        """Gets the transaction_reference of this Repowerreversal11.

        This is the Request ID for the original rePower transaction provided by the merchant or acquiring institution. Details- Alphanumeric value, 19

        :return: The transaction_reference of this Repowerreversal11.
        :rtype: str
        """
        return self._transaction_reference

    @transaction_reference.setter
    def transaction_reference(self, transaction_reference):
        """Sets the transaction_reference of this Repowerreversal11.

        This is the Request ID for the original rePower transaction provided by the merchant or acquiring institution. Details- Alphanumeric value, 19

        :param transaction_reference: The transaction_reference of this Repowerreversal11.
        :type transaction_reference: str
        """

        self._transaction_reference = transaction_reference
