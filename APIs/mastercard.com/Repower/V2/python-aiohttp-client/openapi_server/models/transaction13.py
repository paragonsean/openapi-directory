# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.response14 import Response14
from openapi_server import util


class Transaction13(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, network_reference_number: str=None, response: Response14=None, settlement_date: str=None, submit_date_time: str=None, system_trace_audit_number: str=None, type: str=None):
        """Transaction13 - a model defined in OpenAPI

        :param network_reference_number: The network_reference_number of this Transaction13.
        :param response: The response of this Transaction13.
        :param settlement_date: The settlement_date of this Transaction13.
        :param submit_date_time: The submit_date_time of this Transaction13.
        :param system_trace_audit_number: The system_trace_audit_number of this Transaction13.
        :param type: The type of this Transaction13.
        """
        self.openapi_types = {
            'network_reference_number': str,
            'response': Response14,
            'settlement_date': str,
            'submit_date_time': str,
            'system_trace_audit_number': str,
            'type': str
        }

        self.attribute_map = {
            'network_reference_number': 'NetworkReferenceNumber',
            'response': 'Response',
            'settlement_date': 'SettlementDate',
            'submit_date_time': 'SubmitDateTime',
            'system_trace_audit_number': 'SystemTraceAuditNumber',
            'type': 'Type'
        }

        self._network_reference_number = network_reference_number
        self._response = response
        self._settlement_date = settlement_date
        self._submit_date_time = submit_date_time
        self._system_trace_audit_number = system_trace_audit_number
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Transaction13':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Transaction_13 of this Transaction13.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def network_reference_number(self):
        """Gets the network_reference_number of this Transaction13.

        Network Reference Number that can be used for transaction inquiry. Details- Numeric, 9

        :return: The network_reference_number of this Transaction13.
        :rtype: str
        """
        return self._network_reference_number

    @network_reference_number.setter
    def network_reference_number(self, network_reference_number):
        """Sets the network_reference_number of this Transaction13.

        Network Reference Number that can be used for transaction inquiry. Details- Numeric, 9

        :param network_reference_number: The network_reference_number of this Transaction13.
        :type network_reference_number: str
        """

        self._network_reference_number = network_reference_number

    @property
    def response(self):
        """Gets the response of this Transaction13.


        :return: The response of this Transaction13.
        :rtype: Response14
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this Transaction13.


        :param response: The response of this Transaction13.
        :type response: Response14
        """

        self._response = response

    @property
    def settlement_date(self):
        """Gets the settlement_date of this Transaction13.

        Date Funds will be transferred between the acquirer and issuer by Single Message System, in MMDD format

        :return: The settlement_date of this Transaction13.
        :rtype: str
        """
        return self._settlement_date

    @settlement_date.setter
    def settlement_date(self, settlement_date):
        """Sets the settlement_date of this Transaction13.

        Date Funds will be transferred between the acquirer and issuer by Single Message System, in MMDD format

        :param settlement_date: The settlement_date of this Transaction13.
        :type settlement_date: str
        """

        self._settlement_date = settlement_date

    @property
    def submit_date_time(self):
        """Gets the submit_date_time of this Transaction13.

        This is the time and date of the transaction submission, in the following format: <date>T<time>Z, where date> is YYYY-MM-DD, <time> is HH:MM:SS

        :return: The submit_date_time of this Transaction13.
        :rtype: str
        """
        return self._submit_date_time

    @submit_date_time.setter
    def submit_date_time(self, submit_date_time):
        """Sets the submit_date_time of this Transaction13.

        This is the time and date of the transaction submission, in the following format: <date>T<time>Z, where date> is YYYY-MM-DD, <time> is HH:MM:SS

        :param submit_date_time: The submit_date_time of this Transaction13.
        :type submit_date_time: str
        """

        self._submit_date_time = submit_date_time

    @property
    def system_trace_audit_number(self):
        """Gets the system_trace_audit_number of this Transaction13.

        Identifier assigned to each transaction by the rePower service. This identifier is unique for any single UTC date. Details- Numeric value, 6

        :return: The system_trace_audit_number of this Transaction13.
        :rtype: str
        """
        return self._system_trace_audit_number

    @system_trace_audit_number.setter
    def system_trace_audit_number(self, system_trace_audit_number):
        """Sets the system_trace_audit_number of this Transaction13.

        Identifier assigned to each transaction by the rePower service. This identifier is unique for any single UTC date. Details- Numeric value, 6

        :param system_trace_audit_number: The system_trace_audit_number of this Transaction13.
        :type system_trace_audit_number: str
        """

        self._system_trace_audit_number = system_trace_audit_number

    @property
    def type(self):
        """Gets the type of this Transaction13.

        Type of transaction. Details- Alpha

        :return: The type of this Transaction13.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Transaction13.

        Type of transaction. Details- Alpha

        :param type: The type of this Transaction13.
        :type type: str
        """

        self._type = type
