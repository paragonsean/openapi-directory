/*
 * rePower
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Repower5Wrapper;
import org.openapitools.client.model.Repowerrequest1Wrapper;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RePowerTransferApi
 */
@Disabled
public class RePowerTransferApiTest {

    private final RePowerTransferApi api = new RePowerTransferApi();

    /**
     * Mastercard rePower empowers consumers to instantly add money to eligible Mastercard cards. Money is available immediately for expenditures anywhere Mastercard prepaid account is accepted. The ease with which cardholders can convert cash to prepaid card funds turns their reloadable prepaid cards into valuable and practical financial tools. Making the reload process simple and accessible provides merchants with an opportunity to increase cardholder traffic. Unlike other top-up services, merchants have the flexibility to set their own reload fees.  This resource streamlines development efforts to offer Mastercard rePower services, through quick and convenient web services with the following benefits: 1)Savings in development and operational costs associated with implementing a standard MIP connection.  2)Requires support for only a single acquiring interface.  3)Leverages existing processing messages and transaction codes  4)Mastercard provides a net settlement guarantee for each reload transaction  5)Supports EMV, PayPass &amp; MDES transactions.  This resource facilitates the ability for cardholders to reload their prepaid cards easily and securely.   
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void repowerPost2Test() throws ApiException {
        Repowerrequest1Wrapper repowerRequest = null;
        Repower5Wrapper response = api.repowerPost2(repowerRequest);
        // TODO: test validations
    }

}
