/*
 * rePower
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Cardacceptor2;
import org.openapitools.client.model.Transactionamount3;
import org.openapitools.client.model.Transactionfee4;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Repowerrequest1
 */
public class Repowerrequest1Test {
    private final Repowerrequest1 model = new Repowerrequest1();

    /**
     * Model tests for Repowerrequest1
     */
    @Test
    public void testRepowerrequest1() {
        // TODO: test Repowerrequest1
    }

    /**
     * Test the property 'additionalSenderInformation'
     */
    @Test
    public void additionalSenderInformationTest() {
        // TODO: test additionalSenderInformation
    }

    /**
     * Test the property 'cardAcceptor'
     */
    @Test
    public void cardAcceptorTest() {
        // TODO: test cardAcceptor
    }

    /**
     * Test the property 'cardNumber'
     */
    @Test
    public void cardNumberTest() {
        // TODO: test cardNumber
    }

    /**
     * Test the property 'cardSequenceNumber'
     */
    @Test
    public void cardSequenceNumberTest() {
        // TODO: test cardSequenceNumber
    }

    /**
     * Test the property 'channel'
     */
    @Test
    public void channelTest() {
        // TODO: test channel
    }

    /**
     * Test the property 'ICA'
     */
    @Test
    public void ICATest() {
        // TODO: test ICA
    }

    /**
     * Test the property 'icCEMVData'
     */
    @Test
    public void icCEMVDataTest() {
        // TODO: test icCEMVData
    }

    /**
     * Test the property '_localDate'
     */
    @Test
    public void _localDateTest() {
        // TODO: test _localDate
    }

    /**
     * Test the property '_localTime'
     */
    @Test
    public void _localTimeTest() {
        // TODO: test _localTime
    }

    /**
     * Test the property 'merchantType'
     */
    @Test
    public void merchantTypeTest() {
        // TODO: test merchantType
    }

    /**
     * Test the property 'poSCardDataTerminalInputCapabilityIndicator'
     */
    @Test
    public void poSCardDataTerminalInputCapabilityIndicatorTest() {
        // TODO: test poSCardDataTerminalInputCapabilityIndicator
    }

    /**
     * Test the property 'paymentInitiationChannel'
     */
    @Test
    public void paymentInitiationChannelTest() {
        // TODO: test paymentInitiationChannel
    }

    /**
     * Test the property 'paymentPosEntryMode'
     */
    @Test
    public void paymentPosEntryModeTest() {
        // TODO: test paymentPosEntryMode
    }

    /**
     * Test the property 'processorId'
     */
    @Test
    public void processorIdTest() {
        // TODO: test processorId
    }

    /**
     * Test the property 'receiverTrack2Data'
     */
    @Test
    public void receiverTrack2DataTest() {
        // TODO: test receiverTrack2Data
    }

    /**
     * Test the property 'routingAndTransitNumber'
     */
    @Test
    public void routingAndTransitNumberTest() {
        // TODO: test routingAndTransitNumber
    }

    /**
     * Test the property 'transactionAmount'
     */
    @Test
    public void transactionAmountTest() {
        // TODO: test transactionAmount
    }

    /**
     * Test the property 'transactionFee'
     */
    @Test
    public void transactionFeeTest() {
        // TODO: test transactionFee
    }

    /**
     * Test the property 'transactionReference'
     */
    @Test
    public void transactionReferenceTest() {
        // TODO: test transactionReference
    }

}
