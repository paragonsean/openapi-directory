/**
 * rePower
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Repowerreversalrequest10 model module.
 * @module model/Repowerreversalrequest10
 * @version V2
 */
class Repowerreversalrequest10 {
    /**
     * Constructs a new <code>Repowerreversalrequest10</code>.
     * Contains the details of the repower reversal request message.
     * @alias module:model/Repowerreversalrequest10
     * @param ICA {String} ICA of acquiring institution. Details- Numeric, 4-6
     * @param reversalReason {String} Brief description of reason for reversal. Details- String, 1-50
     * @param transactionReference {String} Unique reference number provided by the client in the \"original\" rePower transfer to be reversed. Details- Alphanumeric, 19
     */
    constructor(ICA, reversalReason, transactionReference) { 
        
        Repowerreversalrequest10.initialize(this, ICA, reversalReason, transactionReference);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ICA, reversalReason, transactionReference) { 
        obj['ICA'] = ICA;
        obj['ReversalReason'] = reversalReason;
        obj['TransactionReference'] = transactionReference;
    }

    /**
     * Constructs a <code>Repowerreversalrequest10</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Repowerreversalrequest10} obj Optional instance to populate.
     * @return {module:model/Repowerreversalrequest10} The populated <code>Repowerreversalrequest10</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Repowerreversalrequest10();

            if (data.hasOwnProperty('ICA')) {
                obj['ICA'] = ApiClient.convertToType(data['ICA'], 'String');
            }
            if (data.hasOwnProperty('ReversalReason')) {
                obj['ReversalReason'] = ApiClient.convertToType(data['ReversalReason'], 'String');
            }
            if (data.hasOwnProperty('TransactionReference')) {
                obj['TransactionReference'] = ApiClient.convertToType(data['TransactionReference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Repowerreversalrequest10</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Repowerreversalrequest10</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Repowerreversalrequest10.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ICA'] && !(typeof data['ICA'] === 'string' || data['ICA'] instanceof String)) {
            throw new Error("Expected the field `ICA` to be a primitive type in the JSON string but got " + data['ICA']);
        }
        // ensure the json data is a string
        if (data['ReversalReason'] && !(typeof data['ReversalReason'] === 'string' || data['ReversalReason'] instanceof String)) {
            throw new Error("Expected the field `ReversalReason` to be a primitive type in the JSON string but got " + data['ReversalReason']);
        }
        // ensure the json data is a string
        if (data['TransactionReference'] && !(typeof data['TransactionReference'] === 'string' || data['TransactionReference'] instanceof String)) {
            throw new Error("Expected the field `TransactionReference` to be a primitive type in the JSON string but got " + data['TransactionReference']);
        }

        return true;
    }


}

Repowerreversalrequest10.RequiredProperties = ["ICA", "ReversalReason", "TransactionReference"];

/**
 * ICA of acquiring institution. Details- Numeric, 4-6
 * @member {String} ICA
 */
Repowerreversalrequest10.prototype['ICA'] = undefined;

/**
 * Brief description of reason for reversal. Details- String, 1-50
 * @member {String} ReversalReason
 */
Repowerreversalrequest10.prototype['ReversalReason'] = undefined;

/**
 * Unique reference number provided by the client in the \"original\" rePower transfer to be reversed. Details- Alphanumeric, 19
 * @member {String} TransactionReference
 */
Repowerreversalrequest10.prototype['TransactionReference'] = undefined;






export default Repowerreversalrequest10;

