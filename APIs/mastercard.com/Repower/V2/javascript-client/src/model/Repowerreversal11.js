/**
 * rePower
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Transactionhistory12 from './Transactionhistory12';

/**
 * The Repowerreversal11 model module.
 * @module model/Repowerreversal11
 * @version V2
 */
class Repowerreversal11 {
    /**
     * Constructs a new <code>Repowerreversal11</code>.
     * Response details
     * @alias module:model/Repowerreversal11
     */
    constructor() { 
        
        Repowerreversal11.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Repowerreversal11</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Repowerreversal11} obj Optional instance to populate.
     * @return {module:model/Repowerreversal11} The populated <code>Repowerreversal11</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Repowerreversal11();

            if (data.hasOwnProperty('OriginalRequestId')) {
                obj['OriginalRequestId'] = ApiClient.convertToType(data['OriginalRequestId'], 'String');
            }
            if (data.hasOwnProperty('RequestId')) {
                obj['RequestId'] = ApiClient.convertToType(data['RequestId'], 'String');
            }
            if (data.hasOwnProperty('TransactionHistory')) {
                obj['TransactionHistory'] = Transactionhistory12.constructFromObject(data['TransactionHistory']);
            }
            if (data.hasOwnProperty('TransactionReference')) {
                obj['TransactionReference'] = ApiClient.convertToType(data['TransactionReference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Repowerreversal11</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Repowerreversal11</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['OriginalRequestId'] && !(typeof data['OriginalRequestId'] === 'string' || data['OriginalRequestId'] instanceof String)) {
            throw new Error("Expected the field `OriginalRequestId` to be a primitive type in the JSON string but got " + data['OriginalRequestId']);
        }
        // ensure the json data is a string
        if (data['RequestId'] && !(typeof data['RequestId'] === 'string' || data['RequestId'] instanceof String)) {
            throw new Error("Expected the field `RequestId` to be a primitive type in the JSON string but got " + data['RequestId']);
        }
        // validate the optional field `TransactionHistory`
        if (data['TransactionHistory']) { // data not null
          Transactionhistory12.validateJSON(data['TransactionHistory']);
        }
        // ensure the json data is a string
        if (data['TransactionReference'] && !(typeof data['TransactionReference'] === 'string' || data['TransactionReference'] instanceof String)) {
            throw new Error("Expected the field `TransactionReference` to be a primitive type in the JSON string but got " + data['TransactionReference']);
        }

        return true;
    }


}



/**
 * Unique identifier assigned to the original rePower transaction request. Details- Numeric value, 1-19
 * @member {String} OriginalRequestId
 */
Repowerreversal11.prototype['OriginalRequestId'] = undefined;

/**
 * This is the unique identifier for API Web service request. Details- Numeric value, variable length between 1 and 19 digits, without zero padding
 * @member {String} RequestId
 */
Repowerreversal11.prototype['RequestId'] = undefined;

/**
 * @member {module:model/Transactionhistory12} TransactionHistory
 */
Repowerreversal11.prototype['TransactionHistory'] = undefined;

/**
 * This is the Request ID for the original rePower transaction provided by the merchant or acquiring institution. Details- Alphanumeric value, 19
 * @member {String} TransactionReference
 */
Repowerreversal11.prototype['TransactionReference'] = undefined;






export default Repowerreversal11;

