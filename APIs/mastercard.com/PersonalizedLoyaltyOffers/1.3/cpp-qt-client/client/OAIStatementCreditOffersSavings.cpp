/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStatementCreditOffersSavings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStatementCreditOffersSavings::OAIStatementCreditOffersSavings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStatementCreditOffersSavings::OAIStatementCreditOffersSavings() {
    this->initializeModel();
}

OAIStatementCreditOffersSavings::~OAIStatementCreditOffersSavings() {}

void OAIStatementCreditOffersSavings::initializeModel() {

    m_earned_cashback_isSet = false;
    m_earned_cashback_isValid = false;

    m_num_available_isSet = false;
    m_num_available_isValid = false;

    m_num_redeemed_isSet = false;
    m_num_redeemed_isValid = false;

    m_potential_savings_isSet = false;
    m_potential_savings_isValid = false;
}

void OAIStatementCreditOffersSavings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStatementCreditOffersSavings::fromJsonObject(QJsonObject json) {

    m_earned_cashback_isValid = ::OpenAPI::fromJsonValue(m_earned_cashback, json[QString("EarnedCashback")]);
    m_earned_cashback_isSet = !json[QString("EarnedCashback")].isNull() && m_earned_cashback_isValid;

    m_num_available_isValid = ::OpenAPI::fromJsonValue(m_num_available, json[QString("NumAvailable")]);
    m_num_available_isSet = !json[QString("NumAvailable")].isNull() && m_num_available_isValid;

    m_num_redeemed_isValid = ::OpenAPI::fromJsonValue(m_num_redeemed, json[QString("NumRedeemed")]);
    m_num_redeemed_isSet = !json[QString("NumRedeemed")].isNull() && m_num_redeemed_isValid;

    m_potential_savings_isValid = ::OpenAPI::fromJsonValue(m_potential_savings, json[QString("PotentialSavings")]);
    m_potential_savings_isSet = !json[QString("PotentialSavings")].isNull() && m_potential_savings_isValid;
}

QString OAIStatementCreditOffersSavings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStatementCreditOffersSavings::asJsonObject() const {
    QJsonObject obj;
    if (m_earned_cashback_isSet) {
        obj.insert(QString("EarnedCashback"), ::OpenAPI::toJsonValue(m_earned_cashback));
    }
    if (m_num_available_isSet) {
        obj.insert(QString("NumAvailable"), ::OpenAPI::toJsonValue(m_num_available));
    }
    if (m_num_redeemed_isSet) {
        obj.insert(QString("NumRedeemed"), ::OpenAPI::toJsonValue(m_num_redeemed));
    }
    if (m_potential_savings_isSet) {
        obj.insert(QString("PotentialSavings"), ::OpenAPI::toJsonValue(m_potential_savings));
    }
    return obj;
}

QString OAIStatementCreditOffersSavings::getEarnedCashback() const {
    return m_earned_cashback;
}
void OAIStatementCreditOffersSavings::setEarnedCashback(const QString &earned_cashback) {
    m_earned_cashback = earned_cashback;
    m_earned_cashback_isSet = true;
}

bool OAIStatementCreditOffersSavings::is_earned_cashback_Set() const{
    return m_earned_cashback_isSet;
}

bool OAIStatementCreditOffersSavings::is_earned_cashback_Valid() const{
    return m_earned_cashback_isValid;
}

QString OAIStatementCreditOffersSavings::getNumAvailable() const {
    return m_num_available;
}
void OAIStatementCreditOffersSavings::setNumAvailable(const QString &num_available) {
    m_num_available = num_available;
    m_num_available_isSet = true;
}

bool OAIStatementCreditOffersSavings::is_num_available_Set() const{
    return m_num_available_isSet;
}

bool OAIStatementCreditOffersSavings::is_num_available_Valid() const{
    return m_num_available_isValid;
}

QString OAIStatementCreditOffersSavings::getNumRedeemed() const {
    return m_num_redeemed;
}
void OAIStatementCreditOffersSavings::setNumRedeemed(const QString &num_redeemed) {
    m_num_redeemed = num_redeemed;
    m_num_redeemed_isSet = true;
}

bool OAIStatementCreditOffersSavings::is_num_redeemed_Set() const{
    return m_num_redeemed_isSet;
}

bool OAIStatementCreditOffersSavings::is_num_redeemed_Valid() const{
    return m_num_redeemed_isValid;
}

QString OAIStatementCreditOffersSavings::getPotentialSavings() const {
    return m_potential_savings;
}
void OAIStatementCreditOffersSavings::setPotentialSavings(const QString &potential_savings) {
    m_potential_savings = potential_savings;
    m_potential_savings_isSet = true;
}

bool OAIStatementCreditOffersSavings::is_potential_savings_Set() const{
    return m_potential_savings_isSet;
}

bool OAIStatementCreditOffersSavings::is_potential_savings_Valid() const{
    return m_potential_savings_isValid;
}

bool OAIStatementCreditOffersSavings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_earned_cashback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_available_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_redeemed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_potential_savings_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStatementCreditOffersSavings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
