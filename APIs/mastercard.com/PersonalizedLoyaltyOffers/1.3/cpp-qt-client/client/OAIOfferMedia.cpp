/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOfferMedia.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOfferMedia::OAIOfferMedia(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOfferMedia::OAIOfferMedia() {
    this->initializeModel();
}

OAIOfferMedia::~OAIOfferMedia() {}

void OAIOfferMedia::initializeModel() {

    m_offer_images_isSet = false;
    m_offer_images_isValid = false;
}

void OAIOfferMedia::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOfferMedia::fromJsonObject(QJsonObject json) {

    m_offer_images_isValid = ::OpenAPI::fromJsonValue(m_offer_images, json[QString("OfferImages")]);
    m_offer_images_isSet = !json[QString("OfferImages")].isNull() && m_offer_images_isValid;
}

QString OAIOfferMedia::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOfferMedia::asJsonObject() const {
    QJsonObject obj;
    if (m_offer_images.size() > 0) {
        obj.insert(QString("OfferImages"), ::OpenAPI::toJsonValue(m_offer_images));
    }
    return obj;
}

QList<OAIOfferImages> OAIOfferMedia::getOfferImages() const {
    return m_offer_images;
}
void OAIOfferMedia::setOfferImages(const QList<OAIOfferImages> &offer_images) {
    m_offer_images = offer_images;
    m_offer_images_isSet = true;
}

bool OAIOfferMedia::is_offer_images_Set() const{
    return m_offer_images_isSet;
}

bool OAIOfferMedia::is_offer_images_Valid() const{
    return m_offer_images_isValid;
}

bool OAIOfferMedia::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_offer_images.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOfferMedia::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
