/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrepaidOfferSavings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrepaidOfferSavings::OAIPrepaidOfferSavings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrepaidOfferSavings::OAIPrepaidOfferSavings() {
    this->initializeModel();
}

OAIPrepaidOfferSavings::~OAIPrepaidOfferSavings() {}

void OAIPrepaidOfferSavings::initializeModel() {

    m_amount_saved_isSet = false;
    m_amount_saved_isValid = false;

    m_num_available_isSet = false;
    m_num_available_isValid = false;

    m_num_purchased_isSet = false;
    m_num_purchased_isValid = false;

    m_potential_savings_isSet = false;
    m_potential_savings_isValid = false;
}

void OAIPrepaidOfferSavings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrepaidOfferSavings::fromJsonObject(QJsonObject json) {

    m_amount_saved_isValid = ::OpenAPI::fromJsonValue(m_amount_saved, json[QString("AmountSaved")]);
    m_amount_saved_isSet = !json[QString("AmountSaved")].isNull() && m_amount_saved_isValid;

    m_num_available_isValid = ::OpenAPI::fromJsonValue(m_num_available, json[QString("NumAvailable")]);
    m_num_available_isSet = !json[QString("NumAvailable")].isNull() && m_num_available_isValid;

    m_num_purchased_isValid = ::OpenAPI::fromJsonValue(m_num_purchased, json[QString("NumPurchased")]);
    m_num_purchased_isSet = !json[QString("NumPurchased")].isNull() && m_num_purchased_isValid;

    m_potential_savings_isValid = ::OpenAPI::fromJsonValue(m_potential_savings, json[QString("PotentialSavings")]);
    m_potential_savings_isSet = !json[QString("PotentialSavings")].isNull() && m_potential_savings_isValid;
}

QString OAIPrepaidOfferSavings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrepaidOfferSavings::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_saved_isSet) {
        obj.insert(QString("AmountSaved"), ::OpenAPI::toJsonValue(m_amount_saved));
    }
    if (m_num_available_isSet) {
        obj.insert(QString("NumAvailable"), ::OpenAPI::toJsonValue(m_num_available));
    }
    if (m_num_purchased_isSet) {
        obj.insert(QString("NumPurchased"), ::OpenAPI::toJsonValue(m_num_purchased));
    }
    if (m_potential_savings_isSet) {
        obj.insert(QString("PotentialSavings"), ::OpenAPI::toJsonValue(m_potential_savings));
    }
    return obj;
}

QString OAIPrepaidOfferSavings::getAmountSaved() const {
    return m_amount_saved;
}
void OAIPrepaidOfferSavings::setAmountSaved(const QString &amount_saved) {
    m_amount_saved = amount_saved;
    m_amount_saved_isSet = true;
}

bool OAIPrepaidOfferSavings::is_amount_saved_Set() const{
    return m_amount_saved_isSet;
}

bool OAIPrepaidOfferSavings::is_amount_saved_Valid() const{
    return m_amount_saved_isValid;
}

QString OAIPrepaidOfferSavings::getNumAvailable() const {
    return m_num_available;
}
void OAIPrepaidOfferSavings::setNumAvailable(const QString &num_available) {
    m_num_available = num_available;
    m_num_available_isSet = true;
}

bool OAIPrepaidOfferSavings::is_num_available_Set() const{
    return m_num_available_isSet;
}

bool OAIPrepaidOfferSavings::is_num_available_Valid() const{
    return m_num_available_isValid;
}

QString OAIPrepaidOfferSavings::getNumPurchased() const {
    return m_num_purchased;
}
void OAIPrepaidOfferSavings::setNumPurchased(const QString &num_purchased) {
    m_num_purchased = num_purchased;
    m_num_purchased_isSet = true;
}

bool OAIPrepaidOfferSavings::is_num_purchased_Set() const{
    return m_num_purchased_isSet;
}

bool OAIPrepaidOfferSavings::is_num_purchased_Valid() const{
    return m_num_purchased_isValid;
}

QString OAIPrepaidOfferSavings::getPotentialSavings() const {
    return m_potential_savings;
}
void OAIPrepaidOfferSavings::setPotentialSavings(const QString &potential_savings) {
    m_potential_savings = potential_savings;
    m_potential_savings_isSet = true;
}

bool OAIPrepaidOfferSavings::is_potential_savings_Set() const{
    return m_potential_savings_isSet;
}

bool OAIPrepaidOfferSavings::is_potential_savings_Valid() const{
    return m_potential_savings_isValid;
}

bool OAIPrepaidOfferSavings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_saved_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_available_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_purchased_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_potential_savings_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrepaidOfferSavings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
