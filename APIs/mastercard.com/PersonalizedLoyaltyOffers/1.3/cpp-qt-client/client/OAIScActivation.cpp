/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScActivation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScActivation::OAIScActivation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScActivation::OAIScActivation() {
    this->initializeModel();
}

OAIScActivation::~OAIScActivation() {}

void OAIScActivation::initializeModel() {

    m_activation_date_isSet = false;
    m_activation_date_isValid = false;

    m_activation_id_isSet = false;
    m_activation_id_isValid = false;

    m_cash_back_isSet = false;
    m_cash_back_isValid = false;

    m_days_remaining_isSet = false;
    m_days_remaining_isValid = false;

    m_headline_isSet = false;
    m_headline_isValid = false;

    m_merchant_isSet = false;
    m_merchant_isValid = false;

    m_merchant_logo_isSet = false;
    m_merchant_logo_isValid = false;

    m_offer_id_isSet = false;
    m_offer_id_isValid = false;

    m_points_earned_isSet = false;
    m_points_earned_isValid = false;

    m_redemption_end_date_isSet = false;
    m_redemption_end_date_isValid = false;

    m_redemption_mode_isSet = false;
    m_redemption_mode_isValid = false;

    m_remaining_spend_isSet = false;
    m_remaining_spend_isValid = false;

    m_short_description_isSet = false;
    m_short_description_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_total_spend_isSet = false;
    m_total_spend_isValid = false;
}

void OAIScActivation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScActivation::fromJsonObject(QJsonObject json) {

    m_activation_date_isValid = ::OpenAPI::fromJsonValue(m_activation_date, json[QString("ActivationDate")]);
    m_activation_date_isSet = !json[QString("ActivationDate")].isNull() && m_activation_date_isValid;

    m_activation_id_isValid = ::OpenAPI::fromJsonValue(m_activation_id, json[QString("ActivationId")]);
    m_activation_id_isSet = !json[QString("ActivationId")].isNull() && m_activation_id_isValid;

    m_cash_back_isValid = ::OpenAPI::fromJsonValue(m_cash_back, json[QString("CashBack")]);
    m_cash_back_isSet = !json[QString("CashBack")].isNull() && m_cash_back_isValid;

    m_days_remaining_isValid = ::OpenAPI::fromJsonValue(m_days_remaining, json[QString("DaysRemaining")]);
    m_days_remaining_isSet = !json[QString("DaysRemaining")].isNull() && m_days_remaining_isValid;

    m_headline_isValid = ::OpenAPI::fromJsonValue(m_headline, json[QString("Headline")]);
    m_headline_isSet = !json[QString("Headline")].isNull() && m_headline_isValid;

    m_merchant_isValid = ::OpenAPI::fromJsonValue(m_merchant, json[QString("Merchant")]);
    m_merchant_isSet = !json[QString("Merchant")].isNull() && m_merchant_isValid;

    m_merchant_logo_isValid = ::OpenAPI::fromJsonValue(m_merchant_logo, json[QString("MerchantLogo")]);
    m_merchant_logo_isSet = !json[QString("MerchantLogo")].isNull() && m_merchant_logo_isValid;

    m_offer_id_isValid = ::OpenAPI::fromJsonValue(m_offer_id, json[QString("OfferId")]);
    m_offer_id_isSet = !json[QString("OfferId")].isNull() && m_offer_id_isValid;

    m_points_earned_isValid = ::OpenAPI::fromJsonValue(m_points_earned, json[QString("PointsEarned")]);
    m_points_earned_isSet = !json[QString("PointsEarned")].isNull() && m_points_earned_isValid;

    m_redemption_end_date_isValid = ::OpenAPI::fromJsonValue(m_redemption_end_date, json[QString("RedemptionEndDate")]);
    m_redemption_end_date_isSet = !json[QString("RedemptionEndDate")].isNull() && m_redemption_end_date_isValid;

    m_redemption_mode_isValid = ::OpenAPI::fromJsonValue(m_redemption_mode, json[QString("RedemptionMode")]);
    m_redemption_mode_isSet = !json[QString("RedemptionMode")].isNull() && m_redemption_mode_isValid;

    m_remaining_spend_isValid = ::OpenAPI::fromJsonValue(m_remaining_spend, json[QString("RemainingSpend")]);
    m_remaining_spend_isSet = !json[QString("RemainingSpend")].isNull() && m_remaining_spend_isValid;

    m_short_description_isValid = ::OpenAPI::fromJsonValue(m_short_description, json[QString("ShortDescription")]);
    m_short_description_isSet = !json[QString("ShortDescription")].isNull() && m_short_description_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_total_spend_isValid = ::OpenAPI::fromJsonValue(m_total_spend, json[QString("TotalSpend")]);
    m_total_spend_isSet = !json[QString("TotalSpend")].isNull() && m_total_spend_isValid;
}

QString OAIScActivation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScActivation::asJsonObject() const {
    QJsonObject obj;
    if (m_activation_date_isSet) {
        obj.insert(QString("ActivationDate"), ::OpenAPI::toJsonValue(m_activation_date));
    }
    if (m_activation_id_isSet) {
        obj.insert(QString("ActivationId"), ::OpenAPI::toJsonValue(m_activation_id));
    }
    if (m_cash_back_isSet) {
        obj.insert(QString("CashBack"), ::OpenAPI::toJsonValue(m_cash_back));
    }
    if (m_days_remaining_isSet) {
        obj.insert(QString("DaysRemaining"), ::OpenAPI::toJsonValue(m_days_remaining));
    }
    if (m_headline_isSet) {
        obj.insert(QString("Headline"), ::OpenAPI::toJsonValue(m_headline));
    }
    if (m_merchant_isSet) {
        obj.insert(QString("Merchant"), ::OpenAPI::toJsonValue(m_merchant));
    }
    if (m_merchant_logo_isSet) {
        obj.insert(QString("MerchantLogo"), ::OpenAPI::toJsonValue(m_merchant_logo));
    }
    if (m_offer_id_isSet) {
        obj.insert(QString("OfferId"), ::OpenAPI::toJsonValue(m_offer_id));
    }
    if (m_points_earned_isSet) {
        obj.insert(QString("PointsEarned"), ::OpenAPI::toJsonValue(m_points_earned));
    }
    if (m_redemption_end_date_isSet) {
        obj.insert(QString("RedemptionEndDate"), ::OpenAPI::toJsonValue(m_redemption_end_date));
    }
    if (m_redemption_mode_isSet) {
        obj.insert(QString("RedemptionMode"), ::OpenAPI::toJsonValue(m_redemption_mode));
    }
    if (m_remaining_spend_isSet) {
        obj.insert(QString("RemainingSpend"), ::OpenAPI::toJsonValue(m_remaining_spend));
    }
    if (m_short_description_isSet) {
        obj.insert(QString("ShortDescription"), ::OpenAPI::toJsonValue(m_short_description));
    }
    if (m_status_isSet) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_total_spend_isSet) {
        obj.insert(QString("TotalSpend"), ::OpenAPI::toJsonValue(m_total_spend));
    }
    return obj;
}

QDate OAIScActivation::getActivationDate() const {
    return m_activation_date;
}
void OAIScActivation::setActivationDate(const QDate &activation_date) {
    m_activation_date = activation_date;
    m_activation_date_isSet = true;
}

bool OAIScActivation::is_activation_date_Set() const{
    return m_activation_date_isSet;
}

bool OAIScActivation::is_activation_date_Valid() const{
    return m_activation_date_isValid;
}

QString OAIScActivation::getActivationId() const {
    return m_activation_id;
}
void OAIScActivation::setActivationId(const QString &activation_id) {
    m_activation_id = activation_id;
    m_activation_id_isSet = true;
}

bool OAIScActivation::is_activation_id_Set() const{
    return m_activation_id_isSet;
}

bool OAIScActivation::is_activation_id_Valid() const{
    return m_activation_id_isValid;
}

QString OAIScActivation::getCashBack() const {
    return m_cash_back;
}
void OAIScActivation::setCashBack(const QString &cash_back) {
    m_cash_back = cash_back;
    m_cash_back_isSet = true;
}

bool OAIScActivation::is_cash_back_Set() const{
    return m_cash_back_isSet;
}

bool OAIScActivation::is_cash_back_Valid() const{
    return m_cash_back_isValid;
}

QString OAIScActivation::getDaysRemaining() const {
    return m_days_remaining;
}
void OAIScActivation::setDaysRemaining(const QString &days_remaining) {
    m_days_remaining = days_remaining;
    m_days_remaining_isSet = true;
}

bool OAIScActivation::is_days_remaining_Set() const{
    return m_days_remaining_isSet;
}

bool OAIScActivation::is_days_remaining_Valid() const{
    return m_days_remaining_isValid;
}

QString OAIScActivation::getHeadline() const {
    return m_headline;
}
void OAIScActivation::setHeadline(const QString &headline) {
    m_headline = headline;
    m_headline_isSet = true;
}

bool OAIScActivation::is_headline_Set() const{
    return m_headline_isSet;
}

bool OAIScActivation::is_headline_Valid() const{
    return m_headline_isValid;
}

QString OAIScActivation::getMerchant() const {
    return m_merchant;
}
void OAIScActivation::setMerchant(const QString &merchant) {
    m_merchant = merchant;
    m_merchant_isSet = true;
}

bool OAIScActivation::is_merchant_Set() const{
    return m_merchant_isSet;
}

bool OAIScActivation::is_merchant_Valid() const{
    return m_merchant_isValid;
}

QString OAIScActivation::getMerchantLogo() const {
    return m_merchant_logo;
}
void OAIScActivation::setMerchantLogo(const QString &merchant_logo) {
    m_merchant_logo = merchant_logo;
    m_merchant_logo_isSet = true;
}

bool OAIScActivation::is_merchant_logo_Set() const{
    return m_merchant_logo_isSet;
}

bool OAIScActivation::is_merchant_logo_Valid() const{
    return m_merchant_logo_isValid;
}

QString OAIScActivation::getOfferId() const {
    return m_offer_id;
}
void OAIScActivation::setOfferId(const QString &offer_id) {
    m_offer_id = offer_id;
    m_offer_id_isSet = true;
}

bool OAIScActivation::is_offer_id_Set() const{
    return m_offer_id_isSet;
}

bool OAIScActivation::is_offer_id_Valid() const{
    return m_offer_id_isValid;
}

QString OAIScActivation::getPointsEarned() const {
    return m_points_earned;
}
void OAIScActivation::setPointsEarned(const QString &points_earned) {
    m_points_earned = points_earned;
    m_points_earned_isSet = true;
}

bool OAIScActivation::is_points_earned_Set() const{
    return m_points_earned_isSet;
}

bool OAIScActivation::is_points_earned_Valid() const{
    return m_points_earned_isValid;
}

QDate OAIScActivation::getRedemptionEndDate() const {
    return m_redemption_end_date;
}
void OAIScActivation::setRedemptionEndDate(const QDate &redemption_end_date) {
    m_redemption_end_date = redemption_end_date;
    m_redemption_end_date_isSet = true;
}

bool OAIScActivation::is_redemption_end_date_Set() const{
    return m_redemption_end_date_isSet;
}

bool OAIScActivation::is_redemption_end_date_Valid() const{
    return m_redemption_end_date_isValid;
}

QString OAIScActivation::getRedemptionMode() const {
    return m_redemption_mode;
}
void OAIScActivation::setRedemptionMode(const QString &redemption_mode) {
    m_redemption_mode = redemption_mode;
    m_redemption_mode_isSet = true;
}

bool OAIScActivation::is_redemption_mode_Set() const{
    return m_redemption_mode_isSet;
}

bool OAIScActivation::is_redemption_mode_Valid() const{
    return m_redemption_mode_isValid;
}

QString OAIScActivation::getRemainingSpend() const {
    return m_remaining_spend;
}
void OAIScActivation::setRemainingSpend(const QString &remaining_spend) {
    m_remaining_spend = remaining_spend;
    m_remaining_spend_isSet = true;
}

bool OAIScActivation::is_remaining_spend_Set() const{
    return m_remaining_spend_isSet;
}

bool OAIScActivation::is_remaining_spend_Valid() const{
    return m_remaining_spend_isValid;
}

QString OAIScActivation::getShortDescription() const {
    return m_short_description;
}
void OAIScActivation::setShortDescription(const QString &short_description) {
    m_short_description = short_description;
    m_short_description_isSet = true;
}

bool OAIScActivation::is_short_description_Set() const{
    return m_short_description_isSet;
}

bool OAIScActivation::is_short_description_Valid() const{
    return m_short_description_isValid;
}

QString OAIScActivation::getStatus() const {
    return m_status;
}
void OAIScActivation::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIScActivation::is_status_Set() const{
    return m_status_isSet;
}

bool OAIScActivation::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIScActivation::getTotalSpend() const {
    return m_total_spend;
}
void OAIScActivation::setTotalSpend(const QString &total_spend) {
    m_total_spend = total_spend;
    m_total_spend_isSet = true;
}

bool OAIScActivation::is_total_spend_Set() const{
    return m_total_spend_isSet;
}

bool OAIScActivation::is_total_spend_Valid() const{
    return m_total_spend_isValid;
}

bool OAIScActivation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activation_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_activation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_back_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_days_remaining_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_headline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_logo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_points_earned_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redemption_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redemption_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remaining_spend_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_spend_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScActivation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
