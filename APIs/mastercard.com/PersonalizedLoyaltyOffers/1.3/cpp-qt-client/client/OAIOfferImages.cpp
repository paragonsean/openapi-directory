/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOfferImages.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOfferImages::OAIOfferImages(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOfferImages::OAIOfferImages() {
    this->initializeModel();
}

OAIOfferImages::~OAIOfferImages() {}

void OAIOfferImages::initializeModel() {

    m_alt_text_isSet = false;
    m_alt_text_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_image_url_isSet = false;
    m_image_url_isValid = false;
}

void OAIOfferImages::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOfferImages::fromJsonObject(QJsonObject json) {

    m_alt_text_isValid = ::OpenAPI::fromJsonValue(m_alt_text, json[QString("AltText")]);
    m_alt_text_isSet = !json[QString("AltText")].isNull() && m_alt_text_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_image_url_isValid = ::OpenAPI::fromJsonValue(m_image_url, json[QString("ImageUrl")]);
    m_image_url_isSet = !json[QString("ImageUrl")].isNull() && m_image_url_isValid;
}

QString OAIOfferImages::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOfferImages::asJsonObject() const {
    QJsonObject obj;
    if (m_alt_text_isSet) {
        obj.insert(QString("AltText"), ::OpenAPI::toJsonValue(m_alt_text));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_image_url_isSet) {
        obj.insert(QString("ImageUrl"), ::OpenAPI::toJsonValue(m_image_url));
    }
    return obj;
}

QString OAIOfferImages::getAltText() const {
    return m_alt_text;
}
void OAIOfferImages::setAltText(const QString &alt_text) {
    m_alt_text = alt_text;
    m_alt_text_isSet = true;
}

bool OAIOfferImages::is_alt_text_Set() const{
    return m_alt_text_isSet;
}

bool OAIOfferImages::is_alt_text_Valid() const{
    return m_alt_text_isValid;
}

QString OAIOfferImages::getDescription() const {
    return m_description;
}
void OAIOfferImages::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIOfferImages::is_description_Set() const{
    return m_description_isSet;
}

bool OAIOfferImages::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIOfferImages::getImageUrl() const {
    return m_image_url;
}
void OAIOfferImages::setImageUrl(const QString &image_url) {
    m_image_url = image_url;
    m_image_url_isSet = true;
}

bool OAIOfferImages::is_image_url_Set() const{
    return m_image_url_isSet;
}

bool OAIOfferImages::is_image_url_Valid() const{
    return m_image_url_isValid;
}

bool OAIOfferImages::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alt_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOfferImages::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
