/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Merchant model module.
 * @module model/Merchant
 * @version 1.3
 */
class Merchant {
    /**
     * Constructs a new <code>Merchant</code>.
     * @alias module:model/Merchant
     */
    constructor() { 
        
        Merchant.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Merchant</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Merchant} obj Optional instance to populate.
     * @return {module:model/Merchant} The populated <code>Merchant</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Merchant();

            if (data.hasOwnProperty('Category')) {
                obj['Category'] = ApiClient.convertToType(data['Category'], 'String');
            }
            if (data.hasOwnProperty('MerchantDistance')) {
                obj['MerchantDistance'] = ApiClient.convertToType(data['MerchantDistance'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('StoreLocatorUrl')) {
                obj['StoreLocatorUrl'] = ApiClient.convertToType(data['StoreLocatorUrl'], 'String');
            }
            if (data.hasOwnProperty('WebsiteUrl')) {
                obj['WebsiteUrl'] = ApiClient.convertToType(data['WebsiteUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Merchant</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Merchant</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Category'] && !(typeof data['Category'] === 'string' || data['Category'] instanceof String)) {
            throw new Error("Expected the field `Category` to be a primitive type in the JSON string but got " + data['Category']);
        }
        // ensure the json data is a string
        if (data['MerchantDistance'] && !(typeof data['MerchantDistance'] === 'string' || data['MerchantDistance'] instanceof String)) {
            throw new Error("Expected the field `MerchantDistance` to be a primitive type in the JSON string but got " + data['MerchantDistance']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['StoreLocatorUrl'] && !(typeof data['StoreLocatorUrl'] === 'string' || data['StoreLocatorUrl'] instanceof String)) {
            throw new Error("Expected the field `StoreLocatorUrl` to be a primitive type in the JSON string but got " + data['StoreLocatorUrl']);
        }
        // ensure the json data is a string
        if (data['WebsiteUrl'] && !(typeof data['WebsiteUrl'] === 'string' || data['WebsiteUrl'] instanceof String)) {
            throw new Error("Expected the field `WebsiteUrl` to be a primitive type in the JSON string but got " + data['WebsiteUrl']);
        }

        return true;
    }


}



/**
 * The type of retailer to which the offer applies.
 * @member {String} Category
 */
Merchant.prototype['Category'] = undefined;

/**
 * Reserved for future use.
 * @member {String} MerchantDistance
 */
Merchant.prototype['MerchantDistance'] = undefined;

/**
 * Display name for the retailer to which the offer applies.
 * @member {String} Name
 */
Merchant.prototype['Name'] = undefined;

/**
 * Web page where retailer outlets can be found.
 * @member {String} StoreLocatorUrl
 */
Merchant.prototype['StoreLocatorUrl'] = undefined;

/**
 * The internet address of the retailer.
 * @member {String} WebsiteUrl
 */
Merchant.prototype['WebsiteUrl'] = undefined;






export default Merchant;

