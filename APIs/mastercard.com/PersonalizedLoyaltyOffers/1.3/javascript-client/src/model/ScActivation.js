/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ScActivation model module.
 * @module model/ScActivation
 * @version 1.3
 */
class ScActivation {
    /**
     * Constructs a new <code>ScActivation</code>.
     * @alias module:model/ScActivation
     */
    constructor() { 
        
        ScActivation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScActivation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScActivation} obj Optional instance to populate.
     * @return {module:model/ScActivation} The populated <code>ScActivation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScActivation();

            if (data.hasOwnProperty('ActivationDate')) {
                obj['ActivationDate'] = ApiClient.convertToType(data['ActivationDate'], 'Date');
            }
            if (data.hasOwnProperty('ActivationId')) {
                obj['ActivationId'] = ApiClient.convertToType(data['ActivationId'], 'String');
            }
            if (data.hasOwnProperty('CashBack')) {
                obj['CashBack'] = ApiClient.convertToType(data['CashBack'], 'String');
            }
            if (data.hasOwnProperty('DaysRemaining')) {
                obj['DaysRemaining'] = ApiClient.convertToType(data['DaysRemaining'], 'String');
            }
            if (data.hasOwnProperty('Headline')) {
                obj['Headline'] = ApiClient.convertToType(data['Headline'], 'String');
            }
            if (data.hasOwnProperty('Merchant')) {
                obj['Merchant'] = ApiClient.convertToType(data['Merchant'], 'String');
            }
            if (data.hasOwnProperty('MerchantLogo')) {
                obj['MerchantLogo'] = ApiClient.convertToType(data['MerchantLogo'], 'String');
            }
            if (data.hasOwnProperty('OfferId')) {
                obj['OfferId'] = ApiClient.convertToType(data['OfferId'], 'String');
            }
            if (data.hasOwnProperty('PointsEarned')) {
                obj['PointsEarned'] = ApiClient.convertToType(data['PointsEarned'], 'String');
            }
            if (data.hasOwnProperty('RedemptionEndDate')) {
                obj['RedemptionEndDate'] = ApiClient.convertToType(data['RedemptionEndDate'], 'Date');
            }
            if (data.hasOwnProperty('RedemptionMode')) {
                obj['RedemptionMode'] = ApiClient.convertToType(data['RedemptionMode'], 'String');
            }
            if (data.hasOwnProperty('RemainingSpend')) {
                obj['RemainingSpend'] = ApiClient.convertToType(data['RemainingSpend'], 'String');
            }
            if (data.hasOwnProperty('ShortDescription')) {
                obj['ShortDescription'] = ApiClient.convertToType(data['ShortDescription'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
            if (data.hasOwnProperty('TotalSpend')) {
                obj['TotalSpend'] = ApiClient.convertToType(data['TotalSpend'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScActivation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScActivation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ActivationId'] && !(typeof data['ActivationId'] === 'string' || data['ActivationId'] instanceof String)) {
            throw new Error("Expected the field `ActivationId` to be a primitive type in the JSON string but got " + data['ActivationId']);
        }
        // ensure the json data is a string
        if (data['CashBack'] && !(typeof data['CashBack'] === 'string' || data['CashBack'] instanceof String)) {
            throw new Error("Expected the field `CashBack` to be a primitive type in the JSON string but got " + data['CashBack']);
        }
        // ensure the json data is a string
        if (data['DaysRemaining'] && !(typeof data['DaysRemaining'] === 'string' || data['DaysRemaining'] instanceof String)) {
            throw new Error("Expected the field `DaysRemaining` to be a primitive type in the JSON string but got " + data['DaysRemaining']);
        }
        // ensure the json data is a string
        if (data['Headline'] && !(typeof data['Headline'] === 'string' || data['Headline'] instanceof String)) {
            throw new Error("Expected the field `Headline` to be a primitive type in the JSON string but got " + data['Headline']);
        }
        // ensure the json data is a string
        if (data['Merchant'] && !(typeof data['Merchant'] === 'string' || data['Merchant'] instanceof String)) {
            throw new Error("Expected the field `Merchant` to be a primitive type in the JSON string but got " + data['Merchant']);
        }
        // ensure the json data is a string
        if (data['MerchantLogo'] && !(typeof data['MerchantLogo'] === 'string' || data['MerchantLogo'] instanceof String)) {
            throw new Error("Expected the field `MerchantLogo` to be a primitive type in the JSON string but got " + data['MerchantLogo']);
        }
        // ensure the json data is a string
        if (data['OfferId'] && !(typeof data['OfferId'] === 'string' || data['OfferId'] instanceof String)) {
            throw new Error("Expected the field `OfferId` to be a primitive type in the JSON string but got " + data['OfferId']);
        }
        // ensure the json data is a string
        if (data['PointsEarned'] && !(typeof data['PointsEarned'] === 'string' || data['PointsEarned'] instanceof String)) {
            throw new Error("Expected the field `PointsEarned` to be a primitive type in the JSON string but got " + data['PointsEarned']);
        }
        // ensure the json data is a string
        if (data['RedemptionMode'] && !(typeof data['RedemptionMode'] === 'string' || data['RedemptionMode'] instanceof String)) {
            throw new Error("Expected the field `RedemptionMode` to be a primitive type in the JSON string but got " + data['RedemptionMode']);
        }
        // ensure the json data is a string
        if (data['RemainingSpend'] && !(typeof data['RemainingSpend'] === 'string' || data['RemainingSpend'] instanceof String)) {
            throw new Error("Expected the field `RemainingSpend` to be a primitive type in the JSON string but got " + data['RemainingSpend']);
        }
        // ensure the json data is a string
        if (data['ShortDescription'] && !(typeof data['ShortDescription'] === 'string' || data['ShortDescription'] instanceof String)) {
            throw new Error("Expected the field `ShortDescription` to be a primitive type in the JSON string but got " + data['ShortDescription']);
        }
        // ensure the json data is a string
        if (data['Status'] && !(typeof data['Status'] === 'string' || data['Status'] instanceof String)) {
            throw new Error("Expected the field `Status` to be a primitive type in the JSON string but got " + data['Status']);
        }
        // ensure the json data is a string
        if (data['TotalSpend'] && !(typeof data['TotalSpend'] === 'string' || data['TotalSpend'] instanceof String)) {
            throw new Error("Expected the field `TotalSpend` to be a primitive type in the JSON string but got " + data['TotalSpend']);
        }

        return true;
    }


}



/**
 * Day on which the offer became ready for redemption.
 * @member {Date} ActivationDate
 */
ScActivation.prototype['ActivationDate'] = undefined;

/**
 * Distinct identifier for the offer being available for redemption by the user, not intended for end-user display.
 * @member {String} ActivationId
 */
ScActivation.prototype['ActivationId'] = undefined;

/**
 * Value earned upon fulfillment of offer conditions, not applicable to points activations.
 * @member {String} CashBack
 */
ScActivation.prototype['CashBack'] = undefined;

/**
 * Number of days until the offer expires.
 * @member {String} DaysRemaining
 */
ScActivation.prototype['DaysRemaining'] = undefined;

/**
 * Brief details about the deal.
 * @member {String} Headline
 */
ScActivation.prototype['Headline'] = undefined;

/**
 * Display name for the retailer to which the offer applies.
 * @member {String} Merchant
 */
ScActivation.prototype['Merchant'] = undefined;

/**
 * Square retailer brand image.
 * @member {String} MerchantLogo
 */
ScActivation.prototype['MerchantLogo'] = undefined;

/**
 * System-wide identifier for the campaign, not intended for end-user display.
 * @member {String} OfferId
 */
ScActivation.prototype['OfferId'] = undefined;

/**
 * Value earned upon fulfillment of offer conditions, not applicable to cash activations.
 * @member {String} PointsEarned
 */
ScActivation.prototype['PointsEarned'] = undefined;

/**
 * Last day on which a purchase will qualify for the offer.
 * @member {Date} RedemptionEndDate
 */
ScActivation.prototype['RedemptionEndDate'] = undefined;

/**
 * Type of credit made upon redemption of the offer- CASH or POINTS.
 * @member {String} RedemptionMode
 */
ScActivation.prototype['RedemptionMode'] = undefined;

/**
 * Purchase amount still required to redeem the offer.
 * @member {String} RemainingSpend
 */
ScActivation.prototype['RemainingSpend'] = undefined;

/**
 * Summary of the deal, typically displayed beneath the headline in a list view.
 * @member {String} ShortDescription
 */
ScActivation.prototype['ShortDescription'] = undefined;

/**
 * Disposition of offer- ACTIVATED, REDEEMED, CREDIT_DECLINED.
 * @member {String} Status
 */
ScActivation.prototype['Status'] = undefined;

/**
 * Count of purchases user made to redeem the offer.
 * @member {String} TotalSpend
 */
ScActivation.prototype['TotalSpend'] = undefined;






export default ScActivation;

