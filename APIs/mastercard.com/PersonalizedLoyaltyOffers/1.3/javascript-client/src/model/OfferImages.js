/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OfferImages model module.
 * @module model/OfferImages
 * @version 1.3
 */
class OfferImages {
    /**
     * Constructs a new <code>OfferImages</code>.
     * @alias module:model/OfferImages
     */
    constructor() { 
        
        OfferImages.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OfferImages</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OfferImages} obj Optional instance to populate.
     * @return {module:model/OfferImages} The populated <code>OfferImages</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OfferImages();

            if (data.hasOwnProperty('AltText')) {
                obj['AltText'] = ApiClient.convertToType(data['AltText'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('ImageUrl')) {
                obj['ImageUrl'] = ApiClient.convertToType(data['ImageUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OfferImages</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OfferImages</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AltText'] && !(typeof data['AltText'] === 'string' || data['AltText'] instanceof String)) {
            throw new Error("Expected the field `AltText` to be a primitive type in the JSON string but got " + data['AltText']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['ImageUrl'] && !(typeof data['ImageUrl'] === 'string' || data['ImageUrl'] instanceof String)) {
            throw new Error("Expected the field `ImageUrl` to be a primitive type in the JSON string but got " + data['ImageUrl']);
        }

        return true;
    }


}



/**
 * Description of a picture or graphic that may be displayed along with the offer information.
 * @member {String} AltText
 */
OfferImages.prototype['AltText'] = undefined;

/**
 * Verbal details of the image, may be used for accessiblity.
 * @member {String} Description
 */
OfferImages.prototype['Description'] = undefined;

/**
 * A picture or graphic that may be displayed along with the offer information.
 * @member {String} ImageUrl
 */
OfferImages.prototype['ImageUrl'] = undefined;






export default OfferImages;

