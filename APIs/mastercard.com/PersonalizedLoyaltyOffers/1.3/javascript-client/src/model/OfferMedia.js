/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OfferImages from './OfferImages';

/**
 * The OfferMedia model module.
 * @module model/OfferMedia
 * @version 1.3
 */
class OfferMedia {
    /**
     * Constructs a new <code>OfferMedia</code>.
     * @alias module:model/OfferMedia
     */
    constructor() { 
        
        OfferMedia.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OfferMedia</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OfferMedia} obj Optional instance to populate.
     * @return {module:model/OfferMedia} The populated <code>OfferMedia</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OfferMedia();

            if (data.hasOwnProperty('OfferImages')) {
                obj['OfferImages'] = ApiClient.convertToType(data['OfferImages'], [OfferImages]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OfferMedia</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OfferMedia</code>.
     */
    static validateJSON(data) {
        if (data['OfferImages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['OfferImages'])) {
                throw new Error("Expected the field `OfferImages` to be an array in the JSON data but got " + data['OfferImages']);
            }
            // validate the optional field `OfferImages` (array)
            for (const item of data['OfferImages']) {
                OfferImages.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/OfferImages>} OfferImages
 */
OfferMedia.prototype['OfferImages'] = undefined;






export default OfferMedia;

