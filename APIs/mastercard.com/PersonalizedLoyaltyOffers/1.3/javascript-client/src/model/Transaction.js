/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Transaction model module.
 * @module model/Transaction
 * @version 1.3
 */
class Transaction {
    /**
     * Constructs a new <code>Transaction</code>.
     * @alias module:model/Transaction
     */
    constructor() { 
        
        Transaction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Transaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Transaction} obj Optional instance to populate.
     * @return {module:model/Transaction} The populated <code>Transaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Transaction();

            if (data.hasOwnProperty('CashBackEarned')) {
                obj['CashBackEarned'] = ApiClient.convertToType(data['CashBackEarned'], 'String');
            }
            if (data.hasOwnProperty('PointsEarned')) {
                obj['PointsEarned'] = ApiClient.convertToType(data['PointsEarned'], 'String');
            }
            if (data.hasOwnProperty('RedemptionDate')) {
                obj['RedemptionDate'] = ApiClient.convertToType(data['RedemptionDate'], 'Date');
            }
            if (data.hasOwnProperty('TransactionAmount')) {
                obj['TransactionAmount'] = ApiClient.convertToType(data['TransactionAmount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Transaction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Transaction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['CashBackEarned'] && !(typeof data['CashBackEarned'] === 'string' || data['CashBackEarned'] instanceof String)) {
            throw new Error("Expected the field `CashBackEarned` to be a primitive type in the JSON string but got " + data['CashBackEarned']);
        }
        // ensure the json data is a string
        if (data['PointsEarned'] && !(typeof data['PointsEarned'] === 'string' || data['PointsEarned'] instanceof String)) {
            throw new Error("Expected the field `PointsEarned` to be a primitive type in the JSON string but got " + data['PointsEarned']);
        }
        // ensure the json data is a string
        if (data['TransactionAmount'] && !(typeof data['TransactionAmount'] === 'string' || data['TransactionAmount'] instanceof String)) {
            throw new Error("Expected the field `TransactionAmount` to be a primitive type in the JSON string but got " + data['TransactionAmount']);
        }

        return true;
    }


}



/**
 * Value earned upon fulfillment of offer conditions, not applicable to points activations.
 * @member {String} CashBackEarned
 */
Transaction.prototype['CashBackEarned'] = undefined;

/**
 * Value earned upon fulfillment of offer conditions, not applicable to cash activations.
 * @member {String} PointsEarned
 */
Transaction.prototype['PointsEarned'] = undefined;

/**
 * The day on which a purchase fulfilled the offer.
 * @member {Date} RedemptionDate
 */
Transaction.prototype['RedemptionDate'] = undefined;

/**
 * Value of the purchase that fulfilled the offer, decimal is implied.
 * @member {String} TransactionAmount
 */
Transaction.prototype['TransactionAmount'] = undefined;






export default Transaction;

