/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import MatchedOffersResponse from '../model/MatchedOffersResponse';

/**
* MatchedOffers service.
* @module api/MatchedOffersApi
* @version 1.3
*/
export default class MatchedOffersApi {

    /**
    * Constructs a new MatchedOffersApi. 
    * @alias module:api/MatchedOffersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the matchedoffersGet operation.
     * @callback module:api/MatchedOffersApi~matchedoffersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MatchedOffersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns Matched Offers
     * This resource returns offers that are available to the user and conform to the search criteria (if specified). 
     * @param {String} fId Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation.
     * @param {String} userToken Session identifier as returned by the UserToken resource.
     * @param {Object} opts Optional parameters
     * @param {String} [lang] When utilized with a multi-lingual implementation, may be the tongue and country of the user in ISO 639-1, underscore, ISO 3166-1 alpha-2 format.
     * @param {String} [merchantName] Fuzzy term to search retailers with offers for the user. In general, searching of Matched Offers is not advised as users generally have a modest selection of highly relevant promotions.
     * @param {String} [category] Offer Categories.
     * @param {String} [offerType] The kind of deal. POSTPAIDCREDIT- Statement Credit Offer, which is a discount that is automatically applied to the card linked to the user and utilized to make the purchase.
     * @param {Number} [pageNumber] Segment of offers to return.
     * @param {Number} [itemsPerPage] Segment size of offer to be returned. Default is 25.
     * @param {module:api/MatchedOffersApi~matchedoffersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MatchedOffersResponse}
     */
    matchedoffersGet(fId, userToken, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'fId' is set
      if (fId === undefined || fId === null) {
        throw new Error("Missing the required parameter 'fId' when calling matchedoffersGet");
      }
      // verify the required parameter 'userToken' is set
      if (userToken === undefined || userToken === null) {
        throw new Error("Missing the required parameter 'userToken' when calling matchedoffersGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'FId': fId,
        'UserToken': userToken,
        'Lang': opts['lang'],
        'MerchantName': opts['merchantName'],
        'Category': opts['category'],
        'OfferType': opts['offerType'],
        'PageNumber': opts['pageNumber'],
        'ItemsPerPage': opts['itemsPerPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MatchedOffersResponse;
      return this.apiClient.callApi(
        '/matchedoffers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
