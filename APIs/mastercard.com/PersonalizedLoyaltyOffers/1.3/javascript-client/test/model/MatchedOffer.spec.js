/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PersonalizedOffers);
  }
}(this, function(expect, PersonalizedOffers) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PersonalizedOffers.MatchedOffer();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MatchedOffer', function() {
    it('should create an instance of MatchedOffer', function() {
      // uncomment below and update the code to test MatchedOffer
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be.a(PersonalizedOffers.MatchedOffer);
    });

    it('should have the property activeSc (base name: "ActiveSc")', function() {
      // uncomment below and update the code to test the property activeSc
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "CurrencyCode")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property discount (base name: "Discount")', function() {
      // uncomment below and update the code to test the property discount
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property discountType (base name: "DiscountType")', function() {
      // uncomment below and update the code to test the property discountType
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property eventEndDate (base name: "EventEndDate")', function() {
      // uncomment below and update the code to test the property eventEndDate
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property eventStartDate (base name: "EventStartDate")', function() {
      // uncomment below and update the code to test the property eventStartDate
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property headline (base name: "Headline")', function() {
      // uncomment below and update the code to test the property headline
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "Language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property merchant (base name: "Merchant")', function() {
      // uncomment below and update the code to test the property merchant
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property merchantImageURL (base name: "MerchantImageURL")', function() {
      // uncomment below and update the code to test the property merchantImageURL
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property offerId (base name: "OfferId")', function() {
      // uncomment below and update the code to test the property offerId
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property offerSource (base name: "OfferSource")', function() {
      // uncomment below and update the code to test the property offerSource
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property offerType (base name: "OfferType")', function() {
      // uncomment below and update the code to test the property offerType
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "Price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property redemptionMode (base name: "RedemptionMode")', function() {
      // uncomment below and update the code to test the property redemptionMode
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

    it('should have the property shortDescription (base name: "ShortDescription")', function() {
      // uncomment below and update the code to test the property shortDescription
      //var instance = new PersonalizedOffers.MatchedOffer();
      //expect(instance).to.be();
    });

  });

}));
