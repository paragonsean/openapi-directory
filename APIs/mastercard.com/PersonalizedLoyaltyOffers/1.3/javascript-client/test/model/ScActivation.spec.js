/**
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PersonalizedOffers);
  }
}(this, function(expect, PersonalizedOffers) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PersonalizedOffers.ScActivation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ScActivation', function() {
    it('should create an instance of ScActivation', function() {
      // uncomment below and update the code to test ScActivation
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be.a(PersonalizedOffers.ScActivation);
    });

    it('should have the property activationDate (base name: "ActivationDate")', function() {
      // uncomment below and update the code to test the property activationDate
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property activationId (base name: "ActivationId")', function() {
      // uncomment below and update the code to test the property activationId
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property cashBack (base name: "CashBack")', function() {
      // uncomment below and update the code to test the property cashBack
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property daysRemaining (base name: "DaysRemaining")', function() {
      // uncomment below and update the code to test the property daysRemaining
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property headline (base name: "Headline")', function() {
      // uncomment below and update the code to test the property headline
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property merchant (base name: "Merchant")', function() {
      // uncomment below and update the code to test the property merchant
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property merchantLogo (base name: "MerchantLogo")', function() {
      // uncomment below and update the code to test the property merchantLogo
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property offerId (base name: "OfferId")', function() {
      // uncomment below and update the code to test the property offerId
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property pointsEarned (base name: "PointsEarned")', function() {
      // uncomment below and update the code to test the property pointsEarned
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property redemptionEndDate (base name: "RedemptionEndDate")', function() {
      // uncomment below and update the code to test the property redemptionEndDate
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property redemptionMode (base name: "RedemptionMode")', function() {
      // uncomment below and update the code to test the property redemptionMode
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property remainingSpend (base name: "RemainingSpend")', function() {
      // uncomment below and update the code to test the property remainingSpend
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property shortDescription (base name: "ShortDescription")', function() {
      // uncomment below and update the code to test the property shortDescription
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

    it('should have the property totalSpend (base name: "TotalSpend")', function() {
      // uncomment below and update the code to test the property totalSpend
      //var instance = new PersonalizedOffers.ScActivation();
      //expect(instance).to.be();
    });

  });

}));
