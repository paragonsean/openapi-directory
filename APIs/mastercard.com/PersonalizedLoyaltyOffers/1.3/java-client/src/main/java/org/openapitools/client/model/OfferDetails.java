/*
 * Personalized Offers
 * This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.client.model.DetailPostpaidCreditOffer;
import org.openapitools.client.model.Merchant;
import org.openapitools.client.model.OfferDisplay;
import org.openapitools.client.model.OfferMedia;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OfferDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:09:15.199950-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OfferDetails {
  public static final String SERIALIZED_NAME_CURRENCY_CODE = "CurrencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_DETAIL_POSTPAID_CREDIT_OFFER = "DetailPostpaidCreditOffer";
  @SerializedName(SERIALIZED_NAME_DETAIL_POSTPAID_CREDIT_OFFER)
  private DetailPostpaidCreditOffer detailPostpaidCreditOffer;

  public static final String SERIALIZED_NAME_EVENT_END_DATE = "EventEndDate";
  @SerializedName(SERIALIZED_NAME_EVENT_END_DATE)
  private LocalDate eventEndDate;

  public static final String SERIALIZED_NAME_EVENT_START_DATE = "EventStartDate";
  @SerializedName(SERIALIZED_NAME_EVENT_START_DATE)
  private LocalDate eventStartDate;

  public static final String SERIALIZED_NAME_HEADLINE = "Headline";
  @SerializedName(SERIALIZED_NAME_HEADLINE)
  private String headline;

  public static final String SERIALIZED_NAME_LANGUAGE = "Language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_LINK_OUT = "LinkOut";
  @SerializedName(SERIALIZED_NAME_LINK_OUT)
  private Object linkOut;

  public static final String SERIALIZED_NAME_LONG_DESCRIPTION = "LongDescription";
  @SerializedName(SERIALIZED_NAME_LONG_DESCRIPTION)
  private String longDescription;

  public static final String SERIALIZED_NAME_MERCHANT = "Merchant";
  @SerializedName(SERIALIZED_NAME_MERCHANT)
  private Merchant merchant;

  public static final String SERIALIZED_NAME_OFFER_DISPLAY = "OfferDisplay";
  @SerializedName(SERIALIZED_NAME_OFFER_DISPLAY)
  private OfferDisplay offerDisplay;

  public static final String SERIALIZED_NAME_OFFER_ID = "OfferId";
  @SerializedName(SERIALIZED_NAME_OFFER_ID)
  private String offerId;

  public static final String SERIALIZED_NAME_OFFER_MEDIA = "OfferMedia";
  @SerializedName(SERIALIZED_NAME_OFFER_MEDIA)
  private OfferMedia offerMedia;

  public static final String SERIALIZED_NAME_OFFER_SOURCE = "OfferSource";
  @SerializedName(SERIALIZED_NAME_OFFER_SOURCE)
  private String offerSource;

  public static final String SERIALIZED_NAME_OFFER_TYPE = "OfferType";
  @SerializedName(SERIALIZED_NAME_OFFER_TYPE)
  private String offerType;

  public static final String SERIALIZED_NAME_OFFER_URL = "OfferUrl";
  @SerializedName(SERIALIZED_NAME_OFFER_URL)
  private Object offerUrl;

  public static final String SERIALIZED_NAME_REDEMPTION_MODE = "RedemptionMode";
  @SerializedName(SERIALIZED_NAME_REDEMPTION_MODE)
  private String redemptionMode;

  public static final String SERIALIZED_NAME_REDEMPTION_TYPE = "RedemptionType";
  @SerializedName(SERIALIZED_NAME_REDEMPTION_TYPE)
  private String redemptionType;

  public static final String SERIALIZED_NAME_SHORT_DESCRIPTION = "ShortDescription";
  @SerializedName(SERIALIZED_NAME_SHORT_DESCRIPTION)
  private String shortDescription;

  public OfferDetails() {
  }

  public OfferDetails currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * ISO 4217 code in which the redeeming transaction must be made to qualify for the offer.
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public OfferDetails detailPostpaidCreditOffer(DetailPostpaidCreditOffer detailPostpaidCreditOffer) {
    this.detailPostpaidCreditOffer = detailPostpaidCreditOffer;
    return this;
  }

  /**
   * Get detailPostpaidCreditOffer
   * @return detailPostpaidCreditOffer
   */
  @javax.annotation.Nullable
  public DetailPostpaidCreditOffer getDetailPostpaidCreditOffer() {
    return detailPostpaidCreditOffer;
  }

  public void setDetailPostpaidCreditOffer(DetailPostpaidCreditOffer detailPostpaidCreditOffer) {
    this.detailPostpaidCreditOffer = detailPostpaidCreditOffer;
  }


  public OfferDetails eventEndDate(LocalDate eventEndDate) {
    this.eventEndDate = eventEndDate;
    return this;
  }

  /**
   * Last day that redemption can be made.
   * @return eventEndDate
   */
  @javax.annotation.Nullable
  public LocalDate getEventEndDate() {
    return eventEndDate;
  }

  public void setEventEndDate(LocalDate eventEndDate) {
    this.eventEndDate = eventEndDate;
  }


  public OfferDetails eventStartDate(LocalDate eventStartDate) {
    this.eventStartDate = eventStartDate;
    return this;
  }

  /**
   * First day that redemption can be made by any user, may not apply to the specified user.
   * @return eventStartDate
   */
  @javax.annotation.Nullable
  public LocalDate getEventStartDate() {
    return eventStartDate;
  }

  public void setEventStartDate(LocalDate eventStartDate) {
    this.eventStartDate = eventStartDate;
  }


  public OfferDetails headline(String headline) {
    this.headline = headline;
    return this;
  }

  /**
   * Brief details about the deal.
   * @return headline
   */
  @javax.annotation.Nullable
  public String getHeadline() {
    return headline;
  }

  public void setHeadline(String headline) {
    this.headline = headline;
  }


  public OfferDetails language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Tongue of offer display text.
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public OfferDetails linkOut(Object linkOut) {
    this.linkOut = linkOut;
    return this;
  }

  /**
   * Deprecated.
   * @return linkOut
   */
  @javax.annotation.Nullable
  public Object getLinkOut() {
    return linkOut;
  }

  public void setLinkOut(Object linkOut) {
    this.linkOut = linkOut;
  }


  public OfferDetails longDescription(String longDescription) {
    this.longDescription = longDescription;
    return this;
  }

  /**
   * Explanation of the deal, typically displayed beneath the headline in a detail view. Often the same as the ShortDescription.
   * @return longDescription
   */
  @javax.annotation.Nullable
  public String getLongDescription() {
    return longDescription;
  }

  public void setLongDescription(String longDescription) {
    this.longDescription = longDescription;
  }


  public OfferDetails merchant(Merchant merchant) {
    this.merchant = merchant;
    return this;
  }

  /**
   * Get merchant
   * @return merchant
   */
  @javax.annotation.Nullable
  public Merchant getMerchant() {
    return merchant;
  }

  public void setMerchant(Merchant merchant) {
    this.merchant = merchant;
  }


  public OfferDetails offerDisplay(OfferDisplay offerDisplay) {
    this.offerDisplay = offerDisplay;
    return this;
  }

  /**
   * Get offerDisplay
   * @return offerDisplay
   */
  @javax.annotation.Nullable
  public OfferDisplay getOfferDisplay() {
    return offerDisplay;
  }

  public void setOfferDisplay(OfferDisplay offerDisplay) {
    this.offerDisplay = offerDisplay;
  }


  public OfferDetails offerId(String offerId) {
    this.offerId = offerId;
    return this;
  }

  /**
   * System-wide identifier for the campaign, not intended for end-user display.
   * @return offerId
   */
  @javax.annotation.Nullable
  public String getOfferId() {
    return offerId;
  }

  public void setOfferId(String offerId) {
    this.offerId = offerId;
  }


  public OfferDetails offerMedia(OfferMedia offerMedia) {
    this.offerMedia = offerMedia;
    return this;
  }

  /**
   * Get offerMedia
   * @return offerMedia
   */
  @javax.annotation.Nullable
  public OfferMedia getOfferMedia() {
    return offerMedia;
  }

  public void setOfferMedia(OfferMedia offerMedia) {
    this.offerMedia = offerMedia;
  }


  public OfferDetails offerSource(String offerSource) {
    this.offerSource = offerSource;
    return this;
  }

  /**
   * Platform that made the offer available, not intended for end-user display.
   * @return offerSource
   */
  @javax.annotation.Nullable
  public String getOfferSource() {
    return offerSource;
  }

  public void setOfferSource(String offerSource) {
    this.offerSource = offerSource;
  }


  public OfferDetails offerType(String offerType) {
    this.offerType = offerType;
    return this;
  }

  /**
   * The kind of deal. POSTPAIDCREDIT- Statement Credit Offer, which is a discount that is automatically applied to the card linked to the user and utilized to make the purchase.
   * @return offerType
   */
  @javax.annotation.Nullable
  public String getOfferType() {
    return offerType;
  }

  public void setOfferType(String offerType) {
    this.offerType = offerType;
  }


  public OfferDetails offerUrl(Object offerUrl) {
    this.offerUrl = offerUrl;
    return this;
  }

  /**
   * Deprecated.
   * @return offerUrl
   */
  @javax.annotation.Nullable
  public Object getOfferUrl() {
    return offerUrl;
  }

  public void setOfferUrl(Object offerUrl) {
    this.offerUrl = offerUrl;
  }


  public OfferDetails redemptionMode(String redemptionMode) {
    this.redemptionMode = redemptionMode;
    return this;
  }

  /**
   * Type of credit made upon redemption of the offer- CASH, POINTS, or EITHER.
   * @return redemptionMode
   */
  @javax.annotation.Nullable
  public String getRedemptionMode() {
    return redemptionMode;
  }

  public void setRedemptionMode(String redemptionMode) {
    this.redemptionMode = redemptionMode;
  }


  public OfferDetails redemptionType(String redemptionType) {
    this.redemptionType = redemptionType;
    return this;
  }

  /**
   * Where a purchase may be made to qualify for the offer- INSTORE, ONLINE, or ONLINE-INSTORE (either).
   * @return redemptionType
   */
  @javax.annotation.Nullable
  public String getRedemptionType() {
    return redemptionType;
  }

  public void setRedemptionType(String redemptionType) {
    this.redemptionType = redemptionType;
  }


  public OfferDetails shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

  /**
   * Summary of the deal, typically displayed beneath the headline in a list view.
   * @return shortDescription
   */
  @javax.annotation.Nullable
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferDetails offerDetails = (OfferDetails) o;
    return Objects.equals(this.currencyCode, offerDetails.currencyCode) &&
        Objects.equals(this.detailPostpaidCreditOffer, offerDetails.detailPostpaidCreditOffer) &&
        Objects.equals(this.eventEndDate, offerDetails.eventEndDate) &&
        Objects.equals(this.eventStartDate, offerDetails.eventStartDate) &&
        Objects.equals(this.headline, offerDetails.headline) &&
        Objects.equals(this.language, offerDetails.language) &&
        Objects.equals(this.linkOut, offerDetails.linkOut) &&
        Objects.equals(this.longDescription, offerDetails.longDescription) &&
        Objects.equals(this.merchant, offerDetails.merchant) &&
        Objects.equals(this.offerDisplay, offerDetails.offerDisplay) &&
        Objects.equals(this.offerId, offerDetails.offerId) &&
        Objects.equals(this.offerMedia, offerDetails.offerMedia) &&
        Objects.equals(this.offerSource, offerDetails.offerSource) &&
        Objects.equals(this.offerType, offerDetails.offerType) &&
        Objects.equals(this.offerUrl, offerDetails.offerUrl) &&
        Objects.equals(this.redemptionMode, offerDetails.redemptionMode) &&
        Objects.equals(this.redemptionType, offerDetails.redemptionType) &&
        Objects.equals(this.shortDescription, offerDetails.shortDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyCode, detailPostpaidCreditOffer, eventEndDate, eventStartDate, headline, language, linkOut, longDescription, merchant, offerDisplay, offerId, offerMedia, offerSource, offerType, offerUrl, redemptionMode, redemptionType, shortDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferDetails {\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    detailPostpaidCreditOffer: ").append(toIndentedString(detailPostpaidCreditOffer)).append("\n");
    sb.append("    eventEndDate: ").append(toIndentedString(eventEndDate)).append("\n");
    sb.append("    eventStartDate: ").append(toIndentedString(eventStartDate)).append("\n");
    sb.append("    headline: ").append(toIndentedString(headline)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    linkOut: ").append(toIndentedString(linkOut)).append("\n");
    sb.append("    longDescription: ").append(toIndentedString(longDescription)).append("\n");
    sb.append("    merchant: ").append(toIndentedString(merchant)).append("\n");
    sb.append("    offerDisplay: ").append(toIndentedString(offerDisplay)).append("\n");
    sb.append("    offerId: ").append(toIndentedString(offerId)).append("\n");
    sb.append("    offerMedia: ").append(toIndentedString(offerMedia)).append("\n");
    sb.append("    offerSource: ").append(toIndentedString(offerSource)).append("\n");
    sb.append("    offerType: ").append(toIndentedString(offerType)).append("\n");
    sb.append("    offerUrl: ").append(toIndentedString(offerUrl)).append("\n");
    sb.append("    redemptionMode: ").append(toIndentedString(redemptionMode)).append("\n");
    sb.append("    redemptionType: ").append(toIndentedString(redemptionType)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CurrencyCode");
    openapiFields.add("DetailPostpaidCreditOffer");
    openapiFields.add("EventEndDate");
    openapiFields.add("EventStartDate");
    openapiFields.add("Headline");
    openapiFields.add("Language");
    openapiFields.add("LinkOut");
    openapiFields.add("LongDescription");
    openapiFields.add("Merchant");
    openapiFields.add("OfferDisplay");
    openapiFields.add("OfferId");
    openapiFields.add("OfferMedia");
    openapiFields.add("OfferSource");
    openapiFields.add("OfferType");
    openapiFields.add("OfferUrl");
    openapiFields.add("RedemptionMode");
    openapiFields.add("RedemptionType");
    openapiFields.add("ShortDescription");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OfferDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OfferDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OfferDetails is not found in the empty JSON string", OfferDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OfferDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OfferDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("CurrencyCode") != null && !jsonObj.get("CurrencyCode").isJsonNull()) && !jsonObj.get("CurrencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CurrencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CurrencyCode").toString()));
      }
      // validate the optional field `DetailPostpaidCreditOffer`
      if (jsonObj.get("DetailPostpaidCreditOffer") != null && !jsonObj.get("DetailPostpaidCreditOffer").isJsonNull()) {
        DetailPostpaidCreditOffer.validateJsonElement(jsonObj.get("DetailPostpaidCreditOffer"));
      }
      if ((jsonObj.get("Headline") != null && !jsonObj.get("Headline").isJsonNull()) && !jsonObj.get("Headline").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Headline` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Headline").toString()));
      }
      if ((jsonObj.get("Language") != null && !jsonObj.get("Language").isJsonNull()) && !jsonObj.get("Language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Language").toString()));
      }
      if ((jsonObj.get("LongDescription") != null && !jsonObj.get("LongDescription").isJsonNull()) && !jsonObj.get("LongDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LongDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LongDescription").toString()));
      }
      // validate the optional field `Merchant`
      if (jsonObj.get("Merchant") != null && !jsonObj.get("Merchant").isJsonNull()) {
        Merchant.validateJsonElement(jsonObj.get("Merchant"));
      }
      // validate the optional field `OfferDisplay`
      if (jsonObj.get("OfferDisplay") != null && !jsonObj.get("OfferDisplay").isJsonNull()) {
        OfferDisplay.validateJsonElement(jsonObj.get("OfferDisplay"));
      }
      if ((jsonObj.get("OfferId") != null && !jsonObj.get("OfferId").isJsonNull()) && !jsonObj.get("OfferId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OfferId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OfferId").toString()));
      }
      // validate the optional field `OfferMedia`
      if (jsonObj.get("OfferMedia") != null && !jsonObj.get("OfferMedia").isJsonNull()) {
        OfferMedia.validateJsonElement(jsonObj.get("OfferMedia"));
      }
      if ((jsonObj.get("OfferSource") != null && !jsonObj.get("OfferSource").isJsonNull()) && !jsonObj.get("OfferSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OfferSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OfferSource").toString()));
      }
      if ((jsonObj.get("OfferType") != null && !jsonObj.get("OfferType").isJsonNull()) && !jsonObj.get("OfferType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OfferType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OfferType").toString()));
      }
      if ((jsonObj.get("RedemptionMode") != null && !jsonObj.get("RedemptionMode").isJsonNull()) && !jsonObj.get("RedemptionMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `RedemptionMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RedemptionMode").toString()));
      }
      if ((jsonObj.get("RedemptionType") != null && !jsonObj.get("RedemptionType").isJsonNull()) && !jsonObj.get("RedemptionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `RedemptionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RedemptionType").toString()));
      }
      if ((jsonObj.get("ShortDescription") != null && !jsonObj.get("ShortDescription").isJsonNull()) && !jsonObj.get("ShortDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShortDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShortDescription").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OfferDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OfferDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OfferDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OfferDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<OfferDetails>() {
           @Override
           public void write(JsonWriter out, OfferDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OfferDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OfferDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OfferDetails
   * @throws IOException if the JSON string is invalid with respect to OfferDetails
   */
  public static OfferDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OfferDetails.class);
  }

  /**
   * Convert an instance of OfferDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

