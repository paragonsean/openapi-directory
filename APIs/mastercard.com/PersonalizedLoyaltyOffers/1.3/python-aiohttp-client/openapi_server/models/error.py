# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Error(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reason_code: str=None, source: str=None):
        """Error - a model defined in OpenAPI

        :param reason_code: The reason_code of this Error.
        :param source: The source of this Error.
        """
        self.openapi_types = {
            'reason_code': str,
            'source': str
        }

        self.attribute_map = {
            'reason_code': 'ReasonCode',
            'source': 'Source'
        }

        self._reason_code = reason_code
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Error of this Error.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reason_code(self):
        """Gets the reason_code of this Error.

        This will identify the reason for the error.

        :return: The reason_code of this Error.
        :rtype: str
        """
        return self._reason_code

    @reason_code.setter
    def reason_code(self, reason_code):
        """Sets the reason_code of this Error.

        This will identify the reason for the error.

        :param reason_code: The reason_code of this Error.
        :type reason_code: str
        """

        self._reason_code = reason_code

    @property
    def source(self):
        """Gets the source of this Error.

        This is the unique identifier that attempts to define the field in error when available.  If a specific field can't be identified System will be returned.

        :return: The source of this Error.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this Error.

        This is the unique identifier that attempts to define the field in error when available.  If a specific field can't be identified System will be returned.

        :param source: The source of this Error.
        :type source: str
        """

        self._source = source
