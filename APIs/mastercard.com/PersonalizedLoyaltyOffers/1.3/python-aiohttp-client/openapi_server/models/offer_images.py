# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OfferImages(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alt_text: str=None, description: str=None, image_url: str=None):
        """OfferImages - a model defined in OpenAPI

        :param alt_text: The alt_text of this OfferImages.
        :param description: The description of this OfferImages.
        :param image_url: The image_url of this OfferImages.
        """
        self.openapi_types = {
            'alt_text': str,
            'description': str,
            'image_url': str
        }

        self.attribute_map = {
            'alt_text': 'AltText',
            'description': 'Description',
            'image_url': 'ImageUrl'
        }

        self._alt_text = alt_text
        self._description = description
        self._image_url = image_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OfferImages':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OfferImages of this OfferImages.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alt_text(self):
        """Gets the alt_text of this OfferImages.

        Description of a picture or graphic that may be displayed along with the offer information.

        :return: The alt_text of this OfferImages.
        :rtype: str
        """
        return self._alt_text

    @alt_text.setter
    def alt_text(self, alt_text):
        """Sets the alt_text of this OfferImages.

        Description of a picture or graphic that may be displayed along with the offer information.

        :param alt_text: The alt_text of this OfferImages.
        :type alt_text: str
        """

        self._alt_text = alt_text

    @property
    def description(self):
        """Gets the description of this OfferImages.

        Verbal details of the image, may be used for accessiblity.

        :return: The description of this OfferImages.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this OfferImages.

        Verbal details of the image, may be used for accessiblity.

        :param description: The description of this OfferImages.
        :type description: str
        """

        self._description = description

    @property
    def image_url(self):
        """Gets the image_url of this OfferImages.

        A picture or graphic that may be displayed along with the offer information.

        :return: The image_url of this OfferImages.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this OfferImages.

        A picture or graphic that may be displayed along with the offer information.

        :param image_url: The image_url of this OfferImages.
        :type image_url: str
        """

        self._image_url = image_url
