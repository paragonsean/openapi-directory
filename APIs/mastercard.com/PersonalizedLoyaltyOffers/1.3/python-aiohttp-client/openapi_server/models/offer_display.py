# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OfferDisplay(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, detailed_terms: str=None):
        """OfferDisplay - a model defined in OpenAPI

        :param detailed_terms: The detailed_terms of this OfferDisplay.
        """
        self.openapi_types = {
            'detailed_terms': str
        }

        self.attribute_map = {
            'detailed_terms': 'DetailedTerms'
        }

        self._detailed_terms = detailed_terms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OfferDisplay':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OfferDisplay of this OfferDisplay.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def detailed_terms(self):
        """Gets the detailed_terms of this OfferDisplay.

        Conditions required for successful redemption of the offer.

        :return: The detailed_terms of this OfferDisplay.
        :rtype: str
        """
        return self._detailed_terms

    @detailed_terms.setter
    def detailed_terms(self, detailed_terms):
        """Sets the detailed_terms of this OfferDisplay.

        Conditions required for successful redemption of the offer.

        :param detailed_terms: The detailed_terms of this OfferDisplay.
        :type detailed_terms: str
        """

        self._detailed_terms = detailed_terms
