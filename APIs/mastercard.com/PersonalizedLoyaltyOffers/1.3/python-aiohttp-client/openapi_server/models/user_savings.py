# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.prepaid_offer_savings import PrepaidOfferSavings
from openapi_server.models.statement_credit_offers_savings import StatementCreditOffersSavings
from openapi_server import util


class UserSavings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prepaid_offer_savings: PrepaidOfferSavings=None, statement_credit_offers_savings: StatementCreditOffersSavings=None, total_amount_saved: str=None, total_offers_used: str=None):
        """UserSavings - a model defined in OpenAPI

        :param prepaid_offer_savings: The prepaid_offer_savings of this UserSavings.
        :param statement_credit_offers_savings: The statement_credit_offers_savings of this UserSavings.
        :param total_amount_saved: The total_amount_saved of this UserSavings.
        :param total_offers_used: The total_offers_used of this UserSavings.
        """
        self.openapi_types = {
            'prepaid_offer_savings': PrepaidOfferSavings,
            'statement_credit_offers_savings': StatementCreditOffersSavings,
            'total_amount_saved': str,
            'total_offers_used': str
        }

        self.attribute_map = {
            'prepaid_offer_savings': 'PrepaidOfferSavings',
            'statement_credit_offers_savings': 'StatementCreditOffersSavings',
            'total_amount_saved': 'TotalAmountSaved',
            'total_offers_used': 'TotalOffersUsed'
        }

        self._prepaid_offer_savings = prepaid_offer_savings
        self._statement_credit_offers_savings = statement_credit_offers_savings
        self._total_amount_saved = total_amount_saved
        self._total_offers_used = total_offers_used

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserSavings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserSavings of this UserSavings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prepaid_offer_savings(self):
        """Gets the prepaid_offer_savings of this UserSavings.


        :return: The prepaid_offer_savings of this UserSavings.
        :rtype: PrepaidOfferSavings
        """
        return self._prepaid_offer_savings

    @prepaid_offer_savings.setter
    def prepaid_offer_savings(self, prepaid_offer_savings):
        """Sets the prepaid_offer_savings of this UserSavings.


        :param prepaid_offer_savings: The prepaid_offer_savings of this UserSavings.
        :type prepaid_offer_savings: PrepaidOfferSavings
        """

        self._prepaid_offer_savings = prepaid_offer_savings

    @property
    def statement_credit_offers_savings(self):
        """Gets the statement_credit_offers_savings of this UserSavings.


        :return: The statement_credit_offers_savings of this UserSavings.
        :rtype: StatementCreditOffersSavings
        """
        return self._statement_credit_offers_savings

    @statement_credit_offers_savings.setter
    def statement_credit_offers_savings(self, statement_credit_offers_savings):
        """Sets the statement_credit_offers_savings of this UserSavings.


        :param statement_credit_offers_savings: The statement_credit_offers_savings of this UserSavings.
        :type statement_credit_offers_savings: StatementCreditOffersSavings
        """

        self._statement_credit_offers_savings = statement_credit_offers_savings

    @property
    def total_amount_saved(self):
        """Gets the total_amount_saved of this UserSavings.

        Combined value of purchased and redeemed deals.

        :return: The total_amount_saved of this UserSavings.
        :rtype: str
        """
        return self._total_amount_saved

    @total_amount_saved.setter
    def total_amount_saved(self, total_amount_saved):
        """Sets the total_amount_saved of this UserSavings.

        Combined value of purchased and redeemed deals.

        :param total_amount_saved: The total_amount_saved of this UserSavings.
        :type total_amount_saved: str
        """

        self._total_amount_saved = total_amount_saved

    @property
    def total_offers_used(self):
        """Gets the total_offers_used of this UserSavings.

        Combined count of purchased and redeemed deals.

        :return: The total_offers_used of this UserSavings.
        :rtype: str
        """
        return self._total_offers_used

    @total_offers_used.setter
    def total_offers_used(self, total_offers_used):
        """Sets the total_offers_used of this UserSavings.

        Combined count of purchased and redeemed deals.

        :param total_offers_used: The total_offers_used of this UserSavings.
        :type total_offers_used: str
        """

        self._total_offers_used = total_offers_used
