# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DetailPostpaidCreditOffer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cash_back: str=None, currency_code: str=None, max_cashback: str=None, min_transaction_amount_to_redeem: str=None, statement_credit_type: str=None, visit_threshold: str=None):
        """DetailPostpaidCreditOffer - a model defined in OpenAPI

        :param cash_back: The cash_back of this DetailPostpaidCreditOffer.
        :param currency_code: The currency_code of this DetailPostpaidCreditOffer.
        :param max_cashback: The max_cashback of this DetailPostpaidCreditOffer.
        :param min_transaction_amount_to_redeem: The min_transaction_amount_to_redeem of this DetailPostpaidCreditOffer.
        :param statement_credit_type: The statement_credit_type of this DetailPostpaidCreditOffer.
        :param visit_threshold: The visit_threshold of this DetailPostpaidCreditOffer.
        """
        self.openapi_types = {
            'cash_back': str,
            'currency_code': str,
            'max_cashback': str,
            'min_transaction_amount_to_redeem': str,
            'statement_credit_type': str,
            'visit_threshold': str
        }

        self.attribute_map = {
            'cash_back': 'CashBack',
            'currency_code': 'CurrencyCode',
            'max_cashback': 'MaxCashback',
            'min_transaction_amount_to_redeem': 'MinTransactionAmountToRedeem',
            'statement_credit_type': 'StatementCreditType',
            'visit_threshold': 'VisitThreshold'
        }

        self._cash_back = cash_back
        self._currency_code = currency_code
        self._max_cashback = max_cashback
        self._min_transaction_amount_to_redeem = min_transaction_amount_to_redeem
        self._statement_credit_type = statement_credit_type
        self._visit_threshold = visit_threshold

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetailPostpaidCreditOffer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetailPostpaidCreditOffer of this DetailPostpaidCreditOffer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cash_back(self):
        """Gets the cash_back of this DetailPostpaidCreditOffer.

        Value of POSTPAIDCREDIT deal redemption.

        :return: The cash_back of this DetailPostpaidCreditOffer.
        :rtype: str
        """
        return self._cash_back

    @cash_back.setter
    def cash_back(self, cash_back):
        """Sets the cash_back of this DetailPostpaidCreditOffer.

        Value of POSTPAIDCREDIT deal redemption.

        :param cash_back: The cash_back of this DetailPostpaidCreditOffer.
        :type cash_back: str
        """

        self._cash_back = cash_back

    @property
    def currency_code(self):
        """Gets the currency_code of this DetailPostpaidCreditOffer.

        ISO 4217 code in which the redeeming transaction must be made to qualify for the offer.

        :return: The currency_code of this DetailPostpaidCreditOffer.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this DetailPostpaidCreditOffer.

        ISO 4217 code in which the redeeming transaction must be made to qualify for the offer.

        :param currency_code: The currency_code of this DetailPostpaidCreditOffer.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def max_cashback(self):
        """Gets the max_cashback of this DetailPostpaidCreditOffer.

        The most cash back which a user can earn for the offer.

        :return: The max_cashback of this DetailPostpaidCreditOffer.
        :rtype: str
        """
        return self._max_cashback

    @max_cashback.setter
    def max_cashback(self, max_cashback):
        """Sets the max_cashback of this DetailPostpaidCreditOffer.

        The most cash back which a user can earn for the offer.

        :param max_cashback: The max_cashback of this DetailPostpaidCreditOffer.
        :type max_cashback: str
        """

        self._max_cashback = max_cashback

    @property
    def min_transaction_amount_to_redeem(self):
        """Gets the min_transaction_amount_to_redeem of this DetailPostpaidCreditOffer.

        The smallest purchase amount that will qualify for redemption.

        :return: The min_transaction_amount_to_redeem of this DetailPostpaidCreditOffer.
        :rtype: str
        """
        return self._min_transaction_amount_to_redeem

    @min_transaction_amount_to_redeem.setter
    def min_transaction_amount_to_redeem(self, min_transaction_amount_to_redeem):
        """Sets the min_transaction_amount_to_redeem of this DetailPostpaidCreditOffer.

        The smallest purchase amount that will qualify for redemption.

        :param min_transaction_amount_to_redeem: The min_transaction_amount_to_redeem of this DetailPostpaidCreditOffer.
        :type min_transaction_amount_to_redeem: str
        """

        self._min_transaction_amount_to_redeem = min_transaction_amount_to_redeem

    @property
    def statement_credit_type(self):
        """Gets the statement_credit_type of this DetailPostpaidCreditOffer.

        Calculation kind of the redemption value. SPEND_CASH/VISIT_CASH- fixed value. SPEND_PERCENTAGE/VISIT_PERCENTAGE- share value.

        :return: The statement_credit_type of this DetailPostpaidCreditOffer.
        :rtype: str
        """
        return self._statement_credit_type

    @statement_credit_type.setter
    def statement_credit_type(self, statement_credit_type):
        """Sets the statement_credit_type of this DetailPostpaidCreditOffer.

        Calculation kind of the redemption value. SPEND_CASH/VISIT_CASH- fixed value. SPEND_PERCENTAGE/VISIT_PERCENTAGE- share value.

        :param statement_credit_type: The statement_credit_type of this DetailPostpaidCreditOffer.
        :type statement_credit_type: str
        """

        self._statement_credit_type = statement_credit_type

    @property
    def visit_threshold(self):
        """Gets the visit_threshold of this DetailPostpaidCreditOffer.

        The number of purchases required to qualify for redemption.

        :return: The visit_threshold of this DetailPostpaidCreditOffer.
        :rtype: str
        """
        return self._visit_threshold

    @visit_threshold.setter
    def visit_threshold(self, visit_threshold):
        """Sets the visit_threshold of this DetailPostpaidCreditOffer.

        The number of purchases required to qualify for redemption.

        :param visit_threshold: The visit_threshold of this DetailPostpaidCreditOffer.
        :type visit_threshold: str
        """

        self._visit_threshold = visit_threshold
