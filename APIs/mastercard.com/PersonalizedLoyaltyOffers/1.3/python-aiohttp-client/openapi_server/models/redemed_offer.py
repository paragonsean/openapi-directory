# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.detail_postpaid_credit_offer import DetailPostpaidCreditOffer
from openapi_server.models.offer_display import OfferDisplay
from openapi_server.models.offer_media import OfferMedia
from openapi_server.models.redemed_offer_merchant import RedemedOfferMerchant
from openapi_server.models.transaction import Transaction
from openapi_server import util


class RedemedOffer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activation_date: date=None, activation_id: str=None, currency_code: str=None, detail_postpaid_credit_offer: DetailPostpaidCreditOffer=None, event_end_date: date=None, event_start_date: date=None, headline: str=None, language: str=None, linkout_url: str=None, long_description: str=None, max_user_redemptions: int=None, merchant: RedemedOfferMerchant=None, offer_display: OfferDisplay=None, offer_id: str=None, offer_media: OfferMedia=None, offer_source: str=None, offer_type: str=None, offer_url: str=None, redemption_mode: str=None, redemption_type: str=None, short_description: str=None, transactions: Transaction=None):
        """RedemedOffer - a model defined in OpenAPI

        :param activation_date: The activation_date of this RedemedOffer.
        :param activation_id: The activation_id of this RedemedOffer.
        :param currency_code: The currency_code of this RedemedOffer.
        :param detail_postpaid_credit_offer: The detail_postpaid_credit_offer of this RedemedOffer.
        :param event_end_date: The event_end_date of this RedemedOffer.
        :param event_start_date: The event_start_date of this RedemedOffer.
        :param headline: The headline of this RedemedOffer.
        :param language: The language of this RedemedOffer.
        :param linkout_url: The linkout_url of this RedemedOffer.
        :param long_description: The long_description of this RedemedOffer.
        :param max_user_redemptions: The max_user_redemptions of this RedemedOffer.
        :param merchant: The merchant of this RedemedOffer.
        :param offer_display: The offer_display of this RedemedOffer.
        :param offer_id: The offer_id of this RedemedOffer.
        :param offer_media: The offer_media of this RedemedOffer.
        :param offer_source: The offer_source of this RedemedOffer.
        :param offer_type: The offer_type of this RedemedOffer.
        :param offer_url: The offer_url of this RedemedOffer.
        :param redemption_mode: The redemption_mode of this RedemedOffer.
        :param redemption_type: The redemption_type of this RedemedOffer.
        :param short_description: The short_description of this RedemedOffer.
        :param transactions: The transactions of this RedemedOffer.
        """
        self.openapi_types = {
            'activation_date': date,
            'activation_id': str,
            'currency_code': str,
            'detail_postpaid_credit_offer': DetailPostpaidCreditOffer,
            'event_end_date': date,
            'event_start_date': date,
            'headline': str,
            'language': str,
            'linkout_url': str,
            'long_description': str,
            'max_user_redemptions': int,
            'merchant': RedemedOfferMerchant,
            'offer_display': OfferDisplay,
            'offer_id': str,
            'offer_media': OfferMedia,
            'offer_source': str,
            'offer_type': str,
            'offer_url': str,
            'redemption_mode': str,
            'redemption_type': str,
            'short_description': str,
            'transactions': Transaction
        }

        self.attribute_map = {
            'activation_date': 'ActivationDate',
            'activation_id': 'ActivationId',
            'currency_code': 'CurrencyCode',
            'detail_postpaid_credit_offer': 'DetailPostpaidCreditOffer',
            'event_end_date': 'EventEndDate',
            'event_start_date': 'EventStartDate',
            'headline': 'Headline',
            'language': 'Language',
            'linkout_url': 'LinkoutUrl',
            'long_description': 'LongDescription',
            'max_user_redemptions': 'MaxUserRedemptions',
            'merchant': 'Merchant',
            'offer_display': 'OfferDisplay',
            'offer_id': 'OfferId',
            'offer_media': 'OfferMedia',
            'offer_source': 'OfferSource',
            'offer_type': 'OfferType',
            'offer_url': 'OfferUrl',
            'redemption_mode': 'RedemptionMode',
            'redemption_type': 'RedemptionType',
            'short_description': 'ShortDescription',
            'transactions': 'Transactions'
        }

        self._activation_date = activation_date
        self._activation_id = activation_id
        self._currency_code = currency_code
        self._detail_postpaid_credit_offer = detail_postpaid_credit_offer
        self._event_end_date = event_end_date
        self._event_start_date = event_start_date
        self._headline = headline
        self._language = language
        self._linkout_url = linkout_url
        self._long_description = long_description
        self._max_user_redemptions = max_user_redemptions
        self._merchant = merchant
        self._offer_display = offer_display
        self._offer_id = offer_id
        self._offer_media = offer_media
        self._offer_source = offer_source
        self._offer_type = offer_type
        self._offer_url = offer_url
        self._redemption_mode = redemption_mode
        self._redemption_type = redemption_type
        self._short_description = short_description
        self._transactions = transactions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RedemedOffer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RedemedOffer of this RedemedOffer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activation_date(self):
        """Gets the activation_date of this RedemedOffer.

        Day on which the offer became ready for redemption.

        :return: The activation_date of this RedemedOffer.
        :rtype: date
        """
        return self._activation_date

    @activation_date.setter
    def activation_date(self, activation_date):
        """Sets the activation_date of this RedemedOffer.

        Day on which the offer became ready for redemption.

        :param activation_date: The activation_date of this RedemedOffer.
        :type activation_date: date
        """

        self._activation_date = activation_date

    @property
    def activation_id(self):
        """Gets the activation_id of this RedemedOffer.

        Distinct identifier for the offer being available for redemption by the user, not intended for end-user display.

        :return: The activation_id of this RedemedOffer.
        :rtype: str
        """
        return self._activation_id

    @activation_id.setter
    def activation_id(self, activation_id):
        """Sets the activation_id of this RedemedOffer.

        Distinct identifier for the offer being available for redemption by the user, not intended for end-user display.

        :param activation_id: The activation_id of this RedemedOffer.
        :type activation_id: str
        """

        self._activation_id = activation_id

    @property
    def currency_code(self):
        """Gets the currency_code of this RedemedOffer.

        ISO 4217 code in which the redeeming transaction must be made to qualify for the offer.

        :return: The currency_code of this RedemedOffer.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this RedemedOffer.

        ISO 4217 code in which the redeeming transaction must be made to qualify for the offer.

        :param currency_code: The currency_code of this RedemedOffer.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def detail_postpaid_credit_offer(self):
        """Gets the detail_postpaid_credit_offer of this RedemedOffer.


        :return: The detail_postpaid_credit_offer of this RedemedOffer.
        :rtype: DetailPostpaidCreditOffer
        """
        return self._detail_postpaid_credit_offer

    @detail_postpaid_credit_offer.setter
    def detail_postpaid_credit_offer(self, detail_postpaid_credit_offer):
        """Sets the detail_postpaid_credit_offer of this RedemedOffer.


        :param detail_postpaid_credit_offer: The detail_postpaid_credit_offer of this RedemedOffer.
        :type detail_postpaid_credit_offer: DetailPostpaidCreditOffer
        """

        self._detail_postpaid_credit_offer = detail_postpaid_credit_offer

    @property
    def event_end_date(self):
        """Gets the event_end_date of this RedemedOffer.

        Last day that redemption can be made.

        :return: The event_end_date of this RedemedOffer.
        :rtype: date
        """
        return self._event_end_date

    @event_end_date.setter
    def event_end_date(self, event_end_date):
        """Sets the event_end_date of this RedemedOffer.

        Last day that redemption can be made.

        :param event_end_date: The event_end_date of this RedemedOffer.
        :type event_end_date: date
        """

        self._event_end_date = event_end_date

    @property
    def event_start_date(self):
        """Gets the event_start_date of this RedemedOffer.

        First day that redemption can be made.

        :return: The event_start_date of this RedemedOffer.
        :rtype: date
        """
        return self._event_start_date

    @event_start_date.setter
    def event_start_date(self, event_start_date):
        """Sets the event_start_date of this RedemedOffer.

        First day that redemption can be made.

        :param event_start_date: The event_start_date of this RedemedOffer.
        :type event_start_date: date
        """

        self._event_start_date = event_start_date

    @property
    def headline(self):
        """Gets the headline of this RedemedOffer.

        Brief details about the deal.

        :return: The headline of this RedemedOffer.
        :rtype: str
        """
        return self._headline

    @headline.setter
    def headline(self, headline):
        """Sets the headline of this RedemedOffer.

        Brief details about the deal.

        :param headline: The headline of this RedemedOffer.
        :type headline: str
        """

        self._headline = headline

    @property
    def language(self):
        """Gets the language of this RedemedOffer.

        Tongue of offer display text.

        :return: The language of this RedemedOffer.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this RedemedOffer.

        Tongue of offer display text.

        :param language: The language of this RedemedOffer.
        :type language: str
        """

        self._language = language

    @property
    def linkout_url(self):
        """Gets the linkout_url of this RedemedOffer.

        Deprecated, disregard.

        :return: The linkout_url of this RedemedOffer.
        :rtype: str
        """
        return self._linkout_url

    @linkout_url.setter
    def linkout_url(self, linkout_url):
        """Sets the linkout_url of this RedemedOffer.

        Deprecated, disregard.

        :param linkout_url: The linkout_url of this RedemedOffer.
        :type linkout_url: str
        """

        self._linkout_url = linkout_url

    @property
    def long_description(self):
        """Gets the long_description of this RedemedOffer.

        Explanation of the deal, typically displayed beneath the headline in a detail view. Often the same as the ShortDescription.

        :return: The long_description of this RedemedOffer.
        :rtype: str
        """
        return self._long_description

    @long_description.setter
    def long_description(self, long_description):
        """Sets the long_description of this RedemedOffer.

        Explanation of the deal, typically displayed beneath the headline in a detail view. Often the same as the ShortDescription.

        :param long_description: The long_description of this RedemedOffer.
        :type long_description: str
        """

        self._long_description = long_description

    @property
    def max_user_redemptions(self):
        """Gets the max_user_redemptions of this RedemedOffer.

        The number of times that the cardholder may take advantage of this offer.

        :return: The max_user_redemptions of this RedemedOffer.
        :rtype: int
        """
        return self._max_user_redemptions

    @max_user_redemptions.setter
    def max_user_redemptions(self, max_user_redemptions):
        """Sets the max_user_redemptions of this RedemedOffer.

        The number of times that the cardholder may take advantage of this offer.

        :param max_user_redemptions: The max_user_redemptions of this RedemedOffer.
        :type max_user_redemptions: int
        """

        self._max_user_redemptions = max_user_redemptions

    @property
    def merchant(self):
        """Gets the merchant of this RedemedOffer.


        :return: The merchant of this RedemedOffer.
        :rtype: RedemedOfferMerchant
        """
        return self._merchant

    @merchant.setter
    def merchant(self, merchant):
        """Sets the merchant of this RedemedOffer.


        :param merchant: The merchant of this RedemedOffer.
        :type merchant: RedemedOfferMerchant
        """

        self._merchant = merchant

    @property
    def offer_display(self):
        """Gets the offer_display of this RedemedOffer.


        :return: The offer_display of this RedemedOffer.
        :rtype: OfferDisplay
        """
        return self._offer_display

    @offer_display.setter
    def offer_display(self, offer_display):
        """Sets the offer_display of this RedemedOffer.


        :param offer_display: The offer_display of this RedemedOffer.
        :type offer_display: OfferDisplay
        """

        self._offer_display = offer_display

    @property
    def offer_id(self):
        """Gets the offer_id of this RedemedOffer.

        System-wide identifier for the campaign, not intended for end-user display.

        :return: The offer_id of this RedemedOffer.
        :rtype: str
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this RedemedOffer.

        System-wide identifier for the campaign, not intended for end-user display.

        :param offer_id: The offer_id of this RedemedOffer.
        :type offer_id: str
        """

        self._offer_id = offer_id

    @property
    def offer_media(self):
        """Gets the offer_media of this RedemedOffer.


        :return: The offer_media of this RedemedOffer.
        :rtype: OfferMedia
        """
        return self._offer_media

    @offer_media.setter
    def offer_media(self, offer_media):
        """Sets the offer_media of this RedemedOffer.


        :param offer_media: The offer_media of this RedemedOffer.
        :type offer_media: OfferMedia
        """

        self._offer_media = offer_media

    @property
    def offer_source(self):
        """Gets the offer_source of this RedemedOffer.

        Platform that made the offer available, not intended for end-user display.

        :return: The offer_source of this RedemedOffer.
        :rtype: str
        """
        return self._offer_source

    @offer_source.setter
    def offer_source(self, offer_source):
        """Sets the offer_source of this RedemedOffer.

        Platform that made the offer available, not intended for end-user display.

        :param offer_source: The offer_source of this RedemedOffer.
        :type offer_source: str
        """

        self._offer_source = offer_source

    @property
    def offer_type(self):
        """Gets the offer_type of this RedemedOffer.

        The kind of deal. POSTPAIDCREDIT- Statement Credit Offer, which is a discount that is automatically applied to the card linked to the user and utilized to make the purchase.

        :return: The offer_type of this RedemedOffer.
        :rtype: str
        """
        return self._offer_type

    @offer_type.setter
    def offer_type(self, offer_type):
        """Sets the offer_type of this RedemedOffer.

        The kind of deal. POSTPAIDCREDIT- Statement Credit Offer, which is a discount that is automatically applied to the card linked to the user and utilized to make the purchase.

        :param offer_type: The offer_type of this RedemedOffer.
        :type offer_type: str
        """

        self._offer_type = offer_type

    @property
    def offer_url(self):
        """Gets the offer_url of this RedemedOffer.

        Deprecated, disregard.

        :return: The offer_url of this RedemedOffer.
        :rtype: str
        """
        return self._offer_url

    @offer_url.setter
    def offer_url(self, offer_url):
        """Sets the offer_url of this RedemedOffer.

        Deprecated, disregard.

        :param offer_url: The offer_url of this RedemedOffer.
        :type offer_url: str
        """

        self._offer_url = offer_url

    @property
    def redemption_mode(self):
        """Gets the redemption_mode of this RedemedOffer.

        Type of credit made upon redemption of the offer- CASH, POINTS, or EITHER.

        :return: The redemption_mode of this RedemedOffer.
        :rtype: str
        """
        return self._redemption_mode

    @redemption_mode.setter
    def redemption_mode(self, redemption_mode):
        """Sets the redemption_mode of this RedemedOffer.

        Type of credit made upon redemption of the offer- CASH, POINTS, or EITHER.

        :param redemption_mode: The redemption_mode of this RedemedOffer.
        :type redemption_mode: str
        """

        self._redemption_mode = redemption_mode

    @property
    def redemption_type(self):
        """Gets the redemption_type of this RedemedOffer.

        Where a purchase may be made to qualify for the offer- INSTORE, ONLINE, or ONLINE-INSTORE (either).

        :return: The redemption_type of this RedemedOffer.
        :rtype: str
        """
        return self._redemption_type

    @redemption_type.setter
    def redemption_type(self, redemption_type):
        """Sets the redemption_type of this RedemedOffer.

        Where a purchase may be made to qualify for the offer- INSTORE, ONLINE, or ONLINE-INSTORE (either).

        :param redemption_type: The redemption_type of this RedemedOffer.
        :type redemption_type: str
        """

        self._redemption_type = redemption_type

    @property
    def short_description(self):
        """Gets the short_description of this RedemedOffer.

        Summary of the deal, typically displayed beneath the headline in a list view.

        :return: The short_description of this RedemedOffer.
        :rtype: str
        """
        return self._short_description

    @short_description.setter
    def short_description(self, short_description):
        """Sets the short_description of this RedemedOffer.

        Summary of the deal, typically displayed beneath the headline in a list view.

        :param short_description: The short_description of this RedemedOffer.
        :type short_description: str
        """

        self._short_description = short_description

    @property
    def transactions(self):
        """Gets the transactions of this RedemedOffer.


        :return: The transactions of this RedemedOffer.
        :rtype: Transaction
        """
        return self._transactions

    @transactions.setter
    def transactions(self, transactions):
        """Sets the transactions of this RedemedOffer.


        :param transactions: The transactions of this RedemedOffer.
        :type transactions: Transaction
        """

        self._transactions = transactions
