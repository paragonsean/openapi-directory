# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RequestPisSepaSchedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_date: date=None, frequency: str=None, start_date: date=None):
        """RequestPisSepaSchedule - a model defined in OpenAPI

        :param end_date: The end_date of this RequestPisSepaSchedule.
        :param frequency: The frequency of this RequestPisSepaSchedule.
        :param start_date: The start_date of this RequestPisSepaSchedule.
        """
        self.openapi_types = {
            'end_date': date,
            'frequency': str,
            'start_date': date
        }

        self.attribute_map = {
            'end_date': 'endDate',
            'frequency': 'frequency',
            'start_date': 'startDate'
        }

        self._end_date = end_date
        self._frequency = frequency
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RequestPisSepaSchedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RequestPisSepaSchedule of this RequestPisSepaSchedule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_date(self):
        """Gets the end_date of this RequestPisSepaSchedule.

        End date for the schedule

        :return: The end_date of this RequestPisSepaSchedule.
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this RequestPisSepaSchedule.

        End date for the schedule

        :param end_date: The end_date of this RequestPisSepaSchedule.
        :type end_date: date
        """

        self._end_date = end_date

    @property
    def frequency(self):
        """Gets the frequency of this RequestPisSepaSchedule.

        Frequency type

        :return: The frequency of this RequestPisSepaSchedule.
        :rtype: str
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this RequestPisSepaSchedule.

        Frequency type

        :param frequency: The frequency of this RequestPisSepaSchedule.
        :type frequency: str
        """
        allowed_values = ["DAIL", "WEEK", "MNTH", "QUTR", "SEMI", "YEAR"]  # noqa: E501
        if frequency not in allowed_values:
            raise ValueError(
                "Invalid value for `frequency` ({0}), must be one of {1}"
                .format(frequency, allowed_values)
            )

        self._frequency = frequency

    @property
    def start_date(self):
        """Gets the start_date of this RequestPisSepaSchedule.

        Start date for the schedule

        :return: The start_date of this RequestPisSepaSchedule.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this RequestPisSepaSchedule.

        Start date for the schedule

        :param start_date: The start_date of this RequestPisSepaSchedule.
        :type start_date: date
        """
        if start_date is None:
            raise ValueError("Invalid value for `start_date`, must not be `None`")

        self._start_date = start_date
