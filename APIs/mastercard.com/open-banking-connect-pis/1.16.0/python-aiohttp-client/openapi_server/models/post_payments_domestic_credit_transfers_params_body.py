# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.post_payments_domestic_credit_transfers_params_body_request_info import PostPaymentsDomesticCreditTransfersParamsBodyRequestInfo
from openapi_server import util


class PostPaymentsDomesticCreditTransfersParamsBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request_info: PostPaymentsDomesticCreditTransfersParamsBodyRequestInfo=None):
        """PostPaymentsDomesticCreditTransfersParamsBody - a model defined in OpenAPI

        :param request_info: The request_info of this PostPaymentsDomesticCreditTransfersParamsBody.
        """
        self.openapi_types = {
            'request_info': PostPaymentsDomesticCreditTransfersParamsBodyRequestInfo
        }

        self.attribute_map = {
            'request_info': 'requestInfo'
        }

        self._request_info = request_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostPaymentsDomesticCreditTransfersParamsBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The postPaymentsDomesticCreditTransfersParamsBody of this PostPaymentsDomesticCreditTransfersParamsBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_info(self):
        """Gets the request_info of this PostPaymentsDomesticCreditTransfersParamsBody.


        :return: The request_info of this PostPaymentsDomesticCreditTransfersParamsBody.
        :rtype: PostPaymentsDomesticCreditTransfersParamsBodyRequestInfo
        """
        return self._request_info

    @request_info.setter
    def request_info(self, request_info):
        """Sets the request_info of this PostPaymentsDomesticCreditTransfersParamsBody.


        :param request_info: The request_info of this PostPaymentsDomesticCreditTransfersParamsBody.
        :type request_info: PostPaymentsDomesticCreditTransfersParamsBodyRequestInfo
        """
        if request_info is None:
            raise ValueError("Invalid value for `request_info`, must not be `None`")

        self._request_info = request_info
