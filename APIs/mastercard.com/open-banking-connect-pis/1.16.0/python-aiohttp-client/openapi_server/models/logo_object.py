# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.logo_file_type import LogoFileType
from openapi_server import util


class LogoObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, binary_content: str=None, file_type: LogoFileType=None, logo_url: str=None):
        """LogoObject - a model defined in OpenAPI

        :param binary_content: The binary_content of this LogoObject.
        :param file_type: The file_type of this LogoObject.
        :param logo_url: The logo_url of this LogoObject.
        """
        self.openapi_types = {
            'binary_content': str,
            'file_type': LogoFileType,
            'logo_url': str
        }

        self.attribute_map = {
            'binary_content': 'binaryContent',
            'file_type': 'fileType',
            'logo_url': 'logoUrl'
        }

        self._binary_content = binary_content
        self._file_type = file_type
        self._logo_url = logo_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogoObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogoObject of this LogoObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def binary_content(self):
        """Gets the binary_content of this LogoObject.

        This field is deprecated, use logoUrl instead

        :return: The binary_content of this LogoObject.
        :rtype: str
        """
        return self._binary_content

    @binary_content.setter
    def binary_content(self, binary_content):
        """Sets the binary_content of this LogoObject.

        This field is deprecated, use logoUrl instead

        :param binary_content: The binary_content of this LogoObject.
        :type binary_content: str
        """

        self._binary_content = binary_content

    @property
    def file_type(self):
        """Gets the file_type of this LogoObject.


        :return: The file_type of this LogoObject.
        :rtype: LogoFileType
        """
        return self._file_type

    @file_type.setter
    def file_type(self, file_type):
        """Sets the file_type of this LogoObject.


        :param file_type: The file_type of this LogoObject.
        :type file_type: LogoFileType
        """

        self._file_type = file_type

    @property
    def logo_url(self):
        """Gets the logo_url of this LogoObject.

        URL to a logo file

        :return: The logo_url of this LogoObject.
        :rtype: str
        """
        return self._logo_url

    @logo_url.setter
    def logo_url(self, logo_url):
        """Sets the logo_url of this LogoObject.

        URL to a logo file

        :param logo_url: The logo_url of this LogoObject.
        :type logo_url: str
        """

        self._logo_url = logo_url
