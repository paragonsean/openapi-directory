# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.post_payments_sepa_credit_transfers_payment_status_ok_body_original_request_info import PostPaymentsSepaCreditTransfersPaymentStatusOKBodyOriginalRequestInfo
from openapi_server.models.post_payments_sepa_credit_transfers_payment_status_ok_body_payments import PostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments
from openapi_server import util


class PostPaymentsSepaCreditTransfersPaymentStatusOKBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, original_request_info: PostPaymentsSepaCreditTransfersPaymentStatusOKBodyOriginalRequestInfo=None, payments: PostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments=None):
        """PostPaymentsSepaCreditTransfersPaymentStatusOKBody - a model defined in OpenAPI

        :param original_request_info: The original_request_info of this PostPaymentsSepaCreditTransfersPaymentStatusOKBody.
        :param payments: The payments of this PostPaymentsSepaCreditTransfersPaymentStatusOKBody.
        """
        self.openapi_types = {
            'original_request_info': PostPaymentsSepaCreditTransfersPaymentStatusOKBodyOriginalRequestInfo,
            'payments': PostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments
        }

        self.attribute_map = {
            'original_request_info': 'originalRequestInfo',
            'payments': 'payments'
        }

        self._original_request_info = original_request_info
        self._payments = payments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostPaymentsSepaCreditTransfersPaymentStatusOKBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The postPaymentsSepaCreditTransfersPaymentStatusOKBody of this PostPaymentsSepaCreditTransfersPaymentStatusOKBody.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def original_request_info(self):
        """Gets the original_request_info of this PostPaymentsSepaCreditTransfersPaymentStatusOKBody.


        :return: The original_request_info of this PostPaymentsSepaCreditTransfersPaymentStatusOKBody.
        :rtype: PostPaymentsSepaCreditTransfersPaymentStatusOKBodyOriginalRequestInfo
        """
        return self._original_request_info

    @original_request_info.setter
    def original_request_info(self, original_request_info):
        """Sets the original_request_info of this PostPaymentsSepaCreditTransfersPaymentStatusOKBody.


        :param original_request_info: The original_request_info of this PostPaymentsSepaCreditTransfersPaymentStatusOKBody.
        :type original_request_info: PostPaymentsSepaCreditTransfersPaymentStatusOKBodyOriginalRequestInfo
        """
        if original_request_info is None:
            raise ValueError("Invalid value for `original_request_info`, must not be `None`")

        self._original_request_info = original_request_info

    @property
    def payments(self):
        """Gets the payments of this PostPaymentsSepaCreditTransfersPaymentStatusOKBody.


        :return: The payments of this PostPaymentsSepaCreditTransfersPaymentStatusOKBody.
        :rtype: PostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments
        """
        return self._payments

    @payments.setter
    def payments(self, payments):
        """Sets the payments of this PostPaymentsSepaCreditTransfersPaymentStatusOKBody.


        :param payments: The payments of this PostPaymentsSepaCreditTransfersPaymentStatusOKBody.
        :type payments: PostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments
        """

        self._payments = payments
