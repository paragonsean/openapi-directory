/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments() {
    this->initializeModel();
}

OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::~OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments() {}

void OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::initializeModel() {

    m_status_reason_code_isSet = false;
    m_status_reason_code_isValid = false;

    m_transaction_status_isSet = false;
    m_transaction_status_isValid = false;
}

void OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::fromJsonObject(QJsonObject json) {

    m_status_reason_code_isValid = ::OpenAPI::fromJsonValue(m_status_reason_code, json[QString("statusReasonCode")]);
    m_status_reason_code_isSet = !json[QString("statusReasonCode")].isNull() && m_status_reason_code_isValid;

    m_transaction_status_isValid = ::OpenAPI::fromJsonValue(m_transaction_status, json[QString("transactionStatus")]);
    m_transaction_status_isSet = !json[QString("transactionStatus")].isNull() && m_transaction_status_isValid;
}

QString OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::asJsonObject() const {
    QJsonObject obj;
    if (m_status_reason_code_isSet) {
        obj.insert(QString("statusReasonCode"), ::OpenAPI::toJsonValue(m_status_reason_code));
    }
    if (m_transaction_status_isSet) {
        obj.insert(QString("transactionStatus"), ::OpenAPI::toJsonValue(m_transaction_status));
    }
    return obj;
}

QString OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::getStatusReasonCode() const {
    return m_status_reason_code;
}
void OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::setStatusReasonCode(const QString &status_reason_code) {
    m_status_reason_code = status_reason_code;
    m_status_reason_code_isSet = true;
}

bool OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::is_status_reason_code_Set() const{
    return m_status_reason_code_isSet;
}

bool OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::is_status_reason_code_Valid() const{
    return m_status_reason_code_isValid;
}

QString OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::getTransactionStatus() const {
    return m_transaction_status;
}
void OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::setTransactionStatus(const QString &transaction_status) {
    m_transaction_status = transaction_status;
    m_transaction_status_isSet = true;
}

bool OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::is_transaction_status_Set() const{
    return m_transaction_status_isSet;
}

bool OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::is_transaction_status_Valid() const{
    return m_transaction_status_isValid;
}

bool OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status_reason_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostPaymentsSepaCreditTransfersPaymentStatusOKBodyPayments::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_transaction_status_isValid && true;
}

} // namespace OpenAPI
