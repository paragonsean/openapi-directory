/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent() {
    this->initializeModel();
}

OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::~OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent() {}

void OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::initializeModel() {

    m_clearing_system_identification_isSet = false;
    m_clearing_system_identification_isValid = false;

    m_member_identification_isSet = false;
    m_member_identification_isValid = false;
}

void OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::fromJsonObject(QJsonObject json) {

    m_clearing_system_identification_isValid = ::OpenAPI::fromJsonValue(m_clearing_system_identification, json[QString("clearingSystemIdentification")]);
    m_clearing_system_identification_isSet = !json[QString("clearingSystemIdentification")].isNull() && m_clearing_system_identification_isValid;

    m_member_identification_isValid = ::OpenAPI::fromJsonValue(m_member_identification, json[QString("memberIdentification")]);
    m_member_identification_isSet = !json[QString("memberIdentification")].isNull() && m_member_identification_isValid;
}

QString OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::asJsonObject() const {
    QJsonObject obj;
    if (m_clearing_system_identification_isSet) {
        obj.insert(QString("clearingSystemIdentification"), ::OpenAPI::toJsonValue(m_clearing_system_identification));
    }
    if (m_member_identification_isSet) {
        obj.insert(QString("memberIdentification"), ::OpenAPI::toJsonValue(m_member_identification));
    }
    return obj;
}

QString OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::getClearingSystemIdentification() const {
    return m_clearing_system_identification;
}
void OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::setClearingSystemIdentification(const QString &clearing_system_identification) {
    m_clearing_system_identification = clearing_system_identification;
    m_clearing_system_identification_isSet = true;
}

bool OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::is_clearing_system_identification_Set() const{
    return m_clearing_system_identification_isSet;
}

bool OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::is_clearing_system_identification_Valid() const{
    return m_clearing_system_identification_isValid;
}

QString OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::getMemberIdentification() const {
    return m_member_identification;
}
void OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::setMemberIdentification(const QString &member_identification) {
    m_member_identification = member_identification;
    m_member_identification_isSet = true;
}

bool OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::is_member_identification_Set() const{
    return m_member_identification_isSet;
}

bool OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::is_member_identification_Valid() const{
    return m_member_identification_isValid;
}

bool OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_clearing_system_identification_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_identification_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_clearing_system_identification_isValid && m_member_identification_isValid && true;
}

} // namespace OpenAPI
