/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostAspspsParamsBody.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostAspspsParamsBody::OAIPostAspspsParamsBody(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostAspspsParamsBody::OAIPostAspspsParamsBody() {
    this->initializeModel();
}

OAIPostAspspsParamsBody::~OAIPostAspspsParamsBody() {}

void OAIPostAspspsParamsBody::initializeModel() {

    m_country_isSet = false;
    m_country_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_request_info_isSet = false;
    m_request_info_isValid = false;

    m_return_additional_data_isSet = false;
    m_return_additional_data_isValid = false;
}

void OAIPostAspspsParamsBody::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostAspspsParamsBody::fromJsonObject(QJsonObject json) {

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_request_info_isValid = ::OpenAPI::fromJsonValue(m_request_info, json[QString("requestInfo")]);
    m_request_info_isSet = !json[QString("requestInfo")].isNull() && m_request_info_isValid;

    m_return_additional_data_isValid = ::OpenAPI::fromJsonValue(m_return_additional_data, json[QString("returnAdditionalData")]);
    m_return_additional_data_isSet = !json[QString("returnAdditionalData")].isNull() && m_return_additional_data_isValid;
}

QString OAIPostAspspsParamsBody::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostAspspsParamsBody::asJsonObject() const {
    QJsonObject obj;
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_request_info.isSet()) {
        obj.insert(QString("requestInfo"), ::OpenAPI::toJsonValue(m_request_info));
    }
    if (m_return_additional_data.size() > 0) {
        obj.insert(QString("returnAdditionalData"), ::OpenAPI::toJsonValue(m_return_additional_data));
    }
    return obj;
}

QString OAIPostAspspsParamsBody::getCountry() const {
    return m_country;
}
void OAIPostAspspsParamsBody::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIPostAspspsParamsBody::is_country_Set() const{
    return m_country_isSet;
}

bool OAIPostAspspsParamsBody::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIPostAspspsParamsBody::getId() const {
    return m_id;
}
void OAIPostAspspsParamsBody::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPostAspspsParamsBody::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPostAspspsParamsBody::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIPostAspspsParamsBody::getName() const {
    return m_name;
}
void OAIPostAspspsParamsBody::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPostAspspsParamsBody::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPostAspspsParamsBody::is_name_Valid() const{
    return m_name_isValid;
}

OAIPostAspspsParamsBodyRequestInfo OAIPostAspspsParamsBody::getRequestInfo() const {
    return m_request_info;
}
void OAIPostAspspsParamsBody::setRequestInfo(const OAIPostAspspsParamsBodyRequestInfo &request_info) {
    m_request_info = request_info;
    m_request_info_isSet = true;
}

bool OAIPostAspspsParamsBody::is_request_info_Set() const{
    return m_request_info_isSet;
}

bool OAIPostAspspsParamsBody::is_request_info_Valid() const{
    return m_request_info_isValid;
}

QList<OAIAdditionalDataField> OAIPostAspspsParamsBody::getReturnAdditionalData() const {
    return m_return_additional_data;
}
void OAIPostAspspsParamsBody::setReturnAdditionalData(const QList<OAIAdditionalDataField> &return_additional_data) {
    m_return_additional_data = return_additional_data;
    m_return_additional_data_isSet = true;
}

bool OAIPostAspspsParamsBody::is_return_additional_data_Set() const{
    return m_return_additional_data_isSet;
}

bool OAIPostAspspsParamsBody::is_return_additional_data_Valid() const{
    return m_return_additional_data_isValid;
}

bool OAIPostAspspsParamsBody::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_additional_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostAspspsParamsBody::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_request_info_isValid && true;
}

} // namespace OpenAPI
