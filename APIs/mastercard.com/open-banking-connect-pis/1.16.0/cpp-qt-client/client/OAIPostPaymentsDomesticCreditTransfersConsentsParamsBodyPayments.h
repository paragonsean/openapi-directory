/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments.h
 *
 * 
 */

#ifndef OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_H
#define OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_H

#include <QJsonObject>

#include "OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAccount.h"
#include "OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAddress.h"
#include "OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent.h"
#include "OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsInstructedAmount.h"
#include "OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAccount.h"
#include "OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent.h"
#include "OAIRequestPisDomesticSchedule.h"
#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAccount;
class OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAddress;
class OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent;
class OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAccount;
class OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent;
class OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsInstructedAmount;
class OAIRequestPisDomesticSchedule;

class OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments : public OAIObject {
public:
    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments();
    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments(QString json);
    ~OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAccount getCreditorAccount() const;
    void setCreditorAccount(const OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAccount &creditor_account);
    bool is_creditor_account_Set() const;
    bool is_creditor_account_Valid() const;

    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAddress getCreditorAddress() const;
    void setCreditorAddress(const OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAddress &creditor_address);
    bool is_creditor_address_Set() const;
    bool is_creditor_address_Valid() const;

    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent getCreditorAgent() const;
    void setCreditorAgent(const OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent &creditor_agent);
    bool is_creditor_agent_Set() const;
    bool is_creditor_agent_Valid() const;

    QString getCreditorName() const;
    void setCreditorName(const QString &creditor_name);
    bool is_creditor_name_Set() const;
    bool is_creditor_name_Valid() const;

    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAccount getDebtorAccount() const;
    void setDebtorAccount(const OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAccount &debtor_account);
    bool is_debtor_account_Set() const;
    bool is_debtor_account_Valid() const;

    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent getDebtorAgent() const;
    void setDebtorAgent(const OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent &debtor_agent);
    bool is_debtor_agent_Set() const;
    bool is_debtor_agent_Valid() const;

    QString getEndToEndIdentification() const;
    void setEndToEndIdentification(const QString &end_to_end_identification);
    bool is_end_to_end_identification_Set() const;
    bool is_end_to_end_identification_Valid() const;

    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsInstructedAmount getInstructedAmount() const;
    void setInstructedAmount(const OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsInstructedAmount &instructed_amount);
    bool is_instructed_amount_Set() const;
    bool is_instructed_amount_Valid() const;

    QString getInstructionIdentification() const;
    void setInstructionIdentification(const QString &instruction_identification);
    bool is_instruction_identification_Set() const;
    bool is_instruction_identification_Valid() const;

    QString getInstructionPriority() const;
    void setInstructionPriority(const QString &instruction_priority);
    bool is_instruction_priority_Set() const;
    bool is_instruction_priority_Valid() const;

    QString getLocalInstrument() const;
    void setLocalInstrument(const QString &local_instrument);
    bool is_local_instrument_Set() const;
    bool is_local_instrument_Valid() const;

    QString getRemittanceInformationReference() const;
    void setRemittanceInformationReference(const QString &remittance_information_reference);
    bool is_remittance_information_reference_Set() const;
    bool is_remittance_information_reference_Valid() const;

    QString getRemittanceInformationUnstructured() const;
    void setRemittanceInformationUnstructured(const QString &remittance_information_unstructured);
    bool is_remittance_information_unstructured_Set() const;
    bool is_remittance_information_unstructured_Valid() const;

    QDate getRequestedExecutionDate() const;
    void setRequestedExecutionDate(const QDate &requested_execution_date);
    bool is_requested_execution_date_Set() const;
    bool is_requested_execution_date_Valid() const;

    OAIRequestPisDomesticSchedule getSchedule() const;
    void setSchedule(const OAIRequestPisDomesticSchedule &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAccount m_creditor_account;
    bool m_creditor_account_isSet;
    bool m_creditor_account_isValid;

    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAddress m_creditor_address;
    bool m_creditor_address_isSet;
    bool m_creditor_address_isValid;

    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent m_creditor_agent;
    bool m_creditor_agent_isSet;
    bool m_creditor_agent_isValid;

    QString m_creditor_name;
    bool m_creditor_name_isSet;
    bool m_creditor_name_isValid;

    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAccount m_debtor_account;
    bool m_debtor_account_isSet;
    bool m_debtor_account_isValid;

    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent m_debtor_agent;
    bool m_debtor_agent_isSet;
    bool m_debtor_agent_isValid;

    QString m_end_to_end_identification;
    bool m_end_to_end_identification_isSet;
    bool m_end_to_end_identification_isValid;

    OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsInstructedAmount m_instructed_amount;
    bool m_instructed_amount_isSet;
    bool m_instructed_amount_isValid;

    QString m_instruction_identification;
    bool m_instruction_identification_isSet;
    bool m_instruction_identification_isValid;

    QString m_instruction_priority;
    bool m_instruction_priority_isSet;
    bool m_instruction_priority_isValid;

    QString m_local_instrument;
    bool m_local_instrument_isSet;
    bool m_local_instrument_isValid;

    QString m_remittance_information_reference;
    bool m_remittance_information_reference_isSet;
    bool m_remittance_information_reference_isValid;

    QString m_remittance_information_unstructured;
    bool m_remittance_information_unstructured_isSet;
    bool m_remittance_information_unstructured_isValid;

    QDate m_requested_execution_date;
    bool m_requested_execution_date_isSet;
    bool m_requested_execution_date_isValid;

    OAIRequestPisDomesticSchedule m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments)

#endif // OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_H
