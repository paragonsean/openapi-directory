/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent() {
    this->initializeModel();
}

OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::~OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent() {}

void OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::initializeModel() {

    m_identification_isSet = false;
    m_identification_isValid = false;
}

void OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::fromJsonObject(QJsonObject json) {

    m_identification_isValid = ::OpenAPI::fromJsonValue(m_identification, json[QString("identification")]);
    m_identification_isSet = !json[QString("identification")].isNull() && m_identification_isValid;
}

QString OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::asJsonObject() const {
    QJsonObject obj;
    if (m_identification_isSet) {
        obj.insert(QString("identification"), ::OpenAPI::toJsonValue(m_identification));
    }
    return obj;
}

QString OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::getIdentification() const {
    return m_identification;
}
void OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::setIdentification(const QString &identification) {
    m_identification = identification;
    m_identification_isSet = true;
}

bool OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::is_identification_Set() const{
    return m_identification_isSet;
}

bool OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::is_identification_Valid() const{
    return m_identification_isValid;
}

bool OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_identification_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_identification_isValid && true;
}

} // namespace OpenAPI
