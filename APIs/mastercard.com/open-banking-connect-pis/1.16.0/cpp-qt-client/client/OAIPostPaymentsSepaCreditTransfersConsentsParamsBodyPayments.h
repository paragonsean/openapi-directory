/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments.h
 *
 * 
 */

#ifndef OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_H
#define OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_H

#include <QJsonObject>

#include "OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsCreditorAccount.h"
#include "OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsCreditorAddress.h"
#include "OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount.h"
#include "OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAddress.h"
#include "OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsInstructedAmount.h"
#include "OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_creditorAgent.h"
#include "OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_debtorAgent.h"
#include "OAIRequestPisSepaSchedule.h"
#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsCreditorAccount;
class OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsCreditorAddress;
class OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_creditorAgent;
class OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount;
class OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAddress;
class OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_debtorAgent;
class OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsInstructedAmount;
class OAIRequestPisSepaSchedule;

class OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments : public OAIObject {
public:
    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments();
    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments(QString json);
    ~OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategoryPurpose() const;
    void setCategoryPurpose(const QString &category_purpose);
    bool is_category_purpose_Set() const;
    bool is_category_purpose_Valid() const;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsCreditorAccount getCreditorAccount() const;
    void setCreditorAccount(const OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsCreditorAccount &creditor_account);
    bool is_creditor_account_Set() const;
    bool is_creditor_account_Valid() const;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsCreditorAddress getCreditorAddress() const;
    void setCreditorAddress(const OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsCreditorAddress &creditor_address);
    bool is_creditor_address_Set() const;
    bool is_creditor_address_Valid() const;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_creditorAgent getCreditorAgent() const;
    void setCreditorAgent(const OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_creditorAgent &creditor_agent);
    bool is_creditor_agent_Set() const;
    bool is_creditor_agent_Valid() const;

    QString getCreditorName() const;
    void setCreditorName(const QString &creditor_name);
    bool is_creditor_name_Set() const;
    bool is_creditor_name_Valid() const;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount getDebtorAccount() const;
    void setDebtorAccount(const OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount &debtor_account);
    bool is_debtor_account_Set() const;
    bool is_debtor_account_Valid() const;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAddress getDebtorAddress() const;
    void setDebtorAddress(const OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAddress &debtor_address);
    bool is_debtor_address_Set() const;
    bool is_debtor_address_Valid() const;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_debtorAgent getDebtorAgent() const;
    void setDebtorAgent(const OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_debtorAgent &debtor_agent);
    bool is_debtor_agent_Set() const;
    bool is_debtor_agent_Valid() const;

    QString getDebtorName() const;
    void setDebtorName(const QString &debtor_name);
    bool is_debtor_name_Set() const;
    bool is_debtor_name_Valid() const;

    QString getEndToEndIdentification() const;
    void setEndToEndIdentification(const QString &end_to_end_identification);
    bool is_end_to_end_identification_Set() const;
    bool is_end_to_end_identification_Valid() const;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsInstructedAmount getInstructedAmount() const;
    void setInstructedAmount(const OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsInstructedAmount &instructed_amount);
    bool is_instructed_amount_Set() const;
    bool is_instructed_amount_Valid() const;

    QString getInstructionPriority() const;
    void setInstructionPriority(const QString &instruction_priority);
    bool is_instruction_priority_Set() const;
    bool is_instruction_priority_Valid() const;

    QString getLocalInstrument() const;
    void setLocalInstrument(const QString &local_instrument);
    bool is_local_instrument_Set() const;
    bool is_local_instrument_Valid() const;

    QString getRemittanceInformationReference() const;
    void setRemittanceInformationReference(const QString &remittance_information_reference);
    bool is_remittance_information_reference_Set() const;
    bool is_remittance_information_reference_Valid() const;

    QString getRemittanceInformationStructured() const;
    void setRemittanceInformationStructured(const QString &remittance_information_structured);
    bool is_remittance_information_structured_Set() const;
    bool is_remittance_information_structured_Valid() const;

    QString getRemittanceInformationUnstructured() const;
    void setRemittanceInformationUnstructured(const QString &remittance_information_unstructured);
    bool is_remittance_information_unstructured_Set() const;
    bool is_remittance_information_unstructured_Valid() const;

    QDate getRequestedExecutionDate() const;
    void setRequestedExecutionDate(const QDate &requested_execution_date);
    bool is_requested_execution_date_Set() const;
    bool is_requested_execution_date_Valid() const;

    OAIRequestPisSepaSchedule getSchedule() const;
    void setSchedule(const OAIRequestPisSepaSchedule &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category_purpose;
    bool m_category_purpose_isSet;
    bool m_category_purpose_isValid;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsCreditorAccount m_creditor_account;
    bool m_creditor_account_isSet;
    bool m_creditor_account_isValid;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsCreditorAddress m_creditor_address;
    bool m_creditor_address_isSet;
    bool m_creditor_address_isValid;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_creditorAgent m_creditor_agent;
    bool m_creditor_agent_isSet;
    bool m_creditor_agent_isValid;

    QString m_creditor_name;
    bool m_creditor_name_isSet;
    bool m_creditor_name_isValid;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount m_debtor_account;
    bool m_debtor_account_isSet;
    bool m_debtor_account_isValid;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAddress m_debtor_address;
    bool m_debtor_address_isSet;
    bool m_debtor_address_isValid;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_debtorAgent m_debtor_agent;
    bool m_debtor_agent_isSet;
    bool m_debtor_agent_isValid;

    QString m_debtor_name;
    bool m_debtor_name_isSet;
    bool m_debtor_name_isValid;

    QString m_end_to_end_identification;
    bool m_end_to_end_identification_isSet;
    bool m_end_to_end_identification_isValid;

    OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsInstructedAmount m_instructed_amount;
    bool m_instructed_amount_isSet;
    bool m_instructed_amount_isValid;

    QString m_instruction_priority;
    bool m_instruction_priority_isSet;
    bool m_instruction_priority_isValid;

    QString m_local_instrument;
    bool m_local_instrument_isSet;
    bool m_local_instrument_isValid;

    QString m_remittance_information_reference;
    bool m_remittance_information_reference_isSet;
    bool m_remittance_information_reference_isValid;

    QString m_remittance_information_structured;
    bool m_remittance_information_structured_isSet;
    bool m_remittance_information_structured_isValid;

    QString m_remittance_information_unstructured;
    bool m_remittance_information_unstructured_isSet;
    bool m_remittance_information_unstructured_isValid;

    QDate m_requested_execution_date;
    bool m_requested_execution_date_isSet;
    bool m_requested_execution_date_isValid;

    OAIRequestPisSepaSchedule m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments)

#endif // OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPayments_H
