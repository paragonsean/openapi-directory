/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILogoObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILogoObject::OAILogoObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILogoObject::OAILogoObject() {
    this->initializeModel();
}

OAILogoObject::~OAILogoObject() {}

void OAILogoObject::initializeModel() {

    m_binary_content_isSet = false;
    m_binary_content_isValid = false;

    m_file_type_isSet = false;
    m_file_type_isValid = false;

    m_logo_url_isSet = false;
    m_logo_url_isValid = false;
}

void OAILogoObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILogoObject::fromJsonObject(QJsonObject json) {

    m_binary_content_isValid = ::OpenAPI::fromJsonValue(m_binary_content, json[QString("binaryContent")]);
    m_binary_content_isSet = !json[QString("binaryContent")].isNull() && m_binary_content_isValid;

    m_file_type_isValid = ::OpenAPI::fromJsonValue(m_file_type, json[QString("fileType")]);
    m_file_type_isSet = !json[QString("fileType")].isNull() && m_file_type_isValid;

    m_logo_url_isValid = ::OpenAPI::fromJsonValue(m_logo_url, json[QString("logoUrl")]);
    m_logo_url_isSet = !json[QString("logoUrl")].isNull() && m_logo_url_isValid;
}

QString OAILogoObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILogoObject::asJsonObject() const {
    QJsonObject obj;
    if (m_binary_content_isSet) {
        obj.insert(QString("binaryContent"), ::OpenAPI::toJsonValue(m_binary_content));
    }
    if (m_file_type.isSet()) {
        obj.insert(QString("fileType"), ::OpenAPI::toJsonValue(m_file_type));
    }
    if (m_logo_url_isSet) {
        obj.insert(QString("logoUrl"), ::OpenAPI::toJsonValue(m_logo_url));
    }
    return obj;
}

QString OAILogoObject::getBinaryContent() const {
    return m_binary_content;
}
void OAILogoObject::setBinaryContent(const QString &binary_content) {
    m_binary_content = binary_content;
    m_binary_content_isSet = true;
}

bool OAILogoObject::is_binary_content_Set() const{
    return m_binary_content_isSet;
}

bool OAILogoObject::is_binary_content_Valid() const{
    return m_binary_content_isValid;
}

OAILogoFileType OAILogoObject::getFileType() const {
    return m_file_type;
}
void OAILogoObject::setFileType(const OAILogoFileType &file_type) {
    m_file_type = file_type;
    m_file_type_isSet = true;
}

bool OAILogoObject::is_file_type_Set() const{
    return m_file_type_isSet;
}

bool OAILogoObject::is_file_type_Valid() const{
    return m_file_type_isValid;
}

QString OAILogoObject::getLogoUrl() const {
    return m_logo_url;
}
void OAILogoObject::setLogoUrl(const QString &logo_url) {
    m_logo_url = logo_url;
    m_logo_url_isSet = true;
}

bool OAILogoObject::is_logo_url_Set() const{
    return m_logo_url_isSet;
}

bool OAILogoObject::is_logo_url_Valid() const{
    return m_logo_url_isValid;
}

bool OAILogoObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_binary_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILogoObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
