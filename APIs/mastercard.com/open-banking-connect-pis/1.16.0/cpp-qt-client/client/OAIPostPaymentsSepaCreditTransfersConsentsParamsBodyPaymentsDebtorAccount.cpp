/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount() {
    this->initializeModel();
}

OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::~OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount() {}

void OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::initializeModel() {

    m_iban_isSet = false;
    m_iban_isValid = false;
}

void OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::fromJsonObject(QJsonObject json) {

    m_iban_isValid = ::OpenAPI::fromJsonValue(m_iban, json[QString("iban")]);
    m_iban_isSet = !json[QString("iban")].isNull() && m_iban_isValid;
}

QString OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_iban_isSet) {
        obj.insert(QString("iban"), ::OpenAPI::toJsonValue(m_iban));
    }
    return obj;
}

QString OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::getIban() const {
    return m_iban;
}
void OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::setIban(const QString &iban) {
    m_iban = iban;
    m_iban_isSet = true;
}

bool OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::is_iban_Set() const{
    return m_iban_isSet;
}

bool OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::is_iban_Valid() const{
    return m_iban_isValid;
}

bool OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_iban_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostPaymentsSepaCreditTransfersConsentsParamsBodyPaymentsDebtorAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_iban_isValid && true;
}

} // namespace OpenAPI
