/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks() {
    this->initializeModel();
}

OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::~OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks() {}

void OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::initializeModel() {

    m_sca_redirect_isSet = false;
    m_sca_redirect_isValid = false;
}

void OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::fromJsonObject(QJsonObject json) {

    m_sca_redirect_isValid = ::OpenAPI::fromJsonValue(m_sca_redirect, json[QString("scaRedirect")]);
    m_sca_redirect_isSet = !json[QString("scaRedirect")].isNull() && m_sca_redirect_isValid;
}

QString OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_sca_redirect_isSet) {
        obj.insert(QString("scaRedirect"), ::OpenAPI::toJsonValue(m_sca_redirect));
    }
    return obj;
}

QString OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::getScaRedirect() const {
    return m_sca_redirect;
}
void OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::setScaRedirect(const QString &sca_redirect) {
    m_sca_redirect = sca_redirect;
    m_sca_redirect_isSet = true;
}

bool OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::is_sca_redirect_Set() const{
    return m_sca_redirect_isSet;
}

bool OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::is_sca_redirect_Valid() const{
    return m_sca_redirect_isValid;
}

bool OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sca_redirect_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostPaymentsCrossBorderCreditTransfersConsentsOKBodyLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
