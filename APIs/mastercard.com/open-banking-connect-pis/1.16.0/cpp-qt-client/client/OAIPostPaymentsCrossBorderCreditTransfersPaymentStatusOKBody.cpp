/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody() {
    this->initializeModel();
}

OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::~OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody() {}

void OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::initializeModel() {

    m_original_request_info_isSet = false;
    m_original_request_info_isValid = false;

    m_payments_isSet = false;
    m_payments_isValid = false;
}

void OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::fromJsonObject(QJsonObject json) {

    m_original_request_info_isValid = ::OpenAPI::fromJsonValue(m_original_request_info, json[QString("originalRequestInfo")]);
    m_original_request_info_isSet = !json[QString("originalRequestInfo")].isNull() && m_original_request_info_isValid;

    m_payments_isValid = ::OpenAPI::fromJsonValue(m_payments, json[QString("payments")]);
    m_payments_isSet = !json[QString("payments")].isNull() && m_payments_isValid;
}

QString OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::asJsonObject() const {
    QJsonObject obj;
    if (m_original_request_info.isSet()) {
        obj.insert(QString("originalRequestInfo"), ::OpenAPI::toJsonValue(m_original_request_info));
    }
    if (m_payments.isSet()) {
        obj.insert(QString("payments"), ::OpenAPI::toJsonValue(m_payments));
    }
    return obj;
}

OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBodyOriginalRequestInfo OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::getOriginalRequestInfo() const {
    return m_original_request_info;
}
void OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::setOriginalRequestInfo(const OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBodyOriginalRequestInfo &original_request_info) {
    m_original_request_info = original_request_info;
    m_original_request_info_isSet = true;
}

bool OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::is_original_request_info_Set() const{
    return m_original_request_info_isSet;
}

bool OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::is_original_request_info_Valid() const{
    return m_original_request_info_isValid;
}

OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBodyPayments OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::getPayments() const {
    return m_payments;
}
void OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::setPayments(const OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBodyPayments &payments) {
    m_payments = payments;
    m_payments_isSet = true;
}

bool OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::is_payments_Set() const{
    return m_payments_isSet;
}

bool OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::is_payments_Valid() const{
    return m_payments_isValid;
}

bool OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_original_request_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_payments.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostPaymentsCrossBorderCreditTransfersPaymentStatusOKBody::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_original_request_info_isValid && true;
}

} // namespace OpenAPI
