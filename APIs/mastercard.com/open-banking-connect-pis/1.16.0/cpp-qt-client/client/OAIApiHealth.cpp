/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiHealth.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiHealth::OAIApiHealth(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiHealth::OAIApiHealth() {
    this->initializeModel();
}

OAIApiHealth::~OAIApiHealth() {}

void OAIApiHealth::initializeModel() {

    m_connectors_isSet = false;
    m_connectors_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_message_isSet = false;
    m_status_message_isValid = false;
}

void OAIApiHealth::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiHealth::fromJsonObject(QJsonObject json) {

    m_connectors_isValid = ::OpenAPI::fromJsonValue(m_connectors, json[QString("connectors")]);
    m_connectors_isSet = !json[QString("connectors")].isNull() && m_connectors_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_message_isValid = ::OpenAPI::fromJsonValue(m_status_message, json[QString("statusMessage")]);
    m_status_message_isSet = !json[QString("statusMessage")].isNull() && m_status_message_isValid;
}

QString OAIApiHealth::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiHealth::asJsonObject() const {
    QJsonObject obj;
    if (m_connectors.size() > 0) {
        obj.insert(QString("connectors"), ::OpenAPI::toJsonValue(m_connectors));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_message_isSet) {
        obj.insert(QString("statusMessage"), ::OpenAPI::toJsonValue(m_status_message));
    }
    return obj;
}

QList<OAIApiHealth_connectors> OAIApiHealth::getConnectors() const {
    return m_connectors;
}
void OAIApiHealth::setConnectors(const QList<OAIApiHealth_connectors> &connectors) {
    m_connectors = connectors;
    m_connectors_isSet = true;
}

bool OAIApiHealth::is_connectors_Set() const{
    return m_connectors_isSet;
}

bool OAIApiHealth::is_connectors_Valid() const{
    return m_connectors_isValid;
}

QString OAIApiHealth::getStatus() const {
    return m_status;
}
void OAIApiHealth::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIApiHealth::is_status_Set() const{
    return m_status_isSet;
}

bool OAIApiHealth::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIApiHealth::getStatusMessage() const {
    return m_status_message;
}
void OAIApiHealth::setStatusMessage(const QString &status_message) {
    m_status_message = status_message;
    m_status_message_isSet = true;
}

bool OAIApiHealth::is_status_message_Set() const{
    return m_status_message_isSet;
}

bool OAIApiHealth::is_status_message_Valid() const{
    return m_status_message_isValid;
}

bool OAIApiHealth::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_connectors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiHealth::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_status_isValid && true;
}

} // namespace OpenAPI
