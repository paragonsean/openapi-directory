/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ErrorErrorsError model module.
 * @module model/ErrorErrorsError
 * @version 1.16.0
 */
class ErrorErrorsError {
    /**
     * Constructs a new <code>ErrorErrorsError</code>.
     * @alias module:model/ErrorErrorsError
     */
    constructor() { 
        
        ErrorErrorsError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ErrorErrorsError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErrorErrorsError} obj Optional instance to populate.
     * @return {module:model/ErrorErrorsError} The populated <code>ErrorErrorsError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErrorErrorsError();

            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Details')) {
                obj['Details'] = ApiClient.convertToType(data['Details'], 'String');
            }
            if (data.hasOwnProperty('ReasonCode')) {
                obj['ReasonCode'] = ApiClient.convertToType(data['ReasonCode'], 'String');
            }
            if (data.hasOwnProperty('Recoverable')) {
                obj['Recoverable'] = ApiClient.convertToType(data['Recoverable'], 'Boolean');
            }
            if (data.hasOwnProperty('Source')) {
                obj['Source'] = ApiClient.convertToType(data['Source'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErrorErrorsError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErrorErrorsError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Details'] && !(typeof data['Details'] === 'string' || data['Details'] instanceof String)) {
            throw new Error("Expected the field `Details` to be a primitive type in the JSON string but got " + data['Details']);
        }
        // ensure the json data is a string
        if (data['ReasonCode'] && !(typeof data['ReasonCode'] === 'string' || data['ReasonCode'] instanceof String)) {
            throw new Error("Expected the field `ReasonCode` to be a primitive type in the JSON string but got " + data['ReasonCode']);
        }
        // ensure the json data is a string
        if (data['Source'] && !(typeof data['Source'] === 'string' || data['Source'] instanceof String)) {
            throw new Error("Expected the field `Source` to be a primitive type in the JSON string but got " + data['Source']);
        }

        return true;
    }


}



/**
 * @member {String} Description
 */
ErrorErrorsError.prototype['Description'] = undefined;

/**
 * @member {String} Details
 */
ErrorErrorsError.prototype['Details'] = undefined;

/**
 * @member {String} ReasonCode
 */
ErrorErrorsError.prototype['ReasonCode'] = undefined;

/**
 * @member {Boolean} Recoverable
 */
ErrorErrorsError.prototype['Recoverable'] = undefined;

/**
 * @member {String} Source
 */
ErrorErrorsError.prototype['Source'] = undefined;






export default ErrorErrorsError;

