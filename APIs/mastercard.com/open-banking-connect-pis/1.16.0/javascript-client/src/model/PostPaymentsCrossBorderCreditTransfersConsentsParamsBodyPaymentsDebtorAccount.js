/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount model module.
 * @module model/PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount
 * @version 1.16.0
 */
class PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount {
    /**
     * Constructs a new <code>PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount</code>.
     * @alias module:model/PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount
     * @param identification {String} Account identification
     * @param schemeName {module:model/PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount.SchemeNameEnum} Scheme for the account identification
     */
    constructor(identification, schemeName) { 
        
        PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount.initialize(this, identification, schemeName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, identification, schemeName) { 
        obj['identification'] = identification;
        obj['schemeName'] = schemeName;
    }

    /**
     * Constructs a <code>PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount} obj Optional instance to populate.
     * @return {module:model/PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount} The populated <code>PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount();

            if (data.hasOwnProperty('identification')) {
                obj['identification'] = ApiClient.convertToType(data['identification'], 'String');
            }
            if (data.hasOwnProperty('schemeName')) {
                obj['schemeName'] = ApiClient.convertToType(data['schemeName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['identification'] && !(typeof data['identification'] === 'string' || data['identification'] instanceof String)) {
            throw new Error("Expected the field `identification` to be a primitive type in the JSON string but got " + data['identification']);
        }
        // ensure the json data is a string
        if (data['schemeName'] && !(typeof data['schemeName'] === 'string' || data['schemeName'] instanceof String)) {
            throw new Error("Expected the field `schemeName` to be a primitive type in the JSON string but got " + data['schemeName']);
        }

        return true;
    }


}

PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount.RequiredProperties = ["identification", "schemeName"];

/**
 * Account identification
 * @member {String} identification
 */
PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount.prototype['identification'] = undefined;

/**
 * Scheme for the account identification
 * @member {module:model/PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount.SchemeNameEnum} schemeName
 */
PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount.prototype['schemeName'] = undefined;





/**
 * Allowed values for the <code>schemeName</code> property.
 * @enum {String}
 * @readonly
 */
PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount['SchemeNameEnum'] = {

    /**
     * value: "IBAN"
     * @const
     */
    "IBAN": "IBAN",

    /**
     * value: "SortCodeAccountNumber"
     * @const
     */
    "SortCodeAccountNumber": "SortCodeAccountNumber"
};



export default PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPaymentsDebtorAccount;

