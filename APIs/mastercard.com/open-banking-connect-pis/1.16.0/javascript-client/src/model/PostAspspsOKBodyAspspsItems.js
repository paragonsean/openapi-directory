/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LogoObject from './LogoObject';

/**
 * The PostAspspsOKBodyAspspsItems model module.
 * @module model/PostAspspsOKBodyAspspsItems
 * @version 1.16.0
 */
class PostAspspsOKBodyAspspsItems {
    /**
     * Constructs a new <code>PostAspspsOKBodyAspspsItems</code>.
     * @alias module:model/PostAspspsOKBodyAspspsItems
     */
    constructor() { 
        
        PostAspspsOKBodyAspspsItems.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostAspspsOKBodyAspspsItems</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostAspspsOKBodyAspspsItems} obj Optional instance to populate.
     * @return {module:model/PostAspspsOKBodyAspspsItems} The populated <code>PostAspspsOKBodyAspspsItems</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostAspspsOKBodyAspspsItems();

            if (data.hasOwnProperty('aspspServices')) {
                obj['aspspServices'] = ApiClient.convertToType(data['aspspServices'], ['String']);
            }
            if (data.hasOwnProperty('capabilities')) {
                obj['capabilities'] = ApiClient.convertToType(data['capabilities'], {'String': 'Boolean'});
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = LogoObject.constructFromObject(data['logo']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('profile')) {
                obj['profile'] = ApiClient.convertToType(data['profile'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostAspspsOKBodyAspspsItems</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostAspspsOKBodyAspspsItems</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['aspspServices'])) {
            throw new Error("Expected the field `aspspServices` to be an array in the JSON data but got " + data['aspspServices']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `logo`
        if (data['logo']) { // data not null
          LogoObject.validateJSON(data['logo']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['profile'] && !(typeof data['profile'] === 'string' || data['profile'] instanceof String)) {
            throw new Error("Expected the field `profile` to be a primitive type in the JSON string but got " + data['profile']);
        }

        return true;
    }


}



/**
 * Provided services, AIS - account information, PIS - payment initiation
 * @member {Array.<module:model/PostAspspsOKBodyAspspsItems.AspspServicesEnum>} aspspServices
 */
PostAspspsOKBodyAspspsItems.prototype['aspspServices'] = undefined;

/**
 * Capabilities related to api profile assigned to ASPSP
 * @member {Object.<String, Boolean>} capabilities
 */
PostAspspsOKBodyAspspsItems.prototype['capabilities'] = undefined;

/**
 * Country code
 * @member {String} country
 */
PostAspspsOKBodyAspspsItems.prototype['country'] = undefined;

/**
 * Identification of the ASPSP
 * @member {String} id
 */
PostAspspsOKBodyAspspsItems.prototype['id'] = undefined;

/**
 * @member {module:model/LogoObject} logo
 */
PostAspspsOKBodyAspspsItems.prototype['logo'] = undefined;

/**
 * Name of the ASPSP
 * @member {String} name
 */
PostAspspsOKBodyAspspsItems.prototype['name'] = undefined;

/**
 * ASPSP profile
 * @member {String} profile
 */
PostAspspsOKBodyAspspsItems.prototype['profile'] = undefined;





/**
 * Allowed values for the <code>aspspServices</code> property.
 * @enum {String}
 * @readonly
 */
PostAspspsOKBodyAspspsItems['AspspServicesEnum'] = {

    /**
     * value: "AIS"
     * @const
     */
    "AIS": "AIS",

    /**
     * value: "PIS"
     * @const
     */
    "PIS": "PIS",

    /**
     * value: "COF"
     * @const
     */
    "COF": "COF"
};



export default PostAspspsOKBodyAspspsItems;

