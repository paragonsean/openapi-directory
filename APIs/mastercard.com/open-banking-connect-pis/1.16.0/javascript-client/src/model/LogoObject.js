/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LogoFileType from './LogoFileType';

/**
 * The LogoObject model module.
 * @module model/LogoObject
 * @version 1.16.0
 */
class LogoObject {
    /**
     * Constructs a new <code>LogoObject</code>.
     * Logo metadata and image content
     * @alias module:model/LogoObject
     */
    constructor() { 
        
        LogoObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LogoObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LogoObject} obj Optional instance to populate.
     * @return {module:model/LogoObject} The populated <code>LogoObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LogoObject();

            if (data.hasOwnProperty('binaryContent')) {
                obj['binaryContent'] = ApiClient.convertToType(data['binaryContent'], 'String');
            }
            if (data.hasOwnProperty('fileType')) {
                obj['fileType'] = LogoFileType.constructFromObject(data['fileType']);
            }
            if (data.hasOwnProperty('logoUrl')) {
                obj['logoUrl'] = ApiClient.convertToType(data['logoUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LogoObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LogoObject</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['binaryContent'] && !(typeof data['binaryContent'] === 'string' || data['binaryContent'] instanceof String)) {
            throw new Error("Expected the field `binaryContent` to be a primitive type in the JSON string but got " + data['binaryContent']);
        }
        // ensure the json data is a string
        if (data['logoUrl'] && !(typeof data['logoUrl'] === 'string' || data['logoUrl'] instanceof String)) {
            throw new Error("Expected the field `logoUrl` to be a primitive type in the JSON string but got " + data['logoUrl']);
        }

        return true;
    }


}



/**
 * This field is deprecated, use logoUrl instead
 * @member {String} binaryContent
 */
LogoObject.prototype['binaryContent'] = undefined;

/**
 * @member {module:model/LogoFileType} fileType
 */
LogoObject.prototype['fileType'] = undefined;

/**
 * URL to a logo file
 * @member {String} logoUrl
 */
LogoObject.prototype['logoUrl'] = undefined;






export default LogoObject;

