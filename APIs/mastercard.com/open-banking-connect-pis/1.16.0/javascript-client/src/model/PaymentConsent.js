/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SignatureValidationStatus from './SignatureValidationStatus';

/**
 * The PaymentConsent model module.
 * @module model/PaymentConsent
 * @version 1.16.0
 */
class PaymentConsent {
    /**
     * Constructs a new <code>PaymentConsent</code>.
     * Return the consent data exchanged for PSU authorization
     * @alias module:model/PaymentConsent
     * @param consentId {String} Consent Id
     * @param consentRequestId {String} Consent Request Id, the same as received from /consent operations.
     */
    constructor(consentId, consentRequestId) { 
        
        PaymentConsent.initialize(this, consentId, consentRequestId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, consentId, consentRequestId) { 
        obj['consentId'] = consentId;
        obj['consentRequestId'] = consentRequestId;
    }

    /**
     * Constructs a <code>PaymentConsent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentConsent} obj Optional instance to populate.
     * @return {module:model/PaymentConsent} The populated <code>PaymentConsent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentConsent();

            if (data.hasOwnProperty('consentId')) {
                obj['consentId'] = ApiClient.convertToType(data['consentId'], 'String');
            }
            if (data.hasOwnProperty('consentRequestId')) {
                obj['consentRequestId'] = ApiClient.convertToType(data['consentRequestId'], 'String');
            }
            if (data.hasOwnProperty('signatureStatus')) {
                obj['signatureStatus'] = SignatureValidationStatus.constructFromObject(data['signatureStatus']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentConsent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentConsent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaymentConsent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['consentId'] && !(typeof data['consentId'] === 'string' || data['consentId'] instanceof String)) {
            throw new Error("Expected the field `consentId` to be a primitive type in the JSON string but got " + data['consentId']);
        }
        // ensure the json data is a string
        if (data['consentRequestId'] && !(typeof data['consentRequestId'] === 'string' || data['consentRequestId'] instanceof String)) {
            throw new Error("Expected the field `consentRequestId` to be a primitive type in the JSON string but got " + data['consentRequestId']);
        }

        return true;
    }


}

PaymentConsent.RequiredProperties = ["consentId", "consentRequestId"];

/**
 * Consent Id
 * @member {String} consentId
 */
PaymentConsent.prototype['consentId'] = undefined;

/**
 * Consent Request Id, the same as received from /consent operations.
 * @member {String} consentRequestId
 */
PaymentConsent.prototype['consentRequestId'] = undefined;

/**
 * @member {module:model/SignatureValidationStatus} signatureStatus
 */
PaymentConsent.prototype['signatureStatus'] = undefined;






export default PaymentConsent;

