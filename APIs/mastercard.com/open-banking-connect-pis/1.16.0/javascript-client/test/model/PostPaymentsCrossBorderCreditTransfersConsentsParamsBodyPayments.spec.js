/**
 * Open Banking - Payments initiation service
 * Open Banking - Payments initiation service
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenBankingPaymentsInitiationService);
  }
}(this, function(expect, OpenBankingPaymentsInitiationService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments', function() {
    it('should create an instance of PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments', function() {
      // uncomment below and update the code to test PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be.a(OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments);
    });

    it('should have the property creditorAccount (base name: "creditorAccount")', function() {
      // uncomment below and update the code to test the property creditorAccount
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property creditorAddress (base name: "creditorAddress")', function() {
      // uncomment below and update the code to test the property creditorAddress
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property creditorAgent (base name: "creditorAgent")', function() {
      // uncomment below and update the code to test the property creditorAgent
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property creditorName (base name: "creditorName")', function() {
      // uncomment below and update the code to test the property creditorName
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property debtorAccount (base name: "debtorAccount")', function() {
      // uncomment below and update the code to test the property debtorAccount
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property debtorAddress (base name: "debtorAddress")', function() {
      // uncomment below and update the code to test the property debtorAddress
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property debtorName (base name: "debtorName")', function() {
      // uncomment below and update the code to test the property debtorName
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property endToEndIdentification (base name: "endToEndIdentification")', function() {
      // uncomment below and update the code to test the property endToEndIdentification
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property instructedAmount (base name: "instructedAmount")', function() {
      // uncomment below and update the code to test the property instructedAmount
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property instructionIdentification (base name: "instructionIdentification")', function() {
      // uncomment below and update the code to test the property instructionIdentification
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property instructionPriority (base name: "instructionPriority")', function() {
      // uncomment below and update the code to test the property instructionPriority
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property localInstrument (base name: "localInstrument")', function() {
      // uncomment below and update the code to test the property localInstrument
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property remittanceInformationReference (base name: "remittanceInformationReference")', function() {
      // uncomment below and update the code to test the property remittanceInformationReference
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property remittanceInformationUnstructured (base name: "remittanceInformationUnstructured")', function() {
      // uncomment below and update the code to test the property remittanceInformationUnstructured
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property requestedExecutionDate (base name: "requestedExecutionDate")', function() {
      // uncomment below and update the code to test the property requestedExecutionDate
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

    it('should have the property transferCharges (base name: "transferCharges")', function() {
      // uncomment below and update the code to test the property transferCharges
      //var instance = new OpenBankingPaymentsInitiationService.PostPaymentsCrossBorderCreditTransfersConsentsParamsBodyPayments();
      //expect(instance).to.be();
    });

  });

}));
