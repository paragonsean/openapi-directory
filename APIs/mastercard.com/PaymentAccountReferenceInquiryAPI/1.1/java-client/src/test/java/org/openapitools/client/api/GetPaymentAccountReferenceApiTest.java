/*
 * Payment Account Reference Inquiry API
 * The Payment Account Reference Inquiry API is the unified Mastercard interface for allowing Mastercard Customers involved in payment card acceptance -- whether Merchants, Acquirers, or Digital Activity Customers (DACs) -- to enquire the PAR Vault for getting the PAR, when providing an Account Primary Account Number (PAN) linked to a digitized PAN.
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetPaymentAccountReferenceRequestSchema;
import org.openapitools.client.model.GetPaymentAccountReferenceResponseSchema;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GetPaymentAccountReferenceApi
 */
@Disabled
public class GetPaymentAccountReferenceApiTest {

    private final GetPaymentAccountReferenceApi api = new GetPaymentAccountReferenceApi();

    /**
     * Submit an encrypted PAN to obtain the PAR linked to the account.
     *
     * The API performs a PAR query into the PAR Vault with the supplied PAN. When a PAR is returned from the PAR vault the API will encrypt it using the wrapped encryption method with the  Mastercard Customer?s Encryption Public Key and include it in the API response. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void parPaymentaccountreference10GetPaymentAccountReferencePostTest() throws ApiException {
        GetPaymentAccountReferenceRequestSchema getPaymentAccountReferenceRequestSchema = null;
        GetPaymentAccountReferenceResponseSchema response = api.parPaymentaccountreference10GetPaymentAccountReferencePost(getPaymentAccountReferenceRequestSchema);
        // TODO: test validations
    }

}
