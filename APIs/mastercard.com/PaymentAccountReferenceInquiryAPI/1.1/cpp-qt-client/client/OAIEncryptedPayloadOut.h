/**
 * Payment Account Reference Inquiry API
 * The Payment Account Reference Inquiry API is the unified Mastercard interface for allowing Mastercard Customers involved in payment card acceptance -- whether Merchants, Acquirers, or Digital Activity Customers (DACs) -- to enquire the PAR Vault for getting the PAR, when providing an Account Primary Account Number (PAN) linked to a digitized PAN.
 *
 * The version of the OpenAPI document: 1.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEncryptedPayloadOut.h
 *
 * 
 */

#ifndef OAIEncryptedPayloadOut_H
#define OAIEncryptedPayloadOut_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEncryptedPayloadOut : public OAIObject {
public:
    OAIEncryptedPayloadOut();
    OAIEncryptedPayloadOut(QString json);
    ~OAIEncryptedPayloadOut() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEncryptedData() const;
    void setEncryptedData(const QString &encrypted_data);
    bool is_encrypted_data_Set() const;
    bool is_encrypted_data_Valid() const;

    QString getEncryptedKey() const;
    void setEncryptedKey(const QString &encrypted_key);
    bool is_encrypted_key_Set() const;
    bool is_encrypted_key_Valid() const;

    QString getIv() const;
    void setIv(const QString &iv);
    bool is_iv_Set() const;
    bool is_iv_Valid() const;

    QString getOaepHashingAlgorithm() const;
    void setOaepHashingAlgorithm(const QString &oaep_hashing_algorithm);
    bool is_oaep_hashing_algorithm_Set() const;
    bool is_oaep_hashing_algorithm_Valid() const;

    QString getPublicKeyFingerprint() const;
    void setPublicKeyFingerprint(const QString &public_key_fingerprint);
    bool is_public_key_fingerprint_Set() const;
    bool is_public_key_fingerprint_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_encrypted_data;
    bool m_encrypted_data_isSet;
    bool m_encrypted_data_isValid;

    QString m_encrypted_key;
    bool m_encrypted_key_isSet;
    bool m_encrypted_key_isValid;

    QString m_iv;
    bool m_iv_isSet;
    bool m_iv_isValid;

    QString m_oaep_hashing_algorithm;
    bool m_oaep_hashing_algorithm_isSet;
    bool m_oaep_hashing_algorithm_isValid;

    QString m_public_key_fingerprint;
    bool m_public_key_fingerprint_isSet;
    bool m_public_key_fingerprint_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEncryptedPayloadOut)

#endif // OAIEncryptedPayloadOut_H
