/**
 * Payment Account Reference Inquiry API
 * The Payment Account Reference Inquiry API is the unified Mastercard interface for allowing Mastercard Customers involved in payment card acceptance -- whether Merchants, Acquirers, or Digital Activity Customers (DACs) -- to enquire the PAR Vault for getting the PAR, when providing an Account Primary Account Number (PAN) linked to a digitized PAN.
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EncryptedPayloadOut model module.
 * @module model/EncryptedPayloadOut
 * @version 1.1
 */
class EncryptedPayloadOut {
    /**
     * Constructs a new <code>EncryptedPayloadOut</code>.
     * @alias module:model/EncryptedPayloadOut
     * @param encryptedData {String} Contains an encrypted JSON object. Encrypted by the ephemeral AES key using CBC mode (IV as provided in 'iv', or zero if none provided) and PKCS#7 padding. The JSON object being encrypted will be defined in the context of the API call. Max length - 256k.  Type - String Hex-encoded Data (case-insensitive). Required - Yes.
     * @param encryptedKey {String} One-time use AES key encrypted by the MasterCard public key (as identified by 'publicKeyFingerprint') using the OAEP or RSA Encryption Standard PKCS 1 v1.5 (depending on the value of 'oaepHashingAlgorithm'). Requirement is for a 128-bit key (with 256-bit key supported as an option). Data Type - String. Hex-encoded data (case-insensitive). Max Length - 512. Required - Yes.
     * @param publicKeyFingerprint {String} The fingerprint of the public key used to encrypt the ephemeral AES key. <br><br> __Max length:__ 64  __Type:__ String Hex-encoded Data (case-insensitive)<br><br> 
     */
    constructor(encryptedData, encryptedKey, publicKeyFingerprint) { 
        
        EncryptedPayloadOut.initialize(this, encryptedData, encryptedKey, publicKeyFingerprint);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, encryptedData, encryptedKey, publicKeyFingerprint) { 
        obj['encryptedData'] = encryptedData;
        obj['encryptedKey'] = encryptedKey;
        obj['publicKeyFingerprint'] = publicKeyFingerprint;
    }

    /**
     * Constructs a <code>EncryptedPayloadOut</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EncryptedPayloadOut} obj Optional instance to populate.
     * @return {module:model/EncryptedPayloadOut} The populated <code>EncryptedPayloadOut</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EncryptedPayloadOut();

            if (data.hasOwnProperty('encryptedData')) {
                obj['encryptedData'] = ApiClient.convertToType(data['encryptedData'], 'String');
            }
            if (data.hasOwnProperty('encryptedKey')) {
                obj['encryptedKey'] = ApiClient.convertToType(data['encryptedKey'], 'String');
            }
            if (data.hasOwnProperty('iv')) {
                obj['iv'] = ApiClient.convertToType(data['iv'], 'String');
            }
            if (data.hasOwnProperty('oaepHashingAlgorithm')) {
                obj['oaepHashingAlgorithm'] = ApiClient.convertToType(data['oaepHashingAlgorithm'], 'String');
            }
            if (data.hasOwnProperty('publicKeyFingerprint')) {
                obj['publicKeyFingerprint'] = ApiClient.convertToType(data['publicKeyFingerprint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EncryptedPayloadOut</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EncryptedPayloadOut</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EncryptedPayloadOut.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['encryptedData'] && !(typeof data['encryptedData'] === 'string' || data['encryptedData'] instanceof String)) {
            throw new Error("Expected the field `encryptedData` to be a primitive type in the JSON string but got " + data['encryptedData']);
        }
        // ensure the json data is a string
        if (data['encryptedKey'] && !(typeof data['encryptedKey'] === 'string' || data['encryptedKey'] instanceof String)) {
            throw new Error("Expected the field `encryptedKey` to be a primitive type in the JSON string but got " + data['encryptedKey']);
        }
        // ensure the json data is a string
        if (data['iv'] && !(typeof data['iv'] === 'string' || data['iv'] instanceof String)) {
            throw new Error("Expected the field `iv` to be a primitive type in the JSON string but got " + data['iv']);
        }
        // ensure the json data is a string
        if (data['oaepHashingAlgorithm'] && !(typeof data['oaepHashingAlgorithm'] === 'string' || data['oaepHashingAlgorithm'] instanceof String)) {
            throw new Error("Expected the field `oaepHashingAlgorithm` to be a primitive type in the JSON string but got " + data['oaepHashingAlgorithm']);
        }
        // ensure the json data is a string
        if (data['publicKeyFingerprint'] && !(typeof data['publicKeyFingerprint'] === 'string' || data['publicKeyFingerprint'] instanceof String)) {
            throw new Error("Expected the field `publicKeyFingerprint` to be a primitive type in the JSON string but got " + data['publicKeyFingerprint']);
        }

        return true;
    }


}

EncryptedPayloadOut.RequiredProperties = ["encryptedData", "encryptedKey", "publicKeyFingerprint"];

/**
 * Contains an encrypted JSON object. Encrypted by the ephemeral AES key using CBC mode (IV as provided in 'iv', or zero if none provided) and PKCS#7 padding. The JSON object being encrypted will be defined in the context of the API call. Max length - 256k.  Type - String Hex-encoded Data (case-insensitive). Required - Yes.
 * @member {String} encryptedData
 */
EncryptedPayloadOut.prototype['encryptedData'] = undefined;

/**
 * One-time use AES key encrypted by the MasterCard public key (as identified by 'publicKeyFingerprint') using the OAEP or RSA Encryption Standard PKCS 1 v1.5 (depending on the value of 'oaepHashingAlgorithm'). Requirement is for a 128-bit key (with 256-bit key supported as an option). Data Type - String. Hex-encoded data (case-insensitive). Max Length - 512. Required - Yes.
 * @member {String} encryptedKey
 */
EncryptedPayloadOut.prototype['encryptedKey'] = undefined;

/**
 * The initialization vector used when encrypting data using the one-time use AES key. Must be exactly 16 bytes (32 character hex string) to match the block size. If not present, an IV of zero is assumed. Length - 32 exactly. Type - String Hex-encoded Data (case-insensitive). Optional.
 * @member {String} iv
 */
EncryptedPayloadOut.prototype['iv'] = undefined;

/**
 * Hashing algorithm used with the OAEP scheme. If omitted, then the RSA Encryption Standard PKCS 1 v1.5 will be used. You must use one of the following algorithms; SHA256 - Use the SHA-256 algorithm | SHA512 - Use the SHA-512 algorithm.  Max length - 6. Type - String. Optional.
 * @member {String} oaepHashingAlgorithm
 */
EncryptedPayloadOut.prototype['oaepHashingAlgorithm'] = undefined;

/**
 * The fingerprint of the public key used to encrypt the ephemeral AES key. <br><br> __Max length:__ 64  __Type:__ String Hex-encoded Data (case-insensitive)<br><br> 
 * @member {String} publicKeyFingerprint
 */
EncryptedPayloadOut.prototype['publicKeyFingerprint'] = undefined;






export default EncryptedPayloadOut;

