/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Accountregistration167Wrapper from '../model/Accountregistration167Wrapper';
import Accountregistration168Wrapper from '../model/Accountregistration168Wrapper';
import Accountregistration169Wrapper from '../model/Accountregistration169Wrapper';
import Accountregistration170Wrapper from '../model/Accountregistration170Wrapper';
import Accountregistration171Wrapper from '../model/Accountregistration171Wrapper';
import Accountregistration172Wrapper from '../model/Accountregistration172Wrapper';

/**
* TransferNotificationRegistration service.
* @module api/TransferNotificationRegistrationApi
* @version V1
*/
export default class TransferNotificationRegistrationApi {

    /**
    * Constructs a new TransferNotificationRegistrationApi. 
    * @alias module:api/TransferNotificationRegistrationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createTransferNotificationRegistration operation.
     * @callback module:api/TransferNotificationRegistrationApi~createTransferNotificationRegistrationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Accountregistration168Wrapper} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This service allows Mastercard Merchant QR originating and receiving partners to register a PAN and service provider to receive notifications on an inbound Merchant Refund or Merchant Payment Transaction.
     * This service allows Mastercard Merchant QR originating and receiving partners to register a PAN and service provider to receive notifications on an inbound Merchant Refund or Merchant Payment Transaction.
     * @param {String} partnerId Path Param - Provider assigned partner id. Type: Alphanumeric Special Length: 40
     * @param {Object} opts Optional parameters
     * @param {module:model/Accountregistration167Wrapper} [accountregistration] Contains the details of the request message.
     * @param {module:api/TransferNotificationRegistrationApi~createTransferNotificationRegistrationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Accountregistration168Wrapper}
     */
    createTransferNotificationRegistration(partnerId, opts, callback) {
      opts = opts || {};
      let postBody = opts['accountregistration'];
      // verify the required parameter 'partnerId' is set
      if (partnerId === undefined || partnerId === null) {
        throw new Error("Missing the required parameter 'partnerId' when calling createTransferNotificationRegistration");
      }

      let pathParams = {
        'partnerId': partnerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Accountregistration168Wrapper;
      return this.apiClient.callApi(
        '/send/v1/partners/{partnerId}/notification-registries', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteTransferNotificationRegistration operation.
     * @callback module:api/TransferNotificationRegistrationApi~deleteTransferNotificationRegistrationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Accountregistration171Wrapper} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This service allows Mastercard Merchant QR originating and receiving partners to delete a registered PAN for notifications. 
     * This service allows Mastercard Merchant QR originating and receiving partners to delete a registered PAN for notifications. 
     * @param {String} partnerId Path Param - Provider assigned partner id. Type: Alphanumeric Special Length: 40
     * @param {String} accountRegRef Path Param - System generated unique account registration identifier. Type: Alphanumeric Special Length: 40
     * @param {module:api/TransferNotificationRegistrationApi~deleteTransferNotificationRegistrationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Accountregistration171Wrapper}
     */
    deleteTransferNotificationRegistration(partnerId, accountRegRef, callback) {
      let postBody = null;
      // verify the required parameter 'partnerId' is set
      if (partnerId === undefined || partnerId === null) {
        throw new Error("Missing the required parameter 'partnerId' when calling deleteTransferNotificationRegistration");
      }
      // verify the required parameter 'accountRegRef' is set
      if (accountRegRef === undefined || accountRegRef === null) {
        throw new Error("Missing the required parameter 'accountRegRef' when calling deleteTransferNotificationRegistration");
      }

      let pathParams = {
        'partnerId': partnerId,
        'account-reg-ref': accountRegRef
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Accountregistration171Wrapper;
      return this.apiClient.callApi(
        '/send/v1/partners/{partnerId}/notification-registries/{account-reg-ref}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the notificationRegistrationAPIReadBy operation.
     * @callback module:api/TransferNotificationRegistrationApi~notificationRegistrationAPIReadByCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Accountregistration172Wrapper} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This service allows Mastercard Merchant QR originating and receiving partners to retrieve the service provider's information for a registered PAN for notifications. 
     * This service allows Mastercard Merchant QR originating and receiving partners to retrieve the service provider's information for a registered PAN for notifications. 
     * @param {String} partnerId Path Param - Provider assigned partner id. Type: Alphanumeric Special Length: 40
     * @param {String} accountRegRef Path Param - System generated unique account registration identifier. Type: Alphanumberic Special Length: 40
     * @param {module:api/TransferNotificationRegistrationApi~notificationRegistrationAPIReadByCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Accountregistration172Wrapper}
     */
    notificationRegistrationAPIReadBy(partnerId, accountRegRef, callback) {
      let postBody = null;
      // verify the required parameter 'partnerId' is set
      if (partnerId === undefined || partnerId === null) {
        throw new Error("Missing the required parameter 'partnerId' when calling notificationRegistrationAPIReadBy");
      }
      // verify the required parameter 'accountRegRef' is set
      if (accountRegRef === undefined || accountRegRef === null) {
        throw new Error("Missing the required parameter 'accountRegRef' when calling notificationRegistrationAPIReadBy");
      }

      let pathParams = {
        'partnerId': partnerId,
        'account-reg-ref': accountRegRef
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Accountregistration172Wrapper;
      return this.apiClient.callApi(
        '/send/v1/partners/{partnerId}/notification-registries/{account-reg-ref}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the notificationRegistrationAPIUpdate operation.
     * @callback module:api/TransferNotificationRegistrationApi~notificationRegistrationAPIUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Accountregistration170Wrapper} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This service allows Mastercard Merchant QR originating and receiving partners to update the notitification service provider for a registered PAN.
     * This service allows Mastercard Merchant QR originating and receiving partners to update the notitification service provider for a registered PAN.
     * @param {String} partnerId Path Param - Provider assigned partner id. Type: Alphanumeric Special Length: 40
     * @param {String} accountRegRef Path Param - System generated unique account registration identifier. Type: Alphanumeric Special Length: 40
     * @param {Object} opts Optional parameters
     * @param {module:model/Accountregistration169Wrapper} [accountregistration] Contains the details of the request message.
     * @param {module:api/TransferNotificationRegistrationApi~notificationRegistrationAPIUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Accountregistration170Wrapper}
     */
    notificationRegistrationAPIUpdate(partnerId, accountRegRef, opts, callback) {
      opts = opts || {};
      let postBody = opts['accountregistration'];
      // verify the required parameter 'partnerId' is set
      if (partnerId === undefined || partnerId === null) {
        throw new Error("Missing the required parameter 'partnerId' when calling notificationRegistrationAPIUpdate");
      }
      // verify the required parameter 'accountRegRef' is set
      if (accountRegRef === undefined || accountRegRef === null) {
        throw new Error("Missing the required parameter 'accountRegRef' when calling notificationRegistrationAPIUpdate");
      }

      let pathParams = {
        'partnerId': partnerId,
        'account-reg-ref': accountRegRef
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Accountregistration170Wrapper;
      return this.apiClient.callApi(
        '/send/v1/partners/{partnerId}/notification-registries/{account-reg-ref}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
