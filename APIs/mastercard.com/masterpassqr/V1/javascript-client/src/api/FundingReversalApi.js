/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import FundingReversal144Wrapper from '../model/FundingReversal144Wrapper';
import Transfer145Wrapper from '../model/Transfer145Wrapper';

/**
* FundingReversal service.
* @module api/FundingReversalApi
* @version V1
*/
export default class FundingReversalApi {

    /**
    * Constructs a new FundingReversalApi. 
    * @alias module:api/FundingReversalApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createFundingReversal operation.
     * @callback module:api/FundingReversalApi~createFundingReversalCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Transfer145Wrapper} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Funding Reversals must be submitted within 30 minutes of the funding transfer request, and should only be submitted for the following conditions:  Funding Transaction must be reversed if payment transaction cannot complete successfully, i.e. the payment transaction is rejected or declined.  Upon a successful reversal of a funding transaction, the refund must be credited to the sending consumer’s Funding Account.
     * Funding Reversals must be submitted within 30 minutes of the funding transfer request, and should only be submitted for the following conditions:  Funding Transaction must be reversed if payment transaction cannot complete successfully, i.e. the payment transaction is rejected or declined.  Upon a successful reversal of a funding transaction, the refund must be credited to the sending consumer’s Funding Account.
     * @param {String} partnerId Path Param - Provider assigned partner id. Details - string, 32
     * @param {String} transferId Valid transfer id
     * @param {String} transactionId Valid transaction id
     * @param {Object} opts Optional parameters
     * @param {module:model/FundingReversal144Wrapper} [fundingReversal] Contains the details of the request message.
     * @param {module:api/FundingReversalApi~createFundingReversalCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Transfer145Wrapper}
     */
    createFundingReversal(partnerId, transferId, transactionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['fundingReversal'];
      // verify the required parameter 'partnerId' is set
      if (partnerId === undefined || partnerId === null) {
        throw new Error("Missing the required parameter 'partnerId' when calling createFundingReversal");
      }
      // verify the required parameter 'transferId' is set
      if (transferId === undefined || transferId === null) {
        throw new Error("Missing the required parameter 'transferId' when calling createFundingReversal");
      }
      // verify the required parameter 'transactionId' is set
      if (transactionId === undefined || transactionId === null) {
        throw new Error("Missing the required parameter 'transactionId' when calling createFundingReversal");
      }

      let pathParams = {
        'partner-id': partnerId,
        'transfer-id': transferId,
        'transaction-id': transactionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/xml'];
      let accepts = ['application/xml'];
      let returnType = Transfer145Wrapper;
      return this.apiClient.callApi(
        '/send/v1/partners/{partner-id}/transfers/{transfer-id}/transactions/{transaction-id}/reversals', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
