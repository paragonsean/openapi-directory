/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Recipient149 from './Recipient149';
import ReconciliationData157 from './ReconciliationData157';
import Sender146 from './Sender146';
import TransactionHistory153 from './TransactionHistory153';
import TransferAmount152 from './TransferAmount152';

/**
 * The Transfer145 model module.
 * @module model/Transfer145
 * @version V1
 */
class Transfer145 {
    /**
     * Constructs a new <code>Transfer145</code>.
     * Response details
     * @alias module:model/Transfer145
     */
    constructor() { 
        
        Transfer145.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Transfer145</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Transfer145} obj Optional instance to populate.
     * @return {module:model/Transfer145} The populated <code>Transfer145</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Transfer145();

            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'String');
            }
            if (data.hasOwnProperty('device_id')) {
                obj['device_id'] = ApiClient.convertToType(data['device_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('original_status')) {
                obj['original_status'] = ApiClient.convertToType(data['original_status'], 'String');
            }
            if (data.hasOwnProperty('payment_type')) {
                obj['payment_type'] = ApiClient.convertToType(data['payment_type'], 'String');
            }
            if (data.hasOwnProperty('recipient')) {
                obj['recipient'] = Recipient149.constructFromObject(data['recipient']);
            }
            if (data.hasOwnProperty('recipient_account_uri')) {
                obj['recipient_account_uri'] = ApiClient.convertToType(data['recipient_account_uri'], 'String');
            }
            if (data.hasOwnProperty('reconciliation_data')) {
                obj['reconciliation_data'] = ReconciliationData157.constructFromObject(data['reconciliation_data']);
            }
            if (data.hasOwnProperty('resource_type')) {
                obj['resource_type'] = ApiClient.convertToType(data['resource_type'], 'String');
            }
            if (data.hasOwnProperty('sanction_screening_override')) {
                obj['sanction_screening_override'] = ApiClient.convertToType(data['sanction_screening_override'], 'Boolean');
            }
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = Sender146.constructFromObject(data['sender']);
            }
            if (data.hasOwnProperty('sender_account_uri')) {
                obj['sender_account_uri'] = ApiClient.convertToType(data['sender_account_uri'], 'String');
            }
            if (data.hasOwnProperty('statement_descriptor')) {
                obj['statement_descriptor'] = ApiClient.convertToType(data['statement_descriptor'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('status_timestamp')) {
                obj['status_timestamp'] = ApiClient.convertToType(data['status_timestamp'], 'String');
            }
            if (data.hasOwnProperty('transaction_history')) {
                obj['transaction_history'] = TransactionHistory153.constructFromObject(data['transaction_history']);
            }
            if (data.hasOwnProperty('transfer_amount')) {
                obj['transfer_amount'] = TransferAmount152.constructFromObject(data['transfer_amount']);
            }
            if (data.hasOwnProperty('transfer_reference')) {
                obj['transfer_reference'] = ApiClient.convertToType(data['transfer_reference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Transfer145</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Transfer145</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['channel'] && !(typeof data['channel'] === 'string' || data['channel'] instanceof String)) {
            throw new Error("Expected the field `channel` to be a primitive type in the JSON string but got " + data['channel']);
        }
        // ensure the json data is a string
        if (data['created'] && !(typeof data['created'] === 'string' || data['created'] instanceof String)) {
            throw new Error("Expected the field `created` to be a primitive type in the JSON string but got " + data['created']);
        }
        // ensure the json data is a string
        if (data['device_id'] && !(typeof data['device_id'] === 'string' || data['device_id'] instanceof String)) {
            throw new Error("Expected the field `device_id` to be a primitive type in the JSON string but got " + data['device_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['original_status'] && !(typeof data['original_status'] === 'string' || data['original_status'] instanceof String)) {
            throw new Error("Expected the field `original_status` to be a primitive type in the JSON string but got " + data['original_status']);
        }
        // ensure the json data is a string
        if (data['payment_type'] && !(typeof data['payment_type'] === 'string' || data['payment_type'] instanceof String)) {
            throw new Error("Expected the field `payment_type` to be a primitive type in the JSON string but got " + data['payment_type']);
        }
        // validate the optional field `recipient`
        if (data['recipient']) { // data not null
          Recipient149.validateJSON(data['recipient']);
        }
        // ensure the json data is a string
        if (data['recipient_account_uri'] && !(typeof data['recipient_account_uri'] === 'string' || data['recipient_account_uri'] instanceof String)) {
            throw new Error("Expected the field `recipient_account_uri` to be a primitive type in the JSON string but got " + data['recipient_account_uri']);
        }
        // validate the optional field `reconciliation_data`
        if (data['reconciliation_data']) { // data not null
          ReconciliationData157.validateJSON(data['reconciliation_data']);
        }
        // ensure the json data is a string
        if (data['resource_type'] && !(typeof data['resource_type'] === 'string' || data['resource_type'] instanceof String)) {
            throw new Error("Expected the field `resource_type` to be a primitive type in the JSON string but got " + data['resource_type']);
        }
        // validate the optional field `sender`
        if (data['sender']) { // data not null
          Sender146.validateJSON(data['sender']);
        }
        // ensure the json data is a string
        if (data['sender_account_uri'] && !(typeof data['sender_account_uri'] === 'string' || data['sender_account_uri'] instanceof String)) {
            throw new Error("Expected the field `sender_account_uri` to be a primitive type in the JSON string but got " + data['sender_account_uri']);
        }
        // ensure the json data is a string
        if (data['statement_descriptor'] && !(typeof data['statement_descriptor'] === 'string' || data['statement_descriptor'] instanceof String)) {
            throw new Error("Expected the field `statement_descriptor` to be a primitive type in the JSON string but got " + data['statement_descriptor']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['status_timestamp'] && !(typeof data['status_timestamp'] === 'string' || data['status_timestamp'] instanceof String)) {
            throw new Error("Expected the field `status_timestamp` to be a primitive type in the JSON string but got " + data['status_timestamp']);
        }
        // validate the optional field `transaction_history`
        if (data['transaction_history']) { // data not null
          TransactionHistory153.validateJSON(data['transaction_history']);
        }
        // validate the optional field `transfer_amount`
        if (data['transfer_amount']) { // data not null
          TransferAmount152.validateJSON(data['transfer_amount']);
        }
        // ensure the json data is a string
        if (data['transfer_reference'] && !(typeof data['transfer_reference'] === 'string' || data['transfer_reference'] instanceof String)) {
            throw new Error("Expected the field `transfer_reference` to be a primitive type in the JSON string but got " + data['transfer_reference']);
        }

        return true;
    }


}



/**
 * Initiation channel of the transfer request. Values: WEB, MOBILE, BANK, KIOSK.
 * @member {String} channel
 */
Transfer145.prototype['channel'] = undefined;

/**
 * Date and time the original transfer was created as an ISO 8601 Timestamp. Details- YYYY-MM-DDTHH:MM:SSZ Valid Values- Refer 'Date And Time Formats'
 * @member {String} created
 */
Transfer145.prototype['created'] = undefined;

/**
 * The serial number of a device that initiated the transfer.
 * @member {String} device_id
 */
Transfer145.prototype['device_id'] = undefined;

/**
 * System generated unique transfer identifier.
 * @member {String} id
 */
Transfer145.prototype['id'] = undefined;

/**
 * Location where the transaction is initiated.
 * @member {String} location
 */
Transfer145.prototype['location'] = undefined;

/**
 * Original status of the transfer. One of APPROVED, DECLINED, ERROR, PENDING, UNKNOWN.
 * @member {String} original_status
 */
Transfer145.prototype['original_status'] = undefined;

/**
 * Payment type used for transfer. Valid values - P2M: Person to Merchant.
 * @member {String} payment_type
 */
Transfer145.prototype['payment_type'] = undefined;

/**
 * @member {module:model/Recipient149} recipient
 */
Transfer145.prototype['recipient'] = undefined;

/**
 * URI describing the recipient account. It will include masked account information (e.g. \"************1234\" for a card account) but will not include security codes (e.g. CVC or expiration date for a card account).
 * @member {String} recipient_account_uri
 */
Transfer145.prototype['recipient_account_uri'] = undefined;

/**
 * @member {module:model/ReconciliationData157} reconciliation_data
 */
Transfer145.prototype['reconciliation_data'] = undefined;

/**
 * Type of resource
 * @member {String} resource_type
 */
Transfer145.prototype['resource_type'] = undefined;

/**
 * Sanction Screening validation override if enabled for partner.
 * @member {Boolean} sanction_screening_override
 */
Transfer145.prototype['sanction_screening_override'] = undefined;

/**
 * @member {module:model/Sender146} sender
 */
Transfer145.prototype['sender'] = undefined;

/**
 * URI describing the sending account. It will include masked account information (e.g. \"************1234\" for a card account) but will not include security codes (e.g. CVC or expiration date for a card account).
 * @member {String} sender_account_uri
 */
Transfer145.prototype['sender_account_uri'] = undefined;

/**
 * The statement descriptor is the value that will be displayed on the recipient's bank or card statement. It consists of two parts: the prefix and the content. The prefix is a short string typically used to identify the partner. The appended &lt;prefix&gt;*&lt;content&gt; will be displayed on the recipient's statement. Note: While most financial institutions display this information consistently, some may display it incorrectly or not at all.
 * @member {String} statement_descriptor
 */
Transfer145.prototype['statement_descriptor'] = undefined;

/**
 * Status of the transfer. Values: APPROVED, DECLINED, ERROR, PENDING, REVERSED, CANCELLED.
 * @member {String} status
 */
Transfer145.prototype['status'] = undefined;

/**
 * Timestamp of when the status was changed to its current value. Details- YYYY-MM-DDTHH:MM:SSZ Valid Values- Refer 'Date And Time Formats'
 * @member {String} status_timestamp
 */
Transfer145.prototype['status_timestamp'] = undefined;

/**
 * @member {module:model/TransactionHistory153} transaction_history
 */
Transfer145.prototype['transaction_history'] = undefined;

/**
 * @member {module:model/TransferAmount152} transfer_amount
 */
Transfer145.prototype['transfer_amount'] = undefined;

/**
 * Unique transaction reference number provided when the Transfer was created.
 * @member {String} transfer_reference
 */
Transfer145.prototype['transfer_reference'] = undefined;






export default Transfer145;

