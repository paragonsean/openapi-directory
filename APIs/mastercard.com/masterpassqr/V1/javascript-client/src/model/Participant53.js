/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Participant53 model module.
 * @module model/Participant53
 * @version V1
 */
class Participant53 {
    /**
     * Constructs a new <code>Participant53</code>.
     * Information about a participant that may be passed along to the network.
     * @alias module:model/Participant53
     */
    constructor() { 
        
        Participant53.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Participant53</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Participant53} obj Optional instance to populate.
     * @return {module:model/Participant53} The populated <code>Participant53</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Participant53();

            if (data.hasOwnProperty('card_acceptor_id')) {
                obj['card_acceptor_id'] = ApiClient.convertToType(data['card_acceptor_id'], 'String');
            }
            if (data.hasOwnProperty('card_acceptor_name')) {
                obj['card_acceptor_name'] = ApiClient.convertToType(data['card_acceptor_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Participant53</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Participant53</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['card_acceptor_id'] && !(typeof data['card_acceptor_id'] === 'string' || data['card_acceptor_id'] instanceof String)) {
            throw new Error("Expected the field `card_acceptor_id` to be a primitive type in the JSON string but got " + data['card_acceptor_id']);
        }
        // ensure the json data is a string
        if (data['card_acceptor_name'] && !(typeof data['card_acceptor_name'] === 'string' || data['card_acceptor_name'] instanceof String)) {
            throw new Error("Expected the field `card_acceptor_name` to be a primitive type in the JSON string but got " + data['card_acceptor_name']);
        }

        return true;
    }


}



/**
 * Code identifying the card acceptor. Please contact your MasterCard Representative to enable the usage of fields in this section. Details - alphanumeric, 10-15
 * @member {String} card_acceptor_id
 */
Participant53.prototype['card_acceptor_id'] = undefined;

/**
 * Merchant Name (or Payment Facilitator and Sub-Merchant Information, that is, the “doing business as” name of the merchant to where the payment transaction is sent to). Details - alphanumeric, 1-22
 * @member {String} card_acceptor_name
 */
Participant53.prototype['card_acceptor_name'] = undefined;






export default Participant53;

