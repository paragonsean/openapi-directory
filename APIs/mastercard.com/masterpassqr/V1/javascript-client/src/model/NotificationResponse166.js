/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NotificationResponse166 model module.
 * @module model/NotificationResponse166
 * @version V1
 */
class NotificationResponse166 {
    /**
     * Constructs a new <code>NotificationResponse166</code>.
     * Contains the details of the response message.
     * @alias module:model/NotificationResponse166
     */
    constructor() { 
        
        NotificationResponse166.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NotificationResponse166</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationResponse166} obj Optional instance to populate.
     * @return {module:model/NotificationResponse166} The populated <code>NotificationResponse166</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationResponse166();

            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('transfer_reference')) {
                obj['transfer_reference'] = ApiClient.convertToType(data['transfer_reference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationResponse166</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationResponse166</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['transfer_reference'] && !(typeof data['transfer_reference'] === 'string' || data['transfer_reference'] instanceof String)) {
            throw new Error("Expected the field `transfer_reference` to be a primitive type in the JSON string but got " + data['transfer_reference']);
        }

        return true;
    }


}



/**
 * status of the notification
 * @member {String} status
 */
NotificationResponse166.prototype['status'] = undefined;

/**
 * reference for the simulate notification
 * @member {String} transfer_reference
 */
NotificationResponse166.prototype['transfer_reference'] = undefined;






export default NotificationResponse166;

