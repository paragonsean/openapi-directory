/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address31 from './Address31';

/**
 * The Sender30 model module.
 * @module model/Sender30
 * @version V1
 */
class Sender30 {
    /**
     * Constructs a new <code>Sender30</code>.
     * Information about the sender of the transaction. If a PAN number is provided in the sender_account_uri, the sender information section is required. Details- Conditional
     * @alias module:model/Sender30
     * @param firstName {String} First name of the sender.\\n\\nType: Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./\\:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÚÚÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], Length: 1-40
     * @param lastName {String} Last name of the sender.\\n\\nType: Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./\\:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÚÚÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], Length: 1-40
     */
    constructor(firstName, lastName) { 
        
        Sender30.initialize(this, firstName, lastName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, firstName, lastName) { 
        obj['first_name'] = firstName;
        obj['last_name'] = lastName;
    }

    /**
     * Constructs a <code>Sender30</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Sender30} obj Optional instance to populate.
     * @return {module:model/Sender30} The populated <code>Sender30</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Sender30();

            if (data.hasOwnProperty('address')) {
                obj['address'] = Address31.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('date_of_birth')) {
                obj['date_of_birth'] = ApiClient.convertToType(data['date_of_birth'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('middle_name')) {
                obj['middle_name'] = ApiClient.convertToType(data['middle_name'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Sender30</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Sender30</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Sender30.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `address`
        if (data['address']) { // data not null
          Address31.validateJSON(data['address']);
        }
        // ensure the json data is a string
        if (data['date_of_birth'] && !(typeof data['date_of_birth'] === 'string' || data['date_of_birth'] instanceof String)) {
            throw new Error("Expected the field `date_of_birth` to be a primitive type in the JSON string but got " + data['date_of_birth']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['middle_name'] && !(typeof data['middle_name'] === 'string' || data['middle_name'] instanceof String)) {
            throw new Error("Expected the field `middle_name` to be a primitive type in the JSON string but got " + data['middle_name']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }

        return true;
    }


}

Sender30.RequiredProperties = ["first_name", "last_name"];

/**
 * @member {module:model/Address31} address
 */
Sender30.prototype['address'] = undefined;

/**
 * Date of birth of the sender as an ISO 8601 Full Date. Valid Values- Refer 'Date And Time Formats'
 * @member {String} date_of_birth
 */
Sender30.prototype['date_of_birth'] = undefined;

/**
 * Email address of the sender. Phone number or email address should be provided if the partner is set up to receive notifications. Details- Conditional, 5-254
 * @member {String} email
 */
Sender30.prototype['email'] = undefined;

/**
 * First name of the sender.\\n\\nType: Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./\\:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÚÚÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], Length: 1-40
 * @member {String} first_name
 */
Sender30.prototype['first_name'] = undefined;

/**
 * Last name of the sender.\\n\\nType: Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./\\:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÚÚÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], Length: 1-40
 * @member {String} last_name
 */
Sender30.prototype['last_name'] = undefined;

/**
 * Middle name of the sender.\\n\\nType: Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./\\:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÚÚÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], Length: 1-40
 * @member {String} middle_name
 */
Sender30.prototype['middle_name'] = undefined;

/**
 * Phone number of the sender. Phone number or email address should be provided if the partner is set up to receive notifications. Details- Conditional, 1-15
 * @member {String} phone
 */
Sender30.prototype['phone'] = undefined;






export default Sender30;

