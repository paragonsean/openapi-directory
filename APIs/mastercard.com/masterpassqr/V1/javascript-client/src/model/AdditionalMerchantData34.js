/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdditionalMerchantData34 model module.
 * @module model/AdditionalMerchantData34
 * @version V1
 */
class AdditionalMerchantData34 {
    /**
     * Constructs a new <code>AdditionalMerchantData34</code>.
     * Additional merchant data of recipient
     * @alias module:model/AdditionalMerchantData34
     * @param paymentFacilitatorId {Number} This ID is the Company ID that will be assigned during the time of registration with Mastercard for a Service Provider as Payment Facilitator. Type: Numeric [0-9],Length: 1-11
     * @param subMerchantId {String} The Sub-Merchant ID must always be the merchant ID of the sub-merchant whenever a payment facilitator is involved in a transaction, Type :Alphanumeric [a-zA-Z 0-9] , Maximum- Length : 1-15
     */
    constructor(paymentFacilitatorId, subMerchantId) { 
        
        AdditionalMerchantData34.initialize(this, paymentFacilitatorId, subMerchantId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, paymentFacilitatorId, subMerchantId) { 
        obj['payment_facilitator_id'] = paymentFacilitatorId;
        obj['sub_merchant_id'] = subMerchantId;
    }

    /**
     * Constructs a <code>AdditionalMerchantData34</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditionalMerchantData34} obj Optional instance to populate.
     * @return {module:model/AdditionalMerchantData34} The populated <code>AdditionalMerchantData34</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditionalMerchantData34();

            if (data.hasOwnProperty('payment_facilitator_id')) {
                obj['payment_facilitator_id'] = ApiClient.convertToType(data['payment_facilitator_id'], 'Number');
            }
            if (data.hasOwnProperty('sub_merchant_id')) {
                obj['sub_merchant_id'] = ApiClient.convertToType(data['sub_merchant_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdditionalMerchantData34</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdditionalMerchantData34</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AdditionalMerchantData34.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['sub_merchant_id'] && !(typeof data['sub_merchant_id'] === 'string' || data['sub_merchant_id'] instanceof String)) {
            throw new Error("Expected the field `sub_merchant_id` to be a primitive type in the JSON string but got " + data['sub_merchant_id']);
        }

        return true;
    }


}

AdditionalMerchantData34.RequiredProperties = ["payment_facilitator_id", "sub_merchant_id"];

/**
 * This ID is the Company ID that will be assigned during the time of registration with Mastercard for a Service Provider as Payment Facilitator. Type: Numeric [0-9],Length: 1-11
 * @member {Number} payment_facilitator_id
 */
AdditionalMerchantData34.prototype['payment_facilitator_id'] = undefined;

/**
 * The Sub-Merchant ID must always be the merchant ID of the sub-merchant whenever a payment facilitator is involved in a transaction, Type :Alphanumeric [a-zA-Z 0-9] , Maximum- Length : 1-15
 * @member {String} sub_merchant_id
 */
AdditionalMerchantData34.prototype['sub_merchant_id'] = undefined;






export default AdditionalMerchantData34;

