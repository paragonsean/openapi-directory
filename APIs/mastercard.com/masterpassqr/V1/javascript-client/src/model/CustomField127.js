/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomField127 model module.
 * @module model/CustomField127
 * @version V1
 */
class CustomField127 {
    /**
     * Constructs a new <code>CustomField127</code>.
     * Contains custom field names and values to appear in the reconciliation report for this transfer. This could be a list of multiple values. These should match with the information during onboarding.
     * @alias module:model/CustomField127
     * @param name {String} Name to be displayed in the reconciliation report for this transfer. This value will appear as a header in the column name of the report. The fields that can be used have to be defined during the onboarding process. Details- 1-40
     * @param value {String} Value to be displayed in the reconciliation report for this transfer. Details- 1-40
     */
    constructor(name, value) { 
        
        CustomField127.initialize(this, name, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, value) { 
        obj['name'] = name;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>CustomField127</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomField127} obj Optional instance to populate.
     * @return {module:model/CustomField127} The populated <code>CustomField127</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomField127();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomField127</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomField127</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomField127.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

CustomField127.RequiredProperties = ["name", "value"];

/**
 * Name to be displayed in the reconciliation report for this transfer. This value will appear as a header in the column name of the report. The fields that can be used have to be defined during the onboarding process. Details- 1-40
 * @member {String} name
 */
CustomField127.prototype['name'] = undefined;

/**
 * Value to be displayed in the reconciliation report for this transfer. Details- 1-40
 * @member {String} value
 */
CustomField127.prototype['value'] = undefined;






export default CustomField127;

