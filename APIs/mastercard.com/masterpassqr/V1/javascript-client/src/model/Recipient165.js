/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Recipient165 model module.
 * @module model/Recipient165
 * @version V1
 */
class Recipient165 {
    /**
     * Constructs a new <code>Recipient165</code>.
     * Contains the recipient info
     * @alias module:model/Recipient165
     */
    constructor() { 
        
        Recipient165.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Recipient165</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Recipient165} obj Optional instance to populate.
     * @return {module:model/Recipient165} The populated <code>Recipient165</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Recipient165();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('name_on_account')) {
                obj['name_on_account'] = ApiClient.convertToType(data['name_on_account'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Recipient165</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Recipient165</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['name_on_account'] && !(typeof data['name_on_account'] === 'string' || data['name_on_account'] instanceof String)) {
            throw new Error("Expected the field `name_on_account` to be a primitive type in the JSON string but got " + data['name_on_account']);
        }

        return true;
    }


}



/**
 * Recipient address
 * @member {String} address
 */
Recipient165.prototype['address'] = undefined;

/**
 * Recipient name
 * @member {String} name_on_account
 */
Recipient165.prototype['name_on_account'] = undefined;






export default Recipient165;

