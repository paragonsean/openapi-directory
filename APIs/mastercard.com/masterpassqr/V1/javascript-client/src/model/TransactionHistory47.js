/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Data48 from './Data48';

/**
 * The TransactionHistory47 model module.
 * @module model/TransactionHistory47
 * @version V1
 */
class TransactionHistory47 {
    /**
     * Constructs a new <code>TransactionHistory47</code>.
     * A list of all Transactions in the transfer including reversals, if any applicable.
     * @alias module:model/TransactionHistory47
     */
    constructor() { 
        
        TransactionHistory47.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransactionHistory47</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionHistory47} obj Optional instance to populate.
     * @return {module:model/TransactionHistory47} The populated <code>TransactionHistory47</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionHistory47();

            if (data.hasOwnProperty('data')) {
                obj['data'] = Data48.constructFromObject(data['data']);
            }
            if (data.hasOwnProperty('item_count')) {
                obj['item_count'] = ApiClient.convertToType(data['item_count'], 'Number');
            }
            if (data.hasOwnProperty('resource_type')) {
                obj['resource_type'] = ApiClient.convertToType(data['resource_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionHistory47</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionHistory47</code>.
     */
    static validateJSON(data) {
        // validate the optional field `data`
        if (data['data']) { // data not null
          Data48.validateJSON(data['data']);
        }
        // ensure the json data is a string
        if (data['resource_type'] && !(typeof data['resource_type'] === 'string' || data['resource_type'] instanceof String)) {
            throw new Error("Expected the field `resource_type` to be a primitive type in the JSON string but got " + data['resource_type']);
        }

        return true;
    }


}



/**
 * @member {module:model/Data48} data
 */
TransactionHistory47.prototype['data'] = undefined;

/**
 * Number of Transactions in the list. Details- Numeric Example: 1
 * @member {Number} item_count
 */
TransactionHistory47.prototype['item_count'] = undefined;

/**
 * Type of the resource that is being returned. Valid value:  list
 * @member {String} resource_type
 */
TransactionHistory47.prototype['resource_type'] = undefined;






export default TransactionHistory47;

