/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DigitalAccountReferenceNumber88 from './DigitalAccountReferenceNumber88';

/**
 * The DigitalAccount87 model module.
 * @module model/DigitalAccount87
 * @version V1
 */
class DigitalAccount87 {
    /**
     * Constructs a new <code>DigitalAccount87</code>.
     * Response details for a create digital account reference number
     * @alias module:model/DigitalAccount87
     */
    constructor() { 
        
        DigitalAccount87.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DigitalAccount87</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DigitalAccount87} obj Optional instance to populate.
     * @return {module:model/DigitalAccount87} The populated <code>DigitalAccount87</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DigitalAccount87();

            if (data.hasOwnProperty('account_type')) {
                obj['account_type'] = ApiClient.convertToType(data['account_type'], 'String');
            }
            if (data.hasOwnProperty('account_uri')) {
                obj['account_uri'] = ApiClient.convertToType(data['account_uri'], 'String');
            }
            if (data.hasOwnProperty('digital_account_reference_number')) {
                obj['digital_account_reference_number'] = DigitalAccountReferenceNumber88.constructFromObject(data['digital_account_reference_number']);
            }
            if (data.hasOwnProperty('reference')) {
                obj['reference'] = ApiClient.convertToType(data['reference'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DigitalAccount87</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DigitalAccount87</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_type'] && !(typeof data['account_type'] === 'string' || data['account_type'] instanceof String)) {
            throw new Error("Expected the field `account_type` to be a primitive type in the JSON string but got " + data['account_type']);
        }
        // ensure the json data is a string
        if (data['account_uri'] && !(typeof data['account_uri'] === 'string' || data['account_uri'] instanceof String)) {
            throw new Error("Expected the field `account_uri` to be a primitive type in the JSON string but got " + data['account_uri']);
        }
        // validate the optional field `digital_account_reference_number`
        if (data['digital_account_reference_number']) { // data not null
          DigitalAccountReferenceNumber88.validateJSON(data['digital_account_reference_number']);
        }
        // ensure the json data is a string
        if (data['reference'] && !(typeof data['reference'] === 'string' || data['reference'] instanceof String)) {
            throw new Error("Expected the field `reference` to be a primitive type in the JSON string but got " + data['reference']);
        }

        return true;
    }


}



/**
 * Account type must contain one of the following: CREDIT, DEBIT, PREPAID, DEPOSIT_ACCOUNT, MOBILE_MONEY_ACCOUNT, CASH.
 * @member {String} account_type
 */
DigitalAccount87.prototype['account_type'] = undefined;

/**
 * URI describing the account. URI scheme must be raw. Valid Values- Refer 'Account URIs'. 
 * @member {String} account_uri
 */
DigitalAccount87.prototype['account_uri'] = undefined;

/**
 * @member {module:model/DigitalAccountReferenceNumber88} digital_account_reference_number
 */
DigitalAccount87.prototype['digital_account_reference_number'] = undefined;

/**
 * Provide a unique transaction reference number. It must be a unique value for the partner. Details- 6-40, Allowable characters are alphanumeric and * , - . _ ~
 * @member {String} reference
 */
DigitalAccount87.prototype['reference'] = undefined;






export default DigitalAccount87;

