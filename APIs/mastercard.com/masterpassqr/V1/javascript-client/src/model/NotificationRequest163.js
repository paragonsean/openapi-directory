/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Recipient165 from './Recipient165';
import TransactionAmount164 from './TransactionAmount164';

/**
 * The NotificationRequest163 model module.
 * @module model/NotificationRequest163
 * @version V1
 */
class NotificationRequest163 {
    /**
     * Constructs a new <code>NotificationRequest163</code>.
     * Contains the details of the request message.
     * @alias module:model/NotificationRequest163
     * @param paymentType {String} MRF: Merchant Refund
     * @param recipientAccountUri {String} Recepient Account uri . Only accept format: pan:[16 digit]
     * @param transferStatus {String} APPROVED or DECLINED
     */
    constructor(paymentType, recipientAccountUri, transferStatus) { 
        
        NotificationRequest163.initialize(this, paymentType, recipientAccountUri, transferStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, paymentType, recipientAccountUri, transferStatus) { 
        obj['payment_type'] = paymentType;
        obj['recipient_account_uri'] = recipientAccountUri;
        obj['transfer_status'] = transferStatus;
    }

    /**
     * Constructs a <code>NotificationRequest163</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationRequest163} obj Optional instance to populate.
     * @return {module:model/NotificationRequest163} The populated <code>NotificationRequest163</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationRequest163();

            if (data.hasOwnProperty('additional_message')) {
                obj['additional_message'] = ApiClient.convertToType(data['additional_message'], 'String');
            }
            if (data.hasOwnProperty('mastercard_assigned_id')) {
                obj['mastercard_assigned_id'] = ApiClient.convertToType(data['mastercard_assigned_id'], 'String');
            }
            if (data.hasOwnProperty('merchant_category_code')) {
                obj['merchant_category_code'] = ApiClient.convertToType(data['merchant_category_code'], 'String');
            }
            if (data.hasOwnProperty('payment_facilitator_id')) {
                obj['payment_facilitator_id'] = ApiClient.convertToType(data['payment_facilitator_id'], 'String');
            }
            if (data.hasOwnProperty('payment_type')) {
                obj['payment_type'] = ApiClient.convertToType(data['payment_type'], 'String');
            }
            if (data.hasOwnProperty('recipient')) {
                obj['recipient'] = Recipient165.constructFromObject(data['recipient']);
            }
            if (data.hasOwnProperty('recipient_account_uri')) {
                obj['recipient_account_uri'] = ApiClient.convertToType(data['recipient_account_uri'], 'String');
            }
            if (data.hasOwnProperty('transaction_amount')) {
                obj['transaction_amount'] = TransactionAmount164.constructFromObject(data['transaction_amount']);
            }
            if (data.hasOwnProperty('transfer_status')) {
                obj['transfer_status'] = ApiClient.convertToType(data['transfer_status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationRequest163</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationRequest163</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NotificationRequest163.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['additional_message'] && !(typeof data['additional_message'] === 'string' || data['additional_message'] instanceof String)) {
            throw new Error("Expected the field `additional_message` to be a primitive type in the JSON string but got " + data['additional_message']);
        }
        // ensure the json data is a string
        if (data['mastercard_assigned_id'] && !(typeof data['mastercard_assigned_id'] === 'string' || data['mastercard_assigned_id'] instanceof String)) {
            throw new Error("Expected the field `mastercard_assigned_id` to be a primitive type in the JSON string but got " + data['mastercard_assigned_id']);
        }
        // ensure the json data is a string
        if (data['merchant_category_code'] && !(typeof data['merchant_category_code'] === 'string' || data['merchant_category_code'] instanceof String)) {
            throw new Error("Expected the field `merchant_category_code` to be a primitive type in the JSON string but got " + data['merchant_category_code']);
        }
        // ensure the json data is a string
        if (data['payment_facilitator_id'] && !(typeof data['payment_facilitator_id'] === 'string' || data['payment_facilitator_id'] instanceof String)) {
            throw new Error("Expected the field `payment_facilitator_id` to be a primitive type in the JSON string but got " + data['payment_facilitator_id']);
        }
        // ensure the json data is a string
        if (data['payment_type'] && !(typeof data['payment_type'] === 'string' || data['payment_type'] instanceof String)) {
            throw new Error("Expected the field `payment_type` to be a primitive type in the JSON string but got " + data['payment_type']);
        }
        // validate the optional field `recipient`
        if (data['recipient']) { // data not null
          Recipient165.validateJSON(data['recipient']);
        }
        // ensure the json data is a string
        if (data['recipient_account_uri'] && !(typeof data['recipient_account_uri'] === 'string' || data['recipient_account_uri'] instanceof String)) {
            throw new Error("Expected the field `recipient_account_uri` to be a primitive type in the JSON string but got " + data['recipient_account_uri']);
        }
        // validate the optional field `transaction_amount`
        if (data['transaction_amount']) { // data not null
          TransactionAmount164.validateJSON(data['transaction_amount']);
        }
        // ensure the json data is a string
        if (data['transfer_status'] && !(typeof data['transfer_status'] === 'string' || data['transfer_status'] instanceof String)) {
            throw new Error("Expected the field `transfer_status` to be a primitive type in the JSON string but got " + data['transfer_status']);
        }

        return true;
    }


}

NotificationRequest163.RequiredProperties = ["payment_type", "recipient_account_uri", "transfer_status"];

/**
 * Message a financial institution will associate to the transfer and may display
 * @member {String} additional_message
 */
NotificationRequest163.prototype['additional_message'] = undefined;

/**
 * Mastercard Assigned ID for tiered interchange calculations. Length: 6. Applicable only for P2M and MRF notifications. 
 * @member {String} mastercard_assigned_id
 */
NotificationRequest163.prototype['mastercard_assigned_id'] = undefined;

/**
 * Merchant category code
 * @member {String} merchant_category_code
 */
NotificationRequest163.prototype['merchant_category_code'] = undefined;

/**
 * Contains the Payment Facilitator ID. Length: 11. Applicable only for P2M and MRF notifications.
 * @member {String} payment_facilitator_id
 */
NotificationRequest163.prototype['payment_facilitator_id'] = undefined;

/**
 * MRF: Merchant Refund
 * @member {String} payment_type
 */
NotificationRequest163.prototype['payment_type'] = undefined;

/**
 * @member {module:model/Recipient165} recipient
 */
NotificationRequest163.prototype['recipient'] = undefined;

/**
 * Recepient Account uri . Only accept format: pan:[16 digit]
 * @member {String} recipient_account_uri
 */
NotificationRequest163.prototype['recipient_account_uri'] = undefined;

/**
 * @member {module:model/TransactionAmount164} transaction_amount
 */
NotificationRequest163.prototype['transaction_amount'] = undefined;

/**
 * APPROVED or DECLINED
 * @member {String} transfer_status
 */
NotificationRequest163.prototype['transfer_status'] = undefined;






export default NotificationRequest163;

