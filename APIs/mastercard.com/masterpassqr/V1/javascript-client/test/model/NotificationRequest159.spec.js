/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPersonToMerchant);
  }
}(this, function(expect, SendPersonToMerchant) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPersonToMerchant.NotificationRequest159();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NotificationRequest159', function() {
    it('should create an instance of NotificationRequest159', function() {
      // uncomment below and update the code to test NotificationRequest159
      //var instance = new SendPersonToMerchant.NotificationRequest159();
      //expect(instance).to.be.a(SendPersonToMerchant.NotificationRequest159);
    });

    it('should have the property additionalMessage (base name: "additional_message")', function() {
      // uncomment below and update the code to test the property additionalMessage
      //var instance = new SendPersonToMerchant.NotificationRequest159();
      //expect(instance).to.be();
    });

    it('should have the property mastercardAssignedId (base name: "mastercard_assigned_id")', function() {
      // uncomment below and update the code to test the property mastercardAssignedId
      //var instance = new SendPersonToMerchant.NotificationRequest159();
      //expect(instance).to.be();
    });

    it('should have the property merchantCategoryCode (base name: "merchant_category_code")', function() {
      // uncomment below and update the code to test the property merchantCategoryCode
      //var instance = new SendPersonToMerchant.NotificationRequest159();
      //expect(instance).to.be();
    });

    it('should have the property paymentFacilitatorId (base name: "payment_facilitator_id")', function() {
      // uncomment below and update the code to test the property paymentFacilitatorId
      //var instance = new SendPersonToMerchant.NotificationRequest159();
      //expect(instance).to.be();
    });

    it('should have the property paymentType (base name: "payment_type")', function() {
      // uncomment below and update the code to test the property paymentType
      //var instance = new SendPersonToMerchant.NotificationRequest159();
      //expect(instance).to.be();
    });

    it('should have the property recipient (base name: "recipient")', function() {
      // uncomment below and update the code to test the property recipient
      //var instance = new SendPersonToMerchant.NotificationRequest159();
      //expect(instance).to.be();
    });

    it('should have the property recipientAccountUri (base name: "recipient_account_uri")', function() {
      // uncomment below and update the code to test the property recipientAccountUri
      //var instance = new SendPersonToMerchant.NotificationRequest159();
      //expect(instance).to.be();
    });

    it('should have the property transactionAmount (base name: "transaction_amount")', function() {
      // uncomment below and update the code to test the property transactionAmount
      //var instance = new SendPersonToMerchant.NotificationRequest159();
      //expect(instance).to.be();
    });

    it('should have the property transferStatus (base name: "transfer_status")', function() {
      // uncomment below and update the code to test the property transferStatus
      //var instance = new SendPersonToMerchant.NotificationRequest159();
      //expect(instance).to.be();
    });

  });

}));
