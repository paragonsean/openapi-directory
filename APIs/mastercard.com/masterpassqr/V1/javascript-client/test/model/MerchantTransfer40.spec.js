/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPersonToMerchant);
  }
}(this, function(expect, SendPersonToMerchant) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPersonToMerchant.MerchantTransfer40();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MerchantTransfer40', function() {
    it('should create an instance of MerchantTransfer40', function() {
      // uncomment below and update the code to test MerchantTransfer40
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be.a(SendPersonToMerchant.MerchantTransfer40);
    });

    it('should have the property additionalMessage (base name: "additional_message")', function() {
      // uncomment below and update the code to test the property additionalMessage
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property channel (base name: "channel")', function() {
      // uncomment below and update the code to test the property channel
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property convenienceAmount (base name: "convenience_amount")', function() {
      // uncomment below and update the code to test the property convenienceAmount
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property convenienceIndicator (base name: "convenience_indicator")', function() {
      // uncomment below and update the code to test the property convenienceIndicator
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property deviceId (base name: "device_id")', function() {
      // uncomment below and update the code to test the property deviceId
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property digitalAccountReferenceNumber (base name: "digital_account_reference_number")', function() {
      // uncomment below and update the code to test the property digitalAccountReferenceNumber
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property fundingSource (base name: "funding_source")', function() {
      // uncomment below and update the code to test the property fundingSource
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property interchangeRateDesignator (base name: "interchange_rate_designator")', function() {
      // uncomment below and update the code to test the property interchangeRateDesignator
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property originalStatus (base name: "original_status")', function() {
      // uncomment below and update the code to test the property originalStatus
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property participant (base name: "participant")', function() {
      // uncomment below and update the code to test the property participant
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property participationId (base name: "participation_id")', function() {
      // uncomment below and update the code to test the property participationId
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property paymentOriginationCountry (base name: "payment_origination_country")', function() {
      // uncomment below and update the code to test the property paymentOriginationCountry
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property paymentType (base name: "payment_type")', function() {
      // uncomment below and update the code to test the property paymentType
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property processorId (base name: "processor_id")', function() {
      // uncomment below and update the code to test the property processorId
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property qrData (base name: "qr_data")', function() {
      // uncomment below and update the code to test the property qrData
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property recipient (base name: "recipient")', function() {
      // uncomment below and update the code to test the property recipient
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property recipientAccountUri (base name: "recipient_account_uri")', function() {
      // uncomment below and update the code to test the property recipientAccountUri
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property reconciliationData (base name: "reconciliation_data")', function() {
      // uncomment below and update the code to test the property reconciliationData
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property resourceType (base name: "resource_type")', function() {
      // uncomment below and update the code to test the property resourceType
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property routingTransitNumber (base name: "routing_transit_number")', function() {
      // uncomment below and update the code to test the property routingTransitNumber
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property sender (base name: "sender")', function() {
      // uncomment below and update the code to test the property sender
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property senderAccountUri (base name: "sender_account_uri")', function() {
      // uncomment below and update the code to test the property senderAccountUri
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property statusTimestamp (base name: "status_timestamp")', function() {
      // uncomment below and update the code to test the property statusTimestamp
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property transactionHistory (base name: "transaction_history")', function() {
      // uncomment below and update the code to test the property transactionHistory
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property transactionLocalDateTime (base name: "transaction_local_date_time")', function() {
      // uncomment below and update the code to test the property transactionLocalDateTime
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property transferAmount (base name: "transfer_amount")', function() {
      // uncomment below and update the code to test the property transferAmount
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

    it('should have the property transferReference (base name: "transfer_reference")', function() {
      // uncomment below and update the code to test the property transferReference
      //var instance = new SendPersonToMerchant.MerchantTransfer40();
      //expect(instance).to.be();
    });

  });

}));
