/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendPersonToMerchant);
  }
}(this, function(expect, SendPersonToMerchant) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendPersonToMerchant.Transaction81();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Transaction81', function() {
    it('should create an instance of Transaction81', function() {
      // uncomment below and update the code to test Transaction81
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be.a(SendPersonToMerchant.Transaction81);
    });

    it('should have the property accountUri (base name: "account_uri")', function() {
      // uncomment below and update the code to test the property accountUri
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property authorizationId (base name: "authorization_id")', function() {
      // uncomment below and update the code to test the property authorizationId
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property convenienceAmount (base name: "convenience_amount")', function() {
      // uncomment below and update the code to test the property convenienceAmount
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property convenienceIndicator (base name: "convenience_indicator")', function() {
      // uncomment below and update the code to test the property convenienceIndicator
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property createTimestamp (base name: "create_timestamp")', function() {
      // uncomment below and update the code to test the property createTimestamp
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property network (base name: "network")', function() {
      // uncomment below and update the code to test the property network
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property networkStatusCode (base name: "network_status_code")', function() {
      // uncomment below and update the code to test the property networkStatusCode
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property networkStatusDescription (base name: "network_status_description")', function() {
      // uncomment below and update the code to test the property networkStatusDescription
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property paymentAccountReference (base name: "payment_account_reference")', function() {
      // uncomment below and update the code to test the property paymentAccountReference
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property qrData (base name: "qr_data")', function() {
      // uncomment below and update the code to test the property qrData
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property resourceType (base name: "resource_type")', function() {
      // uncomment below and update the code to test the property resourceType
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property retrievalReference (base name: "retrieval_reference")', function() {
      // uncomment below and update the code to test the property retrievalReference
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property statusReason (base name: "status_reason")', function() {
      // uncomment below and update the code to test the property statusReason
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property statusTimestamp (base name: "status_timestamp")', function() {
      // uncomment below and update the code to test the property statusTimestamp
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property switchSerialNumber (base name: "switch_serial_number")', function() {
      // uncomment below and update the code to test the property switchSerialNumber
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property systemTraceAuditNumber (base name: "system_trace_audit_number")', function() {
      // uncomment below and update the code to test the property systemTraceAuditNumber
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property transactionAmount (base name: "transaction_amount")', function() {
      // uncomment below and update the code to test the property transactionAmount
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

    it('should have the property uniqueReferenceNumber (base name: "unique_reference_number")', function() {
      // uncomment below and update the code to test the property uniqueReferenceNumber
      //var instance = new SendPersonToMerchant.Transaction81();
      //expect(instance).to.be();
    });

  });

}));
