/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFundingTransfer_118.h
 *
 * Contains the details of the request message.
 */

#ifndef OAIFundingTransfer_118_H
#define OAIFundingTransfer_118_H

#include <QJsonObject>

#include "OAIRecipient_123.h"
#include "OAIReconciliationData_126.h"
#include "OAISender_119.h"
#include "OAITokenCryptogram_128.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecipient_123;
class OAIReconciliationData_126;
class OAISender_119;
class OAITokenCryptogram_128;

class OAIFundingTransfer_118 : public OAIObject {
public:
    OAIFundingTransfer_118();
    OAIFundingTransfer_118(QString json);
    ~OAIFundingTransfer_118() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalMessage() const;
    void setAdditionalMessage(const QString &additional_message);
    bool is_additional_message_Set() const;
    bool is_additional_message_Valid() const;

    QString getAmount() const;
    void setAmount(const QString &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getAuthenticationValue() const;
    void setAuthenticationValue(const QString &authentication_value);
    bool is_authentication_value_Set() const;
    bool is_authentication_value_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDeviceId() const;
    void setDeviceId(const QString &device_id);
    bool is_device_id_Set() const;
    bool is_device_id_Valid() const;

    QString getFundingHints() const;
    void setFundingHints(const QString &funding_hints);
    bool is_funding_hints_Set() const;
    bool is_funding_hints_Valid() const;

    QString getInterchangeRateDesignator() const;
    void setInterchangeRateDesignator(const QString &interchange_rate_designator);
    bool is_interchange_rate_designator_Set() const;
    bool is_interchange_rate_designator_Valid() const;

    QString getLanguageData() const;
    void setLanguageData(const QString &language_data);
    bool is_language_data_Set() const;
    bool is_language_data_Valid() const;

    QString getLanguageIdentification() const;
    void setLanguageIdentification(const QString &language_identification);
    bool is_language_identification_Set() const;
    bool is_language_identification_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getParticipationId() const;
    void setParticipationId(const QString &participation_id);
    bool is_participation_id_Set() const;
    bool is_participation_id_Valid() const;

    QString getPaymentType() const;
    void setPaymentType(const QString &payment_type);
    bool is_payment_type_Set() const;
    bool is_payment_type_Valid() const;

    OAIRecipient_123 getRecipient() const;
    void setRecipient(const OAIRecipient_123 &recipient);
    bool is_recipient_Set() const;
    bool is_recipient_Valid() const;

    QString getRecipientAccountUri() const;
    void setRecipientAccountUri(const QString &recipient_account_uri);
    bool is_recipient_account_uri_Set() const;
    bool is_recipient_account_uri_Valid() const;

    OAIReconciliationData_126 getReconciliationData() const;
    void setReconciliationData(const OAIReconciliationData_126 &reconciliation_data);
    bool is_reconciliation_data_Set() const;
    bool is_reconciliation_data_Valid() const;

    bool isSanctionScreeningOverride() const;
    void setSanctionScreeningOverride(const bool &sanction_screening_override);
    bool is_sanction_screening_override_Set() const;
    bool is_sanction_screening_override_Valid() const;

    OAISender_119 getSender() const;
    void setSender(const OAISender_119 &sender);
    bool is_sender_Set() const;
    bool is_sender_Valid() const;

    QString getSenderAccountUri() const;
    void setSenderAccountUri(const QString &sender_account_uri);
    bool is_sender_account_uri_Set() const;
    bool is_sender_account_uri_Valid() const;

    QString getStatementDescriptor() const;
    void setStatementDescriptor(const QString &statement_descriptor);
    bool is_statement_descriptor_Set() const;
    bool is_statement_descriptor_Valid() const;

    OAITokenCryptogram_128 getTokenCryptogram() const;
    void setTokenCryptogram(const OAITokenCryptogram_128 &token_cryptogram);
    bool is_token_cryptogram_Set() const;
    bool is_token_cryptogram_Valid() const;

    QString getTransferReference() const;
    void setTransferReference(const QString &transfer_reference);
    bool is_transfer_reference_Set() const;
    bool is_transfer_reference_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_additional_message;
    bool m_additional_message_isSet;
    bool m_additional_message_isValid;

    QString m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_authentication_value;
    bool m_authentication_value_isSet;
    bool m_authentication_value_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_device_id;
    bool m_device_id_isSet;
    bool m_device_id_isValid;

    QString m_funding_hints;
    bool m_funding_hints_isSet;
    bool m_funding_hints_isValid;

    QString m_interchange_rate_designator;
    bool m_interchange_rate_designator_isSet;
    bool m_interchange_rate_designator_isValid;

    QString m_language_data;
    bool m_language_data_isSet;
    bool m_language_data_isValid;

    QString m_language_identification;
    bool m_language_identification_isSet;
    bool m_language_identification_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_participation_id;
    bool m_participation_id_isSet;
    bool m_participation_id_isValid;

    QString m_payment_type;
    bool m_payment_type_isSet;
    bool m_payment_type_isValid;

    OAIRecipient_123 m_recipient;
    bool m_recipient_isSet;
    bool m_recipient_isValid;

    QString m_recipient_account_uri;
    bool m_recipient_account_uri_isSet;
    bool m_recipient_account_uri_isValid;

    OAIReconciliationData_126 m_reconciliation_data;
    bool m_reconciliation_data_isSet;
    bool m_reconciliation_data_isValid;

    bool m_sanction_screening_override;
    bool m_sanction_screening_override_isSet;
    bool m_sanction_screening_override_isValid;

    OAISender_119 m_sender;
    bool m_sender_isSet;
    bool m_sender_isValid;

    QString m_sender_account_uri;
    bool m_sender_account_uri_isSet;
    bool m_sender_account_uri_isValid;

    QString m_statement_descriptor;
    bool m_statement_descriptor_isSet;
    bool m_statement_descriptor_isValid;

    OAITokenCryptogram_128 m_token_cryptogram;
    bool m_token_cryptogram_isSet;
    bool m_token_cryptogram_isValid;

    QString m_transfer_reference;
    bool m_transfer_reference_isSet;
    bool m_transfer_reference_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFundingTransfer_118)

#endif // OAIFundingTransfer_118_H
