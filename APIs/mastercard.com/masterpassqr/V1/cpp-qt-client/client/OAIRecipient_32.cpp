/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRecipient_32.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRecipient_32::OAIRecipient_32(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRecipient_32::OAIRecipient_32() {
    this->initializeModel();
}

OAIRecipient_32::~OAIRecipient_32() {}

void OAIRecipient_32::initializeModel() {

    m_additional_merchant_data_isSet = false;
    m_additional_merchant_data_isValid = false;

    m_address_isSet = false;
    m_address_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_merchant_category_code_isSet = false;
    m_merchant_category_code_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;
}

void OAIRecipient_32::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRecipient_32::fromJsonObject(QJsonObject json) {

    m_additional_merchant_data_isValid = ::OpenAPI::fromJsonValue(m_additional_merchant_data, json[QString("additional_merchant_data")]);
    m_additional_merchant_data_isSet = !json[QString("additional_merchant_data")].isNull() && m_additional_merchant_data_isValid;

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_merchant_category_code_isValid = ::OpenAPI::fromJsonValue(m_merchant_category_code, json[QString("merchant_category_code")]);
    m_merchant_category_code_isSet = !json[QString("merchant_category_code")].isNull() && m_merchant_category_code_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middle_name")]);
    m_middle_name_isSet = !json[QString("middle_name")].isNull() && m_middle_name_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;
}

QString OAIRecipient_32::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRecipient_32::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_merchant_data.isSet()) {
        obj.insert(QString("additional_merchant_data"), ::OpenAPI::toJsonValue(m_additional_merchant_data));
    }
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_merchant_category_code_isSet) {
        obj.insert(QString("merchant_category_code"), ::OpenAPI::toJsonValue(m_merchant_category_code));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middle_name"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    return obj;
}

OAIAdditionalMerchantData_34 OAIRecipient_32::getAdditionalMerchantData() const {
    return m_additional_merchant_data;
}
void OAIRecipient_32::setAdditionalMerchantData(const OAIAdditionalMerchantData_34 &additional_merchant_data) {
    m_additional_merchant_data = additional_merchant_data;
    m_additional_merchant_data_isSet = true;
}

bool OAIRecipient_32::is_additional_merchant_data_Set() const{
    return m_additional_merchant_data_isSet;
}

bool OAIRecipient_32::is_additional_merchant_data_Valid() const{
    return m_additional_merchant_data_isValid;
}

OAIAddress_33 OAIRecipient_32::getAddress() const {
    return m_address;
}
void OAIRecipient_32::setAddress(const OAIAddress_33 &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIRecipient_32::is_address_Set() const{
    return m_address_isSet;
}

bool OAIRecipient_32::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIRecipient_32::getEmail() const {
    return m_email;
}
void OAIRecipient_32::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIRecipient_32::is_email_Set() const{
    return m_email_isSet;
}

bool OAIRecipient_32::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIRecipient_32::getFirstName() const {
    return m_first_name;
}
void OAIRecipient_32::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIRecipient_32::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIRecipient_32::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIRecipient_32::getLastName() const {
    return m_last_name;
}
void OAIRecipient_32::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIRecipient_32::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIRecipient_32::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIRecipient_32::getMerchantCategoryCode() const {
    return m_merchant_category_code;
}
void OAIRecipient_32::setMerchantCategoryCode(const QString &merchant_category_code) {
    m_merchant_category_code = merchant_category_code;
    m_merchant_category_code_isSet = true;
}

bool OAIRecipient_32::is_merchant_category_code_Set() const{
    return m_merchant_category_code_isSet;
}

bool OAIRecipient_32::is_merchant_category_code_Valid() const{
    return m_merchant_category_code_isValid;
}

QString OAIRecipient_32::getMiddleName() const {
    return m_middle_name;
}
void OAIRecipient_32::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAIRecipient_32::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAIRecipient_32::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAIRecipient_32::getPhone() const {
    return m_phone;
}
void OAIRecipient_32::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIRecipient_32::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIRecipient_32::is_phone_Valid() const{
    return m_phone_isValid;
}

bool OAIRecipient_32::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_merchant_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_category_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRecipient_32::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_isValid && m_first_name_isValid && m_last_name_isValid && m_merchant_category_code_isValid && true;
}

} // namespace OpenAPI
