/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDigitalAccount_87_wrapper.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDigitalAccount_87_wrapper::OAIDigitalAccount_87_wrapper(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDigitalAccount_87_wrapper::OAIDigitalAccount_87_wrapper() {
    this->initializeModel();
}

OAIDigitalAccount_87_wrapper::~OAIDigitalAccount_87_wrapper() {}

void OAIDigitalAccount_87_wrapper::initializeModel() {

    m_digital_account_isSet = false;
    m_digital_account_isValid = false;
}

void OAIDigitalAccount_87_wrapper::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDigitalAccount_87_wrapper::fromJsonObject(QJsonObject json) {

    m_digital_account_isValid = ::OpenAPI::fromJsonValue(m_digital_account, json[QString("digital_account")]);
    m_digital_account_isSet = !json[QString("digital_account")].isNull() && m_digital_account_isValid;
}

QString OAIDigitalAccount_87_wrapper::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDigitalAccount_87_wrapper::asJsonObject() const {
    QJsonObject obj;
    if (m_digital_account.isSet()) {
        obj.insert(QString("digital_account"), ::OpenAPI::toJsonValue(m_digital_account));
    }
    return obj;
}

OAIDigitalAccount_87 OAIDigitalAccount_87_wrapper::getDigitalAccount() const {
    return m_digital_account;
}
void OAIDigitalAccount_87_wrapper::setDigitalAccount(const OAIDigitalAccount_87 &digital_account) {
    m_digital_account = digital_account;
    m_digital_account_isSet = true;
}

bool OAIDigitalAccount_87_wrapper::is_digital_account_Set() const{
    return m_digital_account_isSet;
}

bool OAIDigitalAccount_87_wrapper::is_digital_account_Valid() const{
    return m_digital_account_isValid;
}

bool OAIDigitalAccount_87_wrapper::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_digital_account.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDigitalAccount_87_wrapper::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
