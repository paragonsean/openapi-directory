/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINotificationResponse_166.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINotificationResponse_166::OAINotificationResponse_166(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINotificationResponse_166::OAINotificationResponse_166() {
    this->initializeModel();
}

OAINotificationResponse_166::~OAINotificationResponse_166() {}

void OAINotificationResponse_166::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;

    m_transfer_reference_isSet = false;
    m_transfer_reference_isValid = false;
}

void OAINotificationResponse_166::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINotificationResponse_166::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_transfer_reference_isValid = ::OpenAPI::fromJsonValue(m_transfer_reference, json[QString("transfer_reference")]);
    m_transfer_reference_isSet = !json[QString("transfer_reference")].isNull() && m_transfer_reference_isValid;
}

QString OAINotificationResponse_166::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINotificationResponse_166::asJsonObject() const {
    QJsonObject obj;
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_transfer_reference_isSet) {
        obj.insert(QString("transfer_reference"), ::OpenAPI::toJsonValue(m_transfer_reference));
    }
    return obj;
}

QString OAINotificationResponse_166::getStatus() const {
    return m_status;
}
void OAINotificationResponse_166::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAINotificationResponse_166::is_status_Set() const{
    return m_status_isSet;
}

bool OAINotificationResponse_166::is_status_Valid() const{
    return m_status_isValid;
}

QString OAINotificationResponse_166::getTransferReference() const {
    return m_transfer_reference;
}
void OAINotificationResponse_166::setTransferReference(const QString &transfer_reference) {
    m_transfer_reference = transfer_reference;
    m_transfer_reference_isSet = true;
}

bool OAINotificationResponse_166::is_transfer_reference_Set() const{
    return m_transfer_reference_isSet;
}

bool OAINotificationResponse_166::is_transfer_reference_Valid() const{
    return m_transfer_reference_isValid;
}

bool OAINotificationResponse_166::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINotificationResponse_166::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
