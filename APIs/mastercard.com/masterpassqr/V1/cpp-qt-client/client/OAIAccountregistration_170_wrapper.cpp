/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountregistration_170_wrapper.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountregistration_170_wrapper::OAIAccountregistration_170_wrapper(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountregistration_170_wrapper::OAIAccountregistration_170_wrapper() {
    this->initializeModel();
}

OAIAccountregistration_170_wrapper::~OAIAccountregistration_170_wrapper() {}

void OAIAccountregistration_170_wrapper::initializeModel() {

    m_accountregistration_isSet = false;
    m_accountregistration_isValid = false;
}

void OAIAccountregistration_170_wrapper::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountregistration_170_wrapper::fromJsonObject(QJsonObject json) {

    m_accountregistration_isValid = ::OpenAPI::fromJsonValue(m_accountregistration, json[QString("accountregistration")]);
    m_accountregistration_isSet = !json[QString("accountregistration")].isNull() && m_accountregistration_isValid;
}

QString OAIAccountregistration_170_wrapper::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountregistration_170_wrapper::asJsonObject() const {
    QJsonObject obj;
    if (m_accountregistration.isSet()) {
        obj.insert(QString("accountregistration"), ::OpenAPI::toJsonValue(m_accountregistration));
    }
    return obj;
}

OAIAccountregistration_170 OAIAccountregistration_170_wrapper::getAccountregistration() const {
    return m_accountregistration;
}
void OAIAccountregistration_170_wrapper::setAccountregistration(const OAIAccountregistration_170 &accountregistration) {
    m_accountregistration = accountregistration;
    m_accountregistration_isSet = true;
}

bool OAIAccountregistration_170_wrapper::is_accountregistration_Set() const{
    return m_accountregistration_isSet;
}

bool OAIAccountregistration_170_wrapper::is_accountregistration_Valid() const{
    return m_accountregistration_isValid;
}

bool OAIAccountregistration_170_wrapper::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accountregistration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountregistration_170_wrapper::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
