/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIData_23.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIData_23::OAIData_23(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIData_23::OAIData_23() {
    this->initializeModel();
}

OAIData_23::~OAIData_23() {}

void OAIData_23::initializeModel() {

    m_transaction_isSet = false;
    m_transaction_isValid = false;
}

void OAIData_23::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIData_23::fromJsonObject(QJsonObject json) {

    m_transaction_isValid = ::OpenAPI::fromJsonValue(m_transaction, json[QString("transaction")]);
    m_transaction_isSet = !json[QString("transaction")].isNull() && m_transaction_isValid;
}

QString OAIData_23::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIData_23::asJsonObject() const {
    QJsonObject obj;
    if (m_transaction.size() > 0) {
        obj.insert(QString("transaction"), ::OpenAPI::toJsonValue(m_transaction));
    }
    return obj;
}

QList<OAITransaction_24> OAIData_23::getTransaction() const {
    return m_transaction;
}
void OAIData_23::setTransaction(const QList<OAITransaction_24> &transaction) {
    m_transaction = transaction;
    m_transaction_isSet = true;
}

bool OAIData_23::is_transaction_Set() const{
    return m_transaction_isSet;
}

bool OAIData_23::is_transaction_Valid() const{
    return m_transaction_isValid;
}

bool OAIData_23::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_transaction.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIData_23::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
