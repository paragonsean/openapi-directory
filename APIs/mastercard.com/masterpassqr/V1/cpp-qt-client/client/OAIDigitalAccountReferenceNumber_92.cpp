/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDigitalAccountReferenceNumber_92.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDigitalAccountReferenceNumber_92::OAIDigitalAccountReferenceNumber_92(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDigitalAccountReferenceNumber_92::OAIDigitalAccountReferenceNumber_92() {
    this->initializeModel();
}

OAIDigitalAccountReferenceNumber_92::~OAIDigitalAccountReferenceNumber_92() {}

void OAIDigitalAccountReferenceNumber_92::initializeModel() {

    m_issue_timestamp_isSet = false;
    m_issue_timestamp_isValid = false;

    m_pan_isSet = false;
    m_pan_isValid = false;
}

void OAIDigitalAccountReferenceNumber_92::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDigitalAccountReferenceNumber_92::fromJsonObject(QJsonObject json) {

    m_issue_timestamp_isValid = ::OpenAPI::fromJsonValue(m_issue_timestamp, json[QString("issue_timestamp")]);
    m_issue_timestamp_isSet = !json[QString("issue_timestamp")].isNull() && m_issue_timestamp_isValid;

    m_pan_isValid = ::OpenAPI::fromJsonValue(m_pan, json[QString("pan")]);
    m_pan_isSet = !json[QString("pan")].isNull() && m_pan_isValid;
}

QString OAIDigitalAccountReferenceNumber_92::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDigitalAccountReferenceNumber_92::asJsonObject() const {
    QJsonObject obj;
    if (m_issue_timestamp_isSet) {
        obj.insert(QString("issue_timestamp"), ::OpenAPI::toJsonValue(m_issue_timestamp));
    }
    if (m_pan_isSet) {
        obj.insert(QString("pan"), ::OpenAPI::toJsonValue(m_pan));
    }
    return obj;
}

QString OAIDigitalAccountReferenceNumber_92::getIssueTimestamp() const {
    return m_issue_timestamp;
}
void OAIDigitalAccountReferenceNumber_92::setIssueTimestamp(const QString &issue_timestamp) {
    m_issue_timestamp = issue_timestamp;
    m_issue_timestamp_isSet = true;
}

bool OAIDigitalAccountReferenceNumber_92::is_issue_timestamp_Set() const{
    return m_issue_timestamp_isSet;
}

bool OAIDigitalAccountReferenceNumber_92::is_issue_timestamp_Valid() const{
    return m_issue_timestamp_isValid;
}

QString OAIDigitalAccountReferenceNumber_92::getPan() const {
    return m_pan;
}
void OAIDigitalAccountReferenceNumber_92::setPan(const QString &pan) {
    m_pan = pan;
    m_pan_isSet = true;
}

bool OAIDigitalAccountReferenceNumber_92::is_pan_Set() const{
    return m_pan_isSet;
}

bool OAIDigitalAccountReferenceNumber_92::is_pan_Valid() const{
    return m_pan_isValid;
}

bool OAIDigitalAccountReferenceNumber_92::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_issue_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pan_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDigitalAccountReferenceNumber_92::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
