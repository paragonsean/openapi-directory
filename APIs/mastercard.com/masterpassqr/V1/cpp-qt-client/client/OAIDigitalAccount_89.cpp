/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDigitalAccount_89.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDigitalAccount_89::OAIDigitalAccount_89(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDigitalAccount_89::OAIDigitalAccount_89() {
    this->initializeModel();
}

OAIDigitalAccount_89::~OAIDigitalAccount_89() {}

void OAIDigitalAccount_89::initializeModel() {

    m_account_type_isSet = false;
    m_account_type_isValid = false;

    m_account_uri_isSet = false;
    m_account_uri_isValid = false;

    m_reference_isSet = false;
    m_reference_isValid = false;
}

void OAIDigitalAccount_89::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDigitalAccount_89::fromJsonObject(QJsonObject json) {

    m_account_type_isValid = ::OpenAPI::fromJsonValue(m_account_type, json[QString("account_type")]);
    m_account_type_isSet = !json[QString("account_type")].isNull() && m_account_type_isValid;

    m_account_uri_isValid = ::OpenAPI::fromJsonValue(m_account_uri, json[QString("account_uri")]);
    m_account_uri_isSet = !json[QString("account_uri")].isNull() && m_account_uri_isValid;

    m_reference_isValid = ::OpenAPI::fromJsonValue(m_reference, json[QString("reference")]);
    m_reference_isSet = !json[QString("reference")].isNull() && m_reference_isValid;
}

QString OAIDigitalAccount_89::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDigitalAccount_89::asJsonObject() const {
    QJsonObject obj;
    if (m_account_type_isSet) {
        obj.insert(QString("account_type"), ::OpenAPI::toJsonValue(m_account_type));
    }
    if (m_account_uri_isSet) {
        obj.insert(QString("account_uri"), ::OpenAPI::toJsonValue(m_account_uri));
    }
    if (m_reference_isSet) {
        obj.insert(QString("reference"), ::OpenAPI::toJsonValue(m_reference));
    }
    return obj;
}

QString OAIDigitalAccount_89::getAccountType() const {
    return m_account_type;
}
void OAIDigitalAccount_89::setAccountType(const QString &account_type) {
    m_account_type = account_type;
    m_account_type_isSet = true;
}

bool OAIDigitalAccount_89::is_account_type_Set() const{
    return m_account_type_isSet;
}

bool OAIDigitalAccount_89::is_account_type_Valid() const{
    return m_account_type_isValid;
}

QString OAIDigitalAccount_89::getAccountUri() const {
    return m_account_uri;
}
void OAIDigitalAccount_89::setAccountUri(const QString &account_uri) {
    m_account_uri = account_uri;
    m_account_uri_isSet = true;
}

bool OAIDigitalAccount_89::is_account_uri_Set() const{
    return m_account_uri_isSet;
}

bool OAIDigitalAccount_89::is_account_uri_Valid() const{
    return m_account_uri_isValid;
}

QString OAIDigitalAccount_89::getReference() const {
    return m_reference;
}
void OAIDigitalAccount_89::setReference(const QString &reference) {
    m_reference = reference;
    m_reference_isSet = true;
}

bool OAIDigitalAccount_89::is_reference_Set() const{
    return m_reference_isSet;
}

bool OAIDigitalAccount_89::is_reference_Valid() const{
    return m_reference_isValid;
}

bool OAIDigitalAccount_89::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDigitalAccount_89::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_type_isValid && m_account_uri_isValid && m_reference_isValid && true;
}

} // namespace OpenAPI
