/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransaction_155.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransaction_155::OAITransaction_155(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransaction_155::OAITransaction_155() {
    this->initializeModel();
}

OAITransaction_155::~OAITransaction_155() {}

void OAITransaction_155::initializeModel() {

    m_account_uri_isSet = false;
    m_account_uri_isValid = false;

    m_authorization_id_isSet = false;
    m_authorization_id_isValid = false;

    m_create_timestamp_isSet = false;
    m_create_timestamp_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_network_status_code_isSet = false;
    m_network_status_code_isValid = false;

    m_network_status_description_isSet = false;
    m_network_status_description_isValid = false;

    m_payment_account_reference_isSet = false;
    m_payment_account_reference_isValid = false;

    m_resource_type_isSet = false;
    m_resource_type_isValid = false;

    m_retrieval_reference_isSet = false;
    m_retrieval_reference_isValid = false;

    m_reversal_reason_isSet = false;
    m_reversal_reason_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_reason_isSet = false;
    m_status_reason_isValid = false;

    m_status_timestamp_isSet = false;
    m_status_timestamp_isValid = false;

    m_system_trace_audit_number_isSet = false;
    m_system_trace_audit_number_isValid = false;

    m_transaction_amount_isSet = false;
    m_transaction_amount_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAITransaction_155::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransaction_155::fromJsonObject(QJsonObject json) {

    m_account_uri_isValid = ::OpenAPI::fromJsonValue(m_account_uri, json[QString("account_uri")]);
    m_account_uri_isSet = !json[QString("account_uri")].isNull() && m_account_uri_isValid;

    m_authorization_id_isValid = ::OpenAPI::fromJsonValue(m_authorization_id, json[QString("authorization_id")]);
    m_authorization_id_isSet = !json[QString("authorization_id")].isNull() && m_authorization_id_isValid;

    m_create_timestamp_isValid = ::OpenAPI::fromJsonValue(m_create_timestamp, json[QString("create_timestamp")]);
    m_create_timestamp_isSet = !json[QString("create_timestamp")].isNull() && m_create_timestamp_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_network_status_code_isValid = ::OpenAPI::fromJsonValue(m_network_status_code, json[QString("network_status_code")]);
    m_network_status_code_isSet = !json[QString("network_status_code")].isNull() && m_network_status_code_isValid;

    m_network_status_description_isValid = ::OpenAPI::fromJsonValue(m_network_status_description, json[QString("network_status_description")]);
    m_network_status_description_isSet = !json[QString("network_status_description")].isNull() && m_network_status_description_isValid;

    m_payment_account_reference_isValid = ::OpenAPI::fromJsonValue(m_payment_account_reference, json[QString("payment_account_reference")]);
    m_payment_account_reference_isSet = !json[QString("payment_account_reference")].isNull() && m_payment_account_reference_isValid;

    m_resource_type_isValid = ::OpenAPI::fromJsonValue(m_resource_type, json[QString("resource_type")]);
    m_resource_type_isSet = !json[QString("resource_type")].isNull() && m_resource_type_isValid;

    m_retrieval_reference_isValid = ::OpenAPI::fromJsonValue(m_retrieval_reference, json[QString("retrieval_reference")]);
    m_retrieval_reference_isSet = !json[QString("retrieval_reference")].isNull() && m_retrieval_reference_isValid;

    m_reversal_reason_isValid = ::OpenAPI::fromJsonValue(m_reversal_reason, json[QString("reversal_reason")]);
    m_reversal_reason_isSet = !json[QString("reversal_reason")].isNull() && m_reversal_reason_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_reason_isValid = ::OpenAPI::fromJsonValue(m_status_reason, json[QString("status_reason")]);
    m_status_reason_isSet = !json[QString("status_reason")].isNull() && m_status_reason_isValid;

    m_status_timestamp_isValid = ::OpenAPI::fromJsonValue(m_status_timestamp, json[QString("status_timestamp")]);
    m_status_timestamp_isSet = !json[QString("status_timestamp")].isNull() && m_status_timestamp_isValid;

    m_system_trace_audit_number_isValid = ::OpenAPI::fromJsonValue(m_system_trace_audit_number, json[QString("system_trace_audit_number")]);
    m_system_trace_audit_number_isSet = !json[QString("system_trace_audit_number")].isNull() && m_system_trace_audit_number_isValid;

    m_transaction_amount_isValid = ::OpenAPI::fromJsonValue(m_transaction_amount, json[QString("transaction_amount")]);
    m_transaction_amount_isSet = !json[QString("transaction_amount")].isNull() && m_transaction_amount_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAITransaction_155::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransaction_155::asJsonObject() const {
    QJsonObject obj;
    if (m_account_uri_isSet) {
        obj.insert(QString("account_uri"), ::OpenAPI::toJsonValue(m_account_uri));
    }
    if (m_authorization_id_isSet) {
        obj.insert(QString("authorization_id"), ::OpenAPI::toJsonValue(m_authorization_id));
    }
    if (m_create_timestamp_isSet) {
        obj.insert(QString("create_timestamp"), ::OpenAPI::toJsonValue(m_create_timestamp));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_network_status_code_isSet) {
        obj.insert(QString("network_status_code"), ::OpenAPI::toJsonValue(m_network_status_code));
    }
    if (m_network_status_description_isSet) {
        obj.insert(QString("network_status_description"), ::OpenAPI::toJsonValue(m_network_status_description));
    }
    if (m_payment_account_reference_isSet) {
        obj.insert(QString("payment_account_reference"), ::OpenAPI::toJsonValue(m_payment_account_reference));
    }
    if (m_resource_type_isSet) {
        obj.insert(QString("resource_type"), ::OpenAPI::toJsonValue(m_resource_type));
    }
    if (m_retrieval_reference_isSet) {
        obj.insert(QString("retrieval_reference"), ::OpenAPI::toJsonValue(m_retrieval_reference));
    }
    if (m_reversal_reason_isSet) {
        obj.insert(QString("reversal_reason"), ::OpenAPI::toJsonValue(m_reversal_reason));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_reason_isSet) {
        obj.insert(QString("status_reason"), ::OpenAPI::toJsonValue(m_status_reason));
    }
    if (m_status_timestamp_isSet) {
        obj.insert(QString("status_timestamp"), ::OpenAPI::toJsonValue(m_status_timestamp));
    }
    if (m_system_trace_audit_number_isSet) {
        obj.insert(QString("system_trace_audit_number"), ::OpenAPI::toJsonValue(m_system_trace_audit_number));
    }
    if (m_transaction_amount.isSet()) {
        obj.insert(QString("transaction_amount"), ::OpenAPI::toJsonValue(m_transaction_amount));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAITransaction_155::getAccountUri() const {
    return m_account_uri;
}
void OAITransaction_155::setAccountUri(const QString &account_uri) {
    m_account_uri = account_uri;
    m_account_uri_isSet = true;
}

bool OAITransaction_155::is_account_uri_Set() const{
    return m_account_uri_isSet;
}

bool OAITransaction_155::is_account_uri_Valid() const{
    return m_account_uri_isValid;
}

QString OAITransaction_155::getAuthorizationId() const {
    return m_authorization_id;
}
void OAITransaction_155::setAuthorizationId(const QString &authorization_id) {
    m_authorization_id = authorization_id;
    m_authorization_id_isSet = true;
}

bool OAITransaction_155::is_authorization_id_Set() const{
    return m_authorization_id_isSet;
}

bool OAITransaction_155::is_authorization_id_Valid() const{
    return m_authorization_id_isValid;
}

QString OAITransaction_155::getCreateTimestamp() const {
    return m_create_timestamp;
}
void OAITransaction_155::setCreateTimestamp(const QString &create_timestamp) {
    m_create_timestamp = create_timestamp;
    m_create_timestamp_isSet = true;
}

bool OAITransaction_155::is_create_timestamp_Set() const{
    return m_create_timestamp_isSet;
}

bool OAITransaction_155::is_create_timestamp_Valid() const{
    return m_create_timestamp_isValid;
}

QString OAITransaction_155::getId() const {
    return m_id;
}
void OAITransaction_155::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITransaction_155::is_id_Set() const{
    return m_id_isSet;
}

bool OAITransaction_155::is_id_Valid() const{
    return m_id_isValid;
}

QString OAITransaction_155::getNetwork() const {
    return m_network;
}
void OAITransaction_155::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAITransaction_155::is_network_Set() const{
    return m_network_isSet;
}

bool OAITransaction_155::is_network_Valid() const{
    return m_network_isValid;
}

QString OAITransaction_155::getNetworkStatusCode() const {
    return m_network_status_code;
}
void OAITransaction_155::setNetworkStatusCode(const QString &network_status_code) {
    m_network_status_code = network_status_code;
    m_network_status_code_isSet = true;
}

bool OAITransaction_155::is_network_status_code_Set() const{
    return m_network_status_code_isSet;
}

bool OAITransaction_155::is_network_status_code_Valid() const{
    return m_network_status_code_isValid;
}

QString OAITransaction_155::getNetworkStatusDescription() const {
    return m_network_status_description;
}
void OAITransaction_155::setNetworkStatusDescription(const QString &network_status_description) {
    m_network_status_description = network_status_description;
    m_network_status_description_isSet = true;
}

bool OAITransaction_155::is_network_status_description_Set() const{
    return m_network_status_description_isSet;
}

bool OAITransaction_155::is_network_status_description_Valid() const{
    return m_network_status_description_isValid;
}

QString OAITransaction_155::getPaymentAccountReference() const {
    return m_payment_account_reference;
}
void OAITransaction_155::setPaymentAccountReference(const QString &payment_account_reference) {
    m_payment_account_reference = payment_account_reference;
    m_payment_account_reference_isSet = true;
}

bool OAITransaction_155::is_payment_account_reference_Set() const{
    return m_payment_account_reference_isSet;
}

bool OAITransaction_155::is_payment_account_reference_Valid() const{
    return m_payment_account_reference_isValid;
}

QString OAITransaction_155::getResourceType() const {
    return m_resource_type;
}
void OAITransaction_155::setResourceType(const QString &resource_type) {
    m_resource_type = resource_type;
    m_resource_type_isSet = true;
}

bool OAITransaction_155::is_resource_type_Set() const{
    return m_resource_type_isSet;
}

bool OAITransaction_155::is_resource_type_Valid() const{
    return m_resource_type_isValid;
}

QString OAITransaction_155::getRetrievalReference() const {
    return m_retrieval_reference;
}
void OAITransaction_155::setRetrievalReference(const QString &retrieval_reference) {
    m_retrieval_reference = retrieval_reference;
    m_retrieval_reference_isSet = true;
}

bool OAITransaction_155::is_retrieval_reference_Set() const{
    return m_retrieval_reference_isSet;
}

bool OAITransaction_155::is_retrieval_reference_Valid() const{
    return m_retrieval_reference_isValid;
}

QString OAITransaction_155::getReversalReason() const {
    return m_reversal_reason;
}
void OAITransaction_155::setReversalReason(const QString &reversal_reason) {
    m_reversal_reason = reversal_reason;
    m_reversal_reason_isSet = true;
}

bool OAITransaction_155::is_reversal_reason_Set() const{
    return m_reversal_reason_isSet;
}

bool OAITransaction_155::is_reversal_reason_Valid() const{
    return m_reversal_reason_isValid;
}

QString OAITransaction_155::getStatus() const {
    return m_status;
}
void OAITransaction_155::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAITransaction_155::is_status_Set() const{
    return m_status_isSet;
}

bool OAITransaction_155::is_status_Valid() const{
    return m_status_isValid;
}

QString OAITransaction_155::getStatusReason() const {
    return m_status_reason;
}
void OAITransaction_155::setStatusReason(const QString &status_reason) {
    m_status_reason = status_reason;
    m_status_reason_isSet = true;
}

bool OAITransaction_155::is_status_reason_Set() const{
    return m_status_reason_isSet;
}

bool OAITransaction_155::is_status_reason_Valid() const{
    return m_status_reason_isValid;
}

QString OAITransaction_155::getStatusTimestamp() const {
    return m_status_timestamp;
}
void OAITransaction_155::setStatusTimestamp(const QString &status_timestamp) {
    m_status_timestamp = status_timestamp;
    m_status_timestamp_isSet = true;
}

bool OAITransaction_155::is_status_timestamp_Set() const{
    return m_status_timestamp_isSet;
}

bool OAITransaction_155::is_status_timestamp_Valid() const{
    return m_status_timestamp_isValid;
}

QString OAITransaction_155::getSystemTraceAuditNumber() const {
    return m_system_trace_audit_number;
}
void OAITransaction_155::setSystemTraceAuditNumber(const QString &system_trace_audit_number) {
    m_system_trace_audit_number = system_trace_audit_number;
    m_system_trace_audit_number_isSet = true;
}

bool OAITransaction_155::is_system_trace_audit_number_Set() const{
    return m_system_trace_audit_number_isSet;
}

bool OAITransaction_155::is_system_trace_audit_number_Valid() const{
    return m_system_trace_audit_number_isValid;
}

OAITransactionAmount_156 OAITransaction_155::getTransactionAmount() const {
    return m_transaction_amount;
}
void OAITransaction_155::setTransactionAmount(const OAITransactionAmount_156 &transaction_amount) {
    m_transaction_amount = transaction_amount;
    m_transaction_amount_isSet = true;
}

bool OAITransaction_155::is_transaction_amount_Set() const{
    return m_transaction_amount_isSet;
}

bool OAITransaction_155::is_transaction_amount_Valid() const{
    return m_transaction_amount_isValid;
}

QString OAITransaction_155::getType() const {
    return m_type;
}
void OAITransaction_155::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAITransaction_155::is_type_Set() const{
    return m_type_isSet;
}

bool OAITransaction_155::is_type_Valid() const{
    return m_type_isValid;
}

bool OAITransaction_155::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_authorization_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_status_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_status_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_account_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_retrieval_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reversal_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_trace_audit_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransaction_155::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
