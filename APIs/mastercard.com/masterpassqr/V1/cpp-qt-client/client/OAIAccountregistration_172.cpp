/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountregistration_172.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountregistration_172::OAIAccountregistration_172(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountregistration_172::OAIAccountregistration_172() {
    this->initializeModel();
}

OAIAccountregistration_172::~OAIAccountregistration_172() {}

void OAIAccountregistration_172::initializeModel() {

    m_account_registration_reference_isSet = false;
    m_account_registration_reference_isValid = false;

    m_account_uri_isSet = false;
    m_account_uri_isValid = false;

    m_notification_partner_id_isSet = false;
    m_notification_partner_id_isValid = false;

    m_notification_partner_name_isSet = false;
    m_notification_partner_name_isValid = false;
}

void OAIAccountregistration_172::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountregistration_172::fromJsonObject(QJsonObject json) {

    m_account_registration_reference_isValid = ::OpenAPI::fromJsonValue(m_account_registration_reference, json[QString("account_registration_reference")]);
    m_account_registration_reference_isSet = !json[QString("account_registration_reference")].isNull() && m_account_registration_reference_isValid;

    m_account_uri_isValid = ::OpenAPI::fromJsonValue(m_account_uri, json[QString("account_uri")]);
    m_account_uri_isSet = !json[QString("account_uri")].isNull() && m_account_uri_isValid;

    m_notification_partner_id_isValid = ::OpenAPI::fromJsonValue(m_notification_partner_id, json[QString("notification_partner_id")]);
    m_notification_partner_id_isSet = !json[QString("notification_partner_id")].isNull() && m_notification_partner_id_isValid;

    m_notification_partner_name_isValid = ::OpenAPI::fromJsonValue(m_notification_partner_name, json[QString("notification_partner_name")]);
    m_notification_partner_name_isSet = !json[QString("notification_partner_name")].isNull() && m_notification_partner_name_isValid;
}

QString OAIAccountregistration_172::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountregistration_172::asJsonObject() const {
    QJsonObject obj;
    if (m_account_registration_reference_isSet) {
        obj.insert(QString("account_registration_reference"), ::OpenAPI::toJsonValue(m_account_registration_reference));
    }
    if (m_account_uri_isSet) {
        obj.insert(QString("account_uri"), ::OpenAPI::toJsonValue(m_account_uri));
    }
    if (m_notification_partner_id_isSet) {
        obj.insert(QString("notification_partner_id"), ::OpenAPI::toJsonValue(m_notification_partner_id));
    }
    if (m_notification_partner_name_isSet) {
        obj.insert(QString("notification_partner_name"), ::OpenAPI::toJsonValue(m_notification_partner_name));
    }
    return obj;
}

QString OAIAccountregistration_172::getAccountRegistrationReference() const {
    return m_account_registration_reference;
}
void OAIAccountregistration_172::setAccountRegistrationReference(const QString &account_registration_reference) {
    m_account_registration_reference = account_registration_reference;
    m_account_registration_reference_isSet = true;
}

bool OAIAccountregistration_172::is_account_registration_reference_Set() const{
    return m_account_registration_reference_isSet;
}

bool OAIAccountregistration_172::is_account_registration_reference_Valid() const{
    return m_account_registration_reference_isValid;
}

QString OAIAccountregistration_172::getAccountUri() const {
    return m_account_uri;
}
void OAIAccountregistration_172::setAccountUri(const QString &account_uri) {
    m_account_uri = account_uri;
    m_account_uri_isSet = true;
}

bool OAIAccountregistration_172::is_account_uri_Set() const{
    return m_account_uri_isSet;
}

bool OAIAccountregistration_172::is_account_uri_Valid() const{
    return m_account_uri_isValid;
}

QString OAIAccountregistration_172::getNotificationPartnerId() const {
    return m_notification_partner_id;
}
void OAIAccountregistration_172::setNotificationPartnerId(const QString &notification_partner_id) {
    m_notification_partner_id = notification_partner_id;
    m_notification_partner_id_isSet = true;
}

bool OAIAccountregistration_172::is_notification_partner_id_Set() const{
    return m_notification_partner_id_isSet;
}

bool OAIAccountregistration_172::is_notification_partner_id_Valid() const{
    return m_notification_partner_id_isValid;
}

QString OAIAccountregistration_172::getNotificationPartnerName() const {
    return m_notification_partner_name;
}
void OAIAccountregistration_172::setNotificationPartnerName(const QString &notification_partner_name) {
    m_notification_partner_name = notification_partner_name;
    m_notification_partner_name_isSet = true;
}

bool OAIAccountregistration_172::is_notification_partner_name_Set() const{
    return m_notification_partner_name_isSet;
}

bool OAIAccountregistration_172::is_notification_partner_name_Valid() const{
    return m_notification_partner_name_isValid;
}

bool OAIAccountregistration_172::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_registration_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_partner_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_partner_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountregistration_172::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
