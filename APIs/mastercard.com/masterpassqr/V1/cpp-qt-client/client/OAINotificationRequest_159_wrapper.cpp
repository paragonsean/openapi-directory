/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINotificationRequest_159_wrapper.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINotificationRequest_159_wrapper::OAINotificationRequest_159_wrapper(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINotificationRequest_159_wrapper::OAINotificationRequest_159_wrapper() {
    this->initializeModel();
}

OAINotificationRequest_159_wrapper::~OAINotificationRequest_159_wrapper() {}

void OAINotificationRequest_159_wrapper::initializeModel() {

    m_notification_request_isSet = false;
    m_notification_request_isValid = false;
}

void OAINotificationRequest_159_wrapper::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINotificationRequest_159_wrapper::fromJsonObject(QJsonObject json) {

    m_notification_request_isValid = ::OpenAPI::fromJsonValue(m_notification_request, json[QString("notification_request")]);
    m_notification_request_isSet = !json[QString("notification_request")].isNull() && m_notification_request_isValid;
}

QString OAINotificationRequest_159_wrapper::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINotificationRequest_159_wrapper::asJsonObject() const {
    QJsonObject obj;
    if (m_notification_request.isSet()) {
        obj.insert(QString("notification_request"), ::OpenAPI::toJsonValue(m_notification_request));
    }
    return obj;
}

OAINotificationRequest_159 OAINotificationRequest_159_wrapper::getNotificationRequest() const {
    return m_notification_request;
}
void OAINotificationRequest_159_wrapper::setNotificationRequest(const OAINotificationRequest_159 &notification_request) {
    m_notification_request = notification_request;
    m_notification_request_isSet = true;
}

bool OAINotificationRequest_159_wrapper::is_notification_request_Set() const{
    return m_notification_request_isSet;
}

bool OAINotificationRequest_159_wrapper::is_notification_request_Valid() const{
    return m_notification_request_isValid;
}

bool OAINotificationRequest_159_wrapper::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_notification_request.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINotificationRequest_159_wrapper::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
