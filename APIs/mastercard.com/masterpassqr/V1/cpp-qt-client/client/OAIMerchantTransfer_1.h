/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMerchantTransfer_1.h
 *
 * Contains the details of the request message.
 */

#ifndef OAIMerchantTransfer_1_H
#define OAIMerchantTransfer_1_H

#include <QJsonObject>

#include "OAIParticipant_13.h"
#include "OAIRecipient_7.h"
#include "OAIReconciliationData_11.h"
#include "OAISender_3.h"
#include "OAITransferAmount_2.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParticipant_13;
class OAIRecipient_7;
class OAIReconciliationData_11;
class OAISender_3;
class OAITransferAmount_2;

class OAIMerchantTransfer_1 : public OAIObject {
public:
    OAIMerchantTransfer_1();
    OAIMerchantTransfer_1(QString json);
    ~OAIMerchantTransfer_1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalMessage() const;
    void setAdditionalMessage(const QString &additional_message);
    bool is_additional_message_Set() const;
    bool is_additional_message_Valid() const;

    QString getConvenienceAmount() const;
    void setConvenienceAmount(const QString &convenience_amount);
    bool is_convenience_amount_Set() const;
    bool is_convenience_amount_Valid() const;

    QString getConvenienceIndicator() const;
    void setConvenienceIndicator(const QString &convenience_indicator);
    bool is_convenience_indicator_Set() const;
    bool is_convenience_indicator_Valid() const;

    QString getDigitalAccountReferenceNumber() const;
    void setDigitalAccountReferenceNumber(const QString &digital_account_reference_number);
    bool is_digital_account_reference_number_Set() const;
    bool is_digital_account_reference_number_Valid() const;

    QString getInterchangeRateDesignator() const;
    void setInterchangeRateDesignator(const QString &interchange_rate_designator);
    bool is_interchange_rate_designator_Set() const;
    bool is_interchange_rate_designator_Valid() const;

    QString getMastercardAssignedId() const;
    void setMastercardAssignedId(const QString &mastercard_assigned_id);
    bool is_mastercard_assigned_id_Set() const;
    bool is_mastercard_assigned_id_Valid() const;

    OAIParticipant_13 getParticipant() const;
    void setParticipant(const OAIParticipant_13 &participant);
    bool is_participant_Set() const;
    bool is_participant_Valid() const;

    QString getParticipationId() const;
    void setParticipationId(const QString &participation_id);
    bool is_participation_id_Set() const;
    bool is_participation_id_Valid() const;

    QString getPaymentOriginationCountry() const;
    void setPaymentOriginationCountry(const QString &payment_origination_country);
    bool is_payment_origination_country_Set() const;
    bool is_payment_origination_country_Valid() const;

    QString getPaymentType() const;
    void setPaymentType(const QString &payment_type);
    bool is_payment_type_Set() const;
    bool is_payment_type_Valid() const;

    QString getProcessorId() const;
    void setProcessorId(const QString &processor_id);
    bool is_processor_id_Set() const;
    bool is_processor_id_Valid() const;

    QString getQrData() const;
    void setQrData(const QString &qr_data);
    bool is_qr_data_Set() const;
    bool is_qr_data_Valid() const;

    OAIRecipient_7 getRecipient() const;
    void setRecipient(const OAIRecipient_7 &recipient);
    bool is_recipient_Set() const;
    bool is_recipient_Valid() const;

    QString getRecipientAccountUri() const;
    void setRecipientAccountUri(const QString &recipient_account_uri);
    bool is_recipient_account_uri_Set() const;
    bool is_recipient_account_uri_Valid() const;

    OAIReconciliationData_11 getReconciliationData() const;
    void setReconciliationData(const OAIReconciliationData_11 &reconciliation_data);
    bool is_reconciliation_data_Set() const;
    bool is_reconciliation_data_Valid() const;

    QString getRoutingTransitNumber() const;
    void setRoutingTransitNumber(const QString &routing_transit_number);
    bool is_routing_transit_number_Set() const;
    bool is_routing_transit_number_Valid() const;

    OAISender_3 getSender() const;
    void setSender(const OAISender_3 &sender);
    bool is_sender_Set() const;
    bool is_sender_Valid() const;

    QString getSenderAccountUri() const;
    void setSenderAccountUri(const QString &sender_account_uri);
    bool is_sender_account_uri_Set() const;
    bool is_sender_account_uri_Valid() const;

    QString getTransactionLocalDateTime() const;
    void setTransactionLocalDateTime(const QString &transaction_local_date_time);
    bool is_transaction_local_date_time_Set() const;
    bool is_transaction_local_date_time_Valid() const;

    OAITransferAmount_2 getTransferAmount() const;
    void setTransferAmount(const OAITransferAmount_2 &transfer_amount);
    bool is_transfer_amount_Set() const;
    bool is_transfer_amount_Valid() const;

    QString getTransferReference() const;
    void setTransferReference(const QString &transfer_reference);
    bool is_transfer_reference_Set() const;
    bool is_transfer_reference_Valid() const;

    QString getUniqueReferenceNumber() const;
    void setUniqueReferenceNumber(const QString &unique_reference_number);
    bool is_unique_reference_number_Set() const;
    bool is_unique_reference_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_additional_message;
    bool m_additional_message_isSet;
    bool m_additional_message_isValid;

    QString m_convenience_amount;
    bool m_convenience_amount_isSet;
    bool m_convenience_amount_isValid;

    QString m_convenience_indicator;
    bool m_convenience_indicator_isSet;
    bool m_convenience_indicator_isValid;

    QString m_digital_account_reference_number;
    bool m_digital_account_reference_number_isSet;
    bool m_digital_account_reference_number_isValid;

    QString m_interchange_rate_designator;
    bool m_interchange_rate_designator_isSet;
    bool m_interchange_rate_designator_isValid;

    QString m_mastercard_assigned_id;
    bool m_mastercard_assigned_id_isSet;
    bool m_mastercard_assigned_id_isValid;

    OAIParticipant_13 m_participant;
    bool m_participant_isSet;
    bool m_participant_isValid;

    QString m_participation_id;
    bool m_participation_id_isSet;
    bool m_participation_id_isValid;

    QString m_payment_origination_country;
    bool m_payment_origination_country_isSet;
    bool m_payment_origination_country_isValid;

    QString m_payment_type;
    bool m_payment_type_isSet;
    bool m_payment_type_isValid;

    QString m_processor_id;
    bool m_processor_id_isSet;
    bool m_processor_id_isValid;

    QString m_qr_data;
    bool m_qr_data_isSet;
    bool m_qr_data_isValid;

    OAIRecipient_7 m_recipient;
    bool m_recipient_isSet;
    bool m_recipient_isValid;

    QString m_recipient_account_uri;
    bool m_recipient_account_uri_isSet;
    bool m_recipient_account_uri_isValid;

    OAIReconciliationData_11 m_reconciliation_data;
    bool m_reconciliation_data_isSet;
    bool m_reconciliation_data_isValid;

    QString m_routing_transit_number;
    bool m_routing_transit_number_isSet;
    bool m_routing_transit_number_isValid;

    OAISender_3 m_sender;
    bool m_sender_isSet;
    bool m_sender_isValid;

    QString m_sender_account_uri;
    bool m_sender_account_uri_isSet;
    bool m_sender_account_uri_isValid;

    QString m_transaction_local_date_time;
    bool m_transaction_local_date_time_isSet;
    bool m_transaction_local_date_time_isValid;

    OAITransferAmount_2 m_transfer_amount;
    bool m_transfer_amount_isSet;
    bool m_transfer_amount_isValid;

    QString m_transfer_reference;
    bool m_transfer_reference_isSet;
    bool m_transfer_reference_isValid;

    QString m_unique_reference_number;
    bool m_unique_reference_number_isSet;
    bool m_unique_reference_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMerchantTransfer_1)

#endif // OAIMerchantTransfer_1_H
