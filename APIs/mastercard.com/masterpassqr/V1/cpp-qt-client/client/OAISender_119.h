/**
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISender_119.h
 *
 * Sender information is required for non-tokenized transactions. If a pan number is provided directly, the sender information should be provided. Details- Conditional
 */

#ifndef OAISender_119_H
#define OAISender_119_H

#include <QJsonObject>

#include "OAIAdditionalMerchantData_121.h"
#include "OAIAddress_120.h"
#include "OAIGovernmentIds_122.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditionalMerchantData_121;
class OAIAddress_120;
class OAIGovernmentIds_122;

class OAISender_119 : public OAIObject {
public:
    OAISender_119();
    OAISender_119(QString json);
    ~OAISender_119() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAdditionalMerchantData_121 getAdditionalMerchantData() const;
    void setAdditionalMerchantData(const OAIAdditionalMerchantData_121 &additional_merchant_data);
    bool is_additional_merchant_data_Set() const;
    bool is_additional_merchant_data_Valid() const;

    OAIAddress_120 getAddress() const;
    void setAddress(const OAIAddress_120 &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getDateOfBirth() const;
    void setDateOfBirth(const QString &date_of_birth);
    bool is_date_of_birth_Set() const;
    bool is_date_of_birth_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    OAIGovernmentIds_122 getGovernmentIds() const;
    void setGovernmentIds(const OAIGovernmentIds_122 &government_ids);
    bool is_government_ids_Set() const;
    bool is_government_ids_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getMiddleName() const;
    void setMiddleName(const QString &middle_name);
    bool is_middle_name_Set() const;
    bool is_middle_name_Valid() const;

    QString getNationality() const;
    void setNationality(const QString &nationality);
    bool is_nationality_Set() const;
    bool is_nationality_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAdditionalMerchantData_121 m_additional_merchant_data;
    bool m_additional_merchant_data_isSet;
    bool m_additional_merchant_data_isValid;

    OAIAddress_120 m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_date_of_birth;
    bool m_date_of_birth_isSet;
    bool m_date_of_birth_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    OAIGovernmentIds_122 m_government_ids;
    bool m_government_ids_isSet;
    bool m_government_ids_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_middle_name;
    bool m_middle_name_isSet;
    bool m_middle_name_isValid;

    QString m_nationality;
    bool m_nationality_isSet;
    bool m_nationality_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISender_119)

#endif // OAISender_119_H
