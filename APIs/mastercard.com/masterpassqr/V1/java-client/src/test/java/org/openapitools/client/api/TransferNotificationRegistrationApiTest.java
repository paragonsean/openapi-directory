/*
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Accountregistration167Wrapper;
import org.openapitools.client.model.Accountregistration168Wrapper;
import org.openapitools.client.model.Accountregistration169Wrapper;
import org.openapitools.client.model.Accountregistration170Wrapper;
import org.openapitools.client.model.Accountregistration171Wrapper;
import org.openapitools.client.model.Accountregistration172Wrapper;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransferNotificationRegistrationApi
 */
@Disabled
public class TransferNotificationRegistrationApiTest {

    private final TransferNotificationRegistrationApi api = new TransferNotificationRegistrationApi();

    /**
     * This service allows Mastercard Merchant QR originating and receiving partners to register a PAN and service provider to receive notifications on an inbound Merchant Refund or Merchant Payment Transaction.
     *
     * This service allows Mastercard Merchant QR originating and receiving partners to register a PAN and service provider to receive notifications on an inbound Merchant Refund or Merchant Payment Transaction.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTransferNotificationRegistrationTest() throws ApiException {
        String partnerId = null;
        Accountregistration167Wrapper accountregistration = null;
        Accountregistration168Wrapper response = api.createTransferNotificationRegistration(partnerId, accountregistration);
        // TODO: test validations
    }

    /**
     * This service allows Mastercard Merchant QR originating and receiving partners to delete a registered PAN for notifications. 
     *
     * This service allows Mastercard Merchant QR originating and receiving partners to delete a registered PAN for notifications. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTransferNotificationRegistrationTest() throws ApiException {
        String partnerId = null;
        String accountRegRef = null;
        Accountregistration171Wrapper response = api.deleteTransferNotificationRegistration(partnerId, accountRegRef);
        // TODO: test validations
    }

    /**
     * This service allows Mastercard Merchant QR originating and receiving partners to retrieve the service provider&#39;s information for a registered PAN for notifications. 
     *
     * This service allows Mastercard Merchant QR originating and receiving partners to retrieve the service provider&#39;s information for a registered PAN for notifications. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRegistrationAPIReadByTest() throws ApiException {
        String partnerId = null;
        String accountRegRef = null;
        Accountregistration172Wrapper response = api.notificationRegistrationAPIReadBy(partnerId, accountRegRef);
        // TODO: test validations
    }

    /**
     * This service allows Mastercard Merchant QR originating and receiving partners to update the notitification service provider for a registered PAN.
     *
     * This service allows Mastercard Merchant QR originating and receiving partners to update the notitification service provider for a registered PAN.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRegistrationAPIUpdateTest() throws ApiException {
        String partnerId = null;
        String accountRegRef = null;
        Accountregistration169Wrapper accountregistration = null;
        Accountregistration170Wrapper response = api.notificationRegistrationAPIUpdate(partnerId, accountRegRef, accountregistration);
        // TODO: test validations
    }

}
