/*
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.FundingTransfer118Wrapper;
import org.openapitools.client.model.Transfer129Wrapper;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FundingApi
 */
@Disabled
public class FundingApiTest {

    private final FundingApi api = new FundingApi();

    /**
     * The Funding Transaction enables the &#39;pull&#39; of money from the sender&#39;s card to the Transaction Originator who is providing the Person to Merchant service. The amount that is debited from the Funding Account (sending consumer&#39;s account) will be the amount &#39;pushed&#39; to the recipient via a payment transfer request.  Funds can be transferred from Mastercard速 or Maestro速 debit card accounts. To initiate the funding transaction, users can provide the sending consumer&#39;s Primary Account Number (PAN) or a unique identifier previously mapped to the sending consumer&#39;s account.
     *
     * The Funding Transaction enables the &#39;pull&#39; of money from the sender&#39;s card to the Transaction Originator who is providing the Person to Merchant service. The amount that is debited from the Funding Account (sending consumer&#39;s account) will be the amount &#39;pushed&#39; to the recipient via a payment transfer request.  Funds can be transferred from Mastercard速 or Maestro速 debit card accounts. To initiate the funding transaction, users can provide the sending consumer&#39;s Primary Account Number (PAN) or a unique identifier previously mapped to the sending consumer&#39;s account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFundingTest() throws ApiException {
        String partnerId = null;
        FundingTransfer118Wrapper fundingTransfer = null;
        Transfer129Wrapper response = api.createFunding(partnerId, fundingTransfer);
        // TODO: test validations
    }

}
