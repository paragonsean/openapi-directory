/*
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response details
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:09:31.069911-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Accountregistration172 {
  public static final String SERIALIZED_NAME_ACCOUNT_REGISTRATION_REFERENCE = "account_registration_reference";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_REGISTRATION_REFERENCE)
  private String accountRegistrationReference;

  public static final String SERIALIZED_NAME_ACCOUNT_URI = "account_uri";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_URI)
  private String accountUri;

  public static final String SERIALIZED_NAME_NOTIFICATION_PARTNER_ID = "notification_partner_id";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_PARTNER_ID)
  private String notificationPartnerId;

  public static final String SERIALIZED_NAME_NOTIFICATION_PARTNER_NAME = "notification_partner_name";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_PARTNER_NAME)
  private String notificationPartnerName;

  public Accountregistration172() {
  }

  public Accountregistration172 accountRegistrationReference(String accountRegistrationReference) {
    this.accountRegistrationReference = accountRegistrationReference;
    return this;
  }

  /**
   * System generated unique account registration identifier. Type: Alphanumberic Special Length: 40
   * @return accountRegistrationReference
   */
  @javax.annotation.Nullable
  public String getAccountRegistrationReference() {
    return accountRegistrationReference;
  }

  public void setAccountRegistrationReference(String accountRegistrationReference) {
    this.accountRegistrationReference = accountRegistrationReference;
  }


  public Accountregistration172 accountUri(String accountUri) {
    this.accountUri = accountUri;
    return this;
  }

  /**
   * URI describing the account. It will be a direct account reference, i.e. URI scheme will be pan. Valid Values- Refer &#39;Account URIs&#39;. 
   * @return accountUri
   */
  @javax.annotation.Nullable
  public String getAccountUri() {
    return accountUri;
  }

  public void setAccountUri(String accountUri) {
    this.accountUri = accountUri;
  }


  public Accountregistration172 notificationPartnerId(String notificationPartnerId) {
    this.notificationPartnerId = notificationPartnerId;
    return this;
  }

  /**
   * Service provider partner id registered to receive notifications. Type: Alphanumeric Special Length: 40
   * @return notificationPartnerId
   */
  @javax.annotation.Nullable
  public String getNotificationPartnerId() {
    return notificationPartnerId;
  }

  public void setNotificationPartnerId(String notificationPartnerId) {
    this.notificationPartnerId = notificationPartnerId;
  }


  public Accountregistration172 notificationPartnerName(String notificationPartnerName) {
    this.notificationPartnerName = notificationPartnerName;
    return this;
  }

  /**
   * Name of the service provider partner id registered. Type: Alphanumeric Special Length: 100
   * @return notificationPartnerName
   */
  @javax.annotation.Nullable
  public String getNotificationPartnerName() {
    return notificationPartnerName;
  }

  public void setNotificationPartnerName(String notificationPartnerName) {
    this.notificationPartnerName = notificationPartnerName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Accountregistration172 accountregistration172 = (Accountregistration172) o;
    return Objects.equals(this.accountRegistrationReference, accountregistration172.accountRegistrationReference) &&
        Objects.equals(this.accountUri, accountregistration172.accountUri) &&
        Objects.equals(this.notificationPartnerId, accountregistration172.notificationPartnerId) &&
        Objects.equals(this.notificationPartnerName, accountregistration172.notificationPartnerName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountRegistrationReference, accountUri, notificationPartnerId, notificationPartnerName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Accountregistration172 {\n");
    sb.append("    accountRegistrationReference: ").append(toIndentedString(accountRegistrationReference)).append("\n");
    sb.append("    accountUri: ").append(toIndentedString(accountUri)).append("\n");
    sb.append("    notificationPartnerId: ").append(toIndentedString(notificationPartnerId)).append("\n");
    sb.append("    notificationPartnerName: ").append(toIndentedString(notificationPartnerName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_registration_reference");
    openapiFields.add("account_uri");
    openapiFields.add("notification_partner_id");
    openapiFields.add("notification_partner_name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Accountregistration172
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Accountregistration172.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Accountregistration172 is not found in the empty JSON string", Accountregistration172.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Accountregistration172.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Accountregistration172` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_registration_reference") != null && !jsonObj.get("account_registration_reference").isJsonNull()) && !jsonObj.get("account_registration_reference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_registration_reference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_registration_reference").toString()));
      }
      if ((jsonObj.get("account_uri") != null && !jsonObj.get("account_uri").isJsonNull()) && !jsonObj.get("account_uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_uri").toString()));
      }
      if ((jsonObj.get("notification_partner_id") != null && !jsonObj.get("notification_partner_id").isJsonNull()) && !jsonObj.get("notification_partner_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notification_partner_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notification_partner_id").toString()));
      }
      if ((jsonObj.get("notification_partner_name") != null && !jsonObj.get("notification_partner_name").isJsonNull()) && !jsonObj.get("notification_partner_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notification_partner_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notification_partner_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Accountregistration172.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Accountregistration172' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Accountregistration172> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Accountregistration172.class));

       return (TypeAdapter<T>) new TypeAdapter<Accountregistration172>() {
           @Override
           public void write(JsonWriter out, Accountregistration172 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Accountregistration172 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Accountregistration172 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Accountregistration172
   * @throws IOException if the JSON string is invalid with respect to Accountregistration172
   */
  public static Accountregistration172 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Accountregistration172.class);
  }

  /**
   * Convert an instance of Accountregistration172 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

