/*
 * Send Person to Merchant
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: V1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.TransactionAmount25;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Array of transactions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:09:31.069911-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Transaction24 {
  public static final String SERIALIZED_NAME_ACCOUNT_URI = "account_uri";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_URI)
  private String accountUri;

  public static final String SERIALIZED_NAME_AUTHORIZATION_ID = "authorization_id";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION_ID)
  private String authorizationId;

  public static final String SERIALIZED_NAME_CONVENIENCE_AMOUNT = "convenience_amount";
  @SerializedName(SERIALIZED_NAME_CONVENIENCE_AMOUNT)
  private String convenienceAmount;

  public static final String SERIALIZED_NAME_CONVENIENCE_INDICATOR = "convenience_indicator";
  @SerializedName(SERIALIZED_NAME_CONVENIENCE_INDICATOR)
  private String convenienceIndicator;

  public static final String SERIALIZED_NAME_CREATE_TIMESTAMP = "create_timestamp";
  @SerializedName(SERIALIZED_NAME_CREATE_TIMESTAMP)
  private String createTimestamp;

  public static final String SERIALIZED_NAME_FUNDS_AVAILABILITY = "funds_availability";
  @SerializedName(SERIALIZED_NAME_FUNDS_AVAILABILITY)
  private String fundsAvailability;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private String network;

  public static final String SERIALIZED_NAME_NETWORK_STATUS_CODE = "network_status_code";
  @SerializedName(SERIALIZED_NAME_NETWORK_STATUS_CODE)
  private String networkStatusCode;

  public static final String SERIALIZED_NAME_NETWORK_STATUS_DESCRIPTION = "network_status_description";
  @SerializedName(SERIALIZED_NAME_NETWORK_STATUS_DESCRIPTION)
  private String networkStatusDescription;

  public static final String SERIALIZED_NAME_PAYMENT_ACCOUNT_REFERENCE = "payment_account_reference";
  @SerializedName(SERIALIZED_NAME_PAYMENT_ACCOUNT_REFERENCE)
  private String paymentAccountReference;

  public static final String SERIALIZED_NAME_QR_DATA = "qr_data";
  @SerializedName(SERIALIZED_NAME_QR_DATA)
  private String qrData;

  public static final String SERIALIZED_NAME_RESOURCE_TYPE = "resource_type";
  @SerializedName(SERIALIZED_NAME_RESOURCE_TYPE)
  private String resourceType;

  public static final String SERIALIZED_NAME_RETRIEVAL_REFERENCE = "retrieval_reference";
  @SerializedName(SERIALIZED_NAME_RETRIEVAL_REFERENCE)
  private String retrievalReference;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_REASON = "status_reason";
  @SerializedName(SERIALIZED_NAME_STATUS_REASON)
  private String statusReason;

  public static final String SERIALIZED_NAME_STATUS_TIMESTAMP = "status_timestamp";
  @SerializedName(SERIALIZED_NAME_STATUS_TIMESTAMP)
  private String statusTimestamp;

  public static final String SERIALIZED_NAME_SWITCH_SERIAL_NUMBER = "switch_serial_number";
  @SerializedName(SERIALIZED_NAME_SWITCH_SERIAL_NUMBER)
  private String switchSerialNumber;

  public static final String SERIALIZED_NAME_SYSTEM_TRACE_AUDIT_NUMBER = "system_trace_audit_number";
  @SerializedName(SERIALIZED_NAME_SYSTEM_TRACE_AUDIT_NUMBER)
  private String systemTraceAuditNumber;

  public static final String SERIALIZED_NAME_TRANSACTION_AMOUNT = "transaction_amount";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_AMOUNT)
  private TransactionAmount25 transactionAmount;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UNIQUE_REFERENCE_NUMBER = "unique_reference_number";
  @SerializedName(SERIALIZED_NAME_UNIQUE_REFERENCE_NUMBER)
  private String uniqueReferenceNumber;

  public Transaction24() {
  }

  public Transaction24 accountUri(String accountUri) {
    this.accountUri = accountUri;
    return this;
  }

  /**
   * Scrubbed URI describing the account. It will include masked account information but will not include security codes (e.g. CVC or expiration date for a card account). 
   * @return accountUri
   */
  @javax.annotation.Nullable
  public String getAccountUri() {
    return accountUri;
  }

  public void setAccountUri(String accountUri) {
    this.accountUri = accountUri;
  }


  public Transaction24 authorizationId(String authorizationId) {
    this.authorizationId = authorizationId;
    return this;
  }

  /**
   * Transaction response ID code that the authorizing institution assigns.    Type: Alphanumeric [a-zA-Z 0-9], Length: 6.
   * @return authorizationId
   */
  @javax.annotation.Nullable
  public String getAuthorizationId() {
    return authorizationId;
  }

  public void setAuthorizationId(String authorizationId) {
    this.authorizationId = authorizationId;
  }


  public Transaction24 convenienceAmount(String convenienceAmount) {
    this.convenienceAmount = convenienceAmount;
    return this;
  }

  /**
   * Amount of the convenience fee. The decimal point is implied based on the transaction_amount.currency. \&quot;[0-9]*\&quot;. Max Length: 12. Value must be less than payment_transfer.amount.
   * @return convenienceAmount
   */
  @javax.annotation.Nullable
  public String getConvenienceAmount() {
    return convenienceAmount;
  }

  public void setConvenienceAmount(String convenienceAmount) {
    this.convenienceAmount = convenienceAmount;
  }


  public Transaction24 convenienceIndicator(String convenienceIndicator) {
    this.convenienceIndicator = convenienceIndicator;
    return this;
  }

  /**
   * Convenience fee type code. Min length: 2. Max Length: 2. Valid values  (01: Indicates Consumer should be prompted to enter tip 02: Indicates that merchant would mandatorily charge a flat convenience fee 03: Indicates that merchant would charge a percentage convenience fee)
   * @return convenienceIndicator
   */
  @javax.annotation.Nullable
  public String getConvenienceIndicator() {
    return convenienceIndicator;
  }

  public void setConvenienceIndicator(String convenienceIndicator) {
    this.convenienceIndicator = convenienceIndicator;
  }


  public Transaction24 createTimestamp(String createTimestamp) {
    this.createTimestamp = createTimestamp;
    return this;
  }

  /**
   * Date and time the transaction was created as an ISO 8601 format.   Type: Alphanumerical Special [A-Z 0-9-:], Maximum Length: 25
   * @return createTimestamp
   */
  @javax.annotation.Nullable
  public String getCreateTimestamp() {
    return createTimestamp;
  }

  public void setCreateTimestamp(String createTimestamp) {
    this.createTimestamp = createTimestamp;
  }


  public Transaction24 fundsAvailability(String fundsAvailability) {
    this.fundsAvailability = fundsAvailability;
    return this;
  }

  /**
   * An estimate of when the funds might be available. Actual Deposit Availability is determined by the financial institution. Values: IMMEDIATE, NEXT_BUSINESS_DAY, or TWO_TO_FIVE_BUSINESS_DAYS.   Type: Alpha Special [A-Z-], Maximum Length: 25
   * @return fundsAvailability
   */
  @javax.annotation.Nullable
  public String getFundsAvailability() {
    return fundsAvailability;
  }

  public void setFundsAvailability(String fundsAvailability) {
    this.fundsAvailability = fundsAvailability;
  }


  public Transaction24 id(String id) {
    this.id = id;
    return this;
  }

  /**
   * System generated unique transfer identifier.   Type: Alphanumeric Special [a-zA-Z 0-9 _], Maximum Length: 32
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Transaction24 network(String network) {
    this.network = network;
    return this;
  }

  /**
   * Name of the network that processed this transaction.   Type: Alpha [a-zA-Z], Maximum Length: 30
   * @return network
   */
  @javax.annotation.Nullable
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }


  public Transaction24 networkStatusCode(String networkStatusCode) {
    this.networkStatusCode = networkStatusCode;
    return this;
  }

  /**
   * Network Status Code for this transaction.   Type: Alphanumeric [a-zA-Z0-9], Maximum Length: 3
   * @return networkStatusCode
   */
  @javax.annotation.Nullable
  public String getNetworkStatusCode() {
    return networkStatusCode;
  }

  public void setNetworkStatusCode(String networkStatusCode) {
    this.networkStatusCode = networkStatusCode;
  }


  public Transaction24 networkStatusDescription(String networkStatusDescription) {
    this.networkStatusDescription = networkStatusDescription;
    return this;
  }

  /**
   * Network Status Description of this transaction.   Type: Alphanumeric Special [A-Z0-9 : ,.()-], Maximum Length: 255
   * @return networkStatusDescription
   */
  @javax.annotation.Nullable
  public String getNetworkStatusDescription() {
    return networkStatusDescription;
  }

  public void setNetworkStatusDescription(String networkStatusDescription) {
    this.networkStatusDescription = networkStatusDescription;
  }


  public Transaction24 paymentAccountReference(String paymentAccountReference) {
    this.paymentAccountReference = paymentAccountReference;
    return this;
  }

  /**
   * A unique value associated with a single PAN and attributed to all tokens associated with that PAN.    Type: Alphanumeric [a-zA-Z 0-9], Length: 29.
   * @return paymentAccountReference
   */
  @javax.annotation.Nullable
  public String getPaymentAccountReference() {
    return paymentAccountReference;
  }

  public void setPaymentAccountReference(String paymentAccountReference) {
    this.paymentAccountReference = paymentAccountReference;
  }


  public Transaction24 qrData(String qrData) {
    this.qrData = qrData;
    return this;
  }

  /**
   * Encoded QR (Quick Response) code data. Type: Alphanumeric and special characters [a-zA-Z0-9!\&quot;#$%&amp;&#39;()*+,-./\\:;&lt;&#x3D;&gt;?@[]_&#x60;{|}~], Maximum Length: 237
   * @return qrData
   */
  @javax.annotation.Nullable
  public String getQrData() {
    return qrData;
  }

  public void setQrData(String qrData) {
    this.qrData = qrData;
  }


  public Transaction24 resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

  /**
   * Type of resource. Valid value:  transaction.   Type: Alpha Special [a-z _], Maximum Length: 17
   * @return resourceType
   */
  @javax.annotation.Nullable
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }


  public Transaction24 retrievalReference(String retrievalReference) {
    this.retrievalReference = retrievalReference;
    return this;
  }

  /**
   * Unique reference number that identifies the transaction at the network.   Type: Numeric [0-9], Maximum Length: 24
   * @return retrievalReference
   */
  @javax.annotation.Nullable
  public String getRetrievalReference() {
    return retrievalReference;
  }

  public void setRetrievalReference(String retrievalReference) {
    this.retrievalReference = retrievalReference;
  }


  public Transaction24 status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Status of this transaction. Values: APPROVED, UNKNOWN.   Type: Alpha [A-Z], Maximum Length: 8
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public Transaction24 statusReason(String statusReason) {
    this.statusReason = statusReason;
    return this;
  }

  /**
   * Reason for status Values: APPROVED,UNKNOWN. The following status reason will be provided based on the status APPROVED: APPROVED; UNKNOWN:UNKNOWN.   Type: Alpha [A-Z], Maximum Length: 8
   * @return statusReason
   */
  @javax.annotation.Nullable
  public String getStatusReason() {
    return statusReason;
  }

  public void setStatusReason(String statusReason) {
    this.statusReason = statusReason;
  }


  public Transaction24 statusTimestamp(String statusTimestamp) {
    this.statusTimestamp = statusTimestamp;
    return this;
  }

  /**
   * Date and time of the status as an ISO 8601 format.   Type: Alphanumerical Special [A-Z 0-9-:], Maximum Length: 25
   * @return statusTimestamp
   */
  @javax.annotation.Nullable
  public String getStatusTimestamp() {
    return statusTimestamp;
  }

  public void setStatusTimestamp(String statusTimestamp) {
    this.statusTimestamp = statusTimestamp;
  }


  public Transaction24 switchSerialNumber(String switchSerialNumber) {
    this.switchSerialNumber = switchSerialNumber;
    return this;
  }

  /**
   * Unique transaction identification number (switch serial number) generated (or assigned) by the Single Message System.  Type: Numeric [0-9], Maximum Length: 9
   * @return switchSerialNumber
   */
  @javax.annotation.Nullable
  public String getSwitchSerialNumber() {
    return switchSerialNumber;
  }

  public void setSwitchSerialNumber(String switchSerialNumber) {
    this.switchSerialNumber = switchSerialNumber;
  }


  public Transaction24 systemTraceAuditNumber(String systemTraceAuditNumber) {
    this.systemTraceAuditNumber = systemTraceAuditNumber;
    return this;
  }

  /**
   * Unique system trace audit number for the transaction, the STAN ( system trace audit number ).   Type: Numeric [0-9], Maximum Length: 6
   * @return systemTraceAuditNumber
   */
  @javax.annotation.Nullable
  public String getSystemTraceAuditNumber() {
    return systemTraceAuditNumber;
  }

  public void setSystemTraceAuditNumber(String systemTraceAuditNumber) {
    this.systemTraceAuditNumber = systemTraceAuditNumber;
  }


  public Transaction24 transactionAmount(TransactionAmount25 transactionAmount) {
    this.transactionAmount = transactionAmount;
    return this;
  }

  /**
   * Get transactionAmount
   * @return transactionAmount
   */
  @javax.annotation.Nullable
  public TransactionAmount25 getTransactionAmount() {
    return transactionAmount;
  }

  public void setTransactionAmount(TransactionAmount25 transactionAmount) {
    this.transactionAmount = transactionAmount;
  }


  public Transaction24 type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Type of the transaction. Values: FUNDING, PAYMENT, FUNDING_REVERSAL, or PAYMENT_REVERSAL.   Type Alpha Special [A-Z-], Maximum Length: 16
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public Transaction24 uniqueReferenceNumber(String uniqueReferenceNumber) {
    this.uniqueReferenceNumber = uniqueReferenceNumber;
    return this;
  }

  /**
   * Unique reference number for the transaction.    Type: Alphanumeric [a-zA-Z 0-9], Maximum Length: 19
   * @return uniqueReferenceNumber
   */
  @javax.annotation.Nullable
  public String getUniqueReferenceNumber() {
    return uniqueReferenceNumber;
  }

  public void setUniqueReferenceNumber(String uniqueReferenceNumber) {
    this.uniqueReferenceNumber = uniqueReferenceNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transaction24 transaction24 = (Transaction24) o;
    return Objects.equals(this.accountUri, transaction24.accountUri) &&
        Objects.equals(this.authorizationId, transaction24.authorizationId) &&
        Objects.equals(this.convenienceAmount, transaction24.convenienceAmount) &&
        Objects.equals(this.convenienceIndicator, transaction24.convenienceIndicator) &&
        Objects.equals(this.createTimestamp, transaction24.createTimestamp) &&
        Objects.equals(this.fundsAvailability, transaction24.fundsAvailability) &&
        Objects.equals(this.id, transaction24.id) &&
        Objects.equals(this.network, transaction24.network) &&
        Objects.equals(this.networkStatusCode, transaction24.networkStatusCode) &&
        Objects.equals(this.networkStatusDescription, transaction24.networkStatusDescription) &&
        Objects.equals(this.paymentAccountReference, transaction24.paymentAccountReference) &&
        Objects.equals(this.qrData, transaction24.qrData) &&
        Objects.equals(this.resourceType, transaction24.resourceType) &&
        Objects.equals(this.retrievalReference, transaction24.retrievalReference) &&
        Objects.equals(this.status, transaction24.status) &&
        Objects.equals(this.statusReason, transaction24.statusReason) &&
        Objects.equals(this.statusTimestamp, transaction24.statusTimestamp) &&
        Objects.equals(this.switchSerialNumber, transaction24.switchSerialNumber) &&
        Objects.equals(this.systemTraceAuditNumber, transaction24.systemTraceAuditNumber) &&
        Objects.equals(this.transactionAmount, transaction24.transactionAmount) &&
        Objects.equals(this.type, transaction24.type) &&
        Objects.equals(this.uniqueReferenceNumber, transaction24.uniqueReferenceNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountUri, authorizationId, convenienceAmount, convenienceIndicator, createTimestamp, fundsAvailability, id, network, networkStatusCode, networkStatusDescription, paymentAccountReference, qrData, resourceType, retrievalReference, status, statusReason, statusTimestamp, switchSerialNumber, systemTraceAuditNumber, transactionAmount, type, uniqueReferenceNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transaction24 {\n");
    sb.append("    accountUri: ").append(toIndentedString(accountUri)).append("\n");
    sb.append("    authorizationId: ").append(toIndentedString(authorizationId)).append("\n");
    sb.append("    convenienceAmount: ").append(toIndentedString(convenienceAmount)).append("\n");
    sb.append("    convenienceIndicator: ").append(toIndentedString(convenienceIndicator)).append("\n");
    sb.append("    createTimestamp: ").append(toIndentedString(createTimestamp)).append("\n");
    sb.append("    fundsAvailability: ").append(toIndentedString(fundsAvailability)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    networkStatusCode: ").append(toIndentedString(networkStatusCode)).append("\n");
    sb.append("    networkStatusDescription: ").append(toIndentedString(networkStatusDescription)).append("\n");
    sb.append("    paymentAccountReference: ").append(toIndentedString(paymentAccountReference)).append("\n");
    sb.append("    qrData: ").append(toIndentedString(qrData)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    retrievalReference: ").append(toIndentedString(retrievalReference)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusReason: ").append(toIndentedString(statusReason)).append("\n");
    sb.append("    statusTimestamp: ").append(toIndentedString(statusTimestamp)).append("\n");
    sb.append("    switchSerialNumber: ").append(toIndentedString(switchSerialNumber)).append("\n");
    sb.append("    systemTraceAuditNumber: ").append(toIndentedString(systemTraceAuditNumber)).append("\n");
    sb.append("    transactionAmount: ").append(toIndentedString(transactionAmount)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uniqueReferenceNumber: ").append(toIndentedString(uniqueReferenceNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_uri");
    openapiFields.add("authorization_id");
    openapiFields.add("convenience_amount");
    openapiFields.add("convenience_indicator");
    openapiFields.add("create_timestamp");
    openapiFields.add("funds_availability");
    openapiFields.add("id");
    openapiFields.add("network");
    openapiFields.add("network_status_code");
    openapiFields.add("network_status_description");
    openapiFields.add("payment_account_reference");
    openapiFields.add("qr_data");
    openapiFields.add("resource_type");
    openapiFields.add("retrieval_reference");
    openapiFields.add("status");
    openapiFields.add("status_reason");
    openapiFields.add("status_timestamp");
    openapiFields.add("switch_serial_number");
    openapiFields.add("system_trace_audit_number");
    openapiFields.add("transaction_amount");
    openapiFields.add("type");
    openapiFields.add("unique_reference_number");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Transaction24
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Transaction24.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Transaction24 is not found in the empty JSON string", Transaction24.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Transaction24.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Transaction24` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account_uri") != null && !jsonObj.get("account_uri").isJsonNull()) && !jsonObj.get("account_uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_uri").toString()));
      }
      if ((jsonObj.get("authorization_id") != null && !jsonObj.get("authorization_id").isJsonNull()) && !jsonObj.get("authorization_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorization_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorization_id").toString()));
      }
      if ((jsonObj.get("convenience_amount") != null && !jsonObj.get("convenience_amount").isJsonNull()) && !jsonObj.get("convenience_amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `convenience_amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("convenience_amount").toString()));
      }
      if ((jsonObj.get("convenience_indicator") != null && !jsonObj.get("convenience_indicator").isJsonNull()) && !jsonObj.get("convenience_indicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `convenience_indicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("convenience_indicator").toString()));
      }
      if ((jsonObj.get("create_timestamp") != null && !jsonObj.get("create_timestamp").isJsonNull()) && !jsonObj.get("create_timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `create_timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("create_timestamp").toString()));
      }
      if ((jsonObj.get("funds_availability") != null && !jsonObj.get("funds_availability").isJsonNull()) && !jsonObj.get("funds_availability").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `funds_availability` to be a primitive type in the JSON string but got `%s`", jsonObj.get("funds_availability").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) && !jsonObj.get("network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network").toString()));
      }
      if ((jsonObj.get("network_status_code") != null && !jsonObj.get("network_status_code").isJsonNull()) && !jsonObj.get("network_status_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network_status_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network_status_code").toString()));
      }
      if ((jsonObj.get("network_status_description") != null && !jsonObj.get("network_status_description").isJsonNull()) && !jsonObj.get("network_status_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network_status_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network_status_description").toString()));
      }
      if ((jsonObj.get("payment_account_reference") != null && !jsonObj.get("payment_account_reference").isJsonNull()) && !jsonObj.get("payment_account_reference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_account_reference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_account_reference").toString()));
      }
      if ((jsonObj.get("qr_data") != null && !jsonObj.get("qr_data").isJsonNull()) && !jsonObj.get("qr_data").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qr_data` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qr_data").toString()));
      }
      if ((jsonObj.get("resource_type") != null && !jsonObj.get("resource_type").isJsonNull()) && !jsonObj.get("resource_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resource_type").toString()));
      }
      if ((jsonObj.get("retrieval_reference") != null && !jsonObj.get("retrieval_reference").isJsonNull()) && !jsonObj.get("retrieval_reference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `retrieval_reference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("retrieval_reference").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("status_reason") != null && !jsonObj.get("status_reason").isJsonNull()) && !jsonObj.get("status_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_reason").toString()));
      }
      if ((jsonObj.get("status_timestamp") != null && !jsonObj.get("status_timestamp").isJsonNull()) && !jsonObj.get("status_timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_timestamp").toString()));
      }
      if ((jsonObj.get("switch_serial_number") != null && !jsonObj.get("switch_serial_number").isJsonNull()) && !jsonObj.get("switch_serial_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `switch_serial_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("switch_serial_number").toString()));
      }
      if ((jsonObj.get("system_trace_audit_number") != null && !jsonObj.get("system_trace_audit_number").isJsonNull()) && !jsonObj.get("system_trace_audit_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `system_trace_audit_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("system_trace_audit_number").toString()));
      }
      // validate the optional field `transaction_amount`
      if (jsonObj.get("transaction_amount") != null && !jsonObj.get("transaction_amount").isJsonNull()) {
        TransactionAmount25.validateJsonElement(jsonObj.get("transaction_amount"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("unique_reference_number") != null && !jsonObj.get("unique_reference_number").isJsonNull()) && !jsonObj.get("unique_reference_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unique_reference_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unique_reference_number").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Transaction24.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Transaction24' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Transaction24> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Transaction24.class));

       return (TypeAdapter<T>) new TypeAdapter<Transaction24>() {
           @Override
           public void write(JsonWriter out, Transaction24 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Transaction24 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Transaction24 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Transaction24
   * @throws IOException if the JSON string is invalid with respect to Transaction24
   */
  public static Transaction24 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Transaction24.class);
  }

  /**
   * Convert an instance of Transaction24 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

