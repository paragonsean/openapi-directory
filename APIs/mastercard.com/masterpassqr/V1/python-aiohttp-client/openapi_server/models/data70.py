# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.merchant_transfer71 import MerchantTransfer71
from openapi_server import util


class Data70(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, merchant_transfer: List[MerchantTransfer71]=None):
        """Data70 - a model defined in OpenAPI

        :param merchant_transfer: The merchant_transfer of this Data70.
        """
        self.openapi_types = {
            'merchant_transfer': List[MerchantTransfer71]
        }

        self.attribute_map = {
            'merchant_transfer': 'merchant_transfer'
        }

        self._merchant_transfer = merchant_transfer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Data70':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Data_70 of this Data70.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def merchant_transfer(self):
        """Gets the merchant_transfer of this Data70.

        An array containing the Transactions in the transfer

        :return: The merchant_transfer of this Data70.
        :rtype: List[MerchantTransfer71]
        """
        return self._merchant_transfer

    @merchant_transfer.setter
    def merchant_transfer(self, merchant_transfer):
        """Sets the merchant_transfer of this Data70.

        An array containing the Transactions in the transfer

        :param merchant_transfer: The merchant_transfer of this Data70.
        :type merchant_transfer: List[MerchantTransfer71]
        """

        self._merchant_transfer = merchant_transfer
