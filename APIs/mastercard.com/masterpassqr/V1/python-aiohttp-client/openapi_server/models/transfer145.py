# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.recipient149 import Recipient149
from openapi_server.models.reconciliation_data157 import ReconciliationData157
from openapi_server.models.sender146 import Sender146
from openapi_server.models.transaction_history153 import TransactionHistory153
from openapi_server.models.transfer_amount152 import TransferAmount152
from openapi_server import util


class Transfer145(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel: str=None, created: str=None, device_id: str=None, id: str=None, location: str=None, original_status: str=None, payment_type: str=None, recipient: Recipient149=None, recipient_account_uri: str=None, reconciliation_data: ReconciliationData157=None, resource_type: str=None, sanction_screening_override: bool=None, sender: Sender146=None, sender_account_uri: str=None, statement_descriptor: str=None, status: str=None, status_timestamp: str=None, transaction_history: TransactionHistory153=None, transfer_amount: TransferAmount152=None, transfer_reference: str=None):
        """Transfer145 - a model defined in OpenAPI

        :param channel: The channel of this Transfer145.
        :param created: The created of this Transfer145.
        :param device_id: The device_id of this Transfer145.
        :param id: The id of this Transfer145.
        :param location: The location of this Transfer145.
        :param original_status: The original_status of this Transfer145.
        :param payment_type: The payment_type of this Transfer145.
        :param recipient: The recipient of this Transfer145.
        :param recipient_account_uri: The recipient_account_uri of this Transfer145.
        :param reconciliation_data: The reconciliation_data of this Transfer145.
        :param resource_type: The resource_type of this Transfer145.
        :param sanction_screening_override: The sanction_screening_override of this Transfer145.
        :param sender: The sender of this Transfer145.
        :param sender_account_uri: The sender_account_uri of this Transfer145.
        :param statement_descriptor: The statement_descriptor of this Transfer145.
        :param status: The status of this Transfer145.
        :param status_timestamp: The status_timestamp of this Transfer145.
        :param transaction_history: The transaction_history of this Transfer145.
        :param transfer_amount: The transfer_amount of this Transfer145.
        :param transfer_reference: The transfer_reference of this Transfer145.
        """
        self.openapi_types = {
            'channel': str,
            'created': str,
            'device_id': str,
            'id': str,
            'location': str,
            'original_status': str,
            'payment_type': str,
            'recipient': Recipient149,
            'recipient_account_uri': str,
            'reconciliation_data': ReconciliationData157,
            'resource_type': str,
            'sanction_screening_override': bool,
            'sender': Sender146,
            'sender_account_uri': str,
            'statement_descriptor': str,
            'status': str,
            'status_timestamp': str,
            'transaction_history': TransactionHistory153,
            'transfer_amount': TransferAmount152,
            'transfer_reference': str
        }

        self.attribute_map = {
            'channel': 'channel',
            'created': 'created',
            'device_id': 'device_id',
            'id': 'id',
            'location': 'location',
            'original_status': 'original_status',
            'payment_type': 'payment_type',
            'recipient': 'recipient',
            'recipient_account_uri': 'recipient_account_uri',
            'reconciliation_data': 'reconciliation_data',
            'resource_type': 'resource_type',
            'sanction_screening_override': 'sanction_screening_override',
            'sender': 'sender',
            'sender_account_uri': 'sender_account_uri',
            'statement_descriptor': 'statement_descriptor',
            'status': 'status',
            'status_timestamp': 'status_timestamp',
            'transaction_history': 'transaction_history',
            'transfer_amount': 'transfer_amount',
            'transfer_reference': 'transfer_reference'
        }

        self._channel = channel
        self._created = created
        self._device_id = device_id
        self._id = id
        self._location = location
        self._original_status = original_status
        self._payment_type = payment_type
        self._recipient = recipient
        self._recipient_account_uri = recipient_account_uri
        self._reconciliation_data = reconciliation_data
        self._resource_type = resource_type
        self._sanction_screening_override = sanction_screening_override
        self._sender = sender
        self._sender_account_uri = sender_account_uri
        self._statement_descriptor = statement_descriptor
        self._status = status
        self._status_timestamp = status_timestamp
        self._transaction_history = transaction_history
        self._transfer_amount = transfer_amount
        self._transfer_reference = transfer_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Transfer145':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Transfer_145 of this Transfer145.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel(self):
        """Gets the channel of this Transfer145.

        Initiation channel of the transfer request. Values: WEB, MOBILE, BANK, KIOSK.

        :return: The channel of this Transfer145.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this Transfer145.

        Initiation channel of the transfer request. Values: WEB, MOBILE, BANK, KIOSK.

        :param channel: The channel of this Transfer145.
        :type channel: str
        """

        self._channel = channel

    @property
    def created(self):
        """Gets the created of this Transfer145.

        Date and time the original transfer was created as an ISO 8601 Timestamp. Details- YYYY-MM-DDTHH:MM:SSZ Valid Values- Refer 'Date And Time Formats'

        :return: The created of this Transfer145.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Transfer145.

        Date and time the original transfer was created as an ISO 8601 Timestamp. Details- YYYY-MM-DDTHH:MM:SSZ Valid Values- Refer 'Date And Time Formats'

        :param created: The created of this Transfer145.
        :type created: str
        """

        self._created = created

    @property
    def device_id(self):
        """Gets the device_id of this Transfer145.

        The serial number of a device that initiated the transfer.

        :return: The device_id of this Transfer145.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this Transfer145.

        The serial number of a device that initiated the transfer.

        :param device_id: The device_id of this Transfer145.
        :type device_id: str
        """

        self._device_id = device_id

    @property
    def id(self):
        """Gets the id of this Transfer145.

        System generated unique transfer identifier.

        :return: The id of this Transfer145.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Transfer145.

        System generated unique transfer identifier.

        :param id: The id of this Transfer145.
        :type id: str
        """

        self._id = id

    @property
    def location(self):
        """Gets the location of this Transfer145.

        Location where the transaction is initiated.

        :return: The location of this Transfer145.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this Transfer145.

        Location where the transaction is initiated.

        :param location: The location of this Transfer145.
        :type location: str
        """

        self._location = location

    @property
    def original_status(self):
        """Gets the original_status of this Transfer145.

        Original status of the transfer. One of APPROVED, DECLINED, ERROR, PENDING, UNKNOWN.

        :return: The original_status of this Transfer145.
        :rtype: str
        """
        return self._original_status

    @original_status.setter
    def original_status(self, original_status):
        """Sets the original_status of this Transfer145.

        Original status of the transfer. One of APPROVED, DECLINED, ERROR, PENDING, UNKNOWN.

        :param original_status: The original_status of this Transfer145.
        :type original_status: str
        """

        self._original_status = original_status

    @property
    def payment_type(self):
        """Gets the payment_type of this Transfer145.

        Payment type used for transfer. Valid values - P2M: Person to Merchant.

        :return: The payment_type of this Transfer145.
        :rtype: str
        """
        return self._payment_type

    @payment_type.setter
    def payment_type(self, payment_type):
        """Sets the payment_type of this Transfer145.

        Payment type used for transfer. Valid values - P2M: Person to Merchant.

        :param payment_type: The payment_type of this Transfer145.
        :type payment_type: str
        """

        self._payment_type = payment_type

    @property
    def recipient(self):
        """Gets the recipient of this Transfer145.


        :return: The recipient of this Transfer145.
        :rtype: Recipient149
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this Transfer145.


        :param recipient: The recipient of this Transfer145.
        :type recipient: Recipient149
        """

        self._recipient = recipient

    @property
    def recipient_account_uri(self):
        """Gets the recipient_account_uri of this Transfer145.

        URI describing the recipient account. It will include masked account information (e.g. \"************1234\" for a card account) but will not include security codes (e.g. CVC or expiration date for a card account).

        :return: The recipient_account_uri of this Transfer145.
        :rtype: str
        """
        return self._recipient_account_uri

    @recipient_account_uri.setter
    def recipient_account_uri(self, recipient_account_uri):
        """Sets the recipient_account_uri of this Transfer145.

        URI describing the recipient account. It will include masked account information (e.g. \"************1234\" for a card account) but will not include security codes (e.g. CVC or expiration date for a card account).

        :param recipient_account_uri: The recipient_account_uri of this Transfer145.
        :type recipient_account_uri: str
        """

        self._recipient_account_uri = recipient_account_uri

    @property
    def reconciliation_data(self):
        """Gets the reconciliation_data of this Transfer145.


        :return: The reconciliation_data of this Transfer145.
        :rtype: ReconciliationData157
        """
        return self._reconciliation_data

    @reconciliation_data.setter
    def reconciliation_data(self, reconciliation_data):
        """Sets the reconciliation_data of this Transfer145.


        :param reconciliation_data: The reconciliation_data of this Transfer145.
        :type reconciliation_data: ReconciliationData157
        """

        self._reconciliation_data = reconciliation_data

    @property
    def resource_type(self):
        """Gets the resource_type of this Transfer145.

        Type of resource

        :return: The resource_type of this Transfer145.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this Transfer145.

        Type of resource

        :param resource_type: The resource_type of this Transfer145.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def sanction_screening_override(self):
        """Gets the sanction_screening_override of this Transfer145.

        Sanction Screening validation override if enabled for partner.

        :return: The sanction_screening_override of this Transfer145.
        :rtype: bool
        """
        return self._sanction_screening_override

    @sanction_screening_override.setter
    def sanction_screening_override(self, sanction_screening_override):
        """Sets the sanction_screening_override of this Transfer145.

        Sanction Screening validation override if enabled for partner.

        :param sanction_screening_override: The sanction_screening_override of this Transfer145.
        :type sanction_screening_override: bool
        """

        self._sanction_screening_override = sanction_screening_override

    @property
    def sender(self):
        """Gets the sender of this Transfer145.


        :return: The sender of this Transfer145.
        :rtype: Sender146
        """
        return self._sender

    @sender.setter
    def sender(self, sender):
        """Sets the sender of this Transfer145.


        :param sender: The sender of this Transfer145.
        :type sender: Sender146
        """

        self._sender = sender

    @property
    def sender_account_uri(self):
        """Gets the sender_account_uri of this Transfer145.

        URI describing the sending account. It will include masked account information (e.g. \"************1234\" for a card account) but will not include security codes (e.g. CVC or expiration date for a card account).

        :return: The sender_account_uri of this Transfer145.
        :rtype: str
        """
        return self._sender_account_uri

    @sender_account_uri.setter
    def sender_account_uri(self, sender_account_uri):
        """Sets the sender_account_uri of this Transfer145.

        URI describing the sending account. It will include masked account information (e.g. \"************1234\" for a card account) but will not include security codes (e.g. CVC or expiration date for a card account).

        :param sender_account_uri: The sender_account_uri of this Transfer145.
        :type sender_account_uri: str
        """

        self._sender_account_uri = sender_account_uri

    @property
    def statement_descriptor(self):
        """Gets the statement_descriptor of this Transfer145.

        The statement descriptor is the value that will be displayed on the recipient's bank or card statement. It consists of two parts: the prefix and the content. The prefix is a short string typically used to identify the partner. The appended &lt;prefix&gt;*&lt;content&gt; will be displayed on the recipient's statement. Note: While most financial institutions display this information consistently, some may display it incorrectly or not at all.

        :return: The statement_descriptor of this Transfer145.
        :rtype: str
        """
        return self._statement_descriptor

    @statement_descriptor.setter
    def statement_descriptor(self, statement_descriptor):
        """Sets the statement_descriptor of this Transfer145.

        The statement descriptor is the value that will be displayed on the recipient's bank or card statement. It consists of two parts: the prefix and the content. The prefix is a short string typically used to identify the partner. The appended &lt;prefix&gt;*&lt;content&gt; will be displayed on the recipient's statement. Note: While most financial institutions display this information consistently, some may display it incorrectly or not at all.

        :param statement_descriptor: The statement_descriptor of this Transfer145.
        :type statement_descriptor: str
        """

        self._statement_descriptor = statement_descriptor

    @property
    def status(self):
        """Gets the status of this Transfer145.

        Status of the transfer. Values: APPROVED, DECLINED, ERROR, PENDING, REVERSED, CANCELLED.

        :return: The status of this Transfer145.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Transfer145.

        Status of the transfer. Values: APPROVED, DECLINED, ERROR, PENDING, REVERSED, CANCELLED.

        :param status: The status of this Transfer145.
        :type status: str
        """

        self._status = status

    @property
    def status_timestamp(self):
        """Gets the status_timestamp of this Transfer145.

        Timestamp of when the status was changed to its current value. Details- YYYY-MM-DDTHH:MM:SSZ Valid Values- Refer 'Date And Time Formats'

        :return: The status_timestamp of this Transfer145.
        :rtype: str
        """
        return self._status_timestamp

    @status_timestamp.setter
    def status_timestamp(self, status_timestamp):
        """Sets the status_timestamp of this Transfer145.

        Timestamp of when the status was changed to its current value. Details- YYYY-MM-DDTHH:MM:SSZ Valid Values- Refer 'Date And Time Formats'

        :param status_timestamp: The status_timestamp of this Transfer145.
        :type status_timestamp: str
        """

        self._status_timestamp = status_timestamp

    @property
    def transaction_history(self):
        """Gets the transaction_history of this Transfer145.


        :return: The transaction_history of this Transfer145.
        :rtype: TransactionHistory153
        """
        return self._transaction_history

    @transaction_history.setter
    def transaction_history(self, transaction_history):
        """Sets the transaction_history of this Transfer145.


        :param transaction_history: The transaction_history of this Transfer145.
        :type transaction_history: TransactionHistory153
        """

        self._transaction_history = transaction_history

    @property
    def transfer_amount(self):
        """Gets the transfer_amount of this Transfer145.


        :return: The transfer_amount of this Transfer145.
        :rtype: TransferAmount152
        """
        return self._transfer_amount

    @transfer_amount.setter
    def transfer_amount(self, transfer_amount):
        """Sets the transfer_amount of this Transfer145.


        :param transfer_amount: The transfer_amount of this Transfer145.
        :type transfer_amount: TransferAmount152
        """

        self._transfer_amount = transfer_amount

    @property
    def transfer_reference(self):
        """Gets the transfer_reference of this Transfer145.

        Unique transaction reference number provided when the Transfer was created.

        :return: The transfer_reference of this Transfer145.
        :rtype: str
        """
        return self._transfer_reference

    @transfer_reference.setter
    def transfer_reference(self, transfer_reference):
        """Sets the transfer_reference of this Transfer145.

        Unique transaction reference number provided when the Transfer was created.

        :param transfer_reference: The transfer_reference of this Transfer145.
        :type transfer_reference: str
        """

        self._transfer_reference = transfer_reference
