# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.participant28 import Participant28
from openapi_server.models.recipient18 import Recipient18
from openapi_server.models.reconciliation_data26 import ReconciliationData26
from openapi_server.models.sender15 import Sender15
from openapi_server.models.transaction_history22 import TransactionHistory22
from openapi_server.models.transfer_amount21 import TransferAmount21
from openapi_server import util


class MerchantTransfer14(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_message: str=None, created: str=None, digital_account_reference_number: str=None, funding_source: str=None, id: str=None, interchange_rate_designator: str=None, mastercard_assigned_id: str=None, original_status: str=None, participant: Participant28=None, participation_id: str=None, payment_origination_country: str=None, payment_type: str=None, processor_id: str=None, recipient: Recipient18=None, recipient_account_uri: str=None, reconciliation_data: ReconciliationData26=None, resource_type: str=None, routing_transit_number: str=None, sender: Sender15=None, sender_account_uri: str=None, status: str=None, status_timestamp: str=None, transaction_history: TransactionHistory22=None, transaction_local_date_time: str=None, transfer_amount: TransferAmount21=None, transfer_reference: str=None):
        """MerchantTransfer14 - a model defined in OpenAPI

        :param additional_message: The additional_message of this MerchantTransfer14.
        :param created: The created of this MerchantTransfer14.
        :param digital_account_reference_number: The digital_account_reference_number of this MerchantTransfer14.
        :param funding_source: The funding_source of this MerchantTransfer14.
        :param id: The id of this MerchantTransfer14.
        :param interchange_rate_designator: The interchange_rate_designator of this MerchantTransfer14.
        :param mastercard_assigned_id: The mastercard_assigned_id of this MerchantTransfer14.
        :param original_status: The original_status of this MerchantTransfer14.
        :param participant: The participant of this MerchantTransfer14.
        :param participation_id: The participation_id of this MerchantTransfer14.
        :param payment_origination_country: The payment_origination_country of this MerchantTransfer14.
        :param payment_type: The payment_type of this MerchantTransfer14.
        :param processor_id: The processor_id of this MerchantTransfer14.
        :param recipient: The recipient of this MerchantTransfer14.
        :param recipient_account_uri: The recipient_account_uri of this MerchantTransfer14.
        :param reconciliation_data: The reconciliation_data of this MerchantTransfer14.
        :param resource_type: The resource_type of this MerchantTransfer14.
        :param routing_transit_number: The routing_transit_number of this MerchantTransfer14.
        :param sender: The sender of this MerchantTransfer14.
        :param sender_account_uri: The sender_account_uri of this MerchantTransfer14.
        :param status: The status of this MerchantTransfer14.
        :param status_timestamp: The status_timestamp of this MerchantTransfer14.
        :param transaction_history: The transaction_history of this MerchantTransfer14.
        :param transaction_local_date_time: The transaction_local_date_time of this MerchantTransfer14.
        :param transfer_amount: The transfer_amount of this MerchantTransfer14.
        :param transfer_reference: The transfer_reference of this MerchantTransfer14.
        """
        self.openapi_types = {
            'additional_message': str,
            'created': str,
            'digital_account_reference_number': str,
            'funding_source': str,
            'id': str,
            'interchange_rate_designator': str,
            'mastercard_assigned_id': str,
            'original_status': str,
            'participant': Participant28,
            'participation_id': str,
            'payment_origination_country': str,
            'payment_type': str,
            'processor_id': str,
            'recipient': Recipient18,
            'recipient_account_uri': str,
            'reconciliation_data': ReconciliationData26,
            'resource_type': str,
            'routing_transit_number': str,
            'sender': Sender15,
            'sender_account_uri': str,
            'status': str,
            'status_timestamp': str,
            'transaction_history': TransactionHistory22,
            'transaction_local_date_time': str,
            'transfer_amount': TransferAmount21,
            'transfer_reference': str
        }

        self.attribute_map = {
            'additional_message': 'additional_message',
            'created': 'created',
            'digital_account_reference_number': 'digital_account_reference_number',
            'funding_source': 'funding_source',
            'id': 'id',
            'interchange_rate_designator': 'interchange_rate_designator',
            'mastercard_assigned_id': 'mastercard_assigned_id',
            'original_status': 'original_status',
            'participant': 'participant',
            'participation_id': 'participation_id',
            'payment_origination_country': 'payment_origination_country',
            'payment_type': 'payment_type',
            'processor_id': 'processor_id',
            'recipient': 'recipient',
            'recipient_account_uri': 'recipient_account_uri',
            'reconciliation_data': 'reconciliation_data',
            'resource_type': 'resource_type',
            'routing_transit_number': 'routing_transit_number',
            'sender': 'sender',
            'sender_account_uri': 'sender_account_uri',
            'status': 'status',
            'status_timestamp': 'status_timestamp',
            'transaction_history': 'transaction_history',
            'transaction_local_date_time': 'transaction_local_date_time',
            'transfer_amount': 'transfer_amount',
            'transfer_reference': 'transfer_reference'
        }

        self._additional_message = additional_message
        self._created = created
        self._digital_account_reference_number = digital_account_reference_number
        self._funding_source = funding_source
        self._id = id
        self._interchange_rate_designator = interchange_rate_designator
        self._mastercard_assigned_id = mastercard_assigned_id
        self._original_status = original_status
        self._participant = participant
        self._participation_id = participation_id
        self._payment_origination_country = payment_origination_country
        self._payment_type = payment_type
        self._processor_id = processor_id
        self._recipient = recipient
        self._recipient_account_uri = recipient_account_uri
        self._reconciliation_data = reconciliation_data
        self._resource_type = resource_type
        self._routing_transit_number = routing_transit_number
        self._sender = sender
        self._sender_account_uri = sender_account_uri
        self._status = status
        self._status_timestamp = status_timestamp
        self._transaction_history = transaction_history
        self._transaction_local_date_time = transaction_local_date_time
        self._transfer_amount = transfer_amount
        self._transfer_reference = transfer_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MerchantTransfer14':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MerchantTransfer_14 of this MerchantTransfer14.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_message(self):
        """Gets the additional_message of this MerchantTransfer14.

        Message a financial institution will associate to the transfer and may display.\\n\\nType: Alphanumeric Special [a-zA-Z0-9!\\\"#$%&'()*+,-./\\\\:;<=>?@[]_`{|}~], Maximum Length: 65

        :return: The additional_message of this MerchantTransfer14.
        :rtype: str
        """
        return self._additional_message

    @additional_message.setter
    def additional_message(self, additional_message):
        """Sets the additional_message of this MerchantTransfer14.

        Message a financial institution will associate to the transfer and may display.\\n\\nType: Alphanumeric Special [a-zA-Z0-9!\\\"#$%&'()*+,-./\\\\:;<=>?@[]_`{|}~], Maximum Length: 65

        :param additional_message: The additional_message of this MerchantTransfer14.
        :type additional_message: str
        """

        self._additional_message = additional_message

    @property
    def created(self):
        """Gets the created of this MerchantTransfer14.

        Date and time the original transfer was created as an ISO 8601 format.   Type: Alphanumerical Special [A-Z 0-9-:], Maximum Length: 25

        :return: The created of this MerchantTransfer14.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this MerchantTransfer14.

        Date and time the original transfer was created as an ISO 8601 format.   Type: Alphanumerical Special [A-Z 0-9-:], Maximum Length: 25

        :param created: The created of this MerchantTransfer14.
        :type created: str
        """

        self._created = created

    @property
    def digital_account_reference_number(self):
        """Gets the digital_account_reference_number of this MerchantTransfer14.

        URI to identify the digital account reference number. It will include masked account information but will not include security codes (e.g. CVC or expiration date for a card account). 

        :return: The digital_account_reference_number of this MerchantTransfer14.
        :rtype: str
        """
        return self._digital_account_reference_number

    @digital_account_reference_number.setter
    def digital_account_reference_number(self, digital_account_reference_number):
        """Sets the digital_account_reference_number of this MerchantTransfer14.

        URI to identify the digital account reference number. It will include masked account information but will not include security codes (e.g. CVC or expiration date for a card account). 

        :param digital_account_reference_number: The digital_account_reference_number of this MerchantTransfer14.
        :type digital_account_reference_number: str
        """

        self._digital_account_reference_number = digital_account_reference_number

    @property
    def funding_source(self):
        """Gets the funding_source of this MerchantTransfer14.

        Funding source must contain one of the following: CREDIT, DEBIT, PREPAID, DEPOSIT_ACCOUNT, MOBILE_MONEY_ACCOUNT or CASH.

        :return: The funding_source of this MerchantTransfer14.
        :rtype: str
        """
        return self._funding_source

    @funding_source.setter
    def funding_source(self, funding_source):
        """Sets the funding_source of this MerchantTransfer14.

        Funding source must contain one of the following: CREDIT, DEBIT, PREPAID, DEPOSIT_ACCOUNT, MOBILE_MONEY_ACCOUNT or CASH.

        :param funding_source: The funding_source of this MerchantTransfer14.
        :type funding_source: str
        """

        self._funding_source = funding_source

    @property
    def id(self):
        """Gets the id of this MerchantTransfer14.

        System generated unique merchant transfer identifier.   Type: Alphanumeric Special [a-zA-Z 0-9 _], Maximum Length: 32

        :return: The id of this MerchantTransfer14.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MerchantTransfer14.

        System generated unique merchant transfer identifier.   Type: Alphanumeric Special [a-zA-Z 0-9 _], Maximum Length: 32

        :param id: The id of this MerchantTransfer14.
        :type id: str
        """

        self._id = id

    @property
    def interchange_rate_designator(self):
        """Gets the interchange_rate_designator of this MerchantTransfer14.

        Indicates the interchange rate and editing rules applied to the transaction. Field is applicable for Europe OIs only.  Type:Alphanumeric [a-zA-Z 0-9], Length: 2

        :return: The interchange_rate_designator of this MerchantTransfer14.
        :rtype: str
        """
        return self._interchange_rate_designator

    @interchange_rate_designator.setter
    def interchange_rate_designator(self, interchange_rate_designator):
        """Sets the interchange_rate_designator of this MerchantTransfer14.

        Indicates the interchange rate and editing rules applied to the transaction. Field is applicable for Europe OIs only.  Type:Alphanumeric [a-zA-Z 0-9], Length: 2

        :param interchange_rate_designator: The interchange_rate_designator of this MerchantTransfer14.
        :type interchange_rate_designator: str
        """

        self._interchange_rate_designator = interchange_rate_designator

    @property
    def mastercard_assigned_id(self):
        """Gets the mastercard_assigned_id of this MerchantTransfer14.

        Mastercard Assigned ID for tiered interchange calculations.   Type: Numeric [0-9], Maximum Length: 6

        :return: The mastercard_assigned_id of this MerchantTransfer14.
        :rtype: str
        """
        return self._mastercard_assigned_id

    @mastercard_assigned_id.setter
    def mastercard_assigned_id(self, mastercard_assigned_id):
        """Sets the mastercard_assigned_id of this MerchantTransfer14.

        Mastercard Assigned ID for tiered interchange calculations.   Type: Numeric [0-9], Maximum Length: 6

        :param mastercard_assigned_id: The mastercard_assigned_id of this MerchantTransfer14.
        :type mastercard_assigned_id: str
        """

        self._mastercard_assigned_id = mastercard_assigned_id

    @property
    def original_status(self):
        """Gets the original_status of this MerchantTransfer14.

        Original status of the transfer. Values: APPROVED, UNKNOWN.   Type: Alpha [A-Z], Maximum Length: 8

        :return: The original_status of this MerchantTransfer14.
        :rtype: str
        """
        return self._original_status

    @original_status.setter
    def original_status(self, original_status):
        """Sets the original_status of this MerchantTransfer14.

        Original status of the transfer. Values: APPROVED, UNKNOWN.   Type: Alpha [A-Z], Maximum Length: 8

        :param original_status: The original_status of this MerchantTransfer14.
        :type original_status: str
        """

        self._original_status = original_status

    @property
    def participant(self):
        """Gets the participant of this MerchantTransfer14.


        :return: The participant of this MerchantTransfer14.
        :rtype: Participant28
        """
        return self._participant

    @participant.setter
    def participant(self, participant):
        """Sets the participant of this MerchantTransfer14.


        :param participant: The participant of this MerchantTransfer14.
        :type participant: Participant28
        """

        self._participant = participant

    @property
    def participation_id(self):
        """Gets the participation_id of this MerchantTransfer14.

        Participation identifier of the sender. The receiving financial institution will associate the value to the transfer.\\n\\nType: Alphanumeric Special [a-zA-Z0-9!\\\"#$%&'()*+,-./\\\\:;<=>?@[]_`{|}~], Maximum Length: 30

        :return: The participation_id of this MerchantTransfer14.
        :rtype: str
        """
        return self._participation_id

    @participation_id.setter
    def participation_id(self, participation_id):
        """Sets the participation_id of this MerchantTransfer14.

        Participation identifier of the sender. The receiving financial institution will associate the value to the transfer.\\n\\nType: Alphanumeric Special [a-zA-Z0-9!\\\"#$%&'()*+,-./\\\\:;<=>?@[]_`{|}~], Maximum Length: 30

        :param participation_id: The participation_id of this MerchantTransfer14.
        :type participation_id: str
        """

        self._participation_id = participation_id

    @property
    def payment_origination_country(self):
        """Gets the payment_origination_country of this MerchantTransfer14.

        Country where the payment originated from as an ISO 3166-1 alpha-3 country code.   Type: Alpha [A-Z], Maximum Length: 3

        :return: The payment_origination_country of this MerchantTransfer14.
        :rtype: str
        """
        return self._payment_origination_country

    @payment_origination_country.setter
    def payment_origination_country(self, payment_origination_country):
        """Sets the payment_origination_country of this MerchantTransfer14.

        Country where the payment originated from as an ISO 3166-1 alpha-3 country code.   Type: Alpha [A-Z], Maximum Length: 3

        :param payment_origination_country: The payment_origination_country of this MerchantTransfer14.
        :type payment_origination_country: str
        """

        self._payment_origination_country = payment_origination_country

    @property
    def payment_type(self):
        """Gets the payment_type of this MerchantTransfer14.

        Payment type used for transfer. Value - P2M: Person to Merchant.   Type: Alphanumeric [A-Z0-9], Maximum Length: 3

        :return: The payment_type of this MerchantTransfer14.
        :rtype: str
        """
        return self._payment_type

    @payment_type.setter
    def payment_type(self, payment_type):
        """Sets the payment_type of this MerchantTransfer14.

        Payment type used for transfer. Value - P2M: Person to Merchant.   Type: Alphanumeric [A-Z0-9], Maximum Length: 3

        :param payment_type: The payment_type of this MerchantTransfer14.
        :type payment_type: str
        """

        self._payment_type = payment_type

    @property
    def processor_id(self):
        """Gets the processor_id of this MerchantTransfer14.

        The processor ID is a ten-digit number of the form: 9000xxxxxx, where the Single Message System-assigned processor ID will be up to the last six digits xxxxxx. If the partner is enrolled in multiple processorId numbers, the processorId number must be specified. If the partner is only enrolled in a single processorId number then system takes the onboarded value. Please contact your MasterCard Representative to enable the usage of fields in this section.  Type: Numeric [0-9], Maximum Length: 10

        :return: The processor_id of this MerchantTransfer14.
        :rtype: str
        """
        return self._processor_id

    @processor_id.setter
    def processor_id(self, processor_id):
        """Sets the processor_id of this MerchantTransfer14.

        The processor ID is a ten-digit number of the form: 9000xxxxxx, where the Single Message System-assigned processor ID will be up to the last six digits xxxxxx. If the partner is enrolled in multiple processorId numbers, the processorId number must be specified. If the partner is only enrolled in a single processorId number then system takes the onboarded value. Please contact your MasterCard Representative to enable the usage of fields in this section.  Type: Numeric [0-9], Maximum Length: 10

        :param processor_id: The processor_id of this MerchantTransfer14.
        :type processor_id: str
        """

        self._processor_id = processor_id

    @property
    def recipient(self):
        """Gets the recipient of this MerchantTransfer14.


        :return: The recipient of this MerchantTransfer14.
        :rtype: Recipient18
        """
        return self._recipient

    @recipient.setter
    def recipient(self, recipient):
        """Sets the recipient of this MerchantTransfer14.


        :param recipient: The recipient of this MerchantTransfer14.
        :type recipient: Recipient18
        """

        self._recipient = recipient

    @property
    def recipient_account_uri(self):
        """Gets the recipient_account_uri of this MerchantTransfer14.

        URI describing the recipient account. It will include masked account information but will not include security codes (e.g. CVC or expiration date for a card account). Pan, Manula Entry Alias and Alias are valid schemas.

        :return: The recipient_account_uri of this MerchantTransfer14.
        :rtype: str
        """
        return self._recipient_account_uri

    @recipient_account_uri.setter
    def recipient_account_uri(self, recipient_account_uri):
        """Sets the recipient_account_uri of this MerchantTransfer14.

        URI describing the recipient account. It will include masked account information but will not include security codes (e.g. CVC or expiration date for a card account). Pan, Manula Entry Alias and Alias are valid schemas.

        :param recipient_account_uri: The recipient_account_uri of this MerchantTransfer14.
        :type recipient_account_uri: str
        """

        self._recipient_account_uri = recipient_account_uri

    @property
    def reconciliation_data(self):
        """Gets the reconciliation_data of this MerchantTransfer14.


        :return: The reconciliation_data of this MerchantTransfer14.
        :rtype: ReconciliationData26
        """
        return self._reconciliation_data

    @reconciliation_data.setter
    def reconciliation_data(self, reconciliation_data):
        """Sets the reconciliation_data of this MerchantTransfer14.


        :param reconciliation_data: The reconciliation_data of this MerchantTransfer14.
        :type reconciliation_data: ReconciliationData26
        """

        self._reconciliation_data = reconciliation_data

    @property
    def resource_type(self):
        """Gets the resource_type of this MerchantTransfer14.

        Type of the resource that is being returned.   Type: Alpha Special [a-z _], Maximum Length:  17

        :return: The resource_type of this MerchantTransfer14.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this MerchantTransfer14.

        Type of the resource that is being returned.   Type: Alpha Special [a-z _], Maximum Length:  17

        :param resource_type: The resource_type of this MerchantTransfer14.
        :type resource_type: str
        """

        self._resource_type = resource_type

    @property
    def routing_transit_number(self):
        """Gets the routing_transit_number of this MerchantTransfer14.

        The nine-digit Federal Reserve Routing and Transit (R & T) number of the acquiring institution or the nine-digit pseudo-number assigned to the acquiring institution by Mastercard. If the partner is enrolled in multiple routing transit numbers, the routing transit number must be specified. If the partner is only enrolled in a single routing transit number then system takes the onboarded value. Please contact your MasterCard Representative to enable the usage of fields in this section.    Type: Numeric [0-9], Maximum Length: 9

        :return: The routing_transit_number of this MerchantTransfer14.
        :rtype: str
        """
        return self._routing_transit_number

    @routing_transit_number.setter
    def routing_transit_number(self, routing_transit_number):
        """Sets the routing_transit_number of this MerchantTransfer14.

        The nine-digit Federal Reserve Routing and Transit (R & T) number of the acquiring institution or the nine-digit pseudo-number assigned to the acquiring institution by Mastercard. If the partner is enrolled in multiple routing transit numbers, the routing transit number must be specified. If the partner is only enrolled in a single routing transit number then system takes the onboarded value. Please contact your MasterCard Representative to enable the usage of fields in this section.    Type: Numeric [0-9], Maximum Length: 9

        :param routing_transit_number: The routing_transit_number of this MerchantTransfer14.
        :type routing_transit_number: str
        """

        self._routing_transit_number = routing_transit_number

    @property
    def sender(self):
        """Gets the sender of this MerchantTransfer14.


        :return: The sender of this MerchantTransfer14.
        :rtype: Sender15
        """
        return self._sender

    @sender.setter
    def sender(self, sender):
        """Sets the sender of this MerchantTransfer14.


        :param sender: The sender of this MerchantTransfer14.
        :type sender: Sender15
        """

        self._sender = sender

    @property
    def sender_account_uri(self):
        """Gets the sender_account_uri of this MerchantTransfer14.

        URI describing the sending account. It will include masked account information but will not include security codes (e.g. CVC or expiration date for a card account).

        :return: The sender_account_uri of this MerchantTransfer14.
        :rtype: str
        """
        return self._sender_account_uri

    @sender_account_uri.setter
    def sender_account_uri(self, sender_account_uri):
        """Sets the sender_account_uri of this MerchantTransfer14.

        URI describing the sending account. It will include masked account information but will not include security codes (e.g. CVC or expiration date for a card account).

        :param sender_account_uri: The sender_account_uri of this MerchantTransfer14.
        :type sender_account_uri: str
        """

        self._sender_account_uri = sender_account_uri

    @property
    def status(self):
        """Gets the status of this MerchantTransfer14.

        Status of the transfer. Values: APPROVED, UNKNOWN.   Type: Alpha [A-Z], Maximum Length: 8

        :return: The status of this MerchantTransfer14.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this MerchantTransfer14.

        Status of the transfer. Values: APPROVED, UNKNOWN.   Type: Alpha [A-Z], Maximum Length: 8

        :param status: The status of this MerchantTransfer14.
        :type status: str
        """

        self._status = status

    @property
    def status_timestamp(self):
        """Gets the status_timestamp of this MerchantTransfer14.

        Timestamp of when the status was changed to its current value.    Type: Alphanumerical Special [A-Z 0-9-:], Maximum Length: 25

        :return: The status_timestamp of this MerchantTransfer14.
        :rtype: str
        """
        return self._status_timestamp

    @status_timestamp.setter
    def status_timestamp(self, status_timestamp):
        """Sets the status_timestamp of this MerchantTransfer14.

        Timestamp of when the status was changed to its current value.    Type: Alphanumerical Special [A-Z 0-9-:], Maximum Length: 25

        :param status_timestamp: The status_timestamp of this MerchantTransfer14.
        :type status_timestamp: str
        """

        self._status_timestamp = status_timestamp

    @property
    def transaction_history(self):
        """Gets the transaction_history of this MerchantTransfer14.


        :return: The transaction_history of this MerchantTransfer14.
        :rtype: TransactionHistory22
        """
        return self._transaction_history

    @transaction_history.setter
    def transaction_history(self, transaction_history):
        """Sets the transaction_history of this MerchantTransfer14.


        :param transaction_history: The transaction_history of this MerchantTransfer14.
        :type transaction_history: TransactionHistory22
        """

        self._transaction_history = transaction_history

    @property
    def transaction_local_date_time(self):
        """Gets the transaction_local_date_time of this MerchantTransfer14.

        Local date and time when the transaction is submitted as an ISO 8601 format.   Type: Alphanumerical Special [A-Z 0-9-:], Maximum Length: 25

        :return: The transaction_local_date_time of this MerchantTransfer14.
        :rtype: str
        """
        return self._transaction_local_date_time

    @transaction_local_date_time.setter
    def transaction_local_date_time(self, transaction_local_date_time):
        """Sets the transaction_local_date_time of this MerchantTransfer14.

        Local date and time when the transaction is submitted as an ISO 8601 format.   Type: Alphanumerical Special [A-Z 0-9-:], Maximum Length: 25

        :param transaction_local_date_time: The transaction_local_date_time of this MerchantTransfer14.
        :type transaction_local_date_time: str
        """

        self._transaction_local_date_time = transaction_local_date_time

    @property
    def transfer_amount(self):
        """Gets the transfer_amount of this MerchantTransfer14.


        :return: The transfer_amount of this MerchantTransfer14.
        :rtype: TransferAmount21
        """
        return self._transfer_amount

    @transfer_amount.setter
    def transfer_amount(self, transfer_amount):
        """Sets the transfer_amount of this MerchantTransfer14.


        :param transfer_amount: The transfer_amount of this MerchantTransfer14.
        :type transfer_amount: TransferAmount21
        """

        self._transfer_amount = transfer_amount

    @property
    def transfer_reference(self):
        """Gets the transfer_reference of this MerchantTransfer14.

        Unique transaction reference number provided by the partner when the Transfer was created.   Type: Alphanumeric Special [a-zA-Z0-9 * , - . _ ~], Maximum Length: 40

        :return: The transfer_reference of this MerchantTransfer14.
        :rtype: str
        """
        return self._transfer_reference

    @transfer_reference.setter
    def transfer_reference(self, transfer_reference):
        """Sets the transfer_reference of this MerchantTransfer14.

        Unique transaction reference number provided by the partner when the Transfer was created.   Type: Alphanumeric Special [a-zA-Z0-9 * , - . _ ~], Maximum Length: 40

        :param transfer_reference: The transfer_reference of this MerchantTransfer14.
        :type transfer_reference: str
        """

        self._transfer_reference = transfer_reference
