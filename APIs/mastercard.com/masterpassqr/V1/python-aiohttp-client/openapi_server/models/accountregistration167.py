# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Accountregistration167(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_uri: str=None, notification_partner_id: str=None):
        """Accountregistration167 - a model defined in OpenAPI

        :param account_uri: The account_uri of this Accountregistration167.
        :param notification_partner_id: The notification_partner_id of this Accountregistration167.
        """
        self.openapi_types = {
            'account_uri': str,
            'notification_partner_id': str
        }

        self.attribute_map = {
            'account_uri': 'account_uri',
            'notification_partner_id': 'notification_partner_id'
        }

        self._account_uri = account_uri
        self._notification_partner_id = notification_partner_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Accountregistration167':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Accountregistration_167 of this Accountregistration167.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_uri(self):
        """Gets the account_uri of this Accountregistration167.

        URI describing the account. It must be a direct account reference, i.e. URI scheme must be pan. Valid Values- Refer 'Account URIs'.   Note: do not provide exp date and CVC when scheme is pan. 

        :return: The account_uri of this Accountregistration167.
        :rtype: str
        """
        return self._account_uri

    @account_uri.setter
    def account_uri(self, account_uri):
        """Sets the account_uri of this Accountregistration167.

        URI describing the account. It must be a direct account reference, i.e. URI scheme must be pan. Valid Values- Refer 'Account URIs'.   Note: do not provide exp date and CVC when scheme is pan. 

        :param account_uri: The account_uri of this Accountregistration167.
        :type account_uri: str
        """
        if account_uri is None:
            raise ValueError("Invalid value for `account_uri`, must not be `None`")

        self._account_uri = account_uri

    @property
    def notification_partner_id(self):
        """Gets the notification_partner_id of this Accountregistration167.

        Service provider partner id being registered to receive notifications. Type: Alphanumeric Special Length: 40

        :return: The notification_partner_id of this Accountregistration167.
        :rtype: str
        """
        return self._notification_partner_id

    @notification_partner_id.setter
    def notification_partner_id(self, notification_partner_id):
        """Sets the notification_partner_id of this Accountregistration167.

        Service provider partner id being registered to receive notifications. Type: Alphanumeric Special Length: 40

        :param notification_partner_id: The notification_partner_id of this Accountregistration167.
        :type notification_partner_id: str
        """
        if notification_partner_id is None:
            raise ValueError("Invalid value for `notification_partner_id`, must not be `None`")

        self._notification_partner_id = notification_partner_id
