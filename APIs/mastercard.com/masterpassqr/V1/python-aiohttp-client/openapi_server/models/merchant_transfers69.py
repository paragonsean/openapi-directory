# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data70 import Data70
from openapi_server import util


class MerchantTransfers69(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: Data70=None, item_count: int=None, resource_type: str=None):
        """MerchantTransfers69 - a model defined in OpenAPI

        :param data: The data of this MerchantTransfers69.
        :param item_count: The item_count of this MerchantTransfers69.
        :param resource_type: The resource_type of this MerchantTransfers69.
        """
        self.openapi_types = {
            'data': Data70,
            'item_count': int,
            'resource_type': str
        }

        self.attribute_map = {
            'data': 'data',
            'item_count': 'item_count',
            'resource_type': 'resource_type'
        }

        self._data = data
        self._item_count = item_count
        self._resource_type = resource_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MerchantTransfers69':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MerchantTransfers_69 of this MerchantTransfers69.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this MerchantTransfers69.


        :return: The data of this MerchantTransfers69.
        :rtype: Data70
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this MerchantTransfers69.


        :param data: The data of this MerchantTransfers69.
        :type data: Data70
        """

        self._data = data

    @property
    def item_count(self):
        """Gets the item_count of this MerchantTransfers69.

        Number of Transactions in the list

        :return: The item_count of this MerchantTransfers69.
        :rtype: int
        """
        return self._item_count

    @item_count.setter
    def item_count(self, item_count):
        """Sets the item_count of this MerchantTransfers69.

        Number of Transactions in the list

        :param item_count: The item_count of this MerchantTransfers69.
        :type item_count: int
        """

        self._item_count = item_count

    @property
    def resource_type(self):
        """Gets the resource_type of this MerchantTransfers69.

        Type of resource

        :return: The resource_type of this MerchantTransfers69.
        :rtype: str
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this MerchantTransfers69.

        Type of resource

        :param resource_type: The resource_type of this MerchantTransfers69.
        :type resource_type: str
        """

        self._resource_type = resource_type
