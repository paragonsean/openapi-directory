# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Participant85(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, card_acceptor_id: str=None, card_acceptor_name: str=None):
        """Participant85 - a model defined in OpenAPI

        :param card_acceptor_id: The card_acceptor_id of this Participant85.
        :param card_acceptor_name: The card_acceptor_name of this Participant85.
        """
        self.openapi_types = {
            'card_acceptor_id': str,
            'card_acceptor_name': str
        }

        self.attribute_map = {
            'card_acceptor_id': 'card_acceptor_id',
            'card_acceptor_name': 'card_acceptor_name'
        }

        self._card_acceptor_id = card_acceptor_id
        self._card_acceptor_name = card_acceptor_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Participant85':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Participant_85 of this Participant85.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def card_acceptor_id(self):
        """Gets the card_acceptor_id of this Participant85.

        Code identifying the card acceptor. Please contact your MasterCard Representative to enable the usage of fields in this section. Details - alphanumeric, 10-15

        :return: The card_acceptor_id of this Participant85.
        :rtype: str
        """
        return self._card_acceptor_id

    @card_acceptor_id.setter
    def card_acceptor_id(self, card_acceptor_id):
        """Sets the card_acceptor_id of this Participant85.

        Code identifying the card acceptor. Please contact your MasterCard Representative to enable the usage of fields in this section. Details - alphanumeric, 10-15

        :param card_acceptor_id: The card_acceptor_id of this Participant85.
        :type card_acceptor_id: str
        """

        self._card_acceptor_id = card_acceptor_id

    @property
    def card_acceptor_name(self):
        """Gets the card_acceptor_name of this Participant85.

        Merchant Name (or Payment Facilitator and Sub-Merchant Information, that is, the “doing business as” name of the merchant to where the payment transaction is sent to). Details - alphanumeric, 1-22

        :return: The card_acceptor_name of this Participant85.
        :rtype: str
        """
        return self._card_acceptor_name

    @card_acceptor_name.setter
    def card_acceptor_name(self, card_acceptor_name):
        """Sets the card_acceptor_name of this Participant85.

        Merchant Name (or Payment Facilitator and Sub-Merchant Information, that is, the “doing business as” name of the merchant to where the payment transaction is sent to). Details - alphanumeric, 1-22

        :param card_acceptor_name: The card_acceptor_name of this Participant85.
        :type card_acceptor_name: str
        """

        self._card_acceptor_name = card_acceptor_name
