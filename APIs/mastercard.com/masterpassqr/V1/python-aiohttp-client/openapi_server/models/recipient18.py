# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.additional_merchant_data20 import AdditionalMerchantData20
from openapi_server.models.address19 import Address19
from openapi_server import util


class Recipient18(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_merchant_data: AdditionalMerchantData20=None, address: Address19=None, email: str=None, first_name: str=None, last_name: str=None, merchant_category_code: str=None, middle_name: str=None, phone: str=None):
        """Recipient18 - a model defined in OpenAPI

        :param additional_merchant_data: The additional_merchant_data of this Recipient18.
        :param address: The address of this Recipient18.
        :param email: The email of this Recipient18.
        :param first_name: The first_name of this Recipient18.
        :param last_name: The last_name of this Recipient18.
        :param merchant_category_code: The merchant_category_code of this Recipient18.
        :param middle_name: The middle_name of this Recipient18.
        :param phone: The phone of this Recipient18.
        """
        self.openapi_types = {
            'additional_merchant_data': AdditionalMerchantData20,
            'address': Address19,
            'email': str,
            'first_name': str,
            'last_name': str,
            'merchant_category_code': str,
            'middle_name': str,
            'phone': str
        }

        self.attribute_map = {
            'additional_merchant_data': 'additional_merchant_data',
            'address': 'address',
            'email': 'email',
            'first_name': 'first_name',
            'last_name': 'last_name',
            'merchant_category_code': 'merchant_category_code',
            'middle_name': 'middle_name',
            'phone': 'phone'
        }

        self._additional_merchant_data = additional_merchant_data
        self._address = address
        self._email = email
        self._first_name = first_name
        self._last_name = last_name
        self._merchant_category_code = merchant_category_code
        self._middle_name = middle_name
        self._phone = phone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Recipient18':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Recipient_18 of this Recipient18.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_merchant_data(self):
        """Gets the additional_merchant_data of this Recipient18.


        :return: The additional_merchant_data of this Recipient18.
        :rtype: AdditionalMerchantData20
        """
        return self._additional_merchant_data

    @additional_merchant_data.setter
    def additional_merchant_data(self, additional_merchant_data):
        """Sets the additional_merchant_data of this Recipient18.


        :param additional_merchant_data: The additional_merchant_data of this Recipient18.
        :type additional_merchant_data: AdditionalMerchantData20
        """

        self._additional_merchant_data = additional_merchant_data

    @property
    def address(self):
        """Gets the address of this Recipient18.


        :return: The address of this Recipient18.
        :rtype: Address19
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Recipient18.


        :param address: The address of this Recipient18.
        :type address: Address19
        """

        self._address = address

    @property
    def email(self):
        """Gets the email of this Recipient18.

        Email address of the recipient/merchant. Type: Alphanumeric Special [a-zA-Z0-9\\-@+.*$_], Maximum Length: 254

        :return: The email of this Recipient18.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Recipient18.

        Email address of the recipient/merchant. Type: Alphanumeric Special [a-zA-Z0-9\\-@+.*$_], Maximum Length: 254

        :param email: The email of this Recipient18.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this Recipient18.

        First name of the recipient/merchant.\\n\\nType: Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./\\:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÚÚÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], Maximum Length: 40

        :return: The first_name of this Recipient18.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this Recipient18.

        First name of the recipient/merchant.\\n\\nType: Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./\\:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÚÚÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], Maximum Length: 40

        :param first_name: The first_name of this Recipient18.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this Recipient18.

        Last name of the recipient/merchant.\\n\\nType: Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./\\:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÚÚÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], Maximum Length: 40

        :return: The last_name of this Recipient18.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this Recipient18.

        Last name of the recipient/merchant.\\n\\nType: Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./\\:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÚÚÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], Maximum Length: 40

        :param last_name: The last_name of this Recipient18.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def merchant_category_code(self):
        """Gets the merchant_category_code of this Recipient18.

        Mastercard defined merchant category code. This identifies the type of business of the recipient/merchant.   Type: Numeric [0-9], Maximum Length: 4

        :return: The merchant_category_code of this Recipient18.
        :rtype: str
        """
        return self._merchant_category_code

    @merchant_category_code.setter
    def merchant_category_code(self, merchant_category_code):
        """Sets the merchant_category_code of this Recipient18.

        Mastercard defined merchant category code. This identifies the type of business of the recipient/merchant.   Type: Numeric [0-9], Maximum Length: 4

        :param merchant_category_code: The merchant_category_code of this Recipient18.
        :type merchant_category_code: str
        """

        self._merchant_category_code = merchant_category_code

    @property
    def middle_name(self):
        """Gets the middle_name of this Recipient18.

        Middle name of the recipient/merchant.\\n\\nType: Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./\\:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÚÚÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], Maximum Length: 40

        :return: The middle_name of this Recipient18.
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """Sets the middle_name of this Recipient18.

        Middle name of the recipient/merchant.\\n\\nType: Alphanumeric Special [a-zA-Z0-9 !\"#$%&'()*+,-./\\:;<=>?@[]_`{|}~ÀÁÂÃÄÅÇÈÉÊËÌÍÎÏÑÒÓÔÕÖÙÚÚÚÝàáâãäåçèéêëìíîïñòóôõöùúûüýÿ], Maximum Length: 40

        :param middle_name: The middle_name of this Recipient18.
        :type middle_name: str
        """

        self._middle_name = middle_name

    @property
    def phone(self):
        """Gets the phone of this Recipient18.

        Phone number of the recipient/merchant, Country code can be included.   Type: Numeric [0-9], Maximum Length: 15

        :return: The phone of this Recipient18.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this Recipient18.

        Phone number of the recipient/merchant, Country code can be included.   Type: Numeric [0-9], Maximum Length: 15

        :param phone: The phone of this Recipient18.
        :type phone: str
        """

        self._phone = phone
