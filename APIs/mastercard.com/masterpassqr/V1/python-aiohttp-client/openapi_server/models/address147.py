# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Address147(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, country: str=None, country_subdivision: str=None, line1: str=None, line2: str=None, postal_code: str=None):
        """Address147 - a model defined in OpenAPI

        :param city: The city of this Address147.
        :param country: The country of this Address147.
        :param country_subdivision: The country_subdivision of this Address147.
        :param line1: The line1 of this Address147.
        :param line2: The line2 of this Address147.
        :param postal_code: The postal_code of this Address147.
        """
        self.openapi_types = {
            'city': str,
            'country': str,
            'country_subdivision': str,
            'line1': str,
            'line2': str,
            'postal_code': str
        }

        self.attribute_map = {
            'city': 'city',
            'country': 'country',
            'country_subdivision': 'country_subdivision',
            'line1': 'line1',
            'line2': 'line2',
            'postal_code': 'postal_code'
        }

        self._city = city
        self._country = country
        self._country_subdivision = country_subdivision
        self._line1 = line1
        self._line2 = line2
        self._postal_code = postal_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Address147':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Address_147 of this Address147.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this Address147.

        City of the sender.

        :return: The city of this Address147.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Address147.

        City of the sender.

        :param city: The city of this Address147.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this Address147.

        Country of the sender as an ISO alpha country code.

        :return: The country of this Address147.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this Address147.

        Country of the sender as an ISO alpha country code.

        :param country: The country of this Address147.
        :type country: str
        """

        self._country = country

    @property
    def country_subdivision(self):
        """Gets the country_subdivision of this Address147.

        State or province of the sender.

        :return: The country_subdivision of this Address147.
        :rtype: str
        """
        return self._country_subdivision

    @country_subdivision.setter
    def country_subdivision(self, country_subdivision):
        """Sets the country_subdivision of this Address147.

        State or province of the sender.

        :param country_subdivision: The country_subdivision of this Address147.
        :type country_subdivision: str
        """

        self._country_subdivision = country_subdivision

    @property
    def line1(self):
        """Gets the line1 of this Address147.

        First line of the address of the sender.

        :return: The line1 of this Address147.
        :rtype: str
        """
        return self._line1

    @line1.setter
    def line1(self, line1):
        """Sets the line1 of this Address147.

        First line of the address of the sender.

        :param line1: The line1 of this Address147.
        :type line1: str
        """

        self._line1 = line1

    @property
    def line2(self):
        """Gets the line2 of this Address147.

        Second line of the address of the sender.

        :return: The line2 of this Address147.
        :rtype: str
        """
        return self._line2

    @line2.setter
    def line2(self, line2):
        """Sets the line2 of this Address147.

        Second line of the address of the sender.

        :param line2: The line2 of this Address147.
        :type line2: str
        """

        self._line2 = line2

    @property
    def postal_code(self):
        """Gets the postal_code of this Address147.

        Postal code of the sender.

        :return: The postal_code of this Address147.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this Address147.

        Postal code of the sender.

        :param postal_code: The postal_code of this Address147.
        :type postal_code: str
        """

        self._postal_code = postal_code
