# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.merchant_transfer40 import MerchantTransfer40
from openapi_server import util


class MerchantTransfer40Wrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, merchant_transfer: MerchantTransfer40=None):
        """MerchantTransfer40Wrapper - a model defined in OpenAPI

        :param merchant_transfer: The merchant_transfer of this MerchantTransfer40Wrapper.
        """
        self.openapi_types = {
            'merchant_transfer': MerchantTransfer40
        }

        self.attribute_map = {
            'merchant_transfer': 'merchant_transfer'
        }

        self._merchant_transfer = merchant_transfer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MerchantTransfer40Wrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MerchantTransfer_40_wrapper of this MerchantTransfer40Wrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def merchant_transfer(self):
        """Gets the merchant_transfer of this MerchantTransfer40Wrapper.


        :return: The merchant_transfer of this MerchantTransfer40Wrapper.
        :rtype: MerchantTransfer40
        """
        return self._merchant_transfer

    @merchant_transfer.setter
    def merchant_transfer(self, merchant_transfer):
        """Sets the merchant_transfer of this MerchantTransfer40Wrapper.


        :param merchant_transfer: The merchant_transfer of this MerchantTransfer40Wrapper.
        :type merchant_transfer: MerchantTransfer40
        """

        self._merchant_transfer = merchant_transfer
