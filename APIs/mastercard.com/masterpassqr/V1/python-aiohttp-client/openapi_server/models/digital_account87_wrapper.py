# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.digital_account87 import DigitalAccount87
from openapi_server import util


class DigitalAccount87Wrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, digital_account: DigitalAccount87=None):
        """DigitalAccount87Wrapper - a model defined in OpenAPI

        :param digital_account: The digital_account of this DigitalAccount87Wrapper.
        """
        self.openapi_types = {
            'digital_account': DigitalAccount87
        }

        self.attribute_map = {
            'digital_account': 'digital_account'
        }

        self._digital_account = digital_account

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DigitalAccount87Wrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DigitalAccount_87_wrapper of this DigitalAccount87Wrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def digital_account(self):
        """Gets the digital_account of this DigitalAccount87Wrapper.


        :return: The digital_account of this DigitalAccount87Wrapper.
        :rtype: DigitalAccount87
        """
        return self._digital_account

    @digital_account.setter
    def digital_account(self, digital_account):
        """Sets the digital_account of this DigitalAccount87Wrapper.


        :param digital_account: The digital_account of this DigitalAccount87Wrapper.
        :type digital_account: DigitalAccount87
        """

        self._digital_account = digital_account
