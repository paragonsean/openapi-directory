# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.accountregistration169 import Accountregistration169
from openapi_server import util


class Accountregistration169Wrapper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accountregistration: Accountregistration169=None):
        """Accountregistration169Wrapper - a model defined in OpenAPI

        :param accountregistration: The accountregistration of this Accountregistration169Wrapper.
        """
        self.openapi_types = {
            'accountregistration': Accountregistration169
        }

        self.attribute_map = {
            'accountregistration': 'accountregistration'
        }

        self._accountregistration = accountregistration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Accountregistration169Wrapper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Accountregistration_169_wrapper of this Accountregistration169Wrapper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accountregistration(self):
        """Gets the accountregistration of this Accountregistration169Wrapper.


        :return: The accountregistration of this Accountregistration169Wrapper.
        :rtype: Accountregistration169
        """
        return self._accountregistration

    @accountregistration.setter
    def accountregistration(self, accountregistration):
        """Sets the accountregistration of this Accountregistration169Wrapper.


        :param accountregistration: The accountregistration of this Accountregistration169Wrapper.
        :type accountregistration: Accountregistration169
        """

        self._accountregistration = accountregistration
