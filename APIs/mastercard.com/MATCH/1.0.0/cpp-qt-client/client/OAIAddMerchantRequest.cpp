/**
 * MATCH API
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddMerchantRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddMerchantRequest::OAIAddMerchantRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddMerchantRequest::OAIAddMerchantRequest() {
    this->initializeModel();
}

OAIAddMerchantRequest::~OAIAddMerchantRequest() {}

void OAIAddMerchantRequest::initializeModel() {

    m_acquirer_id_isSet = false;
    m_acquirer_id_isValid = false;

    m_merchant_isSet = false;
    m_merchant_isValid = false;
}

void OAIAddMerchantRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddMerchantRequest::fromJsonObject(QJsonObject json) {

    m_acquirer_id_isValid = ::OpenAPI::fromJsonValue(m_acquirer_id, json[QString("AcquirerId")]);
    m_acquirer_id_isSet = !json[QString("AcquirerId")].isNull() && m_acquirer_id_isValid;

    m_merchant_isValid = ::OpenAPI::fromJsonValue(m_merchant, json[QString("Merchant")]);
    m_merchant_isSet = !json[QString("Merchant")].isNull() && m_merchant_isValid;
}

QString OAIAddMerchantRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddMerchantRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_acquirer_id_isSet) {
        obj.insert(QString("AcquirerId"), ::OpenAPI::toJsonValue(m_acquirer_id));
    }
    if (m_merchant.isSet()) {
        obj.insert(QString("Merchant"), ::OpenAPI::toJsonValue(m_merchant));
    }
    return obj;
}

QString OAIAddMerchantRequest::getAcquirerId() const {
    return m_acquirer_id;
}
void OAIAddMerchantRequest::setAcquirerId(const QString &acquirer_id) {
    m_acquirer_id = acquirer_id;
    m_acquirer_id_isSet = true;
}

bool OAIAddMerchantRequest::is_acquirer_id_Set() const{
    return m_acquirer_id_isSet;
}

bool OAIAddMerchantRequest::is_acquirer_id_Valid() const{
    return m_acquirer_id_isValid;
}

OAIAddMerchantMerchant OAIAddMerchantRequest::getMerchant() const {
    return m_merchant;
}
void OAIAddMerchantRequest::setMerchant(const OAIAddMerchantMerchant &merchant) {
    m_merchant = merchant;
    m_merchant_isSet = true;
}

bool OAIAddMerchantRequest::is_merchant_Set() const{
    return m_merchant_isSet;
}

bool OAIAddMerchantRequest::is_merchant_Valid() const{
    return m_merchant_isValid;
}

bool OAIAddMerchantRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_acquirer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddMerchantRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_acquirer_id_isValid && true;
}

} // namespace OpenAPI
