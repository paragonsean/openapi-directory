/**
 * MATCH API
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITerminatedMerchant.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITerminatedMerchant::OAITerminatedMerchant(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITerminatedMerchant::OAITerminatedMerchant() {
    this->initializeModel();
}

OAITerminatedMerchant::~OAITerminatedMerchant() {}

void OAITerminatedMerchant::initializeModel() {

    m_merchant_isSet = false;
    m_merchant_isValid = false;

    m_merchant_match_isSet = false;
    m_merchant_match_isValid = false;
}

void OAITerminatedMerchant::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITerminatedMerchant::fromJsonObject(QJsonObject json) {

    m_merchant_isValid = ::OpenAPI::fromJsonValue(m_merchant, json[QString("Merchant")]);
    m_merchant_isSet = !json[QString("Merchant")].isNull() && m_merchant_isValid;

    m_merchant_match_isValid = ::OpenAPI::fromJsonValue(m_merchant_match, json[QString("MerchantMatch")]);
    m_merchant_match_isSet = !json[QString("MerchantMatch")].isNull() && m_merchant_match_isValid;
}

QString OAITerminatedMerchant::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITerminatedMerchant::asJsonObject() const {
    QJsonObject obj;
    if (m_merchant.isSet()) {
        obj.insert(QString("Merchant"), ::OpenAPI::toJsonValue(m_merchant));
    }
    if (m_merchant_match.isSet()) {
        obj.insert(QString("MerchantMatch"), ::OpenAPI::toJsonValue(m_merchant_match));
    }
    return obj;
}

OAIMerchant OAITerminatedMerchant::getMerchant() const {
    return m_merchant;
}
void OAITerminatedMerchant::setMerchant(const OAIMerchant &merchant) {
    m_merchant = merchant;
    m_merchant_isSet = true;
}

bool OAITerminatedMerchant::is_merchant_Set() const{
    return m_merchant_isSet;
}

bool OAITerminatedMerchant::is_merchant_Valid() const{
    return m_merchant_isValid;
}

OAIMerchantMatch OAITerminatedMerchant::getMerchantMatch() const {
    return m_merchant_match;
}
void OAITerminatedMerchant::setMerchantMatch(const OAIMerchantMatch &merchant_match) {
    m_merchant_match = merchant_match;
    m_merchant_match_isSet = true;
}

bool OAITerminatedMerchant::is_merchant_match_Set() const{
    return m_merchant_match_isSet;
}

bool OAITerminatedMerchant::is_merchant_match_Valid() const{
    return m_merchant_match_isValid;
}

bool OAITerminatedMerchant::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_merchant.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_match.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITerminatedMerchant::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
