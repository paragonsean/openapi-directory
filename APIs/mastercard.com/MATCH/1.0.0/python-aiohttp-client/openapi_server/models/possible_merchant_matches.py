# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.terminated_merchant import TerminatedMerchant
from openapi_server import util


class PossibleMerchantMatches(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, terminated_merchant: List[TerminatedMerchant]=None, total_length: str=None):
        """PossibleMerchantMatches - a model defined in OpenAPI

        :param terminated_merchant: The terminated_merchant of this PossibleMerchantMatches.
        :param total_length: The total_length of this PossibleMerchantMatches.
        """
        self.openapi_types = {
            'terminated_merchant': List[TerminatedMerchant],
            'total_length': str
        }

        self.attribute_map = {
            'terminated_merchant': 'TerminatedMerchant',
            'total_length': 'TotalLength'
        }

        self._terminated_merchant = terminated_merchant
        self._total_length = total_length

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PossibleMerchantMatches':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PossibleMerchantMatches of this PossibleMerchantMatches.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def terminated_merchant(self):
        """Gets the terminated_merchant of this PossibleMerchantMatches.


        :return: The terminated_merchant of this PossibleMerchantMatches.
        :rtype: List[TerminatedMerchant]
        """
        return self._terminated_merchant

    @terminated_merchant.setter
    def terminated_merchant(self, terminated_merchant):
        """Sets the terminated_merchant of this PossibleMerchantMatches.


        :param terminated_merchant: The terminated_merchant of this PossibleMerchantMatches.
        :type terminated_merchant: List[TerminatedMerchant]
        """

        self._terminated_merchant = terminated_merchant

    @property
    def total_length(self):
        """Gets the total_length of this PossibleMerchantMatches.

        The total length of the result set from possible merchant matches of inquiry.

        :return: The total_length of this PossibleMerchantMatches.
        :rtype: str
        """
        return self._total_length

    @total_length.setter
    def total_length(self, total_length):
        """Sets the total_length of this PossibleMerchantMatches.

        The total length of the result set from possible merchant matches of inquiry.

        :param total_length: The total_length of this PossibleMerchantMatches.
        :type total_length: str
        """

        self._total_length = total_length
