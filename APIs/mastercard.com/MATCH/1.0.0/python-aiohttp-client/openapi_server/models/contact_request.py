# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acquirer_id: str=None):
        """ContactRequest - a model defined in OpenAPI

        :param acquirer_id: The acquirer_id of this ContactRequest.
        """
        self.openapi_types = {
            'acquirer_id': str
        }

        self.attribute_map = {
            'acquirer_id': 'AcquirerId'
        }

        self._acquirer_id = acquirer_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactRequest of this ContactRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acquirer_id(self):
        """Gets the acquirer_id of this ContactRequest.

        The acquiring bank ICA number whose contact information is to be fetched.

        :return: The acquirer_id of this ContactRequest.
        :rtype: str
        """
        return self._acquirer_id

    @acquirer_id.setter
    def acquirer_id(self, acquirer_id):
        """Sets the acquirer_id of this ContactRequest.

        The acquiring bank ICA number whose contact information is to be fetched.

        :param acquirer_id: The acquirer_id of this ContactRequest.
        :type acquirer_id: str
        """
        if acquirer_id is None:
            raise ValueError("Invalid value for `acquirer_id`, must not be `None`")

        self._acquirer_id = acquirer_id
