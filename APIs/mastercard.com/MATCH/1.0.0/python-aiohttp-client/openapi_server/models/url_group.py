# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.url import Url
from openapi_server import util


class UrlGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, close_match_urls: List[Url]=None, exact_match_urls: List[Url]=None, no_match_urls: Url=None):
        """UrlGroup - a model defined in OpenAPI

        :param close_match_urls: The close_match_urls of this UrlGroup.
        :param exact_match_urls: The exact_match_urls of this UrlGroup.
        :param no_match_urls: The no_match_urls of this UrlGroup.
        """
        self.openapi_types = {
            'close_match_urls': List[Url],
            'exact_match_urls': List[Url],
            'no_match_urls': Url
        }

        self.attribute_map = {
            'close_match_urls': 'CloseMatchUrls',
            'exact_match_urls': 'ExactMatchUrls',
            'no_match_urls': 'NoMatchUrls'
        }

        self._close_match_urls = close_match_urls
        self._exact_match_urls = exact_match_urls
        self._no_match_urls = no_match_urls

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UrlGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UrlGroup of this UrlGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def close_match_urls(self):
        """Gets the close_match_urls of this UrlGroup.

        The closely matched URL of Merchant.The results may return 0 or more URLs.

        :return: The close_match_urls of this UrlGroup.
        :rtype: List[Url]
        """
        return self._close_match_urls

    @close_match_urls.setter
    def close_match_urls(self, close_match_urls):
        """Sets the close_match_urls of this UrlGroup.

        The closely matched URL of Merchant.The results may return 0 or more URLs.

        :param close_match_urls: The close_match_urls of this UrlGroup.
        :type close_match_urls: List[Url]
        """

        self._close_match_urls = close_match_urls

    @property
    def exact_match_urls(self):
        """Gets the exact_match_urls of this UrlGroup.

        The exactly matched URL of Merchant.The results may return 0 or more URLs.

        :return: The exact_match_urls of this UrlGroup.
        :rtype: List[Url]
        """
        return self._exact_match_urls

    @exact_match_urls.setter
    def exact_match_urls(self, exact_match_urls):
        """Sets the exact_match_urls of this UrlGroup.

        The exactly matched URL of Merchant.The results may return 0 or more URLs.

        :param exact_match_urls: The exact_match_urls of this UrlGroup.
        :type exact_match_urls: List[Url]
        """

        self._exact_match_urls = exact_match_urls

    @property
    def no_match_urls(self):
        """Gets the no_match_urls of this UrlGroup.


        :return: The no_match_urls of this UrlGroup.
        :rtype: Url
        """
        return self._no_match_urls

    @no_match_urls.setter
    def no_match_urls(self, no_match_urls):
        """Sets the no_match_urls of this UrlGroup.


        :param no_match_urls: The no_match_urls of this UrlGroup.
        :type no_match_urls: Url
        """

        self._no_match_urls = no_match_urls
