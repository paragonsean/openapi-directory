# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.possible_merchant_matches import PossibleMerchantMatches
from openapi_server import util


class RetroInquiryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, possible_merchant_matches: PossibleMerchantMatches=None):
        """RetroInquiryResponse - a model defined in OpenAPI

        :param possible_merchant_matches: The possible_merchant_matches of this RetroInquiryResponse.
        """
        self.openapi_types = {
            'possible_merchant_matches': PossibleMerchantMatches
        }

        self.attribute_map = {
            'possible_merchant_matches': 'PossibleMerchantMatches'
        }

        self._possible_merchant_matches = possible_merchant_matches

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RetroInquiryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RetroInquiryResponse of this RetroInquiryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def possible_merchant_matches(self):
        """Gets the possible_merchant_matches of this RetroInquiryResponse.


        :return: The possible_merchant_matches of this RetroInquiryResponse.
        :rtype: PossibleMerchantMatches
        """
        return self._possible_merchant_matches

    @possible_merchant_matches.setter
    def possible_merchant_matches(self, possible_merchant_matches):
        """Sets the possible_merchant_matches of this RetroInquiryResponse.


        :param possible_merchant_matches: The possible_merchant_matches of this RetroInquiryResponse.
        :type possible_merchant_matches: PossibleMerchantMatches
        """

        self._possible_merchant_matches = possible_merchant_matches
