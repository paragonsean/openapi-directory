# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inquired_merchant import InquiredMerchant
from openapi_server import util


class PossibleInquiryMatches(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inquired_merchant: List[InquiredMerchant]=None, total_length: str=None):
        """PossibleInquiryMatches - a model defined in OpenAPI

        :param inquired_merchant: The inquired_merchant of this PossibleInquiryMatches.
        :param total_length: The total_length of this PossibleInquiryMatches.
        """
        self.openapi_types = {
            'inquired_merchant': List[InquiredMerchant],
            'total_length': str
        }

        self.attribute_map = {
            'inquired_merchant': 'InquiredMerchant',
            'total_length': 'TotalLength'
        }

        self._inquired_merchant = inquired_merchant
        self._total_length = total_length

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PossibleInquiryMatches':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PossibleInquiryMatches of this PossibleInquiryMatches.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inquired_merchant(self):
        """Gets the inquired_merchant of this PossibleInquiryMatches.


        :return: The inquired_merchant of this PossibleInquiryMatches.
        :rtype: List[InquiredMerchant]
        """
        return self._inquired_merchant

    @inquired_merchant.setter
    def inquired_merchant(self, inquired_merchant):
        """Sets the inquired_merchant of this PossibleInquiryMatches.


        :param inquired_merchant: The inquired_merchant of this PossibleInquiryMatches.
        :type inquired_merchant: List[InquiredMerchant]
        """

        self._inquired_merchant = inquired_merchant

    @property
    def total_length(self):
        """Gets the total_length of this PossibleInquiryMatches.

        The total length of the result set from possible merchant matches of inquiry.

        :return: The total_length of this PossibleInquiryMatches.
        :rtype: str
        """
        return self._total_length

    @total_length.setter
    def total_length(self, total_length):
        """Sets the total_length of this PossibleInquiryMatches.

        The total length of the result set from possible merchant matches of inquiry.

        :param total_length: The total_length of this PossibleInquiryMatches.
        :type total_length: str
        """

        self._total_length = total_length
