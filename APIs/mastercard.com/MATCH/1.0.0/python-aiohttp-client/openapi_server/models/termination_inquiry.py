# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.possible_inquiry_matches import PossibleInquiryMatches
from openapi_server.models.possible_merchant_matches import PossibleMerchantMatches
from openapi_server import util


class TerminationInquiry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page_offset: str=None, possible_inquiry_matches: PossibleInquiryMatches=None, possible_merchant_matches: List[PossibleMerchantMatches]=None, transaction_reference_number: str=None):
        """TerminationInquiry - a model defined in OpenAPI

        :param page_offset: The page_offset of this TerminationInquiry.
        :param possible_inquiry_matches: The possible_inquiry_matches of this TerminationInquiry.
        :param possible_merchant_matches: The possible_merchant_matches of this TerminationInquiry.
        :param transaction_reference_number: The transaction_reference_number of this TerminationInquiry.
        """
        self.openapi_types = {
            'page_offset': str,
            'possible_inquiry_matches': PossibleInquiryMatches,
            'possible_merchant_matches': List[PossibleMerchantMatches],
            'transaction_reference_number': str
        }

        self.attribute_map = {
            'page_offset': 'PageOffset',
            'possible_inquiry_matches': 'PossibleInquiryMatches',
            'possible_merchant_matches': 'PossibleMerchantMatches',
            'transaction_reference_number': 'TransactionReferenceNumber'
        }

        self._page_offset = page_offset
        self._possible_inquiry_matches = possible_inquiry_matches
        self._possible_merchant_matches = possible_merchant_matches
        self._transaction_reference_number = transaction_reference_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TerminationInquiry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TerminationInquiry of this TerminationInquiry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page_offset(self):
        """Gets the page_offset of this TerminationInquiry.


        :return: The page_offset of this TerminationInquiry.
        :rtype: str
        """
        return self._page_offset

    @page_offset.setter
    def page_offset(self, page_offset):
        """Sets the page_offset of this TerminationInquiry.


        :param page_offset: The page_offset of this TerminationInquiry.
        :type page_offset: str
        """

        self._page_offset = page_offset

    @property
    def possible_inquiry_matches(self):
        """Gets the possible_inquiry_matches of this TerminationInquiry.


        :return: The possible_inquiry_matches of this TerminationInquiry.
        :rtype: PossibleInquiryMatches
        """
        return self._possible_inquiry_matches

    @possible_inquiry_matches.setter
    def possible_inquiry_matches(self, possible_inquiry_matches):
        """Sets the possible_inquiry_matches of this TerminationInquiry.


        :param possible_inquiry_matches: The possible_inquiry_matches of this TerminationInquiry.
        :type possible_inquiry_matches: PossibleInquiryMatches
        """

        self._possible_inquiry_matches = possible_inquiry_matches

    @property
    def possible_merchant_matches(self):
        """Gets the possible_merchant_matches of this TerminationInquiry.


        :return: The possible_merchant_matches of this TerminationInquiry.
        :rtype: List[PossibleMerchantMatches]
        """
        return self._possible_merchant_matches

    @possible_merchant_matches.setter
    def possible_merchant_matches(self, possible_merchant_matches):
        """Sets the possible_merchant_matches of this TerminationInquiry.


        :param possible_merchant_matches: The possible_merchant_matches of this TerminationInquiry.
        :type possible_merchant_matches: List[PossibleMerchantMatches]
        """

        self._possible_merchant_matches = possible_merchant_matches

    @property
    def transaction_reference_number(self):
        """Gets the transaction_reference_number of this TerminationInquiry.

        User-defined identifier for the inquiry submitted.

        :return: The transaction_reference_number of this TerminationInquiry.
        :rtype: str
        """
        return self._transaction_reference_number

    @transaction_reference_number.setter
    def transaction_reference_number(self, transaction_reference_number):
        """Sets the transaction_reference_number of this TerminationInquiry.

        User-defined identifier for the inquiry submitted.

        :param transaction_reference_number: The transaction_reference_number of this TerminationInquiry.
        :type transaction_reference_number: str
        """

        self._transaction_reference_number = transaction_reference_number
