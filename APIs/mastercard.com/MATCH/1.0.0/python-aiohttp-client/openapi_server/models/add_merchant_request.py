# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_merchant_merchant import AddMerchantMerchant
from openapi_server import util


class AddMerchantRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acquirer_id: str=None, merchant: AddMerchantMerchant=None):
        """AddMerchantRequest - a model defined in OpenAPI

        :param acquirer_id: The acquirer_id of this AddMerchantRequest.
        :param merchant: The merchant of this AddMerchantRequest.
        """
        self.openapi_types = {
            'acquirer_id': str,
            'merchant': AddMerchantMerchant
        }

        self.attribute_map = {
            'acquirer_id': 'AcquirerId',
            'merchant': 'Merchant'
        }

        self._acquirer_id = acquirer_id
        self._merchant = merchant

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddMerchantRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddMerchantRequest of this AddMerchantRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acquirer_id(self):
        """Gets the acquirer_id of this AddMerchantRequest.

        The ID of the acquirer.

        :return: The acquirer_id of this AddMerchantRequest.
        :rtype: str
        """
        return self._acquirer_id

    @acquirer_id.setter
    def acquirer_id(self, acquirer_id):
        """Sets the acquirer_id of this AddMerchantRequest.

        The ID of the acquirer.

        :param acquirer_id: The acquirer_id of this AddMerchantRequest.
        :type acquirer_id: str
        """
        if acquirer_id is None:
            raise ValueError("Invalid value for `acquirer_id`, must not be `None`")

        self._acquirer_id = acquirer_id

    @property
    def merchant(self):
        """Gets the merchant of this AddMerchantRequest.


        :return: The merchant of this AddMerchantRequest.
        :rtype: AddMerchantMerchant
        """
        return self._merchant

    @merchant.setter
    def merchant(self, merchant):
        """Sets the merchant of this AddMerchantRequest.


        :param merchant: The merchant of this AddMerchantRequest.
        :type merchant: AddMerchantMerchant
        """

        self._merchant = merchant
