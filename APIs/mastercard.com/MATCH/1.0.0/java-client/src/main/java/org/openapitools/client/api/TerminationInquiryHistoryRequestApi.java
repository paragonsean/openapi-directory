/*
 * MATCH API
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.math.BigDecimal;
import org.openapitools.client.model.ErrorsResponse;
import org.openapitools.client.model.TerminationInquirySchema;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TerminationInquiryHistoryRequestApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public TerminationInquiryHistoryRequestApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TerminationInquiryHistoryRequestApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for fraudMerchantV3TerminationInquiryIRNGet
     * @param pageOffset The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests. (required)
     * @param pageLength The maximum number of items to retrieve within the current \&quot;page\&quot; of results. (required)
     * @param acquirerId The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource. (required)
     * @param IRN Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \&quot;TerminationInquiry.Ref\&quot; response node). This unique identifier should be present as a URL parameter within all GET requests. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The termination inquiry history response object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fraudMerchantV3TerminationInquiryIRNGetCall(BigDecimal pageOffset, BigDecimal pageLength, String acquirerId, String IRN, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/fraud/merchant/v3/termination-inquiry/{IRN}"
            .replace("{" + "IRN" + "}", localVarApiClient.escapeString(IRN.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pageOffset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageOffset", pageOffset));
        }

        if (pageLength != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("PageLength", pageLength));
        }

        if (acquirerId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("AcquirerId", acquirerId));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call fraudMerchantV3TerminationInquiryIRNGetValidateBeforeCall(BigDecimal pageOffset, BigDecimal pageLength, String acquirerId, String IRN, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'pageOffset' is set
        if (pageOffset == null) {
            throw new ApiException("Missing the required parameter 'pageOffset' when calling fraudMerchantV3TerminationInquiryIRNGet(Async)");
        }

        // verify the required parameter 'pageLength' is set
        if (pageLength == null) {
            throw new ApiException("Missing the required parameter 'pageLength' when calling fraudMerchantV3TerminationInquiryIRNGet(Async)");
        }

        // verify the required parameter 'acquirerId' is set
        if (acquirerId == null) {
            throw new ApiException("Missing the required parameter 'acquirerId' when calling fraudMerchantV3TerminationInquiryIRNGet(Async)");
        }

        // verify the required parameter 'IRN' is set
        if (IRN == null) {
            throw new ApiException("Missing the required parameter 'IRN' when calling fraudMerchantV3TerminationInquiryIRNGet(Async)");
        }

        return fraudMerchantV3TerminationInquiryIRNGetCall(pageOffset, pageLength, acquirerId, IRN, _callback);

    }

    /**
     * Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. The Inquiry History Results resource displays the inquiry with the option to view either; Possible Merchant Matches or Possible Inquiry Matches.
     * Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. The Inquiry History Results resource displays the inquiry with the option to view either; Possible Merchant Matches or Possible Inquiry Matches. 
     * @param pageOffset The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests. (required)
     * @param pageLength The maximum number of items to retrieve within the current \&quot;page\&quot; of results. (required)
     * @param acquirerId The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource. (required)
     * @param IRN Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \&quot;TerminationInquiry.Ref\&quot; response node). This unique identifier should be present as a URL parameter within all GET requests. (required)
     * @return TerminationInquirySchema
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The termination inquiry history response object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public TerminationInquirySchema fraudMerchantV3TerminationInquiryIRNGet(BigDecimal pageOffset, BigDecimal pageLength, String acquirerId, String IRN) throws ApiException {
        ApiResponse<TerminationInquirySchema> localVarResp = fraudMerchantV3TerminationInquiryIRNGetWithHttpInfo(pageOffset, pageLength, acquirerId, IRN);
        return localVarResp.getData();
    }

    /**
     * Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. The Inquiry History Results resource displays the inquiry with the option to view either; Possible Merchant Matches or Possible Inquiry Matches.
     * Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. The Inquiry History Results resource displays the inquiry with the option to view either; Possible Merchant Matches or Possible Inquiry Matches. 
     * @param pageOffset The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests. (required)
     * @param pageLength The maximum number of items to retrieve within the current \&quot;page\&quot; of results. (required)
     * @param acquirerId The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource. (required)
     * @param IRN Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \&quot;TerminationInquiry.Ref\&quot; response node). This unique identifier should be present as a URL parameter within all GET requests. (required)
     * @return ApiResponse&lt;TerminationInquirySchema&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The termination inquiry history response object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<TerminationInquirySchema> fraudMerchantV3TerminationInquiryIRNGetWithHttpInfo(BigDecimal pageOffset, BigDecimal pageLength, String acquirerId, String IRN) throws ApiException {
        okhttp3.Call localVarCall = fraudMerchantV3TerminationInquiryIRNGetValidateBeforeCall(pageOffset, pageLength, acquirerId, IRN, null);
        Type localVarReturnType = new TypeToken<TerminationInquirySchema>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. The Inquiry History Results resource displays the inquiry with the option to view either; Possible Merchant Matches or Possible Inquiry Matches. (asynchronously)
     * Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. The Inquiry History Results resource displays the inquiry with the option to view either; Possible Merchant Matches or Possible Inquiry Matches. 
     * @param pageOffset The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests. (required)
     * @param pageLength The maximum number of items to retrieve within the current \&quot;page\&quot; of results. (required)
     * @param acquirerId The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource. (required)
     * @param IRN Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \&quot;TerminationInquiry.Ref\&quot; response node). This unique identifier should be present as a URL parameter within all GET requests. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The termination inquiry history response object. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call fraudMerchantV3TerminationInquiryIRNGetAsync(BigDecimal pageOffset, BigDecimal pageLength, String acquirerId, String IRN, final ApiCallback<TerminationInquirySchema> _callback) throws ApiException {

        okhttp3.Call localVarCall = fraudMerchantV3TerminationInquiryIRNGetValidateBeforeCall(pageOffset, pageLength, acquirerId, IRN, _callback);
        Type localVarReturnType = new TypeToken<TerminationInquirySchema>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
