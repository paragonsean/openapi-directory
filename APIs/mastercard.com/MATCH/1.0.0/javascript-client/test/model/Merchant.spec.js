/**
 * MATCH API
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MatchApi);
  }
}(this, function(expect, MatchApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MatchApi.Merchant();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Merchant', function() {
    it('should create an instance of Merchant', function() {
      // uncomment below and update the code to test Merchant
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be.a(MatchApi.Merchant);
    });

    it('should have the property addedByAcquirerID (base name: "AddedByAcquirerID")', function() {
      // uncomment below and update the code to test the property addedByAcquirerID
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property addedOnDate (base name: "AddedOnDate")', function() {
      // uncomment below and update the code to test the property addedOnDate
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "Address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property altPhoneNumber (base name: "AltPhoneNumber")', function() {
      // uncomment below and update the code to test the property altPhoneNumber
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property countrySubdivisionTaxId (base name: "CountrySubdivisionTaxId")', function() {
      // uncomment below and update the code to test the property countrySubdivisionTaxId
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property doingBusinessAsName (base name: "DoingBusinessAsName")', function() {
      // uncomment below and update the code to test the property doingBusinessAsName
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property nationalTaxId (base name: "NationalTaxId")', function() {
      // uncomment below and update the code to test the property nationalTaxId
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "PhoneNumber")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property principal (base name: "Principal")', function() {
      // uncomment below and update the code to test the property principal
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property searchCriteria (base name: "SearchCriteria")', function() {
      // uncomment below and update the code to test the property searchCriteria
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property serviceProvDBA (base name: "ServiceProvDBA")', function() {
      // uncomment below and update the code to test the property serviceProvDBA
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property serviceProvLegal (base name: "ServiceProvLegal")', function() {
      // uncomment below and update the code to test the property serviceProvLegal
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property terminationReasonCode (base name: "TerminationReasonCode")', function() {
      // uncomment below and update the code to test the property terminationReasonCode
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "Url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

    it('should have the property urlGroup (base name: "UrlGroup")', function() {
      // uncomment below and update the code to test the property urlGroup
      //var instance = new MatchApi.Merchant();
      //expect(instance).to.be();
    });

  });

}));
