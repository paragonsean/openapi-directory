/**
 * MATCH API
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddMerchantMerchant from './AddMerchantMerchant';

/**
 * The AddMerchantRequest model module.
 * @module model/AddMerchantRequest
 * @version 1.0.0
 */
class AddMerchantRequest {
    /**
     * Constructs a new <code>AddMerchantRequest</code>.
     * @alias module:model/AddMerchantRequest
     * @param acquirerId {String} The ID of the acquirer.
     */
    constructor(acquirerId) { 
        
        AddMerchantRequest.initialize(this, acquirerId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, acquirerId) { 
        obj['AcquirerId'] = acquirerId;
    }

    /**
     * Constructs a <code>AddMerchantRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddMerchantRequest} obj Optional instance to populate.
     * @return {module:model/AddMerchantRequest} The populated <code>AddMerchantRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddMerchantRequest();

            if (data.hasOwnProperty('AcquirerId')) {
                obj['AcquirerId'] = ApiClient.convertToType(data['AcquirerId'], 'String');
            }
            if (data.hasOwnProperty('Merchant')) {
                obj['Merchant'] = AddMerchantMerchant.constructFromObject(data['Merchant']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddMerchantRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddMerchantRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddMerchantRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['AcquirerId'] && !(typeof data['AcquirerId'] === 'string' || data['AcquirerId'] instanceof String)) {
            throw new Error("Expected the field `AcquirerId` to be a primitive type in the JSON string but got " + data['AcquirerId']);
        }
        // validate the optional field `Merchant`
        if (data['Merchant']) { // data not null
          AddMerchantMerchant.validateJSON(data['Merchant']);
        }

        return true;
    }


}

AddMerchantRequest.RequiredProperties = ["AcquirerId"];

/**
 * The ID of the acquirer.
 * @member {String} AcquirerId
 */
AddMerchantRequest.prototype['AcquirerId'] = undefined;

/**
 * @member {module:model/AddMerchantMerchant} Merchant
 */
AddMerchantRequest.prototype['Merchant'] = undefined;






export default AddMerchantRequest;

