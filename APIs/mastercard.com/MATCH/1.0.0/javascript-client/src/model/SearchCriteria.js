/**
 * MATCH API
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SearchCriteria model module.
 * @module model/SearchCriteria
 * @version 1.0.0
 */
class SearchCriteria {
    /**
     * Constructs a new <code>SearchCriteria</code>.
     * @alias module:model/SearchCriteria
     * @param searchAll {String} Determines if the inquiry is worldwide or not.
     */
    constructor(searchAll) { 
        
        SearchCriteria.initialize(this, searchAll);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, searchAll) { 
        obj['SearchAll'] = searchAll;
    }

    /**
     * Constructs a <code>SearchCriteria</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchCriteria} obj Optional instance to populate.
     * @return {module:model/SearchCriteria} The populated <code>SearchCriteria</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchCriteria();

            if (data.hasOwnProperty('Country')) {
                obj['Country'] = ApiClient.convertToType(data['Country'], ['String']);
            }
            if (data.hasOwnProperty('MinPossibleMatchCount')) {
                obj['MinPossibleMatchCount'] = ApiClient.convertToType(data['MinPossibleMatchCount'], 'String');
            }
            if (data.hasOwnProperty('Region')) {
                obj['Region'] = ApiClient.convertToType(data['Region'], ['String']);
            }
            if (data.hasOwnProperty('SearchAll')) {
                obj['SearchAll'] = ApiClient.convertToType(data['SearchAll'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchCriteria</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchCriteria</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchCriteria.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Country'])) {
            throw new Error("Expected the field `Country` to be an array in the JSON data but got " + data['Country']);
        }
        // ensure the json data is a string
        if (data['MinPossibleMatchCount'] && !(typeof data['MinPossibleMatchCount'] === 'string' || data['MinPossibleMatchCount'] instanceof String)) {
            throw new Error("Expected the field `MinPossibleMatchCount` to be a primitive type in the JSON string but got " + data['MinPossibleMatchCount']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Region'])) {
            throw new Error("Expected the field `Region` to be an array in the JSON data but got " + data['Region']);
        }
        // ensure the json data is a string
        if (data['SearchAll'] && !(typeof data['SearchAll'] === 'string' || data['SearchAll'] instanceof String)) {
            throw new Error("Expected the field `SearchAll` to be a primitive type in the JSON string but got " + data['SearchAll']);
        }

        return true;
    }


}

SearchCriteria.RequiredProperties = ["SearchAll"];

/**
 * @member {Array.<String>} Country
 */
SearchCriteria.prototype['Country'] = undefined;

/**
 * Determines how many minimum matches present for a merchant or inquiry to appear in the results.
 * @member {String} MinPossibleMatchCount
 */
SearchCriteria.prototype['MinPossibleMatchCount'] = undefined;

/**
 * @member {Array.<String>} Region
 */
SearchCriteria.prototype['Region'] = undefined;

/**
 * Determines if the inquiry is worldwide or not.
 * @member {String} SearchAll
 */
SearchCriteria.prototype['SearchAll'] = undefined;






export default SearchCriteria;

