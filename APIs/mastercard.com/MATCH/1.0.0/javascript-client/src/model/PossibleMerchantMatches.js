/**
 * MATCH API
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TerminatedMerchant from './TerminatedMerchant';

/**
 * The PossibleMerchantMatches model module.
 * @module model/PossibleMerchantMatches
 * @version 1.0.0
 */
class PossibleMerchantMatches {
    /**
     * Constructs a new <code>PossibleMerchantMatches</code>.
     * @alias module:model/PossibleMerchantMatches
     */
    constructor() { 
        
        PossibleMerchantMatches.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PossibleMerchantMatches</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PossibleMerchantMatches} obj Optional instance to populate.
     * @return {module:model/PossibleMerchantMatches} The populated <code>PossibleMerchantMatches</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PossibleMerchantMatches();

            if (data.hasOwnProperty('TerminatedMerchant')) {
                obj['TerminatedMerchant'] = ApiClient.convertToType(data['TerminatedMerchant'], [TerminatedMerchant]);
            }
            if (data.hasOwnProperty('TotalLength')) {
                obj['TotalLength'] = ApiClient.convertToType(data['TotalLength'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PossibleMerchantMatches</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PossibleMerchantMatches</code>.
     */
    static validateJSON(data) {
        if (data['TerminatedMerchant']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['TerminatedMerchant'])) {
                throw new Error("Expected the field `TerminatedMerchant` to be an array in the JSON data but got " + data['TerminatedMerchant']);
            }
            // validate the optional field `TerminatedMerchant` (array)
            for (const item of data['TerminatedMerchant']) {
                TerminatedMerchant.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['TotalLength'] && !(typeof data['TotalLength'] === 'string' || data['TotalLength'] instanceof String)) {
            throw new Error("Expected the field `TotalLength` to be a primitive type in the JSON string but got " + data['TotalLength']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/TerminatedMerchant>} TerminatedMerchant
 */
PossibleMerchantMatches.prototype['TerminatedMerchant'] = undefined;

/**
 * The total length of the result set from possible merchant matches of inquiry.
 * @member {String} TotalLength
 */
PossibleMerchantMatches.prototype['TotalLength'] = undefined;






export default PossibleMerchantMatches;

