/**
 * MATCH API
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorsResponse from '../model/ErrorsResponse';
import RetroInquiryRequestSchema from '../model/RetroInquiryRequestSchema';
import RetroInquiryResponseSchema from '../model/RetroInquiryResponseSchema';

/**
* RetroactiveInquiryDetailsRequest service.
* @module api/RetroactiveInquiryDetailsRequestApi
* @version 1.0.0
*/
export default class RetroactiveInquiryDetailsRequestApi {

    /**
    * Constructs a new RetroactiveInquiryDetailsRequestApi. 
    * @alias module:api/RetroactiveInquiryDetailsRequestApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the fraudMerchantV3RetroRetroInquiryDetailsPost operation.
     * @callback module:api/RetroactiveInquiryDetailsRequestApi~fraudMerchantV3RetroRetroInquiryDetailsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RetroInquiryResponseSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns detailed information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank after the inquiry was made.  This MATCH resource assists acquirer's ability to consider the merchants terminated after the inquiry was made. If an initial inquiry does not result in a possible match, it is still possible that the merchant listing could appear sometime in the next 360 days. This may occur when another acquirer enters the merchant into the MATCH database. The system will automatically continue to search the MATCH system for 360 days. To view these notifications, acquirers must use the Retroactive Inquiry Summary service. This resource can be used to obtain detailed information, such as, if a Merchant or individual has been terminated by another acquirer after an inquiry was made, the reason for termination, and the history of fraudulent or risky business practices that led to that termination.
     * Returns detailed information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank after the inquiry was made.  This MATCH resource assists acquirer's ability to consider the merchants terminated after the inquiry was made. If an initial inquiry does not result in a possible match, it is still possible that the merchant listing could appear sometime in the next 360 days. This may occur when another acquirer enters the merchant into the MATCH database. The system will automatically continue to search the MATCH system for 360 days. To view these notifications, acquirers must use the Retroactive Inquiry Summary service. This resource can be used to obtain detailed information, such as, if a Merchant or individual has been terminated by another acquirer after an inquiry was made, the reason for termination, and the history of fraudulent or risky business practices that led to that termination. 
     * @param {String} acquirerId The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource.
     * @param {module:model/RetroInquiryRequestSchema} retroInquiryRequest The retro inquiry request object
     * @param {module:api/RetroactiveInquiryDetailsRequestApi~fraudMerchantV3RetroRetroInquiryDetailsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RetroInquiryResponseSchema}
     */
    fraudMerchantV3RetroRetroInquiryDetailsPost(acquirerId, retroInquiryRequest, callback) {
      let postBody = retroInquiryRequest;
      // verify the required parameter 'acquirerId' is set
      if (acquirerId === undefined || acquirerId === null) {
        throw new Error("Missing the required parameter 'acquirerId' when calling fraudMerchantV3RetroRetroInquiryDetailsPost");
      }
      // verify the required parameter 'retroInquiryRequest' is set
      if (retroInquiryRequest === undefined || retroInquiryRequest === null) {
        throw new Error("Missing the required parameter 'retroInquiryRequest' when calling fraudMerchantV3RetroRetroInquiryDetailsPost");
      }

      let pathParams = {
      };
      let queryParams = {
        'AcquirerId': acquirerId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RetroInquiryResponseSchema;
      return this.apiClient.callApi(
        '/fraud/merchant/v3/retro/retro-inquiry-details', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
