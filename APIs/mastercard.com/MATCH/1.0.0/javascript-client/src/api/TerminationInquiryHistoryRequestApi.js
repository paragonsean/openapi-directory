/**
 * MATCH API
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorsResponse from '../model/ErrorsResponse';
import TerminationInquirySchema from '../model/TerminationInquirySchema';

/**
* TerminationInquiryHistoryRequest service.
* @module api/TerminationInquiryHistoryRequestApi
* @version 1.0.0
*/
export default class TerminationInquiryHistoryRequestApi {

    /**
    * Constructs a new TerminationInquiryHistoryRequestApi. 
    * @alias module:api/TerminationInquiryHistoryRequestApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the fraudMerchantV3TerminationInquiryIRNGet operation.
     * @callback module:api/TerminationInquiryHistoryRequestApi~fraudMerchantV3TerminationInquiryIRNGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TerminationInquirySchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. The Inquiry History Results resource displays the inquiry with the option to view either; Possible Merchant Matches or Possible Inquiry Matches.
     * Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. The Inquiry History Results resource displays the inquiry with the option to view either; Possible Merchant Matches or Possible Inquiry Matches. 
     * @param {Number} pageOffset The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.
     * @param {Number} pageLength The maximum number of items to retrieve within the current \"page\" of results.
     * @param {String} acquirerId The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource.
     * @param {String} IRN Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \"TerminationInquiry.Ref\" response node). This unique identifier should be present as a URL parameter within all GET requests.
     * @param {module:api/TerminationInquiryHistoryRequestApi~fraudMerchantV3TerminationInquiryIRNGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TerminationInquirySchema}
     */
    fraudMerchantV3TerminationInquiryIRNGet(pageOffset, pageLength, acquirerId, IRN, callback) {
      let postBody = null;
      // verify the required parameter 'pageOffset' is set
      if (pageOffset === undefined || pageOffset === null) {
        throw new Error("Missing the required parameter 'pageOffset' when calling fraudMerchantV3TerminationInquiryIRNGet");
      }
      // verify the required parameter 'pageLength' is set
      if (pageLength === undefined || pageLength === null) {
        throw new Error("Missing the required parameter 'pageLength' when calling fraudMerchantV3TerminationInquiryIRNGet");
      }
      // verify the required parameter 'acquirerId' is set
      if (acquirerId === undefined || acquirerId === null) {
        throw new Error("Missing the required parameter 'acquirerId' when calling fraudMerchantV3TerminationInquiryIRNGet");
      }
      // verify the required parameter 'IRN' is set
      if (IRN === undefined || IRN === null) {
        throw new Error("Missing the required parameter 'IRN' when calling fraudMerchantV3TerminationInquiryIRNGet");
      }

      let pathParams = {
        'IRN': IRN
      };
      let queryParams = {
        'PageOffset': pageOffset,
        'PageLength': pageLength,
        'AcquirerId': acquirerId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TerminationInquirySchema;
      return this.apiClient.callApi(
        '/fraud/merchant/v3/termination-inquiry/{IRN}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
