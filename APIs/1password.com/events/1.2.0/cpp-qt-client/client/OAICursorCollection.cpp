/**
 * Events API
 * 1Password Events API Specification.
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICursorCollection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICursorCollection::OAICursorCollection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICursorCollection::OAICursorCollection() {
    this->initializeModel();
}

OAICursorCollection::~OAICursorCollection() {}

void OAICursorCollection::initializeModel() {

    m_cursor_isSet = false;
    m_cursor_isValid = false;

    m_has_more_isSet = false;
    m_has_more_isValid = false;
}

void OAICursorCollection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICursorCollection::fromJsonObject(QJsonObject json) {

    m_cursor_isValid = ::OpenAPI::fromJsonValue(m_cursor, json[QString("cursor")]);
    m_cursor_isSet = !json[QString("cursor")].isNull() && m_cursor_isValid;

    m_has_more_isValid = ::OpenAPI::fromJsonValue(m_has_more, json[QString("has_more")]);
    m_has_more_isSet = !json[QString("has_more")].isNull() && m_has_more_isValid;
}

QString OAICursorCollection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICursorCollection::asJsonObject() const {
    QJsonObject obj;
    if (m_cursor_isSet) {
        obj.insert(QString("cursor"), ::OpenAPI::toJsonValue(m_cursor));
    }
    if (m_has_more_isSet) {
        obj.insert(QString("has_more"), ::OpenAPI::toJsonValue(m_has_more));
    }
    return obj;
}

QString OAICursorCollection::getCursor() const {
    return m_cursor;
}
void OAICursorCollection::setCursor(const QString &cursor) {
    m_cursor = cursor;
    m_cursor_isSet = true;
}

bool OAICursorCollection::is_cursor_Set() const{
    return m_cursor_isSet;
}

bool OAICursorCollection::is_cursor_Valid() const{
    return m_cursor_isValid;
}

bool OAICursorCollection::isHasMore() const {
    return m_has_more;
}
void OAICursorCollection::setHasMore(const bool &has_more) {
    m_has_more = has_more;
    m_has_more_isSet = true;
}

bool OAICursorCollection::is_has_more_Set() const{
    return m_has_more_isSet;
}

bool OAICursorCollection::is_has_more_Valid() const{
    return m_has_more_isValid;
}

bool OAICursorCollection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cursor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_more_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICursorCollection::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
