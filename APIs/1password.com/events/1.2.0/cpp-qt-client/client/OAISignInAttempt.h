/**
 * Events API
 * 1Password Events API Specification.
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISignInAttempt.h
 *
 * A single sign-in attempt object
 */

#ifndef OAISignInAttempt_H
#define OAISignInAttempt_H

#include <QJsonObject>

#include "OAIClient.h"
#include "OAIDetails.h"
#include "OAILocation.h"
#include "OAIUser.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClient;
class OAIDetails;
class OAILocation;
class OAIUser;

class OAISignInAttempt : public OAIObject {
public:
    OAISignInAttempt();
    OAISignInAttempt(QString json);
    ~OAISignInAttempt() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    OAIClient getClient() const;
    void setClient(const OAIClient &client);
    bool is_client_Set() const;
    bool is_client_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    OAIDetails getDetails() const;
    void setDetails(const OAIDetails &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    OAILocation getLocation() const;
    void setLocation(const OAILocation &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getSessionUuid() const;
    void setSessionUuid(const QString &session_uuid);
    bool is_session_uuid_Set() const;
    bool is_session_uuid_Valid() const;

    OAIUser getTargetUser() const;
    void setTargetUser(const OAIUser &target_user);
    bool is_target_user_Set() const;
    bool is_target_user_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    OAIClient m_client;
    bool m_client_isSet;
    bool m_client_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    OAIDetails m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    OAILocation m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_session_uuid;
    bool m_session_uuid_isSet;
    bool m_session_uuid_isValid;

    OAIUser m_target_user;
    bool m_target_user_isSet;
    bool m_target_user_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISignInAttempt)

#endif // OAISignInAttempt_H
