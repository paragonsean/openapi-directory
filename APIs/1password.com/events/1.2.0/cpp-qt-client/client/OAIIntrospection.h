/**
 * Events API
 * 1Password Events API Specification.
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIntrospection.h
 *
 * 
 */

#ifndef OAIIntrospection_H
#define OAIIntrospection_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIntrospection : public OAIObject {
public:
    OAIIntrospection();
    OAIIntrospection(QString json);
    ~OAIIntrospection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getFeatures() const;
    void setFeatures(const QList<QString> &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    QDateTime getIssuedAt() const;
    void setIssuedAt(const QDateTime &issued_at);
    bool is_issued_at_Set() const;
    bool is_issued_at_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    QDateTime m_issued_at;
    bool m_issued_at_isSet;
    bool m_issued_at_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIntrospection)

#endif // OAIIntrospection_H
