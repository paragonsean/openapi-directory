/**
 * Events API
 * 1Password Events API Specification.
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemUsage.h
 *
 * A single item usage object
 */

#ifndef OAIItemUsage_H
#define OAIItemUsage_H

#include <QJsonObject>

#include "OAIClient.h"
#include "OAILocation.h"
#include "OAIUser.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClient;
class OAILocation;
class OAIUser;

class OAIItemUsage : public OAIObject {
public:
    OAIItemUsage();
    OAIItemUsage(QString json);
    ~OAIItemUsage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    OAIClient getClient() const;
    void setClient(const OAIClient &client);
    bool is_client_Set() const;
    bool is_client_Valid() const;

    QString getItemUuid() const;
    void setItemUuid(const QString &item_uuid);
    bool is_item_uuid_Set() const;
    bool is_item_uuid_Valid() const;

    OAILocation getLocation() const;
    void setLocation(const OAILocation &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    qint32 getUsedVersion() const;
    void setUsedVersion(const qint32 &used_version);
    bool is_used_version_Set() const;
    bool is_used_version_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    QString getVaultUuid() const;
    void setVaultUuid(const QString &vault_uuid);
    bool is_vault_uuid_Set() const;
    bool is_vault_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    OAIClient m_client;
    bool m_client_isSet;
    bool m_client_isValid;

    QString m_item_uuid;
    bool m_item_uuid_isSet;
    bool m_item_uuid_isValid;

    OAILocation m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    qint32 m_used_version;
    bool m_used_version_isSet;
    bool m_used_version_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;

    QString m_vault_uuid;
    bool m_vault_uuid_isSet;
    bool m_vault_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemUsage)

#endif // OAIItemUsage_H
