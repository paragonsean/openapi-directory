# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Session(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_uuid: str=None, ip: str=None, login_time: datetime=None, uuid: str=None):
        """Session - a model defined in OpenAPI

        :param device_uuid: The device_uuid of this Session.
        :param ip: The ip of this Session.
        :param login_time: The login_time of this Session.
        :param uuid: The uuid of this Session.
        """
        self.openapi_types = {
            'device_uuid': str,
            'ip': str,
            'login_time': datetime,
            'uuid': str
        }

        self.attribute_map = {
            'device_uuid': 'device_uuid',
            'ip': 'ip',
            'login_time': 'login_time',
            'uuid': 'uuid'
        }

        self._device_uuid = device_uuid
        self._ip = ip
        self._login_time = login_time
        self._uuid = uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Session':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Session of this Session.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_uuid(self):
        """Gets the device_uuid of this Session.


        :return: The device_uuid of this Session.
        :rtype: str
        """
        return self._device_uuid

    @device_uuid.setter
    def device_uuid(self, device_uuid):
        """Sets the device_uuid of this Session.


        :param device_uuid: The device_uuid of this Session.
        :type device_uuid: str
        """

        self._device_uuid = device_uuid

    @property
    def ip(self):
        """Gets the ip of this Session.


        :return: The ip of this Session.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this Session.


        :param ip: The ip of this Session.
        :type ip: str
        """

        self._ip = ip

    @property
    def login_time(self):
        """Gets the login_time of this Session.


        :return: The login_time of this Session.
        :rtype: datetime
        """
        return self._login_time

    @login_time.setter
    def login_time(self, login_time):
        """Sets the login_time of this Session.


        :param login_time: The login_time of this Session.
        :type login_time: datetime
        """

        self._login_time = login_time

    @property
    def uuid(self):
        """Gets the uuid of this Session.


        :return: The uuid of this Session.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this Session.


        :param uuid: The uuid of this Session.
        :type uuid: str
        """

        self._uuid = uuid
