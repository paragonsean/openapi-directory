# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audit_event import AuditEvent
from openapi_server import util


class AuditEventItems(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cursor: str=None, has_more: bool=None, items: List[AuditEvent]=None):
        """AuditEventItems - a model defined in OpenAPI

        :param cursor: The cursor of this AuditEventItems.
        :param has_more: The has_more of this AuditEventItems.
        :param items: The items of this AuditEventItems.
        """
        self.openapi_types = {
            'cursor': str,
            'has_more': bool,
            'items': List[AuditEvent]
        }

        self.attribute_map = {
            'cursor': 'cursor',
            'has_more': 'has_more',
            'items': 'items'
        }

        self._cursor = cursor
        self._has_more = has_more
        self._items = items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuditEventItems':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuditEventItems of this AuditEventItems.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cursor(self):
        """Gets the cursor of this AuditEventItems.

        Cursor to fetch more data if available or continue the polling process if required

        :return: The cursor of this AuditEventItems.
        :rtype: str
        """
        return self._cursor

    @cursor.setter
    def cursor(self, cursor):
        """Sets the cursor of this AuditEventItems.

        Cursor to fetch more data if available or continue the polling process if required

        :param cursor: The cursor of this AuditEventItems.
        :type cursor: str
        """

        self._cursor = cursor

    @property
    def has_more(self):
        """Gets the has_more of this AuditEventItems.

        Whether there may still be more data to fetch using the returned cursor. If true, the subsequent request could still be empty.

        :return: The has_more of this AuditEventItems.
        :rtype: bool
        """
        return self._has_more

    @has_more.setter
    def has_more(self, has_more):
        """Sets the has_more of this AuditEventItems.

        Whether there may still be more data to fetch using the returned cursor. If true, the subsequent request could still be empty.

        :param has_more: The has_more of this AuditEventItems.
        :type has_more: bool
        """

        self._has_more = has_more

    @property
    def items(self):
        """Gets the items of this AuditEventItems.


        :return: The items of this AuditEventItems.
        :rtype: List[AuditEvent]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this AuditEventItems.


        :param items: The items of this AuditEventItems.
        :type items: List[AuditEvent]
        """

        self._items = items
