# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Client(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_name: str=None, app_version: str=None, ip_address: str=None, os_name: str=None, os_version: str=None, platform_name: str=None, platform_version: str=None):
        """Client - a model defined in OpenAPI

        :param app_name: The app_name of this Client.
        :param app_version: The app_version of this Client.
        :param ip_address: The ip_address of this Client.
        :param os_name: The os_name of this Client.
        :param os_version: The os_version of this Client.
        :param platform_name: The platform_name of this Client.
        :param platform_version: The platform_version of this Client.
        """
        self.openapi_types = {
            'app_name': str,
            'app_version': str,
            'ip_address': str,
            'os_name': str,
            'os_version': str,
            'platform_name': str,
            'platform_version': str
        }

        self.attribute_map = {
            'app_name': 'app_name',
            'app_version': 'app_version',
            'ip_address': 'ip_address',
            'os_name': 'os_name',
            'os_version': 'os_version',
            'platform_name': 'platform_name',
            'platform_version': 'platform_version'
        }

        self._app_name = app_name
        self._app_version = app_version
        self._ip_address = ip_address
        self._os_name = os_name
        self._os_version = os_version
        self._platform_name = platform_name
        self._platform_version = platform_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Client':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Client of this Client.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_name(self):
        """Gets the app_name of this Client.


        :return: The app_name of this Client.
        :rtype: str
        """
        return self._app_name

    @app_name.setter
    def app_name(self, app_name):
        """Sets the app_name of this Client.


        :param app_name: The app_name of this Client.
        :type app_name: str
        """

        self._app_name = app_name

    @property
    def app_version(self):
        """Gets the app_version of this Client.


        :return: The app_version of this Client.
        :rtype: str
        """
        return self._app_version

    @app_version.setter
    def app_version(self, app_version):
        """Sets the app_version of this Client.


        :param app_version: The app_version of this Client.
        :type app_version: str
        """

        self._app_version = app_version

    @property
    def ip_address(self):
        """Gets the ip_address of this Client.


        :return: The ip_address of this Client.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this Client.


        :param ip_address: The ip_address of this Client.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def os_name(self):
        """Gets the os_name of this Client.


        :return: The os_name of this Client.
        :rtype: str
        """
        return self._os_name

    @os_name.setter
    def os_name(self, os_name):
        """Sets the os_name of this Client.


        :param os_name: The os_name of this Client.
        :type os_name: str
        """

        self._os_name = os_name

    @property
    def os_version(self):
        """Gets the os_version of this Client.


        :return: The os_version of this Client.
        :rtype: str
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """Sets the os_version of this Client.


        :param os_version: The os_version of this Client.
        :type os_version: str
        """

        self._os_version = os_version

    @property
    def platform_name(self):
        """Gets the platform_name of this Client.


        :return: The platform_name of this Client.
        :rtype: str
        """
        return self._platform_name

    @platform_name.setter
    def platform_name(self, platform_name):
        """Sets the platform_name of this Client.


        :param platform_name: The platform_name of this Client.
        :type platform_name: str
        """

        self._platform_name = platform_name

    @property
    def platform_version(self):
        """Gets the platform_version of this Client.

        Depending on the platform used, this can be the version of the browser that the client extension is installed, the model of computer that the native application is installed or the machine's CPU version that the CLI was installed

        :return: The platform_version of this Client.
        :rtype: str
        """
        return self._platform_version

    @platform_version.setter
    def platform_version(self, platform_version):
        """Sets the platform_version of this Client.

        Depending on the platform used, this can be the version of the browser that the client extension is installed, the model of computer that the native application is installed or the machine's CPU version that the CLI was installed

        :param platform_version: The platform_version of this Client.
        :type platform_version: str
        """

        self._platform_version = platform_version
