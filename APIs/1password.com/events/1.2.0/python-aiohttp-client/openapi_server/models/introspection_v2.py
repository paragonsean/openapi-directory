# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IntrospectionV2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, features: List[str]=None, issued_at: datetime=None, uuid: str=None):
        """IntrospectionV2 - a model defined in OpenAPI

        :param features: The features of this IntrospectionV2.
        :param issued_at: The issued_at of this IntrospectionV2.
        :param uuid: The uuid of this IntrospectionV2.
        """
        self.openapi_types = {
            'features': List[str],
            'issued_at': datetime,
            'uuid': str
        }

        self.attribute_map = {
            'features': 'features',
            'issued_at': 'issued_at',
            'uuid': 'uuid'
        }

        self._features = features
        self._issued_at = issued_at
        self._uuid = uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntrospectionV2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntrospectionV2 of this IntrospectionV2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def features(self):
        """Gets the features of this IntrospectionV2.


        :return: The features of this IntrospectionV2.
        :rtype: List[str]
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this IntrospectionV2.


        :param features: The features of this IntrospectionV2.
        :type features: List[str]
        """

        self._features = features

    @property
    def issued_at(self):
        """Gets the issued_at of this IntrospectionV2.


        :return: The issued_at of this IntrospectionV2.
        :rtype: datetime
        """
        return self._issued_at

    @issued_at.setter
    def issued_at(self, issued_at):
        """Sets the issued_at of this IntrospectionV2.


        :param issued_at: The issued_at of this IntrospectionV2.
        :type issued_at: datetime
        """

        self._issued_at = issued_at

    @property
    def uuid(self):
        """Gets the uuid of this IntrospectionV2.


        :return: The uuid of this IntrospectionV2.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this IntrospectionV2.


        :param uuid: The uuid of this IntrospectionV2.
        :type uuid: str
        """

        self._uuid = uuid
