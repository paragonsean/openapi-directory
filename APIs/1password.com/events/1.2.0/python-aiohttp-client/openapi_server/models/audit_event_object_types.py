# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AuditEventObjectTypes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ACCOUNT = 'account'
    USER = 'user'
    DEVICE = 'device'
    GROUP = 'group'
    GM = 'gm'
    VAULT = 'vault'
    ITEM = 'item'
    ITEMS = 'items'
    ITEMHIST = 'itemhist'
    VAULTKEY = 'vaultkey'
    TEMPLATE = 'template'
    UVA = 'uva'
    GVA = 'gva'
    INVITE = 'invite'
    EC = 'ec'
    MIGUSER = 'miguser'
    SSO = 'sso'
    SUB = 'sub'
    CARD = 'card'
    PM = 'pm'
    SLACKAPP = 'slackapp'
    FILE = 'file'
    FAMCHILD = 'famchild'
    SA = 'sa'
    SATOKEN = 'satoken'
    DLGDSESS = 'dlgdsess'
    SSOTKN = 'ssotkn'
    REPORT = 'report'

    def __init__(self):
        """AuditEventObjectTypes - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuditEventObjectTypes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuditEventObjectTypes of this AuditEventObjectTypes.
        """
        return util.deserialize_model(dikt, cls)
