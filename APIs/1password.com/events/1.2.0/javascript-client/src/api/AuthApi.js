/**
 * Events API
 * 1Password Events API Specification.
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import Introspection from '../model/Introspection';
import IntrospectionV2 from '../model/IntrospectionV2';

/**
* Auth service.
* @module api/AuthApi
* @version 1.2.0
*/
export default class AuthApi {

    /**
    * Constructs a new AuthApi. 
    * @alias module:api/AuthApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAuthIntrospect operation.
     * @callback module:api/AuthApi~getAuthIntrospectCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Introspection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Performs introspection of the provided Bearer JWT token
     * @param {module:api/AuthApi~getAuthIntrospectCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Introspection}
     */
    getAuthIntrospect(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtsa'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Introspection;
      return this.apiClient.callApi(
        '/api/auth/introspect', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAuthIntrospectV2 operation.
     * @callback module:api/AuthApi~getAuthIntrospectV2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/IntrospectionV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Performs introspection of the provided Bearer JWT token
     * @param {module:api/AuthApi~getAuthIntrospectV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IntrospectionV2}
     */
    getAuthIntrospectV2(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtsa'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = IntrospectionV2;
      return this.apiClient.callApi(
        '/api/v2/auth/introspect', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
