/**
 * LH Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Coordinate model module.
 * @module model/Coordinate
 * @version 1.0
 */
class Coordinate {
    /**
     * Constructs a new <code>Coordinate</code>.
     * Container for coordinates.
     * @alias module:model/Coordinate
     */
    constructor() { 
        
        Coordinate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Coordinate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Coordinate} obj Optional instance to populate.
     * @return {module:model/Coordinate} The populated <code>Coordinate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Coordinate();

            if (data.hasOwnProperty('Latitude')) {
                obj['Latitude'] = ApiClient.convertToType(data['Latitude'], 'Number');
            }
            if (data.hasOwnProperty('Longitude')) {
                obj['Longitude'] = ApiClient.convertToType(data['Longitude'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Coordinate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Coordinate</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Decimal latitude. Range: -90 (South Pole) to +90 (North Pole), e.g. “51.540”.
 * @member {Number} Latitude
 */
Coordinate.prototype['Latitude'] = undefined;

/**
 * Decimal longitude. Range: -180 (West of Prime Meridian) to +180 (East of Prime Meridian).
 * @member {Number} Longitude
 */
Coordinate.prototype['Longitude'] = undefined;






export default Coordinate;

