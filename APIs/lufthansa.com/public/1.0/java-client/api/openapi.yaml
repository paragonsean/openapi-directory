openapi: 3.0.0
info:
  description: ""
  license:
    name: LH
    url: https://developer.lufthansa.com
  title: LH Public API
  version: "1.0"
  x-apisguru-categories:
  - transport
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://avatars2.githubusercontent.com/u/22329684?v=4&s=200
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/LufthansaOpenAPI/Swagger/master/LH_public_API_swagger_2_0.json
    version: "3.0"
  x-providerName: lufthansa.com
  x-serviceName: public
servers:
- url: https://api.lufthansa.com/v1
paths:
  /cargo/getRoute/{origin}-{destination}/{fromDate}/{productCode}:
    get:
      description: Retrieve a list of all possible flights (both direct and connecting)
        between two airports on a given date. Routes are available for today and up
        to days in the future.
      operationId: CargoGetRouteFromDateProductCodeByOriginAndDestinationGet
      parameters:
      - description: "Departure Airport : 3-letter IATA airport code, e.g. FRA."
        explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      - description: "Arrival airport : 3-letter IATA airport code, e.g. HKG."
        explode: false
        in: path
        name: destination
        required: true
        schema:
          type: string
        style: simple
      - description: "Departure date in the local time of the departure airport. Based\
          \ on LAT (Latest Acceptance Time). format : yyyy-MM-dd eg : 2017-07-15"
        explode: false
        in: path
        name: fromDate
        required: true
        schema:
          type: string
        style: simple
      - description: "Product code for requested service and specials : 3-letter eg:\
          \ YNZ"
        explode: false
        in: path
        name: productCode
        required: true
        schema:
          enum:
          - FAN
          - FCO
          - FCP
          - FDG
          - FTF
          - FUN
          - FWN
          - YCO
          - YCP
          - YDG
          - YNB
          - YNZ
          - YTF
          - YUN
          - ZXB
          - ZXF
          - ZXR
          type: string
        style: simple
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Retrieve all flights
      tags:
      - Cargo
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /cargo/shipmentTracking/{aWBPrefix}-{aWBNumber}:
    get:
      description: With this tracking service you can easily retrieve your shipment
        or flight status information.
      operationId: CargoShipmentTrackingByAWBPrefixAndAWBNumberGet
      parameters:
      - description: "aWBPrefix : Represents the airline that is the owner of this\
          \ AWB, i.e. \"020\" = Lufthansa Cargo, format : [0-9]{3} e.g. 020"
        explode: false
        in: path
        name: aWBPrefix
        required: true
        schema:
          type: string
        style: simple
      - description: "aWBNumber : The Air Waybill Number , format : [0-9]{8} e.g.\
          \ 08002050"
        explode: false
        in: path
        name: aWBNumber
        required: true
        schema:
          type: string
        style: simple
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Shipment Tracking
      tags:
      - Cargo
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /offers/lounges/{location}:
    get:
      description: Lounge information
      operationId: OffersLoungesByLocationGet
      parameters:
      - description: 3-leter IATA airport or city code (e.g. 'ZRH')
        explode: false
        in: path
        name: location
        required: true
        schema:
          type: string
        style: simple
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: "Cabin class: 'M', 'E', 'C', 'F' (Acceptable values are: \"\"\
          , \"M\", \"E\", \"C\", \"F\")"
        explode: true
        in: query
        name: cabinClass
        required: false
        schema:
          type: string
        style: form
      - description: "Frequent flyer level ('FTL', 'SGC', 'SEN', 'HON') (Acceptable\
          \ values are: \"\", \"FTL\", \"SGC\", \"SEN\", \"HON\")"
        explode: true
        in: query
        name: tierCode
        required: false
        schema:
          type: string
        style: form
      - description: Language code.
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Lounges
      tags:
      - Offers
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}:
    get:
      description: Cabin layout and seat characteristics.
      operationId: OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGet
      parameters:
      - description: Flight number including carrier code and any suffix (e.g. 'LH2037')
        explode: false
        in: path
        name: flightNumber
        required: true
        schema:
          type: string
        style: simple
      - description: Departure airport. 3-letter IATA airport code (e.g. 'TXL')
        explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      - description: Destination airport. 3-letter IATA airport code (e.g. 'MUC')
        explode: false
        in: path
        name: destination
        required: true
        schema:
          type: string
        style: simple
      - description: Departure date (YYYY-MM-DD)
        explode: false
        in: path
        name: date
        required: true
        schema:
          type: string
        style: simple
      - description: "Cabin class: 'M', 'E', 'C', 'F'. Some flights have fewer classes\
          \ (Acceptable values are: \"M\", \"E\", \"C\", \"F\")"
        explode: false
        in: path
        name: cabinClass
        required: true
        schema:
          type: string
        style: simple
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Seat Maps
      tags:
      - Offers
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /operations/flightstatus/arrivals/{airportCode}/{fromDateTime}:
    get:
      description: Status of all arrivals at a given airport up to 4 hours from the
        provided date time.
      operationId: OperationsFlightstatusArrivalsByAirportCodeAndFromDateTimeGet
      parameters:
      - description: 3-letter IATA aiport code (e.g. 'ZRH')
        explode: false
        in: path
        name: airportCode
        required: true
        schema:
          type: string
        style: simple
      - description: Start of time range in local time of arrival airport (YYYY-MM-DDTHH:mm)
        explode: false
        in: path
        name: fromDateTime
        required: true
        schema:
          type: string
        style: simple
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: "Number of records returned per request. Defaults to 20, maximum\
          \ is 100 (if a value bigger than 100 is given, 100 will be taken)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Number of records skipped. Defaults to 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Flight Status at Arrival Airport
      tags:
      - Operations
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /operations/flightstatus/departures/{airportCode}/{fromDateTime}:
    get:
      description: Status of all departures from a given airport up to 4 hours from
        the provided date time.
      operationId: OperationsFlightstatusDeparturesByAirportCodeAndFromDateTimeGet
      parameters:
      - description: Departure airport. 3-letter IATA airport code (e.g. 'HAM')
        explode: false
        in: path
        name: airportCode
        required: true
        schema:
          type: string
        style: simple
      - description: Start of time range in local time of departure airport (YYYY-MM-DDTHH:mm)
        explode: false
        in: path
        name: fromDateTime
        required: true
        schema:
          type: string
        style: simple
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: "Number of records returned per request. Defaults to 20, maximum\
          \ is 100 (if a value bigger than 100 is given, 100 will be taken)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Number of records skipped. Defaults to 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Flight Status at Departure Airport
      tags:
      - Operations
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /operations/flightstatus/route/{origin}/{destination}/{date}:
    get:
      description: Status of flights between a given origin and destination on a given
        date.
      operationId: OperationsFlightstatusRouteDateByOriginAndDestinationGet
      parameters:
      - description: 3-letter IATA airport (e.g. 'FRA')
        explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      - description: 3-letter IATA airport code (e.g. 'JFK')
        explode: false
        in: path
        name: destination
        required: true
        schema:
          type: string
        style: simple
      - description: Departure date (YYYY-MM-DD) in local time of departure airport
        explode: false
        in: path
        name: date
        required: true
        schema:
          type: string
        style: simple
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: "Number of records returned per request. Defaults to 20, maximum\
          \ is 100 (if a value bigger than 100 is given, 100 will be taken)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Number of records skipped. Defaults to 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Flight Status by Route
      tags:
      - Operations
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /operations/flightstatus/{flightNumber}/{date}:
    get:
      description: "Status of a particular flight (boarding, delayed, etc.)."
      operationId: OperationsFlightstatusByFlightNumberAndDateGet
      parameters:
      - description: Flight number including carrier code and any suffix (e.g. 'LH400')
        explode: false
        in: path
        name: flightNumber
        required: true
        schema:
          type: string
        style: simple
      - description: The departure date (YYYY-MM-DD) in the local time of the departure
          airport
        explode: false
        in: path
        name: date
        required: true
        schema:
          type: string
        style: simple
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: "Number of records returned per request. Defaults to 20, maximum\
          \ is 100 (if a value bigger than 100 is given, 100 will be taken)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Number of records skipped. Defaults to 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Flight Status
      tags:
      - Operations
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /operations/schedules/{origin}/{destination}/{fromDateTime}:
    get:
      description: Scheduled flights between given airports on a given date.
      operationId: OperationsSchedulesFromDateTimeByOriginAndDestinationGet
      parameters:
      - description: Departure airport. 3-letter IATA airport code (e.g. 'ZRH')
        explode: false
        in: path
        name: origin
        required: true
        schema:
          type: string
        style: simple
      - description: Destination airport. 3-letter IATA airport code (e.g. 'FRA')
        explode: false
        in: path
        name: destination
        required: true
        schema:
          type: string
        style: simple
      - description: "Local departure date and optionally departure time (YYYY-MM-DD\
          \ or YYYY-MM-DDTHH:mm). When not provided, time is assumed to be 00:01"
        explode: false
        in: path
        name: fromDateTime
        required: true
        schema:
          type: string
        style: simple
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: "Show only direct flights (false=0, true=1). Default is false"
        explode: true
        in: query
        name: directFlights
        required: false
        schema:
          type: boolean
        style: form
      - description: "Number of records returned per request. Defaults to 20, maximum\
          \ is 100 (if a value bigger than 100 is given, 100 will be taken)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: string
        style: form
      - description: Number of records skipped. Defaults to 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Flight Schedules
      tags:
      - Operations
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /references/aircraft/{aircraftCode}:
    get:
      description: List all aircraft types or one specific aircraft type.
      operationId: ReferencesAircraftByAircraftCodeGet
      parameters:
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: 3-character IATA aircraft code
        explode: false
        in: path
        name: aircraftCode
        required: true
        schema:
          default: 33P
          type: string
        style: simple
      - description: "Number of records returned per request. Defaults to 20, maximum\
          \ is 100 (if a value bigger than 100 is given, 100 will be taken)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "20"
          type: string
        style: form
      - description: Number of records skipped. Defaults to 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: "0"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Aircraft
      tags:
      - Reference Data
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /references/airlines/{airlineCode}:
    get:
      description: List all airlines or one specific airline.
      operationId: ReferencesAirlinesByAirlineCodeGet
      parameters:
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: 2-character IATA airline/carrier code
        explode: false
        in: path
        name: airlineCode
        required: true
        schema:
          default: LH
          type: string
        style: simple
      - description: "Number of records returned per request. Defaults to 20, maximum\
          \ is 100 (if a value bigger than 100 is given, 100 will be taken)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "20"
          type: string
        style: form
      - description: Number of records skipped. Defaults to 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: "0"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Airlines
      tags:
      - Reference Data
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /references/airports/nearest/{latitude},{longitude}:
    get:
      description: "List the 5 closest airports to the given latitude and longitude,\
        \ irrespective of the radius of the reference point."
      operationId: ReferencesAirportsNearestByLatitudeAndLongitudeGet
      parameters:
      - description: Latitude in decimal format to at most 3 decimal places
        explode: false
        in: path
        name: latitude
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Longitude in decimal format to at most 3 decimal places
        explode: false
        in: path
        name: longitude
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: 2 letter ISO 3166-1 language code
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Nearest Airports
      tags:
      - Reference Data
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /references/airports/{airportCode}:
    get:
      description: List all airports or one specific airport. All airports response
        is very large. It is possible to request the response in a specific language.
      operationId: ReferencesAirportsByAirportCodeGet
      parameters:
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: 3-letter IATA airport code
        explode: false
        in: path
        name: airportCode
        required: true
        schema:
          default: TXL
          type: string
        style: simple
      - description: 2-letter ISO 3166-1 language code
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      - description: "Number of records returned per request. Defaults to 20, maximum\
          \ is 100 (if a value bigger than 100 is given, 100 will be taken)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "20"
          type: string
        style: form
      - description: Number of records skipped. Defaults to 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: "0"
          type: string
        style: form
      - description: "Restrict the results to locations with flights operated by LH\
          \ (false=0, true=1)"
        explode: true
        in: query
        name: LHoperated
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirportResponse'
          description: ""
      security:
      - auth: []
      summary: Airports
      tags:
      - Reference Data
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /references/cities/{cityCode}:
    get:
      description: List all cities or one specific city. It is possible to request
        the response in a specific language.
      operationId: ReferencesCitiesByCityCodeGet
      parameters:
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: 3-letter IATA city code
        explode: false
        in: path
        name: cityCode
        required: true
        schema:
          default: BER
          type: string
        style: simple
      - description: 2 letter ISO 3166-1 language code
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      - description: "Number of records returned per request. Defaults to 20, maximum\
          \ is 100 (if a value bigger than 100 is given, 100 will be taken)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "20"
          type: string
        style: form
      - description: Number of records skipped. Defaults to 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: "0"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Cities
      tags:
      - Reference Data
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
  /references/countries/{countryCode}:
    get:
      description: List all countries or one specific country. It is possible to request
        the response in a specific language.
      operationId: ReferencesCountriesByCountryCodeGet
      parameters:
      - description: "http header: application/json or application/xml (Acceptable\
          \ values are: \"application/json\", \"application/xml\")"
        explode: false
        in: header
        name: Accept
        required: true
        schema:
          type: string
        style: simple
      - description: 2-letter ISO 3166-1 country code
        explode: false
        in: path
        name: countryCode
        required: true
        schema:
          default: DK
          type: string
        style: simple
      - description: 2 letter ISO 3166-1 language code
        explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      - description: "Number of records returned per request. Defaults to 20, maximum\
          \ is 100 (if a value bigger than 100 is given, 100 will be taken)"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "20"
          type: string
        style: form
      - description: Number of records skipped. Defaults to 0
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: "0"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: ""
      security:
      - auth: []
      summary: Countries
      tags:
      - Reference Data
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-accepts:
      - application/json
components:
  schemas:
    Airport:
      description: Array of all available airports or one airport matching the request.
      example:
        CityCode: CityCode
        Names:
          Name:
          - '@LanguageCode': '@LanguageCode'
            $: $
          - '@LanguageCode': '@LanguageCode'
            $: $
        UtcOffset: 1.4658129
        AirportCode: AirportCode
        Position:
          Coordinate:
            Latitude: 0.8008282
            Longitude: 6.0274563
        TimeZoneId: TimeZoneId
        CountryCode: CountryCode
        LocationType: LocationType
      properties:
        AirportCode:
          description: "3-letter IATA airport code, e.g. “TXL”."
          type: string
        CityCode:
          description: "3-letter IATA city code, e.g. “BER”."
          type: string
        CountryCode:
          description: "2-letter ISO 3166-1 country code, e.g. “DE”."
          type: string
        LocationType:
          description: " “Airport”, “RailwayStation” or “BusStation”."
          type: string
        Names:
          $ref: '#/components/schemas/Airport_Names'
        Position:
          $ref: '#/components/schemas/Airport_Position'
        TimeZoneId:
          description: Time zone name airport is in
          type: string
        UtcOffset:
          description: Hour offset of airport to UTC time zone
          format: float
          type: number
      type: object
    AirportResource:
      description: Root element of airport response.
      example:
        Meta:
          '@Version': '@Version'
          TotalCount: 5
          Link:
          - '@Href': '@Href'
            '@Rel': '@Rel'
          - '@Href': '@Href'
            '@Rel': '@Rel'
        Airports:
          Airport:
            CityCode: CityCode
            Names:
              Name:
              - '@LanguageCode': '@LanguageCode'
                $: $
              - '@LanguageCode': '@LanguageCode'
                $: $
            UtcOffset: 1.4658129
            AirportCode: AirportCode
            Position:
              Coordinate:
                Latitude: 0.8008282
                Longitude: 6.0274563
            TimeZoneId: TimeZoneId
            CountryCode: CountryCode
            LocationType: LocationType
      properties:
        Airports:
          $ref: '#/components/schemas/AirportResource_Airports'
        Meta:
          $ref: '#/components/schemas/AirportResource_Meta'
      type: object
    AirportResponse:
      example:
        AirportResource:
          Meta:
            '@Version': '@Version'
            TotalCount: 5
            Link:
            - '@Href': '@Href'
              '@Rel': '@Rel'
            - '@Href': '@Href'
              '@Rel': '@Rel'
          Airports:
            Airport:
              CityCode: CityCode
              Names:
                Name:
                - '@LanguageCode': '@LanguageCode'
                  $: $
                - '@LanguageCode': '@LanguageCode'
                  $: $
              UtcOffset: 1.4658129
              AirportCode: AirportCode
              Position:
                Coordinate:
                  Latitude: 0.8008282
                  Longitude: 6.0274563
              TimeZoneId: TimeZoneId
              CountryCode: CountryCode
              LocationType: LocationType
      properties:
        AirportResource:
          $ref: '#/components/schemas/AirportResource'
      type: object
    Coordinate:
      description: Container for coordinates.
      example:
        Latitude: 0.8008282
        Longitude: 6.0274563
      properties:
        Latitude:
          description: "Decimal latitude. Range: -90 (South Pole) to +90 (North Pole),\
            \ e.g. “51.540”."
          format: float
          type: number
        Longitude:
          description: "Decimal longitude. Range: -180 (West of Prime Meridian) to\
            \ +180 (East of Prime Meridian)."
          format: float
          type: number
      type: object
    Link:
      example:
        '@Href': '@Href'
        '@Rel': '@Rel'
      properties:
        '@Href':
          description: Link to actual a resource.
          type: string
        '@Rel':
          description: "Specifying kind of link such as ‘self’ (link that returned\
            \ this response), ‘alternate’ (link that points to another resource) or\
            \ ‘related’ (link that points to related resource)."
          type: string
      type: object
    Name:
      description: 2-letter ISO 639-1 language code for the corresponding item.
      example:
        '@LanguageCode': '@LanguageCode'
        $: $
      properties:
        $:
          type: string
        '@LanguageCode':
          type: string
      type: object
    Airport_Names:
      description: Container for airport names.
      example:
        Name:
        - '@LanguageCode': '@LanguageCode'
          $: $
        - '@LanguageCode': '@LanguageCode'
          $: $
      properties:
        Name:
          description: "Array: language specific full name of airport."
          items:
            $ref: '#/components/schemas/Name'
          type: array
      type: object
    Airport_Position:
      description: Physical location of an airport. This data section is optional
        and therefore not always present.
      example:
        Coordinate:
          Latitude: 0.8008282
          Longitude: 6.0274563
      properties:
        Coordinate:
          $ref: '#/components/schemas/Coordinate'
      type: object
    AirportResource_Airports:
      description: Container for airport elements.
      example:
        Airport:
          CityCode: CityCode
          Names:
            Name:
            - '@LanguageCode': '@LanguageCode'
              $: $
            - '@LanguageCode': '@LanguageCode'
              $: $
          UtcOffset: 1.4658129
          AirportCode: AirportCode
          Position:
            Coordinate:
              Latitude: 0.8008282
              Longitude: 6.0274563
          TimeZoneId: TimeZoneId
          CountryCode: CountryCode
          LocationType: LocationType
      properties:
        Airport:
          $ref: '#/components/schemas/Airport'
      type: object
    AirportResource_Meta:
      description: Container for meta links.
      example:
        '@Version': '@Version'
        TotalCount: 5
        Link:
        - '@Href': '@Href'
          '@Rel': '@Rel'
        - '@Href': '@Href'
          '@Rel': '@Rel'
      properties:
        '@Version':
          type: string
        Link:
          description: "Array: links to resource itself and other related resources."
          items:
            $ref: '#/components/schemas/Link'
          type: array
        TotalCount:
          format: int32
          type: integer
      type: object
  securitySchemes:
    auth:
      flows:
        authorizationCode:
          authorizationUrl: https://api.lufthansa.com/v1/oauth/token
          scopes:
            read:LH Open API: read access
          tokenUrl: https://api.lufthansa.com/v1/oauth/token
      type: oauth2

