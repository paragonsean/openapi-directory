# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.airport_resource_airports import AirportResourceAirports
from openapi_server.models.airport_resource_meta import AirportResourceMeta
from openapi_server import util


class AirportResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, airports: AirportResourceAirports=None, meta: AirportResourceMeta=None):
        """AirportResource - a model defined in OpenAPI

        :param airports: The airports of this AirportResource.
        :param meta: The meta of this AirportResource.
        """
        self.openapi_types = {
            'airports': AirportResourceAirports,
            'meta': AirportResourceMeta
        }

        self.attribute_map = {
            'airports': 'Airports',
            'meta': 'Meta'
        }

        self._airports = airports
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AirportResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AirportResource of this AirportResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def airports(self):
        """Gets the airports of this AirportResource.


        :return: The airports of this AirportResource.
        :rtype: AirportResourceAirports
        """
        return self._airports

    @airports.setter
    def airports(self, airports):
        """Sets the airports of this AirportResource.


        :param airports: The airports of this AirportResource.
        :type airports: AirportResourceAirports
        """

        self._airports = airports

    @property
    def meta(self):
        """Gets the meta of this AirportResource.


        :return: The meta of this AirportResource.
        :rtype: AirportResourceMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this AirportResource.


        :param meta: The meta of this AirportResource.
        :type meta: AirportResourceMeta
        """

        self._meta = meta
