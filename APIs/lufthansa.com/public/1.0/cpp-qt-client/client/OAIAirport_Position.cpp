/**
 * LH Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAirport_Position.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAirport_Position::OAIAirport_Position(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAirport_Position::OAIAirport_Position() {
    this->initializeModel();
}

OAIAirport_Position::~OAIAirport_Position() {}

void OAIAirport_Position::initializeModel() {

    m_coordinate_isSet = false;
    m_coordinate_isValid = false;
}

void OAIAirport_Position::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAirport_Position::fromJsonObject(QJsonObject json) {

    m_coordinate_isValid = ::OpenAPI::fromJsonValue(m_coordinate, json[QString("Coordinate")]);
    m_coordinate_isSet = !json[QString("Coordinate")].isNull() && m_coordinate_isValid;
}

QString OAIAirport_Position::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAirport_Position::asJsonObject() const {
    QJsonObject obj;
    if (m_coordinate.isSet()) {
        obj.insert(QString("Coordinate"), ::OpenAPI::toJsonValue(m_coordinate));
    }
    return obj;
}

OAICoordinate OAIAirport_Position::getCoordinate() const {
    return m_coordinate;
}
void OAIAirport_Position::setCoordinate(const OAICoordinate &coordinate) {
    m_coordinate = coordinate;
    m_coordinate_isSet = true;
}

bool OAIAirport_Position::is_coordinate_Set() const{
    return m_coordinate_isSet;
}

bool OAIAirport_Position::is_coordinate_Valid() const{
    return m_coordinate_isValid;
}

bool OAIAirport_Position::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_coordinate.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAirport_Position::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
