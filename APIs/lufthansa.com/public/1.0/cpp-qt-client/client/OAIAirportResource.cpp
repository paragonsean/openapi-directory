/**
 * LH Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAirportResource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAirportResource::OAIAirportResource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAirportResource::OAIAirportResource() {
    this->initializeModel();
}

OAIAirportResource::~OAIAirportResource() {}

void OAIAirportResource::initializeModel() {

    m_airports_isSet = false;
    m_airports_isValid = false;

    m_meta_isSet = false;
    m_meta_isValid = false;
}

void OAIAirportResource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAirportResource::fromJsonObject(QJsonObject json) {

    m_airports_isValid = ::OpenAPI::fromJsonValue(m_airports, json[QString("Airports")]);
    m_airports_isSet = !json[QString("Airports")].isNull() && m_airports_isValid;

    m_meta_isValid = ::OpenAPI::fromJsonValue(m_meta, json[QString("Meta")]);
    m_meta_isSet = !json[QString("Meta")].isNull() && m_meta_isValid;
}

QString OAIAirportResource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAirportResource::asJsonObject() const {
    QJsonObject obj;
    if (m_airports.isSet()) {
        obj.insert(QString("Airports"), ::OpenAPI::toJsonValue(m_airports));
    }
    if (m_meta.isSet()) {
        obj.insert(QString("Meta"), ::OpenAPI::toJsonValue(m_meta));
    }
    return obj;
}

OAIAirportResource_Airports OAIAirportResource::getAirports() const {
    return m_airports;
}
void OAIAirportResource::setAirports(const OAIAirportResource_Airports &airports) {
    m_airports = airports;
    m_airports_isSet = true;
}

bool OAIAirportResource::is_airports_Set() const{
    return m_airports_isSet;
}

bool OAIAirportResource::is_airports_Valid() const{
    return m_airports_isValid;
}

OAIAirportResource_Meta OAIAirportResource::getMeta() const {
    return m_meta;
}
void OAIAirportResource::setMeta(const OAIAirportResource_Meta &meta) {
    m_meta = meta;
    m_meta_isSet = true;
}

bool OAIAirportResource::is_meta_Set() const{
    return m_meta_isSet;
}

bool OAIAirportResource::is_meta_Valid() const{
    return m_meta_isValid;
}

bool OAIAirportResource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_airports.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_meta.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAirportResource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
