/**
 * LH Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAirportResource_Meta.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAirportResource_Meta::OAIAirportResource_Meta(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAirportResource_Meta::OAIAirportResource_Meta() {
    this->initializeModel();
}

OAIAirportResource_Meta::~OAIAirportResource_Meta() {}

void OAIAirportResource_Meta::initializeModel() {

    m_version_isSet = false;
    m_version_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_total_count_isSet = false;
    m_total_count_isValid = false;
}

void OAIAirportResource_Meta::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAirportResource_Meta::fromJsonObject(QJsonObject json) {

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("@Version")]);
    m_version_isSet = !json[QString("@Version")].isNull() && m_version_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("Link")]);
    m_link_isSet = !json[QString("Link")].isNull() && m_link_isValid;

    m_total_count_isValid = ::OpenAPI::fromJsonValue(m_total_count, json[QString("TotalCount")]);
    m_total_count_isSet = !json[QString("TotalCount")].isNull() && m_total_count_isValid;
}

QString OAIAirportResource_Meta::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAirportResource_Meta::asJsonObject() const {
    QJsonObject obj;
    if (m_version_isSet) {
        obj.insert(QString("@Version"), ::OpenAPI::toJsonValue(m_version));
    }
    if (m_link.size() > 0) {
        obj.insert(QString("Link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_total_count_isSet) {
        obj.insert(QString("TotalCount"), ::OpenAPI::toJsonValue(m_total_count));
    }
    return obj;
}

QString OAIAirportResource_Meta::getVersion() const {
    return m_version;
}
void OAIAirportResource_Meta::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIAirportResource_Meta::is_version_Set() const{
    return m_version_isSet;
}

bool OAIAirportResource_Meta::is_version_Valid() const{
    return m_version_isValid;
}

QList<OAILink> OAIAirportResource_Meta::getLink() const {
    return m_link;
}
void OAIAirportResource_Meta::setLink(const QList<OAILink> &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIAirportResource_Meta::is_link_Set() const{
    return m_link_isSet;
}

bool OAIAirportResource_Meta::is_link_Valid() const{
    return m_link_isValid;
}

qint32 OAIAirportResource_Meta::getTotalCount() const {
    return m_total_count;
}
void OAIAirportResource_Meta::setTotalCount(const qint32 &total_count) {
    m_total_count = total_count;
    m_total_count_isSet = true;
}

bool OAIAirportResource_Meta::is_total_count_Set() const{
    return m_total_count_isSet;
}

bool OAIAirportResource_Meta::is_total_count_Valid() const{
    return m_total_count_isValid;
}

bool OAIAirportResource_Meta::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAirportResource_Meta::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
