/**
 * TSAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AltLabel from './model/AltLabel';
import AltLabelMode from './model/AltLabelMode';
import DataItem from './model/DataItem';
import HierarchicalInterview from './model/HierarchicalInterview';
import Hierarchy from './model/Hierarchy';
import Interview from './model/Interview';
import Label from './model/Label';
import Language from './model/Language';
import Level from './model/Level';
import ParentDetails from './model/ParentDetails';
import ParentRef from './model/ParentRef';
import ParentType from './model/ParentType';
import SurveyDetail from './model/SurveyDetail';
import SurveyMetadata from './model/SurveyMetadata';
import SurveyMetadataBase from './model/SurveyMetadataBase';
import UseType from './model/UseType';
import Value from './model/Value';
import ValueRange from './model/ValueRange';
import Variable from './model/Variable';
import VariableType from './model/VariableType';
import VariableValues from './model/VariableValues';
import SurveysApi from './api/SurveysApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Tsapi = require('index'); // See note below*.
* var xxxSvc = new Tsapi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Tsapi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Tsapi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Tsapi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AltLabel model constructor.
     * @property {module:model/AltLabel}
     */
    AltLabel,

    /**
     * The AltLabelMode model constructor.
     * @property {module:model/AltLabelMode}
     */
    AltLabelMode,

    /**
     * The DataItem model constructor.
     * @property {module:model/DataItem}
     */
    DataItem,

    /**
     * The HierarchicalInterview model constructor.
     * @property {module:model/HierarchicalInterview}
     */
    HierarchicalInterview,

    /**
     * The Hierarchy model constructor.
     * @property {module:model/Hierarchy}
     */
    Hierarchy,

    /**
     * The Interview model constructor.
     * @property {module:model/Interview}
     */
    Interview,

    /**
     * The Label model constructor.
     * @property {module:model/Label}
     */
    Label,

    /**
     * The Language model constructor.
     * @property {module:model/Language}
     */
    Language,

    /**
     * The Level model constructor.
     * @property {module:model/Level}
     */
    Level,

    /**
     * The ParentDetails model constructor.
     * @property {module:model/ParentDetails}
     */
    ParentDetails,

    /**
     * The ParentRef model constructor.
     * @property {module:model/ParentRef}
     */
    ParentRef,

    /**
     * The ParentType model constructor.
     * @property {module:model/ParentType}
     */
    ParentType,

    /**
     * The SurveyDetail model constructor.
     * @property {module:model/SurveyDetail}
     */
    SurveyDetail,

    /**
     * The SurveyMetadata model constructor.
     * @property {module:model/SurveyMetadata}
     */
    SurveyMetadata,

    /**
     * The SurveyMetadataBase model constructor.
     * @property {module:model/SurveyMetadataBase}
     */
    SurveyMetadataBase,

    /**
     * The UseType model constructor.
     * @property {module:model/UseType}
     */
    UseType,

    /**
     * The Value model constructor.
     * @property {module:model/Value}
     */
    Value,

    /**
     * The ValueRange model constructor.
     * @property {module:model/ValueRange}
     */
    ValueRange,

    /**
     * The Variable model constructor.
     * @property {module:model/Variable}
     */
    Variable,

    /**
     * The VariableType model constructor.
     * @property {module:model/VariableType}
     */
    VariableType,

    /**
     * The VariableValues model constructor.
     * @property {module:model/VariableValues}
     */
    VariableValues,

    /**
    * The SurveysApi service constructor.
    * @property {module:api/SurveysApi}
    */
    SurveysApi
};
