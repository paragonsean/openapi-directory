# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.alt_label_mode import AltLabelMode
from openapi_server import util


class AltLabel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lang_ident: str=None, mode: AltLabelMode=None, text: str=None):
        """AltLabel - a model defined in OpenAPI

        :param lang_ident: The lang_ident of this AltLabel.
        :param mode: The mode of this AltLabel.
        :param text: The text of this AltLabel.
        """
        self.openapi_types = {
            'lang_ident': str,
            'mode': AltLabelMode,
            'text': str
        }

        self.attribute_map = {
            'lang_ident': 'langIdent',
            'mode': 'mode',
            'text': 'text'
        }

        self._lang_ident = lang_ident
        self._mode = mode
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AltLabel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AltLabel of this AltLabel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lang_ident(self):
        """Gets the lang_ident of this AltLabel.


        :return: The lang_ident of this AltLabel.
        :rtype: str
        """
        return self._lang_ident

    @lang_ident.setter
    def lang_ident(self, lang_ident):
        """Sets the lang_ident of this AltLabel.


        :param lang_ident: The lang_ident of this AltLabel.
        :type lang_ident: str
        """

        self._lang_ident = lang_ident

    @property
    def mode(self):
        """Gets the mode of this AltLabel.


        :return: The mode of this AltLabel.
        :rtype: AltLabelMode
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this AltLabel.


        :param mode: The mode of this AltLabel.
        :type mode: AltLabelMode
        """

        self._mode = mode

    @property
    def text(self):
        """Gets the text of this AltLabel.


        :return: The text of this AltLabel.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this AltLabel.


        :param text: The text of this AltLabel.
        :type text: str
        """

        self._text = text
