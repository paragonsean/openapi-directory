# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parent_ref import ParentRef
from openapi_server import util


class DataItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ident: str=None, parent_ident: ParentRef=None, values: List[str]=None):
        """DataItem - a model defined in OpenAPI

        :param ident: The ident of this DataItem.
        :param parent_ident: The parent_ident of this DataItem.
        :param values: The values of this DataItem.
        """
        self.openapi_types = {
            'ident': str,
            'parent_ident': ParentRef,
            'values': List[str]
        }

        self.attribute_map = {
            'ident': 'ident',
            'parent_ident': 'parentIdent',
            'values': 'values'
        }

        self._ident = ident
        self._parent_ident = parent_ident
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataItem of this DataItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ident(self):
        """Gets the ident of this DataItem.


        :return: The ident of this DataItem.
        :rtype: str
        """
        return self._ident

    @ident.setter
    def ident(self, ident):
        """Sets the ident of this DataItem.


        :param ident: The ident of this DataItem.
        :type ident: str
        """

        self._ident = ident

    @property
    def parent_ident(self):
        """Gets the parent_ident of this DataItem.


        :return: The parent_ident of this DataItem.
        :rtype: ParentRef
        """
        return self._parent_ident

    @parent_ident.setter
    def parent_ident(self, parent_ident):
        """Sets the parent_ident of this DataItem.


        :param parent_ident: The parent_ident of this DataItem.
        :type parent_ident: ParentRef
        """

        self._parent_ident = parent_ident

    @property
    def values(self):
        """Gets the values of this DataItem.


        :return: The values of this DataItem.
        :rtype: List[str]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this DataItem.


        :param values: The values of this DataItem.
        :type values: List[str]
        """

        self._values = values
