# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.value import Value
from openapi_server.models.value_range import ValueRange
from openapi_server import util


class VariableValues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, range: ValueRange=None, values: List[Value]=None):
        """VariableValues - a model defined in OpenAPI

        :param range: The range of this VariableValues.
        :param values: The values of this VariableValues.
        """
        self.openapi_types = {
            'range': ValueRange,
            'values': List[Value]
        }

        self.attribute_map = {
            'range': 'range',
            'values': 'values'
        }

        self._range = range
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VariableValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VariableValues of this VariableValues.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def range(self):
        """Gets the range of this VariableValues.


        :return: The range of this VariableValues.
        :rtype: ValueRange
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this VariableValues.


        :param range: The range of this VariableValues.
        :type range: ValueRange
        """

        self._range = range

    @property
    def values(self):
        """Gets the values of this VariableValues.


        :return: The values of this VariableValues.
        :rtype: List[Value]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this VariableValues.


        :param values: The values of this VariableValues.
        :type values: List[Value]
        """

        self._values = values
