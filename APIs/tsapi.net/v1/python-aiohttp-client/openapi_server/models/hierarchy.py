# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.parent_details import ParentDetails
from openapi_server.models.survey_metadata_base import SurveyMetadataBase
from openapi_server import util


class Hierarchy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ident: str=None, metadata: SurveyMetadataBase=None, parent: ParentDetails=None):
        """Hierarchy - a model defined in OpenAPI

        :param ident: The ident of this Hierarchy.
        :param metadata: The metadata of this Hierarchy.
        :param parent: The parent of this Hierarchy.
        """
        self.openapi_types = {
            'ident': str,
            'metadata': SurveyMetadataBase,
            'parent': ParentDetails
        }

        self.attribute_map = {
            'ident': 'ident',
            'metadata': 'metadata',
            'parent': 'parent'
        }

        self._ident = ident
        self._metadata = metadata
        self._parent = parent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Hierarchy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hierarchy of this Hierarchy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ident(self):
        """Gets the ident of this Hierarchy.


        :return: The ident of this Hierarchy.
        :rtype: str
        """
        return self._ident

    @ident.setter
    def ident(self, ident):
        """Sets the ident of this Hierarchy.


        :param ident: The ident of this Hierarchy.
        :type ident: str
        """

        self._ident = ident

    @property
    def metadata(self):
        """Gets the metadata of this Hierarchy.


        :return: The metadata of this Hierarchy.
        :rtype: SurveyMetadataBase
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this Hierarchy.


        :param metadata: The metadata of this Hierarchy.
        :type metadata: SurveyMetadataBase
        """

        self._metadata = metadata

    @property
    def parent(self):
        """Gets the parent of this Hierarchy.


        :return: The parent of this Hierarchy.
        :rtype: ParentDetails
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this Hierarchy.


        :param parent: The parent of this Hierarchy.
        :type parent: ParentDetails
        """

        self._parent = parent
