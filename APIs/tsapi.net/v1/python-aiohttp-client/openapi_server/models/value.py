# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.label import Label
from openapi_server import util


class Value(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, ident: str=None, label: Label=None, score: int=None):
        """Value - a model defined in OpenAPI

        :param code: The code of this Value.
        :param ident: The ident of this Value.
        :param label: The label of this Value.
        :param score: The score of this Value.
        """
        self.openapi_types = {
            'code': str,
            'ident': str,
            'label': Label,
            'score': int
        }

        self.attribute_map = {
            'code': 'code',
            'ident': 'ident',
            'label': 'label',
            'score': 'score'
        }

        self._code = code
        self._ident = ident
        self._label = label
        self._score = score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Value':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Value of this Value.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this Value.


        :return: The code of this Value.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Value.


        :param code: The code of this Value.
        :type code: str
        """

        self._code = code

    @property
    def ident(self):
        """Gets the ident of this Value.


        :return: The ident of this Value.
        :rtype: str
        """
        return self._ident

    @ident.setter
    def ident(self, ident):
        """Sets the ident of this Value.


        :param ident: The ident of this Value.
        :type ident: str
        """

        self._ident = ident

    @property
    def label(self):
        """Gets the label of this Value.


        :return: The label of this Value.
        :rtype: Label
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this Value.


        :param label: The label of this Value.
        :type label: Label
        """

        self._label = label

    @property
    def score(self):
        """Gets the score of this Value.


        :return: The score of this Value.
        :rtype: int
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this Value.


        :param score: The score of this Value.
        :type score: int
        """

        self._score = score
