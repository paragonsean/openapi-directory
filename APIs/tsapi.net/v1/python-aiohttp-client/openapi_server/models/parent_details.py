# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ParentDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, level: str=None, link_var: str=None, ordered: bool=None):
        """ParentDetails - a model defined in OpenAPI

        :param level: The level of this ParentDetails.
        :param link_var: The link_var of this ParentDetails.
        :param ordered: The ordered of this ParentDetails.
        """
        self.openapi_types = {
            'level': str,
            'link_var': str,
            'ordered': bool
        }

        self.attribute_map = {
            'level': 'level',
            'link_var': 'linkVar',
            'ordered': 'ordered'
        }

        self._level = level
        self._link_var = link_var
        self._ordered = ordered

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ParentDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ParentDetails of this ParentDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def level(self):
        """Gets the level of this ParentDetails.


        :return: The level of this ParentDetails.
        :rtype: str
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this ParentDetails.


        :param level: The level of this ParentDetails.
        :type level: str
        """

        self._level = level

    @property
    def link_var(self):
        """Gets the link_var of this ParentDetails.


        :return: The link_var of this ParentDetails.
        :rtype: str
        """
        return self._link_var

    @link_var.setter
    def link_var(self, link_var):
        """Sets the link_var of this ParentDetails.


        :param link_var: The link_var of this ParentDetails.
        :type link_var: str
        """

        self._link_var = link_var

    @property
    def ordered(self):
        """Gets the ordered of this ParentDetails.


        :return: The ordered of this ParentDetails.
        :rtype: bool
        """
        return self._ordered

    @ordered.setter
    def ordered(self, ordered):
        """Sets the ordered of this ParentDetails.


        :param ordered: The ordered of this ParentDetails.
        :type ordered: bool
        """

        self._ordered = ordered
