/**
 * TSAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIParentDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIParentDetails::OAIParentDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIParentDetails::OAIParentDetails() {
    this->initializeModel();
}

OAIParentDetails::~OAIParentDetails() {}

void OAIParentDetails::initializeModel() {

    m_level_isSet = false;
    m_level_isValid = false;

    m_link_var_isSet = false;
    m_link_var_isValid = false;

    m_ordered_isSet = false;
    m_ordered_isValid = false;
}

void OAIParentDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIParentDetails::fromJsonObject(QJsonObject json) {

    m_level_isValid = ::OpenAPI::fromJsonValue(m_level, json[QString("level")]);
    m_level_isSet = !json[QString("level")].isNull() && m_level_isValid;

    m_link_var_isValid = ::OpenAPI::fromJsonValue(m_link_var, json[QString("linkVar")]);
    m_link_var_isSet = !json[QString("linkVar")].isNull() && m_link_var_isValid;

    m_ordered_isValid = ::OpenAPI::fromJsonValue(m_ordered, json[QString("ordered")]);
    m_ordered_isSet = !json[QString("ordered")].isNull() && m_ordered_isValid;
}

QString OAIParentDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIParentDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_level_isSet) {
        obj.insert(QString("level"), ::OpenAPI::toJsonValue(m_level));
    }
    if (m_link_var_isSet) {
        obj.insert(QString("linkVar"), ::OpenAPI::toJsonValue(m_link_var));
    }
    if (m_ordered_isSet) {
        obj.insert(QString("ordered"), ::OpenAPI::toJsonValue(m_ordered));
    }
    return obj;
}

QString OAIParentDetails::getLevel() const {
    return m_level;
}
void OAIParentDetails::setLevel(const QString &level) {
    m_level = level;
    m_level_isSet = true;
}

bool OAIParentDetails::is_level_Set() const{
    return m_level_isSet;
}

bool OAIParentDetails::is_level_Valid() const{
    return m_level_isValid;
}

QString OAIParentDetails::getLinkVar() const {
    return m_link_var;
}
void OAIParentDetails::setLinkVar(const QString &link_var) {
    m_link_var = link_var;
    m_link_var_isSet = true;
}

bool OAIParentDetails::is_link_var_Set() const{
    return m_link_var_isSet;
}

bool OAIParentDetails::is_link_var_Valid() const{
    return m_link_var_isValid;
}

bool OAIParentDetails::isOrdered() const {
    return m_ordered;
}
void OAIParentDetails::setOrdered(const bool &ordered) {
    m_ordered = ordered;
    m_ordered_isSet = true;
}

bool OAIParentDetails::is_ordered_Set() const{
    return m_ordered_isSet;
}

bool OAIParentDetails::is_ordered_Valid() const{
    return m_ordered_isValid;
}

bool OAIParentDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_var_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ordered_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIParentDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
