/**
 * TSAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIValue.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIValue::OAIValue(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIValue::OAIValue() {
    this->initializeModel();
}

OAIValue::~OAIValue() {}

void OAIValue::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_ident_isSet = false;
    m_ident_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;
}

void OAIValue::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIValue::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_ident_isValid = ::OpenAPI::fromJsonValue(m_ident, json[QString("ident")]);
    m_ident_isSet = !json[QString("ident")].isNull() && m_ident_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;
}

QString OAIValue::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIValue::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_ident_isSet) {
        obj.insert(QString("ident"), ::OpenAPI::toJsonValue(m_ident));
    }
    if (m_label.isSet()) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    return obj;
}

QString OAIValue::getCode() const {
    return m_code;
}
void OAIValue::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIValue::is_code_Set() const{
    return m_code_isSet;
}

bool OAIValue::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIValue::getIdent() const {
    return m_ident;
}
void OAIValue::setIdent(const QString &ident) {
    m_ident = ident;
    m_ident_isSet = true;
}

bool OAIValue::is_ident_Set() const{
    return m_ident_isSet;
}

bool OAIValue::is_ident_Valid() const{
    return m_ident_isValid;
}

OAILabel OAIValue::getLabel() const {
    return m_label;
}
void OAIValue::setLabel(const OAILabel &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIValue::is_label_Set() const{
    return m_label_isSet;
}

bool OAIValue::is_label_Valid() const{
    return m_label_isValid;
}

qint32 OAIValue::getScore() const {
    return m_score;
}
void OAIValue::setScore(const qint32 &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAIValue::is_score_Set() const{
    return m_score_isSet;
}

bool OAIValue::is_score_Valid() const{
    return m_score_isValid;
}

bool OAIValue::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ident_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIValue::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
