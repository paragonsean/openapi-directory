/*
 * Control API v1
 * Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.  Detailed information on using this API can be found in the Ably <a href=\"https://ably.com/documentation/control-api\">developer documentation</a>.  Control API is currently in Beta. 
 *
 * The version of the OpenAPI document: 1.0.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.KeyPatch;
import org.openapitools.client.model.KeyPost;
import org.openapitools.client.model.KeyResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KeysApi
 */
@Disabled
public class KeysApiTest {

    private final KeysApi api = new KeysApi();

    /**
     * Lists app keys
     *
     * Lists the API keys associated with the application ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppIdKeysGetTest() throws ApiException {
        String appId = null;
        List<KeyResponse> response = api.appsAppIdKeysGet(appId);
        // TODO: test validations
    }

    /**
     * Updates a key
     *
     * Update the API key with the specified key ID, for the application with the specified application ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppIdKeysKeyIdPatchTest() throws ApiException {
        String appId = null;
        String keyId = null;
        KeyPatch keyPatch = null;
        KeyResponse response = api.appsAppIdKeysKeyIdPatch(appId, keyId, keyPatch);
        // TODO: test validations
    }

    /**
     * Revokes a key
     *
     * Revokes the API key with the specified ID, with the Application ID. This deletes the key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppIdKeysKeyIdRevokePostTest() throws ApiException {
        String appId = null;
        String keyId = null;
        api.appsAppIdKeysKeyIdRevokePost(appId, keyId);
        // TODO: test validations
    }

    /**
     * Creates a key
     *
     * Creates an API key for the application specified.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsAppIdKeysPostTest() throws ApiException {
        String appId = null;
        KeyPost keyPost = null;
        KeyResponse response = api.appsAppIdKeysPost(appId, keyPost);
        // TODO: test validations
    }

}
