/**
 * Control API v1
 * Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.  Detailed information on using this API can be found in the Ably <a href=\"https://ably.com/documentation/control-api\">developer documentation</a>.  Control API is currently in Beta. 
 *
 * The version of the OpenAPI document: 1.0.14
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMe.h
 *
 * 
 */

#ifndef OAIMe_H
#define OAIMe_H

#include <QJsonObject>

#include "OAIMe_account.h"
#include "OAIMe_token.h"
#include "OAIMe_user.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMe_account;
class OAIMe_token;
class OAIMe_user;

class OAIMe : public OAIObject {
public:
    OAIMe();
    OAIMe(QString json);
    ~OAIMe() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMe_account getAccount() const;
    void setAccount(const OAIMe_account &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    OAIMe_token getToken() const;
    void setToken(const OAIMe_token &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    OAIMe_user getUser() const;
    void setUser(const OAIMe_user &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMe_account m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    OAIMe_token m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    OAIMe_user m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMe)

#endif // OAIMe_H
