/**
 * Control API v1
 * Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.  Detailed information on using this API can be found in the Ably <a href=\"https://ably.com/documentation/control-api\">developer documentation</a>.  Control API is currently in Beta. 
 *
 * The version of the OpenAPI document: 1.0.14
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKey_post.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKey_post::OAIKey_post(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKey_post::OAIKey_post() {
    this->initializeModel();
}

OAIKey_post::~OAIKey_post() {}

void OAIKey_post::initializeModel() {

    m_capabilities_isSet = false;
    m_capabilities_isValid = false;

    m_channels_isSet = false;
    m_channels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIKey_post::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKey_post::fromJsonObject(QJsonObject json) {

    m_capabilities_isValid = ::OpenAPI::fromJsonValue(m_capabilities, json[QString("capabilities")]);
    m_capabilities_isSet = !json[QString("capabilities")].isNull() && m_capabilities_isValid;

    m_channels_isValid = ::OpenAPI::fromJsonValue(m_channels, json[QString("channels")]);
    m_channels_isSet = !json[QString("channels")].isNull() && m_channels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIKey_post::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKey_post::asJsonObject() const {
    QJsonObject obj;
    if (m_capabilities.size() > 0) {
        obj.insert(QString("capabilities"), ::OpenAPI::toJsonValue(m_capabilities));
    }
    if (m_channels_isSet) {
        obj.insert(QString("channels"), ::OpenAPI::toJsonValue(m_channels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QList<QString> OAIKey_post::getCapabilities() const {
    return m_capabilities;
}
void OAIKey_post::setCapabilities(const QList<QString> &capabilities) {
    m_capabilities = capabilities;
    m_capabilities_isSet = true;
}

bool OAIKey_post::is_capabilities_Set() const{
    return m_capabilities_isSet;
}

bool OAIKey_post::is_capabilities_Valid() const{
    return m_capabilities_isValid;
}

QString OAIKey_post::getChannels() const {
    return m_channels;
}
void OAIKey_post::setChannels(const QString &channels) {
    m_channels = channels;
    m_channels_isSet = true;
}

bool OAIKey_post::is_channels_Set() const{
    return m_channels_isSet;
}

bool OAIKey_post::is_channels_Valid() const{
    return m_channels_isValid;
}

QString OAIKey_post::getName() const {
    return m_name;
}
void OAIKey_post::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIKey_post::is_name_Set() const{
    return m_name_isSet;
}

bool OAIKey_post::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIKey_post::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_capabilities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_channels_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKey_post::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_capabilities_isValid && m_channels_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
