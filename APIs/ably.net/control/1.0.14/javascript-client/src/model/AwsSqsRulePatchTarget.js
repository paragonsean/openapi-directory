/**
 * Control API v1
 * Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.  Detailed information on using this API can be found in the Ably <a href=\"https://ably.com/documentation/control-api\">developer documentation</a>.  Control API is currently in Beta. 
 *
 * The version of the OpenAPI document: 1.0.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AwsKinesisRulePatchTargetAuthentication from './AwsKinesisRulePatchTargetAuthentication';

/**
 * The AwsSqsRulePatchTarget model module.
 * @module model/AwsSqsRulePatchTarget
 * @version 1.0.14
 */
class AwsSqsRulePatchTarget {
    /**
     * Constructs a new <code>AwsSqsRulePatchTarget</code>.
     * @alias module:model/AwsSqsRulePatchTarget
     */
    constructor() { 
        
        AwsSqsRulePatchTarget.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AwsSqsRulePatchTarget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AwsSqsRulePatchTarget} obj Optional instance to populate.
     * @return {module:model/AwsSqsRulePatchTarget} The populated <code>AwsSqsRulePatchTarget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AwsSqsRulePatchTarget();

            if (data.hasOwnProperty('authentication')) {
                obj['authentication'] = AwsKinesisRulePatchTargetAuthentication.constructFromObject(data['authentication']);
            }
            if (data.hasOwnProperty('awsAccountId')) {
                obj['awsAccountId'] = ApiClient.convertToType(data['awsAccountId'], 'String');
            }
            if (data.hasOwnProperty('enveloped')) {
                obj['enveloped'] = ApiClient.convertToType(data['enveloped'], 'Boolean');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('queueName')) {
                obj['queueName'] = ApiClient.convertToType(data['queueName'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AwsSqsRulePatchTarget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AwsSqsRulePatchTarget</code>.
     */
    static validateJSON(data) {
        // validate the optional field `authentication`
        if (data['authentication']) { // data not null
          AwsKinesisRulePatchTargetAuthentication.validateJSON(data['authentication']);
        }
        // ensure the json data is a string
        if (data['awsAccountId'] && !(typeof data['awsAccountId'] === 'string' || data['awsAccountId'] instanceof String)) {
            throw new Error("Expected the field `awsAccountId` to be a primitive type in the JSON string but got " + data['awsAccountId']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is a string
        if (data['queueName'] && !(typeof data['queueName'] === 'string' || data['queueName'] instanceof String)) {
            throw new Error("Expected the field `queueName` to be a primitive type in the JSON string but got " + data['queueName']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }

        return true;
    }


}



/**
 * @member {module:model/AwsKinesisRulePatchTargetAuthentication} authentication
 */
AwsSqsRulePatchTarget.prototype['authentication'] = undefined;

/**
 * Your AWS account ID.
 * @member {String} awsAccountId
 */
AwsSqsRulePatchTarget.prototype['awsAccountId'] = undefined;

/**
 * Messages delivered through Reactor are wrapped in an Ably envelope by default that contains metadata about the message and its payload. The form of the envelope depends on whether it is part of a Webhook/Function or a Queue/Firehose rule. For everything besides Webhooks, you can ensure you only get the raw payload by unchecking \"Enveloped\" when setting up the rule.
 * @member {Boolean} enveloped
 */
AwsSqsRulePatchTarget.prototype['enveloped'] = undefined;

/**
 * @member {String} format
 */
AwsSqsRulePatchTarget.prototype['format'] = undefined;

/**
 * The AWS SQS queue name.
 * @member {String} queueName
 */
AwsSqsRulePatchTarget.prototype['queueName'] = undefined;

/**
 * The region is which AWS SQS is hosted. See the <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#lambda_region\">AWS documentation</a> for more detail.
 * @member {String} region
 */
AwsSqsRulePatchTarget.prototype['region'] = undefined;






export default AwsSqsRulePatchTarget;

