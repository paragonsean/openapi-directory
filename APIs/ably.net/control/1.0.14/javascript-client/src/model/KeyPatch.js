/**
 * Control API v1
 * Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.  Detailed information on using this API can be found in the Ably <a href=\"https://ably.com/documentation/control-api\">developer documentation</a>.  Control API is currently in Beta. 
 *
 * The version of the OpenAPI document: 1.0.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The KeyPatch model module.
 * @module model/KeyPatch
 * @version 1.0.14
 */
class KeyPatch {
    /**
     * Constructs a new <code>KeyPatch</code>.
     * @alias module:model/KeyPatch
     */
    constructor() { 
        
        KeyPatch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KeyPatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeyPatch} obj Optional instance to populate.
     * @return {module:model/KeyPatch} The populated <code>KeyPatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeyPatch();

            if (data.hasOwnProperty('capabilities')) {
                obj['capabilities'] = ApiClient.convertToType(data['capabilities'], ['String']);
            }
            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeyPatch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeyPatch</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['capabilities'])) {
            throw new Error("Expected the field `capabilities` to be an array in the JSON data but got " + data['capabilities']);
        }
        // ensure the json data is a string
        if (data['channels'] && !(typeof data['channels'] === 'string' || data['channels'] instanceof String)) {
            throw new Error("Expected the field `channels` to be a primitive type in the JSON string but got " + data['channels']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * The capabilities that this key has. More information on capabilities can be found in the <a href=\"https://ably.com/documentation/core-features/authentication#capabilities-explained\">Ably documentation</a>.
 * @member {Array.<module:model/KeyPatch.CapabilitiesEnum>} capabilities
 */
KeyPatch.prototype['capabilities'] = undefined;

/**
 * Specify the channels and queues that this key can be used with.
 * @member {String} channels
 */
KeyPatch.prototype['channels'] = undefined;

/**
 * The name for your API key. This is a friendly name for your reference.
 * @member {String} name
 */
KeyPatch.prototype['name'] = undefined;





/**
 * Allowed values for the <code>capabilities</code> property.
 * @enum {String}
 * @readonly
 */
KeyPatch['CapabilitiesEnum'] = {

    /**
     * value: "publish"
     * @const
     */
    "publish": "publish",

    /**
     * value: "subscribe"
     * @const
     */
    "subscribe": "subscribe",

    /**
     * value: "history"
     * @const
     */
    "history": "history",

    /**
     * value: "presence"
     * @const
     */
    "presence": "presence",

    /**
     * value: "channel-metadata"
     * @const
     */
    "channel-metadata": "channel-metadata",

    /**
     * value: "push-admin"
     * @const
     */
    "push-admin": "push-admin",

    /**
     * value: "push-subscribe"
     * @const
     */
    "push-subscribe": "push-subscribe",

    /**
     * value: "statistics"
     * @const
     */
    "statistics": "statistics"
};



export default KeyPatch;

