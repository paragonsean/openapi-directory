/**
 * Control API v1
 * Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.  Detailed information on using this API can be found in the Ably <a href=\"https://ably.com/documentation/control-api\">developer documentation</a>.  Control API is currently in Beta. 
 *
 * The version of the OpenAPI document: 1.0.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RuleSourcePatch model module.
 * @module model/RuleSourcePatch
 * @version 1.0.14
 */
class RuleSourcePatch {
    /**
     * Constructs a new <code>RuleSourcePatch</code>.
     * @alias module:model/RuleSourcePatch
     */
    constructor() { 
        
        RuleSourcePatch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RuleSourcePatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuleSourcePatch} obj Optional instance to populate.
     * @return {module:model/RuleSourcePatch} The populated <code>RuleSourcePatch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuleSourcePatch();

            if (data.hasOwnProperty('channelFilter')) {
                obj['channelFilter'] = ApiClient.convertToType(data['channelFilter'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RuleSourcePatch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RuleSourcePatch</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['channelFilter'] && !(typeof data['channelFilter'] === 'string' || data['channelFilter'] instanceof String)) {
            throw new Error("Expected the field `channelFilter` to be a primitive type in the JSON string but got " + data['channelFilter']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * This field allows you to filter your rule based on a regular expression that is matched against the complete channel name. Leave this empty if you want the rule to apply to all channels.
 * @member {String} channelFilter
 */
RuleSourcePatch.prototype['channelFilter'] = undefined;

/**
 * The type `channel.message` delivers all messages published on a channel. The type `channel.presence` delivers all enter, update and leave events for members present on a channel. The type `channel.lifecycle` events for this rule type are currently not supported. Get in touch (https://ably.com/contact) if you need this feature. The type `channel.occupancy` delivers all occupancy events for the channel.
 * @member {module:model/RuleSourcePatch.TypeEnum} type
 */
RuleSourcePatch.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
RuleSourcePatch['TypeEnum'] = {

    /**
     * value: "channel.message"
     * @const
     */
    "message": "channel.message",

    /**
     * value: "channel.presence"
     * @const
     */
    "presence": "channel.presence",

    /**
     * value: "channel.lifecycle"
     * @const
     */
    "lifecycle": "channel.lifecycle",

    /**
     * value: "channel.occupancy"
     * @const
     */
    "occupancy": "channel.occupancy"
};



export default RuleSourcePatch;

