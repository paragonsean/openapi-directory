/**
 * Control API v1
 * Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.  Detailed information on using this API can be found in the Ably <a href=\"https://ably.com/documentation/control-api\">developer documentation</a>.  Control API is currently in Beta. 
 *
 * The version of the OpenAPI document: 1.0.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AmqpExternalRulePostTarget from './AmqpExternalRulePostTarget';
import AmqpExternalRuleResponse from './AmqpExternalRuleResponse';
import AmqpRuleResponse from './AmqpRuleResponse';
import AwsKinesisRuleResponse from './AwsKinesisRuleResponse';
import AwsLambdaRuleResponse from './AwsLambdaRuleResponse';
import AwsSqsRuleResponse from './AwsSqsRuleResponse';
import AzureFunctionRuleResponse from './AzureFunctionRuleResponse';
import CloudflareWorkerRuleResponse from './CloudflareWorkerRuleResponse';
import GoogleCloudFunctionRuleResponse from './GoogleCloudFunctionRuleResponse';
import HttpRuleResponse from './HttpRuleResponse';
import IftttRuleResponse from './IftttRuleResponse';
import RuleSource from './RuleSource';
import ZapierRuleResponse from './ZapierRuleResponse';

/**
 * The RuleResponse model module.
 * @module model/RuleResponse
 * @version 1.0.14
 */
class RuleResponse {
    /**
     * Constructs a new <code>RuleResponse</code>.
     * @alias module:model/RuleResponse
     * @param {(module:model/AmqpExternalRuleResponse|module:model/AmqpRuleResponse|module:model/AwsKinesisRuleResponse|module:model/AwsLambdaRuleResponse|module:model/AwsSqsRuleResponse|module:model/AzureFunctionRuleResponse|module:model/CloudflareWorkerRuleResponse|module:model/GoogleCloudFunctionRuleResponse|module:model/HttpRuleResponse|module:model/IftttRuleResponse|module:model/ZapierRuleResponse)} instance The actual instance to initialize RuleResponse.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "HttpRuleResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                HttpRuleResponse.validateJSON(instance); // throw an exception if no match
                // create HttpRuleResponse from JS object
                this.actualInstance = HttpRuleResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into HttpRuleResponse
            errorMessages.push("Failed to construct HttpRuleResponse: " + err)
        }

        try {
            if (typeof instance === "IftttRuleResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                IftttRuleResponse.validateJSON(instance); // throw an exception if no match
                // create IftttRuleResponse from JS object
                this.actualInstance = IftttRuleResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into IftttRuleResponse
            errorMessages.push("Failed to construct IftttRuleResponse: " + err)
        }

        try {
            if (typeof instance === "ZapierRuleResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ZapierRuleResponse.validateJSON(instance); // throw an exception if no match
                // create ZapierRuleResponse from JS object
                this.actualInstance = ZapierRuleResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ZapierRuleResponse
            errorMessages.push("Failed to construct ZapierRuleResponse: " + err)
        }

        try {
            if (typeof instance === "CloudflareWorkerRuleResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CloudflareWorkerRuleResponse.validateJSON(instance); // throw an exception if no match
                // create CloudflareWorkerRuleResponse from JS object
                this.actualInstance = CloudflareWorkerRuleResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CloudflareWorkerRuleResponse
            errorMessages.push("Failed to construct CloudflareWorkerRuleResponse: " + err)
        }

        try {
            if (typeof instance === "AzureFunctionRuleResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AzureFunctionRuleResponse.validateJSON(instance); // throw an exception if no match
                // create AzureFunctionRuleResponse from JS object
                this.actualInstance = AzureFunctionRuleResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AzureFunctionRuleResponse
            errorMessages.push("Failed to construct AzureFunctionRuleResponse: " + err)
        }

        try {
            if (typeof instance === "GoogleCloudFunctionRuleResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GoogleCloudFunctionRuleResponse.validateJSON(instance); // throw an exception if no match
                // create GoogleCloudFunctionRuleResponse from JS object
                this.actualInstance = GoogleCloudFunctionRuleResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GoogleCloudFunctionRuleResponse
            errorMessages.push("Failed to construct GoogleCloudFunctionRuleResponse: " + err)
        }

        try {
            if (typeof instance === "AwsLambdaRuleResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AwsLambdaRuleResponse.validateJSON(instance); // throw an exception if no match
                // create AwsLambdaRuleResponse from JS object
                this.actualInstance = AwsLambdaRuleResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AwsLambdaRuleResponse
            errorMessages.push("Failed to construct AwsLambdaRuleResponse: " + err)
        }

        try {
            if (typeof instance === "AwsKinesisRuleResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AwsKinesisRuleResponse.validateJSON(instance); // throw an exception if no match
                // create AwsKinesisRuleResponse from JS object
                this.actualInstance = AwsKinesisRuleResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AwsKinesisRuleResponse
            errorMessages.push("Failed to construct AwsKinesisRuleResponse: " + err)
        }

        try {
            if (typeof instance === "AwsSqsRuleResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AwsSqsRuleResponse.validateJSON(instance); // throw an exception if no match
                // create AwsSqsRuleResponse from JS object
                this.actualInstance = AwsSqsRuleResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AwsSqsRuleResponse
            errorMessages.push("Failed to construct AwsSqsRuleResponse: " + err)
        }

        try {
            if (typeof instance === "AmqpRuleResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AmqpRuleResponse.validateJSON(instance); // throw an exception if no match
                // create AmqpRuleResponse from JS object
                this.actualInstance = AmqpRuleResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AmqpRuleResponse
            errorMessages.push("Failed to construct AmqpRuleResponse: " + err)
        }

        try {
            if (typeof instance === "AmqpExternalRuleResponse") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AmqpExternalRuleResponse.validateJSON(instance); // throw an exception if no match
                // create AmqpExternalRuleResponse from JS object
                this.actualInstance = AmqpExternalRuleResponse.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AmqpExternalRuleResponse
            errorMessages.push("Failed to construct AmqpExternalRuleResponse: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `RuleResponse` with oneOf schemas AmqpExternalRuleResponse, AmqpRuleResponse, AwsKinesisRuleResponse, AwsLambdaRuleResponse, AwsSqsRuleResponse, AzureFunctionRuleResponse, CloudflareWorkerRuleResponse, GoogleCloudFunctionRuleResponse, HttpRuleResponse, IftttRuleResponse, ZapierRuleResponse. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `RuleResponse` with oneOf schemas AmqpExternalRuleResponse, AmqpRuleResponse, AwsKinesisRuleResponse, AwsLambdaRuleResponse, AwsSqsRuleResponse, AzureFunctionRuleResponse, CloudflareWorkerRuleResponse, GoogleCloudFunctionRuleResponse, HttpRuleResponse, IftttRuleResponse, ZapierRuleResponse. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>RuleResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuleResponse} obj Optional instance to populate.
     * @return {module:model/RuleResponse} The populated <code>RuleResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        return new RuleResponse(data);
    }

    /**
     * Gets the actual instance, which can be <code>AmqpExternalRuleResponse</code>, <code>AmqpRuleResponse</code>, <code>AwsKinesisRuleResponse</code>, <code>AwsLambdaRuleResponse</code>, <code>AwsSqsRuleResponse</code>, <code>AzureFunctionRuleResponse</code>, <code>CloudflareWorkerRuleResponse</code>, <code>GoogleCloudFunctionRuleResponse</code>, <code>HttpRuleResponse</code>, <code>IftttRuleResponse</code>, <code>ZapierRuleResponse</code>.
     * @return {(module:model/AmqpExternalRuleResponse|module:model/AmqpRuleResponse|module:model/AwsKinesisRuleResponse|module:model/AwsLambdaRuleResponse|module:model/AwsSqsRuleResponse|module:model/AzureFunctionRuleResponse|module:model/CloudflareWorkerRuleResponse|module:model/GoogleCloudFunctionRuleResponse|module:model/HttpRuleResponse|module:model/IftttRuleResponse|module:model/ZapierRuleResponse)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>AmqpExternalRuleResponse</code>, <code>AmqpRuleResponse</code>, <code>AwsKinesisRuleResponse</code>, <code>AwsLambdaRuleResponse</code>, <code>AwsSqsRuleResponse</code>, <code>AzureFunctionRuleResponse</code>, <code>CloudflareWorkerRuleResponse</code>, <code>GoogleCloudFunctionRuleResponse</code>, <code>HttpRuleResponse</code>, <code>IftttRuleResponse</code>, <code>ZapierRuleResponse</code>.
     * @param {(module:model/AmqpExternalRuleResponse|module:model/AmqpRuleResponse|module:model/AwsKinesisRuleResponse|module:model/AwsLambdaRuleResponse|module:model/AwsSqsRuleResponse|module:model/AzureFunctionRuleResponse|module:model/CloudflareWorkerRuleResponse|module:model/GoogleCloudFunctionRuleResponse|module:model/HttpRuleResponse|module:model/IftttRuleResponse|module:model/ZapierRuleResponse)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = RuleResponse.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of RuleResponse from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/RuleResponse} An instance of RuleResponse.
     */
    static fromJSON = function(json_string){
        return RuleResponse.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {Object} _links
 */
RuleResponse.prototype['_links'] = undefined;

/**
 * The Ably application ID.
 * @member {String} appId
 */
RuleResponse.prototype['appId'] = undefined;

/**
 * Unix timestamp representing the date and time of creation of the rule.
 * @member {Number} created
 */
RuleResponse.prototype['created'] = undefined;

/**
 * The rule ID.
 * @member {String} id
 */
RuleResponse.prototype['id'] = undefined;

/**
 * Unix timestamp representing the date and time of last modification of the rule.
 * @member {Number} modified
 */
RuleResponse.prototype['modified'] = undefined;

/**
 * Single request mode sends each event separately to the endpoint specified by the rule. You can read more about single request mode events in the <a href=\"https://ably.com/documentation/general/events#batching\">Ably documentation</a>.
 * @member {module:model/RuleResponse.RequestModeEnum} requestMode
 */
RuleResponse.prototype['requestMode'] = undefined;

/**
 * The type of rule. In this case AMQP external (using Firehose). See the <a href=\"https://ably.com/documentation/general/firehose\">Ably documentation</a> for further information.
 * @member {module:model/RuleResponse.RuleTypeEnum} ruleType
 */
RuleResponse.prototype['ruleType'] = undefined;

/**
 * @member {module:model/RuleSource} source
 */
RuleResponse.prototype['source'] = undefined;

/**
 * The status of the rule. Rules can be enabled or disabled.
 * @member {module:model/RuleResponse.StatusEnum} status
 */
RuleResponse.prototype['status'] = undefined;

/**
 * @member {module:model/AmqpExternalRulePostTarget} target
 */
RuleResponse.prototype['target'] = undefined;

/**
 * API version. Events and the format of their payloads are versioned. Please see the <a href=\"https://ably.com/documentation/general/events\">Events documentation</a>.
 * @member {String} version
 */
RuleResponse.prototype['version'] = undefined;


RuleResponse.OneOf = ["AmqpExternalRuleResponse", "AmqpRuleResponse", "AwsKinesisRuleResponse", "AwsLambdaRuleResponse", "AwsSqsRuleResponse", "AzureFunctionRuleResponse", "CloudflareWorkerRuleResponse", "GoogleCloudFunctionRuleResponse", "HttpRuleResponse", "IftttRuleResponse", "ZapierRuleResponse"];

export default RuleResponse;

