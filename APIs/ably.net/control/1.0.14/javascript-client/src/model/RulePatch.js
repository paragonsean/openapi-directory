/**
 * Control API v1
 * Use the Control API to manage your applications, namespaces, keys, queues, rules, and more.  Detailed information on using this API can be found in the Ably <a href=\"https://ably.com/documentation/control-api\">developer documentation</a>.  Control API is currently in Beta. 
 *
 * The version of the OpenAPI document: 1.0.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AmqpExternalRulePatch from './AmqpExternalRulePatch';
import AmqpExternalRulePatchTarget from './AmqpExternalRulePatchTarget';
import AmqpRulePatch from './AmqpRulePatch';
import AwsKinesisRulePatch from './AwsKinesisRulePatch';
import AwsLambdaRulePatch from './AwsLambdaRulePatch';
import AwsSqsRulePatch from './AwsSqsRulePatch';
import AzureFunctionRulePatch from './AzureFunctionRulePatch';
import CloudflareWorkerRulePatch from './CloudflareWorkerRulePatch';
import GoogleCloudFunctionRulePatch from './GoogleCloudFunctionRulePatch';
import HttpRulePatch from './HttpRulePatch';
import RuleSource from './RuleSource';
import ZapierRulePatch from './ZapierRulePatch';

/**
 * The RulePatch model module.
 * @module model/RulePatch
 * @version 1.0.14
 */
class RulePatch {
    /**
     * Constructs a new <code>RulePatch</code>.
     * @alias module:model/RulePatch
     * @param {(module:model/AmqpExternalRulePatch|module:model/AmqpRulePatch|module:model/AwsKinesisRulePatch|module:model/AwsLambdaRulePatch|module:model/AwsSqsRulePatch|module:model/AzureFunctionRulePatch|module:model/CloudflareWorkerRulePatch|module:model/GoogleCloudFunctionRulePatch|module:model/HttpRulePatch|module:model/ZapierRulePatch)} instance The actual instance to initialize RulePatch.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "HttpRulePatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                HttpRulePatch.validateJSON(instance); // throw an exception if no match
                // create HttpRulePatch from JS object
                this.actualInstance = HttpRulePatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into HttpRulePatch
            errorMessages.push("Failed to construct HttpRulePatch: " + err)
        }

        try {
            if (typeof instance === "ZapierRulePatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ZapierRulePatch.validateJSON(instance); // throw an exception if no match
                // create ZapierRulePatch from JS object
                this.actualInstance = ZapierRulePatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ZapierRulePatch
            errorMessages.push("Failed to construct ZapierRulePatch: " + err)
        }

        try {
            if (typeof instance === "CloudflareWorkerRulePatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                CloudflareWorkerRulePatch.validateJSON(instance); // throw an exception if no match
                // create CloudflareWorkerRulePatch from JS object
                this.actualInstance = CloudflareWorkerRulePatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into CloudflareWorkerRulePatch
            errorMessages.push("Failed to construct CloudflareWorkerRulePatch: " + err)
        }

        try {
            if (typeof instance === "AzureFunctionRulePatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AzureFunctionRulePatch.validateJSON(instance); // throw an exception if no match
                // create AzureFunctionRulePatch from JS object
                this.actualInstance = AzureFunctionRulePatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AzureFunctionRulePatch
            errorMessages.push("Failed to construct AzureFunctionRulePatch: " + err)
        }

        try {
            if (typeof instance === "GoogleCloudFunctionRulePatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GoogleCloudFunctionRulePatch.validateJSON(instance); // throw an exception if no match
                // create GoogleCloudFunctionRulePatch from JS object
                this.actualInstance = GoogleCloudFunctionRulePatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GoogleCloudFunctionRulePatch
            errorMessages.push("Failed to construct GoogleCloudFunctionRulePatch: " + err)
        }

        try {
            if (typeof instance === "AwsLambdaRulePatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AwsLambdaRulePatch.validateJSON(instance); // throw an exception if no match
                // create AwsLambdaRulePatch from JS object
                this.actualInstance = AwsLambdaRulePatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AwsLambdaRulePatch
            errorMessages.push("Failed to construct AwsLambdaRulePatch: " + err)
        }

        try {
            if (typeof instance === "AwsKinesisRulePatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AwsKinesisRulePatch.validateJSON(instance); // throw an exception if no match
                // create AwsKinesisRulePatch from JS object
                this.actualInstance = AwsKinesisRulePatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AwsKinesisRulePatch
            errorMessages.push("Failed to construct AwsKinesisRulePatch: " + err)
        }

        try {
            if (typeof instance === "AwsSqsRulePatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AwsSqsRulePatch.validateJSON(instance); // throw an exception if no match
                // create AwsSqsRulePatch from JS object
                this.actualInstance = AwsSqsRulePatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AwsSqsRulePatch
            errorMessages.push("Failed to construct AwsSqsRulePatch: " + err)
        }

        try {
            if (typeof instance === "AmqpRulePatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AmqpRulePatch.validateJSON(instance); // throw an exception if no match
                // create AmqpRulePatch from JS object
                this.actualInstance = AmqpRulePatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AmqpRulePatch
            errorMessages.push("Failed to construct AmqpRulePatch: " + err)
        }

        try {
            if (typeof instance === "AmqpExternalRulePatch") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                AmqpExternalRulePatch.validateJSON(instance); // throw an exception if no match
                // create AmqpExternalRulePatch from JS object
                this.actualInstance = AmqpExternalRulePatch.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into AmqpExternalRulePatch
            errorMessages.push("Failed to construct AmqpExternalRulePatch: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `RulePatch` with oneOf schemas AmqpExternalRulePatch, AmqpRulePatch, AwsKinesisRulePatch, AwsLambdaRulePatch, AwsSqsRulePatch, AzureFunctionRulePatch, CloudflareWorkerRulePatch, GoogleCloudFunctionRulePatch, HttpRulePatch, ZapierRulePatch. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `RulePatch` with oneOf schemas AmqpExternalRulePatch, AmqpRulePatch, AwsKinesisRulePatch, AwsLambdaRulePatch, AwsSqsRulePatch, AzureFunctionRulePatch, CloudflareWorkerRulePatch, GoogleCloudFunctionRulePatch, HttpRulePatch, ZapierRulePatch. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>RulePatch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RulePatch} obj Optional instance to populate.
     * @return {module:model/RulePatch} The populated <code>RulePatch</code> instance.
     */
    static constructFromObject(data, obj) {
        return new RulePatch(data);
    }

    /**
     * Gets the actual instance, which can be <code>AmqpExternalRulePatch</code>, <code>AmqpRulePatch</code>, <code>AwsKinesisRulePatch</code>, <code>AwsLambdaRulePatch</code>, <code>AwsSqsRulePatch</code>, <code>AzureFunctionRulePatch</code>, <code>CloudflareWorkerRulePatch</code>, <code>GoogleCloudFunctionRulePatch</code>, <code>HttpRulePatch</code>, <code>ZapierRulePatch</code>.
     * @return {(module:model/AmqpExternalRulePatch|module:model/AmqpRulePatch|module:model/AwsKinesisRulePatch|module:model/AwsLambdaRulePatch|module:model/AwsSqsRulePatch|module:model/AzureFunctionRulePatch|module:model/CloudflareWorkerRulePatch|module:model/GoogleCloudFunctionRulePatch|module:model/HttpRulePatch|module:model/ZapierRulePatch)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>AmqpExternalRulePatch</code>, <code>AmqpRulePatch</code>, <code>AwsKinesisRulePatch</code>, <code>AwsLambdaRulePatch</code>, <code>AwsSqsRulePatch</code>, <code>AzureFunctionRulePatch</code>, <code>CloudflareWorkerRulePatch</code>, <code>GoogleCloudFunctionRulePatch</code>, <code>HttpRulePatch</code>, <code>ZapierRulePatch</code>.
     * @param {(module:model/AmqpExternalRulePatch|module:model/AmqpRulePatch|module:model/AwsKinesisRulePatch|module:model/AwsLambdaRulePatch|module:model/AwsSqsRulePatch|module:model/AzureFunctionRulePatch|module:model/CloudflareWorkerRulePatch|module:model/GoogleCloudFunctionRulePatch|module:model/HttpRulePatch|module:model/ZapierRulePatch)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = RulePatch.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of RulePatch from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/RulePatch} An instance of RulePatch.
     */
    static fromJSON = function(json_string){
        return RulePatch.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Single request mode sends each event separately to the endpoint specified by the rule. You can read more about single request mode events in the <a href=\"https://ably.com/documentation/general/events#batching\">Ably documentation</a>.
 * @member {module:model/RulePatch.RequestModeEnum} requestMode
 */
RulePatch.prototype['requestMode'] = undefined;

/**
 * The type of rule. In this case AMQP external (using Firehose). See the <a href=\"https://ably.com/documentation/general/firehose\">Ably documentation</a> for further information.
 * @member {module:model/RulePatch.RuleTypeEnum} ruleType
 */
RulePatch.prototype['ruleType'] = undefined;

/**
 * @member {module:model/RuleSource} source
 */
RulePatch.prototype['source'] = undefined;

/**
 * The status of the rule. Rules can be enabled or disabled.
 * @member {module:model/RulePatch.StatusEnum} status
 */
RulePatch.prototype['status'] = undefined;

/**
 * @member {module:model/AmqpExternalRulePatchTarget} target
 */
RulePatch.prototype['target'] = undefined;


RulePatch.OneOf = ["AmqpExternalRulePatch", "AmqpRulePatch", "AwsKinesisRulePatch", "AwsLambdaRulePatch", "AwsSqsRulePatch", "AzureFunctionRulePatch", "CloudflareWorkerRulePatch", "GoogleCloudFunctionRulePatch", "HttpRulePatch", "ZapierRulePatch"];

export default RulePatch;

