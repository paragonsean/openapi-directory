openapi: 3.0.1
info:
  contact:
    x-twitter: ablyrealtime
  title: API V1
  version: v1
  x-apisguru-categories:
  - cloud
  - cloud
  x-logo:
    url: https://twitter.com/ablyrealtime/profile_image?size=original
  x-origin:
  - format: openapi
    url: https://ably.com/api-docs/v1/swagger.yaml
    version: "3.0"
  x-providerName: ably.net
  x-serviceName: control
servers:
- url: https://control.ably.net/v1
paths:
  /accounts/{account_id}/apps:
    get:
      operationId: accounts_account_id_apps_get
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/app_response'
                type: array
          description: App list
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Account not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
      security:
      - bearer_auth: []
      summary: Lists account apps
      tags:
      - apps
      x-openapi-router-controller: openapi_server.controllers.apps_controller
    post:
      operationId: accounts_account_id_apps_post
      parameters:
      - explode: false
        in: path
        name: account_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app_post'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app_response'
          description: App created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Account not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
      security:
      - bearer_auth: []
      summary: Creates an app
      tags:
      - apps
      x-openapi-router-controller: openapi_server.controllers.apps_controller
      x-codegen-request-body-name: body
  /apps/{app_id}/keys:
    get:
      operationId: apps_app_id_keys_get
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/key_response'
                type: array
          description: Key list
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gateway timeout
      security:
      - bearer_auth: []
      summary: Lists app keys
      tags:
      - keys
      x-openapi-router-controller: openapi_server.controllers.keys_controller
    post:
      operationId: apps_app_id_keys_post
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/key_post'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key_response'
          description: Key created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
      security:
      - bearer_auth: []
      summary: Creates a key
      tags:
      - keys
      x-openapi-router-controller: openapi_server.controllers.keys_controller
      x-codegen-request-body-name: body
  /apps/{app_id}/keys/{key_id}:
    patch:
      operationId: apps_app_id_keys_key_id_patch
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/key_patch'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key_response'
          description: Key updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gateway timeout
      security:
      - bearer_auth: []
      summary: Updates a key
      tags:
      - keys
      x-openapi-router-controller: openapi_server.controllers.keys_controller
      x-codegen-request-body-name: body
  /apps/{app_id}/keys/{key_id}/revoke:
    post:
      operationId: apps_app_id_keys_key_id_revoke_post
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: key_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: Key revoked
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gateway timeout
      security:
      - bearer_auth: []
      summary: Revokes a key
      tags:
      - keys
      x-openapi-router-controller: openapi_server.controllers.keys_controller
  /apps/{app_id}/namespaces:
    get:
      operationId: apps_app_id_namespaces_get
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/namespace_response'
                type: array
          description: Namespace list
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gateway timeout
      security:
      - bearer_auth: []
      summary: Lists namespaces
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
    post:
      operationId: apps_app_id_namespaces_post
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/namespace_post'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/namespace_response'
          description: Namespace created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
      security:
      - bearer_auth: []
      summary: Creates a namespace
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
      x-codegen-request-body-name: body
  /apps/{app_id}/namespaces/{namespace_id}:
    delete:
      operationId: apps_app_id_namespaces_namespace_id_delete
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: namespace_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Namespace deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gateway timeout
      security:
      - bearer_auth: []
      summary: Deletes a namespace
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
    patch:
      operationId: apps_app_id_namespaces_namespace_id_patch
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: namespace_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/namespace_patch'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/namespace_response'
          description: Namespace updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gateway timeout
      security:
      - bearer_auth: []
      summary: Updates a namespace
      tags:
      - namespaces
      x-openapi-router-controller: openapi_server.controllers.namespaces_controller
      x-codegen-request-body-name: body
  /apps/{app_id}/queues:
    get:
      operationId: apps_app_id_queues_get
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/queue_response'
                type: array
          description: Queue list
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: 503 Service unavailable
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gateway timeout
      security:
      - bearer_auth: []
      summary: Lists queues
      tags:
      - queues
      x-openapi-router-controller: openapi_server.controllers.queues_controller
    post:
      operationId: apps_app_id_queues_post
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queue'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queue_response'
          description: Queue created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
      security:
      - bearer_auth: []
      summary: Creates a queue
      tags:
      - queues
      x-openapi-router-controller: openapi_server.controllers.queues_controller
      x-codegen-request-body-name: body
  /apps/{app_id}/queues/{queue_id}:
    delete:
      operationId: apps_app_id_queues_queue_id_delete
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: queue_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Queue deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App/Queue not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: 503 Service unavailable
      security:
      - bearer_auth: []
      summary: Deletes a queue
      tags:
      - queues
      x-openapi-router-controller: openapi_server.controllers.queues_controller
  /apps/{app_id}/rules:
    get:
      operationId: apps_app_id_rules_get
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/rule_response'
                type: array
          description: Integration Rule list
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gateway timeout
      security:
      - bearer_auth: []
      summary: Lists Integration rules
      tags:
      - rules
      x-openapi-router-controller: openapi_server.controllers.rules_controller
    post:
      operationId: apps_app_id_rules_post
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rule_post'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response'
          description: Integration Rule created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gateway timeout
      security:
      - bearer_auth: []
      summary: Creates a Integration Rule
      tags:
      - rules
      x-openapi-router-controller: openapi_server.controllers.rules_controller
      x-codegen-request-body-name: body
  /apps/{app_id}/rules/{rule_id}:
    delete:
      operationId: apps_app_id_rules_rule_id_delete
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: Integration Rule deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gateway timeout
      security:
      - bearer_auth: []
      summary: Deletes a Integration Rule
      tags:
      - rules
      x-openapi-router-controller: openapi_server.controllers.rules_controller
    get:
      operationId: apps_app_id_rules_rule_id_get
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response'
          description: Integration Rule
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gateway timeout
      security:
      - bearer_auth: []
      summary: Gets a Integration Rule by ID
      tags:
      - rules
      x-openapi-router-controller: openapi_server.controllers.rules_controller
    patch:
      operationId: apps_app_id_rules_rule_id_patch
      parameters:
      - explode: false
        in: path
        name: app_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rule_patch'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response'
          description: Integration Rule updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Gateway timeout
      security:
      - bearer_auth: []
      summary: Updates a Integration Rule
      tags:
      - rules
      x-openapi-router-controller: openapi_server.controllers.rules_controller
      x-codegen-request-body-name: body
  /apps/{id}:
    delete:
      operationId: apps_id_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: App deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Invalid request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
      security:
      - bearer_auth: []
      summary: Deletes an app
      tags:
      - apps
      x-openapi-router-controller: openapi_server.controllers.apps_controller
    patch:
      operationId: apps_id_patch
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/app_patch'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app_response'
          description: App updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Invalid resource
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
      security:
      - bearer_auth: []
      summary: Updates an app
      tags:
      - apps
      x-openapi-router-controller: openapi_server.controllers.apps_controller
      x-codegen-request-body-name: body
  /apps/{id}/pkcs12:
    post:
      operationId: apps_id_pkcs12_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/app_pkcs12'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/app_response'
          description: App updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: App not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
      security:
      - bearer_auth: []
      summary: Updates app's APNS info from a .p12 file
      tags:
      - apps
      x-openapi-router-controller: openapi_server.controllers.apps_controller
      x-codegen-request-body-name: body
  /me:
    get:
      operationId: me_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/me'
          description: Token details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Authentication failed
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Internal server error
      security:
      - bearer_auth: []
      summary: Get token details
      tags:
      - tokens
      x-openapi-router-controller: openapi_server.controllers.tokens_controller
components:
  schemas:
    amqp_external_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - amqp/external
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/amqp_external_rule_patch_target'
      required:
      - ruleType
      title: amqp_external_rule_patch
      type: object
    amqp_external_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - amqp/external
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/amqp_external_rule_post_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: amqp_external_rule_post
      type: object
    amqp_external_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - amqp/external
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/amqp_external_rule_post_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: amqp_external_rule_response
      type: object
    amqp_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - amqp
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/amqp_rule_patch_target'
      required:
      - ruleType
      title: amqp_rule_patch
      type: object
    amqp_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - amqp
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/amqp_rule_post_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: amqp_rule_post
      type: object
    amqp_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - amqp
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/amqp_rule_post_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: amqp_rule_response
      type: object
    app_patch:
      additionalProperties: false
      properties:
        apnsCertificate:
          nullable: true
          title: apnsCertificate
          type: string
        apnsPrivateKey:
          nullable: true
          title: apnsPrivateKey
          type: string
        apnsUseSandboxEndpoint:
          nullable: true
          title: apnsUseSandboxEndpoint
          type: boolean
        fcmKey:
          nullable: true
          title: fcmKey
          type: string
        name:
          title: name
          type: string
        status:
          title: status
          type: string
        tlsOnly:
          nullable: true
          title: tlsOnly
          type: boolean
      title: app_patch
      type: object
    app_pkcs12:
      additionalProperties: false
      properties:
        p12File:
          format: binary
          type: string
        p12Pass:
          type: string
      required:
      - p12File
      - p12Pass
      type: object
    app_post:
      additionalProperties: false
      properties:
        apnsCertificate:
          nullable: true
          title: apnsCertificate
          type: string
        apnsPrivateKey:
          nullable: true
          title: apnsPrivateKey
          type: string
        apnsUseSandboxEndpoint:
          nullable: true
          title: apnsUseSandboxEndpoint
          type: boolean
        fcmKey:
          nullable: true
          title: fcmKey
          type: string
        name:
          title: name
          type: string
        status:
          deprecated: true
          title: status
          type: string
        tlsOnly:
          nullable: true
          title: tlsOnly
          type: boolean
      required:
      - name
      title: app_post
      type: object
    app_response:
      additionalProperties: false
      example:
        accountId: accountId
        _links: "{}"
        created: 0
        apnsUseSandboxEndpoint: true
        name: name
        modified: 6
        id: id
        status: status
        tlsOnly: true
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        accountId:
          title: accountId
          type: string
        apnsUseSandboxEndpoint:
          nullable: true
          title: apnsUseSandboxEndpoint
          type: boolean
        created:
          title: created
          type: integer
        id:
          title: id
          type: string
        modified:
          title: modified
          type: integer
        name:
          title: name
          type: string
        status:
          title: status
          type: string
        tlsOnly:
          nullable: true
          title: tlsOnly
          type: boolean
      title: app_response
      type: object
    aws_access_keys:
      additionalProperties: false
      properties:
        accessKeyId:
          title: accessKeyId
          type: string
        authenticationMode:
          enum:
          - credentials
          title: authenticationMode
          type: string
        secretAccessKey:
          title: secretAccessKey
          type: string
      required:
      - accessKeyId
      - secretAccessKey
      title: aws_access_keys
      type: object
    aws_access_keys_response:
      additionalProperties: false
      properties:
        accessKeyId:
          title: accessKeyId
          type: string
        authenticationMode:
          enum:
          - credentials
          title: authenticationMode
          type: string
      title: aws_access_keys_response
      type: object
    aws_assume_role:
      additionalProperties: false
      properties:
        assumeRoleArn:
          title: assumeRoleArn
          type: string
        authenticationMode:
          enum:
          - assumeRole
          title: authenticationMode
          type: string
      required:
      - assumeRoleArn
      title: aws_assume_role
      type: object
    aws_kinesis_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - aws/kinesis
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/aws_kinesis_rule_patch_target'
      required:
      - ruleType
      title: aws_kinesis_rule_patch
      type: object
    aws_kinesis_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - aws/kinesis
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/aws_kinesis_rule_post_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: aws_kinesis_rule_post
      type: object
    aws_kinesis_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - aws/kinesis
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/aws_kinesis_rule_response_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: aws_kinesis_rule_response
      type: object
    aws_lambda_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - aws/lambda
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/aws_lambda_rule_patch_target'
      required:
      - ruleType
      title: aws_lambda_rule_patch
      type: object
    aws_lambda_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - aws/lambda
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/aws_lambda_rule_patch_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: aws_lambda_rule_post
      type: object
    aws_lambda_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - aws/lambda
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/aws_lambda_rule_response_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: aws_lambda_rule_response
      type: object
    aws_sqs_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - aws/sqs
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/aws_sqs_rule_patch_target'
      required:
      - ruleType
      title: aws_sqs_rule_patch
      type: object
    aws_sqs_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - aws/sqs
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/aws_sqs_rule_post_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: aws_sqs_rule_post
      type: object
    aws_sqs_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - aws/sqs
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/aws_sqs_rule_response_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: aws_sqs_rule_response
      type: object
    azure_function_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/azure-function
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/azure_function_rule_patch_target'
      required:
      - ruleType
      title: azure_function_rule_patch
      type: object
    azure_function_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/azure-function
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/azure_function_rule_post_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: azure_function_rule_post
      type: object
    azure_function_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/azure-function
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/azure_function_rule_post_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: azure_function_rule_response
      type: object
    cloudflare_worker_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/cloudflare-worker
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/cloudflare_worker_rule_patch_target'
      required:
      - ruleType
      title: cloudflare_worker_rule_patch
      type: object
    cloudflare_worker_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/cloudflare-worker
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/cloudflare_worker_rule_post_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: cloudflare_worker_rule_post
      type: object
    cloudflare_worker_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/cloudflare-worker
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/cloudflare_worker_rule_post_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: cloudflare_worker_rule_response
      type: object
    error:
      additionalProperties: false
      example:
        code: 1
        details: "{}"
        href: href
        message: message
        statusCode: 5
      properties:
        code:
          title: code
          type: integer
        details:
          nullable: true
          title: details
          type: object
        href:
          title: href
          type: string
        message:
          title: message
          type: string
        statusCode:
          title: statusCode
          type: integer
      required:
      - code
      - href
      - message
      - statusCode
      title: error
      type: object
    google_cloud_function_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/google-cloud-function
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/google_cloud_function_rule_patch_target'
      required:
      - ruleType
      title: google_cloud_function_rule_patch
      type: object
    google_cloud_function_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/google-cloud-function
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/google_cloud_function_rule_post_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: google_cloud_function_rule_post
      type: object
    google_cloud_function_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/google-cloud-function
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/google_cloud_function_rule_post_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: google_cloud_function_rule_response
      type: object
    http_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/http_rule_patch_target'
      required:
      - ruleType
      title: http_rule_patch
      type: object
    http_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/http_rule_post_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: http_rule_post
      type: object
    http_rule_response:
      additionalProperties: false
      example:
        _links: "{}"
        created: 0.8008281904610115
        appId: appId
        ruleType: http
        modified: 6.027456183070403
        id: id
        requestMode: requestMode
        source:
          channelFilter: channelFilter
          type: type
        version: version
        status: status
        target:
          headers:
          - name: name
            value: value
          - name: name
            value: value
          format: format
          enveloped: true
          signingKeyId: signingKeyId
          url: url
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/http_rule_post_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: http_rule_response
      type: object
    ifttt_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/ifttt
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/ifttt_rule_patch_target'
      required:
      - ruleType
      title: ifttt_rule_patch
      type: object
    ifttt_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/ifttt
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/ifttt_rule_post_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: ifttt_rule_post
      type: object
    ifttt_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/ifttt
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/ifttt_rule_post_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: ifttt_rule_response
      type: object
    kafka_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - kafka
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/kafka_rule_patch_target'
      required:
      - ruleType
      title: kafka_rule_patch
      type: object
    kafka_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - kafka
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/kafka_rule_post_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: kafka_rule_post
      type: object
    kafka_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - kafka
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/kafka_rule_post_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: kafka_rule_response
      type: object
    key_patch:
      additionalProperties: false
      example:
        capability:
          channel1:
          - publish
          - subscribe
          channel2:
          - history
        name: string
      properties:
        capability:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        name:
          type: string
      title: key_patch
      type: object
    key_post:
      additionalProperties: false
      example:
        capability:
          channel1:
          - publish
          - subscribe
          channel2:
          - history
        name: string
      properties:
        capability:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        name:
          type: string
      required:
      - capability
      - name
      title: key_post
      type: object
    key_response:
      additionalProperties: false
      example:
        appId: string
        capability:
          channel1:
          - publish
          - subscribe
          channel2:
          - history
        created: 0
        id: string
        key: string
        modified: 0
        name: string
      properties:
        appId:
          type: string
        capability:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        created:
          type: integer
        id:
          type: string
        key:
          type: string
        modified:
          type: integer
        name:
          type: string
        status:
          type: integer
      title: key_response
      type: object
    me:
      additionalProperties: false
      example:
        user:
          id: 0
          email: email
        account:
          name: name
          id: id
        token:
          capabilities:
          - capabilities
          - capabilities
          name: name
          id: id
      properties:
        account:
          $ref: '#/components/schemas/me_account'
        token:
          $ref: '#/components/schemas/me_token'
        user:
          $ref: '#/components/schemas/me_user'
      title: me
      type: object
    namespace_patch:
      additionalProperties: false
      properties:
        authenticated:
          title: authenticated
          type: boolean
        exposeTimeserial:
          title: exposeTimeserial
          type: boolean
        persistLast:
          title: persistLast
          type: boolean
        persisted:
          title: persisted
          type: boolean
        pushEnabled:
          title: pushEnabled
          type: boolean
        tlsOnly:
          title: tlsOnly
          type: boolean
      title: namespace_patch
      type: object
    namespace_post:
      additionalProperties: false
      properties:
        authenticated:
          default: false
          title: authenticated
          type: boolean
        exposeTimeserial:
          default: false
          title: exposeTimeserial
          type: boolean
        id:
          title: id
          type: string
        persistLast:
          default: false
          title: persistLast
          type: boolean
        persisted:
          default: false
          title: persisted
          type: boolean
        pushEnabled:
          default: false
          title: pushEnabled
          type: boolean
        tlsOnly:
          default: false
          title: tlsOnly
          type: boolean
      required:
      - id
      title: namespace_post
      type: object
    namespace_response:
      additionalProperties: false
      example:
        persistLast: true
        authenticated: true
        created: 0
        appId: appId
        pushEnabled: true
        modified: 6
        id: id
        persisted: true
        exposeTimeserial: true
        tlsOnly: true
      properties:
        appId:
          title: appId
          type: string
        authenticated:
          title: authenticated
          type: boolean
        created:
          title: created
          type: integer
        exposeTimeserial:
          title: exposeTimeserial
          type: boolean
        id:
          title: id
          type: string
        modified:
          title: modified
          type: integer
        persistLast:
          title: persistLast
          type: boolean
        persisted:
          title: persisted
          type: boolean
        pushEnabled:
          title: pushEnabled
          type: boolean
        tlsOnly:
          title: tlsOnly
          type: boolean
      title: namespace_response
      type: object
    pulsar_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - pulsar
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/pulsar_rule_patch_target'
      required:
      - ruleType
      title: pulsar_rule_patch
      type: object
    pulsar_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - pulsar
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/pulsar_rule_post_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: pulsar_rule_post
      type: object
    pulsar_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - pulsar
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/pulsar_rule_patch_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: pulsar_rule_response
      type: object
    pulsar_token_auth:
      additionalProperties: false
      properties:
        authenticationMode:
          enum:
          - token
          title: authenticationMode
          type: string
        token:
          title: token
          type: string
      required:
      - authenticationMode
      - token
      title: pulsar_token_auth
      type: object
    queue:
      additionalProperties: false
      properties:
        maxLength:
          title: maxLength
          type: integer
        name:
          title: name
          type: string
        region:
          title: region
          type: string
        ttl:
          title: ttl
          type: integer
      required:
      - maxLength
      - name
      - region
      - ttl
      title: queue
      type: object
    queue_response:
      additionalProperties: false
      example:
        deadletterId: deadletterId
        amqp:
          queueName: queueName
          uri: uri
        deadletter: true
        ttl: 9
        stats:
          deliveryRate: 2.3021358869347655
          publishRate: 7.061401241503109
          acknowledgementRate: 5.637376656633329
        appId: appId
        name: name
        messages:
          total: 1
          ready: 6
          unacknowledged: 5
        id: id
        state: state
        stomp:
          destination: destination
          host: host
          uri: uri
        region: region
        maxLength: 0
      properties:
        amqp:
          $ref: '#/components/schemas/queue_response_amqp'
        appId:
          title: appId
          type: string
        deadletter:
          title: deadletter
          type: boolean
        deadletterId:
          nullable: true
          title: deadletterId
          type: string
        id:
          title: id
          type: string
        maxLength:
          title: maxLength
          type: integer
        messages:
          $ref: '#/components/schemas/queue_response_messages'
        name:
          title: name
          type: string
        region:
          title: region
          type: string
        state:
          title: state
          type: string
        stats:
          $ref: '#/components/schemas/queue_response_stats'
        stomp:
          $ref: '#/components/schemas/queue_response_stomp'
        ttl:
          title: ttl
          type: integer
      title: queue_response
      type: object
    rule_patch:
      discriminator:
        mapping:
          amqp: '#/components/schemas/amqp_rule_patch'
          amqp/external: '#/components/schemas/amqp_external_rule_patch'
          aws/kinesis: '#/components/schemas/aws_kinesis_rule_patch'
          aws/lambda: '#/components/schemas/aws_lambda_rule_patch'
          aws/sqs: '#/components/schemas/aws_sqs_rule_patch'
          http: '#/components/schemas/http_rule_patch'
          http/azure-function: '#/components/schemas/azure_function_rule_patch'
          http/cloudflare-worker: '#/components/schemas/cloudflare_worker_rule_patch'
          http/google-cloud-function: '#/components/schemas/google_cloud_function_rule_patch'
          http/ifttt: '#/components/schemas/ifttt_rule_patch'
          http/zapier: '#/components/schemas/zapier_rule_patch'
          kafka: '#/components/schemas/kafka_rule_patch'
          pulsar: '#/components/schemas/pulsar_rule_patch'
        propertyName: ruleType
      oneOf:
      - $ref: '#/components/schemas/http_rule_patch'
      - $ref: '#/components/schemas/ifttt_rule_patch'
      - $ref: '#/components/schemas/zapier_rule_patch'
      - $ref: '#/components/schemas/cloudflare_worker_rule_patch'
      - $ref: '#/components/schemas/azure_function_rule_patch'
      - $ref: '#/components/schemas/google_cloud_function_rule_patch'
      - $ref: '#/components/schemas/aws_lambda_rule_patch'
      - $ref: '#/components/schemas/aws_kinesis_rule_patch'
      - $ref: '#/components/schemas/aws_sqs_rule_patch'
      - $ref: '#/components/schemas/amqp_rule_patch'
      - $ref: '#/components/schemas/amqp_external_rule_patch'
      - $ref: '#/components/schemas/kafka_rule_patch'
      - $ref: '#/components/schemas/pulsar_rule_patch'
      title: rule_patch
    rule_post:
      discriminator:
        mapping:
          amqp: '#/components/schemas/amqp_rule_post'
          amqp/external: '#/components/schemas/amqp_external_rule_post'
          aws/kinesis: '#/components/schemas/aws_kinesis_rule_post'
          aws/lambda: '#/components/schemas/aws_lambda_rule_post'
          aws/sqs: '#/components/schemas/aws_sqs_rule_post'
          http: '#/components/schemas/http_rule_post'
          http/azure-function: '#/components/schemas/azure_function_rule_post'
          http/cloudflare-worker: '#/components/schemas/cloudflare_worker_rule_post'
          http/google-cloud-function: '#/components/schemas/google_cloud_function_rule_post'
          http/ifttt: '#/components/schemas/ifttt_rule_post'
          http/zapier: '#/components/schemas/zapier_rule_post'
          kafka: '#/components/schemas/kafka_rule_post'
          pulsar: '#/components/schemas/pulsar_rule_post'
        propertyName: ruleType
      oneOf:
      - $ref: '#/components/schemas/http_rule_post'
      - $ref: '#/components/schemas/ifttt_rule_post'
      - $ref: '#/components/schemas/zapier_rule_post'
      - $ref: '#/components/schemas/cloudflare_worker_rule_post'
      - $ref: '#/components/schemas/azure_function_rule_post'
      - $ref: '#/components/schemas/google_cloud_function_rule_post'
      - $ref: '#/components/schemas/aws_lambda_rule_post'
      - $ref: '#/components/schemas/aws_kinesis_rule_post'
      - $ref: '#/components/schemas/aws_sqs_rule_post'
      - $ref: '#/components/schemas/amqp_rule_post'
      - $ref: '#/components/schemas/amqp_external_rule_post'
      - $ref: '#/components/schemas/kafka_rule_post'
      - $ref: '#/components/schemas/pulsar_rule_post'
      title: rule_post
    rule_response:
      discriminator:
        mapping:
          amqp: '#/components/schemas/amqp_rule_response'
          amqp/external: '#/components/schemas/amqp_external_rule_response'
          aws/kinesis: '#/components/schemas/aws_kinesis_rule_response'
          aws/lambda: '#/components/schemas/aws_lambda_rule_response'
          aws/sqs: '#/components/schemas/aws_sqs_rule_response'
          http: '#/components/schemas/http_rule_response'
          http/azure-function: '#/components/schemas/azure_function_rule_response'
          http/cloudflare-worker: '#/components/schemas/cloudflare_worker_rule_response'
          http/google-cloud-function: '#/components/schemas/google_cloud_function_rule_response'
          http/ifttt: '#/components/schemas/ifttt_rule_response'
          http/zapier: '#/components/schemas/zapier_rule_response'
          kafka: '#/components/schemas/kafka_rule_response'
          pulsar: '#/components/schemas/pulsar_rule_response'
          unsupported: '#/components/schemas/unsupported_rule_response'
        propertyName: ruleType
      oneOf:
      - $ref: '#/components/schemas/http_rule_response'
      - $ref: '#/components/schemas/ifttt_rule_response'
      - $ref: '#/components/schemas/zapier_rule_response'
      - $ref: '#/components/schemas/cloudflare_worker_rule_response'
      - $ref: '#/components/schemas/azure_function_rule_response'
      - $ref: '#/components/schemas/google_cloud_function_rule_response'
      - $ref: '#/components/schemas/aws_lambda_rule_response'
      - $ref: '#/components/schemas/aws_kinesis_rule_response'
      - $ref: '#/components/schemas/aws_sqs_rule_response'
      - $ref: '#/components/schemas/amqp_rule_response'
      - $ref: '#/components/schemas/amqp_external_rule_response'
      - $ref: '#/components/schemas/kafka_rule_response'
      - $ref: '#/components/schemas/pulsar_rule_response'
      - $ref: '#/components/schemas/unsupported_rule_response'
      title: rule_response
    rule_source:
      additionalProperties: false
      example:
        channelFilter: channelFilter
        type: type
      properties:
        channelFilter:
          title: channelFilter
          type: string
        type:
          title: type
          type: string
      required:
      - channelFilter
      - type
      title: rule_source
      type: object
    rule_source_patch:
      additionalProperties: false
      properties:
        channelFilter:
          title: channelFilter
          type: string
        type:
          title: type
          type: string
      title: rule_source_patch
      type: object
    unsupported_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - unsupported
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/unsupported_rule_response_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: unsupported_rule_response
      type: object
    zapier_rule_patch:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/zapier
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source_patch'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/cloudflare_worker_rule_patch_target'
      required:
      - ruleType
      title: zapier_rule_patch
      type: object
    zapier_rule_post:
      additionalProperties: false
      properties:
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/zapier
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/cloudflare_worker_rule_post_target'
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: zapier_rule_post
      type: object
    zapier_rule_response:
      additionalProperties: false
      properties:
        _links:
          nullable: true
          title: _links
          type: object
        appId:
          title: appId
          type: string
        created:
          title: created
          type: number
        id:
          title: id
          type: string
        modified:
          title: modified
          type: number
        requestMode:
          title: requestMode
          type: string
        ruleType:
          enum:
          - http/zapier
          title: ruleType
          type: string
        source:
          $ref: '#/components/schemas/rule_source'
        status:
          title: status
          type: string
        target:
          $ref: '#/components/schemas/cloudflare_worker_rule_post_target'
        version:
          title: version
          type: string
      required:
      - requestMode
      - ruleType
      - source
      - target
      title: zapier_rule_response
      type: object
    amqp_external_rule_patch_target_headers_inner:
      example:
        name: name
        value: value
      properties:
        name:
          title: name
          type: string
        value:
          title: value
          type: string
      title: amqp_external_rule_patch_target_headers_inner
      type: object
    amqp_external_rule_patch_target:
      additionalProperties: false
      properties:
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        exchange:
          title: exchange
          type: string
        format:
          title: format
          type: string
        headers:
          items:
            $ref: '#/components/schemas/amqp_external_rule_patch_target_headers_inner'
          title: headers
          type: array
        mandatoryRoute:
          title: mandatoryRoute
          type: boolean
        messageTtl:
          title: messageTtl
          type: integer
        persistentMessages:
          title: persistentMessages
          type: boolean
        routingKey:
          title: routingKey
          type: string
        url:
          title: url
          type: string
      title: amqp_external_rule_patch_target
      type: object
    amqp_external_rule_post_target:
      additionalProperties: false
      properties:
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        exchange:
          title: exchange
          type: string
        format:
          title: format
          type: string
        headers:
          items:
            $ref: '#/components/schemas/amqp_external_rule_patch_target_headers_inner'
          title: headers
          type: array
        mandatoryRoute:
          title: mandatoryRoute
          type: boolean
        messageTtl:
          title: messageTtl
          type: integer
        persistentMessages:
          title: persistentMessages
          type: boolean
        routingKey:
          title: routingKey
          type: string
        url:
          title: url
          type: string
      required:
      - mandatoryRoute
      - persistentMessages
      - routingKey
      - url
      title: amqp_external_rule_post_target
      type: object
    amqp_rule_patch_target:
      additionalProperties: false
      properties:
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        headers:
          items:
            $ref: '#/components/schemas/amqp_external_rule_patch_target_headers_inner'
          title: headers
          type: array
        queueId:
          title: queueId
          type: string
      title: amqp_rule_patch_target
      type: object
    amqp_rule_post_target:
      additionalProperties: false
      properties:
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        headers:
          items:
            $ref: '#/components/schemas/amqp_external_rule_patch_target_headers_inner'
          title: headers
          type: array
        queueId:
          title: queueId
          type: string
      required:
      - queueId
      title: amqp_rule_post_target
      type: object
    aws_kinesis_rule_patch_target_authentication:
      discriminator:
        mapping:
          assumeRole: '#/components/schemas/aws_assume_role'
          credentials: '#/components/schemas/aws_access_keys'
        propertyName: authenticationMode
      oneOf:
      - $ref: '#/components/schemas/aws_access_keys'
      - $ref: '#/components/schemas/aws_assume_role'
      title: aws_kinesis_rule_patch_target_authentication
    aws_kinesis_rule_patch_target:
      additionalProperties: false
      properties:
        authentication:
          $ref: '#/components/schemas/aws_kinesis_rule_patch_target_authentication'
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        partitionKey:
          title: partitionKey
          type: string
        region:
          title: region
          type: string
        streamName:
          title: streamName
          type: string
      title: aws_kinesis_rule_patch_target
      type: object
    aws_kinesis_rule_post_target:
      additionalProperties: false
      properties:
        authentication:
          $ref: '#/components/schemas/aws_kinesis_rule_patch_target_authentication'
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        partitionKey:
          title: partitionKey
          type: string
        region:
          title: region
          type: string
        streamName:
          title: streamName
          type: string
      required:
      - authentication
      - format
      - partitionKey
      - region
      - streamName
      title: aws_kinesis_rule_post_target
      type: object
    aws_kinesis_rule_response_target_authentication:
      discriminator:
        mapping:
          assumeRole: '#/components/schemas/aws_assume_role'
          credentials: '#/components/schemas/aws_access_keys_response'
        propertyName: authenticationMode
      oneOf:
      - $ref: '#/components/schemas/aws_access_keys_response'
      - $ref: '#/components/schemas/aws_assume_role'
      title: aws_kinesis_rule_response_target_authentication
    aws_kinesis_rule_response_target:
      additionalProperties: false
      properties:
        authentication:
          $ref: '#/components/schemas/aws_kinesis_rule_response_target_authentication'
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        partitionKey:
          title: partitionKey
          type: string
        region:
          title: region
          type: string
        streamName:
          title: streamName
          type: string
      required:
      - authentication
      - format
      - partitionKey
      - region
      - streamName
      title: aws_kinesis_rule_response_target
      type: object
    aws_lambda_rule_patch_target:
      additionalProperties: false
      properties:
        authentication:
          $ref: '#/components/schemas/aws_kinesis_rule_patch_target_authentication'
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        functionName:
          title: functionName
          type: string
        region:
          title: region
          type: string
      required:
      - authentication
      - functionName
      - region
      title: aws_lambda_rule_patch_target
      type: object
    aws_lambda_rule_response_target:
      additionalProperties: false
      properties:
        authentication:
          $ref: '#/components/schemas/aws_kinesis_rule_response_target_authentication'
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        functionName:
          title: functionName
          type: string
        region:
          title: region
          type: string
      required:
      - authentication
      - functionName
      - region
      title: aws_lambda_rule_response_target
      type: object
    aws_sqs_rule_patch_target:
      additionalProperties: false
      properties:
        authentication:
          $ref: '#/components/schemas/aws_kinesis_rule_patch_target_authentication'
        awsAccountId:
          title: awsAccountId
          type: string
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        queueName:
          title: queueName
          type: string
        region:
          title: region
          type: string
      title: aws_sqs_rule_patch_target
      type: object
    aws_sqs_rule_post_target:
      additionalProperties: false
      properties:
        authentication:
          $ref: '#/components/schemas/aws_kinesis_rule_patch_target_authentication'
        awsAccountId:
          title: awsAccountId
          type: string
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        queueName:
          title: queueName
          type: string
        region:
          title: region
          type: string
      required:
      - authentication
      - awsAccountId
      - queueName
      - region
      title: aws_sqs_rule_post_target
      type: object
    aws_sqs_rule_response_target:
      additionalProperties: false
      properties:
        authentication:
          $ref: '#/components/schemas/aws_kinesis_rule_response_target_authentication'
        awsAccountId:
          title: awsAccountId
          type: string
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        queueName:
          title: queueName
          type: string
        region:
          title: region
          type: string
      required:
      - authentication
      - awsAccountId
      - queueName
      - region
      title: aws_sqs_rule_response_target
      type: object
    azure_function_rule_patch_target:
      additionalProperties: false
      properties:
        azureAppId:
          title: azureAppId
          type: string
        azureFunctionName:
          title: azureFunctionName
          type: string
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        headers:
          items:
            $ref: '#/components/schemas/amqp_external_rule_patch_target_headers_inner'
          title: headers
          type: array
        signingKeyId:
          nullable: true
          title: signingKeyId
          type: string
      title: azure_function_rule_patch_target
      type: object
    azure_function_rule_post_target:
      additionalProperties: false
      properties:
        azureAppId:
          title: azureAppId
          type: string
        azureFunctionName:
          title: azureFunctionName
          type: string
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        headers:
          items:
            $ref: '#/components/schemas/amqp_external_rule_patch_target_headers_inner'
          title: headers
          type: array
        signingKeyId:
          nullable: true
          title: signingKeyId
          type: string
      required:
      - azureAppId
      - azureFunctionName
      title: azure_function_rule_post_target
      type: object
    cloudflare_worker_rule_patch_target:
      additionalProperties: false
      properties:
        headers:
          items:
            $ref: '#/components/schemas/amqp_external_rule_patch_target_headers_inner'
          title: headers
          type: array
        signingKeyId:
          nullable: true
          title: signingKeyId
          type: string
        url:
          title: url
          type: string
      title: cloudflare_worker_rule_patch_target
      type: object
    cloudflare_worker_rule_post_target:
      additionalProperties: false
      properties:
        headers:
          items:
            $ref: '#/components/schemas/amqp_external_rule_patch_target_headers_inner'
          title: headers
          type: array
        signingKeyId:
          nullable: true
          title: signingKeyId
          type: string
        url:
          title: url
          type: string
      required:
      - url
      title: cloudflare_worker_rule_post_target
      type: object
    google_cloud_function_rule_patch_target:
      additionalProperties: false
      properties:
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        functionName:
          title: functionName
          type: string
        headers:
          items:
            $ref: '#/components/schemas/amqp_external_rule_patch_target_headers_inner'
          title: headers
          type: array
        projectId:
          title: projectId
          type: string
        region:
          title: region
          type: string
        signingKeyId:
          nullable: true
          title: signingKeyId
          type: string
      title: google_cloud_function_rule_patch_target
      type: object
    google_cloud_function_rule_post_target:
      additionalProperties: false
      properties:
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        functionName:
          title: functionName
          type: string
        headers:
          items:
            $ref: '#/components/schemas/amqp_external_rule_patch_target_headers_inner'
          title: headers
          type: array
        projectId:
          title: projectId
          type: string
        region:
          title: region
          type: string
        signingKeyId:
          nullable: true
          title: signingKeyId
          type: string
      required:
      - functionName
      - projectId
      - region
      title: google_cloud_function_rule_post_target
      type: object
    http_rule_patch_target:
      additionalProperties: false
      properties:
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        headers:
          items:
            $ref: '#/components/schemas/amqp_external_rule_patch_target_headers_inner'
          title: headers
          type: array
        signingKeyId:
          nullable: true
          title: signingKeyId
          type: string
        url:
          title: url
          type: string
      title: http_rule_patch_target
      type: object
    http_rule_post_target:
      additionalProperties: false
      example:
        headers:
        - name: name
          value: value
        - name: name
          value: value
        format: format
        enveloped: true
        signingKeyId: signingKeyId
        url: url
      properties:
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        headers:
          items:
            $ref: '#/components/schemas/amqp_external_rule_patch_target_headers_inner'
          title: headers
          type: array
        signingKeyId:
          nullable: true
          title: signingKeyId
          type: string
        url:
          title: url
          type: string
      required:
      - format
      - url
      title: http_rule_post_target
      type: object
    ifttt_rule_patch_target:
      additionalProperties: false
      properties:
        eventName:
          title: eventName
          type: string
        webhookKey:
          title: webhookKey
          type: string
      title: ifttt_rule_patch_target
      type: object
    ifttt_rule_post_target:
      additionalProperties: false
      properties:
        eventName:
          title: eventName
          type: string
        webhookKey:
          title: webhookKey
          type: string
      required:
      - eventName
      - webhookKey
      title: ifttt_rule_post_target
      type: object
    kafka_rule_patch_target_auth_sasl:
      additionalProperties: false
      properties:
        mechanism:
          enum:
          - plain
          - scram-sha-256
          - scram-sha-512
          title: mechanism
          type: string
        password:
          title: password
          type: string
        username:
          title: username
          type: string
      title: kafka_rule_patch_target_auth_sasl
      type: object
    kafka_rule_patch_target_auth:
      additionalProperties: false
      properties:
        sasl:
          $ref: '#/components/schemas/kafka_rule_patch_target_auth_sasl'
      title: kafka_rule_patch_target_auth
      type: object
    kafka_rule_patch_target:
      additionalProperties: false
      properties:
        auth:
          $ref: '#/components/schemas/kafka_rule_patch_target_auth'
        brokers:
          items:
            type: string
          title: brokers
          type: array
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        routingKey:
          title: routingKey
          type: string
      title: kafka_rule_patch_target
      type: object
    kafka_rule_post_target:
      additionalProperties: false
      properties:
        auth:
          $ref: '#/components/schemas/kafka_rule_patch_target_auth'
        brokers:
          items:
            type: string
          title: brokers
          type: array
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        routingKey:
          title: routingKey
          type: string
      required:
      - auth
      - brokers
      - routingKey
      title: kafka_rule_post_target
      type: object
    me_account:
      additionalProperties: false
      example:
        name: name
        id: id
      properties:
        id:
          title: id
          type: string
        name:
          title: name
          type: string
      required:
      - id
      - name
      title: me_account
      type: object
    me_token:
      additionalProperties: false
      example:
        capabilities:
        - capabilities
        - capabilities
        name: name
        id: id
      properties:
        capabilities:
          items:
            type: string
          title: capabilities
          type: array
        id:
          title: id
          type: string
        name:
          title: name
          type: string
      required:
      - capabilities
      - id
      - name
      title: me_token
      type: object
    me_user:
      additionalProperties: false
      example:
        id: 0
        email: email
      properties:
        email:
          title: email
          type: string
        id:
          title: id
          type: integer
      required:
      - email
      - id
      title: me_user
      type: object
    pulsar_rule_patch_target_authentication:
      discriminator:
        mapping:
          token: '#/components/schemas/pulsar_token_auth'
        propertyName: authenticationMode
      oneOf:
      - $ref: '#/components/schemas/pulsar_token_auth'
      title: pulsar_rule_patch_target_authentication
    pulsar_rule_patch_target:
      additionalProperties: false
      properties:
        authentication:
          $ref: '#/components/schemas/pulsar_rule_patch_target_authentication'
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        routingKey:
          title: routingKey
          type: string
        serviceUrl:
          title: serviceUrl
          type: string
        tlsTrustCerts:
          items:
            type: string
          nullable: true
          title: tlsTrustCerts
          type: array
        topic:
          title: topic
          type: string
      title: pulsar_rule_patch_target
      type: object
    pulsar_rule_post_target:
      additionalProperties: false
      properties:
        authentication:
          $ref: '#/components/schemas/pulsar_rule_patch_target_authentication'
        enveloped:
          nullable: true
          title: enveloped
          type: boolean
        format:
          title: format
          type: string
        routingKey:
          title: routingKey
          type: string
        serviceUrl:
          title: serviceUrl
          type: string
        tlsTrustCerts:
          items:
            type: string
          nullable: true
          title: tlsTrustCerts
          type: array
        topic:
          title: topic
          type: string
      required:
      - authentication
      - serviceUrl
      - topic
      title: pulsar_rule_post_target
      type: object
    queue_response_amqp:
      additionalProperties: false
      example:
        queueName: queueName
        uri: uri
      properties:
        queueName:
          title: queueName
          type: string
        uri:
          title: uri
          type: string
      title: queue_response_amqp
      type: object
    queue_response_messages:
      additionalProperties: false
      example:
        total: 1
        ready: 6
        unacknowledged: 5
      properties:
        ready:
          nullable: true
          title: ready
          type: integer
        total:
          nullable: true
          title: total
          type: integer
        unacknowledged:
          nullable: true
          title: unacknowledged
          type: integer
      title: queue_response_messages
      type: object
    queue_response_stats:
      additionalProperties: false
      example:
        deliveryRate: 2.3021358869347655
        publishRate: 7.061401241503109
        acknowledgementRate: 5.637376656633329
      properties:
        acknowledgementRate:
          nullable: true
          title: acknowledgementRate
          type: number
        deliveryRate:
          nullable: true
          title: deliveryRate
          type: number
        publishRate:
          nullable: true
          title: publishRate
          type: number
      title: queue_response_stats
      type: object
    queue_response_stomp:
      additionalProperties: false
      example:
        destination: destination
        host: host
        uri: uri
      properties:
        destination:
          title: destination
          type: string
        host:
          title: host
          type: string
        uri:
          title: uri
          type: string
      title: queue_response_stomp
      type: object
    unsupported_rule_response_target:
      additionalProperties: false
      properties:
        url:
          title: url
          type: string
      required:
      - url
      title: unsupported_rule_response_target
      type: object
  securitySchemes:
    bearer_auth:
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller.info_from_bearer_auth
