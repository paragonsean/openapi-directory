# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pulsar_rule_patch_target import PulsarRulePatchTarget
from openapi_server.models.rule_source_patch import RuleSourcePatch
from openapi_server import util


class PulsarRulePatch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request_mode: str=None, rule_type: str=None, source: RuleSourcePatch=None, status: str=None, target: PulsarRulePatchTarget=None):
        """PulsarRulePatch - a model defined in OpenAPI

        :param request_mode: The request_mode of this PulsarRulePatch.
        :param rule_type: The rule_type of this PulsarRulePatch.
        :param source: The source of this PulsarRulePatch.
        :param status: The status of this PulsarRulePatch.
        :param target: The target of this PulsarRulePatch.
        """
        self.openapi_types = {
            'request_mode': str,
            'rule_type': str,
            'source': RuleSourcePatch,
            'status': str,
            'target': PulsarRulePatchTarget
        }

        self.attribute_map = {
            'request_mode': 'requestMode',
            'rule_type': 'ruleType',
            'source': 'source',
            'status': 'status',
            'target': 'target'
        }

        self._request_mode = request_mode
        self._rule_type = rule_type
        self._source = source
        self._status = status
        self._target = target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PulsarRulePatch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The pulsar_rule_patch of this PulsarRulePatch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_mode(self):
        """Gets the request_mode of this PulsarRulePatch.


        :return: The request_mode of this PulsarRulePatch.
        :rtype: str
        """
        return self._request_mode

    @request_mode.setter
    def request_mode(self, request_mode):
        """Sets the request_mode of this PulsarRulePatch.


        :param request_mode: The request_mode of this PulsarRulePatch.
        :type request_mode: str
        """

        self._request_mode = request_mode

    @property
    def rule_type(self):
        """Gets the rule_type of this PulsarRulePatch.


        :return: The rule_type of this PulsarRulePatch.
        :rtype: str
        """
        return self._rule_type

    @rule_type.setter
    def rule_type(self, rule_type):
        """Sets the rule_type of this PulsarRulePatch.


        :param rule_type: The rule_type of this PulsarRulePatch.
        :type rule_type: str
        """
        allowed_values = ["pulsar"]  # noqa: E501
        if rule_type not in allowed_values:
            raise ValueError(
                "Invalid value for `rule_type` ({0}), must be one of {1}"
                .format(rule_type, allowed_values)
            )

        self._rule_type = rule_type

    @property
    def source(self):
        """Gets the source of this PulsarRulePatch.


        :return: The source of this PulsarRulePatch.
        :rtype: RuleSourcePatch
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this PulsarRulePatch.


        :param source: The source of this PulsarRulePatch.
        :type source: RuleSourcePatch
        """

        self._source = source

    @property
    def status(self):
        """Gets the status of this PulsarRulePatch.


        :return: The status of this PulsarRulePatch.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PulsarRulePatch.


        :param status: The status of this PulsarRulePatch.
        :type status: str
        """

        self._status = status

    @property
    def target(self):
        """Gets the target of this PulsarRulePatch.


        :return: The target of this PulsarRulePatch.
        :rtype: PulsarRulePatchTarget
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this PulsarRulePatch.


        :param target: The target of this PulsarRulePatch.
        :type target: PulsarRulePatchTarget
        """

        self._target = target
