# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pulsar_rule_patch_target_authentication import PulsarRulePatchTargetAuthentication
from openapi_server import util


class PulsarRulePatchTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authentication: PulsarRulePatchTargetAuthentication=None, enveloped: bool=None, format: str=None, routing_key: str=None, service_url: str=None, tls_trust_certs: List[str]=None, topic: str=None):
        """PulsarRulePatchTarget - a model defined in OpenAPI

        :param authentication: The authentication of this PulsarRulePatchTarget.
        :param enveloped: The enveloped of this PulsarRulePatchTarget.
        :param format: The format of this PulsarRulePatchTarget.
        :param routing_key: The routing_key of this PulsarRulePatchTarget.
        :param service_url: The service_url of this PulsarRulePatchTarget.
        :param tls_trust_certs: The tls_trust_certs of this PulsarRulePatchTarget.
        :param topic: The topic of this PulsarRulePatchTarget.
        """
        self.openapi_types = {
            'authentication': PulsarRulePatchTargetAuthentication,
            'enveloped': bool,
            'format': str,
            'routing_key': str,
            'service_url': str,
            'tls_trust_certs': List[str],
            'topic': str
        }

        self.attribute_map = {
            'authentication': 'authentication',
            'enveloped': 'enveloped',
            'format': 'format',
            'routing_key': 'routingKey',
            'service_url': 'serviceUrl',
            'tls_trust_certs': 'tlsTrustCerts',
            'topic': 'topic'
        }

        self._authentication = authentication
        self._enveloped = enveloped
        self._format = format
        self._routing_key = routing_key
        self._service_url = service_url
        self._tls_trust_certs = tls_trust_certs
        self._topic = topic

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PulsarRulePatchTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The pulsar_rule_patch_target of this PulsarRulePatchTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authentication(self):
        """Gets the authentication of this PulsarRulePatchTarget.


        :return: The authentication of this PulsarRulePatchTarget.
        :rtype: PulsarRulePatchTargetAuthentication
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication):
        """Sets the authentication of this PulsarRulePatchTarget.


        :param authentication: The authentication of this PulsarRulePatchTarget.
        :type authentication: PulsarRulePatchTargetAuthentication
        """

        self._authentication = authentication

    @property
    def enveloped(self):
        """Gets the enveloped of this PulsarRulePatchTarget.


        :return: The enveloped of this PulsarRulePatchTarget.
        :rtype: bool
        """
        return self._enveloped

    @enveloped.setter
    def enveloped(self, enveloped):
        """Sets the enveloped of this PulsarRulePatchTarget.


        :param enveloped: The enveloped of this PulsarRulePatchTarget.
        :type enveloped: bool
        """

        self._enveloped = enveloped

    @property
    def format(self):
        """Gets the format of this PulsarRulePatchTarget.


        :return: The format of this PulsarRulePatchTarget.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this PulsarRulePatchTarget.


        :param format: The format of this PulsarRulePatchTarget.
        :type format: str
        """

        self._format = format

    @property
    def routing_key(self):
        """Gets the routing_key of this PulsarRulePatchTarget.


        :return: The routing_key of this PulsarRulePatchTarget.
        :rtype: str
        """
        return self._routing_key

    @routing_key.setter
    def routing_key(self, routing_key):
        """Sets the routing_key of this PulsarRulePatchTarget.


        :param routing_key: The routing_key of this PulsarRulePatchTarget.
        :type routing_key: str
        """

        self._routing_key = routing_key

    @property
    def service_url(self):
        """Gets the service_url of this PulsarRulePatchTarget.


        :return: The service_url of this PulsarRulePatchTarget.
        :rtype: str
        """
        return self._service_url

    @service_url.setter
    def service_url(self, service_url):
        """Sets the service_url of this PulsarRulePatchTarget.


        :param service_url: The service_url of this PulsarRulePatchTarget.
        :type service_url: str
        """

        self._service_url = service_url

    @property
    def tls_trust_certs(self):
        """Gets the tls_trust_certs of this PulsarRulePatchTarget.


        :return: The tls_trust_certs of this PulsarRulePatchTarget.
        :rtype: List[str]
        """
        return self._tls_trust_certs

    @tls_trust_certs.setter
    def tls_trust_certs(self, tls_trust_certs):
        """Sets the tls_trust_certs of this PulsarRulePatchTarget.


        :param tls_trust_certs: The tls_trust_certs of this PulsarRulePatchTarget.
        :type tls_trust_certs: List[str]
        """

        self._tls_trust_certs = tls_trust_certs

    @property
    def topic(self):
        """Gets the topic of this PulsarRulePatchTarget.


        :return: The topic of this PulsarRulePatchTarget.
        :rtype: str
        """
        return self._topic

    @topic.setter
    def topic(self, topic):
        """Sets the topic of this PulsarRulePatchTarget.


        :param topic: The topic of this PulsarRulePatchTarget.
        :type topic: str
        """

        self._topic = topic
