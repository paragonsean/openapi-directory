# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.kafka_rule_patch_target_auth_sasl import KafkaRulePatchTargetAuthSasl
from openapi_server import util


class KafkaRulePatchTargetAuth(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sasl: KafkaRulePatchTargetAuthSasl=None):
        """KafkaRulePatchTargetAuth - a model defined in OpenAPI

        :param sasl: The sasl of this KafkaRulePatchTargetAuth.
        """
        self.openapi_types = {
            'sasl': KafkaRulePatchTargetAuthSasl
        }

        self.attribute_map = {
            'sasl': 'sasl'
        }

        self._sasl = sasl

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KafkaRulePatchTargetAuth':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The kafka_rule_patch_target_auth of this KafkaRulePatchTargetAuth.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sasl(self):
        """Gets the sasl of this KafkaRulePatchTargetAuth.


        :return: The sasl of this KafkaRulePatchTargetAuth.
        :rtype: KafkaRulePatchTargetAuthSasl
        """
        return self._sasl

    @sasl.setter
    def sasl(self, sasl):
        """Sets the sasl of this KafkaRulePatchTargetAuth.


        :param sasl: The sasl of this KafkaRulePatchTargetAuth.
        :type sasl: KafkaRulePatchTargetAuthSasl
        """

        self._sasl = sasl
