/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AmqpExternalRulePatchTargetHeadersInner from './AmqpExternalRulePatchTargetHeadersInner';

/**
 * The CloudflareWorkerRulePostTarget model module.
 * @module model/CloudflareWorkerRulePostTarget
 * @version v1
 */
class CloudflareWorkerRulePostTarget {
    /**
     * Constructs a new <code>CloudflareWorkerRulePostTarget</code>.
     * @alias module:model/CloudflareWorkerRulePostTarget
     * @param url {String} 
     */
    constructor(url) { 
        
        CloudflareWorkerRulePostTarget.initialize(this, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, url) { 
        obj['url'] = url;
    }

    /**
     * Constructs a <code>CloudflareWorkerRulePostTarget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudflareWorkerRulePostTarget} obj Optional instance to populate.
     * @return {module:model/CloudflareWorkerRulePostTarget} The populated <code>CloudflareWorkerRulePostTarget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudflareWorkerRulePostTarget();

            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], [AmqpExternalRulePatchTargetHeadersInner]);
            }
            if (data.hasOwnProperty('signingKeyId')) {
                obj['signingKeyId'] = ApiClient.convertToType(data['signingKeyId'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudflareWorkerRulePostTarget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudflareWorkerRulePostTarget</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CloudflareWorkerRulePostTarget.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['headers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['headers'])) {
                throw new Error("Expected the field `headers` to be an array in the JSON data but got " + data['headers']);
            }
            // validate the optional field `headers` (array)
            for (const item of data['headers']) {
                AmqpExternalRulePatchTargetHeadersInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['signingKeyId'] && !(typeof data['signingKeyId'] === 'string' || data['signingKeyId'] instanceof String)) {
            throw new Error("Expected the field `signingKeyId` to be a primitive type in the JSON string but got " + data['signingKeyId']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

CloudflareWorkerRulePostTarget.RequiredProperties = ["url"];

/**
 * @member {Array.<module:model/AmqpExternalRulePatchTargetHeadersInner>} headers
 */
CloudflareWorkerRulePostTarget.prototype['headers'] = undefined;

/**
 * @member {String} signingKeyId
 */
CloudflareWorkerRulePostTarget.prototype['signingKeyId'] = undefined;

/**
 * @member {String} url
 */
CloudflareWorkerRulePostTarget.prototype['url'] = undefined;






export default CloudflareWorkerRulePostTarget;

