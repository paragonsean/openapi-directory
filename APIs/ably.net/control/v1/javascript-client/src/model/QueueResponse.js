/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QueueResponseAmqp from './QueueResponseAmqp';
import QueueResponseMessages from './QueueResponseMessages';
import QueueResponseStats from './QueueResponseStats';
import QueueResponseStomp from './QueueResponseStomp';

/**
 * The QueueResponse model module.
 * @module model/QueueResponse
 * @version v1
 */
class QueueResponse {
    /**
     * Constructs a new <code>QueueResponse</code>.
     * @alias module:model/QueueResponse
     */
    constructor() { 
        
        QueueResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueueResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueueResponse} obj Optional instance to populate.
     * @return {module:model/QueueResponse} The populated <code>QueueResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueueResponse();

            if (data.hasOwnProperty('amqp')) {
                obj['amqp'] = QueueResponseAmqp.constructFromObject(data['amqp']);
            }
            if (data.hasOwnProperty('appId')) {
                obj['appId'] = ApiClient.convertToType(data['appId'], 'String');
            }
            if (data.hasOwnProperty('deadletter')) {
                obj['deadletter'] = ApiClient.convertToType(data['deadletter'], 'Boolean');
            }
            if (data.hasOwnProperty('deadletterId')) {
                obj['deadletterId'] = ApiClient.convertToType(data['deadletterId'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('maxLength')) {
                obj['maxLength'] = ApiClient.convertToType(data['maxLength'], 'Number');
            }
            if (data.hasOwnProperty('messages')) {
                obj['messages'] = QueueResponseMessages.constructFromObject(data['messages']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = QueueResponseStats.constructFromObject(data['stats']);
            }
            if (data.hasOwnProperty('stomp')) {
                obj['stomp'] = QueueResponseStomp.constructFromObject(data['stomp']);
            }
            if (data.hasOwnProperty('ttl')) {
                obj['ttl'] = ApiClient.convertToType(data['ttl'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueueResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueueResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `amqp`
        if (data['amqp']) { // data not null
          QueueResponseAmqp.validateJSON(data['amqp']);
        }
        // ensure the json data is a string
        if (data['appId'] && !(typeof data['appId'] === 'string' || data['appId'] instanceof String)) {
            throw new Error("Expected the field `appId` to be a primitive type in the JSON string but got " + data['appId']);
        }
        // ensure the json data is a string
        if (data['deadletterId'] && !(typeof data['deadletterId'] === 'string' || data['deadletterId'] instanceof String)) {
            throw new Error("Expected the field `deadletterId` to be a primitive type in the JSON string but got " + data['deadletterId']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `messages`
        if (data['messages']) { // data not null
          QueueResponseMessages.validateJSON(data['messages']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `stats`
        if (data['stats']) { // data not null
          QueueResponseStats.validateJSON(data['stats']);
        }
        // validate the optional field `stomp`
        if (data['stomp']) { // data not null
          QueueResponseStomp.validateJSON(data['stomp']);
        }

        return true;
    }


}



/**
 * @member {module:model/QueueResponseAmqp} amqp
 */
QueueResponse.prototype['amqp'] = undefined;

/**
 * @member {String} appId
 */
QueueResponse.prototype['appId'] = undefined;

/**
 * @member {Boolean} deadletter
 */
QueueResponse.prototype['deadletter'] = undefined;

/**
 * @member {String} deadletterId
 */
QueueResponse.prototype['deadletterId'] = undefined;

/**
 * @member {String} id
 */
QueueResponse.prototype['id'] = undefined;

/**
 * @member {Number} maxLength
 */
QueueResponse.prototype['maxLength'] = undefined;

/**
 * @member {module:model/QueueResponseMessages} messages
 */
QueueResponse.prototype['messages'] = undefined;

/**
 * @member {String} name
 */
QueueResponse.prototype['name'] = undefined;

/**
 * @member {String} region
 */
QueueResponse.prototype['region'] = undefined;

/**
 * @member {String} state
 */
QueueResponse.prototype['state'] = undefined;

/**
 * @member {module:model/QueueResponseStats} stats
 */
QueueResponse.prototype['stats'] = undefined;

/**
 * @member {module:model/QueueResponseStomp} stomp
 */
QueueResponse.prototype['stomp'] = undefined;

/**
 * @member {Number} ttl
 */
QueueResponse.prototype['ttl'] = undefined;






export default QueueResponse;

