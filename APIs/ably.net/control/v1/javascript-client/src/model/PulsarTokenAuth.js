/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PulsarTokenAuth model module.
 * @module model/PulsarTokenAuth
 * @version v1
 */
class PulsarTokenAuth {
    /**
     * Constructs a new <code>PulsarTokenAuth</code>.
     * @alias module:model/PulsarTokenAuth
     * @param authenticationMode {module:model/PulsarTokenAuth.AuthenticationModeEnum} 
     * @param token {String} 
     */
    constructor(authenticationMode, token) { 
        
        PulsarTokenAuth.initialize(this, authenticationMode, token);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, authenticationMode, token) { 
        obj['authenticationMode'] = authenticationMode;
        obj['token'] = token;
    }

    /**
     * Constructs a <code>PulsarTokenAuth</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PulsarTokenAuth} obj Optional instance to populate.
     * @return {module:model/PulsarTokenAuth} The populated <code>PulsarTokenAuth</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PulsarTokenAuth();

            if (data.hasOwnProperty('authenticationMode')) {
                obj['authenticationMode'] = ApiClient.convertToType(data['authenticationMode'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PulsarTokenAuth</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PulsarTokenAuth</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PulsarTokenAuth.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['authenticationMode'] && !(typeof data['authenticationMode'] === 'string' || data['authenticationMode'] instanceof String)) {
            throw new Error("Expected the field `authenticationMode` to be a primitive type in the JSON string but got " + data['authenticationMode']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }

        return true;
    }


}

PulsarTokenAuth.RequiredProperties = ["authenticationMode", "token"];

/**
 * @member {module:model/PulsarTokenAuth.AuthenticationModeEnum} authenticationMode
 */
PulsarTokenAuth.prototype['authenticationMode'] = undefined;

/**
 * @member {String} token
 */
PulsarTokenAuth.prototype['token'] = undefined;





/**
 * Allowed values for the <code>authenticationMode</code> property.
 * @enum {String}
 * @readonly
 */
PulsarTokenAuth['AuthenticationModeEnum'] = {

    /**
     * value: "token"
     * @const
     */
    "token": "token"
};



export default PulsarTokenAuth;

