/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AwsLambdaRulePatchTarget from './AwsLambdaRulePatchTarget';
import RuleSource from './RuleSource';

/**
 * The AwsLambdaRulePost model module.
 * @module model/AwsLambdaRulePost
 * @version v1
 */
class AwsLambdaRulePost {
    /**
     * Constructs a new <code>AwsLambdaRulePost</code>.
     * @alias module:model/AwsLambdaRulePost
     * @param requestMode {String} 
     * @param ruleType {module:model/AwsLambdaRulePost.RuleTypeEnum} 
     * @param source {module:model/RuleSource} 
     * @param target {module:model/AwsLambdaRulePatchTarget} 
     */
    constructor(requestMode, ruleType, source, target) { 
        
        AwsLambdaRulePost.initialize(this, requestMode, ruleType, source, target);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, requestMode, ruleType, source, target) { 
        obj['requestMode'] = requestMode;
        obj['ruleType'] = ruleType;
        obj['source'] = source;
        obj['target'] = target;
    }

    /**
     * Constructs a <code>AwsLambdaRulePost</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AwsLambdaRulePost} obj Optional instance to populate.
     * @return {module:model/AwsLambdaRulePost} The populated <code>AwsLambdaRulePost</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AwsLambdaRulePost();

            if (data.hasOwnProperty('requestMode')) {
                obj['requestMode'] = ApiClient.convertToType(data['requestMode'], 'String');
            }
            if (data.hasOwnProperty('ruleType')) {
                obj['ruleType'] = ApiClient.convertToType(data['ruleType'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = RuleSource.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = AwsLambdaRulePatchTarget.constructFromObject(data['target']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AwsLambdaRulePost</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AwsLambdaRulePost</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AwsLambdaRulePost.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['requestMode'] && !(typeof data['requestMode'] === 'string' || data['requestMode'] instanceof String)) {
            throw new Error("Expected the field `requestMode` to be a primitive type in the JSON string but got " + data['requestMode']);
        }
        // ensure the json data is a string
        if (data['ruleType'] && !(typeof data['ruleType'] === 'string' || data['ruleType'] instanceof String)) {
            throw new Error("Expected the field `ruleType` to be a primitive type in the JSON string but got " + data['ruleType']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          RuleSource.validateJSON(data['source']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `target`
        if (data['target']) { // data not null
          AwsLambdaRulePatchTarget.validateJSON(data['target']);
        }

        return true;
    }


}

AwsLambdaRulePost.RequiredProperties = ["requestMode", "ruleType", "source", "target"];

/**
 * @member {String} requestMode
 */
AwsLambdaRulePost.prototype['requestMode'] = undefined;

/**
 * @member {module:model/AwsLambdaRulePost.RuleTypeEnum} ruleType
 */
AwsLambdaRulePost.prototype['ruleType'] = undefined;

/**
 * @member {module:model/RuleSource} source
 */
AwsLambdaRulePost.prototype['source'] = undefined;

/**
 * @member {String} status
 */
AwsLambdaRulePost.prototype['status'] = undefined;

/**
 * @member {module:model/AwsLambdaRulePatchTarget} target
 */
AwsLambdaRulePost.prototype['target'] = undefined;





/**
 * Allowed values for the <code>ruleType</code> property.
 * @enum {String}
 * @readonly
 */
AwsLambdaRulePost['RuleTypeEnum'] = {

    /**
     * value: "aws/lambda"
     * @const
     */
    "aws/lambda": "aws/lambda"
};



export default AwsLambdaRulePost;

