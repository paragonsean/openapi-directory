/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AwsAssumeRole model module.
 * @module model/AwsAssumeRole
 * @version v1
 */
class AwsAssumeRole {
    /**
     * Constructs a new <code>AwsAssumeRole</code>.
     * @alias module:model/AwsAssumeRole
     * @param assumeRoleArn {String} 
     */
    constructor(assumeRoleArn) { 
        
        AwsAssumeRole.initialize(this, assumeRoleArn);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, assumeRoleArn) { 
        obj['assumeRoleArn'] = assumeRoleArn;
    }

    /**
     * Constructs a <code>AwsAssumeRole</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AwsAssumeRole} obj Optional instance to populate.
     * @return {module:model/AwsAssumeRole} The populated <code>AwsAssumeRole</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AwsAssumeRole();

            if (data.hasOwnProperty('assumeRoleArn')) {
                obj['assumeRoleArn'] = ApiClient.convertToType(data['assumeRoleArn'], 'String');
            }
            if (data.hasOwnProperty('authenticationMode')) {
                obj['authenticationMode'] = ApiClient.convertToType(data['authenticationMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AwsAssumeRole</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AwsAssumeRole</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AwsAssumeRole.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['assumeRoleArn'] && !(typeof data['assumeRoleArn'] === 'string' || data['assumeRoleArn'] instanceof String)) {
            throw new Error("Expected the field `assumeRoleArn` to be a primitive type in the JSON string but got " + data['assumeRoleArn']);
        }
        // ensure the json data is a string
        if (data['authenticationMode'] && !(typeof data['authenticationMode'] === 'string' || data['authenticationMode'] instanceof String)) {
            throw new Error("Expected the field `authenticationMode` to be a primitive type in the JSON string but got " + data['authenticationMode']);
        }

        return true;
    }


}

AwsAssumeRole.RequiredProperties = ["assumeRoleArn"];

/**
 * @member {String} assumeRoleArn
 */
AwsAssumeRole.prototype['assumeRoleArn'] = undefined;

/**
 * @member {module:model/AwsAssumeRole.AuthenticationModeEnum} authenticationMode
 */
AwsAssumeRole.prototype['authenticationMode'] = undefined;





/**
 * Allowed values for the <code>authenticationMode</code> property.
 * @enum {String}
 * @readonly
 */
AwsAssumeRole['AuthenticationModeEnum'] = {

    /**
     * value: "assumeRole"
     * @const
     */
    "assumeRole": "assumeRole"
};



export default AwsAssumeRole;

