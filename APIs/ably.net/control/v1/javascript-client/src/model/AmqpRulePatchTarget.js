/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AmqpExternalRulePatchTargetHeadersInner from './AmqpExternalRulePatchTargetHeadersInner';

/**
 * The AmqpRulePatchTarget model module.
 * @module model/AmqpRulePatchTarget
 * @version v1
 */
class AmqpRulePatchTarget {
    /**
     * Constructs a new <code>AmqpRulePatchTarget</code>.
     * @alias module:model/AmqpRulePatchTarget
     */
    constructor() { 
        
        AmqpRulePatchTarget.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AmqpRulePatchTarget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AmqpRulePatchTarget} obj Optional instance to populate.
     * @return {module:model/AmqpRulePatchTarget} The populated <code>AmqpRulePatchTarget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AmqpRulePatchTarget();

            if (data.hasOwnProperty('enveloped')) {
                obj['enveloped'] = ApiClient.convertToType(data['enveloped'], 'Boolean');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = ApiClient.convertToType(data['headers'], [AmqpExternalRulePatchTargetHeadersInner]);
            }
            if (data.hasOwnProperty('queueId')) {
                obj['queueId'] = ApiClient.convertToType(data['queueId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AmqpRulePatchTarget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AmqpRulePatchTarget</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        if (data['headers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['headers'])) {
                throw new Error("Expected the field `headers` to be an array in the JSON data but got " + data['headers']);
            }
            // validate the optional field `headers` (array)
            for (const item of data['headers']) {
                AmqpExternalRulePatchTargetHeadersInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['queueId'] && !(typeof data['queueId'] === 'string' || data['queueId'] instanceof String)) {
            throw new Error("Expected the field `queueId` to be a primitive type in the JSON string but got " + data['queueId']);
        }

        return true;
    }


}



/**
 * @member {Boolean} enveloped
 */
AmqpRulePatchTarget.prototype['enveloped'] = undefined;

/**
 * @member {String} format
 */
AmqpRulePatchTarget.prototype['format'] = undefined;

/**
 * @member {Array.<module:model/AmqpExternalRulePatchTargetHeadersInner>} headers
 */
AmqpRulePatchTarget.prototype['headers'] = undefined;

/**
 * @member {String} queueId
 */
AmqpRulePatchTarget.prototype['queueId'] = undefined;






export default AmqpRulePatchTarget;

