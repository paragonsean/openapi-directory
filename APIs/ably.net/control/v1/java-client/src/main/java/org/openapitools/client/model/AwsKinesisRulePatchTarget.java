/*
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AwsKinesisRulePatchTargetAuthentication;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AwsKinesisRulePatchTarget
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:30:01.140542-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AwsKinesisRulePatchTarget {
  public static final String SERIALIZED_NAME_AUTHENTICATION = "authentication";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION)
  private AwsKinesisRulePatchTargetAuthentication authentication;

  public static final String SERIALIZED_NAME_ENVELOPED = "enveloped";
  @SerializedName(SERIALIZED_NAME_ENVELOPED)
  private Boolean enveloped;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_PARTITION_KEY = "partitionKey";
  @SerializedName(SERIALIZED_NAME_PARTITION_KEY)
  private String partitionKey;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_STREAM_NAME = "streamName";
  @SerializedName(SERIALIZED_NAME_STREAM_NAME)
  private String streamName;

  public AwsKinesisRulePatchTarget() {
  }

  public AwsKinesisRulePatchTarget authentication(AwsKinesisRulePatchTargetAuthentication authentication) {
    this.authentication = authentication;
    return this;
  }

  /**
   * Get authentication
   * @return authentication
   */
  @javax.annotation.Nullable
  public AwsKinesisRulePatchTargetAuthentication getAuthentication() {
    return authentication;
  }

  public void setAuthentication(AwsKinesisRulePatchTargetAuthentication authentication) {
    this.authentication = authentication;
  }


  public AwsKinesisRulePatchTarget enveloped(Boolean enveloped) {
    this.enveloped = enveloped;
    return this;
  }

  /**
   * Get enveloped
   * @return enveloped
   */
  @javax.annotation.Nullable
  public Boolean getEnveloped() {
    return enveloped;
  }

  public void setEnveloped(Boolean enveloped) {
    this.enveloped = enveloped;
  }


  public AwsKinesisRulePatchTarget format(String format) {
    this.format = format;
    return this;
  }

  /**
   * Get format
   * @return format
   */
  @javax.annotation.Nullable
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }


  public AwsKinesisRulePatchTarget partitionKey(String partitionKey) {
    this.partitionKey = partitionKey;
    return this;
  }

  /**
   * Get partitionKey
   * @return partitionKey
   */
  @javax.annotation.Nullable
  public String getPartitionKey() {
    return partitionKey;
  }

  public void setPartitionKey(String partitionKey) {
    this.partitionKey = partitionKey;
  }


  public AwsKinesisRulePatchTarget region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public AwsKinesisRulePatchTarget streamName(String streamName) {
    this.streamName = streamName;
    return this;
  }

  /**
   * Get streamName
   * @return streamName
   */
  @javax.annotation.Nullable
  public String getStreamName() {
    return streamName;
  }

  public void setStreamName(String streamName) {
    this.streamName = streamName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwsKinesisRulePatchTarget awsKinesisRulePatchTarget = (AwsKinesisRulePatchTarget) o;
    return Objects.equals(this.authentication, awsKinesisRulePatchTarget.authentication) &&
        Objects.equals(this.enveloped, awsKinesisRulePatchTarget.enveloped) &&
        Objects.equals(this.format, awsKinesisRulePatchTarget.format) &&
        Objects.equals(this.partitionKey, awsKinesisRulePatchTarget.partitionKey) &&
        Objects.equals(this.region, awsKinesisRulePatchTarget.region) &&
        Objects.equals(this.streamName, awsKinesisRulePatchTarget.streamName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(authentication, enveloped, format, partitionKey, region, streamName);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwsKinesisRulePatchTarget {\n");
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("    enveloped: ").append(toIndentedString(enveloped)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    partitionKey: ").append(toIndentedString(partitionKey)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    streamName: ").append(toIndentedString(streamName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("authentication");
    openapiFields.add("enveloped");
    openapiFields.add("format");
    openapiFields.add("partitionKey");
    openapiFields.add("region");
    openapiFields.add("streamName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AwsKinesisRulePatchTarget
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AwsKinesisRulePatchTarget.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwsKinesisRulePatchTarget is not found in the empty JSON string", AwsKinesisRulePatchTarget.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AwsKinesisRulePatchTarget.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AwsKinesisRulePatchTarget` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `authentication`
      if (jsonObj.get("authentication") != null && !jsonObj.get("authentication").isJsonNull()) {
        AwsKinesisRulePatchTargetAuthentication.validateJsonElement(jsonObj.get("authentication"));
      }
      if ((jsonObj.get("format") != null && !jsonObj.get("format").isJsonNull()) && !jsonObj.get("format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("format").toString()));
      }
      if ((jsonObj.get("partitionKey") != null && !jsonObj.get("partitionKey").isJsonNull()) && !jsonObj.get("partitionKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partitionKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partitionKey").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("streamName") != null && !jsonObj.get("streamName").isJsonNull()) && !jsonObj.get("streamName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `streamName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("streamName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwsKinesisRulePatchTarget.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwsKinesisRulePatchTarget' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwsKinesisRulePatchTarget> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwsKinesisRulePatchTarget.class));

       return (TypeAdapter<T>) new TypeAdapter<AwsKinesisRulePatchTarget>() {
           @Override
           public void write(JsonWriter out, AwsKinesisRulePatchTarget value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AwsKinesisRulePatchTarget read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AwsKinesisRulePatchTarget given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AwsKinesisRulePatchTarget
   * @throws IOException if the JSON string is invalid with respect to AwsKinesisRulePatchTarget
   */
  public static AwsKinesisRulePatchTarget fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwsKinesisRulePatchTarget.class);
  }

  /**
   * Convert an instance of AwsKinesisRulePatchTarget to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

