/*
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PulsarRulePatchTargetAuthentication;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PulsarRulePatchTarget
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:30:01.140542-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PulsarRulePatchTarget {
  public static final String SERIALIZED_NAME_AUTHENTICATION = "authentication";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION)
  private PulsarRulePatchTargetAuthentication authentication;

  public static final String SERIALIZED_NAME_ENVELOPED = "enveloped";
  @SerializedName(SERIALIZED_NAME_ENVELOPED)
  private Boolean enveloped;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_ROUTING_KEY = "routingKey";
  @SerializedName(SERIALIZED_NAME_ROUTING_KEY)
  private String routingKey;

  public static final String SERIALIZED_NAME_SERVICE_URL = "serviceUrl";
  @SerializedName(SERIALIZED_NAME_SERVICE_URL)
  private String serviceUrl;

  public static final String SERIALIZED_NAME_TLS_TRUST_CERTS = "tlsTrustCerts";
  @SerializedName(SERIALIZED_NAME_TLS_TRUST_CERTS)
  private List<String> tlsTrustCerts;

  public static final String SERIALIZED_NAME_TOPIC = "topic";
  @SerializedName(SERIALIZED_NAME_TOPIC)
  private String topic;

  public PulsarRulePatchTarget() {
  }

  public PulsarRulePatchTarget authentication(PulsarRulePatchTargetAuthentication authentication) {
    this.authentication = authentication;
    return this;
  }

  /**
   * Get authentication
   * @return authentication
   */
  @javax.annotation.Nullable
  public PulsarRulePatchTargetAuthentication getAuthentication() {
    return authentication;
  }

  public void setAuthentication(PulsarRulePatchTargetAuthentication authentication) {
    this.authentication = authentication;
  }


  public PulsarRulePatchTarget enveloped(Boolean enveloped) {
    this.enveloped = enveloped;
    return this;
  }

  /**
   * Get enveloped
   * @return enveloped
   */
  @javax.annotation.Nullable
  public Boolean getEnveloped() {
    return enveloped;
  }

  public void setEnveloped(Boolean enveloped) {
    this.enveloped = enveloped;
  }


  public PulsarRulePatchTarget format(String format) {
    this.format = format;
    return this;
  }

  /**
   * Get format
   * @return format
   */
  @javax.annotation.Nullable
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }


  public PulsarRulePatchTarget routingKey(String routingKey) {
    this.routingKey = routingKey;
    return this;
  }

  /**
   * Get routingKey
   * @return routingKey
   */
  @javax.annotation.Nullable
  public String getRoutingKey() {
    return routingKey;
  }

  public void setRoutingKey(String routingKey) {
    this.routingKey = routingKey;
  }


  public PulsarRulePatchTarget serviceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
    return this;
  }

  /**
   * Get serviceUrl
   * @return serviceUrl
   */
  @javax.annotation.Nullable
  public String getServiceUrl() {
    return serviceUrl;
  }

  public void setServiceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
  }


  public PulsarRulePatchTarget tlsTrustCerts(List<String> tlsTrustCerts) {
    this.tlsTrustCerts = tlsTrustCerts;
    return this;
  }

  public PulsarRulePatchTarget addTlsTrustCertsItem(String tlsTrustCertsItem) {
    if (this.tlsTrustCerts == null) {
      this.tlsTrustCerts = new ArrayList<>();
    }
    this.tlsTrustCerts.add(tlsTrustCertsItem);
    return this;
  }

  /**
   * Get tlsTrustCerts
   * @return tlsTrustCerts
   */
  @javax.annotation.Nullable
  public List<String> getTlsTrustCerts() {
    return tlsTrustCerts;
  }

  public void setTlsTrustCerts(List<String> tlsTrustCerts) {
    this.tlsTrustCerts = tlsTrustCerts;
  }


  public PulsarRulePatchTarget topic(String topic) {
    this.topic = topic;
    return this;
  }

  /**
   * Get topic
   * @return topic
   */
  @javax.annotation.Nullable
  public String getTopic() {
    return topic;
  }

  public void setTopic(String topic) {
    this.topic = topic;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PulsarRulePatchTarget pulsarRulePatchTarget = (PulsarRulePatchTarget) o;
    return Objects.equals(this.authentication, pulsarRulePatchTarget.authentication) &&
        Objects.equals(this.enveloped, pulsarRulePatchTarget.enveloped) &&
        Objects.equals(this.format, pulsarRulePatchTarget.format) &&
        Objects.equals(this.routingKey, pulsarRulePatchTarget.routingKey) &&
        Objects.equals(this.serviceUrl, pulsarRulePatchTarget.serviceUrl) &&
        Objects.equals(this.tlsTrustCerts, pulsarRulePatchTarget.tlsTrustCerts) &&
        Objects.equals(this.topic, pulsarRulePatchTarget.topic);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(authentication, enveloped, format, routingKey, serviceUrl, tlsTrustCerts, topic);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PulsarRulePatchTarget {\n");
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("    enveloped: ").append(toIndentedString(enveloped)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    routingKey: ").append(toIndentedString(routingKey)).append("\n");
    sb.append("    serviceUrl: ").append(toIndentedString(serviceUrl)).append("\n");
    sb.append("    tlsTrustCerts: ").append(toIndentedString(tlsTrustCerts)).append("\n");
    sb.append("    topic: ").append(toIndentedString(topic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("authentication");
    openapiFields.add("enveloped");
    openapiFields.add("format");
    openapiFields.add("routingKey");
    openapiFields.add("serviceUrl");
    openapiFields.add("tlsTrustCerts");
    openapiFields.add("topic");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PulsarRulePatchTarget
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PulsarRulePatchTarget.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PulsarRulePatchTarget is not found in the empty JSON string", PulsarRulePatchTarget.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PulsarRulePatchTarget.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PulsarRulePatchTarget` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `authentication`
      if (jsonObj.get("authentication") != null && !jsonObj.get("authentication").isJsonNull()) {
        PulsarRulePatchTargetAuthentication.validateJsonElement(jsonObj.get("authentication"));
      }
      if ((jsonObj.get("format") != null && !jsonObj.get("format").isJsonNull()) && !jsonObj.get("format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("format").toString()));
      }
      if ((jsonObj.get("routingKey") != null && !jsonObj.get("routingKey").isJsonNull()) && !jsonObj.get("routingKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `routingKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("routingKey").toString()));
      }
      if ((jsonObj.get("serviceUrl") != null && !jsonObj.get("serviceUrl").isJsonNull()) && !jsonObj.get("serviceUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceUrl").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tlsTrustCerts") != null && !jsonObj.get("tlsTrustCerts").isJsonNull() && !jsonObj.get("tlsTrustCerts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tlsTrustCerts` to be an array in the JSON string but got `%s`", jsonObj.get("tlsTrustCerts").toString()));
      }
      if ((jsonObj.get("topic") != null && !jsonObj.get("topic").isJsonNull()) && !jsonObj.get("topic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topic").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PulsarRulePatchTarget.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PulsarRulePatchTarget' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PulsarRulePatchTarget> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PulsarRulePatchTarget.class));

       return (TypeAdapter<T>) new TypeAdapter<PulsarRulePatchTarget>() {
           @Override
           public void write(JsonWriter out, PulsarRulePatchTarget value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PulsarRulePatchTarget read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PulsarRulePatchTarget given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PulsarRulePatchTarget
   * @throws IOException if the JSON string is invalid with respect to PulsarRulePatchTarget
   */
  public static PulsarRulePatchTarget fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PulsarRulePatchTarget.class);
  }

  /**
   * Convert an instance of PulsarRulePatchTarget to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

