/*
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AppPatch;
import org.openapitools.client.model.AppPost;
import org.openapitools.client.model.AppResponse;
import org.openapitools.client.model.Error;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppsApi
 */
@Disabled
public class AppsApiTest {

    private final AppsApi api = new AppsApi();

    /**
     * Lists account apps
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsAccountIdAppsGetTest() throws ApiException {
        String accountId = null;
        List<AppResponse> response = api.accountsAccountIdAppsGet(accountId);
        // TODO: test validations
    }

    /**
     * Creates an app
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void accountsAccountIdAppsPostTest() throws ApiException {
        String accountId = null;
        AppPost appPost = null;
        AppResponse response = api.accountsAccountIdAppsPost(accountId, appPost);
        // TODO: test validations
    }

    /**
     * Deletes an app
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsIdDeleteTest() throws ApiException {
        String id = null;
        api.appsIdDelete(id);
        // TODO: test validations
    }

    /**
     * Updates an app
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsIdPatchTest() throws ApiException {
        String id = null;
        AppPatch appPatch = null;
        AppResponse response = api.appsIdPatch(id, appPatch);
        // TODO: test validations
    }

    /**
     * Updates app&#39;s APNS info from a .p12 file
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appsIdPkcs12PostTest() throws ApiException {
        String id = null;
        File p12File = null;
        String p12Pass = null;
        AppResponse response = api.appsIdPkcs12Post(id, p12File, p12Pass);
        // TODO: test validations
    }

}
