/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKafka_rule_patch_target_auth_sasl.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKafka_rule_patch_target_auth_sasl::OAIKafka_rule_patch_target_auth_sasl(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKafka_rule_patch_target_auth_sasl::OAIKafka_rule_patch_target_auth_sasl() {
    this->initializeModel();
}

OAIKafka_rule_patch_target_auth_sasl::~OAIKafka_rule_patch_target_auth_sasl() {}

void OAIKafka_rule_patch_target_auth_sasl::initializeModel() {

    m_mechanism_isSet = false;
    m_mechanism_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIKafka_rule_patch_target_auth_sasl::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKafka_rule_patch_target_auth_sasl::fromJsonObject(QJsonObject json) {

    m_mechanism_isValid = ::OpenAPI::fromJsonValue(m_mechanism, json[QString("mechanism")]);
    m_mechanism_isSet = !json[QString("mechanism")].isNull() && m_mechanism_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAIKafka_rule_patch_target_auth_sasl::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKafka_rule_patch_target_auth_sasl::asJsonObject() const {
    QJsonObject obj;
    if (m_mechanism_isSet) {
        obj.insert(QString("mechanism"), ::OpenAPI::toJsonValue(m_mechanism));
    }
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(m_password));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAIKafka_rule_patch_target_auth_sasl::getMechanism() const {
    return m_mechanism;
}
void OAIKafka_rule_patch_target_auth_sasl::setMechanism(const QString &mechanism) {
    m_mechanism = mechanism;
    m_mechanism_isSet = true;
}

bool OAIKafka_rule_patch_target_auth_sasl::is_mechanism_Set() const{
    return m_mechanism_isSet;
}

bool OAIKafka_rule_patch_target_auth_sasl::is_mechanism_Valid() const{
    return m_mechanism_isValid;
}

QString OAIKafka_rule_patch_target_auth_sasl::getPassword() const {
    return m_password;
}
void OAIKafka_rule_patch_target_auth_sasl::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIKafka_rule_patch_target_auth_sasl::is_password_Set() const{
    return m_password_isSet;
}

bool OAIKafka_rule_patch_target_auth_sasl::is_password_Valid() const{
    return m_password_isValid;
}

QString OAIKafka_rule_patch_target_auth_sasl::getUsername() const {
    return m_username;
}
void OAIKafka_rule_patch_target_auth_sasl::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIKafka_rule_patch_target_auth_sasl::is_username_Set() const{
    return m_username_isSet;
}

bool OAIKafka_rule_patch_target_auth_sasl::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIKafka_rule_patch_target_auth_sasl::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mechanism_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKafka_rule_patch_target_auth_sasl::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
