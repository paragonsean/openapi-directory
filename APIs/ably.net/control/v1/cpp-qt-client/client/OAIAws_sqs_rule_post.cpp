/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAws_sqs_rule_post.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAws_sqs_rule_post::OAIAws_sqs_rule_post(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAws_sqs_rule_post::OAIAws_sqs_rule_post() {
    this->initializeModel();
}

OAIAws_sqs_rule_post::~OAIAws_sqs_rule_post() {}

void OAIAws_sqs_rule_post::initializeModel() {

    m_request_mode_isSet = false;
    m_request_mode_isValid = false;

    m_rule_type_isSet = false;
    m_rule_type_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_target_isSet = false;
    m_target_isValid = false;
}

void OAIAws_sqs_rule_post::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAws_sqs_rule_post::fromJsonObject(QJsonObject json) {

    m_request_mode_isValid = ::OpenAPI::fromJsonValue(m_request_mode, json[QString("requestMode")]);
    m_request_mode_isSet = !json[QString("requestMode")].isNull() && m_request_mode_isValid;

    m_rule_type_isValid = ::OpenAPI::fromJsonValue(m_rule_type, json[QString("ruleType")]);
    m_rule_type_isSet = !json[QString("ruleType")].isNull() && m_rule_type_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_target_isValid = ::OpenAPI::fromJsonValue(m_target, json[QString("target")]);
    m_target_isSet = !json[QString("target")].isNull() && m_target_isValid;
}

QString OAIAws_sqs_rule_post::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAws_sqs_rule_post::asJsonObject() const {
    QJsonObject obj;
    if (m_request_mode_isSet) {
        obj.insert(QString("requestMode"), ::OpenAPI::toJsonValue(m_request_mode));
    }
    if (m_rule_type_isSet) {
        obj.insert(QString("ruleType"), ::OpenAPI::toJsonValue(m_rule_type));
    }
    if (m_source.isSet()) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_target.isSet()) {
        obj.insert(QString("target"), ::OpenAPI::toJsonValue(m_target));
    }
    return obj;
}

QString OAIAws_sqs_rule_post::getRequestMode() const {
    return m_request_mode;
}
void OAIAws_sqs_rule_post::setRequestMode(const QString &request_mode) {
    m_request_mode = request_mode;
    m_request_mode_isSet = true;
}

bool OAIAws_sqs_rule_post::is_request_mode_Set() const{
    return m_request_mode_isSet;
}

bool OAIAws_sqs_rule_post::is_request_mode_Valid() const{
    return m_request_mode_isValid;
}

QString OAIAws_sqs_rule_post::getRuleType() const {
    return m_rule_type;
}
void OAIAws_sqs_rule_post::setRuleType(const QString &rule_type) {
    m_rule_type = rule_type;
    m_rule_type_isSet = true;
}

bool OAIAws_sqs_rule_post::is_rule_type_Set() const{
    return m_rule_type_isSet;
}

bool OAIAws_sqs_rule_post::is_rule_type_Valid() const{
    return m_rule_type_isValid;
}

OAIRule_source OAIAws_sqs_rule_post::getSource() const {
    return m_source;
}
void OAIAws_sqs_rule_post::setSource(const OAIRule_source &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIAws_sqs_rule_post::is_source_Set() const{
    return m_source_isSet;
}

bool OAIAws_sqs_rule_post::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIAws_sqs_rule_post::getStatus() const {
    return m_status;
}
void OAIAws_sqs_rule_post::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAws_sqs_rule_post::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAws_sqs_rule_post::is_status_Valid() const{
    return m_status_isValid;
}

OAIAws_sqs_rule_post_target OAIAws_sqs_rule_post::getTarget() const {
    return m_target;
}
void OAIAws_sqs_rule_post::setTarget(const OAIAws_sqs_rule_post_target &target) {
    m_target = target;
    m_target_isSet = true;
}

bool OAIAws_sqs_rule_post::is_target_Set() const{
    return m_target_isSet;
}

bool OAIAws_sqs_rule_post::is_target_Valid() const{
    return m_target_isValid;
}

bool OAIAws_sqs_rule_post::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_request_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAws_sqs_rule_post::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_request_mode_isValid && m_rule_type_isValid && m_source_isValid && m_target_isValid && true;
}

} // namespace OpenAPI
