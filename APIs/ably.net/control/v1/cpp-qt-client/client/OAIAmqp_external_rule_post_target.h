/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAmqp_external_rule_post_target.h
 *
 * 
 */

#ifndef OAIAmqp_external_rule_post_target_H
#define OAIAmqp_external_rule_post_target_H

#include <QJsonObject>

#include "OAIAmqp_external_rule_patch_target_headers_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAmqp_external_rule_patch_target_headers_inner;

class OAIAmqp_external_rule_post_target : public OAIObject {
public:
    OAIAmqp_external_rule_post_target();
    OAIAmqp_external_rule_post_target(QString json);
    ~OAIAmqp_external_rule_post_target() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnveloped() const;
    void setEnveloped(const bool &enveloped);
    bool is_enveloped_Set() const;
    bool is_enveloped_Valid() const;

    QString getExchange() const;
    void setExchange(const QString &exchange);
    bool is_exchange_Set() const;
    bool is_exchange_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QList<OAIAmqp_external_rule_patch_target_headers_inner> getHeaders() const;
    void setHeaders(const QList<OAIAmqp_external_rule_patch_target_headers_inner> &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    bool isMandatoryRoute() const;
    void setMandatoryRoute(const bool &mandatory_route);
    bool is_mandatory_route_Set() const;
    bool is_mandatory_route_Valid() const;

    qint32 getMessageTtl() const;
    void setMessageTtl(const qint32 &message_ttl);
    bool is_message_ttl_Set() const;
    bool is_message_ttl_Valid() const;

    bool isPersistentMessages() const;
    void setPersistentMessages(const bool &persistent_messages);
    bool is_persistent_messages_Set() const;
    bool is_persistent_messages_Valid() const;

    QString getRoutingKey() const;
    void setRoutingKey(const QString &routing_key);
    bool is_routing_key_Set() const;
    bool is_routing_key_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enveloped;
    bool m_enveloped_isSet;
    bool m_enveloped_isValid;

    QString m_exchange;
    bool m_exchange_isSet;
    bool m_exchange_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QList<OAIAmqp_external_rule_patch_target_headers_inner> m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    bool m_mandatory_route;
    bool m_mandatory_route_isSet;
    bool m_mandatory_route_isValid;

    qint32 m_message_ttl;
    bool m_message_ttl_isSet;
    bool m_message_ttl_isValid;

    bool m_persistent_messages;
    bool m_persistent_messages_isSet;
    bool m_persistent_messages_isValid;

    QString m_routing_key;
    bool m_routing_key_isSet;
    bool m_routing_key_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAmqp_external_rule_post_target)

#endif // OAIAmqp_external_rule_post_target_H
