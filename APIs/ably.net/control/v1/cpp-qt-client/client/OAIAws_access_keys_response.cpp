/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAws_access_keys_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAws_access_keys_response::OAIAws_access_keys_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAws_access_keys_response::OAIAws_access_keys_response() {
    this->initializeModel();
}

OAIAws_access_keys_response::~OAIAws_access_keys_response() {}

void OAIAws_access_keys_response::initializeModel() {

    m_access_key_id_isSet = false;
    m_access_key_id_isValid = false;

    m_authentication_mode_isSet = false;
    m_authentication_mode_isValid = false;
}

void OAIAws_access_keys_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAws_access_keys_response::fromJsonObject(QJsonObject json) {

    m_access_key_id_isValid = ::OpenAPI::fromJsonValue(m_access_key_id, json[QString("accessKeyId")]);
    m_access_key_id_isSet = !json[QString("accessKeyId")].isNull() && m_access_key_id_isValid;

    m_authentication_mode_isValid = ::OpenAPI::fromJsonValue(m_authentication_mode, json[QString("authenticationMode")]);
    m_authentication_mode_isSet = !json[QString("authenticationMode")].isNull() && m_authentication_mode_isValid;
}

QString OAIAws_access_keys_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAws_access_keys_response::asJsonObject() const {
    QJsonObject obj;
    if (m_access_key_id_isSet) {
        obj.insert(QString("accessKeyId"), ::OpenAPI::toJsonValue(m_access_key_id));
    }
    if (m_authentication_mode_isSet) {
        obj.insert(QString("authenticationMode"), ::OpenAPI::toJsonValue(m_authentication_mode));
    }
    return obj;
}

QString OAIAws_access_keys_response::getAccessKeyId() const {
    return m_access_key_id;
}
void OAIAws_access_keys_response::setAccessKeyId(const QString &access_key_id) {
    m_access_key_id = access_key_id;
    m_access_key_id_isSet = true;
}

bool OAIAws_access_keys_response::is_access_key_id_Set() const{
    return m_access_key_id_isSet;
}

bool OAIAws_access_keys_response::is_access_key_id_Valid() const{
    return m_access_key_id_isValid;
}

QString OAIAws_access_keys_response::getAuthenticationMode() const {
    return m_authentication_mode;
}
void OAIAws_access_keys_response::setAuthenticationMode(const QString &authentication_mode) {
    m_authentication_mode = authentication_mode;
    m_authentication_mode_isSet = true;
}

bool OAIAws_access_keys_response::is_authentication_mode_Set() const{
    return m_authentication_mode_isSet;
}

bool OAIAws_access_keys_response::is_authentication_mode_Valid() const{
    return m_authentication_mode_isValid;
}

bool OAIAws_access_keys_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_key_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_authentication_mode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAws_access_keys_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
