/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApp_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApp_response::OAIApp_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApp_response::OAIApp_response() {
    this->initializeModel();
}

OAIApp_response::~OAIApp_response() {}

void OAIApp_response::initializeModel() {

    m__links_isSet = false;
    m__links_isValid = false;

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_apns_use_sandbox_endpoint_isSet = false;
    m_apns_use_sandbox_endpoint_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_modified_isSet = false;
    m_modified_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_tls_only_isSet = false;
    m_tls_only_isValid = false;
}

void OAIApp_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApp_response::fromJsonObject(QJsonObject json) {

    m__links_isValid = ::OpenAPI::fromJsonValue(m__links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_apns_use_sandbox_endpoint_isValid = ::OpenAPI::fromJsonValue(m_apns_use_sandbox_endpoint, json[QString("apnsUseSandboxEndpoint")]);
    m_apns_use_sandbox_endpoint_isSet = !json[QString("apnsUseSandboxEndpoint")].isNull() && m_apns_use_sandbox_endpoint_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_modified_isValid = ::OpenAPI::fromJsonValue(m_modified, json[QString("modified")]);
    m_modified_isSet = !json[QString("modified")].isNull() && m_modified_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_tls_only_isValid = ::OpenAPI::fromJsonValue(m_tls_only, json[QString("tlsOnly")]);
    m_tls_only_isSet = !json[QString("tlsOnly")].isNull() && m_tls_only_isValid;
}

QString OAIApp_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApp_response::asJsonObject() const {
    QJsonObject obj;
    if (m__links_isSet) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(m__links));
    }
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_apns_use_sandbox_endpoint_isSet) {
        obj.insert(QString("apnsUseSandboxEndpoint"), ::OpenAPI::toJsonValue(m_apns_use_sandbox_endpoint));
    }
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_modified_isSet) {
        obj.insert(QString("modified"), ::OpenAPI::toJsonValue(m_modified));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_tls_only_isSet) {
        obj.insert(QString("tlsOnly"), ::OpenAPI::toJsonValue(m_tls_only));
    }
    return obj;
}

OAIObject OAIApp_response::getLinks() const {
    return m__links;
}
void OAIApp_response::setLinks(const OAIObject &_links) {
    m__links = _links;
    m__links_isSet = true;
}

bool OAIApp_response::is__links_Set() const{
    return m__links_isSet;
}

bool OAIApp_response::is__links_Valid() const{
    return m__links_isValid;
}

QString OAIApp_response::getAccountId() const {
    return m_account_id;
}
void OAIApp_response::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIApp_response::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIApp_response::is_account_id_Valid() const{
    return m_account_id_isValid;
}

bool OAIApp_response::isApnsUseSandboxEndpoint() const {
    return m_apns_use_sandbox_endpoint;
}
void OAIApp_response::setApnsUseSandboxEndpoint(const bool &apns_use_sandbox_endpoint) {
    m_apns_use_sandbox_endpoint = apns_use_sandbox_endpoint;
    m_apns_use_sandbox_endpoint_isSet = true;
}

bool OAIApp_response::is_apns_use_sandbox_endpoint_Set() const{
    return m_apns_use_sandbox_endpoint_isSet;
}

bool OAIApp_response::is_apns_use_sandbox_endpoint_Valid() const{
    return m_apns_use_sandbox_endpoint_isValid;
}

qint32 OAIApp_response::getCreated() const {
    return m_created;
}
void OAIApp_response::setCreated(const qint32 &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIApp_response::is_created_Set() const{
    return m_created_isSet;
}

bool OAIApp_response::is_created_Valid() const{
    return m_created_isValid;
}

QString OAIApp_response::getId() const {
    return m_id;
}
void OAIApp_response::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIApp_response::is_id_Set() const{
    return m_id_isSet;
}

bool OAIApp_response::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAIApp_response::getModified() const {
    return m_modified;
}
void OAIApp_response::setModified(const qint32 &modified) {
    m_modified = modified;
    m_modified_isSet = true;
}

bool OAIApp_response::is_modified_Set() const{
    return m_modified_isSet;
}

bool OAIApp_response::is_modified_Valid() const{
    return m_modified_isValid;
}

QString OAIApp_response::getName() const {
    return m_name;
}
void OAIApp_response::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApp_response::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApp_response::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIApp_response::getStatus() const {
    return m_status;
}
void OAIApp_response::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIApp_response::is_status_Set() const{
    return m_status_isSet;
}

bool OAIApp_response::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIApp_response::isTlsOnly() const {
    return m_tls_only;
}
void OAIApp_response::setTlsOnly(const bool &tls_only) {
    m_tls_only = tls_only;
    m_tls_only_isSet = true;
}

bool OAIApp_response::is_tls_only_Set() const{
    return m_tls_only_isSet;
}

bool OAIApp_response::is_tls_only_Valid() const{
    return m_tls_only_isValid;
}

bool OAIApp_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__links_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apns_use_sandbox_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tls_only_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApp_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
