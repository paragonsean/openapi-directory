/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BetfairExchangeStreamingApi);
  }
}(this, function(expect, BetfairExchangeStreamingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BetfairExchangeStreamingApi.Order();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Order', function() {
    it('should create an instance of Order', function() {
      // uncomment below and update the code to test Order
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be.a(BetfairExchangeStreamingApi.Order);
    });

    it('should have the property avp (base name: "avp")', function() {
      // uncomment below and update the code to test the property avp
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property bsp (base name: "bsp")', function() {
      // uncomment below and update the code to test the property bsp
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property cd (base name: "cd")', function() {
      // uncomment below and update the code to test the property cd
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property ld (base name: "ld")', function() {
      // uncomment below and update the code to test the property ld
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property lsrc (base name: "lsrc")', function() {
      // uncomment below and update the code to test the property lsrc
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property md (base name: "md")', function() {
      // uncomment below and update the code to test the property md
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property ot (base name: "ot")', function() {
      // uncomment below and update the code to test the property ot
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property p (base name: "p")', function() {
      // uncomment below and update the code to test the property p
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property pd (base name: "pd")', function() {
      // uncomment below and update the code to test the property pd
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property pt (base name: "pt")', function() {
      // uncomment below and update the code to test the property pt
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property rac (base name: "rac")', function() {
      // uncomment below and update the code to test the property rac
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property rc (base name: "rc")', function() {
      // uncomment below and update the code to test the property rc
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property rfo (base name: "rfo")', function() {
      // uncomment below and update the code to test the property rfo
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property rfs (base name: "rfs")', function() {
      // uncomment below and update the code to test the property rfs
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property s (base name: "s")', function() {
      // uncomment below and update the code to test the property s
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property sc (base name: "sc")', function() {
      // uncomment below and update the code to test the property sc
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property side (base name: "side")', function() {
      // uncomment below and update the code to test the property side
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property sl (base name: "sl")', function() {
      // uncomment below and update the code to test the property sl
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property sm (base name: "sm")', function() {
      // uncomment below and update the code to test the property sm
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property sr (base name: "sr")', function() {
      // uncomment below and update the code to test the property sr
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property sv (base name: "sv")', function() {
      // uncomment below and update the code to test the property sv
      //var instance = new BetfairExchangeStreamingApi.Order();
      //expect(instance).to.be();
    });

  });

}));
