/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BetfairExchangeStreamingApi);
  }
}(this, function(expect, BetfairExchangeStreamingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BetfairExchangeStreamingApi.MarketDefinition();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MarketDefinition', function() {
    it('should create an instance of MarketDefinition', function() {
      // uncomment below and update the code to test MarketDefinition
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be.a(BetfairExchangeStreamingApi.MarketDefinition);
    });

    it('should have the property betDelay (base name: "betDelay")', function() {
      // uncomment below and update the code to test the property betDelay
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property bettingType (base name: "bettingType")', function() {
      // uncomment below and update the code to test the property bettingType
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property bspMarket (base name: "bspMarket")', function() {
      // uncomment below and update the code to test the property bspMarket
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property bspReconciled (base name: "bspReconciled")', function() {
      // uncomment below and update the code to test the property bspReconciled
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property complete (base name: "complete")', function() {
      // uncomment below and update the code to test the property complete
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "countryCode")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property crossMatching (base name: "crossMatching")', function() {
      // uncomment below and update the code to test the property crossMatching
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property discountAllowed (base name: "discountAllowed")', function() {
      // uncomment below and update the code to test the property discountAllowed
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property eachWayDivisor (base name: "eachWayDivisor")', function() {
      // uncomment below and update the code to test the property eachWayDivisor
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property eventId (base name: "eventId")', function() {
      // uncomment below and update the code to test the property eventId
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property eventTypeId (base name: "eventTypeId")', function() {
      // uncomment below and update the code to test the property eventTypeId
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property inPlay (base name: "inPlay")', function() {
      // uncomment below and update the code to test the property inPlay
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property keyLineDefinition (base name: "keyLineDefinition")', function() {
      // uncomment below and update the code to test the property keyLineDefinition
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property lineInterval (base name: "lineInterval")', function() {
      // uncomment below and update the code to test the property lineInterval
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property lineMaxUnit (base name: "lineMaxUnit")', function() {
      // uncomment below and update the code to test the property lineMaxUnit
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property lineMinUnit (base name: "lineMinUnit")', function() {
      // uncomment below and update the code to test the property lineMinUnit
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property marketBaseRate (base name: "marketBaseRate")', function() {
      // uncomment below and update the code to test the property marketBaseRate
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property marketTime (base name: "marketTime")', function() {
      // uncomment below and update the code to test the property marketTime
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property marketType (base name: "marketType")', function() {
      // uncomment below and update the code to test the property marketType
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property numberOfActiveRunners (base name: "numberOfActiveRunners")', function() {
      // uncomment below and update the code to test the property numberOfActiveRunners
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property numberOfWinners (base name: "numberOfWinners")', function() {
      // uncomment below and update the code to test the property numberOfWinners
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property openDate (base name: "openDate")', function() {
      // uncomment below and update the code to test the property openDate
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property persistenceEnabled (base name: "persistenceEnabled")', function() {
      // uncomment below and update the code to test the property persistenceEnabled
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property priceLadderDefinition (base name: "priceLadderDefinition")', function() {
      // uncomment below and update the code to test the property priceLadderDefinition
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property raceType (base name: "raceType")', function() {
      // uncomment below and update the code to test the property raceType
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property regulators (base name: "regulators")', function() {
      // uncomment below and update the code to test the property regulators
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property runners (base name: "runners")', function() {
      // uncomment below and update the code to test the property runners
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property runnersVoidable (base name: "runnersVoidable")', function() {
      // uncomment below and update the code to test the property runnersVoidable
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property settledTime (base name: "settledTime")', function() {
      // uncomment below and update the code to test the property settledTime
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property suspendTime (base name: "suspendTime")', function() {
      // uncomment below and update the code to test the property suspendTime
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property turnInPlayEnabled (base name: "turnInPlayEnabled")', function() {
      // uncomment below and update the code to test the property turnInPlayEnabled
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property venue (base name: "venue")', function() {
      // uncomment below and update the code to test the property venue
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new BetfairExchangeStreamingApi.MarketDefinition();
      //expect(instance).to.be();
    });

  });

}));
