/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthenticationMessage from './AuthenticationMessage';
import HeartbeatMessage from './HeartbeatMessage';
import MarketSubscriptionMessage from './MarketSubscriptionMessage';
import OrderSubscriptionMessage from './OrderSubscriptionMessage';

/**
 * The AllRequestTypesExample model module.
 * @module model/AllRequestTypesExample
 * @version 1.0.1423
 */
class AllRequestTypesExample {
    /**
     * Constructs a new <code>AllRequestTypesExample</code>.
     * @alias module:model/AllRequestTypesExample
     */
    constructor() { 
        
        AllRequestTypesExample.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AllRequestTypesExample</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AllRequestTypesExample} obj Optional instance to populate.
     * @return {module:model/AllRequestTypesExample} The populated <code>AllRequestTypesExample</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AllRequestTypesExample();

            if (data.hasOwnProperty('authentication')) {
                obj['authentication'] = AuthenticationMessage.constructFromObject(data['authentication']);
            }
            if (data.hasOwnProperty('heartbeat')) {
                obj['heartbeat'] = HeartbeatMessage.constructFromObject(data['heartbeat']);
            }
            if (data.hasOwnProperty('marketSubscription')) {
                obj['marketSubscription'] = MarketSubscriptionMessage.constructFromObject(data['marketSubscription']);
            }
            if (data.hasOwnProperty('opTypes')) {
                obj['opTypes'] = ApiClient.convertToType(data['opTypes'], 'String');
            }
            if (data.hasOwnProperty('orderSubscriptionMessage')) {
                obj['orderSubscriptionMessage'] = OrderSubscriptionMessage.constructFromObject(data['orderSubscriptionMessage']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AllRequestTypesExample</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AllRequestTypesExample</code>.
     */
    static validateJSON(data) {
        // validate the optional field `authentication`
        if (data['authentication']) { // data not null
          AuthenticationMessage.validateJSON(data['authentication']);
        }
        // validate the optional field `heartbeat`
        if (data['heartbeat']) { // data not null
          HeartbeatMessage.validateJSON(data['heartbeat']);
        }
        // validate the optional field `marketSubscription`
        if (data['marketSubscription']) { // data not null
          MarketSubscriptionMessage.validateJSON(data['marketSubscription']);
        }
        // ensure the json data is a string
        if (data['opTypes'] && !(typeof data['opTypes'] === 'string' || data['opTypes'] instanceof String)) {
            throw new Error("Expected the field `opTypes` to be a primitive type in the JSON string but got " + data['opTypes']);
        }
        // validate the optional field `orderSubscriptionMessage`
        if (data['orderSubscriptionMessage']) { // data not null
          OrderSubscriptionMessage.validateJSON(data['orderSubscriptionMessage']);
        }

        return true;
    }


}



/**
 * @member {module:model/AuthenticationMessage} authentication
 */
AllRequestTypesExample.prototype['authentication'] = undefined;

/**
 * @member {module:model/HeartbeatMessage} heartbeat
 */
AllRequestTypesExample.prototype['heartbeat'] = undefined;

/**
 * @member {module:model/MarketSubscriptionMessage} marketSubscription
 */
AllRequestTypesExample.prototype['marketSubscription'] = undefined;

/**
 * @member {module:model/AllRequestTypesExample.OpTypesEnum} opTypes
 */
AllRequestTypesExample.prototype['opTypes'] = undefined;

/**
 * @member {module:model/OrderSubscriptionMessage} orderSubscriptionMessage
 */
AllRequestTypesExample.prototype['orderSubscriptionMessage'] = undefined;





/**
 * Allowed values for the <code>opTypes</code> property.
 * @enum {String}
 * @readonly
 */
AllRequestTypesExample['OpTypesEnum'] = {

    /**
     * value: "heartbeat"
     * @const
     */
    "heartbeat": "heartbeat",

    /**
     * value: "authentication"
     * @const
     */
    "authentication": "authentication",

    /**
     * value: "marketSubscription"
     * @const
     */
    "marketSubscription": "marketSubscription",

    /**
     * value: "orderSubscription"
     * @const
     */
    "orderSubscription": "orderSubscription"
};



export default AllRequestTypesExample;

