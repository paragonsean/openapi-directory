/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderFilter model module.
 * @module model/OrderFilter
 * @version 1.0.1423
 */
class OrderFilter {
    /**
     * Constructs a new <code>OrderFilter</code>.
     * @alias module:model/OrderFilter
     */
    constructor() { 
        
        OrderFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderFilter} obj Optional instance to populate.
     * @return {module:model/OrderFilter} The populated <code>OrderFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderFilter();

            if (data.hasOwnProperty('accountIds')) {
                obj['accountIds'] = ApiClient.convertToType(data['accountIds'], ['Number']);
            }
            if (data.hasOwnProperty('customerStrategyRefs')) {
                obj['customerStrategyRefs'] = ApiClient.convertToType(data['customerStrategyRefs'], ['String']);
            }
            if (data.hasOwnProperty('includeOverallPosition')) {
                obj['includeOverallPosition'] = ApiClient.convertToType(data['includeOverallPosition'], 'Boolean');
            }
            if (data.hasOwnProperty('partitionMatchedByStrategyRef')) {
                obj['partitionMatchedByStrategyRef'] = ApiClient.convertToType(data['partitionMatchedByStrategyRef'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['accountIds'])) {
            throw new Error("Expected the field `accountIds` to be an array in the JSON data but got " + data['accountIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['customerStrategyRefs'])) {
            throw new Error("Expected the field `customerStrategyRefs` to be an array in the JSON data but got " + data['customerStrategyRefs']);
        }

        return true;
    }


}



/**
 * Internal use only & should not be set on your filter (your subscription is already locked to your account). If set subscription will fail.
 * @member {Array.<Number>} accountIds
 */
OrderFilter.prototype['accountIds'] = undefined;

/**
 * Restricts to specified customerStrategyRefs; this will filter orders and StrategyMatchChanges accordingly (Note: overall postition is not filtered)
 * @member {Array.<String>} customerStrategyRefs
 */
OrderFilter.prototype['customerStrategyRefs'] = undefined;

/**
 * Returns overall / net position (See: OrderRunnerChange.mb / OrderRunnerChange.ml). Default=true
 * @member {Boolean} includeOverallPosition
 */
OrderFilter.prototype['includeOverallPosition'] = undefined;

/**
 * Returns strategy positions (See: OrderRunnerChange.smc=Map<customerStrategyRef, StrategyMatchChange>) - these are sent in delta format as per overall position. Default=false
 * @member {Boolean} partitionMatchedByStrategyRef
 */
OrderFilter.prototype['partitionMatchedByStrategyRef'] = undefined;






export default OrderFilter;

