/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RunnerDefinition model module.
 * @module model/RunnerDefinition
 * @version 1.0.1423
 */
class RunnerDefinition {
    /**
     * Constructs a new <code>RunnerDefinition</code>.
     * @alias module:model/RunnerDefinition
     */
    constructor() { 
        
        RunnerDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RunnerDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RunnerDefinition} obj Optional instance to populate.
     * @return {module:model/RunnerDefinition} The populated <code>RunnerDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RunnerDefinition();

            if (data.hasOwnProperty('adjustmentFactor')) {
                obj['adjustmentFactor'] = ApiClient.convertToType(data['adjustmentFactor'], 'Number');
            }
            if (data.hasOwnProperty('bsp')) {
                obj['bsp'] = ApiClient.convertToType(data['bsp'], 'Number');
            }
            if (data.hasOwnProperty('hc')) {
                obj['hc'] = ApiClient.convertToType(data['hc'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('removalDate')) {
                obj['removalDate'] = ApiClient.convertToType(data['removalDate'], 'Date');
            }
            if (data.hasOwnProperty('sortPriority')) {
                obj['sortPriority'] = ApiClient.convertToType(data['sortPriority'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RunnerDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RunnerDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {Number} adjustmentFactor
 */
RunnerDefinition.prototype['adjustmentFactor'] = undefined;

/**
 * @member {Number} bsp
 */
RunnerDefinition.prototype['bsp'] = undefined;

/**
 * Handicap - the handicap of the runner (selection) (null if not applicable)
 * @member {Number} hc
 */
RunnerDefinition.prototype['hc'] = undefined;

/**
 * Selection Id - the id of the runner (selection)
 * @member {Number} id
 */
RunnerDefinition.prototype['id'] = undefined;

/**
 * @member {Date} removalDate
 */
RunnerDefinition.prototype['removalDate'] = undefined;

/**
 * @member {Number} sortPriority
 */
RunnerDefinition.prototype['sortPriority'] = undefined;

/**
 * @member {module:model/RunnerDefinition.StatusEnum} status
 */
RunnerDefinition.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
RunnerDefinition['StatusEnum'] = {

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "WINNER"
     * @const
     */
    "WINNER": "WINNER",

    /**
     * value: "LOSER"
     * @const
     */
    "LOSER": "LOSER",

    /**
     * value: "REMOVED"
     * @const
     */
    "REMOVED": "REMOVED",

    /**
     * value: "REMOVED_VACANT"
     * @const
     */
    "REMOVED_VACANT": "REMOVED_VACANT",

    /**
     * value: "HIDDEN"
     * @const
     */
    "HIDDEN": "HIDDEN",

    /**
     * value: "PLACED"
     * @const
     */
    "PLACED": "PLACED"
};



export default RunnerDefinition;

