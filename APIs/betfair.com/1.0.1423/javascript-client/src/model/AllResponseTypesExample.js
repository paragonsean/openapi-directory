/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConnectionMessage from './ConnectionMessage';
import MarketChangeMessage from './MarketChangeMessage';
import OrderChangeMessage from './OrderChangeMessage';
import StatusMessage from './StatusMessage';

/**
 * The AllResponseTypesExample model module.
 * @module model/AllResponseTypesExample
 * @version 1.0.1423
 */
class AllResponseTypesExample {
    /**
     * Constructs a new <code>AllResponseTypesExample</code>.
     * @alias module:model/AllResponseTypesExample
     */
    constructor() { 
        
        AllResponseTypesExample.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AllResponseTypesExample</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AllResponseTypesExample} obj Optional instance to populate.
     * @return {module:model/AllResponseTypesExample} The populated <code>AllResponseTypesExample</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AllResponseTypesExample();

            if (data.hasOwnProperty('connection')) {
                obj['connection'] = ConnectionMessage.constructFromObject(data['connection']);
            }
            if (data.hasOwnProperty('marketChangeMessage')) {
                obj['marketChangeMessage'] = MarketChangeMessage.constructFromObject(data['marketChangeMessage']);
            }
            if (data.hasOwnProperty('opTypes')) {
                obj['opTypes'] = ApiClient.convertToType(data['opTypes'], 'String');
            }
            if (data.hasOwnProperty('orderChangeMessage')) {
                obj['orderChangeMessage'] = OrderChangeMessage.constructFromObject(data['orderChangeMessage']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = StatusMessage.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AllResponseTypesExample</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AllResponseTypesExample</code>.
     */
    static validateJSON(data) {
        // validate the optional field `connection`
        if (data['connection']) { // data not null
          ConnectionMessage.validateJSON(data['connection']);
        }
        // validate the optional field `marketChangeMessage`
        if (data['marketChangeMessage']) { // data not null
          MarketChangeMessage.validateJSON(data['marketChangeMessage']);
        }
        // ensure the json data is a string
        if (data['opTypes'] && !(typeof data['opTypes'] === 'string' || data['opTypes'] instanceof String)) {
            throw new Error("Expected the field `opTypes` to be a primitive type in the JSON string but got " + data['opTypes']);
        }
        // validate the optional field `orderChangeMessage`
        if (data['orderChangeMessage']) { // data not null
          OrderChangeMessage.validateJSON(data['orderChangeMessage']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          StatusMessage.validateJSON(data['status']);
        }

        return true;
    }


}



/**
 * @member {module:model/ConnectionMessage} connection
 */
AllResponseTypesExample.prototype['connection'] = undefined;

/**
 * @member {module:model/MarketChangeMessage} marketChangeMessage
 */
AllResponseTypesExample.prototype['marketChangeMessage'] = undefined;

/**
 * @member {module:model/AllResponseTypesExample.OpTypesEnum} opTypes
 */
AllResponseTypesExample.prototype['opTypes'] = undefined;

/**
 * @member {module:model/OrderChangeMessage} orderChangeMessage
 */
AllResponseTypesExample.prototype['orderChangeMessage'] = undefined;

/**
 * @member {module:model/StatusMessage} status
 */
AllResponseTypesExample.prototype['status'] = undefined;





/**
 * Allowed values for the <code>opTypes</code> property.
 * @enum {String}
 * @readonly
 */
AllResponseTypesExample['OpTypesEnum'] = {

    /**
     * value: "connection"
     * @const
     */
    "connection": "connection",

    /**
     * value: "status"
     * @const
     */
    "status": "status",

    /**
     * value: "mcm"
     * @const
     */
    "mcm": "mcm",

    /**
     * value: "ocm"
     * @const
     */
    "ocm": "ocm"
};



export default AllResponseTypesExample;

