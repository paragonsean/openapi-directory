/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MarketDataFilter model module.
 * @module model/MarketDataFilter
 * @version 1.0.1423
 */
class MarketDataFilter {
    /**
     * Constructs a new <code>MarketDataFilter</code>.
     * @alias module:model/MarketDataFilter
     */
    constructor() { 
        
        MarketDataFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MarketDataFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MarketDataFilter} obj Optional instance to populate.
     * @return {module:model/MarketDataFilter} The populated <code>MarketDataFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MarketDataFilter();

            if (data.hasOwnProperty('fields')) {
                obj['fields'] = ApiClient.convertToType(data['fields'], ['String']);
            }
            if (data.hasOwnProperty('ladderLevels')) {
                obj['ladderLevels'] = ApiClient.convertToType(data['ladderLevels'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MarketDataFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MarketDataFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['fields'])) {
            throw new Error("Expected the field `fields` to be an array in the JSON data but got " + data['fields']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/MarketDataFilter.FieldsEnum>} fields
 */
MarketDataFilter.prototype['fields'] = undefined;

/**
 * @member {Number} ladderLevels
 */
MarketDataFilter.prototype['ladderLevels'] = undefined;





/**
 * Allowed values for the <code>fields</code> property.
 * @enum {String}
 * @readonly
 */
MarketDataFilter['FieldsEnum'] = {

    /**
     * value: "EX_BEST_OFFERS_DISP"
     * @const
     */
    "EX_BEST_OFFERS_DISP": "EX_BEST_OFFERS_DISP",

    /**
     * value: "EX_BEST_OFFERS"
     * @const
     */
    "EX_BEST_OFFERS": "EX_BEST_OFFERS",

    /**
     * value: "EX_ALL_OFFERS"
     * @const
     */
    "EX_ALL_OFFERS": "EX_ALL_OFFERS",

    /**
     * value: "EX_TRADED"
     * @const
     */
    "EX_TRADED": "EX_TRADED",

    /**
     * value: "EX_TRADED_VOL"
     * @const
     */
    "EX_TRADED_VOL": "EX_TRADED_VOL",

    /**
     * value: "EX_LTP"
     * @const
     */
    "EX_LTP": "EX_LTP",

    /**
     * value: "EX_MARKET_DEF"
     * @const
     */
    "EX_MARKET_DEF": "EX_MARKET_DEF",

    /**
     * value: "SP_TRADED"
     * @const
     */
    "SP_TRADED": "SP_TRADED",

    /**
     * value: "SP_PROJECTED"
     * @const
     */
    "SP_PROJECTED": "SP_PROJECTED"
};



export default MarketDataFilter;

