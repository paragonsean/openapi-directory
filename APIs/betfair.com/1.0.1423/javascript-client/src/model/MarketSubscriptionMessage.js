/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MarketDataFilter from './MarketDataFilter';
import MarketFilter from './MarketFilter';
import RequestMessage from './RequestMessage';

/**
 * The MarketSubscriptionMessage model module.
 * @module model/MarketSubscriptionMessage
 * @version 1.0.1423
 */
class MarketSubscriptionMessage {
    /**
     * Constructs a new <code>MarketSubscriptionMessage</code>.
     * @alias module:model/MarketSubscriptionMessage
     * @extends module:model/RequestMessage
     * @implements module:model/RequestMessage
     */
    constructor() { 
        RequestMessage.initialize(this);
        MarketSubscriptionMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MarketSubscriptionMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MarketSubscriptionMessage} obj Optional instance to populate.
     * @return {module:model/MarketSubscriptionMessage} The populated <code>MarketSubscriptionMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MarketSubscriptionMessage();
            RequestMessage.constructFromObject(data, obj);
            RequestMessage.constructFromObject(data, obj);

            if (data.hasOwnProperty('clk')) {
                obj['clk'] = ApiClient.convertToType(data['clk'], 'String');
            }
            if (data.hasOwnProperty('conflateMs')) {
                obj['conflateMs'] = ApiClient.convertToType(data['conflateMs'], 'Number');
            }
            if (data.hasOwnProperty('heartbeatMs')) {
                obj['heartbeatMs'] = ApiClient.convertToType(data['heartbeatMs'], 'Number');
            }
            if (data.hasOwnProperty('initialClk')) {
                obj['initialClk'] = ApiClient.convertToType(data['initialClk'], 'String');
            }
            if (data.hasOwnProperty('marketDataFilter')) {
                obj['marketDataFilter'] = MarketDataFilter.constructFromObject(data['marketDataFilter']);
            }
            if (data.hasOwnProperty('marketFilter')) {
                obj['marketFilter'] = MarketFilter.constructFromObject(data['marketFilter']);
            }
            if (data.hasOwnProperty('segmentationEnabled')) {
                obj['segmentationEnabled'] = ApiClient.convertToType(data['segmentationEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MarketSubscriptionMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MarketSubscriptionMessage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clk'] && !(typeof data['clk'] === 'string' || data['clk'] instanceof String)) {
            throw new Error("Expected the field `clk` to be a primitive type in the JSON string but got " + data['clk']);
        }
        // ensure the json data is a string
        if (data['initialClk'] && !(typeof data['initialClk'] === 'string' || data['initialClk'] instanceof String)) {
            throw new Error("Expected the field `initialClk` to be a primitive type in the JSON string but got " + data['initialClk']);
        }
        // validate the optional field `marketDataFilter`
        if (data['marketDataFilter']) { // data not null
          MarketDataFilter.validateJSON(data['marketDataFilter']);
        }
        // validate the optional field `marketFilter`
        if (data['marketFilter']) { // data not null
          MarketFilter.validateJSON(data['marketFilter']);
        }

        return true;
    }


}



/**
 * Token value delta (received in MarketChangeMessage) that should be passed to resume a subscription
 * @member {String} clk
 */
MarketSubscriptionMessage.prototype['clk'] = undefined;

/**
 * Conflate Milliseconds - the conflation rate (looped back on initial image after validation: bounds are 0 to 120000)
 * @member {Number} conflateMs
 */
MarketSubscriptionMessage.prototype['conflateMs'] = undefined;

/**
 * Heartbeat Milliseconds - the heartbeat rate (looped back on initial image after validation: bounds are 500 to 5000)
 * @member {Number} heartbeatMs
 */
MarketSubscriptionMessage.prototype['heartbeatMs'] = undefined;

/**
 * Token value (received in initial MarketChangeMessage) that should be passed to resume a subscription
 * @member {String} initialClk
 */
MarketSubscriptionMessage.prototype['initialClk'] = undefined;

/**
 * @member {module:model/MarketDataFilter} marketDataFilter
 */
MarketSubscriptionMessage.prototype['marketDataFilter'] = undefined;

/**
 * @member {module:model/MarketFilter} marketFilter
 */
MarketSubscriptionMessage.prototype['marketFilter'] = undefined;

/**
 * Segmentation Enabled - allow the server to send large sets of data in segments, instead of a single block
 * @member {Boolean} segmentationEnabled
 */
MarketSubscriptionMessage.prototype['segmentationEnabled'] = undefined;


// Implement RequestMessage interface:
/**
 * Client generated unique id to link request with response (like json rpc)
 * @member {Number} id
 */
RequestMessage.prototype['id'] = undefined;
/**
 * The operation type
 * @member {String} op
 */
RequestMessage.prototype['op'] = undefined;




export default MarketSubscriptionMessage;

