/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderChangeMessage.h
 *
 * 
 */

#ifndef OAIOrderChangeMessage_H
#define OAIOrderChangeMessage_H

#include <QJsonObject>

#include "OAIOrderMarketChange.h"
#include "OAIResponseMessage.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrderMarketChange;

class OAIOrderChangeMessage : public OAIObject {
public:
    OAIOrderChangeMessage();
    OAIOrderChangeMessage(QString json);
    ~OAIOrderChangeMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getOp() const;
    void setOp(const QString &op);
    bool is_op_Set() const;
    bool is_op_Valid() const;

    QString getClk() const;
    void setClk(const QString &clk);
    bool is_clk_Set() const;
    bool is_clk_Valid() const;

    qint64 getConflateMs() const;
    void setConflateMs(const qint64 &conflate_ms);
    bool is_conflate_ms_Set() const;
    bool is_conflate_ms_Valid() const;

    QString getCt() const;
    void setCt(const QString &ct);
    bool is_ct_Set() const;
    bool is_ct_Valid() const;

    qint64 getHeartbeatMs() const;
    void setHeartbeatMs(const qint64 &heartbeat_ms);
    bool is_heartbeat_ms_Set() const;
    bool is_heartbeat_ms_Valid() const;

    QString getInitialClk() const;
    void setInitialClk(const QString &initial_clk);
    bool is_initial_clk_Set() const;
    bool is_initial_clk_Valid() const;

    QList<OAIOrderMarketChange> getOc() const;
    void setOc(const QList<OAIOrderMarketChange> &oc);
    bool is_oc_Set() const;
    bool is_oc_Valid() const;

    qint64 getPt() const;
    void setPt(const qint64 &pt);
    bool is_pt_Set() const;
    bool is_pt_Valid() const;

    QString getSegmentType() const;
    void setSegmentType(const QString &segment_type);
    bool is_segment_type_Set() const;
    bool is_segment_type_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_op;
    bool m_op_isSet;
    bool m_op_isValid;

    QString m_clk;
    bool m_clk_isSet;
    bool m_clk_isValid;

    qint64 m_conflate_ms;
    bool m_conflate_ms_isSet;
    bool m_conflate_ms_isValid;

    QString m_ct;
    bool m_ct_isSet;
    bool m_ct_isValid;

    qint64 m_heartbeat_ms;
    bool m_heartbeat_ms_isSet;
    bool m_heartbeat_ms_isValid;

    QString m_initial_clk;
    bool m_initial_clk_isSet;
    bool m_initial_clk_isValid;

    QList<OAIOrderMarketChange> m_oc;
    bool m_oc_isSet;
    bool m_oc_isValid;

    qint64 m_pt;
    bool m_pt_isSet;
    bool m_pt_isValid;

    QString m_segment_type;
    bool m_segment_type_isSet;
    bool m_segment_type_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderChangeMessage)

#endif // OAIOrderChangeMessage_H
