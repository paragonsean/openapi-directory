/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAllRequestTypesExample.h
 *
 * 
 */

#ifndef OAIAllRequestTypesExample_H
#define OAIAllRequestTypesExample_H

#include <QJsonObject>

#include "OAIAuthenticationMessage.h"
#include "OAIHeartbeatMessage.h"
#include "OAIMarketSubscriptionMessage.h"
#include "OAIOrderSubscriptionMessage.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuthenticationMessage;
class OAIHeartbeatMessage;
class OAIMarketSubscriptionMessage;
class OAIOrderSubscriptionMessage;

class OAIAllRequestTypesExample : public OAIObject {
public:
    OAIAllRequestTypesExample();
    OAIAllRequestTypesExample(QString json);
    ~OAIAllRequestTypesExample() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAuthenticationMessage getAuthentication() const;
    void setAuthentication(const OAIAuthenticationMessage &authentication);
    bool is_authentication_Set() const;
    bool is_authentication_Valid() const;

    OAIHeartbeatMessage getHeartbeat() const;
    void setHeartbeat(const OAIHeartbeatMessage &heartbeat);
    bool is_heartbeat_Set() const;
    bool is_heartbeat_Valid() const;

    OAIMarketSubscriptionMessage getMarketSubscription() const;
    void setMarketSubscription(const OAIMarketSubscriptionMessage &market_subscription);
    bool is_market_subscription_Set() const;
    bool is_market_subscription_Valid() const;

    QString getOpTypes() const;
    void setOpTypes(const QString &op_types);
    bool is_op_types_Set() const;
    bool is_op_types_Valid() const;

    OAIOrderSubscriptionMessage getOrderSubscriptionMessage() const;
    void setOrderSubscriptionMessage(const OAIOrderSubscriptionMessage &order_subscription_message);
    bool is_order_subscription_message_Set() const;
    bool is_order_subscription_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAuthenticationMessage m_authentication;
    bool m_authentication_isSet;
    bool m_authentication_isValid;

    OAIHeartbeatMessage m_heartbeat;
    bool m_heartbeat_isSet;
    bool m_heartbeat_isValid;

    OAIMarketSubscriptionMessage m_market_subscription;
    bool m_market_subscription_isSet;
    bool m_market_subscription_isValid;

    QString m_op_types;
    bool m_op_types_isSet;
    bool m_op_types_isValid;

    OAIOrderSubscriptionMessage m_order_subscription_message;
    bool m_order_subscription_message_isSet;
    bool m_order_subscription_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAllRequestTypesExample)

#endif // OAIAllRequestTypesExample_H
