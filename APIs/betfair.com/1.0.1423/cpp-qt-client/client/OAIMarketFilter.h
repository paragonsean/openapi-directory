/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMarketFilter.h
 *
 * 
 */

#ifndef OAIMarketFilter_H
#define OAIMarketFilter_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMarketFilter : public OAIObject {
public:
    OAIMarketFilter();
    OAIMarketFilter(QString json);
    ~OAIMarketFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getBettingTypes() const;
    void setBettingTypes(const QList<QString> &betting_types);
    bool is_betting_types_Set() const;
    bool is_betting_types_Valid() const;

    bool isBspMarket() const;
    void setBspMarket(const bool &bsp_market);
    bool is_bsp_market_Set() const;
    bool is_bsp_market_Valid() const;

    QList<QString> getCountryCodes() const;
    void setCountryCodes(const QList<QString> &country_codes);
    bool is_country_codes_Set() const;
    bool is_country_codes_Valid() const;

    QList<QString> getEventIds() const;
    void setEventIds(const QList<QString> &event_ids);
    bool is_event_ids_Set() const;
    bool is_event_ids_Valid() const;

    QList<QString> getEventTypeIds() const;
    void setEventTypeIds(const QList<QString> &event_type_ids);
    bool is_event_type_ids_Set() const;
    bool is_event_type_ids_Valid() const;

    QList<QString> getMarketIds() const;
    void setMarketIds(const QList<QString> &market_ids);
    bool is_market_ids_Set() const;
    bool is_market_ids_Valid() const;

    QList<QString> getMarketTypes() const;
    void setMarketTypes(const QList<QString> &market_types);
    bool is_market_types_Set() const;
    bool is_market_types_Valid() const;

    QList<QString> getRaceTypes() const;
    void setRaceTypes(const QList<QString> &race_types);
    bool is_race_types_Set() const;
    bool is_race_types_Valid() const;

    bool isTurnInPlayEnabled() const;
    void setTurnInPlayEnabled(const bool &turn_in_play_enabled);
    bool is_turn_in_play_enabled_Set() const;
    bool is_turn_in_play_enabled_Valid() const;

    QList<QString> getVenues() const;
    void setVenues(const QList<QString> &venues);
    bool is_venues_Set() const;
    bool is_venues_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_betting_types;
    bool m_betting_types_isSet;
    bool m_betting_types_isValid;

    bool m_bsp_market;
    bool m_bsp_market_isSet;
    bool m_bsp_market_isValid;

    QList<QString> m_country_codes;
    bool m_country_codes_isSet;
    bool m_country_codes_isValid;

    QList<QString> m_event_ids;
    bool m_event_ids_isSet;
    bool m_event_ids_isValid;

    QList<QString> m_event_type_ids;
    bool m_event_type_ids_isSet;
    bool m_event_type_ids_isValid;

    QList<QString> m_market_ids;
    bool m_market_ids_isSet;
    bool m_market_ids_isValid;

    QList<QString> m_market_types;
    bool m_market_types_isSet;
    bool m_market_types_isValid;

    QList<QString> m_race_types;
    bool m_race_types_isSet;
    bool m_race_types_isValid;

    bool m_turn_in_play_enabled;
    bool m_turn_in_play_enabled_isSet;
    bool m_turn_in_play_enabled_isValid;

    QList<QString> m_venues;
    bool m_venues_isSet;
    bool m_venues_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMarketFilter)

#endif // OAIMarketFilter_H
