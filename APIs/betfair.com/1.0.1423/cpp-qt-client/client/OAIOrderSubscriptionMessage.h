/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderSubscriptionMessage.h
 *
 * 
 */

#ifndef OAIOrderSubscriptionMessage_H
#define OAIOrderSubscriptionMessage_H

#include <QJsonObject>

#include "OAIOrderFilter.h"
#include "OAIRequestMessage.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOrderFilter;

class OAIOrderSubscriptionMessage : public OAIObject {
public:
    OAIOrderSubscriptionMessage();
    OAIOrderSubscriptionMessage(QString json);
    ~OAIOrderSubscriptionMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getOp() const;
    void setOp(const QString &op);
    bool is_op_Set() const;
    bool is_op_Valid() const;

    QString getClk() const;
    void setClk(const QString &clk);
    bool is_clk_Set() const;
    bool is_clk_Valid() const;

    qint64 getConflateMs() const;
    void setConflateMs(const qint64 &conflate_ms);
    bool is_conflate_ms_Set() const;
    bool is_conflate_ms_Valid() const;

    qint64 getHeartbeatMs() const;
    void setHeartbeatMs(const qint64 &heartbeat_ms);
    bool is_heartbeat_ms_Set() const;
    bool is_heartbeat_ms_Valid() const;

    QString getInitialClk() const;
    void setInitialClk(const QString &initial_clk);
    bool is_initial_clk_Set() const;
    bool is_initial_clk_Valid() const;

    OAIOrderFilter getOrderFilter() const;
    void setOrderFilter(const OAIOrderFilter &order_filter);
    bool is_order_filter_Set() const;
    bool is_order_filter_Valid() const;

    bool isSegmentationEnabled() const;
    void setSegmentationEnabled(const bool &segmentation_enabled);
    bool is_segmentation_enabled_Set() const;
    bool is_segmentation_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_op;
    bool m_op_isSet;
    bool m_op_isValid;

    QString m_clk;
    bool m_clk_isSet;
    bool m_clk_isValid;

    qint64 m_conflate_ms;
    bool m_conflate_ms_isSet;
    bool m_conflate_ms_isValid;

    qint64 m_heartbeat_ms;
    bool m_heartbeat_ms_isSet;
    bool m_heartbeat_ms_isValid;

    QString m_initial_clk;
    bool m_initial_clk_isSet;
    bool m_initial_clk_isValid;

    OAIOrderFilter m_order_filter;
    bool m_order_filter_isSet;
    bool m_order_filter_isValid;

    bool m_segmentation_enabled;
    bool m_segmentation_enabled_isSet;
    bool m_segmentation_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderSubscriptionMessage)

#endif // OAIOrderSubscriptionMessage_H
