/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderFilter.h
 *
 * 
 */

#ifndef OAIOrderFilter_H
#define OAIOrderFilter_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOrderFilter : public OAIObject {
public:
    OAIOrderFilter();
    OAIOrderFilter(QString json);
    ~OAIOrderFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<qint64> getAccountIds() const;
    void setAccountIds(const QList<qint64> &account_ids);
    bool is_account_ids_Set() const;
    bool is_account_ids_Valid() const;

    QList<QString> getCustomerStrategyRefs() const;
    void setCustomerStrategyRefs(const QList<QString> &customer_strategy_refs);
    bool is_customer_strategy_refs_Set() const;
    bool is_customer_strategy_refs_Valid() const;

    bool isIncludeOverallPosition() const;
    void setIncludeOverallPosition(const bool &include_overall_position);
    bool is_include_overall_position_Set() const;
    bool is_include_overall_position_Valid() const;

    bool isPartitionMatchedByStrategyRef() const;
    void setPartitionMatchedByStrategyRef(const bool &partition_matched_by_strategy_ref);
    bool is_partition_matched_by_strategy_ref_Set() const;
    bool is_partition_matched_by_strategy_ref_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<qint64> m_account_ids;
    bool m_account_ids_isSet;
    bool m_account_ids_isValid;

    QList<QString> m_customer_strategy_refs;
    bool m_customer_strategy_refs_isSet;
    bool m_customer_strategy_refs_isValid;

    bool m_include_overall_position;
    bool m_include_overall_position_isSet;
    bool m_include_overall_position_isValid;

    bool m_partition_matched_by_strategy_ref;
    bool m_partition_matched_by_strategy_ref_isSet;
    bool m_partition_matched_by_strategy_ref_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderFilter)

#endif // OAIOrderFilter_H
