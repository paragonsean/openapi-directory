/**
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRunnerChange.h
 *
 * 
 */

#ifndef OAIRunnerChange_H
#define OAIRunnerChange_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRunnerChange : public OAIObject {
public:
    OAIRunnerChange();
    OAIRunnerChange(QString json);
    ~OAIRunnerChange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QList<double>> getAtb() const;
    void setAtb(const QList<QList<double>> &atb);
    bool is_atb_Set() const;
    bool is_atb_Valid() const;

    QList<QList<double>> getAtl() const;
    void setAtl(const QList<QList<double>> &atl);
    bool is_atl_Set() const;
    bool is_atl_Valid() const;

    QList<QList<double>> getBatb() const;
    void setBatb(const QList<QList<double>> &batb);
    bool is_batb_Set() const;
    bool is_batb_Valid() const;

    QList<QList<double>> getBatl() const;
    void setBatl(const QList<QList<double>> &batl);
    bool is_batl_Set() const;
    bool is_batl_Valid() const;

    QList<QList<double>> getBdatb() const;
    void setBdatb(const QList<QList<double>> &bdatb);
    bool is_bdatb_Set() const;
    bool is_bdatb_Valid() const;

    QList<QList<double>> getBdatl() const;
    void setBdatl(const QList<QList<double>> &bdatl);
    bool is_bdatl_Set() const;
    bool is_bdatl_Valid() const;

    double getHc() const;
    void setHc(const double &hc);
    bool is_hc_Set() const;
    bool is_hc_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getLtp() const;
    void setLtp(const double &ltp);
    bool is_ltp_Set() const;
    bool is_ltp_Valid() const;

    QList<QList<double>> getSpb() const;
    void setSpb(const QList<QList<double>> &spb);
    bool is_spb_Set() const;
    bool is_spb_Valid() const;

    double getSpf() const;
    void setSpf(const double &spf);
    bool is_spf_Set() const;
    bool is_spf_Valid() const;

    QList<QList<double>> getSpl() const;
    void setSpl(const QList<QList<double>> &spl);
    bool is_spl_Set() const;
    bool is_spl_Valid() const;

    double getSpn() const;
    void setSpn(const double &spn);
    bool is_spn_Set() const;
    bool is_spn_Valid() const;

    QList<QList<double>> getTrd() const;
    void setTrd(const QList<QList<double>> &trd);
    bool is_trd_Set() const;
    bool is_trd_Valid() const;

    double getTv() const;
    void setTv(const double &tv);
    bool is_tv_Set() const;
    bool is_tv_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QList<double>> m_atb;
    bool m_atb_isSet;
    bool m_atb_isValid;

    QList<QList<double>> m_atl;
    bool m_atl_isSet;
    bool m_atl_isValid;

    QList<QList<double>> m_batb;
    bool m_batb_isSet;
    bool m_batb_isValid;

    QList<QList<double>> m_batl;
    bool m_batl_isSet;
    bool m_batl_isValid;

    QList<QList<double>> m_bdatb;
    bool m_bdatb_isSet;
    bool m_bdatb_isValid;

    QList<QList<double>> m_bdatl;
    bool m_bdatl_isSet;
    bool m_bdatl_isValid;

    double m_hc;
    bool m_hc_isSet;
    bool m_hc_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_ltp;
    bool m_ltp_isSet;
    bool m_ltp_isValid;

    QList<QList<double>> m_spb;
    bool m_spb_isSet;
    bool m_spb_isValid;

    double m_spf;
    bool m_spf_isSet;
    bool m_spf_isValid;

    QList<QList<double>> m_spl;
    bool m_spl_isSet;
    bool m_spl_isValid;

    double m_spn;
    bool m_spn_isSet;
    bool m_spn_isValid;

    QList<QList<double>> m_trd;
    bool m_trd_isSet;
    bool m_trd_isValid;

    double m_tv;
    bool m_tv_isSet;
    bool m_tv_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRunnerChange)

#endif // OAIRunnerChange_H
