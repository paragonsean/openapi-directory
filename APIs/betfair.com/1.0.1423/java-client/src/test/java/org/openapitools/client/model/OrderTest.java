/*
 * Betfair: Exchange Streaming API
 * API to receive streamed updates. This is an ssl socket connection of CRLF delimited json messages (see RequestMessage & ResponseMessage)
 *
 * The version of the OpenAPI document: 1.0.1423
 * Contact: bdp@betfair.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Order
 */
public class OrderTest {
    private final Order model = new Order();

    /**
     * Model tests for Order
     */
    @Test
    public void testOrder() {
        // TODO: test Order
    }

    /**
     * Test the property 'avp'
     */
    @Test
    public void avpTest() {
        // TODO: test avp
    }

    /**
     * Test the property 'bsp'
     */
    @Test
    public void bspTest() {
        // TODO: test bsp
    }

    /**
     * Test the property 'cd'
     */
    @Test
    public void cdTest() {
        // TODO: test cd
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'ld'
     */
    @Test
    public void ldTest() {
        // TODO: test ld
    }

    /**
     * Test the property 'lsrc'
     */
    @Test
    public void lsrcTest() {
        // TODO: test lsrc
    }

    /**
     * Test the property 'md'
     */
    @Test
    public void mdTest() {
        // TODO: test md
    }

    /**
     * Test the property 'ot'
     */
    @Test
    public void otTest() {
        // TODO: test ot
    }

    /**
     * Test the property 'p'
     */
    @Test
    public void pTest() {
        // TODO: test p
    }

    /**
     * Test the property 'pd'
     */
    @Test
    public void pdTest() {
        // TODO: test pd
    }

    /**
     * Test the property 'pt'
     */
    @Test
    public void ptTest() {
        // TODO: test pt
    }

    /**
     * Test the property 'rac'
     */
    @Test
    public void racTest() {
        // TODO: test rac
    }

    /**
     * Test the property 'rc'
     */
    @Test
    public void rcTest() {
        // TODO: test rc
    }

    /**
     * Test the property 'rfo'
     */
    @Test
    public void rfoTest() {
        // TODO: test rfo
    }

    /**
     * Test the property 'rfs'
     */
    @Test
    public void rfsTest() {
        // TODO: test rfs
    }

    /**
     * Test the property 's'
     */
    @Test
    public void sTest() {
        // TODO: test s
    }

    /**
     * Test the property 'sc'
     */
    @Test
    public void scTest() {
        // TODO: test sc
    }

    /**
     * Test the property 'side'
     */
    @Test
    public void sideTest() {
        // TODO: test side
    }

    /**
     * Test the property 'sl'
     */
    @Test
    public void slTest() {
        // TODO: test sl
    }

    /**
     * Test the property 'sm'
     */
    @Test
    public void smTest() {
        // TODO: test sm
    }

    /**
     * Test the property 'sr'
     */
    @Test
    public void srTest() {
        // TODO: test sr
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'sv'
     */
    @Test
    public void svTest() {
        // TODO: test sv
    }

}
