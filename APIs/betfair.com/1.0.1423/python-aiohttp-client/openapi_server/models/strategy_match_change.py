# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StrategyMatchChange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mb: List[List[float]]=None, ml: List[List[float]]=None):
        """StrategyMatchChange - a model defined in OpenAPI

        :param mb: The mb of this StrategyMatchChange.
        :param ml: The ml of this StrategyMatchChange.
        """
        self.openapi_types = {
            'mb': List[List[float]],
            'ml': List[List[float]]
        }

        self.attribute_map = {
            'mb': 'mb',
            'ml': 'ml'
        }

        self._mb = mb
        self._ml = ml

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StrategyMatchChange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StrategyMatchChange of this StrategyMatchChange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mb(self):
        """Gets the mb of this StrategyMatchChange.

        Matched Backs - matched amounts by distinct matched price on the Back side for this strategy

        :return: The mb of this StrategyMatchChange.
        :rtype: List[List[float]]
        """
        return self._mb

    @mb.setter
    def mb(self, mb):
        """Sets the mb of this StrategyMatchChange.

        Matched Backs - matched amounts by distinct matched price on the Back side for this strategy

        :param mb: The mb of this StrategyMatchChange.
        :type mb: List[List[float]]
        """

        self._mb = mb

    @property
    def ml(self):
        """Gets the ml of this StrategyMatchChange.

        Matched Lays - matched amounts by distinct matched price on the Lay side for this strategy

        :return: The ml of this StrategyMatchChange.
        :rtype: List[List[float]]
        """
        return self._ml

    @ml.setter
    def ml(self, ml):
        """Sets the ml of this StrategyMatchChange.

        Matched Lays - matched amounts by distinct matched price on the Lay side for this strategy

        :param ml: The ml of this StrategyMatchChange.
        :type ml: List[List[float]]
        """

        self._ml = ml
