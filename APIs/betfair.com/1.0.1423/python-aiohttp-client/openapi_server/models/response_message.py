# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResponseMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, op: str=None):
        """ResponseMessage - a model defined in OpenAPI

        :param id: The id of this ResponseMessage.
        :param op: The op of this ResponseMessage.
        """
        self.openapi_types = {
            'id': int,
            'op': str
        }

        self.attribute_map = {
            'id': 'id',
            'op': 'op'
        }

        self._id = id
        self._op = op

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseMessage of this ResponseMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ResponseMessage.

        Client generated unique id to link request with response (like json rpc)

        :return: The id of this ResponseMessage.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ResponseMessage.

        Client generated unique id to link request with response (like json rpc)

        :param id: The id of this ResponseMessage.
        :type id: int
        """

        self._id = id

    @property
    def op(self):
        """Gets the op of this ResponseMessage.

        The operation type

        :return: The op of this ResponseMessage.
        :rtype: str
        """
        return self._op

    @op.setter
    def op(self, op):
        """Sets the op of this ResponseMessage.

        The operation type

        :param op: The op of this ResponseMessage.
        :type op: str
        """

        self._op = op
