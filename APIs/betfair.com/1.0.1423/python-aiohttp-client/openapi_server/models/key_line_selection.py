# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KeyLineSelection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hc: float=None, id: int=None):
        """KeyLineSelection - a model defined in OpenAPI

        :param hc: The hc of this KeyLineSelection.
        :param id: The id of this KeyLineSelection.
        """
        self.openapi_types = {
            'hc': float,
            'id': int
        }

        self.attribute_map = {
            'hc': 'hc',
            'id': 'id'
        }

        self._hc = hc
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeyLineSelection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeyLineSelection of this KeyLineSelection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hc(self):
        """Gets the hc of this KeyLineSelection.


        :return: The hc of this KeyLineSelection.
        :rtype: float
        """
        return self._hc

    @hc.setter
    def hc(self, hc):
        """Sets the hc of this KeyLineSelection.


        :param hc: The hc of this KeyLineSelection.
        :type hc: float
        """

        self._hc = hc

    @property
    def id(self):
        """Gets the id of this KeyLineSelection.


        :return: The id of this KeyLineSelection.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this KeyLineSelection.


        :param id: The id of this KeyLineSelection.
        :type id: int
        """

        self._id = id
