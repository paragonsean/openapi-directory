# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_runner_change import OrderRunnerChange
from openapi_server import util


class OrderMarketChange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: int=None, closed: bool=None, full_image: bool=None, id: str=None, orc: List[OrderRunnerChange]=None):
        """OrderMarketChange - a model defined in OpenAPI

        :param account_id: The account_id of this OrderMarketChange.
        :param closed: The closed of this OrderMarketChange.
        :param full_image: The full_image of this OrderMarketChange.
        :param id: The id of this OrderMarketChange.
        :param orc: The orc of this OrderMarketChange.
        """
        self.openapi_types = {
            'account_id': int,
            'closed': bool,
            'full_image': bool,
            'id': str,
            'orc': List[OrderRunnerChange]
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'closed': 'closed',
            'full_image': 'fullImage',
            'id': 'id',
            'orc': 'orc'
        }

        self._account_id = account_id
        self._closed = closed
        self._full_image = full_image
        self._id = id
        self._orc = orc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderMarketChange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderMarketChange of this OrderMarketChange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this OrderMarketChange.


        :return: The account_id of this OrderMarketChange.
        :rtype: int
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this OrderMarketChange.


        :param account_id: The account_id of this OrderMarketChange.
        :type account_id: int
        """

        self._account_id = account_id

    @property
    def closed(self):
        """Gets the closed of this OrderMarketChange.


        :return: The closed of this OrderMarketChange.
        :rtype: bool
        """
        return self._closed

    @closed.setter
    def closed(self, closed):
        """Sets the closed of this OrderMarketChange.


        :param closed: The closed of this OrderMarketChange.
        :type closed: bool
        """

        self._closed = closed

    @property
    def full_image(self):
        """Gets the full_image of this OrderMarketChange.


        :return: The full_image of this OrderMarketChange.
        :rtype: bool
        """
        return self._full_image

    @full_image.setter
    def full_image(self, full_image):
        """Sets the full_image of this OrderMarketChange.


        :param full_image: The full_image of this OrderMarketChange.
        :type full_image: bool
        """

        self._full_image = full_image

    @property
    def id(self):
        """Gets the id of this OrderMarketChange.

        Market Id - the id of the market the order is on

        :return: The id of this OrderMarketChange.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderMarketChange.

        Market Id - the id of the market the order is on

        :param id: The id of this OrderMarketChange.
        :type id: str
        """

        self._id = id

    @property
    def orc(self):
        """Gets the orc of this OrderMarketChange.

        Order Changes - a list of changes to orders on a selection

        :return: The orc of this OrderMarketChange.
        :rtype: List[OrderRunnerChange]
        """
        return self._orc

    @orc.setter
    def orc(self, orc):
        """Sets the orc of this OrderMarketChange.

        Order Changes - a list of changes to orders on a selection

        :param orc: The orc of this OrderMarketChange.
        :type orc: List[OrderRunnerChange]
        """

        self._orc = orc
