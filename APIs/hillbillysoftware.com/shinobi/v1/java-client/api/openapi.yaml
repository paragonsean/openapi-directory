openapi: 3.0.1
info:
  title: shinobiapi
  version: v1
  x-apisguru-categories:
  - media
  x-origin:
  - format: swagger
    url: https://api.hillbillysoftware.com/swagger/docs/v1
    version: "2.0"
  x-providerName: hillbillysoftware.com
  x-serviceName: shinobi
servers:
- url: https://api.hillbillysoftware.com/
paths:
  /Actors/Search/{accesstoken}/{Query}:
    get:
      operationId: Actor_Get
      parameters:
      - in: path
        name: accesstoken
        required: true
        schema:
          type: string
      - in: path
        name: Query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Actor'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Actor'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Actor'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Actor'
                type: array
          description: List of Actors
      summary: Returns data on queried actor/actress. Result set limited to 5 records
      tags:
      - Cast & Crew (Cast & Crew in Movies & Television Shows)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /AddActor:
    post:
      operationId: AddActor_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorPost'
          text/json:
            schema:
              $ref: '#/components/schemas/ActorPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/ActorPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/ActorPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActorPost'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PostResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/PostResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/PostResult'
          description: Result
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PostResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/PostResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/PostResult'
          description: Result
      summary: Add new actor or actress to database
      tags:
      - Cast & Crew (Cast & Crew in Movies & Television Shows)
      x-codegen-request-body-name: Value
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /AddTVShow:
    post:
      operationId: AddTVShow_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TVInformationPost'
          text/json:
            schema:
              $ref: '#/components/schemas/TVInformationPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/TVInformationPost'
          text/xml:
            schema:
              $ref: '#/components/schemas/TVInformationPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TVInformationPost'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PostResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/PostResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/PostResult'
          description: Result
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PostResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/PostResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/PostResult'
          description: Result
      summary: Add new show to database
      tags:
      - "Television (Shows, Episodes, & Statuses)"
      x-codegen-request-body-name: Value
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Aliases/ByID/{AccessToken}/{imdbID}:
    get:
      operationId: AliasesByID_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: imdbID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Aliases'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Aliases'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Aliases'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Aliases'
                type: array
          description: List of known Aliases
      summary: Get known aliases for Movies or Television shows from passed imdbID
      tags:
      - Aliases (Movie & Television Show Aliases)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Aliases/ByName/{AccessToken}/{Title}:
    get:
      operationId: Aliases_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: Title of movie or television show
        in: path
        name: Title
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Aliases'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Aliases'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Aliases'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Aliases'
                type: array
          description: List of known Aliases
      summary: Get known aliases for Movies or Television shows
      tags:
      - Aliases (Movie & Television Show Aliases)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Awards/ByWinner/{AccessToken}/{Nominee}:
    get:
      operationId: AwardsbyWinner_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Nominee
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/_Awards'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/_Awards'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/_Awards'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/_Awards'
                type: array
          description: List of awards
      summary: Gets all awards by nominiee
      tags:
      - Awards (Television & Movies)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Awards/ByYear/{Year}:
    get:
      operationId: awards_Get
      parameters:
      - in: path
        name: Year
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/_Awards'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/_Awards'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/_Awards'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/_Awards'
                type: array
          description: List of awards
      summary: Gets all awards for requested year
      tags:
      - Awards (Television & Movies)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Calendar/ByDate/{AccessToken}/{Date}/{Country}:
    get:
      operationId: ScheduleByDate_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: date format year-month-day
        in: path
        name: Date
        required: true
        schema:
          type: string
      - description: US / CA / NL / BE / DE / GB or FR
        in: path
        name: Country
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
          description: List of schedules/calendar entries
      summary: Gets TV Schedule for selected data
      tags:
      - Calendar (Television Show Schedules)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Calendar/Countries/{AccessToken}:
    get:
      operationId: CalendarCountries_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Country'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Country'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Country'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Country'
                type: array
          description: List of countries
      summary: Returns list of available countries in calendar database
      tags:
      - Calendar (Television Show Schedules)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Calendar/Networks/{AccessToken}:
    get:
      operationId: CalendarNetworks_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Networks'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Networks'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Networks'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Networks'
                type: array
          description: List of networks
      summary: Gets a list of available networks
      tags:
      - Calendar (Television Show Schedules)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Calendar/Seasons/{AccessToken}/{Name}:
    get:
      operationId: CalendarShowSeasons_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ShowSeasons'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/ShowSeasons'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ShowSeasons'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ShowSeasons'
                type: array
          description: List of years
      summary: Returns list of seasons available in the calendar for show
      tags:
      - Calendar (Television Show Schedules)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Calendar/Show/Season/{AccessToken}/{Name}/{Season}:
    get:
      operationId: CalendarbyShownameSeason_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Name
        required: true
        schema:
          type: string
      - in: path
        name: Season
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
          description: List of schedules/calendar entries
      summary: Get Calendar by showname and season
      tags:
      - Calendar (Television Show Schedules)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Calendar/Show/{AccessToken}/{Name}/{Year}:
    get:
      operationId: CalendarByShowName_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Name
        required: true
        schema:
          type: string
      - in: path
        name: Year
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
          description: List of schedules/calendar entries
      summary: Will return show schedule for queried showname and year
      tags:
      - Calendar (Television Show Schedules)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Calendar/Today/{AccessToken}:
    get:
      operationId: CalendarToday_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/schedule'
                type: array
          description: List of schedules/calendar entries
      summary: Will return show schedule for today for all countries in database
      tags:
      - Calendar (Television Show Schedules)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Cast/ActorBySearch/{AccessToken}/{Actor}:
    get:
      operationId: ActorInShows_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: "Part of, or full name of actor"
        in: path
        name: Actor
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TVShowActor'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/TVShowActor'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TVShowActor'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TVShowActor'
                type: array
          description: List of actors in show
      summary: Returns all shows queried actor/actress is or has been in
      tags:
      - Cast & Crew (Cast & Crew in Movies & Television Shows)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Cast/ByActor/{AccessToken}/{Actor}:
    get:
      operationId: CastByActor_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: Full name of actor
        in: path
        name: Actor
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TVShowActor'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/TVShowActor'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TVShowActor'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TVShowActor'
                type: array
          description: List of shows Actor is appearing in
      summary: Returns list of show actor is appearing in
      tags:
      - Cast & Crew (Cast & Crew in Movies & Television Shows)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Cast/ByTVShow/{accesstoken}/{ShowName}:
    get:
      operationId: ActorsInTVShow_Get
      parameters:
      - in: path
        name: accesstoken
        required: true
        schema:
          type: string
      - in: path
        name: ShowName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TVShowActor'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/TVShowActor'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TVShowActor'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TVShowActor'
                type: array
          description: List of actors in show
      summary: Returns all actors in queried tvshow
      tags:
      - Cast & Crew (Cast & Crew in Movies & Television Shows)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Crew/ByID/{AccessToken}/{ID}:
    get:
      operationId: CrewByID_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: "IMDBID, TVmazeID, or TVDBID"
        in: path
        name: ID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
          description: List of crew
      summary: Get crew list by ID
      tags:
      - Cast & Crew (Cast & Crew in Movies & Television Shows)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Crew/ByPerson/{AccessToken}/{PersonName}:
    get:
      operationId: CrewByPerson_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: PersonName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
          description: List of crew
      summary: Gets list of productions searched person is/was involved in.
      tags:
      - Cast & Crew (Cast & Crew in Movies & Television Shows)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Crew/ByShowName/{AccessToken}/{ShowName}:
    get:
      operationId: CrewbyShowname_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: Full exact showname
        in: path
        name: ShowName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
          description: List of crew
      summary: Get crew list by showname
      tags:
      - Cast & Crew (Cast & Crew in Movies & Television Shows)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Crew/Search/{AccessToken}/{Phrase}:
    get:
      operationId: Crew_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: "Part of, or full showname to search for"
        in: path
        name: Phrase
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Crew'
                type: array
          description: List of crew
      summary: Returns crew for queried show.
      tags:
      - Cast & Crew (Cast & Crew in Movies & Television Shows)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Episodes/ByID/{AccessToken}/{ID}:
    get:
      operationId: EpisodesByID_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: imdbID
        in: path
        name: ID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
          description: List of episodes
      summary: Gets all episodes for selected ID
      tags:
      - "Television (Shows, Episodes, & Statuses)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Episodes/BySeason/{AccessToken}/{ID}/{Season}:
    get:
      operationId: EpisodesBySeason_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: imdbID
        in: path
        name: ID
        required: true
        schema:
          type: string
      - description: Season number
        in: path
        name: Season
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
          description: List of episodes for specified season
      summary: Gets list of episodes for specified imdbID and Season number
      tags:
      - "Television (Shows, Episodes, & Statuses)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Episodes/ByShowName/{AccessToken}/{Showname}:
    get:
      operationId: Episodes_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Showname
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Episode'
                type: array
          description: List of episodes
      summary: Gets all episodes for selected show
      tags:
      - "Television (Shows, Episodes, & Statuses)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Episodes/LatestSeason/Show/{AccessToken}/{Name}:
    get:
      operationId: EpisodesLastAvailableSeasonbyName_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastAvailableSeason'
            text/json:
              schema:
                $ref: '#/components/schemas/LastAvailableSeason'
            application/xml:
              schema:
                $ref: '#/components/schemas/LastAvailableSeason'
            text/xml:
              schema:
                $ref: '#/components/schemas/LastAvailableSeason'
          description: Returns last available Season Number for passed showname
      summary: Gets latest season number based on show name
      tags:
      - "Television (Shows, Episodes, & Statuses)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Episodes/LatestSeason/{AccessToken}/{ID}:
    get:
      operationId: EpisodesLastAvailableSeason_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: imdbID
        in: path
        name: ID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastAvailableSeason'
            text/json:
              schema:
                $ref: '#/components/schemas/LastAvailableSeason'
            application/xml:
              schema:
                $ref: '#/components/schemas/LastAvailableSeason'
            text/xml:
              schema:
                $ref: '#/components/schemas/LastAvailableSeason'
          description: Returns last available Season Number for passed imdbID
      summary: "Returns last available season number in database, based on passed\
        \ imdbID"
      tags:
      - "Television (Shows, Episodes, & Statuses)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Episodes/SeasonCount/{AccessToken}/{ID}:
    get:
      operationId: EpisodesSeasonCount_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: imdbID
        in: path
        name: ID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TVShowSeasons'
            text/json:
              schema:
                $ref: '#/components/schemas/TVShowSeasons'
            application/xml:
              schema:
                $ref: '#/components/schemas/TVShowSeasons'
            text/xml:
              schema:
                $ref: '#/components/schemas/TVShowSeasons'
          description: Returns number of seasons available
      summary: Returns number of available seasons and episodes
      tags:
      - "Television (Shows, Episodes, & Statuses)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /GetIMDBid/ByID/{AccessToken}/{Query}:
    get:
      operationId: GetIMDBid_GetAsync
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/imdbID'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/imdbID'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/imdbID'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/imdbID'
                type: array
          description: List of imdb ID's
      summary: "Gets list of avaiable IMDB ids from Movies and TV Show databases,\
        \ you can use those to query other end points that need ID's"
      tags:
      - Miscellaneous (Conversion & other Utilities)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Images/ByID/{AccessToken}/{imdbID}:
    get:
      operationId: Images_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: imdbID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/imdbImages'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/imdbImages'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/imdbImages'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/imdbImages'
                type: array
          description: List of images
      summary: Get images available for movie/tv show with passed imdbID
      tags:
      - Images (Movie & Television Show Images)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Images/Search/{Accesstoken}/{Query}:
    get:
      operationId: ImageSearch_Get
      parameters:
      - in: path
        name: Accesstoken
        required: true
        schema:
          type: string
      - description: Name or part of name from Movie or Show
        in: path
        name: Query
        required: true
        schema:
          type: string
      - in: query
        name: Strictmatch
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/imdbImages'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/imdbImages'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/imdbImages'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/imdbImages'
                type: array
          description: List of images
      summary: Get images available for movie/tv show with passed query
      tags:
      - Images (Movie & Television Show Images)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Magnets/ByDate/{AccessToken}/{Date}:
    get:
      operationId: MagnetsByDate_GetAsync
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Date
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
          description: List of magnet hashes
      summary: "Gets available magnet hashes on passed date (yyyy-mm-dd).  Feature\
        \ not available on free plan, please donate to be able to use this feature."
      tags:
      - Magnets (Magnet hashes of Movies & Television Shows)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Magnets/ByIMDB/{AccessToken}/{imdbID}:
    get:
      operationId: MagnetsByimdbID_GetAsync
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: ID with or without tt prefix
        in: path
        name: imdbID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
          description: List of magnet hashes
      summary: "Returns list of magnet hashes for passed IMDBID.  Feature not available\
        \ on free plan, please donate to be able to use this feature."
      tags:
      - Magnets (Magnet hashes of Movies & Television Shows)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Magnets/Search/{AccessToken}/{Query}:
    get:
      operationId: magnetsMovieByID_GetAsync
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: Name or part of name of movie or tv show
        in: path
        name: Query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
          description: List of magnet hashes
      summary: "Try and find magnet links for queried movie.  Feature not available\
        \ on free plan, please donate to be able to use this feature"
      tags:
      - Magnets (Magnet hashes of Movies & Television Shows)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Magnets/TVShow/{AccessToken}/{TVShow}:
    get:
      operationId: TVShowsearch_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: TVShow
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Magnets'
                type: array
          description: List of magnet hashes
      summary: "Returns results based on query, Feature not available on free plan,\
        \ please donate to be able to use this feature."
      tags:
      - Magnets (Magnet hashes of Movies & Television Shows)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Movie/ByID/{accesstoken}/{imdbID}:
    get:
      operationId: MovieID_Get
      parameters:
      - in: path
        name: accesstoken
        required: true
        schema:
          type: string
      - in: path
        name: imdbID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieInformation'
            text/json:
              schema:
                $ref: '#/components/schemas/MovieInformation'
            application/xml:
              schema:
                $ref: '#/components/schemas/MovieInformation'
            text/xml:
              schema:
                $ref: '#/components/schemas/MovieInformation'
          description: Movie information
      tags:
      - "Movies (Movies, Documentaries, & made for Television Movies)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Movie/Search/{AccessToken}/{Query}:
    get:
      operationId: MovieSearch_GetAsync
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MovieInformation'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/MovieInformation'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/MovieInformation'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/MovieInformation'
                type: array
          description: List of information about queried movie(s)
      summary: "Searches for movies, result set limited to 5 records"
      tags:
      - "Movies (Movies, Documentaries, & made for Television Movies)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Albums/Art/{AccessToken}/{AlbumID}:
    get:
      operationId: musicAlbumArt_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: AlbumID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlbumArt'
            text/json:
              schema:
                $ref: '#/components/schemas/AlbumArt'
            application/xml:
              schema:
                $ref: '#/components/schemas/AlbumArt'
            text/xml:
              schema:
                $ref: '#/components/schemas/AlbumArt'
          description: Gets album art for passed AlbumID
      summary: Returns Albumart for passed AlbumID
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Albums/CoverArt/{AccessToken}/{MBID}:
    get:
      operationId: musicCDCovers_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: MusicBrainzID
        in: path
        name: MBID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CDCoverArt'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CDCoverArt'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/CDCoverArt'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/CDCoverArt'
                type: array
          description: Gets CD Cover Art for album
      summary: Gets CD art for passed MusicBrainzID
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Albums/MusicBrainzID/{AccessToken}/{MBID}:
    get:
      operationId: MusicByMusicBrainz_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: MusicBrainzID
        in: path
        name: MBID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BandInfo'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/BandInfo'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BandInfo'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BandInfo'
                type: array
          description: Information about band / artist based on MusicBrainzID
      summary: Get Artist / Band information on MusicBrainzID
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Albums/{AccessToken}/{ArtistID}:
    get:
      operationId: musicAlbums_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: ID of artist or band to retrieve albums from
        in: path
        name: ArtistID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BandAlbums'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/BandAlbums'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BandAlbums'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BandAlbums'
                type: array
          description: Lists all albums from passed ArtistID
      summary: Get albums from passed ArtistID
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Artist/Art/ID/{AccessToken}/{ArtistID}:
    get:
      operationId: musicCoverArt_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: ArtistID of artist or band
        in: path
        name: ArtistID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistArt'
            text/json:
              schema:
                $ref: '#/components/schemas/ArtistArt'
            application/xml:
              schema:
                $ref: '#/components/schemas/ArtistArt'
            text/xml:
              schema:
                $ref: '#/components/schemas/ArtistArt'
          description: Gets art for passed ArtistID
      summary: Retrieves artist / band Banner and logo based on ArtistID
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Artist/Art/Name/{AccessToken}/{Name}:
    get:
      operationId: musicCoverArtByName_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: Name of artist or band
        in: path
        name: Name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtistArt'
            text/json:
              schema:
                $ref: '#/components/schemas/ArtistArt'
            application/xml:
              schema:
                $ref: '#/components/schemas/ArtistArt'
            text/xml:
              schema:
                $ref: '#/components/schemas/ArtistArt'
          description: Gets art for passed arist or bandname
      summary: Retrieves artist / band Banner and logo based on artist or bandname
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Artist/Extended/{AccessToken}/{Name}:
    get:
      operationId: musicArtistExtended_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BandInfoExtended'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/BandInfoExtended'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BandInfoExtended'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BandInfoExtended'
                type: array
          description: Extended Information about band / artist
      summary: "Provides extended information, which includes all known albums and\
        \ music videos of artist / band"
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Artist/{AccessToken}/{Name}:
    get:
      operationId: Music_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: Name (or part) of band or artist name
        in: path
        name: Name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BandInfo'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/BandInfo'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BandInfo'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BandInfo'
                type: array
          description: Information about band / artist
      summary: Get information about passed band name or artist
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Lyrics/AlbumID/{AccessToken}/{AlbumID}:
    get:
      operationId: musicLyricsbyAlbumID_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: AlbumID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Lyric'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Lyric'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Lyric'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Lyric'
                type: array
          description: lyric(s) for requested albumID
      summary: Returns all lyrics for requested AlbumID
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Lyrics/ByName/{AccessToken}/{Name}:
    get:
      operationId: musicLyrics_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: Name (or partial) of band or artist (record set limited to 25)
        in: path
        name: Name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Lyric'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Lyric'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Lyric'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Lyric'
                type: array
          description: lyric(s) for requested artist / band
      summary: Get lyrics for band or artist (record set limited to 25)
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Lyrics/BySong/{AccessToken}/{Song}:
    get:
      operationId: musicLyricsBySong_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: Name or part of song name
        in: path
        name: Song
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Lyric'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Lyric'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Lyric'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Lyric'
                type: array
          description: lyric(s) for requested song
      summary: Get lyrics on song title
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Tracks/{AccessToken}/{AlbumID}:
    get:
      operationId: musicTracks_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: AlbumID (can be retrieved via album endpoint)
        in: path
        name: AlbumID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlbumTracks'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlbumTracks'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/AlbumTracks'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/AlbumTracks'
                type: array
          description: Lists all tracks on album from passed AlbumID
      summary: Get all tracks from requested album
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Music/Videos/{AccessToken}/{ArtistID}:
    get:
      operationId: MusiVideos_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: ArtistID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MusicVideo'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/MusicVideo'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/MusicVideo'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/MusicVideo'
                type: array
          description: Lists all videos available for this Artist / Band
      summary: Lists all videos available for this Artist / Band
      tags:
      - "Music (Artists ,Bands, Tracks, AlbumArt, CoverArt, & Videos)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Rating/ByID/{AccessToken}/{imdbID}:
    get:
      operationId: Rating_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: imdbID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingItem'
            text/json:
              schema:
                $ref: '#/components/schemas/RatingItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/RatingItem'
            text/xml:
              schema:
                $ref: '#/components/schemas/RatingItem'
          description: Ratings
      summary: "Returns ratings from various resources(IMDB,Rotten Tomatoes, metaCritics,\
        \ TVMaze etc) of passed IMDBid"
      tags:
      - Ratings  (Movie & Television Show Ratings)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Rating/ByName/{AccessToken}/{Name}:
    get:
      operationId: RatingByName_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RatingItem'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/RatingItem'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/RatingItem'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/RatingItem'
                type: array
          description: Ratings
      tags:
      - Ratings  (Movie & Television Show Ratings)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Status/{AccessToken}/{Query}:
    get:
      operationId: ShowStatus_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: "Query can be IMDB, TVDB, or Show name"
        in: path
        name: Query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/_ShowStatus'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/_ShowStatus'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/_ShowStatus'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/_ShowStatus'
                type: array
          description: List of statuses
      summary: "Returns status of queried show (query can be IMDB, TVDB, or showname)"
      tags:
      - "Television (Shows, Episodes, & Statuses)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /TV/ByID/{accesstoken}/{imdbID}:
    get:
      operationId: TVShowID_Get
      parameters:
      - in: path
        name: accesstoken
        required: true
        schema:
          type: string
      - description: imdbID of show you want info on
        in: query
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: imdbID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TVInformation'
            text/json:
              schema:
                $ref: '#/components/schemas/TVInformation'
            application/xml:
              schema:
                $ref: '#/components/schemas/TVInformation'
            text/xml:
              schema:
                $ref: '#/components/schemas/TVInformation'
          description: Television show information
      summary: Returns TVShow information based on IMDBid
      tags:
      - "Television (Shows, Episodes, & Statuses)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /TV/ByName/{AccessToken}/{Query}:
    get:
      operationId: TVShowByName_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Query
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TVInformation'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/TVInformation'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TVInformation'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TVInformation'
                type: array
          description: List of television show information
      summary: "Returns results based on query, result set limited to 5 records"
      tags:
      - "Television (Shows, Episodes, & Statuses)"
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Trailers/ByID/{AccessToken}/{imdbID}:
    get:
      operationId: TrailersbyID_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: imdbID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Trailer'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Trailer'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Trailer'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Trailer'
                type: array
          description: List of trailers
      summary: Get Trailers for passed imdbID
      tags:
      - Trailers (Movie & Television Show Trailers)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Trailers/CountByID/{AccessToken}/{imdbID}:
    get:
      operationId: TrailerCountByID_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: imdbID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailerCount'
            text/json:
              schema:
                $ref: '#/components/schemas/TrailerCount'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrailerCount'
            text/xml:
              schema:
                $ref: '#/components/schemas/TrailerCount'
          description: Count of trailers available for imdbID
      summary: Get trailer count for passed ID
      tags:
      - Trailers (Movie & Television Show Trailers)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Trailers/CountByName/{AccessToken}/{Name}:
    get:
      operationId: TrailerCountByName_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - in: path
        name: Name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrailerCount'
            text/json:
              schema:
                $ref: '#/components/schemas/TrailerCount'
            application/xml:
              schema:
                $ref: '#/components/schemas/TrailerCount'
            text/xml:
              schema:
                $ref: '#/components/schemas/TrailerCount'
          description: Count of trailers available for passed name
      summary: Get trailer count for passed name (Movie title or TVShow name)
      tags:
      - Trailers (Movie & Television Show Trailers)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
  /Trailers/Search/{AccessToken}/{Phrase}:
    get:
      operationId: TrailerSearch_Get
      parameters:
      - in: path
        name: AccessToken
        required: true
        schema:
          type: string
      - description: Trailer you like to search for
        in: path
        name: Phrase
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Trailer'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Trailer'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Trailer'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Trailer'
                type: array
          description: List of trailers
      summary: Gets trailers by search phrase (limited to 10 records)
      tags:
      - Trailers (Movie & Television Show Trailers)
      x-accepts:
      - application/json
      - application/xml
      - text/json
      - text/xml
components:
  schemas:
    Actor:
      example:
        BirthYear: BirthYear
        PopularityIndex: PopularityIndex
        DeathYear: DeathYear
        ProfileImage: ProfileImage
        Bio: Bio
        Gender: Gender
        Name: Name
      properties:
        Bio:
          type: string
        BirthYear:
          type: string
        DeathYear:
          type: string
        Gender:
          type: string
        Name:
          type: string
        PopularityIndex:
          type: string
        ProfileImage:
          type: string
      type: object
    ActorPost:
      example:
        BirthYear: BirthYear
        PopularityIndex: PopularityIndex
        AccessToken: AccessToken
        DeathYear: DeathYear
        ProfileImage: ProfileImage
        Bio: Bio
        Gender: Gender
        Name: Name
      properties:
        AccessToken:
          type: string
        Bio:
          type: string
        BirthYear:
          type: string
        DeathYear:
          type: string
        Gender:
          type: string
        Name:
          type: string
        PopularityIndex:
          type: string
        ProfileImage:
          type: string
      type: object
    AlbumArt:
      example:
        Art: Art
        AlbumID: AlbumID
        Albumname: Albumname
      properties:
        AlbumID:
          type: string
        Albumname:
          type: string
        Art:
          type: string
      type: object
    AlbumTracks:
      example:
        ArtistID: ArtistID
        Length: Length
        TrackNo: TrackNo
        AlbumID: AlbumID
        TrackName: TrackName
      properties:
        AlbumID:
          type: string
        ArtistID:
          type: string
        Length:
          type: string
        TrackName:
          type: string
        TrackNo:
          type: string
      type: object
    Aliases:
      example:
        ExternalIDs:
        - ID: ID
          Name: Name
        - ID: ID
          Name: Name
        Aka: Aka
        OriginalName: OriginalName
        Name: Name
      properties:
        Aka:
          type: string
        ExternalIDs:
          items:
            $ref: '#/components/schemas/ExternalIDs'
          type: array
        Name:
          type: string
        OriginalName:
          type: string
      type: object
    ArtistArt:
      example:
        ArtistID: ArtistID
        Banner: Banner
        Logo: Logo
        Name: Name
      properties:
        ArtistID:
          type: string
        Banner:
          type: string
        Logo:
          type: string
        Name:
          type: string
      type: object
    BandAlbums:
      example:
        ArtistID: ArtistID
        Releaseyear: Releaseyear
        AlbumID: AlbumID
        Label: Label
        Bibliography: Bibliography
        AlbumArt: AlbumArt
        Name: Name
      properties:
        AlbumArt:
          type: string
        AlbumID:
          type: string
        ArtistID:
          type: string
        Bibliography:
          type: string
        Label:
          type: string
        Name:
          type: string
        Releaseyear:
          type: string
      type: object
    BandInfo:
      example:
        ArtistID: ArtistID
        FormationYear: FormationYear
        SocialMedia: SocialMedia
        MusicBrainzID: MusicBrainzID
        Banner: Banner
        Biography: Biography
        DisbandedYear: DisbandedYear
        WebSite: WebSite
        Genre: Genre
        Members: Members
        Logo: Logo
        Name: Name
      properties:
        ArtistID:
          type: string
        Banner:
          type: string
        Biography:
          type: string
        DisbandedYear:
          type: string
        FormationYear:
          type: string
        Genre:
          type: string
        Logo:
          type: string
        Members:
          type: string
        MusicBrainzID:
          type: string
        Name:
          type: string
        SocialMedia:
          type: string
        WebSite:
          type: string
      type: object
    BandInfoExtended:
      example:
        ArtistID: ArtistID
        MusicBrainzID: MusicBrainzID
        Banner: Banner
        Albums:
        - ArtistID: ArtistID
          Releaseyear: Releaseyear
          AlbumID: AlbumID
          Label: Label
          Bibliography: Bibliography
          AlbumArt: AlbumArt
          Name: Name
        - ArtistID: ArtistID
          Releaseyear: Releaseyear
          AlbumID: AlbumID
          Label: Label
          Bibliography: Bibliography
          AlbumArt: AlbumArt
          Name: Name
        Logo: Logo
        Name: Name
        Videos:
        - ArtistID: ArtistID
          Decription: Decription
          AlbumID: AlbumID
          Video: Video
        - ArtistID: ArtistID
          Decription: Decription
          AlbumID: AlbumID
          Video: Video
        FormationYear: FormationYear
        SocialMedia: SocialMedia
        Biography: Biography
        DisbandedYear: DisbandedYear
        WebSite: WebSite
        Genre: Genre
        Members: Members
      properties:
        Albums:
          items:
            $ref: '#/components/schemas/BandAlbums'
          type: array
        ArtistID:
          type: string
        Banner:
          type: string
        Biography:
          type: string
        DisbandedYear:
          type: string
        FormationYear:
          type: string
        Genre:
          type: string
        Logo:
          type: string
        Members:
          type: string
        MusicBrainzID:
          type: string
        Name:
          type: string
        SocialMedia:
          type: string
        Videos:
          items:
            $ref: '#/components/schemas/MusicVideo'
          type: array
        WebSite:
          type: string
      type: object
    CDCoverArt:
      example:
        CoverImage: CoverImage
        CoverThumbMedium: CoverThumbMedium
        CoverType: CoverType
        MusicBrainzID: MusicBrainzID
        CoverThumbSmall: CoverThumbSmall
      properties:
        CoverImage:
          type: string
        CoverThumbMedium:
          type: string
        CoverThumbSmall:
          type: string
        CoverType:
          type: string
        MusicBrainzID:
          type: string
      type: object
    Country:
      example:
        Name: Name
      properties:
        Name:
          type: string
      type: object
    Crew:
      example:
        Type: Type
        Image: Image
        Externals:
        - ID: ID
          Name: Name
        - ID: ID
          Name: Name
        ShowName: ShowName
        Name: Name
      properties:
        Externals:
          items:
            $ref: '#/components/schemas/ExternalIDs'
          type: array
        Image:
          type: string
        Name:
          type: string
        ShowName:
          type: string
        Type:
          type: string
      type: object
    Episode:
      example:
        EpisodeNo: EpisodeNo
        Airtime: Airtime
        Title: Title
        Image: Image
        Season: Season
        Externals:
        - ID: ID
          Name: Name
        - ID: ID
          Name: Name
        Synopsis: Synopsis
        Airdate: Airdate
      properties:
        Airdate:
          type: string
        Airtime:
          type: string
        EpisodeNo:
          type: string
        Externals:
          items:
            $ref: '#/components/schemas/ExternalIDs'
          type: array
        Image:
          type: string
        Season:
          type: string
        Synopsis:
          type: string
        Title:
          type: string
      type: object
    ExternalIDs:
      example:
        ID: ID
        Name: Name
      properties:
        ID:
          type: string
        Name:
          type: string
      type: object
    LastAvailableSeason:
      example:
        Season: Season
      properties:
        Season:
          type: string
      type: object
    Lyric:
      example:
        Artist: Artist
        Song: Song
        AlbumID: AlbumID
        Lyrics: Lyrics
      properties:
        AlbumID:
          type: string
        Artist:
          type: string
        Lyrics:
          type: string
        Song:
          type: string
      type: object
    Magnets:
      example:
        Type: Type
        Seeds: Seeds
        Size: Size
        Peers: Peers
        Title: Title
        Hash: Hash
        Image: Image
        Externals:
        - ID: ID
          Name: Name
        - ID: ID
          Name: Name
        FirstSeenDate: FirstSeenDate
        Name: Name
      properties:
        Externals:
          items:
            $ref: '#/components/schemas/ExternalIDs'
          type: array
        FirstSeenDate:
          description: Date this hash was first detected
          type: string
        Hash:
          description: The actual hash you need to construct your magnet
          type: string
        Image:
          type: string
        Name:
          type: string
        Peers:
          description: Number of Peers available at FirstSeenDate
          type: string
        Seeds:
          description: Number of Seeds available at FirstSeenDate
          type: string
        Size:
          type: string
        Title:
          type: string
        Type:
          type: string
      type: object
    MovieInformation:
      example:
        Runtime: Runtime
        ReleaseYear: ReleaseYear
        Title: Title
        ID: ID
        ImdbID: ImdbID
        Synopsis: Synopsis
      properties:
        ID:
          type: string
        ImdbID:
          type: string
        ReleaseYear:
          type: string
        Runtime:
          type: string
        Synopsis:
          type: string
        Title:
          type: string
      type: object
    MusicVideo:
      example:
        ArtistID: ArtistID
        Decription: Decription
        AlbumID: AlbumID
        Video: Video
      properties:
        AlbumID:
          type: string
        ArtistID:
          type: string
        Decription:
          type: string
        Video:
          type: string
      type: object
    Networks:
      example:
        Network: Network
        Country: Country
      properties:
        Country:
          type: string
        Network:
          type: string
      type: object
    PostResult:
      example:
        Status: Status
      properties:
        Status:
          type: string
      type: object
    RatingItem:
      example:
        IMDB: IMDB
        RottenTomatoes: RottenTomatoes
        EpisoDate: EpisoDate
        MetaCritics: MetaCritics
        TVMaze: TVMaze
        imdbID: imdbID
        TVDB: TVDB
        RottenTomatoesAudienceScore: RottenTomatoesAudienceScore
        Trakt: Trakt
        Name: Name
      properties:
        EpisoDate:
          type: string
        IMDB:
          type: string
        MetaCritics:
          type: string
        Name:
          type: string
        RottenTomatoes:
          type: string
        RottenTomatoesAudienceScore:
          type: string
        TVDB:
          type: string
        TVMaze:
          type: string
        Trakt:
          type: string
        imdbID:
          type: string
      type: object
    ShowSeasons:
      example:
        Year: Year
      properties:
        Year:
          type: string
      type: object
    TVInformation:
      example:
        ReleaseYear: ReleaseYear
        EpisodeCount: EpisodeCount
        ShowImage: ShowImage
        ShowStatus: ShowStatus
        Title: Title
        EpisodeRuntime: EpisodeRuntime
        ID: ID
        Seasons: Seasons
        Externals:
        - ID: ID
          Name: Name
        - ID: ID
          Name: Name
        Synopsis: Synopsis
      properties:
        EpisodeCount:
          type: string
        EpisodeRuntime:
          type: string
        Externals:
          items:
            $ref: '#/components/schemas/ExternalIDs'
          type: array
        ID:
          type: string
        ReleaseYear:
          type: string
        Seasons:
          type: string
        ShowImage:
          type: string
        ShowStatus:
          type: string
        Synopsis:
          type: string
        Title:
          type: string
      type: object
    TVInformationPost:
      example:
        AccessToken: AccessToken
        EpisodeCount: EpisodeCount
        ShowImage: ShowImage
        ShowStatus: ShowStatus
        Title: Title
        EpisodeRuntime: EpisodeRuntime
        Genres: Genres
        Seasons: Seasons
        ImdbID: ImdbID
        PremierYear: PremierYear
        Synopsis: Synopsis
      properties:
        AccessToken:
          type: string
        EpisodeCount:
          type: string
        EpisodeRuntime:
          type: string
        Genres:
          type: string
        ImdbID:
          type: string
        PremierYear:
          type: string
        Seasons:
          type: string
        ShowImage:
          type: string
        ShowStatus:
          type: string
        Synopsis:
          type: string
        Title:
          type: string
      type: object
    TVShowActor:
      example:
        Role: Role
        Image: Image
        Externals:
        - ID: ID
          Name: Name
        - ID: ID
          Name: Name
        ShowName: ShowName
        Name: Name
      properties:
        Externals:
          items:
            $ref: '#/components/schemas/ExternalIDs'
          type: array
        Image:
          type: string
        Name:
          type: string
        Role:
          type: string
        ShowName:
          type: string
      type: object
    TVShowSeasons:
      example:
        Episodes: Episodes
        Seasons: Seasons
        Showname: Showname
        Externals:
        - ID: ID
          Name: Name
        - ID: ID
          Name: Name
      properties:
        Episodes:
          type: string
        Externals:
          items:
            $ref: '#/components/schemas/ExternalIDs'
          type: array
        Seasons:
          type: string
        Showname:
          type: string
      type: object
    Trailer:
      example:
        Site: Site
        TrailerName: TrailerName
        YouTubeEmbeddedCode: YouTubeEmbeddedCode
        Episode: Episode
        TrailerSize: TrailerSize
        YouTubeURL: YouTubeURL
        MediaType: MediaType
        Season: Season
        TrailerType: TrailerType
        Key: Key
      properties:
        Episode:
          type: string
        Key:
          description: "Key for trailer, usually end part of uri for youtube links"
          type: string
        MediaType:
          description: "Returns Media Type, either C (Channel) T (Television) or M\
            \ (Movie)"
          type: string
        Season:
          type: string
        Site:
          type: string
        TrailerName:
          type: string
        TrailerSize:
          type: string
        TrailerType:
          description: "Returns Trailer type (trailer, teaser, channel, episode,credits,\
            \ clip etc)"
          type: string
        YouTubeEmbeddedCode:
          type: string
        YouTubeURL:
          type: string
      type: object
    TrailerCount:
      example:
        Count: 0
      properties:
        Count:
          format: int32
          type: integer
      type: object
    _Awards:
      example:
        Nominee: Nominee
        Type: Type
        Category: Category
        Year: Year
        Winner: Winner
      properties:
        Category:
          type: string
        Nominee:
          type: string
        Type:
          type: string
        Winner:
          type: string
        Year:
          type: string
      type: object
    _ShowStatus:
      example:
        tvdbID: tvdbID
        YearsOn: YearsOn
        imdbID: imdbID
        Title: Title
        Enddate: Enddate
        ID: ID
        status: status
      properties:
        Enddate:
          type: string
        ID:
          type: string
        Title:
          type: string
        YearsOn:
          type: string
        imdbID:
          type: string
        status:
          type: string
        tvdbID:
          type: string
      type: object
    imdbID:
      example:
        ShinobiID: ShinobiID
        Type: Type
        Title: Title
        ID: ID
      properties:
        ID:
          type: string
        ShinobiID:
          type: string
        Title:
          type: string
        Type:
          type: string
      type: object
    imdbImages:
      example:
        Backdrops:
        - Backdrops
        - Backdrops
        Posters:
        - Posters
        - Posters
        Type: Type
        imdbID: imdbID
      properties:
        Backdrops:
          items:
            type: string
          type: array
        Posters:
          items:
            type: string
          type: array
        Type:
          type: string
        imdbID:
          type: string
      type: object
    schedule:
      example:
        PremiereDate: PremiereDate
        AirTime: AirTime
        Title: Title
        Image: Image
        ShowName: ShowName
        DaysOn: DaysOn
        AirDate: AirDate
        Episode: Episode
        Runtime: Runtime
        Network: Network
        Country: Country
        Summary: Summary
        ID: ID
        Season: Season
      properties:
        AirDate:
          type: string
        AirTime:
          type: string
        Country:
          type: string
        DaysOn:
          type: string
        Episode:
          type: string
        ID:
          type: string
        Image:
          type: string
        Network:
          type: string
        PremiereDate:
          type: string
        Runtime:
          type: string
        Season:
          type: string
        ShowName:
          type: string
        Summary:
          type: string
        Title:
          type: string
      type: object
x-original-swagger-version: "2.0"

