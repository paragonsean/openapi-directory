/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBandInfoExtended.h
 *
 * 
 */

#ifndef OAIBandInfoExtended_H
#define OAIBandInfoExtended_H

#include <QJsonObject>

#include "OAIBandAlbums.h"
#include "OAIMusicVideo.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBandAlbums;
class OAIMusicVideo;

class OAIBandInfoExtended : public OAIObject {
public:
    OAIBandInfoExtended();
    OAIBandInfoExtended(QString json);
    ~OAIBandInfoExtended() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBandAlbums> getAlbums() const;
    void setAlbums(const QList<OAIBandAlbums> &albums);
    bool is_albums_Set() const;
    bool is_albums_Valid() const;

    QString getArtistId() const;
    void setArtistId(const QString &artist_id);
    bool is_artist_id_Set() const;
    bool is_artist_id_Valid() const;

    QString getBanner() const;
    void setBanner(const QString &banner);
    bool is_banner_Set() const;
    bool is_banner_Valid() const;

    QString getBiography() const;
    void setBiography(const QString &biography);
    bool is_biography_Set() const;
    bool is_biography_Valid() const;

    QString getDisbandedYear() const;
    void setDisbandedYear(const QString &disbanded_year);
    bool is_disbanded_year_Set() const;
    bool is_disbanded_year_Valid() const;

    QString getFormationYear() const;
    void setFormationYear(const QString &formation_year);
    bool is_formation_year_Set() const;
    bool is_formation_year_Valid() const;

    QString getGenre() const;
    void setGenre(const QString &genre);
    bool is_genre_Set() const;
    bool is_genre_Valid() const;

    QString getLogo() const;
    void setLogo(const QString &logo);
    bool is_logo_Set() const;
    bool is_logo_Valid() const;

    QString getMembers() const;
    void setMembers(const QString &members);
    bool is_members_Set() const;
    bool is_members_Valid() const;

    QString getMusicBrainzId() const;
    void setMusicBrainzId(const QString &music_brainz_id);
    bool is_music_brainz_id_Set() const;
    bool is_music_brainz_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSocialMedia() const;
    void setSocialMedia(const QString &social_media);
    bool is_social_media_Set() const;
    bool is_social_media_Valid() const;

    QList<OAIMusicVideo> getVideos() const;
    void setVideos(const QList<OAIMusicVideo> &videos);
    bool is_videos_Set() const;
    bool is_videos_Valid() const;

    QString getWebSite() const;
    void setWebSite(const QString &web_site);
    bool is_web_site_Set() const;
    bool is_web_site_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBandAlbums> m_albums;
    bool m_albums_isSet;
    bool m_albums_isValid;

    QString m_artist_id;
    bool m_artist_id_isSet;
    bool m_artist_id_isValid;

    QString m_banner;
    bool m_banner_isSet;
    bool m_banner_isValid;

    QString m_biography;
    bool m_biography_isSet;
    bool m_biography_isValid;

    QString m_disbanded_year;
    bool m_disbanded_year_isSet;
    bool m_disbanded_year_isValid;

    QString m_formation_year;
    bool m_formation_year_isSet;
    bool m_formation_year_isValid;

    QString m_genre;
    bool m_genre_isSet;
    bool m_genre_isValid;

    QString m_logo;
    bool m_logo_isSet;
    bool m_logo_isValid;

    QString m_members;
    bool m_members_isSet;
    bool m_members_isValid;

    QString m_music_brainz_id;
    bool m_music_brainz_id_isSet;
    bool m_music_brainz_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_social_media;
    bool m_social_media_isSet;
    bool m_social_media_isValid;

    QList<OAIMusicVideo> m_videos;
    bool m_videos_isSet;
    bool m_videos_isValid;

    QString m_web_site;
    bool m_web_site_isSet;
    bool m_web_site_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBandInfoExtended)

#endif // OAIBandInfoExtended_H
