/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlbumArt.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlbumArt::OAIAlbumArt(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlbumArt::OAIAlbumArt() {
    this->initializeModel();
}

OAIAlbumArt::~OAIAlbumArt() {}

void OAIAlbumArt::initializeModel() {

    m_album_id_isSet = false;
    m_album_id_isValid = false;

    m_albumname_isSet = false;
    m_albumname_isValid = false;

    m_art_isSet = false;
    m_art_isValid = false;
}

void OAIAlbumArt::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlbumArt::fromJsonObject(QJsonObject json) {

    m_album_id_isValid = ::OpenAPI::fromJsonValue(m_album_id, json[QString("AlbumID")]);
    m_album_id_isSet = !json[QString("AlbumID")].isNull() && m_album_id_isValid;

    m_albumname_isValid = ::OpenAPI::fromJsonValue(m_albumname, json[QString("Albumname")]);
    m_albumname_isSet = !json[QString("Albumname")].isNull() && m_albumname_isValid;

    m_art_isValid = ::OpenAPI::fromJsonValue(m_art, json[QString("Art")]);
    m_art_isSet = !json[QString("Art")].isNull() && m_art_isValid;
}

QString OAIAlbumArt::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlbumArt::asJsonObject() const {
    QJsonObject obj;
    if (m_album_id_isSet) {
        obj.insert(QString("AlbumID"), ::OpenAPI::toJsonValue(m_album_id));
    }
    if (m_albumname_isSet) {
        obj.insert(QString("Albumname"), ::OpenAPI::toJsonValue(m_albumname));
    }
    if (m_art_isSet) {
        obj.insert(QString("Art"), ::OpenAPI::toJsonValue(m_art));
    }
    return obj;
}

QString OAIAlbumArt::getAlbumId() const {
    return m_album_id;
}
void OAIAlbumArt::setAlbumId(const QString &album_id) {
    m_album_id = album_id;
    m_album_id_isSet = true;
}

bool OAIAlbumArt::is_album_id_Set() const{
    return m_album_id_isSet;
}

bool OAIAlbumArt::is_album_id_Valid() const{
    return m_album_id_isValid;
}

QString OAIAlbumArt::getAlbumname() const {
    return m_albumname;
}
void OAIAlbumArt::setAlbumname(const QString &albumname) {
    m_albumname = albumname;
    m_albumname_isSet = true;
}

bool OAIAlbumArt::is_albumname_Set() const{
    return m_albumname_isSet;
}

bool OAIAlbumArt::is_albumname_Valid() const{
    return m_albumname_isValid;
}

QString OAIAlbumArt::getArt() const {
    return m_art;
}
void OAIAlbumArt::setArt(const QString &art) {
    m_art = art;
    m_art_isSet = true;
}

bool OAIAlbumArt::is_art_Set() const{
    return m_art_isSet;
}

bool OAIAlbumArt::is_art_Valid() const{
    return m_art_isValid;
}

bool OAIAlbumArt::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_album_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_albumname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_art_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlbumArt::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
