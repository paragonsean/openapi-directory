/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIActorPost.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIActorPost::OAIActorPost(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIActorPost::OAIActorPost() {
    this->initializeModel();
}

OAIActorPost::~OAIActorPost() {}

void OAIActorPost::initializeModel() {

    m_access_token_isSet = false;
    m_access_token_isValid = false;

    m_bio_isSet = false;
    m_bio_isValid = false;

    m_birth_year_isSet = false;
    m_birth_year_isValid = false;

    m_death_year_isSet = false;
    m_death_year_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_popularity_index_isSet = false;
    m_popularity_index_isValid = false;

    m_profile_image_isSet = false;
    m_profile_image_isValid = false;
}

void OAIActorPost::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIActorPost::fromJsonObject(QJsonObject json) {

    m_access_token_isValid = ::OpenAPI::fromJsonValue(m_access_token, json[QString("AccessToken")]);
    m_access_token_isSet = !json[QString("AccessToken")].isNull() && m_access_token_isValid;

    m_bio_isValid = ::OpenAPI::fromJsonValue(m_bio, json[QString("Bio")]);
    m_bio_isSet = !json[QString("Bio")].isNull() && m_bio_isValid;

    m_birth_year_isValid = ::OpenAPI::fromJsonValue(m_birth_year, json[QString("BirthYear")]);
    m_birth_year_isSet = !json[QString("BirthYear")].isNull() && m_birth_year_isValid;

    m_death_year_isValid = ::OpenAPI::fromJsonValue(m_death_year, json[QString("DeathYear")]);
    m_death_year_isSet = !json[QString("DeathYear")].isNull() && m_death_year_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("Gender")]);
    m_gender_isSet = !json[QString("Gender")].isNull() && m_gender_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_popularity_index_isValid = ::OpenAPI::fromJsonValue(m_popularity_index, json[QString("PopularityIndex")]);
    m_popularity_index_isSet = !json[QString("PopularityIndex")].isNull() && m_popularity_index_isValid;

    m_profile_image_isValid = ::OpenAPI::fromJsonValue(m_profile_image, json[QString("ProfileImage")]);
    m_profile_image_isSet = !json[QString("ProfileImage")].isNull() && m_profile_image_isValid;
}

QString OAIActorPost::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIActorPost::asJsonObject() const {
    QJsonObject obj;
    if (m_access_token_isSet) {
        obj.insert(QString("AccessToken"), ::OpenAPI::toJsonValue(m_access_token));
    }
    if (m_bio_isSet) {
        obj.insert(QString("Bio"), ::OpenAPI::toJsonValue(m_bio));
    }
    if (m_birth_year_isSet) {
        obj.insert(QString("BirthYear"), ::OpenAPI::toJsonValue(m_birth_year));
    }
    if (m_death_year_isSet) {
        obj.insert(QString("DeathYear"), ::OpenAPI::toJsonValue(m_death_year));
    }
    if (m_gender_isSet) {
        obj.insert(QString("Gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_popularity_index_isSet) {
        obj.insert(QString("PopularityIndex"), ::OpenAPI::toJsonValue(m_popularity_index));
    }
    if (m_profile_image_isSet) {
        obj.insert(QString("ProfileImage"), ::OpenAPI::toJsonValue(m_profile_image));
    }
    return obj;
}

QString OAIActorPost::getAccessToken() const {
    return m_access_token;
}
void OAIActorPost::setAccessToken(const QString &access_token) {
    m_access_token = access_token;
    m_access_token_isSet = true;
}

bool OAIActorPost::is_access_token_Set() const{
    return m_access_token_isSet;
}

bool OAIActorPost::is_access_token_Valid() const{
    return m_access_token_isValid;
}

QString OAIActorPost::getBio() const {
    return m_bio;
}
void OAIActorPost::setBio(const QString &bio) {
    m_bio = bio;
    m_bio_isSet = true;
}

bool OAIActorPost::is_bio_Set() const{
    return m_bio_isSet;
}

bool OAIActorPost::is_bio_Valid() const{
    return m_bio_isValid;
}

QString OAIActorPost::getBirthYear() const {
    return m_birth_year;
}
void OAIActorPost::setBirthYear(const QString &birth_year) {
    m_birth_year = birth_year;
    m_birth_year_isSet = true;
}

bool OAIActorPost::is_birth_year_Set() const{
    return m_birth_year_isSet;
}

bool OAIActorPost::is_birth_year_Valid() const{
    return m_birth_year_isValid;
}

QString OAIActorPost::getDeathYear() const {
    return m_death_year;
}
void OAIActorPost::setDeathYear(const QString &death_year) {
    m_death_year = death_year;
    m_death_year_isSet = true;
}

bool OAIActorPost::is_death_year_Set() const{
    return m_death_year_isSet;
}

bool OAIActorPost::is_death_year_Valid() const{
    return m_death_year_isValid;
}

QString OAIActorPost::getGender() const {
    return m_gender;
}
void OAIActorPost::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAIActorPost::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAIActorPost::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAIActorPost::getName() const {
    return m_name;
}
void OAIActorPost::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIActorPost::is_name_Set() const{
    return m_name_isSet;
}

bool OAIActorPost::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIActorPost::getPopularityIndex() const {
    return m_popularity_index;
}
void OAIActorPost::setPopularityIndex(const QString &popularity_index) {
    m_popularity_index = popularity_index;
    m_popularity_index_isSet = true;
}

bool OAIActorPost::is_popularity_index_Set() const{
    return m_popularity_index_isSet;
}

bool OAIActorPost::is_popularity_index_Valid() const{
    return m_popularity_index_isValid;
}

QString OAIActorPost::getProfileImage() const {
    return m_profile_image;
}
void OAIActorPost::setProfileImage(const QString &profile_image) {
    m_profile_image = profile_image;
    m_profile_image_isSet = true;
}

bool OAIActorPost::is_profile_image_Set() const{
    return m_profile_image_isSet;
}

bool OAIActorPost::is_profile_image_Valid() const{
    return m_profile_image_isValid;
}

bool OAIActorPost::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_birth_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_death_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_popularity_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_image_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIActorPost::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
