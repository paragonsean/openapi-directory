/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISchedule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISchedule::OAISchedule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISchedule::OAISchedule() {
    this->initializeModel();
}

OAISchedule::~OAISchedule() {}

void OAISchedule::initializeModel() {

    m_air_date_isSet = false;
    m_air_date_isValid = false;

    m_air_time_isSet = false;
    m_air_time_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_days_on_isSet = false;
    m_days_on_isValid = false;

    m_episode_isSet = false;
    m_episode_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_image_isSet = false;
    m_image_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_premiere_date_isSet = false;
    m_premiere_date_isValid = false;

    m_runtime_isSet = false;
    m_runtime_isValid = false;

    m_season_isSet = false;
    m_season_isValid = false;

    m_show_name_isSet = false;
    m_show_name_isValid = false;

    m_summary_isSet = false;
    m_summary_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAISchedule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISchedule::fromJsonObject(QJsonObject json) {

    m_air_date_isValid = ::OpenAPI::fromJsonValue(m_air_date, json[QString("AirDate")]);
    m_air_date_isSet = !json[QString("AirDate")].isNull() && m_air_date_isValid;

    m_air_time_isValid = ::OpenAPI::fromJsonValue(m_air_time, json[QString("AirTime")]);
    m_air_time_isSet = !json[QString("AirTime")].isNull() && m_air_time_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("Country")]);
    m_country_isSet = !json[QString("Country")].isNull() && m_country_isValid;

    m_days_on_isValid = ::OpenAPI::fromJsonValue(m_days_on, json[QString("DaysOn")]);
    m_days_on_isSet = !json[QString("DaysOn")].isNull() && m_days_on_isValid;

    m_episode_isValid = ::OpenAPI::fromJsonValue(m_episode, json[QString("Episode")]);
    m_episode_isSet = !json[QString("Episode")].isNull() && m_episode_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("ID")]);
    m_id_isSet = !json[QString("ID")].isNull() && m_id_isValid;

    m_image_isValid = ::OpenAPI::fromJsonValue(m_image, json[QString("Image")]);
    m_image_isSet = !json[QString("Image")].isNull() && m_image_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("Network")]);
    m_network_isSet = !json[QString("Network")].isNull() && m_network_isValid;

    m_premiere_date_isValid = ::OpenAPI::fromJsonValue(m_premiere_date, json[QString("PremiereDate")]);
    m_premiere_date_isSet = !json[QString("PremiereDate")].isNull() && m_premiere_date_isValid;

    m_runtime_isValid = ::OpenAPI::fromJsonValue(m_runtime, json[QString("Runtime")]);
    m_runtime_isSet = !json[QString("Runtime")].isNull() && m_runtime_isValid;

    m_season_isValid = ::OpenAPI::fromJsonValue(m_season, json[QString("Season")]);
    m_season_isSet = !json[QString("Season")].isNull() && m_season_isValid;

    m_show_name_isValid = ::OpenAPI::fromJsonValue(m_show_name, json[QString("ShowName")]);
    m_show_name_isSet = !json[QString("ShowName")].isNull() && m_show_name_isValid;

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("Summary")]);
    m_summary_isSet = !json[QString("Summary")].isNull() && m_summary_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;
}

QString OAISchedule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISchedule::asJsonObject() const {
    QJsonObject obj;
    if (m_air_date_isSet) {
        obj.insert(QString("AirDate"), ::OpenAPI::toJsonValue(m_air_date));
    }
    if (m_air_time_isSet) {
        obj.insert(QString("AirTime"), ::OpenAPI::toJsonValue(m_air_time));
    }
    if (m_country_isSet) {
        obj.insert(QString("Country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_days_on_isSet) {
        obj.insert(QString("DaysOn"), ::OpenAPI::toJsonValue(m_days_on));
    }
    if (m_episode_isSet) {
        obj.insert(QString("Episode"), ::OpenAPI::toJsonValue(m_episode));
    }
    if (m_id_isSet) {
        obj.insert(QString("ID"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_image_isSet) {
        obj.insert(QString("Image"), ::OpenAPI::toJsonValue(m_image));
    }
    if (m_network_isSet) {
        obj.insert(QString("Network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_premiere_date_isSet) {
        obj.insert(QString("PremiereDate"), ::OpenAPI::toJsonValue(m_premiere_date));
    }
    if (m_runtime_isSet) {
        obj.insert(QString("Runtime"), ::OpenAPI::toJsonValue(m_runtime));
    }
    if (m_season_isSet) {
        obj.insert(QString("Season"), ::OpenAPI::toJsonValue(m_season));
    }
    if (m_show_name_isSet) {
        obj.insert(QString("ShowName"), ::OpenAPI::toJsonValue(m_show_name));
    }
    if (m_summary_isSet) {
        obj.insert(QString("Summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAISchedule::getAirDate() const {
    return m_air_date;
}
void OAISchedule::setAirDate(const QString &air_date) {
    m_air_date = air_date;
    m_air_date_isSet = true;
}

bool OAISchedule::is_air_date_Set() const{
    return m_air_date_isSet;
}

bool OAISchedule::is_air_date_Valid() const{
    return m_air_date_isValid;
}

QString OAISchedule::getAirTime() const {
    return m_air_time;
}
void OAISchedule::setAirTime(const QString &air_time) {
    m_air_time = air_time;
    m_air_time_isSet = true;
}

bool OAISchedule::is_air_time_Set() const{
    return m_air_time_isSet;
}

bool OAISchedule::is_air_time_Valid() const{
    return m_air_time_isValid;
}

QString OAISchedule::getCountry() const {
    return m_country;
}
void OAISchedule::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAISchedule::is_country_Set() const{
    return m_country_isSet;
}

bool OAISchedule::is_country_Valid() const{
    return m_country_isValid;
}

QString OAISchedule::getDaysOn() const {
    return m_days_on;
}
void OAISchedule::setDaysOn(const QString &days_on) {
    m_days_on = days_on;
    m_days_on_isSet = true;
}

bool OAISchedule::is_days_on_Set() const{
    return m_days_on_isSet;
}

bool OAISchedule::is_days_on_Valid() const{
    return m_days_on_isValid;
}

QString OAISchedule::getEpisode() const {
    return m_episode;
}
void OAISchedule::setEpisode(const QString &episode) {
    m_episode = episode;
    m_episode_isSet = true;
}

bool OAISchedule::is_episode_Set() const{
    return m_episode_isSet;
}

bool OAISchedule::is_episode_Valid() const{
    return m_episode_isValid;
}

QString OAISchedule::getId() const {
    return m_id;
}
void OAISchedule::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISchedule::is_id_Set() const{
    return m_id_isSet;
}

bool OAISchedule::is_id_Valid() const{
    return m_id_isValid;
}

QString OAISchedule::getImage() const {
    return m_image;
}
void OAISchedule::setImage(const QString &image) {
    m_image = image;
    m_image_isSet = true;
}

bool OAISchedule::is_image_Set() const{
    return m_image_isSet;
}

bool OAISchedule::is_image_Valid() const{
    return m_image_isValid;
}

QString OAISchedule::getNetwork() const {
    return m_network;
}
void OAISchedule::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAISchedule::is_network_Set() const{
    return m_network_isSet;
}

bool OAISchedule::is_network_Valid() const{
    return m_network_isValid;
}

QString OAISchedule::getPremiereDate() const {
    return m_premiere_date;
}
void OAISchedule::setPremiereDate(const QString &premiere_date) {
    m_premiere_date = premiere_date;
    m_premiere_date_isSet = true;
}

bool OAISchedule::is_premiere_date_Set() const{
    return m_premiere_date_isSet;
}

bool OAISchedule::is_premiere_date_Valid() const{
    return m_premiere_date_isValid;
}

QString OAISchedule::getRuntime() const {
    return m_runtime;
}
void OAISchedule::setRuntime(const QString &runtime) {
    m_runtime = runtime;
    m_runtime_isSet = true;
}

bool OAISchedule::is_runtime_Set() const{
    return m_runtime_isSet;
}

bool OAISchedule::is_runtime_Valid() const{
    return m_runtime_isValid;
}

QString OAISchedule::getSeason() const {
    return m_season;
}
void OAISchedule::setSeason(const QString &season) {
    m_season = season;
    m_season_isSet = true;
}

bool OAISchedule::is_season_Set() const{
    return m_season_isSet;
}

bool OAISchedule::is_season_Valid() const{
    return m_season_isValid;
}

QString OAISchedule::getShowName() const {
    return m_show_name;
}
void OAISchedule::setShowName(const QString &show_name) {
    m_show_name = show_name;
    m_show_name_isSet = true;
}

bool OAISchedule::is_show_name_Set() const{
    return m_show_name_isSet;
}

bool OAISchedule::is_show_name_Valid() const{
    return m_show_name_isValid;
}

QString OAISchedule::getSummary() const {
    return m_summary;
}
void OAISchedule::setSummary(const QString &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAISchedule::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAISchedule::is_summary_Valid() const{
    return m_summary_isValid;
}

QString OAISchedule::getTitle() const {
    return m_title;
}
void OAISchedule::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAISchedule::is_title_Set() const{
    return m_title_isSet;
}

bool OAISchedule::is_title_Valid() const{
    return m_title_isValid;
}

bool OAISchedule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_air_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_air_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_days_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_episode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_premiere_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_runtime_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_season_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISchedule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
