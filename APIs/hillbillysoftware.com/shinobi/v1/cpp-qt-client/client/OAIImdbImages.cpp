/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImdbImages.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImdbImages::OAIImdbImages(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImdbImages::OAIImdbImages() {
    this->initializeModel();
}

OAIImdbImages::~OAIImdbImages() {}

void OAIImdbImages::initializeModel() {

    m_backdrops_isSet = false;
    m_backdrops_isValid = false;

    m_posters_isSet = false;
    m_posters_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_imdb_id_isSet = false;
    m_imdb_id_isValid = false;
}

void OAIImdbImages::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIImdbImages::fromJsonObject(QJsonObject json) {

    m_backdrops_isValid = ::OpenAPI::fromJsonValue(m_backdrops, json[QString("Backdrops")]);
    m_backdrops_isSet = !json[QString("Backdrops")].isNull() && m_backdrops_isValid;

    m_posters_isValid = ::OpenAPI::fromJsonValue(m_posters, json[QString("Posters")]);
    m_posters_isSet = !json[QString("Posters")].isNull() && m_posters_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_imdb_id_isValid = ::OpenAPI::fromJsonValue(m_imdb_id, json[QString("imdbID")]);
    m_imdb_id_isSet = !json[QString("imdbID")].isNull() && m_imdb_id_isValid;
}

QString OAIImdbImages::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIImdbImages::asJsonObject() const {
    QJsonObject obj;
    if (m_backdrops.size() > 0) {
        obj.insert(QString("Backdrops"), ::OpenAPI::toJsonValue(m_backdrops));
    }
    if (m_posters.size() > 0) {
        obj.insert(QString("Posters"), ::OpenAPI::toJsonValue(m_posters));
    }
    if (m_type_isSet) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_imdb_id_isSet) {
        obj.insert(QString("imdbID"), ::OpenAPI::toJsonValue(m_imdb_id));
    }
    return obj;
}

QList<QString> OAIImdbImages::getBackdrops() const {
    return m_backdrops;
}
void OAIImdbImages::setBackdrops(const QList<QString> &backdrops) {
    m_backdrops = backdrops;
    m_backdrops_isSet = true;
}

bool OAIImdbImages::is_backdrops_Set() const{
    return m_backdrops_isSet;
}

bool OAIImdbImages::is_backdrops_Valid() const{
    return m_backdrops_isValid;
}

QList<QString> OAIImdbImages::getPosters() const {
    return m_posters;
}
void OAIImdbImages::setPosters(const QList<QString> &posters) {
    m_posters = posters;
    m_posters_isSet = true;
}

bool OAIImdbImages::is_posters_Set() const{
    return m_posters_isSet;
}

bool OAIImdbImages::is_posters_Valid() const{
    return m_posters_isValid;
}

QString OAIImdbImages::getType() const {
    return m_type;
}
void OAIImdbImages::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIImdbImages::is_type_Set() const{
    return m_type_isSet;
}

bool OAIImdbImages::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIImdbImages::getImdbId() const {
    return m_imdb_id;
}
void OAIImdbImages::setImdbId(const QString &imdb_id) {
    m_imdb_id = imdb_id;
    m_imdb_id_isSet = true;
}

bool OAIImdbImages::is_imdb_id_Set() const{
    return m_imdb_id_isSet;
}

bool OAIImdbImages::is_imdb_id_Valid() const{
    return m_imdb_id_isValid;
}

bool OAIImdbImages::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_backdrops.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_posters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_imdb_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIImdbImages::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
