/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITVInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITVInformation::OAITVInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITVInformation::OAITVInformation() {
    this->initializeModel();
}

OAITVInformation::~OAITVInformation() {}

void OAITVInformation::initializeModel() {

    m_episode_count_isSet = false;
    m_episode_count_isValid = false;

    m_episode_runtime_isSet = false;
    m_episode_runtime_isValid = false;

    m_externals_isSet = false;
    m_externals_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_release_year_isSet = false;
    m_release_year_isValid = false;

    m_seasons_isSet = false;
    m_seasons_isValid = false;

    m_show_image_isSet = false;
    m_show_image_isValid = false;

    m_show_status_isSet = false;
    m_show_status_isValid = false;

    m_synopsis_isSet = false;
    m_synopsis_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAITVInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITVInformation::fromJsonObject(QJsonObject json) {

    m_episode_count_isValid = ::OpenAPI::fromJsonValue(m_episode_count, json[QString("EpisodeCount")]);
    m_episode_count_isSet = !json[QString("EpisodeCount")].isNull() && m_episode_count_isValid;

    m_episode_runtime_isValid = ::OpenAPI::fromJsonValue(m_episode_runtime, json[QString("EpisodeRuntime")]);
    m_episode_runtime_isSet = !json[QString("EpisodeRuntime")].isNull() && m_episode_runtime_isValid;

    m_externals_isValid = ::OpenAPI::fromJsonValue(m_externals, json[QString("Externals")]);
    m_externals_isSet = !json[QString("Externals")].isNull() && m_externals_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("ID")]);
    m_id_isSet = !json[QString("ID")].isNull() && m_id_isValid;

    m_release_year_isValid = ::OpenAPI::fromJsonValue(m_release_year, json[QString("ReleaseYear")]);
    m_release_year_isSet = !json[QString("ReleaseYear")].isNull() && m_release_year_isValid;

    m_seasons_isValid = ::OpenAPI::fromJsonValue(m_seasons, json[QString("Seasons")]);
    m_seasons_isSet = !json[QString("Seasons")].isNull() && m_seasons_isValid;

    m_show_image_isValid = ::OpenAPI::fromJsonValue(m_show_image, json[QString("ShowImage")]);
    m_show_image_isSet = !json[QString("ShowImage")].isNull() && m_show_image_isValid;

    m_show_status_isValid = ::OpenAPI::fromJsonValue(m_show_status, json[QString("ShowStatus")]);
    m_show_status_isSet = !json[QString("ShowStatus")].isNull() && m_show_status_isValid;

    m_synopsis_isValid = ::OpenAPI::fromJsonValue(m_synopsis, json[QString("Synopsis")]);
    m_synopsis_isSet = !json[QString("Synopsis")].isNull() && m_synopsis_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;
}

QString OAITVInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITVInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_episode_count_isSet) {
        obj.insert(QString("EpisodeCount"), ::OpenAPI::toJsonValue(m_episode_count));
    }
    if (m_episode_runtime_isSet) {
        obj.insert(QString("EpisodeRuntime"), ::OpenAPI::toJsonValue(m_episode_runtime));
    }
    if (m_externals.size() > 0) {
        obj.insert(QString("Externals"), ::OpenAPI::toJsonValue(m_externals));
    }
    if (m_id_isSet) {
        obj.insert(QString("ID"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_release_year_isSet) {
        obj.insert(QString("ReleaseYear"), ::OpenAPI::toJsonValue(m_release_year));
    }
    if (m_seasons_isSet) {
        obj.insert(QString("Seasons"), ::OpenAPI::toJsonValue(m_seasons));
    }
    if (m_show_image_isSet) {
        obj.insert(QString("ShowImage"), ::OpenAPI::toJsonValue(m_show_image));
    }
    if (m_show_status_isSet) {
        obj.insert(QString("ShowStatus"), ::OpenAPI::toJsonValue(m_show_status));
    }
    if (m_synopsis_isSet) {
        obj.insert(QString("Synopsis"), ::OpenAPI::toJsonValue(m_synopsis));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAITVInformation::getEpisodeCount() const {
    return m_episode_count;
}
void OAITVInformation::setEpisodeCount(const QString &episode_count) {
    m_episode_count = episode_count;
    m_episode_count_isSet = true;
}

bool OAITVInformation::is_episode_count_Set() const{
    return m_episode_count_isSet;
}

bool OAITVInformation::is_episode_count_Valid() const{
    return m_episode_count_isValid;
}

QString OAITVInformation::getEpisodeRuntime() const {
    return m_episode_runtime;
}
void OAITVInformation::setEpisodeRuntime(const QString &episode_runtime) {
    m_episode_runtime = episode_runtime;
    m_episode_runtime_isSet = true;
}

bool OAITVInformation::is_episode_runtime_Set() const{
    return m_episode_runtime_isSet;
}

bool OAITVInformation::is_episode_runtime_Valid() const{
    return m_episode_runtime_isValid;
}

QList<OAIExternalIDs> OAITVInformation::getExternals() const {
    return m_externals;
}
void OAITVInformation::setExternals(const QList<OAIExternalIDs> &externals) {
    m_externals = externals;
    m_externals_isSet = true;
}

bool OAITVInformation::is_externals_Set() const{
    return m_externals_isSet;
}

bool OAITVInformation::is_externals_Valid() const{
    return m_externals_isValid;
}

QString OAITVInformation::getId() const {
    return m_id;
}
void OAITVInformation::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITVInformation::is_id_Set() const{
    return m_id_isSet;
}

bool OAITVInformation::is_id_Valid() const{
    return m_id_isValid;
}

QString OAITVInformation::getReleaseYear() const {
    return m_release_year;
}
void OAITVInformation::setReleaseYear(const QString &release_year) {
    m_release_year = release_year;
    m_release_year_isSet = true;
}

bool OAITVInformation::is_release_year_Set() const{
    return m_release_year_isSet;
}

bool OAITVInformation::is_release_year_Valid() const{
    return m_release_year_isValid;
}

QString OAITVInformation::getSeasons() const {
    return m_seasons;
}
void OAITVInformation::setSeasons(const QString &seasons) {
    m_seasons = seasons;
    m_seasons_isSet = true;
}

bool OAITVInformation::is_seasons_Set() const{
    return m_seasons_isSet;
}

bool OAITVInformation::is_seasons_Valid() const{
    return m_seasons_isValid;
}

QString OAITVInformation::getShowImage() const {
    return m_show_image;
}
void OAITVInformation::setShowImage(const QString &show_image) {
    m_show_image = show_image;
    m_show_image_isSet = true;
}

bool OAITVInformation::is_show_image_Set() const{
    return m_show_image_isSet;
}

bool OAITVInformation::is_show_image_Valid() const{
    return m_show_image_isValid;
}

QString OAITVInformation::getShowStatus() const {
    return m_show_status;
}
void OAITVInformation::setShowStatus(const QString &show_status) {
    m_show_status = show_status;
    m_show_status_isSet = true;
}

bool OAITVInformation::is_show_status_Set() const{
    return m_show_status_isSet;
}

bool OAITVInformation::is_show_status_Valid() const{
    return m_show_status_isValid;
}

QString OAITVInformation::getSynopsis() const {
    return m_synopsis;
}
void OAITVInformation::setSynopsis(const QString &synopsis) {
    m_synopsis = synopsis;
    m_synopsis_isSet = true;
}

bool OAITVInformation::is_synopsis_Set() const{
    return m_synopsis_isSet;
}

bool OAITVInformation::is_synopsis_Valid() const{
    return m_synopsis_isValid;
}

QString OAITVInformation::getTitle() const {
    return m_title;
}
void OAITVInformation::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAITVInformation::is_title_Set() const{
    return m_title_isSet;
}

bool OAITVInformation::is_title_Valid() const{
    return m_title_isValid;
}

bool OAITVInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_episode_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_episode_runtime_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_externals.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_seasons_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_synopsis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITVInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
