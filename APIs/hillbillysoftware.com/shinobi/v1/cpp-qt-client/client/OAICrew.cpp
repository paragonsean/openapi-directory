/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICrew.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICrew::OAICrew(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICrew::OAICrew() {
    this->initializeModel();
}

OAICrew::~OAICrew() {}

void OAICrew::initializeModel() {

    m_externals_isSet = false;
    m_externals_isValid = false;

    m_image_isSet = false;
    m_image_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_show_name_isSet = false;
    m_show_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICrew::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICrew::fromJsonObject(QJsonObject json) {

    m_externals_isValid = ::OpenAPI::fromJsonValue(m_externals, json[QString("Externals")]);
    m_externals_isSet = !json[QString("Externals")].isNull() && m_externals_isValid;

    m_image_isValid = ::OpenAPI::fromJsonValue(m_image, json[QString("Image")]);
    m_image_isSet = !json[QString("Image")].isNull() && m_image_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_show_name_isValid = ::OpenAPI::fromJsonValue(m_show_name, json[QString("ShowName")]);
    m_show_name_isSet = !json[QString("ShowName")].isNull() && m_show_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;
}

QString OAICrew::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICrew::asJsonObject() const {
    QJsonObject obj;
    if (m_externals.size() > 0) {
        obj.insert(QString("Externals"), ::OpenAPI::toJsonValue(m_externals));
    }
    if (m_image_isSet) {
        obj.insert(QString("Image"), ::OpenAPI::toJsonValue(m_image));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_show_name_isSet) {
        obj.insert(QString("ShowName"), ::OpenAPI::toJsonValue(m_show_name));
    }
    if (m_type_isSet) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QList<OAIExternalIDs> OAICrew::getExternals() const {
    return m_externals;
}
void OAICrew::setExternals(const QList<OAIExternalIDs> &externals) {
    m_externals = externals;
    m_externals_isSet = true;
}

bool OAICrew::is_externals_Set() const{
    return m_externals_isSet;
}

bool OAICrew::is_externals_Valid() const{
    return m_externals_isValid;
}

QString OAICrew::getImage() const {
    return m_image;
}
void OAICrew::setImage(const QString &image) {
    m_image = image;
    m_image_isSet = true;
}

bool OAICrew::is_image_Set() const{
    return m_image_isSet;
}

bool OAICrew::is_image_Valid() const{
    return m_image_isValid;
}

QString OAICrew::getName() const {
    return m_name;
}
void OAICrew::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICrew::is_name_Set() const{
    return m_name_isSet;
}

bool OAICrew::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICrew::getShowName() const {
    return m_show_name;
}
void OAICrew::setShowName(const QString &show_name) {
    m_show_name = show_name;
    m_show_name_isSet = true;
}

bool OAICrew::is_show_name_Set() const{
    return m_show_name_isSet;
}

bool OAICrew::is_show_name_Valid() const{
    return m_show_name_isValid;
}

QString OAICrew::getType() const {
    return m_type;
}
void OAICrew::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICrew::is_type_Set() const{
    return m_type_isSet;
}

bool OAICrew::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICrew::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_externals.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICrew::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
