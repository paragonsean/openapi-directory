/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBandAlbums.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBandAlbums::OAIBandAlbums(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBandAlbums::OAIBandAlbums() {
    this->initializeModel();
}

OAIBandAlbums::~OAIBandAlbums() {}

void OAIBandAlbums::initializeModel() {

    m_album_art_isSet = false;
    m_album_art_isValid = false;

    m_album_id_isSet = false;
    m_album_id_isValid = false;

    m_artist_id_isSet = false;
    m_artist_id_isValid = false;

    m_bibliography_isSet = false;
    m_bibliography_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_releaseyear_isSet = false;
    m_releaseyear_isValid = false;
}

void OAIBandAlbums::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBandAlbums::fromJsonObject(QJsonObject json) {

    m_album_art_isValid = ::OpenAPI::fromJsonValue(m_album_art, json[QString("AlbumArt")]);
    m_album_art_isSet = !json[QString("AlbumArt")].isNull() && m_album_art_isValid;

    m_album_id_isValid = ::OpenAPI::fromJsonValue(m_album_id, json[QString("AlbumID")]);
    m_album_id_isSet = !json[QString("AlbumID")].isNull() && m_album_id_isValid;

    m_artist_id_isValid = ::OpenAPI::fromJsonValue(m_artist_id, json[QString("ArtistID")]);
    m_artist_id_isSet = !json[QString("ArtistID")].isNull() && m_artist_id_isValid;

    m_bibliography_isValid = ::OpenAPI::fromJsonValue(m_bibliography, json[QString("Bibliography")]);
    m_bibliography_isSet = !json[QString("Bibliography")].isNull() && m_bibliography_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("Label")]);
    m_label_isSet = !json[QString("Label")].isNull() && m_label_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_releaseyear_isValid = ::OpenAPI::fromJsonValue(m_releaseyear, json[QString("Releaseyear")]);
    m_releaseyear_isSet = !json[QString("Releaseyear")].isNull() && m_releaseyear_isValid;
}

QString OAIBandAlbums::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBandAlbums::asJsonObject() const {
    QJsonObject obj;
    if (m_album_art_isSet) {
        obj.insert(QString("AlbumArt"), ::OpenAPI::toJsonValue(m_album_art));
    }
    if (m_album_id_isSet) {
        obj.insert(QString("AlbumID"), ::OpenAPI::toJsonValue(m_album_id));
    }
    if (m_artist_id_isSet) {
        obj.insert(QString("ArtistID"), ::OpenAPI::toJsonValue(m_artist_id));
    }
    if (m_bibliography_isSet) {
        obj.insert(QString("Bibliography"), ::OpenAPI::toJsonValue(m_bibliography));
    }
    if (m_label_isSet) {
        obj.insert(QString("Label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_releaseyear_isSet) {
        obj.insert(QString("Releaseyear"), ::OpenAPI::toJsonValue(m_releaseyear));
    }
    return obj;
}

QString OAIBandAlbums::getAlbumArt() const {
    return m_album_art;
}
void OAIBandAlbums::setAlbumArt(const QString &album_art) {
    m_album_art = album_art;
    m_album_art_isSet = true;
}

bool OAIBandAlbums::is_album_art_Set() const{
    return m_album_art_isSet;
}

bool OAIBandAlbums::is_album_art_Valid() const{
    return m_album_art_isValid;
}

QString OAIBandAlbums::getAlbumId() const {
    return m_album_id;
}
void OAIBandAlbums::setAlbumId(const QString &album_id) {
    m_album_id = album_id;
    m_album_id_isSet = true;
}

bool OAIBandAlbums::is_album_id_Set() const{
    return m_album_id_isSet;
}

bool OAIBandAlbums::is_album_id_Valid() const{
    return m_album_id_isValid;
}

QString OAIBandAlbums::getArtistId() const {
    return m_artist_id;
}
void OAIBandAlbums::setArtistId(const QString &artist_id) {
    m_artist_id = artist_id;
    m_artist_id_isSet = true;
}

bool OAIBandAlbums::is_artist_id_Set() const{
    return m_artist_id_isSet;
}

bool OAIBandAlbums::is_artist_id_Valid() const{
    return m_artist_id_isValid;
}

QString OAIBandAlbums::getBibliography() const {
    return m_bibliography;
}
void OAIBandAlbums::setBibliography(const QString &bibliography) {
    m_bibliography = bibliography;
    m_bibliography_isSet = true;
}

bool OAIBandAlbums::is_bibliography_Set() const{
    return m_bibliography_isSet;
}

bool OAIBandAlbums::is_bibliography_Valid() const{
    return m_bibliography_isValid;
}

QString OAIBandAlbums::getLabel() const {
    return m_label;
}
void OAIBandAlbums::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAIBandAlbums::is_label_Set() const{
    return m_label_isSet;
}

bool OAIBandAlbums::is_label_Valid() const{
    return m_label_isValid;
}

QString OAIBandAlbums::getName() const {
    return m_name;
}
void OAIBandAlbums::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBandAlbums::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBandAlbums::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIBandAlbums::getReleaseyear() const {
    return m_releaseyear;
}
void OAIBandAlbums::setReleaseyear(const QString &releaseyear) {
    m_releaseyear = releaseyear;
    m_releaseyear_isSet = true;
}

bool OAIBandAlbums::is_releaseyear_Set() const{
    return m_releaseyear_isSet;
}

bool OAIBandAlbums::is_releaseyear_Valid() const{
    return m_releaseyear_isValid;
}

bool OAIBandAlbums::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_album_art_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_album_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_artist_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bibliography_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_releaseyear_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBandAlbums::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
