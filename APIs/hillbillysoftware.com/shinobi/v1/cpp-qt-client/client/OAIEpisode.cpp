/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEpisode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEpisode::OAIEpisode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEpisode::OAIEpisode() {
    this->initializeModel();
}

OAIEpisode::~OAIEpisode() {}

void OAIEpisode::initializeModel() {

    m_airdate_isSet = false;
    m_airdate_isValid = false;

    m_airtime_isSet = false;
    m_airtime_isValid = false;

    m_episode_no_isSet = false;
    m_episode_no_isValid = false;

    m_externals_isSet = false;
    m_externals_isValid = false;

    m_image_isSet = false;
    m_image_isValid = false;

    m_season_isSet = false;
    m_season_isValid = false;

    m_synopsis_isSet = false;
    m_synopsis_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIEpisode::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEpisode::fromJsonObject(QJsonObject json) {

    m_airdate_isValid = ::OpenAPI::fromJsonValue(m_airdate, json[QString("Airdate")]);
    m_airdate_isSet = !json[QString("Airdate")].isNull() && m_airdate_isValid;

    m_airtime_isValid = ::OpenAPI::fromJsonValue(m_airtime, json[QString("Airtime")]);
    m_airtime_isSet = !json[QString("Airtime")].isNull() && m_airtime_isValid;

    m_episode_no_isValid = ::OpenAPI::fromJsonValue(m_episode_no, json[QString("EpisodeNo")]);
    m_episode_no_isSet = !json[QString("EpisodeNo")].isNull() && m_episode_no_isValid;

    m_externals_isValid = ::OpenAPI::fromJsonValue(m_externals, json[QString("Externals")]);
    m_externals_isSet = !json[QString("Externals")].isNull() && m_externals_isValid;

    m_image_isValid = ::OpenAPI::fromJsonValue(m_image, json[QString("Image")]);
    m_image_isSet = !json[QString("Image")].isNull() && m_image_isValid;

    m_season_isValid = ::OpenAPI::fromJsonValue(m_season, json[QString("Season")]);
    m_season_isSet = !json[QString("Season")].isNull() && m_season_isValid;

    m_synopsis_isValid = ::OpenAPI::fromJsonValue(m_synopsis, json[QString("Synopsis")]);
    m_synopsis_isSet = !json[QString("Synopsis")].isNull() && m_synopsis_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;
}

QString OAIEpisode::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEpisode::asJsonObject() const {
    QJsonObject obj;
    if (m_airdate_isSet) {
        obj.insert(QString("Airdate"), ::OpenAPI::toJsonValue(m_airdate));
    }
    if (m_airtime_isSet) {
        obj.insert(QString("Airtime"), ::OpenAPI::toJsonValue(m_airtime));
    }
    if (m_episode_no_isSet) {
        obj.insert(QString("EpisodeNo"), ::OpenAPI::toJsonValue(m_episode_no));
    }
    if (m_externals.size() > 0) {
        obj.insert(QString("Externals"), ::OpenAPI::toJsonValue(m_externals));
    }
    if (m_image_isSet) {
        obj.insert(QString("Image"), ::OpenAPI::toJsonValue(m_image));
    }
    if (m_season_isSet) {
        obj.insert(QString("Season"), ::OpenAPI::toJsonValue(m_season));
    }
    if (m_synopsis_isSet) {
        obj.insert(QString("Synopsis"), ::OpenAPI::toJsonValue(m_synopsis));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIEpisode::getAirdate() const {
    return m_airdate;
}
void OAIEpisode::setAirdate(const QString &airdate) {
    m_airdate = airdate;
    m_airdate_isSet = true;
}

bool OAIEpisode::is_airdate_Set() const{
    return m_airdate_isSet;
}

bool OAIEpisode::is_airdate_Valid() const{
    return m_airdate_isValid;
}

QString OAIEpisode::getAirtime() const {
    return m_airtime;
}
void OAIEpisode::setAirtime(const QString &airtime) {
    m_airtime = airtime;
    m_airtime_isSet = true;
}

bool OAIEpisode::is_airtime_Set() const{
    return m_airtime_isSet;
}

bool OAIEpisode::is_airtime_Valid() const{
    return m_airtime_isValid;
}

QString OAIEpisode::getEpisodeNo() const {
    return m_episode_no;
}
void OAIEpisode::setEpisodeNo(const QString &episode_no) {
    m_episode_no = episode_no;
    m_episode_no_isSet = true;
}

bool OAIEpisode::is_episode_no_Set() const{
    return m_episode_no_isSet;
}

bool OAIEpisode::is_episode_no_Valid() const{
    return m_episode_no_isValid;
}

QList<OAIExternalIDs> OAIEpisode::getExternals() const {
    return m_externals;
}
void OAIEpisode::setExternals(const QList<OAIExternalIDs> &externals) {
    m_externals = externals;
    m_externals_isSet = true;
}

bool OAIEpisode::is_externals_Set() const{
    return m_externals_isSet;
}

bool OAIEpisode::is_externals_Valid() const{
    return m_externals_isValid;
}

QString OAIEpisode::getImage() const {
    return m_image;
}
void OAIEpisode::setImage(const QString &image) {
    m_image = image;
    m_image_isSet = true;
}

bool OAIEpisode::is_image_Set() const{
    return m_image_isSet;
}

bool OAIEpisode::is_image_Valid() const{
    return m_image_isValid;
}

QString OAIEpisode::getSeason() const {
    return m_season;
}
void OAIEpisode::setSeason(const QString &season) {
    m_season = season;
    m_season_isSet = true;
}

bool OAIEpisode::is_season_Set() const{
    return m_season_isSet;
}

bool OAIEpisode::is_season_Valid() const{
    return m_season_isValid;
}

QString OAIEpisode::getSynopsis() const {
    return m_synopsis;
}
void OAIEpisode::setSynopsis(const QString &synopsis) {
    m_synopsis = synopsis;
    m_synopsis_isSet = true;
}

bool OAIEpisode::is_synopsis_Set() const{
    return m_synopsis_isSet;
}

bool OAIEpisode::is_synopsis_Valid() const{
    return m_synopsis_isValid;
}

QString OAIEpisode::getTitle() const {
    return m_title;
}
void OAIEpisode::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIEpisode::is_title_Set() const{
    return m_title_isSet;
}

bool OAIEpisode::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIEpisode::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_airdate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_airtime_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_episode_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_externals.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_season_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_synopsis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEpisode::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
