/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITVShowActor.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITVShowActor::OAITVShowActor(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITVShowActor::OAITVShowActor() {
    this->initializeModel();
}

OAITVShowActor::~OAITVShowActor() {}

void OAITVShowActor::initializeModel() {

    m_externals_isSet = false;
    m_externals_isValid = false;

    m_image_isSet = false;
    m_image_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;

    m_show_name_isSet = false;
    m_show_name_isValid = false;
}

void OAITVShowActor::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITVShowActor::fromJsonObject(QJsonObject json) {

    m_externals_isValid = ::OpenAPI::fromJsonValue(m_externals, json[QString("Externals")]);
    m_externals_isSet = !json[QString("Externals")].isNull() && m_externals_isValid;

    m_image_isValid = ::OpenAPI::fromJsonValue(m_image, json[QString("Image")]);
    m_image_isSet = !json[QString("Image")].isNull() && m_image_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("Role")]);
    m_role_isSet = !json[QString("Role")].isNull() && m_role_isValid;

    m_show_name_isValid = ::OpenAPI::fromJsonValue(m_show_name, json[QString("ShowName")]);
    m_show_name_isSet = !json[QString("ShowName")].isNull() && m_show_name_isValid;
}

QString OAITVShowActor::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITVShowActor::asJsonObject() const {
    QJsonObject obj;
    if (m_externals.size() > 0) {
        obj.insert(QString("Externals"), ::OpenAPI::toJsonValue(m_externals));
    }
    if (m_image_isSet) {
        obj.insert(QString("Image"), ::OpenAPI::toJsonValue(m_image));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_role_isSet) {
        obj.insert(QString("Role"), ::OpenAPI::toJsonValue(m_role));
    }
    if (m_show_name_isSet) {
        obj.insert(QString("ShowName"), ::OpenAPI::toJsonValue(m_show_name));
    }
    return obj;
}

QList<OAIExternalIDs> OAITVShowActor::getExternals() const {
    return m_externals;
}
void OAITVShowActor::setExternals(const QList<OAIExternalIDs> &externals) {
    m_externals = externals;
    m_externals_isSet = true;
}

bool OAITVShowActor::is_externals_Set() const{
    return m_externals_isSet;
}

bool OAITVShowActor::is_externals_Valid() const{
    return m_externals_isValid;
}

QString OAITVShowActor::getImage() const {
    return m_image;
}
void OAITVShowActor::setImage(const QString &image) {
    m_image = image;
    m_image_isSet = true;
}

bool OAITVShowActor::is_image_Set() const{
    return m_image_isSet;
}

bool OAITVShowActor::is_image_Valid() const{
    return m_image_isValid;
}

QString OAITVShowActor::getName() const {
    return m_name;
}
void OAITVShowActor::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITVShowActor::is_name_Set() const{
    return m_name_isSet;
}

bool OAITVShowActor::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITVShowActor::getRole() const {
    return m_role;
}
void OAITVShowActor::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAITVShowActor::is_role_Set() const{
    return m_role_isSet;
}

bool OAITVShowActor::is_role_Valid() const{
    return m_role_isValid;
}

QString OAITVShowActor::getShowName() const {
    return m_show_name;
}
void OAITVShowActor::setShowName(const QString &show_name) {
    m_show_name = show_name;
    m_show_name_isSet = true;
}

bool OAITVShowActor::is_show_name_Set() const{
    return m_show_name_isSet;
}

bool OAITVShowActor::is_show_name_Valid() const{
    return m_show_name_isValid;
}

bool OAITVShowActor::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_externals.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITVShowActor::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
