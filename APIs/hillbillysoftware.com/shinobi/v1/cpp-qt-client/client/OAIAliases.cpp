/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAliases.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAliases::OAIAliases(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAliases::OAIAliases() {
    this->initializeModel();
}

OAIAliases::~OAIAliases() {}

void OAIAliases::initializeModel() {

    m_aka_isSet = false;
    m_aka_isValid = false;

    m_external_ids_isSet = false;
    m_external_ids_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_original_name_isSet = false;
    m_original_name_isValid = false;
}

void OAIAliases::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAliases::fromJsonObject(QJsonObject json) {

    m_aka_isValid = ::OpenAPI::fromJsonValue(m_aka, json[QString("Aka")]);
    m_aka_isSet = !json[QString("Aka")].isNull() && m_aka_isValid;

    m_external_ids_isValid = ::OpenAPI::fromJsonValue(m_external_ids, json[QString("ExternalIDs")]);
    m_external_ids_isSet = !json[QString("ExternalIDs")].isNull() && m_external_ids_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_original_name_isValid = ::OpenAPI::fromJsonValue(m_original_name, json[QString("OriginalName")]);
    m_original_name_isSet = !json[QString("OriginalName")].isNull() && m_original_name_isValid;
}

QString OAIAliases::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAliases::asJsonObject() const {
    QJsonObject obj;
    if (m_aka_isSet) {
        obj.insert(QString("Aka"), ::OpenAPI::toJsonValue(m_aka));
    }
    if (m_external_ids.size() > 0) {
        obj.insert(QString("ExternalIDs"), ::OpenAPI::toJsonValue(m_external_ids));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_original_name_isSet) {
        obj.insert(QString("OriginalName"), ::OpenAPI::toJsonValue(m_original_name));
    }
    return obj;
}

QString OAIAliases::getAka() const {
    return m_aka;
}
void OAIAliases::setAka(const QString &aka) {
    m_aka = aka;
    m_aka_isSet = true;
}

bool OAIAliases::is_aka_Set() const{
    return m_aka_isSet;
}

bool OAIAliases::is_aka_Valid() const{
    return m_aka_isValid;
}

QList<OAIExternalIDs> OAIAliases::getExternalIds() const {
    return m_external_ids;
}
void OAIAliases::setExternalIds(const QList<OAIExternalIDs> &external_ids) {
    m_external_ids = external_ids;
    m_external_ids_isSet = true;
}

bool OAIAliases::is_external_ids_Set() const{
    return m_external_ids_isSet;
}

bool OAIAliases::is_external_ids_Valid() const{
    return m_external_ids_isValid;
}

QString OAIAliases::getName() const {
    return m_name;
}
void OAIAliases::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAliases::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAliases::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAliases::getOriginalName() const {
    return m_original_name;
}
void OAIAliases::setOriginalName(const QString &original_name) {
    m_original_name = original_name;
    m_original_name_isSet = true;
}

bool OAIAliases::is_original_name_Set() const{
    return m_original_name_isSet;
}

bool OAIAliases::is_original_name_Valid() const{
    return m_original_name_isValid;
}

bool OAIAliases::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aka_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAliases::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
