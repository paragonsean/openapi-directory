/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMusicVideo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMusicVideo::OAIMusicVideo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMusicVideo::OAIMusicVideo() {
    this->initializeModel();
}

OAIMusicVideo::~OAIMusicVideo() {}

void OAIMusicVideo::initializeModel() {

    m_album_id_isSet = false;
    m_album_id_isValid = false;

    m_artist_id_isSet = false;
    m_artist_id_isValid = false;

    m_decription_isSet = false;
    m_decription_isValid = false;

    m_video_isSet = false;
    m_video_isValid = false;
}

void OAIMusicVideo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMusicVideo::fromJsonObject(QJsonObject json) {

    m_album_id_isValid = ::OpenAPI::fromJsonValue(m_album_id, json[QString("AlbumID")]);
    m_album_id_isSet = !json[QString("AlbumID")].isNull() && m_album_id_isValid;

    m_artist_id_isValid = ::OpenAPI::fromJsonValue(m_artist_id, json[QString("ArtistID")]);
    m_artist_id_isSet = !json[QString("ArtistID")].isNull() && m_artist_id_isValid;

    m_decription_isValid = ::OpenAPI::fromJsonValue(m_decription, json[QString("Decription")]);
    m_decription_isSet = !json[QString("Decription")].isNull() && m_decription_isValid;

    m_video_isValid = ::OpenAPI::fromJsonValue(m_video, json[QString("Video")]);
    m_video_isSet = !json[QString("Video")].isNull() && m_video_isValid;
}

QString OAIMusicVideo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMusicVideo::asJsonObject() const {
    QJsonObject obj;
    if (m_album_id_isSet) {
        obj.insert(QString("AlbumID"), ::OpenAPI::toJsonValue(m_album_id));
    }
    if (m_artist_id_isSet) {
        obj.insert(QString("ArtistID"), ::OpenAPI::toJsonValue(m_artist_id));
    }
    if (m_decription_isSet) {
        obj.insert(QString("Decription"), ::OpenAPI::toJsonValue(m_decription));
    }
    if (m_video_isSet) {
        obj.insert(QString("Video"), ::OpenAPI::toJsonValue(m_video));
    }
    return obj;
}

QString OAIMusicVideo::getAlbumId() const {
    return m_album_id;
}
void OAIMusicVideo::setAlbumId(const QString &album_id) {
    m_album_id = album_id;
    m_album_id_isSet = true;
}

bool OAIMusicVideo::is_album_id_Set() const{
    return m_album_id_isSet;
}

bool OAIMusicVideo::is_album_id_Valid() const{
    return m_album_id_isValid;
}

QString OAIMusicVideo::getArtistId() const {
    return m_artist_id;
}
void OAIMusicVideo::setArtistId(const QString &artist_id) {
    m_artist_id = artist_id;
    m_artist_id_isSet = true;
}

bool OAIMusicVideo::is_artist_id_Set() const{
    return m_artist_id_isSet;
}

bool OAIMusicVideo::is_artist_id_Valid() const{
    return m_artist_id_isValid;
}

QString OAIMusicVideo::getDecription() const {
    return m_decription;
}
void OAIMusicVideo::setDecription(const QString &decription) {
    m_decription = decription;
    m_decription_isSet = true;
}

bool OAIMusicVideo::is_decription_Set() const{
    return m_decription_isSet;
}

bool OAIMusicVideo::is_decription_Valid() const{
    return m_decription_isValid;
}

QString OAIMusicVideo::getVideo() const {
    return m_video;
}
void OAIMusicVideo::setVideo(const QString &video) {
    m_video = video;
    m_video_isSet = true;
}

bool OAIMusicVideo::is_video_Set() const{
    return m_video_isSet;
}

bool OAIMusicVideo::is_video_Valid() const{
    return m_video_isValid;
}

bool OAIMusicVideo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_album_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_artist_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_decription_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMusicVideo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
