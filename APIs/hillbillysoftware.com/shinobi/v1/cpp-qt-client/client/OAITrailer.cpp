/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrailer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrailer::OAITrailer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrailer::OAITrailer() {
    this->initializeModel();
}

OAITrailer::~OAITrailer() {}

void OAITrailer::initializeModel() {

    m_episode_isSet = false;
    m_episode_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_media_type_isSet = false;
    m_media_type_isValid = false;

    m_season_isSet = false;
    m_season_isValid = false;

    m_site_isSet = false;
    m_site_isValid = false;

    m_trailer_name_isSet = false;
    m_trailer_name_isValid = false;

    m_trailer_size_isSet = false;
    m_trailer_size_isValid = false;

    m_trailer_type_isSet = false;
    m_trailer_type_isValid = false;

    m_you_tube_embedded_code_isSet = false;
    m_you_tube_embedded_code_isValid = false;

    m_you_tube_url_isSet = false;
    m_you_tube_url_isValid = false;
}

void OAITrailer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITrailer::fromJsonObject(QJsonObject json) {

    m_episode_isValid = ::OpenAPI::fromJsonValue(m_episode, json[QString("Episode")]);
    m_episode_isSet = !json[QString("Episode")].isNull() && m_episode_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("Key")]);
    m_key_isSet = !json[QString("Key")].isNull() && m_key_isValid;

    m_media_type_isValid = ::OpenAPI::fromJsonValue(m_media_type, json[QString("MediaType")]);
    m_media_type_isSet = !json[QString("MediaType")].isNull() && m_media_type_isValid;

    m_season_isValid = ::OpenAPI::fromJsonValue(m_season, json[QString("Season")]);
    m_season_isSet = !json[QString("Season")].isNull() && m_season_isValid;

    m_site_isValid = ::OpenAPI::fromJsonValue(m_site, json[QString("Site")]);
    m_site_isSet = !json[QString("Site")].isNull() && m_site_isValid;

    m_trailer_name_isValid = ::OpenAPI::fromJsonValue(m_trailer_name, json[QString("TrailerName")]);
    m_trailer_name_isSet = !json[QString("TrailerName")].isNull() && m_trailer_name_isValid;

    m_trailer_size_isValid = ::OpenAPI::fromJsonValue(m_trailer_size, json[QString("TrailerSize")]);
    m_trailer_size_isSet = !json[QString("TrailerSize")].isNull() && m_trailer_size_isValid;

    m_trailer_type_isValid = ::OpenAPI::fromJsonValue(m_trailer_type, json[QString("TrailerType")]);
    m_trailer_type_isSet = !json[QString("TrailerType")].isNull() && m_trailer_type_isValid;

    m_you_tube_embedded_code_isValid = ::OpenAPI::fromJsonValue(m_you_tube_embedded_code, json[QString("YouTubeEmbeddedCode")]);
    m_you_tube_embedded_code_isSet = !json[QString("YouTubeEmbeddedCode")].isNull() && m_you_tube_embedded_code_isValid;

    m_you_tube_url_isValid = ::OpenAPI::fromJsonValue(m_you_tube_url, json[QString("YouTubeURL")]);
    m_you_tube_url_isSet = !json[QString("YouTubeURL")].isNull() && m_you_tube_url_isValid;
}

QString OAITrailer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITrailer::asJsonObject() const {
    QJsonObject obj;
    if (m_episode_isSet) {
        obj.insert(QString("Episode"), ::OpenAPI::toJsonValue(m_episode));
    }
    if (m_key_isSet) {
        obj.insert(QString("Key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_media_type_isSet) {
        obj.insert(QString("MediaType"), ::OpenAPI::toJsonValue(m_media_type));
    }
    if (m_season_isSet) {
        obj.insert(QString("Season"), ::OpenAPI::toJsonValue(m_season));
    }
    if (m_site_isSet) {
        obj.insert(QString("Site"), ::OpenAPI::toJsonValue(m_site));
    }
    if (m_trailer_name_isSet) {
        obj.insert(QString("TrailerName"), ::OpenAPI::toJsonValue(m_trailer_name));
    }
    if (m_trailer_size_isSet) {
        obj.insert(QString("TrailerSize"), ::OpenAPI::toJsonValue(m_trailer_size));
    }
    if (m_trailer_type_isSet) {
        obj.insert(QString("TrailerType"), ::OpenAPI::toJsonValue(m_trailer_type));
    }
    if (m_you_tube_embedded_code_isSet) {
        obj.insert(QString("YouTubeEmbeddedCode"), ::OpenAPI::toJsonValue(m_you_tube_embedded_code));
    }
    if (m_you_tube_url_isSet) {
        obj.insert(QString("YouTubeURL"), ::OpenAPI::toJsonValue(m_you_tube_url));
    }
    return obj;
}

QString OAITrailer::getEpisode() const {
    return m_episode;
}
void OAITrailer::setEpisode(const QString &episode) {
    m_episode = episode;
    m_episode_isSet = true;
}

bool OAITrailer::is_episode_Set() const{
    return m_episode_isSet;
}

bool OAITrailer::is_episode_Valid() const{
    return m_episode_isValid;
}

QString OAITrailer::getKey() const {
    return m_key;
}
void OAITrailer::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAITrailer::is_key_Set() const{
    return m_key_isSet;
}

bool OAITrailer::is_key_Valid() const{
    return m_key_isValid;
}

QString OAITrailer::getMediaType() const {
    return m_media_type;
}
void OAITrailer::setMediaType(const QString &media_type) {
    m_media_type = media_type;
    m_media_type_isSet = true;
}

bool OAITrailer::is_media_type_Set() const{
    return m_media_type_isSet;
}

bool OAITrailer::is_media_type_Valid() const{
    return m_media_type_isValid;
}

QString OAITrailer::getSeason() const {
    return m_season;
}
void OAITrailer::setSeason(const QString &season) {
    m_season = season;
    m_season_isSet = true;
}

bool OAITrailer::is_season_Set() const{
    return m_season_isSet;
}

bool OAITrailer::is_season_Valid() const{
    return m_season_isValid;
}

QString OAITrailer::getSite() const {
    return m_site;
}
void OAITrailer::setSite(const QString &site) {
    m_site = site;
    m_site_isSet = true;
}

bool OAITrailer::is_site_Set() const{
    return m_site_isSet;
}

bool OAITrailer::is_site_Valid() const{
    return m_site_isValid;
}

QString OAITrailer::getTrailerName() const {
    return m_trailer_name;
}
void OAITrailer::setTrailerName(const QString &trailer_name) {
    m_trailer_name = trailer_name;
    m_trailer_name_isSet = true;
}

bool OAITrailer::is_trailer_name_Set() const{
    return m_trailer_name_isSet;
}

bool OAITrailer::is_trailer_name_Valid() const{
    return m_trailer_name_isValid;
}

QString OAITrailer::getTrailerSize() const {
    return m_trailer_size;
}
void OAITrailer::setTrailerSize(const QString &trailer_size) {
    m_trailer_size = trailer_size;
    m_trailer_size_isSet = true;
}

bool OAITrailer::is_trailer_size_Set() const{
    return m_trailer_size_isSet;
}

bool OAITrailer::is_trailer_size_Valid() const{
    return m_trailer_size_isValid;
}

QString OAITrailer::getTrailerType() const {
    return m_trailer_type;
}
void OAITrailer::setTrailerType(const QString &trailer_type) {
    m_trailer_type = trailer_type;
    m_trailer_type_isSet = true;
}

bool OAITrailer::is_trailer_type_Set() const{
    return m_trailer_type_isSet;
}

bool OAITrailer::is_trailer_type_Valid() const{
    return m_trailer_type_isValid;
}

QString OAITrailer::getYouTubeEmbeddedCode() const {
    return m_you_tube_embedded_code;
}
void OAITrailer::setYouTubeEmbeddedCode(const QString &you_tube_embedded_code) {
    m_you_tube_embedded_code = you_tube_embedded_code;
    m_you_tube_embedded_code_isSet = true;
}

bool OAITrailer::is_you_tube_embedded_code_Set() const{
    return m_you_tube_embedded_code_isSet;
}

bool OAITrailer::is_you_tube_embedded_code_Valid() const{
    return m_you_tube_embedded_code_isValid;
}

QString OAITrailer::getYouTubeUrl() const {
    return m_you_tube_url;
}
void OAITrailer::setYouTubeUrl(const QString &you_tube_url) {
    m_you_tube_url = you_tube_url;
    m_you_tube_url_isSet = true;
}

bool OAITrailer::is_you_tube_url_Set() const{
    return m_you_tube_url_isSet;
}

bool OAITrailer::is_you_tube_url_Valid() const{
    return m_you_tube_url_isValid;
}

bool OAITrailer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_episode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_season_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_site_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trailer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trailer_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trailer_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_you_tube_embedded_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_you_tube_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITrailer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
