/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RatingItem from '../model/RatingItem';

/**
* RatingsMovieTelevisionShowRatings service.
* @module api/RatingsMovieTelevisionShowRatingsApi
* @version v1
*/
export default class RatingsMovieTelevisionShowRatingsApi {

    /**
    * Constructs a new RatingsMovieTelevisionShowRatingsApi. 
    * @alias module:api/RatingsMovieTelevisionShowRatingsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the ratingByNameGet operation.
     * @callback module:api/RatingsMovieTelevisionShowRatingsApi~ratingByNameGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/RatingItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} accessToken 
     * @param {String} name 
     * @param {module:api/RatingsMovieTelevisionShowRatingsApi~ratingByNameGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/RatingItem>}
     */
    ratingByNameGet(accessToken, name, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling ratingByNameGet");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling ratingByNameGet");
      }

      let pathParams = {
        'AccessToken': accessToken,
        'Name': name
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [RatingItem];
      return this.apiClient.callApi(
        '/Rating/ByName/{AccessToken}/{Name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ratingGet operation.
     * @callback module:api/RatingsMovieTelevisionShowRatingsApi~ratingGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RatingItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns ratings from various resources(IMDB,Rotten Tomatoes, metaCritics, TVMaze etc) of passed IMDBid
     * @param {String} accessToken 
     * @param {String} imdbID 
     * @param {module:api/RatingsMovieTelevisionShowRatingsApi~ratingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RatingItem}
     */
    ratingGet(accessToken, imdbID, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling ratingGet");
      }
      // verify the required parameter 'imdbID' is set
      if (imdbID === undefined || imdbID === null) {
        throw new Error("Missing the required parameter 'imdbID' when calling ratingGet");
      }

      let pathParams = {
        'AccessToken': accessToken,
        'imdbID': imdbID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = RatingItem;
      return this.apiClient.callApi(
        '/Rating/ByID/{AccessToken}/{imdbID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
