/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Country from '../model/Country';
import Networks from '../model/Networks';
import Schedule from '../model/Schedule';
import ShowSeasons from '../model/ShowSeasons';

/**
* CalendarTelevisionShowSchedules service.
* @module api/CalendarTelevisionShowSchedulesApi
* @version v1
*/
export default class CalendarTelevisionShowSchedulesApi {

    /**
    * Constructs a new CalendarTelevisionShowSchedulesApi. 
    * @alias module:api/CalendarTelevisionShowSchedulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the calendarByShowNameGet operation.
     * @callback module:api/CalendarTelevisionShowSchedulesApi~calendarByShowNameGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Schedule>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Will return show schedule for queried showname and year
     * @param {String} accessToken 
     * @param {String} name 
     * @param {String} year 
     * @param {module:api/CalendarTelevisionShowSchedulesApi~calendarByShowNameGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Schedule>}
     */
    calendarByShowNameGet(accessToken, name, year, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling calendarByShowNameGet");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling calendarByShowNameGet");
      }
      // verify the required parameter 'year' is set
      if (year === undefined || year === null) {
        throw new Error("Missing the required parameter 'year' when calling calendarByShowNameGet");
      }

      let pathParams = {
        'AccessToken': accessToken,
        'Name': name,
        'Year': year
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [Schedule];
      return this.apiClient.callApi(
        '/Calendar/Show/{AccessToken}/{Name}/{Year}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the calendarCountriesGet operation.
     * @callback module:api/CalendarTelevisionShowSchedulesApi~calendarCountriesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Country>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns list of available countries in calendar database
     * @param {String} accessToken 
     * @param {module:api/CalendarTelevisionShowSchedulesApi~calendarCountriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Country>}
     */
    calendarCountriesGet(accessToken, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling calendarCountriesGet");
      }

      let pathParams = {
        'AccessToken': accessToken
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [Country];
      return this.apiClient.callApi(
        '/Calendar/Countries/{AccessToken}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the calendarNetworksGet operation.
     * @callback module:api/CalendarTelevisionShowSchedulesApi~calendarNetworksGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Networks>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of available networks
     * @param {String} accessToken 
     * @param {module:api/CalendarTelevisionShowSchedulesApi~calendarNetworksGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Networks>}
     */
    calendarNetworksGet(accessToken, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling calendarNetworksGet");
      }

      let pathParams = {
        'AccessToken': accessToken
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [Networks];
      return this.apiClient.callApi(
        '/Calendar/Networks/{AccessToken}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the calendarShowSeasonsGet operation.
     * @callback module:api/CalendarTelevisionShowSchedulesApi~calendarShowSeasonsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ShowSeasons>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns list of seasons available in the calendar for show
     * @param {String} accessToken 
     * @param {String} name 
     * @param {module:api/CalendarTelevisionShowSchedulesApi~calendarShowSeasonsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ShowSeasons>}
     */
    calendarShowSeasonsGet(accessToken, name, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling calendarShowSeasonsGet");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling calendarShowSeasonsGet");
      }

      let pathParams = {
        'AccessToken': accessToken,
        'Name': name
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [ShowSeasons];
      return this.apiClient.callApi(
        '/Calendar/Seasons/{AccessToken}/{Name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the calendarTodayGet operation.
     * @callback module:api/CalendarTelevisionShowSchedulesApi~calendarTodayGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Schedule>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Will return show schedule for today for all countries in database
     * @param {String} accessToken 
     * @param {module:api/CalendarTelevisionShowSchedulesApi~calendarTodayGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Schedule>}
     */
    calendarTodayGet(accessToken, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling calendarTodayGet");
      }

      let pathParams = {
        'AccessToken': accessToken
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [Schedule];
      return this.apiClient.callApi(
        '/Calendar/Today/{AccessToken}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the calendarbyShownameSeasonGet operation.
     * @callback module:api/CalendarTelevisionShowSchedulesApi~calendarbyShownameSeasonGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Schedule>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Calendar by showname and season
     * @param {String} accessToken 
     * @param {String} name 
     * @param {String} season 
     * @param {module:api/CalendarTelevisionShowSchedulesApi~calendarbyShownameSeasonGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Schedule>}
     */
    calendarbyShownameSeasonGet(accessToken, name, season, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling calendarbyShownameSeasonGet");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling calendarbyShownameSeasonGet");
      }
      // verify the required parameter 'season' is set
      if (season === undefined || season === null) {
        throw new Error("Missing the required parameter 'season' when calling calendarbyShownameSeasonGet");
      }

      let pathParams = {
        'AccessToken': accessToken,
        'Name': name,
        'Season': season
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [Schedule];
      return this.apiClient.callApi(
        '/Calendar/Show/Season/{AccessToken}/{Name}/{Season}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the scheduleByDateGet operation.
     * @callback module:api/CalendarTelevisionShowSchedulesApi~scheduleByDateGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Schedule>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets TV Schedule for selected data
     * @param {String} accessToken 
     * @param {String} date date format year-month-day
     * @param {String} country US / CA / NL / BE / DE / GB or FR
     * @param {module:api/CalendarTelevisionShowSchedulesApi~scheduleByDateGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Schedule>}
     */
    scheduleByDateGet(accessToken, date, country, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling scheduleByDateGet");
      }
      // verify the required parameter 'date' is set
      if (date === undefined || date === null) {
        throw new Error("Missing the required parameter 'date' when calling scheduleByDateGet");
      }
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling scheduleByDateGet");
      }

      let pathParams = {
        'AccessToken': accessToken,
        'Date': date,
        'Country': country
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [Schedule];
      return this.apiClient.callApi(
        '/Calendar/ByDate/{AccessToken}/{Date}/{Country}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
