/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ImdbID from '../model/ImdbID';

/**
* MiscellaneousConversionOtherUtilities service.
* @module api/MiscellaneousConversionOtherUtilitiesApi
* @version v1
*/
export default class MiscellaneousConversionOtherUtilitiesApi {

    /**
    * Constructs a new MiscellaneousConversionOtherUtilitiesApi. 
    * @alias module:api/MiscellaneousConversionOtherUtilitiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getIMDBidGetAsync operation.
     * @callback module:api/MiscellaneousConversionOtherUtilitiesApi~getIMDBidGetAsyncCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ImdbID>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets list of avaiable IMDB ids from Movies and TV Show databases, you can use those to query other end points that need ID's
     * @param {String} accessToken 
     * @param {String} query 
     * @param {module:api/MiscellaneousConversionOtherUtilitiesApi~getIMDBidGetAsyncCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ImdbID>}
     */
    getIMDBidGetAsync(accessToken, query, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling getIMDBidGetAsync");
      }
      // verify the required parameter 'query' is set
      if (query === undefined || query === null) {
        throw new Error("Missing the required parameter 'query' when calling getIMDBidGetAsync");
      }

      let pathParams = {
        'AccessToken': accessToken,
        'Query': query
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [ImdbID];
      return this.apiClient.callApi(
        '/GetIMDBid/ByID/{AccessToken}/{Query}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
