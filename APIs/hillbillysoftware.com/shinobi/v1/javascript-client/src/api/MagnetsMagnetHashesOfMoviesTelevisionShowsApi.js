/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Magnets from '../model/Magnets';

/**
* MagnetsMagnetHashesOfMoviesTelevisionShows service.
* @module api/MagnetsMagnetHashesOfMoviesTelevisionShowsApi
* @version v1
*/
export default class MagnetsMagnetHashesOfMoviesTelevisionShowsApi {

    /**
    * Constructs a new MagnetsMagnetHashesOfMoviesTelevisionShowsApi. 
    * @alias module:api/MagnetsMagnetHashesOfMoviesTelevisionShowsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the magnetsByDateGetAsync operation.
     * @callback module:api/MagnetsMagnetHashesOfMoviesTelevisionShowsApi~magnetsByDateGetAsyncCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Magnets>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets available magnet hashes on passed date (yyyy-mm-dd).  Feature not available on free plan, please donate to be able to use this feature.
     * @param {String} accessToken 
     * @param {String} date 
     * @param {module:api/MagnetsMagnetHashesOfMoviesTelevisionShowsApi~magnetsByDateGetAsyncCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Magnets>}
     */
    magnetsByDateGetAsync(accessToken, date, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling magnetsByDateGetAsync");
      }
      // verify the required parameter 'date' is set
      if (date === undefined || date === null) {
        throw new Error("Missing the required parameter 'date' when calling magnetsByDateGetAsync");
      }

      let pathParams = {
        'AccessToken': accessToken,
        'Date': date
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [Magnets];
      return this.apiClient.callApi(
        '/Magnets/ByDate/{AccessToken}/{Date}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the magnetsByimdbIDGetAsync operation.
     * @callback module:api/MagnetsMagnetHashesOfMoviesTelevisionShowsApi~magnetsByimdbIDGetAsyncCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Magnets>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns list of magnet hashes for passed IMDBID.  Feature not available on free plan, please donate to be able to use this feature.
     * @param {String} accessToken 
     * @param {String} imdbID ID with or without tt prefix
     * @param {module:api/MagnetsMagnetHashesOfMoviesTelevisionShowsApi~magnetsByimdbIDGetAsyncCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Magnets>}
     */
    magnetsByimdbIDGetAsync(accessToken, imdbID, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling magnetsByimdbIDGetAsync");
      }
      // verify the required parameter 'imdbID' is set
      if (imdbID === undefined || imdbID === null) {
        throw new Error("Missing the required parameter 'imdbID' when calling magnetsByimdbIDGetAsync");
      }

      let pathParams = {
        'AccessToken': accessToken,
        'imdbID': imdbID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [Magnets];
      return this.apiClient.callApi(
        '/Magnets/ByIMDB/{AccessToken}/{imdbID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the magnetsMovieByIDGetAsync operation.
     * @callback module:api/MagnetsMagnetHashesOfMoviesTelevisionShowsApi~magnetsMovieByIDGetAsyncCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Magnets>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Try and find magnet links for queried movie.  Feature not available on free plan, please donate to be able to use this feature
     * @param {String} accessToken 
     * @param {String} query Name or part of name of movie or tv show
     * @param {module:api/MagnetsMagnetHashesOfMoviesTelevisionShowsApi~magnetsMovieByIDGetAsyncCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Magnets>}
     */
    magnetsMovieByIDGetAsync(accessToken, query, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling magnetsMovieByIDGetAsync");
      }
      // verify the required parameter 'query' is set
      if (query === undefined || query === null) {
        throw new Error("Missing the required parameter 'query' when calling magnetsMovieByIDGetAsync");
      }

      let pathParams = {
        'AccessToken': accessToken,
        'Query': query
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [Magnets];
      return this.apiClient.callApi(
        '/Magnets/Search/{AccessToken}/{Query}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tVShowsearchGet operation.
     * @callback module:api/MagnetsMagnetHashesOfMoviesTelevisionShowsApi~tVShowsearchGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Magnets>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns results based on query, Feature not available on free plan, please donate to be able to use this feature.
     * @param {String} accessToken 
     * @param {String} tVShow 
     * @param {module:api/MagnetsMagnetHashesOfMoviesTelevisionShowsApi~tVShowsearchGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Magnets>}
     */
    tVShowsearchGet(accessToken, tVShow, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling tVShowsearchGet");
      }
      // verify the required parameter 'tVShow' is set
      if (tVShow === undefined || tVShow === null) {
        throw new Error("Missing the required parameter 'tVShow' when calling tVShowsearchGet");
      }

      let pathParams = {
        'AccessToken': accessToken,
        'TVShow': tVShow
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [Magnets];
      return this.apiClient.callApi(
        '/Magnets/TVShow/{AccessToken}/{TVShow}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
