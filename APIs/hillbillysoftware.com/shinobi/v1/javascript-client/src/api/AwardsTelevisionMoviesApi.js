/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Awards from '../model/Awards';

/**
* AwardsTelevisionMovies service.
* @module api/AwardsTelevisionMoviesApi
* @version v1
*/
export default class AwardsTelevisionMoviesApi {

    /**
    * Constructs a new AwardsTelevisionMoviesApi. 
    * @alias module:api/AwardsTelevisionMoviesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the awardsGet operation.
     * @callback module:api/AwardsTelevisionMoviesApi~awardsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Awards>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all awards for requested year
     * @param {String} year 
     * @param {module:api/AwardsTelevisionMoviesApi~awardsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Awards>}
     */
    awardsGet(year, callback) {
      let postBody = null;
      // verify the required parameter 'year' is set
      if (year === undefined || year === null) {
        throw new Error("Missing the required parameter 'year' when calling awardsGet");
      }

      let pathParams = {
        'Year': year
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [Awards];
      return this.apiClient.callApi(
        '/Awards/ByYear/{Year}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the awardsbyWinnerGet operation.
     * @callback module:api/AwardsTelevisionMoviesApi~awardsbyWinnerGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Awards>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets all awards by nominiee
     * @param {String} accessToken 
     * @param {String} nominee 
     * @param {module:api/AwardsTelevisionMoviesApi~awardsbyWinnerGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Awards>}
     */
    awardsbyWinnerGet(accessToken, nominee, callback) {
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling awardsbyWinnerGet");
      }
      // verify the required parameter 'nominee' is set
      if (nominee === undefined || nominee === null) {
        throw new Error("Missing the required parameter 'nominee' when calling awardsbyWinnerGet");
      }

      let pathParams = {
        'AccessToken': accessToken,
        'Nominee': nominee
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = [Awards];
      return this.apiClient.callApi(
        '/Awards/ByWinner/{AccessToken}/{Nominee}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
