/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExternalIDs from './ExternalIDs';

/**
 * The Episode model module.
 * @module model/Episode
 * @version v1
 */
class Episode {
    /**
     * Constructs a new <code>Episode</code>.
     * @alias module:model/Episode
     */
    constructor() { 
        
        Episode.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Episode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Episode} obj Optional instance to populate.
     * @return {module:model/Episode} The populated <code>Episode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Episode();

            if (data.hasOwnProperty('Airdate')) {
                obj['Airdate'] = ApiClient.convertToType(data['Airdate'], 'String');
            }
            if (data.hasOwnProperty('Airtime')) {
                obj['Airtime'] = ApiClient.convertToType(data['Airtime'], 'String');
            }
            if (data.hasOwnProperty('EpisodeNo')) {
                obj['EpisodeNo'] = ApiClient.convertToType(data['EpisodeNo'], 'String');
            }
            if (data.hasOwnProperty('Externals')) {
                obj['Externals'] = ApiClient.convertToType(data['Externals'], [ExternalIDs]);
            }
            if (data.hasOwnProperty('Image')) {
                obj['Image'] = ApiClient.convertToType(data['Image'], 'String');
            }
            if (data.hasOwnProperty('Season')) {
                obj['Season'] = ApiClient.convertToType(data['Season'], 'String');
            }
            if (data.hasOwnProperty('Synopsis')) {
                obj['Synopsis'] = ApiClient.convertToType(data['Synopsis'], 'String');
            }
            if (data.hasOwnProperty('Title')) {
                obj['Title'] = ApiClient.convertToType(data['Title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Episode</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Episode</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Airdate'] && !(typeof data['Airdate'] === 'string' || data['Airdate'] instanceof String)) {
            throw new Error("Expected the field `Airdate` to be a primitive type in the JSON string but got " + data['Airdate']);
        }
        // ensure the json data is a string
        if (data['Airtime'] && !(typeof data['Airtime'] === 'string' || data['Airtime'] instanceof String)) {
            throw new Error("Expected the field `Airtime` to be a primitive type in the JSON string but got " + data['Airtime']);
        }
        // ensure the json data is a string
        if (data['EpisodeNo'] && !(typeof data['EpisodeNo'] === 'string' || data['EpisodeNo'] instanceof String)) {
            throw new Error("Expected the field `EpisodeNo` to be a primitive type in the JSON string but got " + data['EpisodeNo']);
        }
        if (data['Externals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Externals'])) {
                throw new Error("Expected the field `Externals` to be an array in the JSON data but got " + data['Externals']);
            }
            // validate the optional field `Externals` (array)
            for (const item of data['Externals']) {
                ExternalIDs.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['Image'] && !(typeof data['Image'] === 'string' || data['Image'] instanceof String)) {
            throw new Error("Expected the field `Image` to be a primitive type in the JSON string but got " + data['Image']);
        }
        // ensure the json data is a string
        if (data['Season'] && !(typeof data['Season'] === 'string' || data['Season'] instanceof String)) {
            throw new Error("Expected the field `Season` to be a primitive type in the JSON string but got " + data['Season']);
        }
        // ensure the json data is a string
        if (data['Synopsis'] && !(typeof data['Synopsis'] === 'string' || data['Synopsis'] instanceof String)) {
            throw new Error("Expected the field `Synopsis` to be a primitive type in the JSON string but got " + data['Synopsis']);
        }
        // ensure the json data is a string
        if (data['Title'] && !(typeof data['Title'] === 'string' || data['Title'] instanceof String)) {
            throw new Error("Expected the field `Title` to be a primitive type in the JSON string but got " + data['Title']);
        }

        return true;
    }


}



/**
 * @member {String} Airdate
 */
Episode.prototype['Airdate'] = undefined;

/**
 * @member {String} Airtime
 */
Episode.prototype['Airtime'] = undefined;

/**
 * @member {String} EpisodeNo
 */
Episode.prototype['EpisodeNo'] = undefined;

/**
 * @member {Array.<module:model/ExternalIDs>} Externals
 */
Episode.prototype['Externals'] = undefined;

/**
 * @member {String} Image
 */
Episode.prototype['Image'] = undefined;

/**
 * @member {String} Season
 */
Episode.prototype['Season'] = undefined;

/**
 * @member {String} Synopsis
 */
Episode.prototype['Synopsis'] = undefined;

/**
 * @member {String} Title
 */
Episode.prototype['Title'] = undefined;






export default Episode;

