/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShowStatus model module.
 * @module model/ShowStatus
 * @version v1
 */
class ShowStatus {
    /**
     * Constructs a new <code>ShowStatus</code>.
     * @alias module:model/ShowStatus
     */
    constructor() { 
        
        ShowStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShowStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShowStatus} obj Optional instance to populate.
     * @return {module:model/ShowStatus} The populated <code>ShowStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShowStatus();

            if (data.hasOwnProperty('Enddate')) {
                obj['Enddate'] = ApiClient.convertToType(data['Enddate'], 'String');
            }
            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'String');
            }
            if (data.hasOwnProperty('Title')) {
                obj['Title'] = ApiClient.convertToType(data['Title'], 'String');
            }
            if (data.hasOwnProperty('YearsOn')) {
                obj['YearsOn'] = ApiClient.convertToType(data['YearsOn'], 'String');
            }
            if (data.hasOwnProperty('imdbID')) {
                obj['imdbID'] = ApiClient.convertToType(data['imdbID'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('tvdbID')) {
                obj['tvdbID'] = ApiClient.convertToType(data['tvdbID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShowStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShowStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Enddate'] && !(typeof data['Enddate'] === 'string' || data['Enddate'] instanceof String)) {
            throw new Error("Expected the field `Enddate` to be a primitive type in the JSON string but got " + data['Enddate']);
        }
        // ensure the json data is a string
        if (data['ID'] && !(typeof data['ID'] === 'string' || data['ID'] instanceof String)) {
            throw new Error("Expected the field `ID` to be a primitive type in the JSON string but got " + data['ID']);
        }
        // ensure the json data is a string
        if (data['Title'] && !(typeof data['Title'] === 'string' || data['Title'] instanceof String)) {
            throw new Error("Expected the field `Title` to be a primitive type in the JSON string but got " + data['Title']);
        }
        // ensure the json data is a string
        if (data['YearsOn'] && !(typeof data['YearsOn'] === 'string' || data['YearsOn'] instanceof String)) {
            throw new Error("Expected the field `YearsOn` to be a primitive type in the JSON string but got " + data['YearsOn']);
        }
        // ensure the json data is a string
        if (data['imdbID'] && !(typeof data['imdbID'] === 'string' || data['imdbID'] instanceof String)) {
            throw new Error("Expected the field `imdbID` to be a primitive type in the JSON string but got " + data['imdbID']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['tvdbID'] && !(typeof data['tvdbID'] === 'string' || data['tvdbID'] instanceof String)) {
            throw new Error("Expected the field `tvdbID` to be a primitive type in the JSON string but got " + data['tvdbID']);
        }

        return true;
    }


}



/**
 * @member {String} Enddate
 */
ShowStatus.prototype['Enddate'] = undefined;

/**
 * @member {String} ID
 */
ShowStatus.prototype['ID'] = undefined;

/**
 * @member {String} Title
 */
ShowStatus.prototype['Title'] = undefined;

/**
 * @member {String} YearsOn
 */
ShowStatus.prototype['YearsOn'] = undefined;

/**
 * @member {String} imdbID
 */
ShowStatus.prototype['imdbID'] = undefined;

/**
 * @member {String} status
 */
ShowStatus.prototype['status'] = undefined;

/**
 * @member {String} tvdbID
 */
ShowStatus.prototype['tvdbID'] = undefined;






export default ShowStatus;

