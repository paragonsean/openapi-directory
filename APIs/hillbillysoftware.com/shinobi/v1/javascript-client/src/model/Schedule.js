/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Schedule model module.
 * @module model/Schedule
 * @version v1
 */
class Schedule {
    /**
     * Constructs a new <code>Schedule</code>.
     * @alias module:model/Schedule
     */
    constructor() { 
        
        Schedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Schedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Schedule} obj Optional instance to populate.
     * @return {module:model/Schedule} The populated <code>Schedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Schedule();

            if (data.hasOwnProperty('AirDate')) {
                obj['AirDate'] = ApiClient.convertToType(data['AirDate'], 'String');
            }
            if (data.hasOwnProperty('AirTime')) {
                obj['AirTime'] = ApiClient.convertToType(data['AirTime'], 'String');
            }
            if (data.hasOwnProperty('Country')) {
                obj['Country'] = ApiClient.convertToType(data['Country'], 'String');
            }
            if (data.hasOwnProperty('DaysOn')) {
                obj['DaysOn'] = ApiClient.convertToType(data['DaysOn'], 'String');
            }
            if (data.hasOwnProperty('Episode')) {
                obj['Episode'] = ApiClient.convertToType(data['Episode'], 'String');
            }
            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'String');
            }
            if (data.hasOwnProperty('Image')) {
                obj['Image'] = ApiClient.convertToType(data['Image'], 'String');
            }
            if (data.hasOwnProperty('Network')) {
                obj['Network'] = ApiClient.convertToType(data['Network'], 'String');
            }
            if (data.hasOwnProperty('PremiereDate')) {
                obj['PremiereDate'] = ApiClient.convertToType(data['PremiereDate'], 'String');
            }
            if (data.hasOwnProperty('Runtime')) {
                obj['Runtime'] = ApiClient.convertToType(data['Runtime'], 'String');
            }
            if (data.hasOwnProperty('Season')) {
                obj['Season'] = ApiClient.convertToType(data['Season'], 'String');
            }
            if (data.hasOwnProperty('ShowName')) {
                obj['ShowName'] = ApiClient.convertToType(data['ShowName'], 'String');
            }
            if (data.hasOwnProperty('Summary')) {
                obj['Summary'] = ApiClient.convertToType(data['Summary'], 'String');
            }
            if (data.hasOwnProperty('Title')) {
                obj['Title'] = ApiClient.convertToType(data['Title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Schedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Schedule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AirDate'] && !(typeof data['AirDate'] === 'string' || data['AirDate'] instanceof String)) {
            throw new Error("Expected the field `AirDate` to be a primitive type in the JSON string but got " + data['AirDate']);
        }
        // ensure the json data is a string
        if (data['AirTime'] && !(typeof data['AirTime'] === 'string' || data['AirTime'] instanceof String)) {
            throw new Error("Expected the field `AirTime` to be a primitive type in the JSON string but got " + data['AirTime']);
        }
        // ensure the json data is a string
        if (data['Country'] && !(typeof data['Country'] === 'string' || data['Country'] instanceof String)) {
            throw new Error("Expected the field `Country` to be a primitive type in the JSON string but got " + data['Country']);
        }
        // ensure the json data is a string
        if (data['DaysOn'] && !(typeof data['DaysOn'] === 'string' || data['DaysOn'] instanceof String)) {
            throw new Error("Expected the field `DaysOn` to be a primitive type in the JSON string but got " + data['DaysOn']);
        }
        // ensure the json data is a string
        if (data['Episode'] && !(typeof data['Episode'] === 'string' || data['Episode'] instanceof String)) {
            throw new Error("Expected the field `Episode` to be a primitive type in the JSON string but got " + data['Episode']);
        }
        // ensure the json data is a string
        if (data['ID'] && !(typeof data['ID'] === 'string' || data['ID'] instanceof String)) {
            throw new Error("Expected the field `ID` to be a primitive type in the JSON string but got " + data['ID']);
        }
        // ensure the json data is a string
        if (data['Image'] && !(typeof data['Image'] === 'string' || data['Image'] instanceof String)) {
            throw new Error("Expected the field `Image` to be a primitive type in the JSON string but got " + data['Image']);
        }
        // ensure the json data is a string
        if (data['Network'] && !(typeof data['Network'] === 'string' || data['Network'] instanceof String)) {
            throw new Error("Expected the field `Network` to be a primitive type in the JSON string but got " + data['Network']);
        }
        // ensure the json data is a string
        if (data['PremiereDate'] && !(typeof data['PremiereDate'] === 'string' || data['PremiereDate'] instanceof String)) {
            throw new Error("Expected the field `PremiereDate` to be a primitive type in the JSON string but got " + data['PremiereDate']);
        }
        // ensure the json data is a string
        if (data['Runtime'] && !(typeof data['Runtime'] === 'string' || data['Runtime'] instanceof String)) {
            throw new Error("Expected the field `Runtime` to be a primitive type in the JSON string but got " + data['Runtime']);
        }
        // ensure the json data is a string
        if (data['Season'] && !(typeof data['Season'] === 'string' || data['Season'] instanceof String)) {
            throw new Error("Expected the field `Season` to be a primitive type in the JSON string but got " + data['Season']);
        }
        // ensure the json data is a string
        if (data['ShowName'] && !(typeof data['ShowName'] === 'string' || data['ShowName'] instanceof String)) {
            throw new Error("Expected the field `ShowName` to be a primitive type in the JSON string but got " + data['ShowName']);
        }
        // ensure the json data is a string
        if (data['Summary'] && !(typeof data['Summary'] === 'string' || data['Summary'] instanceof String)) {
            throw new Error("Expected the field `Summary` to be a primitive type in the JSON string but got " + data['Summary']);
        }
        // ensure the json data is a string
        if (data['Title'] && !(typeof data['Title'] === 'string' || data['Title'] instanceof String)) {
            throw new Error("Expected the field `Title` to be a primitive type in the JSON string but got " + data['Title']);
        }

        return true;
    }


}



/**
 * @member {String} AirDate
 */
Schedule.prototype['AirDate'] = undefined;

/**
 * @member {String} AirTime
 */
Schedule.prototype['AirTime'] = undefined;

/**
 * @member {String} Country
 */
Schedule.prototype['Country'] = undefined;

/**
 * @member {String} DaysOn
 */
Schedule.prototype['DaysOn'] = undefined;

/**
 * @member {String} Episode
 */
Schedule.prototype['Episode'] = undefined;

/**
 * @member {String} ID
 */
Schedule.prototype['ID'] = undefined;

/**
 * @member {String} Image
 */
Schedule.prototype['Image'] = undefined;

/**
 * @member {String} Network
 */
Schedule.prototype['Network'] = undefined;

/**
 * @member {String} PremiereDate
 */
Schedule.prototype['PremiereDate'] = undefined;

/**
 * @member {String} Runtime
 */
Schedule.prototype['Runtime'] = undefined;

/**
 * @member {String} Season
 */
Schedule.prototype['Season'] = undefined;

/**
 * @member {String} ShowName
 */
Schedule.prototype['ShowName'] = undefined;

/**
 * @member {String} Summary
 */
Schedule.prototype['Summary'] = undefined;

/**
 * @member {String} Title
 */
Schedule.prototype['Title'] = undefined;






export default Schedule;

