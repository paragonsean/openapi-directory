/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LastAvailableSeason model module.
 * @module model/LastAvailableSeason
 * @version v1
 */
class LastAvailableSeason {
    /**
     * Constructs a new <code>LastAvailableSeason</code>.
     * @alias module:model/LastAvailableSeason
     */
    constructor() { 
        
        LastAvailableSeason.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LastAvailableSeason</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LastAvailableSeason} obj Optional instance to populate.
     * @return {module:model/LastAvailableSeason} The populated <code>LastAvailableSeason</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LastAvailableSeason();

            if (data.hasOwnProperty('Season')) {
                obj['Season'] = ApiClient.convertToType(data['Season'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LastAvailableSeason</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LastAvailableSeason</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Season'] && !(typeof data['Season'] === 'string' || data['Season'] instanceof String)) {
            throw new Error("Expected the field `Season` to be a primitive type in the JSON string but got " + data['Season']);
        }

        return true;
    }


}



/**
 * @member {String} Season
 */
LastAvailableSeason.prototype['Season'] = undefined;






export default LastAvailableSeason;

