/**
 * shinobiapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActorPost model module.
 * @module model/ActorPost
 * @version v1
 */
class ActorPost {
    /**
     * Constructs a new <code>ActorPost</code>.
     * @alias module:model/ActorPost
     */
    constructor() { 
        
        ActorPost.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActorPost</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActorPost} obj Optional instance to populate.
     * @return {module:model/ActorPost} The populated <code>ActorPost</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActorPost();

            if (data.hasOwnProperty('AccessToken')) {
                obj['AccessToken'] = ApiClient.convertToType(data['AccessToken'], 'String');
            }
            if (data.hasOwnProperty('Bio')) {
                obj['Bio'] = ApiClient.convertToType(data['Bio'], 'String');
            }
            if (data.hasOwnProperty('BirthYear')) {
                obj['BirthYear'] = ApiClient.convertToType(data['BirthYear'], 'String');
            }
            if (data.hasOwnProperty('DeathYear')) {
                obj['DeathYear'] = ApiClient.convertToType(data['DeathYear'], 'String');
            }
            if (data.hasOwnProperty('Gender')) {
                obj['Gender'] = ApiClient.convertToType(data['Gender'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('PopularityIndex')) {
                obj['PopularityIndex'] = ApiClient.convertToType(data['PopularityIndex'], 'String');
            }
            if (data.hasOwnProperty('ProfileImage')) {
                obj['ProfileImage'] = ApiClient.convertToType(data['ProfileImage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActorPost</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActorPost</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AccessToken'] && !(typeof data['AccessToken'] === 'string' || data['AccessToken'] instanceof String)) {
            throw new Error("Expected the field `AccessToken` to be a primitive type in the JSON string but got " + data['AccessToken']);
        }
        // ensure the json data is a string
        if (data['Bio'] && !(typeof data['Bio'] === 'string' || data['Bio'] instanceof String)) {
            throw new Error("Expected the field `Bio` to be a primitive type in the JSON string but got " + data['Bio']);
        }
        // ensure the json data is a string
        if (data['BirthYear'] && !(typeof data['BirthYear'] === 'string' || data['BirthYear'] instanceof String)) {
            throw new Error("Expected the field `BirthYear` to be a primitive type in the JSON string but got " + data['BirthYear']);
        }
        // ensure the json data is a string
        if (data['DeathYear'] && !(typeof data['DeathYear'] === 'string' || data['DeathYear'] instanceof String)) {
            throw new Error("Expected the field `DeathYear` to be a primitive type in the JSON string but got " + data['DeathYear']);
        }
        // ensure the json data is a string
        if (data['Gender'] && !(typeof data['Gender'] === 'string' || data['Gender'] instanceof String)) {
            throw new Error("Expected the field `Gender` to be a primitive type in the JSON string but got " + data['Gender']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['PopularityIndex'] && !(typeof data['PopularityIndex'] === 'string' || data['PopularityIndex'] instanceof String)) {
            throw new Error("Expected the field `PopularityIndex` to be a primitive type in the JSON string but got " + data['PopularityIndex']);
        }
        // ensure the json data is a string
        if (data['ProfileImage'] && !(typeof data['ProfileImage'] === 'string' || data['ProfileImage'] instanceof String)) {
            throw new Error("Expected the field `ProfileImage` to be a primitive type in the JSON string but got " + data['ProfileImage']);
        }

        return true;
    }


}



/**
 * @member {String} AccessToken
 */
ActorPost.prototype['AccessToken'] = undefined;

/**
 * @member {String} Bio
 */
ActorPost.prototype['Bio'] = undefined;

/**
 * @member {String} BirthYear
 */
ActorPost.prototype['BirthYear'] = undefined;

/**
 * @member {String} DeathYear
 */
ActorPost.prototype['DeathYear'] = undefined;

/**
 * @member {String} Gender
 */
ActorPost.prototype['Gender'] = undefined;

/**
 * @member {String} Name
 */
ActorPost.prototype['Name'] = undefined;

/**
 * @member {String} PopularityIndex
 */
ActorPost.prototype['PopularityIndex'] = undefined;

/**
 * @member {String} ProfileImage
 */
ActorPost.prototype['ProfileImage'] = undefined;






export default ActorPost;

