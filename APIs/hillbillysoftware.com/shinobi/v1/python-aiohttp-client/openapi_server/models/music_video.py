# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MusicVideo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, album_id: str=None, artist_id: str=None, decription: str=None, video: str=None):
        """MusicVideo - a model defined in OpenAPI

        :param album_id: The album_id of this MusicVideo.
        :param artist_id: The artist_id of this MusicVideo.
        :param decription: The decription of this MusicVideo.
        :param video: The video of this MusicVideo.
        """
        self.openapi_types = {
            'album_id': str,
            'artist_id': str,
            'decription': str,
            'video': str
        }

        self.attribute_map = {
            'album_id': 'AlbumID',
            'artist_id': 'ArtistID',
            'decription': 'Decription',
            'video': 'Video'
        }

        self._album_id = album_id
        self._artist_id = artist_id
        self._decription = decription
        self._video = video

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MusicVideo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MusicVideo of this MusicVideo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def album_id(self):
        """Gets the album_id of this MusicVideo.


        :return: The album_id of this MusicVideo.
        :rtype: str
        """
        return self._album_id

    @album_id.setter
    def album_id(self, album_id):
        """Sets the album_id of this MusicVideo.


        :param album_id: The album_id of this MusicVideo.
        :type album_id: str
        """

        self._album_id = album_id

    @property
    def artist_id(self):
        """Gets the artist_id of this MusicVideo.


        :return: The artist_id of this MusicVideo.
        :rtype: str
        """
        return self._artist_id

    @artist_id.setter
    def artist_id(self, artist_id):
        """Sets the artist_id of this MusicVideo.


        :param artist_id: The artist_id of this MusicVideo.
        :type artist_id: str
        """

        self._artist_id = artist_id

    @property
    def decription(self):
        """Gets the decription of this MusicVideo.


        :return: The decription of this MusicVideo.
        :rtype: str
        """
        return self._decription

    @decription.setter
    def decription(self, decription):
        """Sets the decription of this MusicVideo.


        :param decription: The decription of this MusicVideo.
        :type decription: str
        """

        self._decription = decription

    @property
    def video(self):
        """Gets the video of this MusicVideo.


        :return: The video of this MusicVideo.
        :rtype: str
        """
        return self._video

    @video.setter
    def video(self, video):
        """Sets the video of this MusicVideo.


        :param video: The video of this MusicVideo.
        :type video: str
        """

        self._video = video
