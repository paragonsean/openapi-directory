# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Lyric(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, album_id: str=None, artist: str=None, lyrics: str=None, song: str=None):
        """Lyric - a model defined in OpenAPI

        :param album_id: The album_id of this Lyric.
        :param artist: The artist of this Lyric.
        :param lyrics: The lyrics of this Lyric.
        :param song: The song of this Lyric.
        """
        self.openapi_types = {
            'album_id': str,
            'artist': str,
            'lyrics': str,
            'song': str
        }

        self.attribute_map = {
            'album_id': 'AlbumID',
            'artist': 'Artist',
            'lyrics': 'Lyrics',
            'song': 'Song'
        }

        self._album_id = album_id
        self._artist = artist
        self._lyrics = lyrics
        self._song = song

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Lyric':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Lyric of this Lyric.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def album_id(self):
        """Gets the album_id of this Lyric.


        :return: The album_id of this Lyric.
        :rtype: str
        """
        return self._album_id

    @album_id.setter
    def album_id(self, album_id):
        """Sets the album_id of this Lyric.


        :param album_id: The album_id of this Lyric.
        :type album_id: str
        """

        self._album_id = album_id

    @property
    def artist(self):
        """Gets the artist of this Lyric.


        :return: The artist of this Lyric.
        :rtype: str
        """
        return self._artist

    @artist.setter
    def artist(self, artist):
        """Sets the artist of this Lyric.


        :param artist: The artist of this Lyric.
        :type artist: str
        """

        self._artist = artist

    @property
    def lyrics(self):
        """Gets the lyrics of this Lyric.


        :return: The lyrics of this Lyric.
        :rtype: str
        """
        return self._lyrics

    @lyrics.setter
    def lyrics(self, lyrics):
        """Sets the lyrics of this Lyric.


        :param lyrics: The lyrics of this Lyric.
        :type lyrics: str
        """

        self._lyrics = lyrics

    @property
    def song(self):
        """Gets the song of this Lyric.


        :return: The song of this Lyric.
        :rtype: str
        """
        return self._song

    @song.setter
    def song(self, song):
        """Sets the song of this Lyric.


        :param song: The song of this Lyric.
        :type song: str
        """

        self._song = song
