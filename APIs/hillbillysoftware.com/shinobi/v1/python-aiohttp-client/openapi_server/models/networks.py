# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Networks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, network: str=None):
        """Networks - a model defined in OpenAPI

        :param country: The country of this Networks.
        :param network: The network of this Networks.
        """
        self.openapi_types = {
            'country': str,
            'network': str
        }

        self.attribute_map = {
            'country': 'Country',
            'network': 'Network'
        }

        self._country = country
        self._network = network

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Networks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Networks of this Networks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this Networks.


        :return: The country of this Networks.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this Networks.


        :param country: The country of this Networks.
        :type country: str
        """

        self._country = country

    @property
    def network(self):
        """Gets the network of this Networks.


        :return: The network of this Networks.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this Networks.


        :param network: The network of this Networks.
        :type network: str
        """

        self._network = network
