# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CDCoverArt(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cover_image: str=None, cover_thumb_medium: str=None, cover_thumb_small: str=None, cover_type: str=None, music_brainz_id: str=None):
        """CDCoverArt - a model defined in OpenAPI

        :param cover_image: The cover_image of this CDCoverArt.
        :param cover_thumb_medium: The cover_thumb_medium of this CDCoverArt.
        :param cover_thumb_small: The cover_thumb_small of this CDCoverArt.
        :param cover_type: The cover_type of this CDCoverArt.
        :param music_brainz_id: The music_brainz_id of this CDCoverArt.
        """
        self.openapi_types = {
            'cover_image': str,
            'cover_thumb_medium': str,
            'cover_thumb_small': str,
            'cover_type': str,
            'music_brainz_id': str
        }

        self.attribute_map = {
            'cover_image': 'CoverImage',
            'cover_thumb_medium': 'CoverThumbMedium',
            'cover_thumb_small': 'CoverThumbSmall',
            'cover_type': 'CoverType',
            'music_brainz_id': 'MusicBrainzID'
        }

        self._cover_image = cover_image
        self._cover_thumb_medium = cover_thumb_medium
        self._cover_thumb_small = cover_thumb_small
        self._cover_type = cover_type
        self._music_brainz_id = music_brainz_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CDCoverArt':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CDCoverArt of this CDCoverArt.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cover_image(self):
        """Gets the cover_image of this CDCoverArt.


        :return: The cover_image of this CDCoverArt.
        :rtype: str
        """
        return self._cover_image

    @cover_image.setter
    def cover_image(self, cover_image):
        """Sets the cover_image of this CDCoverArt.


        :param cover_image: The cover_image of this CDCoverArt.
        :type cover_image: str
        """

        self._cover_image = cover_image

    @property
    def cover_thumb_medium(self):
        """Gets the cover_thumb_medium of this CDCoverArt.


        :return: The cover_thumb_medium of this CDCoverArt.
        :rtype: str
        """
        return self._cover_thumb_medium

    @cover_thumb_medium.setter
    def cover_thumb_medium(self, cover_thumb_medium):
        """Sets the cover_thumb_medium of this CDCoverArt.


        :param cover_thumb_medium: The cover_thumb_medium of this CDCoverArt.
        :type cover_thumb_medium: str
        """

        self._cover_thumb_medium = cover_thumb_medium

    @property
    def cover_thumb_small(self):
        """Gets the cover_thumb_small of this CDCoverArt.


        :return: The cover_thumb_small of this CDCoverArt.
        :rtype: str
        """
        return self._cover_thumb_small

    @cover_thumb_small.setter
    def cover_thumb_small(self, cover_thumb_small):
        """Sets the cover_thumb_small of this CDCoverArt.


        :param cover_thumb_small: The cover_thumb_small of this CDCoverArt.
        :type cover_thumb_small: str
        """

        self._cover_thumb_small = cover_thumb_small

    @property
    def cover_type(self):
        """Gets the cover_type of this CDCoverArt.


        :return: The cover_type of this CDCoverArt.
        :rtype: str
        """
        return self._cover_type

    @cover_type.setter
    def cover_type(self, cover_type):
        """Sets the cover_type of this CDCoverArt.


        :param cover_type: The cover_type of this CDCoverArt.
        :type cover_type: str
        """

        self._cover_type = cover_type

    @property
    def music_brainz_id(self):
        """Gets the music_brainz_id of this CDCoverArt.


        :return: The music_brainz_id of this CDCoverArt.
        :rtype: str
        """
        return self._music_brainz_id

    @music_brainz_id.setter
    def music_brainz_id(self, music_brainz_id):
        """Sets the music_brainz_id of this CDCoverArt.


        :param music_brainz_id: The music_brainz_id of this CDCoverArt.
        :type music_brainz_id: str
        """

        self._music_brainz_id = music_brainz_id
