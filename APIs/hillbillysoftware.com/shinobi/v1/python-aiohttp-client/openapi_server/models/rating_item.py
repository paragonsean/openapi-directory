# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RatingItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, episo_date: str=None, imdb: str=None, meta_critics: str=None, name: str=None, rotten_tomatoes: str=None, rotten_tomatoes_audience_score: str=None, tvdb: str=None, tv_maze: str=None, trakt: str=None, imdb_id: str=None):
        """RatingItem - a model defined in OpenAPI

        :param episo_date: The episo_date of this RatingItem.
        :param imdb: The imdb of this RatingItem.
        :param meta_critics: The meta_critics of this RatingItem.
        :param name: The name of this RatingItem.
        :param rotten_tomatoes: The rotten_tomatoes of this RatingItem.
        :param rotten_tomatoes_audience_score: The rotten_tomatoes_audience_score of this RatingItem.
        :param tvdb: The tvdb of this RatingItem.
        :param tv_maze: The tv_maze of this RatingItem.
        :param trakt: The trakt of this RatingItem.
        :param imdb_id: The imdb_id of this RatingItem.
        """
        self.openapi_types = {
            'episo_date': str,
            'imdb': str,
            'meta_critics': str,
            'name': str,
            'rotten_tomatoes': str,
            'rotten_tomatoes_audience_score': str,
            'tvdb': str,
            'tv_maze': str,
            'trakt': str,
            'imdb_id': str
        }

        self.attribute_map = {
            'episo_date': 'EpisoDate',
            'imdb': 'IMDB',
            'meta_critics': 'MetaCritics',
            'name': 'Name',
            'rotten_tomatoes': 'RottenTomatoes',
            'rotten_tomatoes_audience_score': 'RottenTomatoesAudienceScore',
            'tvdb': 'TVDB',
            'tv_maze': 'TVMaze',
            'trakt': 'Trakt',
            'imdb_id': 'imdbID'
        }

        self._episo_date = episo_date
        self._imdb = imdb
        self._meta_critics = meta_critics
        self._name = name
        self._rotten_tomatoes = rotten_tomatoes
        self._rotten_tomatoes_audience_score = rotten_tomatoes_audience_score
        self._tvdb = tvdb
        self._tv_maze = tv_maze
        self._trakt = trakt
        self._imdb_id = imdb_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RatingItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RatingItem of this RatingItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def episo_date(self):
        """Gets the episo_date of this RatingItem.


        :return: The episo_date of this RatingItem.
        :rtype: str
        """
        return self._episo_date

    @episo_date.setter
    def episo_date(self, episo_date):
        """Sets the episo_date of this RatingItem.


        :param episo_date: The episo_date of this RatingItem.
        :type episo_date: str
        """

        self._episo_date = episo_date

    @property
    def imdb(self):
        """Gets the imdb of this RatingItem.


        :return: The imdb of this RatingItem.
        :rtype: str
        """
        return self._imdb

    @imdb.setter
    def imdb(self, imdb):
        """Sets the imdb of this RatingItem.


        :param imdb: The imdb of this RatingItem.
        :type imdb: str
        """

        self._imdb = imdb

    @property
    def meta_critics(self):
        """Gets the meta_critics of this RatingItem.


        :return: The meta_critics of this RatingItem.
        :rtype: str
        """
        return self._meta_critics

    @meta_critics.setter
    def meta_critics(self, meta_critics):
        """Sets the meta_critics of this RatingItem.


        :param meta_critics: The meta_critics of this RatingItem.
        :type meta_critics: str
        """

        self._meta_critics = meta_critics

    @property
    def name(self):
        """Gets the name of this RatingItem.


        :return: The name of this RatingItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RatingItem.


        :param name: The name of this RatingItem.
        :type name: str
        """

        self._name = name

    @property
    def rotten_tomatoes(self):
        """Gets the rotten_tomatoes of this RatingItem.


        :return: The rotten_tomatoes of this RatingItem.
        :rtype: str
        """
        return self._rotten_tomatoes

    @rotten_tomatoes.setter
    def rotten_tomatoes(self, rotten_tomatoes):
        """Sets the rotten_tomatoes of this RatingItem.


        :param rotten_tomatoes: The rotten_tomatoes of this RatingItem.
        :type rotten_tomatoes: str
        """

        self._rotten_tomatoes = rotten_tomatoes

    @property
    def rotten_tomatoes_audience_score(self):
        """Gets the rotten_tomatoes_audience_score of this RatingItem.


        :return: The rotten_tomatoes_audience_score of this RatingItem.
        :rtype: str
        """
        return self._rotten_tomatoes_audience_score

    @rotten_tomatoes_audience_score.setter
    def rotten_tomatoes_audience_score(self, rotten_tomatoes_audience_score):
        """Sets the rotten_tomatoes_audience_score of this RatingItem.


        :param rotten_tomatoes_audience_score: The rotten_tomatoes_audience_score of this RatingItem.
        :type rotten_tomatoes_audience_score: str
        """

        self._rotten_tomatoes_audience_score = rotten_tomatoes_audience_score

    @property
    def tvdb(self):
        """Gets the tvdb of this RatingItem.


        :return: The tvdb of this RatingItem.
        :rtype: str
        """
        return self._tvdb

    @tvdb.setter
    def tvdb(self, tvdb):
        """Sets the tvdb of this RatingItem.


        :param tvdb: The tvdb of this RatingItem.
        :type tvdb: str
        """

        self._tvdb = tvdb

    @property
    def tv_maze(self):
        """Gets the tv_maze of this RatingItem.


        :return: The tv_maze of this RatingItem.
        :rtype: str
        """
        return self._tv_maze

    @tv_maze.setter
    def tv_maze(self, tv_maze):
        """Sets the tv_maze of this RatingItem.


        :param tv_maze: The tv_maze of this RatingItem.
        :type tv_maze: str
        """

        self._tv_maze = tv_maze

    @property
    def trakt(self):
        """Gets the trakt of this RatingItem.


        :return: The trakt of this RatingItem.
        :rtype: str
        """
        return self._trakt

    @trakt.setter
    def trakt(self, trakt):
        """Sets the trakt of this RatingItem.


        :param trakt: The trakt of this RatingItem.
        :type trakt: str
        """

        self._trakt = trakt

    @property
    def imdb_id(self):
        """Gets the imdb_id of this RatingItem.


        :return: The imdb_id of this RatingItem.
        :rtype: str
        """
        return self._imdb_id

    @imdb_id.setter
    def imdb_id(self, imdb_id):
        """Sets the imdb_id of this RatingItem.


        :param imdb_id: The imdb_id of this RatingItem.
        :type imdb_id: str
        """

        self._imdb_id = imdb_id
