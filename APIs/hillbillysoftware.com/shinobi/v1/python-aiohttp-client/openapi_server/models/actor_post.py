# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActorPost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_token: str=None, bio: str=None, birth_year: str=None, death_year: str=None, gender: str=None, name: str=None, popularity_index: str=None, profile_image: str=None):
        """ActorPost - a model defined in OpenAPI

        :param access_token: The access_token of this ActorPost.
        :param bio: The bio of this ActorPost.
        :param birth_year: The birth_year of this ActorPost.
        :param death_year: The death_year of this ActorPost.
        :param gender: The gender of this ActorPost.
        :param name: The name of this ActorPost.
        :param popularity_index: The popularity_index of this ActorPost.
        :param profile_image: The profile_image of this ActorPost.
        """
        self.openapi_types = {
            'access_token': str,
            'bio': str,
            'birth_year': str,
            'death_year': str,
            'gender': str,
            'name': str,
            'popularity_index': str,
            'profile_image': str
        }

        self.attribute_map = {
            'access_token': 'AccessToken',
            'bio': 'Bio',
            'birth_year': 'BirthYear',
            'death_year': 'DeathYear',
            'gender': 'Gender',
            'name': 'Name',
            'popularity_index': 'PopularityIndex',
            'profile_image': 'ProfileImage'
        }

        self._access_token = access_token
        self._bio = bio
        self._birth_year = birth_year
        self._death_year = death_year
        self._gender = gender
        self._name = name
        self._popularity_index = popularity_index
        self._profile_image = profile_image

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActorPost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActorPost of this ActorPost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token(self):
        """Gets the access_token of this ActorPost.


        :return: The access_token of this ActorPost.
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this ActorPost.


        :param access_token: The access_token of this ActorPost.
        :type access_token: str
        """

        self._access_token = access_token

    @property
    def bio(self):
        """Gets the bio of this ActorPost.


        :return: The bio of this ActorPost.
        :rtype: str
        """
        return self._bio

    @bio.setter
    def bio(self, bio):
        """Sets the bio of this ActorPost.


        :param bio: The bio of this ActorPost.
        :type bio: str
        """

        self._bio = bio

    @property
    def birth_year(self):
        """Gets the birth_year of this ActorPost.


        :return: The birth_year of this ActorPost.
        :rtype: str
        """
        return self._birth_year

    @birth_year.setter
    def birth_year(self, birth_year):
        """Sets the birth_year of this ActorPost.


        :param birth_year: The birth_year of this ActorPost.
        :type birth_year: str
        """

        self._birth_year = birth_year

    @property
    def death_year(self):
        """Gets the death_year of this ActorPost.


        :return: The death_year of this ActorPost.
        :rtype: str
        """
        return self._death_year

    @death_year.setter
    def death_year(self, death_year):
        """Sets the death_year of this ActorPost.


        :param death_year: The death_year of this ActorPost.
        :type death_year: str
        """

        self._death_year = death_year

    @property
    def gender(self):
        """Gets the gender of this ActorPost.


        :return: The gender of this ActorPost.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this ActorPost.


        :param gender: The gender of this ActorPost.
        :type gender: str
        """

        self._gender = gender

    @property
    def name(self):
        """Gets the name of this ActorPost.


        :return: The name of this ActorPost.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ActorPost.


        :param name: The name of this ActorPost.
        :type name: str
        """

        self._name = name

    @property
    def popularity_index(self):
        """Gets the popularity_index of this ActorPost.


        :return: The popularity_index of this ActorPost.
        :rtype: str
        """
        return self._popularity_index

    @popularity_index.setter
    def popularity_index(self, popularity_index):
        """Sets the popularity_index of this ActorPost.


        :param popularity_index: The popularity_index of this ActorPost.
        :type popularity_index: str
        """

        self._popularity_index = popularity_index

    @property
    def profile_image(self):
        """Gets the profile_image of this ActorPost.


        :return: The profile_image of this ActorPost.
        :rtype: str
        """
        return self._profile_image

    @profile_image.setter
    def profile_image(self, profile_image):
        """Sets the profile_image of this ActorPost.


        :param profile_image: The profile_image of this ActorPost.
        :type profile_image: str
        """

        self._profile_image = profile_image
