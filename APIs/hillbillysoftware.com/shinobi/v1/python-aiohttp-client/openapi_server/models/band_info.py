# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BandInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artist_id: str=None, banner: str=None, biography: str=None, disbanded_year: str=None, formation_year: str=None, genre: str=None, logo: str=None, members: str=None, music_brainz_id: str=None, name: str=None, social_media: str=None, web_site: str=None):
        """BandInfo - a model defined in OpenAPI

        :param artist_id: The artist_id of this BandInfo.
        :param banner: The banner of this BandInfo.
        :param biography: The biography of this BandInfo.
        :param disbanded_year: The disbanded_year of this BandInfo.
        :param formation_year: The formation_year of this BandInfo.
        :param genre: The genre of this BandInfo.
        :param logo: The logo of this BandInfo.
        :param members: The members of this BandInfo.
        :param music_brainz_id: The music_brainz_id of this BandInfo.
        :param name: The name of this BandInfo.
        :param social_media: The social_media of this BandInfo.
        :param web_site: The web_site of this BandInfo.
        """
        self.openapi_types = {
            'artist_id': str,
            'banner': str,
            'biography': str,
            'disbanded_year': str,
            'formation_year': str,
            'genre': str,
            'logo': str,
            'members': str,
            'music_brainz_id': str,
            'name': str,
            'social_media': str,
            'web_site': str
        }

        self.attribute_map = {
            'artist_id': 'ArtistID',
            'banner': 'Banner',
            'biography': 'Biography',
            'disbanded_year': 'DisbandedYear',
            'formation_year': 'FormationYear',
            'genre': 'Genre',
            'logo': 'Logo',
            'members': 'Members',
            'music_brainz_id': 'MusicBrainzID',
            'name': 'Name',
            'social_media': 'SocialMedia',
            'web_site': 'WebSite'
        }

        self._artist_id = artist_id
        self._banner = banner
        self._biography = biography
        self._disbanded_year = disbanded_year
        self._formation_year = formation_year
        self._genre = genre
        self._logo = logo
        self._members = members
        self._music_brainz_id = music_brainz_id
        self._name = name
        self._social_media = social_media
        self._web_site = web_site

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BandInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BandInfo of this BandInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artist_id(self):
        """Gets the artist_id of this BandInfo.


        :return: The artist_id of this BandInfo.
        :rtype: str
        """
        return self._artist_id

    @artist_id.setter
    def artist_id(self, artist_id):
        """Sets the artist_id of this BandInfo.


        :param artist_id: The artist_id of this BandInfo.
        :type artist_id: str
        """

        self._artist_id = artist_id

    @property
    def banner(self):
        """Gets the banner of this BandInfo.


        :return: The banner of this BandInfo.
        :rtype: str
        """
        return self._banner

    @banner.setter
    def banner(self, banner):
        """Sets the banner of this BandInfo.


        :param banner: The banner of this BandInfo.
        :type banner: str
        """

        self._banner = banner

    @property
    def biography(self):
        """Gets the biography of this BandInfo.


        :return: The biography of this BandInfo.
        :rtype: str
        """
        return self._biography

    @biography.setter
    def biography(self, biography):
        """Sets the biography of this BandInfo.


        :param biography: The biography of this BandInfo.
        :type biography: str
        """

        self._biography = biography

    @property
    def disbanded_year(self):
        """Gets the disbanded_year of this BandInfo.


        :return: The disbanded_year of this BandInfo.
        :rtype: str
        """
        return self._disbanded_year

    @disbanded_year.setter
    def disbanded_year(self, disbanded_year):
        """Sets the disbanded_year of this BandInfo.


        :param disbanded_year: The disbanded_year of this BandInfo.
        :type disbanded_year: str
        """

        self._disbanded_year = disbanded_year

    @property
    def formation_year(self):
        """Gets the formation_year of this BandInfo.


        :return: The formation_year of this BandInfo.
        :rtype: str
        """
        return self._formation_year

    @formation_year.setter
    def formation_year(self, formation_year):
        """Sets the formation_year of this BandInfo.


        :param formation_year: The formation_year of this BandInfo.
        :type formation_year: str
        """

        self._formation_year = formation_year

    @property
    def genre(self):
        """Gets the genre of this BandInfo.


        :return: The genre of this BandInfo.
        :rtype: str
        """
        return self._genre

    @genre.setter
    def genre(self, genre):
        """Sets the genre of this BandInfo.


        :param genre: The genre of this BandInfo.
        :type genre: str
        """

        self._genre = genre

    @property
    def logo(self):
        """Gets the logo of this BandInfo.


        :return: The logo of this BandInfo.
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this BandInfo.


        :param logo: The logo of this BandInfo.
        :type logo: str
        """

        self._logo = logo

    @property
    def members(self):
        """Gets the members of this BandInfo.


        :return: The members of this BandInfo.
        :rtype: str
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this BandInfo.


        :param members: The members of this BandInfo.
        :type members: str
        """

        self._members = members

    @property
    def music_brainz_id(self):
        """Gets the music_brainz_id of this BandInfo.


        :return: The music_brainz_id of this BandInfo.
        :rtype: str
        """
        return self._music_brainz_id

    @music_brainz_id.setter
    def music_brainz_id(self, music_brainz_id):
        """Sets the music_brainz_id of this BandInfo.


        :param music_brainz_id: The music_brainz_id of this BandInfo.
        :type music_brainz_id: str
        """

        self._music_brainz_id = music_brainz_id

    @property
    def name(self):
        """Gets the name of this BandInfo.


        :return: The name of this BandInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BandInfo.


        :param name: The name of this BandInfo.
        :type name: str
        """

        self._name = name

    @property
    def social_media(self):
        """Gets the social_media of this BandInfo.


        :return: The social_media of this BandInfo.
        :rtype: str
        """
        return self._social_media

    @social_media.setter
    def social_media(self, social_media):
        """Sets the social_media of this BandInfo.


        :param social_media: The social_media of this BandInfo.
        :type social_media: str
        """

        self._social_media = social_media

    @property
    def web_site(self):
        """Gets the web_site of this BandInfo.


        :return: The web_site of this BandInfo.
        :rtype: str
        """
        return self._web_site

    @web_site.setter
    def web_site(self, web_site):
        """Sets the web_site of this BandInfo.


        :param web_site: The web_site of this BandInfo.
        :type web_site: str
        """

        self._web_site = web_site
