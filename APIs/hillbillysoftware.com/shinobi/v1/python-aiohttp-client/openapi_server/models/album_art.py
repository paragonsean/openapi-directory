# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AlbumArt(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, album_id: str=None, albumname: str=None, art: str=None):
        """AlbumArt - a model defined in OpenAPI

        :param album_id: The album_id of this AlbumArt.
        :param albumname: The albumname of this AlbumArt.
        :param art: The art of this AlbumArt.
        """
        self.openapi_types = {
            'album_id': str,
            'albumname': str,
            'art': str
        }

        self.attribute_map = {
            'album_id': 'AlbumID',
            'albumname': 'Albumname',
            'art': 'Art'
        }

        self._album_id = album_id
        self._albumname = albumname
        self._art = art

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlbumArt':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlbumArt of this AlbumArt.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def album_id(self):
        """Gets the album_id of this AlbumArt.


        :return: The album_id of this AlbumArt.
        :rtype: str
        """
        return self._album_id

    @album_id.setter
    def album_id(self, album_id):
        """Sets the album_id of this AlbumArt.


        :param album_id: The album_id of this AlbumArt.
        :type album_id: str
        """

        self._album_id = album_id

    @property
    def albumname(self):
        """Gets the albumname of this AlbumArt.


        :return: The albumname of this AlbumArt.
        :rtype: str
        """
        return self._albumname

    @albumname.setter
    def albumname(self, albumname):
        """Sets the albumname of this AlbumArt.


        :param albumname: The albumname of this AlbumArt.
        :type albumname: str
        """

        self._albumname = albumname

    @property
    def art(self):
        """Gets the art of this AlbumArt.


        :return: The art of this AlbumArt.
        :rtype: str
        """
        return self._art

    @art.setter
    def art(self, art):
        """Sets the art of this AlbumArt.


        :param art: The art of this AlbumArt.
        :type art: str
        """

        self._art = art
