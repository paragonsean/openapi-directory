# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.external_ids import ExternalIDs
from openapi_server import util


class Aliases(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aka: str=None, external_ids: List[ExternalIDs]=None, name: str=None, original_name: str=None):
        """Aliases - a model defined in OpenAPI

        :param aka: The aka of this Aliases.
        :param external_ids: The external_ids of this Aliases.
        :param name: The name of this Aliases.
        :param original_name: The original_name of this Aliases.
        """
        self.openapi_types = {
            'aka': str,
            'external_ids': List[ExternalIDs],
            'name': str,
            'original_name': str
        }

        self.attribute_map = {
            'aka': 'Aka',
            'external_ids': 'ExternalIDs',
            'name': 'Name',
            'original_name': 'OriginalName'
        }

        self._aka = aka
        self._external_ids = external_ids
        self._name = name
        self._original_name = original_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Aliases':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Aliases of this Aliases.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aka(self):
        """Gets the aka of this Aliases.


        :return: The aka of this Aliases.
        :rtype: str
        """
        return self._aka

    @aka.setter
    def aka(self, aka):
        """Sets the aka of this Aliases.


        :param aka: The aka of this Aliases.
        :type aka: str
        """

        self._aka = aka

    @property
    def external_ids(self):
        """Gets the external_ids of this Aliases.


        :return: The external_ids of this Aliases.
        :rtype: List[ExternalIDs]
        """
        return self._external_ids

    @external_ids.setter
    def external_ids(self, external_ids):
        """Sets the external_ids of this Aliases.


        :param external_ids: The external_ids of this Aliases.
        :type external_ids: List[ExternalIDs]
        """

        self._external_ids = external_ids

    @property
    def name(self):
        """Gets the name of this Aliases.


        :return: The name of this Aliases.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Aliases.


        :param name: The name of this Aliases.
        :type name: str
        """

        self._name = name

    @property
    def original_name(self):
        """Gets the original_name of this Aliases.


        :return: The original_name of this Aliases.
        :rtype: str
        """
        return self._original_name

    @original_name.setter
    def original_name(self, original_name):
        """Sets the original_name of this Aliases.


        :param original_name: The original_name of this Aliases.
        :type original_name: str
        """

        self._original_name = original_name
