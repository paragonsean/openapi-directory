# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LastAvailableSeason(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, season: str=None):
        """LastAvailableSeason - a model defined in OpenAPI

        :param season: The season of this LastAvailableSeason.
        """
        self.openapi_types = {
            'season': str
        }

        self.attribute_map = {
            'season': 'Season'
        }

        self._season = season

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LastAvailableSeason':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LastAvailableSeason of this LastAvailableSeason.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def season(self):
        """Gets the season of this LastAvailableSeason.


        :return: The season of this LastAvailableSeason.
        :rtype: str
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this LastAvailableSeason.


        :param season: The season of this LastAvailableSeason.
        :type season: str
        """

        self._season = season
