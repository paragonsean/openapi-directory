/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AnyEvent;
import org.openapitools.client.model.ChannelCreatedEvent;
import org.openapitools.client.model.ChannelDeletedEvent;
import org.openapitools.client.model.ChannelFrozenEvent;
import org.openapitools.client.model.ChannelHiddenEvent;
import org.openapitools.client.model.ChannelKickedEvent;
import org.openapitools.client.model.ChannelMember;
import org.openapitools.client.model.ChannelMessages;
import org.openapitools.client.model.ChannelMutedEvent;
import org.openapitools.client.model.ChannelResponse;
import org.openapitools.client.model.ChannelTruncatedEvent;
import org.openapitools.client.model.ChannelUnFrozenEvent;
import org.openapitools.client.model.ChannelUnmutedEvent;
import org.openapitools.client.model.ChannelUpdatedEvent;
import org.openapitools.client.model.ChannelVisibleEvent;
import org.openapitools.client.model.Flag;
import org.openapitools.client.model.HealthCheckEvent;
import org.openapitools.client.model.MemberAddedEvent;
import org.openapitools.client.model.MemberRemovedEvent;
import org.openapitools.client.model.MemberUpdatedEvent;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.MessageDeletedEvent;
import org.openapitools.client.model.MessageFlaggedEvent;
import org.openapitools.client.model.MessageNewEvent;
import org.openapitools.client.model.MessageReadEvent;
import org.openapitools.client.model.MessageUnblockedEvent;
import org.openapitools.client.model.MessageUpdatedEvent;
import org.openapitools.client.model.NotificationAddedToChannelEvent;
import org.openapitools.client.model.NotificationChannelDeletedEvent;
import org.openapitools.client.model.NotificationChannelMutesUpdatedEvent;
import org.openapitools.client.model.NotificationChannelTruncatedEvent;
import org.openapitools.client.model.NotificationInviteAcceptedEvent;
import org.openapitools.client.model.NotificationInviteRejectedEvent;
import org.openapitools.client.model.NotificationInvitedEvent;
import org.openapitools.client.model.NotificationMarkReadEvent;
import org.openapitools.client.model.NotificationMarkUnreadEvent;
import org.openapitools.client.model.NotificationMutesUpdatedEvent;
import org.openapitools.client.model.NotificationNewMessageEvent;
import org.openapitools.client.model.NotificationRemovedFromChannelEvent;
import org.openapitools.client.model.OwnUser;
import org.openapitools.client.model.Reaction;
import org.openapitools.client.model.ReactionDeletedEvent;
import org.openapitools.client.model.ReactionNewEvent;
import org.openapitools.client.model.ReactionUpdatedEvent;
import org.openapitools.client.model.TypingStartEvent;
import org.openapitools.client.model.TypingStopEvent;
import org.openapitools.client.model.UserBannedEvent;
import org.openapitools.client.model.UserDeactivatedEvent;
import org.openapitools.client.model.UserDeletedEvent;
import org.openapitools.client.model.UserFlaggedEvent;
import org.openapitools.client.model.UserMutedEvent;
import org.openapitools.client.model.UserObject;
import org.openapitools.client.model.UserPresenceChangedEvent;
import org.openapitools.client.model.UserReactivatedEvent;
import org.openapitools.client.model.UserUnbannedEvent;
import org.openapitools.client.model.UserUnmutedEvent;
import org.openapitools.client.model.UserUnreadReminderEvent;
import org.openapitools.client.model.UserUpdatedEvent;
import org.openapitools.client.model.UserWatchingStartEvent;
import org.openapitools.client.model.UserWatchingStopEvent;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ChatEvent
 */
public class ChatEventTest {
    private final ChatEvent model = new ChatEvent();

    /**
     * Model tests for ChatEvent
     */
    @Test
    public void testChatEvent() {
        // TODO: test ChatEvent
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'channel'
     */
    @Test
    public void channelTest() {
        // TODO: test channel
    }

    /**
     * Test the property 'channelId'
     */
    @Test
    public void channelIdTest() {
        // TODO: test channelId
    }

    /**
     * Test the property 'channelType'
     */
    @Test
    public void channelTypeTest() {
        // TODO: test channelType
    }

    /**
     * Test the property 'cid'
     */
    @Test
    public void cidTest() {
        // TODO: test cid
    }

    /**
     * Test the property 'team'
     */
    @Test
    public void teamTest() {
        // TODO: test team
    }

    /**
     * Test the property 'clearHistory'
     */
    @Test
    public void clearHistoryTest() {
        // TODO: test clearHistory
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'me'
     */
    @Test
    public void meTest() {
        // TODO: test me
    }

    /**
     * Test the property 'member'
     */
    @Test
    public void memberTest() {
        // TODO: test member
    }

    /**
     * Test the property 'hardDelete'
     */
    @Test
    public void hardDeleteTest() {
        // TODO: test hardDelete
    }

    /**
     * Test the property 'threadParticipants'
     */
    @Test
    public void threadParticipantsTest() {
        // TODO: test threadParticipants
    }

    /**
     * Test the property 'flag'
     */
    @Test
    public void flagTest() {
        // TODO: test flag
    }

    /**
     * Test the property 'watcherCount'
     */
    @Test
    public void watcherCountTest() {
        // TODO: test watcherCount
    }

    /**
     * Test the property 'lastReadMessageId'
     */
    @Test
    public void lastReadMessageIdTest() {
        // TODO: test lastReadMessageId
    }

    /**
     * Test the property 'totalUnreadCount'
     */
    @Test
    public void totalUnreadCountTest() {
        // TODO: test totalUnreadCount
    }

    /**
     * Test the property 'unreadChannels'
     */
    @Test
    public void unreadChannelsTest() {
        // TODO: test unreadChannels
    }

    /**
     * Test the property 'unreadCount'
     */
    @Test
    public void unreadCountTest() {
        // TODO: test unreadCount
    }

    /**
     * Test the property 'firstUnreadMessageId'
     */
    @Test
    public void firstUnreadMessageIdTest() {
        // TODO: test firstUnreadMessageId
    }

    /**
     * Test the property 'lastReadAt'
     */
    @Test
    public void lastReadAtTest() {
        // TODO: test lastReadAt
    }

    /**
     * Test the property 'unreadMessages'
     */
    @Test
    public void unreadMessagesTest() {
        // TODO: test unreadMessages
    }

    /**
     * Test the property 'reaction'
     */
    @Test
    public void reactionTest() {
        // TODO: test reaction
    }

    /**
     * Test the property 'parentId'
     */
    @Test
    public void parentIdTest() {
        // TODO: test parentId
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'expiration'
     */
    @Test
    public void expirationTest() {
        // TODO: test expiration
    }

    /**
     * Test the property 'reason'
     */
    @Test
    public void reasonTest() {
        // TODO: test reason
    }

    /**
     * Test the property 'shadow'
     */
    @Test
    public void shadowTest() {
        // TODO: test shadow
    }

    /**
     * Test the property 'deleteConversationChannels'
     */
    @Test
    public void deleteConversationChannelsTest() {
        // TODO: test deleteConversationChannels
    }

    /**
     * Test the property 'markMessagesDeleted'
     */
    @Test
    public void markMessagesDeletedTest() {
        // TODO: test markMessagesDeleted
    }

    /**
     * Test the property 'targetUser'
     */
    @Test
    public void targetUserTest() {
        // TODO: test targetUser
    }

    /**
     * Test the property 'targetUsers'
     */
    @Test
    public void targetUsersTest() {
        // TODO: test targetUsers
    }

    /**
     * Test the property 'channels'
     */
    @Test
    public void channelsTest() {
        // TODO: test channels
    }

}
