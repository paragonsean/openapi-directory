/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.APNConfigRequest;
import org.openapitools.client.model.AsyncModerationConfigurationRequest;
import org.openapitools.client.model.ConfigRequest;
import org.openapitools.client.model.FileUploadConfigRequest;
import org.openapitools.client.model.FirebaseConfigRequest;
import org.openapitools.client.model.HuaweiConfigRequest;
import org.openapitools.client.model.PushConfigRequest;
import org.openapitools.client.model.XiaomiConfigRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateAppRequest
 */
public class UpdateAppRequestTest {
    private final UpdateAppRequest model = new UpdateAppRequest();

    /**
     * Model tests for UpdateAppRequest
     */
    @Test
    public void testUpdateAppRequest() {
        // TODO: test UpdateAppRequest
    }

    /**
     * Test the property 'agoraOptions'
     */
    @Test
    public void agoraOptionsTest() {
        // TODO: test agoraOptions
    }

    /**
     * Test the property 'apnConfig'
     */
    @Test
    public void apnConfigTest() {
        // TODO: test apnConfig
    }

    /**
     * Test the property 'asyncModerationConfig'
     */
    @Test
    public void asyncModerationConfigTest() {
        // TODO: test asyncModerationConfig
    }

    /**
     * Test the property 'asyncUrlEnrichEnabled'
     */
    @Test
    public void asyncUrlEnrichEnabledTest() {
        // TODO: test asyncUrlEnrichEnabled
    }

    /**
     * Test the property 'autoTranslationEnabled'
     */
    @Test
    public void autoTranslationEnabledTest() {
        // TODO: test autoTranslationEnabled
    }

    /**
     * Test the property 'beforeMessageSendHookUrl'
     */
    @Test
    public void beforeMessageSendHookUrlTest() {
        // TODO: test beforeMessageSendHookUrl
    }

    /**
     * Test the property 'cdnExpirationSeconds'
     */
    @Test
    public void cdnExpirationSecondsTest() {
        // TODO: test cdnExpirationSeconds
    }

    /**
     * Test the property 'channelHideMembersOnly'
     */
    @Test
    public void channelHideMembersOnlyTest() {
        // TODO: test channelHideMembersOnly
    }

    /**
     * Test the property 'customActionHandlerUrl'
     */
    @Test
    public void customActionHandlerUrlTest() {
        // TODO: test customActionHandlerUrl
    }

    /**
     * Test the property 'disableAuthChecks'
     */
    @Test
    public void disableAuthChecksTest() {
        // TODO: test disableAuthChecks
    }

    /**
     * Test the property 'disablePermissionsChecks'
     */
    @Test
    public void disablePermissionsChecksTest() {
        // TODO: test disablePermissionsChecks
    }

    /**
     * Test the property 'enforceUniqueUsernames'
     */
    @Test
    public void enforceUniqueUsernamesTest() {
        // TODO: test enforceUniqueUsernames
    }

    /**
     * Test the property 'fileUploadConfig'
     */
    @Test
    public void fileUploadConfigTest() {
        // TODO: test fileUploadConfig
    }

    /**
     * Test the property 'firebaseConfig'
     */
    @Test
    public void firebaseConfigTest() {
        // TODO: test firebaseConfig
    }

    /**
     * Test the property 'grants'
     */
    @Test
    public void grantsTest() {
        // TODO: test grants
    }

    /**
     * Test the property 'hmsOptions'
     */
    @Test
    public void hmsOptionsTest() {
        // TODO: test hmsOptions
    }

    /**
     * Test the property 'huaweiConfig'
     */
    @Test
    public void huaweiConfigTest() {
        // TODO: test huaweiConfig
    }

    /**
     * Test the property 'imageModerationBlockLabels'
     */
    @Test
    public void imageModerationBlockLabelsTest() {
        // TODO: test imageModerationBlockLabels
    }

    /**
     * Test the property 'imageModerationEnabled'
     */
    @Test
    public void imageModerationEnabledTest() {
        // TODO: test imageModerationEnabled
    }

    /**
     * Test the property 'imageModerationLabels'
     */
    @Test
    public void imageModerationLabelsTest() {
        // TODO: test imageModerationLabels
    }

    /**
     * Test the property 'imageUploadConfig'
     */
    @Test
    public void imageUploadConfigTest() {
        // TODO: test imageUploadConfig
    }

    /**
     * Test the property 'migratePermissionsToV2'
     */
    @Test
    public void migratePermissionsToV2Test() {
        // TODO: test migratePermissionsToV2
    }

    /**
     * Test the property 'multiTenantEnabled'
     */
    @Test
    public void multiTenantEnabledTest() {
        // TODO: test multiTenantEnabled
    }

    /**
     * Test the property 'permissionVersion'
     */
    @Test
    public void permissionVersionTest() {
        // TODO: test permissionVersion
    }

    /**
     * Test the property 'pushConfig'
     */
    @Test
    public void pushConfigTest() {
        // TODO: test pushConfig
    }

    /**
     * Test the property 'remindersInterval'
     */
    @Test
    public void remindersIntervalTest() {
        // TODO: test remindersInterval
    }

    /**
     * Test the property 'revokeTokensIssuedBefore'
     */
    @Test
    public void revokeTokensIssuedBeforeTest() {
        // TODO: test revokeTokensIssuedBefore
    }

    /**
     * Test the property 'sqsKey'
     */
    @Test
    public void sqsKeyTest() {
        // TODO: test sqsKey
    }

    /**
     * Test the property 'sqsSecret'
     */
    @Test
    public void sqsSecretTest() {
        // TODO: test sqsSecret
    }

    /**
     * Test the property 'sqsUrl'
     */
    @Test
    public void sqsUrlTest() {
        // TODO: test sqsUrl
    }

    /**
     * Test the property 'userSearchDisallowedRoles'
     */
    @Test
    public void userSearchDisallowedRolesTest() {
        // TODO: test userSearchDisallowedRoles
    }

    /**
     * Test the property 'videoProvider'
     */
    @Test
    public void videoProviderTest() {
        // TODO: test videoProvider
    }

    /**
     * Test the property 'webhookEvents'
     */
    @Test
    public void webhookEventsTest() {
        // TODO: test webhookEvents
    }

    /**
     * Test the property 'webhookUrl'
     */
    @Test
    public void webhookUrlTest() {
        // TODO: test webhookUrl
    }

    /**
     * Test the property 'xiaomiConfig'
     */
    @Test
    public void xiaomiConfigTest() {
        // TODO: test xiaomiConfig
    }

}
