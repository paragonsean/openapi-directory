/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIError;
import org.openapitools.client.model.CreateDeviceRequest;
import org.openapitools.client.model.ListPushProvidersResponse;
import org.openapitools.client.model.Response;
import org.openapitools.client.model.UpsertPushProviderRequest;
import org.openapitools.client.model.UpsertPushProviderResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PushApi
 */
@Disabled
public class PushApiTest {

    private final PushApi api = new PushApi();

    /**
     * Create device
     *
     * Adds a new device to a user, if the same device already exists the call will have no effect 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDevice_0Test() throws ApiException {
        CreateDeviceRequest createDeviceRequest = null;
        Response response = api.createDevice_0(createDeviceRequest);
        // TODO: test validations
    }

    /**
     * Delete a push provider
     *
     * Delete a push provider from v2 with multi bundle/package support. v1 isn&#39;t supported in this endpoint 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePushProviderTest() throws ApiException {
        String type = null;
        String name = null;
        Response response = api.deletePushProvider(type, name);
        // TODO: test validations
    }

    /**
     * List push providers
     *
     * List details of all push providers. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listPushProvidersTest() throws ApiException {
        ListPushProvidersResponse response = api.listPushProviders();
        // TODO: test validations
    }

    /**
     * Upsert a push provider
     *
     * Upsert a push provider for v2 with multi bundle/package support 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void upsertPushProviderTest() throws ApiException {
        UpsertPushProviderRequest upsertPushProviderRequest = null;
        UpsertPushProviderResponse response = api.upsertPushProvider(upsertPushProviderRequest);
        // TODO: test validations
    }

}
