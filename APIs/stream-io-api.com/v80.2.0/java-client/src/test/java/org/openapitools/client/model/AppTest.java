/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.CallType;
import org.openapitools.client.model.ChannelConfig;
import org.openapitools.client.model.Config;
import org.openapitools.client.model.FileUploadConfig;
import org.openapitools.client.model.Policy;
import org.openapitools.client.model.PushNotificationFields;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for App
 */
public class AppTest {
    private final App model = new App();

    /**
     * Model tests for App
     */
    @Test
    public void testApp() {
        // TODO: test App
    }

    /**
     * Test the property 'agoraOptions'
     */
    @Test
    public void agoraOptionsTest() {
        // TODO: test agoraOptions
    }

    /**
     * Test the property 'asyncUrlEnrichEnabled'
     */
    @Test
    public void asyncUrlEnrichEnabledTest() {
        // TODO: test asyncUrlEnrichEnabled
    }

    /**
     * Test the property 'autoTranslationEnabled'
     */
    @Test
    public void autoTranslationEnabledTest() {
        // TODO: test autoTranslationEnabled
    }

    /**
     * Test the property 'beforeMessageSendHookUrl'
     */
    @Test
    public void beforeMessageSendHookUrlTest() {
        // TODO: test beforeMessageSendHookUrl
    }

    /**
     * Test the property 'callTypes'
     */
    @Test
    public void callTypesTest() {
        // TODO: test callTypes
    }

    /**
     * Test the property 'campaignEnabled'
     */
    @Test
    public void campaignEnabledTest() {
        // TODO: test campaignEnabled
    }

    /**
     * Test the property 'cdnExpirationSeconds'
     */
    @Test
    public void cdnExpirationSecondsTest() {
        // TODO: test cdnExpirationSeconds
    }

    /**
     * Test the property 'channelConfigs'
     */
    @Test
    public void channelConfigsTest() {
        // TODO: test channelConfigs
    }

    /**
     * Test the property 'customActionHandlerUrl'
     */
    @Test
    public void customActionHandlerUrlTest() {
        // TODO: test customActionHandlerUrl
    }

    /**
     * Test the property 'disableAuthChecks'
     */
    @Test
    public void disableAuthChecksTest() {
        // TODO: test disableAuthChecks
    }

    /**
     * Test the property 'disablePermissionsChecks'
     */
    @Test
    public void disablePermissionsChecksTest() {
        // TODO: test disablePermissionsChecks
    }

    /**
     * Test the property 'enforceUniqueUsernames'
     */
    @Test
    public void enforceUniqueUsernamesTest() {
        // TODO: test enforceUniqueUsernames
    }

    /**
     * Test the property 'fileUploadConfig'
     */
    @Test
    public void fileUploadConfigTest() {
        // TODO: test fileUploadConfig
    }

    /**
     * Test the property 'grants'
     */
    @Test
    public void grantsTest() {
        // TODO: test grants
    }

    /**
     * Test the property 'hmsOptions'
     */
    @Test
    public void hmsOptionsTest() {
        // TODO: test hmsOptions
    }

    /**
     * Test the property 'imageModerationEnabled'
     */
    @Test
    public void imageModerationEnabledTest() {
        // TODO: test imageModerationEnabled
    }

    /**
     * Test the property 'imageModerationLabels'
     */
    @Test
    public void imageModerationLabelsTest() {
        // TODO: test imageModerationLabels
    }

    /**
     * Test the property 'imageUploadConfig'
     */
    @Test
    public void imageUploadConfigTest() {
        // TODO: test imageUploadConfig
    }

    /**
     * Test the property 'multiTenantEnabled'
     */
    @Test
    public void multiTenantEnabledTest() {
        // TODO: test multiTenantEnabled
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'organization'
     */
    @Test
    public void organizationTest() {
        // TODO: test organization
    }

    /**
     * Test the property 'permissionVersion'
     */
    @Test
    public void permissionVersionTest() {
        // TODO: test permissionVersion
    }

    /**
     * Test the property 'policies'
     */
    @Test
    public void policiesTest() {
        // TODO: test policies
    }

    /**
     * Test the property 'pushNotifications'
     */
    @Test
    public void pushNotificationsTest() {
        // TODO: test pushNotifications
    }

    /**
     * Test the property 'remindersInterval'
     */
    @Test
    public void remindersIntervalTest() {
        // TODO: test remindersInterval
    }

    /**
     * Test the property 'revokeTokensIssuedBefore'
     */
    @Test
    public void revokeTokensIssuedBeforeTest() {
        // TODO: test revokeTokensIssuedBefore
    }

    /**
     * Test the property 'searchBackend'
     */
    @Test
    public void searchBackendTest() {
        // TODO: test searchBackend
    }

    /**
     * Test the property 'sqsKey'
     */
    @Test
    public void sqsKeyTest() {
        // TODO: test sqsKey
    }

    /**
     * Test the property 'sqsSecret'
     */
    @Test
    public void sqsSecretTest() {
        // TODO: test sqsSecret
    }

    /**
     * Test the property 'sqsUrl'
     */
    @Test
    public void sqsUrlTest() {
        // TODO: test sqsUrl
    }

    /**
     * Test the property 'suspended'
     */
    @Test
    public void suspendedTest() {
        // TODO: test suspended
    }

    /**
     * Test the property 'suspendedExplanation'
     */
    @Test
    public void suspendedExplanationTest() {
        // TODO: test suspendedExplanation
    }

    /**
     * Test the property 'userSearchDisallowedRoles'
     */
    @Test
    public void userSearchDisallowedRolesTest() {
        // TODO: test userSearchDisallowedRoles
    }

    /**
     * Test the property 'videoProvider'
     */
    @Test
    public void videoProviderTest() {
        // TODO: test videoProvider
    }

    /**
     * Test the property 'webhookEvents'
     */
    @Test
    public void webhookEventsTest() {
        // TODO: test webhookEvents
    }

    /**
     * Test the property 'webhookUrl'
     */
    @Test
    public void webhookUrlTest() {
        // TODO: test webhookUrl
    }

}
