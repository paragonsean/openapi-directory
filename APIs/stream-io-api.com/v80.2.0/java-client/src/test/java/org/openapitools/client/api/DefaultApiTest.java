/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIError;
import org.openapitools.client.model.CreateCallRequest;
import org.openapitools.client.model.CreateCallResponse;
import org.openapitools.client.model.GetCallTokenRequest;
import org.openapitools.client.model.GetCallTokenResponse;
import org.openapitools.client.model.MessageResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Commit message
     *
     * Commits a pending message, which will make it visible in the channel  Sends events: - message.new - message.updated 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void commitMessageTest() throws ApiException {
        String id = null;
        MessageResponse response = api.commitMessage(id);
        // TODO: test validations
    }

    /**
     * Create a call
     *
     * Creates a call  Required permissions: - CreateCall - ReadChannel 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCallTest() throws ApiException {
        String type = null;
        String id = null;
        CreateCallRequest createCallRequest = null;
        CreateCallResponse response = api.createCall(type, id, createCallRequest);
        // TODO: test validations
    }

    /**
     * Get Call Token ()
     *
     * Retrieves the token to join a call  Required permissions: - JoinCall - ReadChannel 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCallToken1Test() throws ApiException {
        GetCallTokenRequest getCallTokenRequest = null;
        GetCallTokenResponse response = api.getCallToken1(getCallTokenRequest);
        // TODO: test validations
    }

    /**
     * Get Call Token (call_id)
     *
     * Retrieves the token to join a call  Required permissions: - JoinCall - ReadChannel 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCallTokenCallId0Test() throws ApiException {
        String callId = null;
        GetCallTokenRequest getCallTokenRequest = null;
        GetCallTokenResponse response = api.getCallTokenCallId0(callId, getCallTokenRequest);
        // TODO: test validations
    }

}
