/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIError;
import org.openapitools.client.model.CreateRoleRequest;
import org.openapitools.client.model.CreateRoleResponse;
import org.openapitools.client.model.GetCustomPermissionResponse;
import org.openapitools.client.model.ListPermissionsResponse;
import org.openapitools.client.model.ListRolesResponse;
import org.openapitools.client.model.Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PermissionsV2Api
 */
@Disabled
public class PermissionsV2ApiTest {

    private final PermissionsV2Api api = new PermissionsV2Api();

    /**
     * Create role
     *
     * Creates custom role 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRoleTest() throws ApiException {
        CreateRoleRequest createRoleRequest = null;
        CreateRoleResponse response = api.createRole(createRoleRequest);
        // TODO: test validations
    }

    /**
     * Delete role
     *
     * Deletes custom role 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRoleTest() throws ApiException {
        String name = null;
        Response response = api.deleteRole(name);
        // TODO: test validations
    }

    /**
     * Get permission
     *
     * Gets custom permission 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPermissionTest() throws ApiException {
        String id = null;
        GetCustomPermissionResponse response = api.getPermission(id);
        // TODO: test validations
    }

    /**
     * List permissions
     *
     * Lists all available permissions 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listPermissionsTest() throws ApiException {
        ListPermissionsResponse response = api.listPermissions();
        // TODO: test validations
    }

    /**
     * List roles
     *
     * Lists all available roles 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRolesTest() throws ApiException {
        ListRolesResponse response = api.listRoles();
        // TODO: test validations
    }

}
