/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIError;
import org.openapitools.client.model.CreateCampaignRequest;
import org.openapitools.client.model.CreateCampaignResponse;
import org.openapitools.client.model.CreateSegmentRequest;
import org.openapitools.client.model.CreateSegmentResponse;
import org.openapitools.client.model.DeleteCampaignResponse;
import org.openapitools.client.model.DeleteSegmentResponse;
import org.openapitools.client.model.QueryCampaignsRequest;
import org.openapitools.client.model.QueryCampaignsResponse;
import org.openapitools.client.model.QueryRecipientsRequest;
import org.openapitools.client.model.QueryRecipientsResponse;
import org.openapitools.client.model.QuerySegmentsRequest;
import org.openapitools.client.model.QuerySegmentsResponse;
import org.openapitools.client.model.ResumeCampaignResponse;
import org.openapitools.client.model.ScheduleCampaignRequest;
import org.openapitools.client.model.ScheduleCampaignResponse;
import org.openapitools.client.model.StopCampaignResponse;
import org.openapitools.client.model.TestCampaignRequest;
import org.openapitools.client.model.TestCampaignResponse;
import org.openapitools.client.model.UpdateCampaignRequest;
import org.openapitools.client.model.UpdateCampaignResponse;
import org.openapitools.client.model.UpdateSegmentRequest;
import org.openapitools.client.model.UpdateSegmentResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CampaignsApi
 */
@Disabled
public class CampaignsApiTest {

    private final CampaignsApi api = new CampaignsApi();

    /**
     * Create campaign
     *
     * Creates a new campaign 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCampaignTest() throws ApiException {
        CreateCampaignRequest createCampaignRequest = null;
        CreateCampaignResponse response = api.createCampaign(createCampaignRequest);
        // TODO: test validations
    }

    /**
     * Create segment
     *
     * Create a segment 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSegmentTest() throws ApiException {
        CreateSegmentRequest createSegmentRequest = null;
        CreateSegmentResponse response = api.createSegment(createSegmentRequest);
        // TODO: test validations
    }

    /**
     * Delete campaign
     *
     * Delete a campaign 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCampaignTest() throws ApiException {
        String id = null;
        Boolean recipients = null;
        DeleteCampaignResponse response = api.deleteCampaign(id, recipients);
        // TODO: test validations
    }

    /**
     * Delete segment
     *
     * Delete a segment 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSegmentTest() throws ApiException {
        String id = null;
        DeleteSegmentResponse response = api.deleteSegment(id);
        // TODO: test validations
    }

    /**
     * Query campaigns
     *
     * Query campaigns 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryCampaignsTest() throws ApiException {
        QueryCampaignsRequest payload = null;
        QueryCampaignsResponse response = api.queryCampaigns(payload);
        // TODO: test validations
    }

    /**
     * Query recipients
     *
     * Query recipients 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryRecipientsTest() throws ApiException {
        QueryRecipientsRequest payload = null;
        QueryRecipientsResponse response = api.queryRecipients(payload);
        // TODO: test validations
    }

    /**
     * Query segments
     *
     * Query segments 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void querySegmentsTest() throws ApiException {
        QuerySegmentsRequest payload = null;
        QuerySegmentsResponse response = api.querySegments(payload);
        // TODO: test validations
    }

    /**
     * Resume campaign
     *
     * Resume a stopped campaign 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resumeCampaignTest() throws ApiException {
        String id = null;
        ResumeCampaignResponse response = api.resumeCampaign(id);
        // TODO: test validations
    }

    /**
     * Schedule campaign
     *
     * Schedule a campaign 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scheduleCampaignTest() throws ApiException {
        String id = null;
        ScheduleCampaignRequest scheduleCampaignRequest = null;
        ScheduleCampaignResponse response = api.scheduleCampaign(id, scheduleCampaignRequest);
        // TODO: test validations
    }

    /**
     * Stop campaign
     *
     * Stop a running campaign 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stopCampaignTest() throws ApiException {
        String id = null;
        StopCampaignResponse response = api.stopCampaign(id);
        // TODO: test validations
    }

    /**
     * Test campaign
     *
     * Test a campaign 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testCampaignTest() throws ApiException {
        String id = null;
        TestCampaignRequest testCampaignRequest = null;
        TestCampaignResponse response = api.testCampaign(id, testCampaignRequest);
        // TODO: test validations
    }

    /**
     * Update campaign
     *
     * Update an existing campaign 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCampaignTest() throws ApiException {
        String id = null;
        UpdateCampaignRequest updateCampaignRequest = null;
        UpdateCampaignResponse response = api.updateCampaign(id, updateCampaignRequest);
        // TODO: test validations
    }

    /**
     * Update segment
     *
     * Update an existing segment 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSegmentTest() throws ApiException {
        String id = null;
        UpdateSegmentRequest updateSegmentRequest = null;
        UpdateSegmentResponse response = api.updateSegment(id, updateSegmentRequest);
        // TODO: test validations
    }

}
