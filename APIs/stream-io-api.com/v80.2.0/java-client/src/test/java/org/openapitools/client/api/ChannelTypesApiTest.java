/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIError;
import org.openapitools.client.model.CreateChannelTypeRequest;
import org.openapitools.client.model.CreateChannelTypeResponse;
import org.openapitools.client.model.ListChannelTypesResponse;
import org.openapitools.client.model.Response;
import org.openapitools.client.model.UpdateChannelTypeRequest;
import org.openapitools.client.model.UpdateChannelTypeResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChannelTypesApi
 */
@Disabled
public class ChannelTypesApiTest {

    private final ChannelTypesApi api = new ChannelTypesApi();

    /**
     * Create channel type
     *
     * Creates new channel type 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createChannelType_0Test() throws ApiException {
        CreateChannelTypeRequest createChannelTypeRequest = null;
        CreateChannelTypeResponse response = api.createChannelType_0(createChannelTypeRequest);
        // TODO: test validations
    }

    /**
     * Delete channel type
     *
     * Deletes channel type 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteChannelType_0Test() throws ApiException {
        String name = null;
        Response response = api.deleteChannelType_0(name);
        // TODO: test validations
    }

    /**
     * Get channel type
     *
     * Gets channel type 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChannelType_0Test() throws ApiException {
        String name = null;
        Response response = api.getChannelType_0(name);
        // TODO: test validations
    }

    /**
     * List channel types
     *
     * Lists all available channel types 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listChannelTypes_0Test() throws ApiException {
        ListChannelTypesResponse response = api.listChannelTypes_0();
        // TODO: test validations
    }

    /**
     * Update channel type
     *
     * Updates channel type 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateChannelType_0Test() throws ApiException {
        String name = null;
        UpdateChannelTypeRequest updateChannelTypeRequest = null;
        UpdateChannelTypeResponse response = api.updateChannelType_0(name, updateChannelTypeRequest);
        // TODO: test validations
    }

}
