/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ActionRequest;
import org.openapitools.client.model.FieldRequest;
import org.openapitools.client.model.ImagesRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AttachmentRequest
 */
public class AttachmentRequestTest {
    private final AttachmentRequest model = new AttachmentRequest();

    /**
     * Model tests for AttachmentRequest
     */
    @Test
    public void testAttachmentRequest() {
        // TODO: test AttachmentRequest
    }

    /**
     * Test the property 'actions'
     */
    @Test
    public void actionsTest() {
        // TODO: test actions
    }

    /**
     * Test the property 'assetUrl'
     */
    @Test
    public void assetUrlTest() {
        // TODO: test assetUrl
    }

    /**
     * Test the property 'authorIcon'
     */
    @Test
    public void authorIconTest() {
        // TODO: test authorIcon
    }

    /**
     * Test the property 'authorLink'
     */
    @Test
    public void authorLinkTest() {
        // TODO: test authorLink
    }

    /**
     * Test the property 'authorName'
     */
    @Test
    public void authorNameTest() {
        // TODO: test authorName
    }

    /**
     * Test the property 'color'
     */
    @Test
    public void colorTest() {
        // TODO: test color
    }

    /**
     * Test the property 'fallback'
     */
    @Test
    public void fallbackTest() {
        // TODO: test fallback
    }

    /**
     * Test the property 'fields'
     */
    @Test
    public void fieldsTest() {
        // TODO: test fields
    }

    /**
     * Test the property 'footer'
     */
    @Test
    public void footerTest() {
        // TODO: test footer
    }

    /**
     * Test the property 'footerIcon'
     */
    @Test
    public void footerIconTest() {
        // TODO: test footerIcon
    }

    /**
     * Test the property 'giphy'
     */
    @Test
    public void giphyTest() {
        // TODO: test giphy
    }

    /**
     * Test the property 'imageUrl'
     */
    @Test
    public void imageUrlTest() {
        // TODO: test imageUrl
    }

    /**
     * Test the property 'ogScrapeUrl'
     */
    @Test
    public void ogScrapeUrlTest() {
        // TODO: test ogScrapeUrl
    }

    /**
     * Test the property 'originalHeight'
     */
    @Test
    public void originalHeightTest() {
        // TODO: test originalHeight
    }

    /**
     * Test the property 'originalWidth'
     */
    @Test
    public void originalWidthTest() {
        // TODO: test originalWidth
    }

    /**
     * Test the property 'pretext'
     */
    @Test
    public void pretextTest() {
        // TODO: test pretext
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'thumbUrl'
     */
    @Test
    public void thumbUrlTest() {
        // TODO: test thumbUrl
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'titleLink'
     */
    @Test
    public void titleLinkTest() {
        // TODO: test titleLink
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
