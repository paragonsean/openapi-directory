/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIError;
import org.openapitools.client.model.GetReactionsResponse;
import org.openapitools.client.model.ReactionRemovalResponse;
import org.openapitools.client.model.ReactionResponse;
import org.openapitools.client.model.SendReactionRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReactionsApi
 */
@Disabled
public class ReactionsApiTest {

    private final ReactionsApi api = new ReactionsApi();

    /**
     * Delete reaction
     *
     * Removes user reaction from the message  Sends events: - reaction.deleted  Required permissions: - DeleteReaction 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteReaction_0Test() throws ApiException {
        String id = null;
        String type = null;
        String userId = null;
        ReactionRemovalResponse response = api.deleteReaction_0(id, type, userId);
        // TODO: test validations
    }

    /**
     * Get reactions
     *
     * Returns list of reactions of specific message  Required permissions: - ReadChannel 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReactions_0Test() throws ApiException {
        String id = null;
        Integer limit = null;
        Integer offset = null;
        GetReactionsResponse response = api.getReactions_0(id, limit, offset);
        // TODO: test validations
    }

    /**
     * Send reaction
     *
     * Sends reaction to specified message  Sends events: - reaction.new - reaction.updated  Required permissions: - CreateReaction - UseFrozenChannel 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendReaction_0Test() throws ApiException {
        String id = null;
        SendReactionRequest sendReactionRequest = null;
        ReactionResponse response = api.sendReaction_0(id, sendReactionRequest);
        // TODO: test validations
    }

}
