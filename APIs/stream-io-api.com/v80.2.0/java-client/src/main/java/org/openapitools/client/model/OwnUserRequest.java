/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ChannelMuteRequest;
import org.openapitools.client.model.DeviceRequest;
import org.openapitools.client.model.PushNotificationSettingsRequest;
import org.openapitools.client.model.UserMuteRequest;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OwnUserRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:41:11.429997-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OwnUserRequest {
  public static final String SERIALIZED_NAME_BANNED = "banned";
  @SerializedName(SERIALIZED_NAME_BANNED)
  private Boolean banned;

  public static final String SERIALIZED_NAME_CHANNEL_MUTES = "channel_mutes";
  @SerializedName(SERIALIZED_NAME_CHANNEL_MUTES)
  private List<ChannelMuteRequest> channelMutes = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DEACTIVATED_AT = "deactivated_at";
  @SerializedName(SERIALIZED_NAME_DEACTIVATED_AT)
  private OffsetDateTime deactivatedAt;

  public static final String SERIALIZED_NAME_DELETED_AT = "deleted_at";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  private OffsetDateTime deletedAt;

  public static final String SERIALIZED_NAME_DEVICES = "devices";
  @SerializedName(SERIALIZED_NAME_DEVICES)
  private List<DeviceRequest> devices = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INVISIBLE = "invisible";
  @SerializedName(SERIALIZED_NAME_INVISIBLE)
  private Boolean invisible;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_LAST_ACTIVE = "last_active";
  @SerializedName(SERIALIZED_NAME_LAST_ACTIVE)
  private OffsetDateTime lastActive;

  public static final String SERIALIZED_NAME_LATEST_HIDDEN_CHANNELS = "latest_hidden_channels";
  @SerializedName(SERIALIZED_NAME_LATEST_HIDDEN_CHANNELS)
  private List<String> latestHiddenChannels = new ArrayList<>();

  public static final String SERIALIZED_NAME_MUTES = "mutes";
  @SerializedName(SERIALIZED_NAME_MUTES)
  private List<UserMuteRequest> mutes = new ArrayList<>();

  public static final String SERIALIZED_NAME_ONLINE = "online";
  @SerializedName(SERIALIZED_NAME_ONLINE)
  private Boolean online;

  public static final String SERIALIZED_NAME_PUSH_NOTIFICATIONS = "push_notifications";
  @SerializedName(SERIALIZED_NAME_PUSH_NOTIFICATIONS)
  private PushNotificationSettingsRequest pushNotifications;

  public static final String SERIALIZED_NAME_ROLE = "role";
  @SerializedName(SERIALIZED_NAME_ROLE)
  private String role;

  public static final String SERIALIZED_NAME_TEAMS = "teams";
  @SerializedName(SERIALIZED_NAME_TEAMS)
  private List<String> teams = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOTAL_UNREAD_COUNT = "total_unread_count";
  @SerializedName(SERIALIZED_NAME_TOTAL_UNREAD_COUNT)
  private Integer totalUnreadCount;

  public static final String SERIALIZED_NAME_UNREAD_CHANNELS = "unread_channels";
  @SerializedName(SERIALIZED_NAME_UNREAD_CHANNELS)
  private Integer unreadChannels;

  public static final String SERIALIZED_NAME_UNREAD_COUNT = "unread_count";
  @SerializedName(SERIALIZED_NAME_UNREAD_COUNT)
  private Integer unreadCount;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public OwnUserRequest() {
  }

  public OwnUserRequest banned(Boolean banned) {
    this.banned = banned;
    return this;
  }

  /**
   * Get banned
   * @return banned
   */
  @javax.annotation.Nullable
  public Boolean getBanned() {
    return banned;
  }

  public void setBanned(Boolean banned) {
    this.banned = banned;
  }


  public OwnUserRequest channelMutes(List<ChannelMuteRequest> channelMutes) {
    this.channelMutes = channelMutes;
    return this;
  }

  public OwnUserRequest addChannelMutesItem(ChannelMuteRequest channelMutesItem) {
    if (this.channelMutes == null) {
      this.channelMutes = new ArrayList<>();
    }
    this.channelMutes.add(channelMutesItem);
    return this;
  }

  /**
   * Get channelMutes
   * @return channelMutes
   */
  @javax.annotation.Nullable
  public List<ChannelMuteRequest> getChannelMutes() {
    return channelMutes;
  }

  public void setChannelMutes(List<ChannelMuteRequest> channelMutes) {
    this.channelMutes = channelMutes;
  }


  public OwnUserRequest createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public OwnUserRequest deactivatedAt(OffsetDateTime deactivatedAt) {
    this.deactivatedAt = deactivatedAt;
    return this;
  }

  /**
   * Get deactivatedAt
   * @return deactivatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeactivatedAt() {
    return deactivatedAt;
  }

  public void setDeactivatedAt(OffsetDateTime deactivatedAt) {
    this.deactivatedAt = deactivatedAt;
  }


  public OwnUserRequest deletedAt(OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
    return this;
  }

  /**
   * Get deletedAt
   * @return deletedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeletedAt() {
    return deletedAt;
  }

  public void setDeletedAt(OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
  }


  public OwnUserRequest devices(List<DeviceRequest> devices) {
    this.devices = devices;
    return this;
  }

  public OwnUserRequest addDevicesItem(DeviceRequest devicesItem) {
    if (this.devices == null) {
      this.devices = new ArrayList<>();
    }
    this.devices.add(devicesItem);
    return this;
  }

  /**
   * Get devices
   * @return devices
   */
  @javax.annotation.Nullable
  public List<DeviceRequest> getDevices() {
    return devices;
  }

  public void setDevices(List<DeviceRequest> devices) {
    this.devices = devices;
  }


  public OwnUserRequest id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public OwnUserRequest invisible(Boolean invisible) {
    this.invisible = invisible;
    return this;
  }

  /**
   * Get invisible
   * @return invisible
   */
  @javax.annotation.Nullable
  public Boolean getInvisible() {
    return invisible;
  }

  public void setInvisible(Boolean invisible) {
    this.invisible = invisible;
  }


  public OwnUserRequest language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public OwnUserRequest lastActive(OffsetDateTime lastActive) {
    this.lastActive = lastActive;
    return this;
  }

  /**
   * Get lastActive
   * @return lastActive
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastActive() {
    return lastActive;
  }

  public void setLastActive(OffsetDateTime lastActive) {
    this.lastActive = lastActive;
  }


  public OwnUserRequest latestHiddenChannels(List<String> latestHiddenChannels) {
    this.latestHiddenChannels = latestHiddenChannels;
    return this;
  }

  public OwnUserRequest addLatestHiddenChannelsItem(String latestHiddenChannelsItem) {
    if (this.latestHiddenChannels == null) {
      this.latestHiddenChannels = new ArrayList<>();
    }
    this.latestHiddenChannels.add(latestHiddenChannelsItem);
    return this;
  }

  /**
   * Get latestHiddenChannels
   * @return latestHiddenChannels
   */
  @javax.annotation.Nullable
  public List<String> getLatestHiddenChannels() {
    return latestHiddenChannels;
  }

  public void setLatestHiddenChannels(List<String> latestHiddenChannels) {
    this.latestHiddenChannels = latestHiddenChannels;
  }


  public OwnUserRequest mutes(List<UserMuteRequest> mutes) {
    this.mutes = mutes;
    return this;
  }

  public OwnUserRequest addMutesItem(UserMuteRequest mutesItem) {
    if (this.mutes == null) {
      this.mutes = new ArrayList<>();
    }
    this.mutes.add(mutesItem);
    return this;
  }

  /**
   * Get mutes
   * @return mutes
   */
  @javax.annotation.Nullable
  public List<UserMuteRequest> getMutes() {
    return mutes;
  }

  public void setMutes(List<UserMuteRequest> mutes) {
    this.mutes = mutes;
  }


  public OwnUserRequest online(Boolean online) {
    this.online = online;
    return this;
  }

  /**
   * Get online
   * @return online
   */
  @javax.annotation.Nullable
  public Boolean getOnline() {
    return online;
  }

  public void setOnline(Boolean online) {
    this.online = online;
  }


  public OwnUserRequest pushNotifications(PushNotificationSettingsRequest pushNotifications) {
    this.pushNotifications = pushNotifications;
    return this;
  }

  /**
   * Get pushNotifications
   * @return pushNotifications
   */
  @javax.annotation.Nullable
  public PushNotificationSettingsRequest getPushNotifications() {
    return pushNotifications;
  }

  public void setPushNotifications(PushNotificationSettingsRequest pushNotifications) {
    this.pushNotifications = pushNotifications;
  }


  public OwnUserRequest role(String role) {
    this.role = role;
    return this;
  }

  /**
   * Get role
   * @return role
   */
  @javax.annotation.Nullable
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }


  public OwnUserRequest teams(List<String> teams) {
    this.teams = teams;
    return this;
  }

  public OwnUserRequest addTeamsItem(String teamsItem) {
    if (this.teams == null) {
      this.teams = new ArrayList<>();
    }
    this.teams.add(teamsItem);
    return this;
  }

  /**
   * Get teams
   * @return teams
   */
  @javax.annotation.Nullable
  public List<String> getTeams() {
    return teams;
  }

  public void setTeams(List<String> teams) {
    this.teams = teams;
  }


  public OwnUserRequest totalUnreadCount(Integer totalUnreadCount) {
    this.totalUnreadCount = totalUnreadCount;
    return this;
  }

  /**
   * Get totalUnreadCount
   * @return totalUnreadCount
   */
  @javax.annotation.Nullable
  public Integer getTotalUnreadCount() {
    return totalUnreadCount;
  }

  public void setTotalUnreadCount(Integer totalUnreadCount) {
    this.totalUnreadCount = totalUnreadCount;
  }


  public OwnUserRequest unreadChannels(Integer unreadChannels) {
    this.unreadChannels = unreadChannels;
    return this;
  }

  /**
   * Get unreadChannels
   * @return unreadChannels
   */
  @javax.annotation.Nullable
  public Integer getUnreadChannels() {
    return unreadChannels;
  }

  public void setUnreadChannels(Integer unreadChannels) {
    this.unreadChannels = unreadChannels;
  }


  public OwnUserRequest unreadCount(Integer unreadCount) {
    this.unreadCount = unreadCount;
    return this;
  }

  /**
   * Get unreadCount
   * @return unreadCount
   */
  @javax.annotation.Nullable
  public Integer getUnreadCount() {
    return unreadCount;
  }

  public void setUnreadCount(Integer unreadCount) {
    this.unreadCount = unreadCount;
  }


  public OwnUserRequest updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the OwnUserRequest instance itself
   */
  public OwnUserRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OwnUserRequest ownUserRequest = (OwnUserRequest) o;
    return Objects.equals(this.banned, ownUserRequest.banned) &&
        Objects.equals(this.channelMutes, ownUserRequest.channelMutes) &&
        Objects.equals(this.createdAt, ownUserRequest.createdAt) &&
        Objects.equals(this.deactivatedAt, ownUserRequest.deactivatedAt) &&
        Objects.equals(this.deletedAt, ownUserRequest.deletedAt) &&
        Objects.equals(this.devices, ownUserRequest.devices) &&
        Objects.equals(this.id, ownUserRequest.id) &&
        Objects.equals(this.invisible, ownUserRequest.invisible) &&
        Objects.equals(this.language, ownUserRequest.language) &&
        Objects.equals(this.lastActive, ownUserRequest.lastActive) &&
        Objects.equals(this.latestHiddenChannels, ownUserRequest.latestHiddenChannels) &&
        Objects.equals(this.mutes, ownUserRequest.mutes) &&
        Objects.equals(this.online, ownUserRequest.online) &&
        Objects.equals(this.pushNotifications, ownUserRequest.pushNotifications) &&
        Objects.equals(this.role, ownUserRequest.role) &&
        Objects.equals(this.teams, ownUserRequest.teams) &&
        Objects.equals(this.totalUnreadCount, ownUserRequest.totalUnreadCount) &&
        Objects.equals(this.unreadChannels, ownUserRequest.unreadChannels) &&
        Objects.equals(this.unreadCount, ownUserRequest.unreadCount) &&
        Objects.equals(this.updatedAt, ownUserRequest.updatedAt)&&
        Objects.equals(this.additionalProperties, ownUserRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(banned, channelMutes, createdAt, deactivatedAt, deletedAt, devices, id, invisible, language, lastActive, latestHiddenChannels, mutes, online, pushNotifications, role, teams, totalUnreadCount, unreadChannels, unreadCount, updatedAt, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OwnUserRequest {\n");
    sb.append("    banned: ").append(toIndentedString(banned)).append("\n");
    sb.append("    channelMutes: ").append(toIndentedString(channelMutes)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deactivatedAt: ").append(toIndentedString(deactivatedAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    devices: ").append(toIndentedString(devices)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    invisible: ").append(toIndentedString(invisible)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    lastActive: ").append(toIndentedString(lastActive)).append("\n");
    sb.append("    latestHiddenChannels: ").append(toIndentedString(latestHiddenChannels)).append("\n");
    sb.append("    mutes: ").append(toIndentedString(mutes)).append("\n");
    sb.append("    online: ").append(toIndentedString(online)).append("\n");
    sb.append("    pushNotifications: ").append(toIndentedString(pushNotifications)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("    totalUnreadCount: ").append(toIndentedString(totalUnreadCount)).append("\n");
    sb.append("    unreadChannels: ").append(toIndentedString(unreadChannels)).append("\n");
    sb.append("    unreadCount: ").append(toIndentedString(unreadCount)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("banned");
    openapiFields.add("channel_mutes");
    openapiFields.add("created_at");
    openapiFields.add("deactivated_at");
    openapiFields.add("deleted_at");
    openapiFields.add("devices");
    openapiFields.add("id");
    openapiFields.add("invisible");
    openapiFields.add("language");
    openapiFields.add("last_active");
    openapiFields.add("latest_hidden_channels");
    openapiFields.add("mutes");
    openapiFields.add("online");
    openapiFields.add("push_notifications");
    openapiFields.add("role");
    openapiFields.add("teams");
    openapiFields.add("total_unread_count");
    openapiFields.add("unread_channels");
    openapiFields.add("unread_count");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OwnUserRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OwnUserRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OwnUserRequest is not found in the empty JSON string", OwnUserRequest.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("channel_mutes") != null && !jsonObj.get("channel_mutes").isJsonNull()) {
        JsonArray jsonArraychannelMutes = jsonObj.getAsJsonArray("channel_mutes");
        if (jsonArraychannelMutes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("channel_mutes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `channel_mutes` to be an array in the JSON string but got `%s`", jsonObj.get("channel_mutes").toString()));
          }

          // validate the optional field `channel_mutes` (array)
          for (int i = 0; i < jsonArraychannelMutes.size(); i++) {
            ChannelMuteRequest.validateJsonElement(jsonArraychannelMutes.get(i));
          };
        }
      }
      if (jsonObj.get("devices") != null && !jsonObj.get("devices").isJsonNull()) {
        JsonArray jsonArraydevices = jsonObj.getAsJsonArray("devices");
        if (jsonArraydevices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("devices").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `devices` to be an array in the JSON string but got `%s`", jsonObj.get("devices").toString()));
          }

          // validate the optional field `devices` (array)
          for (int i = 0; i < jsonArraydevices.size(); i++) {
            DeviceRequest.validateJsonElement(jsonArraydevices.get(i));
          };
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("latest_hidden_channels") != null && !jsonObj.get("latest_hidden_channels").isJsonNull() && !jsonObj.get("latest_hidden_channels").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `latest_hidden_channels` to be an array in the JSON string but got `%s`", jsonObj.get("latest_hidden_channels").toString()));
      }
      if (jsonObj.get("mutes") != null && !jsonObj.get("mutes").isJsonNull()) {
        JsonArray jsonArraymutes = jsonObj.getAsJsonArray("mutes");
        if (jsonArraymutes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("mutes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `mutes` to be an array in the JSON string but got `%s`", jsonObj.get("mutes").toString()));
          }

          // validate the optional field `mutes` (array)
          for (int i = 0; i < jsonArraymutes.size(); i++) {
            UserMuteRequest.validateJsonElement(jsonArraymutes.get(i));
          };
        }
      }
      // validate the optional field `push_notifications`
      if (jsonObj.get("push_notifications") != null && !jsonObj.get("push_notifications").isJsonNull()) {
        PushNotificationSettingsRequest.validateJsonElement(jsonObj.get("push_notifications"));
      }
      if ((jsonObj.get("role") != null && !jsonObj.get("role").isJsonNull()) && !jsonObj.get("role").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("teams") != null && !jsonObj.get("teams").isJsonNull() && !jsonObj.get("teams").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `teams` to be an array in the JSON string but got `%s`", jsonObj.get("teams").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OwnUserRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OwnUserRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OwnUserRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OwnUserRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<OwnUserRequest>() {
           @Override
           public void write(JsonWriter out, OwnUserRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public OwnUserRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             OwnUserRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OwnUserRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OwnUserRequest
   * @throws IOException if the JSON string is invalid with respect to OwnUserRequest
   */
  public static OwnUserRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OwnUserRequest.class);
  }

  /**
   * Convert an instance of OwnUserRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

