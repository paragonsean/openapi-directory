/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PushProviderRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:41:11.429997-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PushProviderRequest {
  public static final String SERIALIZED_NAME_APN_AUTH_KEY = "apn_auth_key";
  @SerializedName(SERIALIZED_NAME_APN_AUTH_KEY)
  private String apnAuthKey;

  public static final String SERIALIZED_NAME_APN_AUTH_TYPE = "apn_auth_type";
  @SerializedName(SERIALIZED_NAME_APN_AUTH_TYPE)
  private String apnAuthType;

  public static final String SERIALIZED_NAME_APN_DEVELOPMENT = "apn_development";
  @SerializedName(SERIALIZED_NAME_APN_DEVELOPMENT)
  private Boolean apnDevelopment;

  public static final String SERIALIZED_NAME_APN_HOST = "apn_host";
  @SerializedName(SERIALIZED_NAME_APN_HOST)
  private String apnHost;

  public static final String SERIALIZED_NAME_APN_KEY_ID = "apn_key_id";
  @SerializedName(SERIALIZED_NAME_APN_KEY_ID)
  private String apnKeyId;

  public static final String SERIALIZED_NAME_APN_NOTIFICATION_TEMPLATE = "apn_notification_template";
  @SerializedName(SERIALIZED_NAME_APN_NOTIFICATION_TEMPLATE)
  private String apnNotificationTemplate;

  public static final String SERIALIZED_NAME_APN_P12_CERT = "apn_p12_cert";
  @SerializedName(SERIALIZED_NAME_APN_P12_CERT)
  private String apnP12Cert;

  public static final String SERIALIZED_NAME_APN_TEAM_ID = "apn_team_id";
  @SerializedName(SERIALIZED_NAME_APN_TEAM_ID)
  private String apnTeamId;

  public static final String SERIALIZED_NAME_APN_TOPIC = "apn_topic";
  @SerializedName(SERIALIZED_NAME_APN_TOPIC)
  private String apnTopic;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISABLED_AT = "disabled_at";
  @SerializedName(SERIALIZED_NAME_DISABLED_AT)
  private OffsetDateTime disabledAt;

  public static final String SERIALIZED_NAME_DISABLED_REASON = "disabled_reason";
  @SerializedName(SERIALIZED_NAME_DISABLED_REASON)
  private String disabledReason;

  public static final String SERIALIZED_NAME_FIREBASE_APN_TEMPLATE = "firebase_apn_template";
  @SerializedName(SERIALIZED_NAME_FIREBASE_APN_TEMPLATE)
  private String firebaseApnTemplate;

  public static final String SERIALIZED_NAME_FIREBASE_CREDENTIALS = "firebase_credentials";
  @SerializedName(SERIALIZED_NAME_FIREBASE_CREDENTIALS)
  private String firebaseCredentials;

  public static final String SERIALIZED_NAME_FIREBASE_DATA_TEMPLATE = "firebase_data_template";
  @SerializedName(SERIALIZED_NAME_FIREBASE_DATA_TEMPLATE)
  private String firebaseDataTemplate;

  public static final String SERIALIZED_NAME_FIREBASE_NOTIFICATION_TEMPLATE = "firebase_notification_template";
  @SerializedName(SERIALIZED_NAME_FIREBASE_NOTIFICATION_TEMPLATE)
  private String firebaseNotificationTemplate;

  public static final String SERIALIZED_NAME_FIREBASE_SERVER_KEY = "firebase_server_key";
  @SerializedName(SERIALIZED_NAME_FIREBASE_SERVER_KEY)
  private String firebaseServerKey;

  public static final String SERIALIZED_NAME_HUAWEI_APP_ID = "huawei_app_id";
  @SerializedName(SERIALIZED_NAME_HUAWEI_APP_ID)
  private String huaweiAppId;

  public static final String SERIALIZED_NAME_HUAWEI_APP_SECRET = "huawei_app_secret";
  @SerializedName(SERIALIZED_NAME_HUAWEI_APP_SECRET)
  private String huaweiAppSecret;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Integer type;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_XIAOMI_APP_SECRET = "xiaomi_app_secret";
  @SerializedName(SERIALIZED_NAME_XIAOMI_APP_SECRET)
  private String xiaomiAppSecret;

  public static final String SERIALIZED_NAME_XIAOMI_PACKAGE_NAME = "xiaomi_package_name";
  @SerializedName(SERIALIZED_NAME_XIAOMI_PACKAGE_NAME)
  private String xiaomiPackageName;

  public PushProviderRequest() {
  }

  public PushProviderRequest apnAuthKey(String apnAuthKey) {
    this.apnAuthKey = apnAuthKey;
    return this;
  }

  /**
   * Get apnAuthKey
   * @return apnAuthKey
   */
  @javax.annotation.Nullable
  public String getApnAuthKey() {
    return apnAuthKey;
  }

  public void setApnAuthKey(String apnAuthKey) {
    this.apnAuthKey = apnAuthKey;
  }


  public PushProviderRequest apnAuthType(String apnAuthType) {
    this.apnAuthType = apnAuthType;
    return this;
  }

  /**
   * Get apnAuthType
   * @return apnAuthType
   */
  @javax.annotation.Nullable
  public String getApnAuthType() {
    return apnAuthType;
  }

  public void setApnAuthType(String apnAuthType) {
    this.apnAuthType = apnAuthType;
  }


  public PushProviderRequest apnDevelopment(Boolean apnDevelopment) {
    this.apnDevelopment = apnDevelopment;
    return this;
  }

  /**
   * Get apnDevelopment
   * @return apnDevelopment
   */
  @javax.annotation.Nullable
  public Boolean getApnDevelopment() {
    return apnDevelopment;
  }

  public void setApnDevelopment(Boolean apnDevelopment) {
    this.apnDevelopment = apnDevelopment;
  }


  public PushProviderRequest apnHost(String apnHost) {
    this.apnHost = apnHost;
    return this;
  }

  /**
   * Get apnHost
   * @return apnHost
   */
  @javax.annotation.Nullable
  public String getApnHost() {
    return apnHost;
  }

  public void setApnHost(String apnHost) {
    this.apnHost = apnHost;
  }


  public PushProviderRequest apnKeyId(String apnKeyId) {
    this.apnKeyId = apnKeyId;
    return this;
  }

  /**
   * Get apnKeyId
   * @return apnKeyId
   */
  @javax.annotation.Nullable
  public String getApnKeyId() {
    return apnKeyId;
  }

  public void setApnKeyId(String apnKeyId) {
    this.apnKeyId = apnKeyId;
  }


  public PushProviderRequest apnNotificationTemplate(String apnNotificationTemplate) {
    this.apnNotificationTemplate = apnNotificationTemplate;
    return this;
  }

  /**
   * Get apnNotificationTemplate
   * @return apnNotificationTemplate
   */
  @javax.annotation.Nullable
  public String getApnNotificationTemplate() {
    return apnNotificationTemplate;
  }

  public void setApnNotificationTemplate(String apnNotificationTemplate) {
    this.apnNotificationTemplate = apnNotificationTemplate;
  }


  public PushProviderRequest apnP12Cert(String apnP12Cert) {
    this.apnP12Cert = apnP12Cert;
    return this;
  }

  /**
   * Get apnP12Cert
   * @return apnP12Cert
   */
  @javax.annotation.Nullable
  public String getApnP12Cert() {
    return apnP12Cert;
  }

  public void setApnP12Cert(String apnP12Cert) {
    this.apnP12Cert = apnP12Cert;
  }


  public PushProviderRequest apnTeamId(String apnTeamId) {
    this.apnTeamId = apnTeamId;
    return this;
  }

  /**
   * Get apnTeamId
   * @return apnTeamId
   */
  @javax.annotation.Nullable
  public String getApnTeamId() {
    return apnTeamId;
  }

  public void setApnTeamId(String apnTeamId) {
    this.apnTeamId = apnTeamId;
  }


  public PushProviderRequest apnTopic(String apnTopic) {
    this.apnTopic = apnTopic;
    return this;
  }

  /**
   * Get apnTopic
   * @return apnTopic
   */
  @javax.annotation.Nullable
  public String getApnTopic() {
    return apnTopic;
  }

  public void setApnTopic(String apnTopic) {
    this.apnTopic = apnTopic;
  }


  public PushProviderRequest createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public PushProviderRequest description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public PushProviderRequest disabledAt(OffsetDateTime disabledAt) {
    this.disabledAt = disabledAt;
    return this;
  }

  /**
   * Get disabledAt
   * @return disabledAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDisabledAt() {
    return disabledAt;
  }

  public void setDisabledAt(OffsetDateTime disabledAt) {
    this.disabledAt = disabledAt;
  }


  public PushProviderRequest disabledReason(String disabledReason) {
    this.disabledReason = disabledReason;
    return this;
  }

  /**
   * Get disabledReason
   * @return disabledReason
   */
  @javax.annotation.Nullable
  public String getDisabledReason() {
    return disabledReason;
  }

  public void setDisabledReason(String disabledReason) {
    this.disabledReason = disabledReason;
  }


  public PushProviderRequest firebaseApnTemplate(String firebaseApnTemplate) {
    this.firebaseApnTemplate = firebaseApnTemplate;
    return this;
  }

  /**
   * Get firebaseApnTemplate
   * @return firebaseApnTemplate
   */
  @javax.annotation.Nullable
  public String getFirebaseApnTemplate() {
    return firebaseApnTemplate;
  }

  public void setFirebaseApnTemplate(String firebaseApnTemplate) {
    this.firebaseApnTemplate = firebaseApnTemplate;
  }


  public PushProviderRequest firebaseCredentials(String firebaseCredentials) {
    this.firebaseCredentials = firebaseCredentials;
    return this;
  }

  /**
   * Get firebaseCredentials
   * @return firebaseCredentials
   */
  @javax.annotation.Nullable
  public String getFirebaseCredentials() {
    return firebaseCredentials;
  }

  public void setFirebaseCredentials(String firebaseCredentials) {
    this.firebaseCredentials = firebaseCredentials;
  }


  public PushProviderRequest firebaseDataTemplate(String firebaseDataTemplate) {
    this.firebaseDataTemplate = firebaseDataTemplate;
    return this;
  }

  /**
   * Get firebaseDataTemplate
   * @return firebaseDataTemplate
   */
  @javax.annotation.Nullable
  public String getFirebaseDataTemplate() {
    return firebaseDataTemplate;
  }

  public void setFirebaseDataTemplate(String firebaseDataTemplate) {
    this.firebaseDataTemplate = firebaseDataTemplate;
  }


  public PushProviderRequest firebaseNotificationTemplate(String firebaseNotificationTemplate) {
    this.firebaseNotificationTemplate = firebaseNotificationTemplate;
    return this;
  }

  /**
   * Get firebaseNotificationTemplate
   * @return firebaseNotificationTemplate
   */
  @javax.annotation.Nullable
  public String getFirebaseNotificationTemplate() {
    return firebaseNotificationTemplate;
  }

  public void setFirebaseNotificationTemplate(String firebaseNotificationTemplate) {
    this.firebaseNotificationTemplate = firebaseNotificationTemplate;
  }


  public PushProviderRequest firebaseServerKey(String firebaseServerKey) {
    this.firebaseServerKey = firebaseServerKey;
    return this;
  }

  /**
   * Get firebaseServerKey
   * @return firebaseServerKey
   */
  @javax.annotation.Nullable
  public String getFirebaseServerKey() {
    return firebaseServerKey;
  }

  public void setFirebaseServerKey(String firebaseServerKey) {
    this.firebaseServerKey = firebaseServerKey;
  }


  public PushProviderRequest huaweiAppId(String huaweiAppId) {
    this.huaweiAppId = huaweiAppId;
    return this;
  }

  /**
   * Get huaweiAppId
   * @return huaweiAppId
   */
  @javax.annotation.Nullable
  public String getHuaweiAppId() {
    return huaweiAppId;
  }

  public void setHuaweiAppId(String huaweiAppId) {
    this.huaweiAppId = huaweiAppId;
  }


  public PushProviderRequest huaweiAppSecret(String huaweiAppSecret) {
    this.huaweiAppSecret = huaweiAppSecret;
    return this;
  }

  /**
   * Get huaweiAppSecret
   * @return huaweiAppSecret
   */
  @javax.annotation.Nullable
  public String getHuaweiAppSecret() {
    return huaweiAppSecret;
  }

  public void setHuaweiAppSecret(String huaweiAppSecret) {
    this.huaweiAppSecret = huaweiAppSecret;
  }


  public PushProviderRequest name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PushProviderRequest type(Integer type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }


  public PushProviderRequest updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public PushProviderRequest xiaomiAppSecret(String xiaomiAppSecret) {
    this.xiaomiAppSecret = xiaomiAppSecret;
    return this;
  }

  /**
   * Get xiaomiAppSecret
   * @return xiaomiAppSecret
   */
  @javax.annotation.Nullable
  public String getXiaomiAppSecret() {
    return xiaomiAppSecret;
  }

  public void setXiaomiAppSecret(String xiaomiAppSecret) {
    this.xiaomiAppSecret = xiaomiAppSecret;
  }


  public PushProviderRequest xiaomiPackageName(String xiaomiPackageName) {
    this.xiaomiPackageName = xiaomiPackageName;
    return this;
  }

  /**
   * Get xiaomiPackageName
   * @return xiaomiPackageName
   */
  @javax.annotation.Nullable
  public String getXiaomiPackageName() {
    return xiaomiPackageName;
  }

  public void setXiaomiPackageName(String xiaomiPackageName) {
    this.xiaomiPackageName = xiaomiPackageName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PushProviderRequest pushProviderRequest = (PushProviderRequest) o;
    return Objects.equals(this.apnAuthKey, pushProviderRequest.apnAuthKey) &&
        Objects.equals(this.apnAuthType, pushProviderRequest.apnAuthType) &&
        Objects.equals(this.apnDevelopment, pushProviderRequest.apnDevelopment) &&
        Objects.equals(this.apnHost, pushProviderRequest.apnHost) &&
        Objects.equals(this.apnKeyId, pushProviderRequest.apnKeyId) &&
        Objects.equals(this.apnNotificationTemplate, pushProviderRequest.apnNotificationTemplate) &&
        Objects.equals(this.apnP12Cert, pushProviderRequest.apnP12Cert) &&
        Objects.equals(this.apnTeamId, pushProviderRequest.apnTeamId) &&
        Objects.equals(this.apnTopic, pushProviderRequest.apnTopic) &&
        Objects.equals(this.createdAt, pushProviderRequest.createdAt) &&
        Objects.equals(this.description, pushProviderRequest.description) &&
        Objects.equals(this.disabledAt, pushProviderRequest.disabledAt) &&
        Objects.equals(this.disabledReason, pushProviderRequest.disabledReason) &&
        Objects.equals(this.firebaseApnTemplate, pushProviderRequest.firebaseApnTemplate) &&
        Objects.equals(this.firebaseCredentials, pushProviderRequest.firebaseCredentials) &&
        Objects.equals(this.firebaseDataTemplate, pushProviderRequest.firebaseDataTemplate) &&
        Objects.equals(this.firebaseNotificationTemplate, pushProviderRequest.firebaseNotificationTemplate) &&
        Objects.equals(this.firebaseServerKey, pushProviderRequest.firebaseServerKey) &&
        Objects.equals(this.huaweiAppId, pushProviderRequest.huaweiAppId) &&
        Objects.equals(this.huaweiAppSecret, pushProviderRequest.huaweiAppSecret) &&
        Objects.equals(this.name, pushProviderRequest.name) &&
        Objects.equals(this.type, pushProviderRequest.type) &&
        Objects.equals(this.updatedAt, pushProviderRequest.updatedAt) &&
        Objects.equals(this.xiaomiAppSecret, pushProviderRequest.xiaomiAppSecret) &&
        Objects.equals(this.xiaomiPackageName, pushProviderRequest.xiaomiPackageName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apnAuthKey, apnAuthType, apnDevelopment, apnHost, apnKeyId, apnNotificationTemplate, apnP12Cert, apnTeamId, apnTopic, createdAt, description, disabledAt, disabledReason, firebaseApnTemplate, firebaseCredentials, firebaseDataTemplate, firebaseNotificationTemplate, firebaseServerKey, huaweiAppId, huaweiAppSecret, name, type, updatedAt, xiaomiAppSecret, xiaomiPackageName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PushProviderRequest {\n");
    sb.append("    apnAuthKey: ").append(toIndentedString(apnAuthKey)).append("\n");
    sb.append("    apnAuthType: ").append(toIndentedString(apnAuthType)).append("\n");
    sb.append("    apnDevelopment: ").append(toIndentedString(apnDevelopment)).append("\n");
    sb.append("    apnHost: ").append(toIndentedString(apnHost)).append("\n");
    sb.append("    apnKeyId: ").append(toIndentedString(apnKeyId)).append("\n");
    sb.append("    apnNotificationTemplate: ").append(toIndentedString(apnNotificationTemplate)).append("\n");
    sb.append("    apnP12Cert: ").append(toIndentedString(apnP12Cert)).append("\n");
    sb.append("    apnTeamId: ").append(toIndentedString(apnTeamId)).append("\n");
    sb.append("    apnTopic: ").append(toIndentedString(apnTopic)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disabledAt: ").append(toIndentedString(disabledAt)).append("\n");
    sb.append("    disabledReason: ").append(toIndentedString(disabledReason)).append("\n");
    sb.append("    firebaseApnTemplate: ").append(toIndentedString(firebaseApnTemplate)).append("\n");
    sb.append("    firebaseCredentials: ").append(toIndentedString(firebaseCredentials)).append("\n");
    sb.append("    firebaseDataTemplate: ").append(toIndentedString(firebaseDataTemplate)).append("\n");
    sb.append("    firebaseNotificationTemplate: ").append(toIndentedString(firebaseNotificationTemplate)).append("\n");
    sb.append("    firebaseServerKey: ").append(toIndentedString(firebaseServerKey)).append("\n");
    sb.append("    huaweiAppId: ").append(toIndentedString(huaweiAppId)).append("\n");
    sb.append("    huaweiAppSecret: ").append(toIndentedString(huaweiAppSecret)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    xiaomiAppSecret: ").append(toIndentedString(xiaomiAppSecret)).append("\n");
    sb.append("    xiaomiPackageName: ").append(toIndentedString(xiaomiPackageName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apn_auth_key");
    openapiFields.add("apn_auth_type");
    openapiFields.add("apn_development");
    openapiFields.add("apn_host");
    openapiFields.add("apn_key_id");
    openapiFields.add("apn_notification_template");
    openapiFields.add("apn_p12_cert");
    openapiFields.add("apn_team_id");
    openapiFields.add("apn_topic");
    openapiFields.add("created_at");
    openapiFields.add("description");
    openapiFields.add("disabled_at");
    openapiFields.add("disabled_reason");
    openapiFields.add("firebase_apn_template");
    openapiFields.add("firebase_credentials");
    openapiFields.add("firebase_data_template");
    openapiFields.add("firebase_notification_template");
    openapiFields.add("firebase_server_key");
    openapiFields.add("huawei_app_id");
    openapiFields.add("huawei_app_secret");
    openapiFields.add("name");
    openapiFields.add("type");
    openapiFields.add("updated_at");
    openapiFields.add("xiaomi_app_secret");
    openapiFields.add("xiaomi_package_name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PushProviderRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PushProviderRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PushProviderRequest is not found in the empty JSON string", PushProviderRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PushProviderRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PushProviderRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PushProviderRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apn_auth_key") != null && !jsonObj.get("apn_auth_key").isJsonNull()) && !jsonObj.get("apn_auth_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apn_auth_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apn_auth_key").toString()));
      }
      if ((jsonObj.get("apn_auth_type") != null && !jsonObj.get("apn_auth_type").isJsonNull()) && !jsonObj.get("apn_auth_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apn_auth_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apn_auth_type").toString()));
      }
      if ((jsonObj.get("apn_host") != null && !jsonObj.get("apn_host").isJsonNull()) && !jsonObj.get("apn_host").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apn_host` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apn_host").toString()));
      }
      if ((jsonObj.get("apn_key_id") != null && !jsonObj.get("apn_key_id").isJsonNull()) && !jsonObj.get("apn_key_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apn_key_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apn_key_id").toString()));
      }
      if ((jsonObj.get("apn_notification_template") != null && !jsonObj.get("apn_notification_template").isJsonNull()) && !jsonObj.get("apn_notification_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apn_notification_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apn_notification_template").toString()));
      }
      if ((jsonObj.get("apn_p12_cert") != null && !jsonObj.get("apn_p12_cert").isJsonNull()) && !jsonObj.get("apn_p12_cert").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apn_p12_cert` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apn_p12_cert").toString()));
      }
      if ((jsonObj.get("apn_team_id") != null && !jsonObj.get("apn_team_id").isJsonNull()) && !jsonObj.get("apn_team_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apn_team_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apn_team_id").toString()));
      }
      if ((jsonObj.get("apn_topic") != null && !jsonObj.get("apn_topic").isJsonNull()) && !jsonObj.get("apn_topic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apn_topic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apn_topic").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("disabled_reason") != null && !jsonObj.get("disabled_reason").isJsonNull()) && !jsonObj.get("disabled_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disabled_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disabled_reason").toString()));
      }
      if ((jsonObj.get("firebase_apn_template") != null && !jsonObj.get("firebase_apn_template").isJsonNull()) && !jsonObj.get("firebase_apn_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firebase_apn_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firebase_apn_template").toString()));
      }
      if ((jsonObj.get("firebase_credentials") != null && !jsonObj.get("firebase_credentials").isJsonNull()) && !jsonObj.get("firebase_credentials").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firebase_credentials` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firebase_credentials").toString()));
      }
      if ((jsonObj.get("firebase_data_template") != null && !jsonObj.get("firebase_data_template").isJsonNull()) && !jsonObj.get("firebase_data_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firebase_data_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firebase_data_template").toString()));
      }
      if ((jsonObj.get("firebase_notification_template") != null && !jsonObj.get("firebase_notification_template").isJsonNull()) && !jsonObj.get("firebase_notification_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firebase_notification_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firebase_notification_template").toString()));
      }
      if ((jsonObj.get("firebase_server_key") != null && !jsonObj.get("firebase_server_key").isJsonNull()) && !jsonObj.get("firebase_server_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firebase_server_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firebase_server_key").toString()));
      }
      if ((jsonObj.get("huawei_app_id") != null && !jsonObj.get("huawei_app_id").isJsonNull()) && !jsonObj.get("huawei_app_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `huawei_app_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("huawei_app_id").toString()));
      }
      if ((jsonObj.get("huawei_app_secret") != null && !jsonObj.get("huawei_app_secret").isJsonNull()) && !jsonObj.get("huawei_app_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `huawei_app_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("huawei_app_secret").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("xiaomi_app_secret") != null && !jsonObj.get("xiaomi_app_secret").isJsonNull()) && !jsonObj.get("xiaomi_app_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xiaomi_app_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xiaomi_app_secret").toString()));
      }
      if ((jsonObj.get("xiaomi_package_name") != null && !jsonObj.get("xiaomi_package_name").isJsonNull()) && !jsonObj.get("xiaomi_package_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xiaomi_package_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xiaomi_package_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PushProviderRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PushProviderRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PushProviderRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PushProviderRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<PushProviderRequest>() {
           @Override
           public void write(JsonWriter out, PushProviderRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PushProviderRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PushProviderRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PushProviderRequest
   * @throws IOException if the JSON string is invalid with respect to PushProviderRequest
   */
  public static PushProviderRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PushProviderRequest.class);
  }

  /**
   * Convert an instance of PushProviderRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

