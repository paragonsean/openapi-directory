/*
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MessagePaginationParamsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:41:11.429997-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MessagePaginationParamsRequest {
  public static final String SERIALIZED_NAME_CREATED_AT_AFTER = "created_at_after";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_AFTER)
  private OffsetDateTime createdAtAfter;

  public static final String SERIALIZED_NAME_CREATED_AT_AFTER_OR_EQUAL = "created_at_after_or_equal";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_AFTER_OR_EQUAL)
  private OffsetDateTime createdAtAfterOrEqual;

  public static final String SERIALIZED_NAME_CREATED_AT_AROUND = "created_at_around";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_AROUND)
  private OffsetDateTime createdAtAround;

  public static final String SERIALIZED_NAME_CREATED_AT_BEFORE = "created_at_before";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_BEFORE)
  private OffsetDateTime createdAtBefore;

  public static final String SERIALIZED_NAME_CREATED_AT_BEFORE_OR_EQUAL = "created_at_before_or_equal";
  @SerializedName(SERIALIZED_NAME_CREATED_AT_BEFORE_OR_EQUAL)
  private OffsetDateTime createdAtBeforeOrEqual;

  public static final String SERIALIZED_NAME_ID_AROUND = "id_around";
  @SerializedName(SERIALIZED_NAME_ID_AROUND)
  private String idAround;

  public static final String SERIALIZED_NAME_ID_GT = "id_gt";
  @SerializedName(SERIALIZED_NAME_ID_GT)
  private String idGt;

  public static final String SERIALIZED_NAME_ID_GTE = "id_gte";
  @SerializedName(SERIALIZED_NAME_ID_GTE)
  private String idGte;

  public static final String SERIALIZED_NAME_ID_LT = "id_lt";
  @SerializedName(SERIALIZED_NAME_ID_LT)
  private String idLt;

  public static final String SERIALIZED_NAME_ID_LTE = "id_lte";
  @SerializedName(SERIALIZED_NAME_ID_LTE)
  private String idLte;

  public static final String SERIALIZED_NAME_LIMIT = "limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private Integer limit;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private Integer offset;

  public MessagePaginationParamsRequest() {
  }

  public MessagePaginationParamsRequest createdAtAfter(OffsetDateTime createdAtAfter) {
    this.createdAtAfter = createdAtAfter;
    return this;
  }

  /**
   * Get createdAtAfter
   * @return createdAtAfter
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAtAfter() {
    return createdAtAfter;
  }

  public void setCreatedAtAfter(OffsetDateTime createdAtAfter) {
    this.createdAtAfter = createdAtAfter;
  }


  public MessagePaginationParamsRequest createdAtAfterOrEqual(OffsetDateTime createdAtAfterOrEqual) {
    this.createdAtAfterOrEqual = createdAtAfterOrEqual;
    return this;
  }

  /**
   * Get createdAtAfterOrEqual
   * @return createdAtAfterOrEqual
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAtAfterOrEqual() {
    return createdAtAfterOrEqual;
  }

  public void setCreatedAtAfterOrEqual(OffsetDateTime createdAtAfterOrEqual) {
    this.createdAtAfterOrEqual = createdAtAfterOrEqual;
  }


  public MessagePaginationParamsRequest createdAtAround(OffsetDateTime createdAtAround) {
    this.createdAtAround = createdAtAround;
    return this;
  }

  /**
   * Get createdAtAround
   * @return createdAtAround
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAtAround() {
    return createdAtAround;
  }

  public void setCreatedAtAround(OffsetDateTime createdAtAround) {
    this.createdAtAround = createdAtAround;
  }


  public MessagePaginationParamsRequest createdAtBefore(OffsetDateTime createdAtBefore) {
    this.createdAtBefore = createdAtBefore;
    return this;
  }

  /**
   * Get createdAtBefore
   * @return createdAtBefore
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAtBefore() {
    return createdAtBefore;
  }

  public void setCreatedAtBefore(OffsetDateTime createdAtBefore) {
    this.createdAtBefore = createdAtBefore;
  }


  public MessagePaginationParamsRequest createdAtBeforeOrEqual(OffsetDateTime createdAtBeforeOrEqual) {
    this.createdAtBeforeOrEqual = createdAtBeforeOrEqual;
    return this;
  }

  /**
   * Get createdAtBeforeOrEqual
   * @return createdAtBeforeOrEqual
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAtBeforeOrEqual() {
    return createdAtBeforeOrEqual;
  }

  public void setCreatedAtBeforeOrEqual(OffsetDateTime createdAtBeforeOrEqual) {
    this.createdAtBeforeOrEqual = createdAtBeforeOrEqual;
  }


  public MessagePaginationParamsRequest idAround(String idAround) {
    this.idAround = idAround;
    return this;
  }

  /**
   * Get idAround
   * @return idAround
   */
  @javax.annotation.Nullable
  public String getIdAround() {
    return idAround;
  }

  public void setIdAround(String idAround) {
    this.idAround = idAround;
  }


  public MessagePaginationParamsRequest idGt(String idGt) {
    this.idGt = idGt;
    return this;
  }

  /**
   * Get idGt
   * @return idGt
   */
  @javax.annotation.Nullable
  public String getIdGt() {
    return idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = idGt;
  }


  public MessagePaginationParamsRequest idGte(String idGte) {
    this.idGte = idGte;
    return this;
  }

  /**
   * Get idGte
   * @return idGte
   */
  @javax.annotation.Nullable
  public String getIdGte() {
    return idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = idGte;
  }


  public MessagePaginationParamsRequest idLt(String idLt) {
    this.idLt = idLt;
    return this;
  }

  /**
   * Get idLt
   * @return idLt
   */
  @javax.annotation.Nullable
  public String getIdLt() {
    return idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = idLt;
  }


  public MessagePaginationParamsRequest idLte(String idLte) {
    this.idLte = idLte;
    return this;
  }

  /**
   * Get idLte
   * @return idLte
   */
  @javax.annotation.Nullable
  public String getIdLte() {
    return idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = idLte;
  }


  public MessagePaginationParamsRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

  /**
   * Get limit
   * minimum: 0
   * @return limit
   */
  @javax.annotation.Nullable
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public MessagePaginationParamsRequest offset(Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * Get offset
   * @return offset
   */
  @javax.annotation.Nullable
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessagePaginationParamsRequest messagePaginationParamsRequest = (MessagePaginationParamsRequest) o;
    return Objects.equals(this.createdAtAfter, messagePaginationParamsRequest.createdAtAfter) &&
        Objects.equals(this.createdAtAfterOrEqual, messagePaginationParamsRequest.createdAtAfterOrEqual) &&
        Objects.equals(this.createdAtAround, messagePaginationParamsRequest.createdAtAround) &&
        Objects.equals(this.createdAtBefore, messagePaginationParamsRequest.createdAtBefore) &&
        Objects.equals(this.createdAtBeforeOrEqual, messagePaginationParamsRequest.createdAtBeforeOrEqual) &&
        Objects.equals(this.idAround, messagePaginationParamsRequest.idAround) &&
        Objects.equals(this.idGt, messagePaginationParamsRequest.idGt) &&
        Objects.equals(this.idGte, messagePaginationParamsRequest.idGte) &&
        Objects.equals(this.idLt, messagePaginationParamsRequest.idLt) &&
        Objects.equals(this.idLte, messagePaginationParamsRequest.idLte) &&
        Objects.equals(this.limit, messagePaginationParamsRequest.limit) &&
        Objects.equals(this.offset, messagePaginationParamsRequest.offset);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAtAfter, createdAtAfterOrEqual, createdAtAround, createdAtBefore, createdAtBeforeOrEqual, idAround, idGt, idGte, idLt, idLte, limit, offset);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessagePaginationParamsRequest {\n");
    sb.append("    createdAtAfter: ").append(toIndentedString(createdAtAfter)).append("\n");
    sb.append("    createdAtAfterOrEqual: ").append(toIndentedString(createdAtAfterOrEqual)).append("\n");
    sb.append("    createdAtAround: ").append(toIndentedString(createdAtAround)).append("\n");
    sb.append("    createdAtBefore: ").append(toIndentedString(createdAtBefore)).append("\n");
    sb.append("    createdAtBeforeOrEqual: ").append(toIndentedString(createdAtBeforeOrEqual)).append("\n");
    sb.append("    idAround: ").append(toIndentedString(idAround)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_at_after");
    openapiFields.add("created_at_after_or_equal");
    openapiFields.add("created_at_around");
    openapiFields.add("created_at_before");
    openapiFields.add("created_at_before_or_equal");
    openapiFields.add("id_around");
    openapiFields.add("id_gt");
    openapiFields.add("id_gte");
    openapiFields.add("id_lt");
    openapiFields.add("id_lte");
    openapiFields.add("limit");
    openapiFields.add("offset");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MessagePaginationParamsRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MessagePaginationParamsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MessagePaginationParamsRequest is not found in the empty JSON string", MessagePaginationParamsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MessagePaginationParamsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MessagePaginationParamsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id_around") != null && !jsonObj.get("id_around").isJsonNull()) && !jsonObj.get("id_around").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id_around` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id_around").toString()));
      }
      if ((jsonObj.get("id_gt") != null && !jsonObj.get("id_gt").isJsonNull()) && !jsonObj.get("id_gt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id_gt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id_gt").toString()));
      }
      if ((jsonObj.get("id_gte") != null && !jsonObj.get("id_gte").isJsonNull()) && !jsonObj.get("id_gte").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id_gte` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id_gte").toString()));
      }
      if ((jsonObj.get("id_lt") != null && !jsonObj.get("id_lt").isJsonNull()) && !jsonObj.get("id_lt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id_lt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id_lt").toString()));
      }
      if ((jsonObj.get("id_lte") != null && !jsonObj.get("id_lte").isJsonNull()) && !jsonObj.get("id_lte").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id_lte` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id_lte").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MessagePaginationParamsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MessagePaginationParamsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MessagePaginationParamsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MessagePaginationParamsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<MessagePaginationParamsRequest>() {
           @Override
           public void write(JsonWriter out, MessagePaginationParamsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MessagePaginationParamsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MessagePaginationParamsRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MessagePaginationParamsRequest
   * @throws IOException if the JSON string is invalid with respect to MessagePaginationParamsRequest
   */
  public static MessagePaginationParamsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MessagePaginationParamsRequest.class);
  }

  /**
   * Convert an instance of MessagePaginationParamsRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

