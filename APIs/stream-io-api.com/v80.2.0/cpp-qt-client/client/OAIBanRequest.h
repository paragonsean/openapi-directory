/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBanRequest.h
 *
 * 
 */

#ifndef OAIBanRequest_H
#define OAIBanRequest_H

#include <QJsonObject>

#include "OAIUserObjectRequest.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBanRequest : public OAIObject {
public:
    OAIBanRequest();
    OAIBanRequest(QString json);
    ~OAIBanRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUserObjectRequest getBannedBy() const;
    void setBannedBy(const OAIUserObjectRequest &banned_by);
    bool is_banned_by_Set() const;
    bool is_banned_by_Valid() const;

    QString getBannedById() const;
    void setBannedById(const QString &banned_by_id);
    bool is_banned_by_id_Set() const;
    bool is_banned_by_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIpBan() const;
    void setIpBan(const bool &ip_ban);
    bool is_ip_ban_Set() const;
    bool is_ip_ban_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    bool isShadow() const;
    void setShadow(const bool &shadow);
    bool is_shadow_Set() const;
    bool is_shadow_Valid() const;

    QString getTargetUserId() const;
    void setTargetUserId(const QString &target_user_id);
    bool is_target_user_id_Set() const;
    bool is_target_user_id_Valid() const;

    qint32 getTimeout() const;
    void setTimeout(const qint32 &timeout);
    bool is_timeout_Set() const;
    bool is_timeout_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIUserObjectRequest getUser() const;
    void setUser(const OAIUserObjectRequest &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUserObjectRequest m_banned_by;
    bool m_banned_by_isSet;
    bool m_banned_by_isValid;

    QString m_banned_by_id;
    bool m_banned_by_id_isSet;
    bool m_banned_by_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_ip_ban;
    bool m_ip_ban_isSet;
    bool m_ip_ban_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    bool m_shadow;
    bool m_shadow_isSet;
    bool m_shadow_isValid;

    QString m_target_user_id;
    bool m_target_user_id_isSet;
    bool m_target_user_id_isValid;

    qint32 m_timeout;
    bool m_timeout_isSet;
    bool m_timeout_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIUserObjectRequest m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBanRequest)

#endif // OAIBanRequest_H
