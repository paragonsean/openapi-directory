/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeactivateUsersRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeactivateUsersRequest::OAIDeactivateUsersRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeactivateUsersRequest::OAIDeactivateUsersRequest() {
    this->initializeModel();
}

OAIDeactivateUsersRequest::~OAIDeactivateUsersRequest() {}

void OAIDeactivateUsersRequest::initializeModel() {

    m_created_by_id_isSet = false;
    m_created_by_id_isValid = false;

    m_mark_messages_deleted_isSet = false;
    m_mark_messages_deleted_isValid = false;

    m_user_ids_isSet = false;
    m_user_ids_isValid = false;
}

void OAIDeactivateUsersRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeactivateUsersRequest::fromJsonObject(QJsonObject json) {

    m_created_by_id_isValid = ::OpenAPI::fromJsonValue(m_created_by_id, json[QString("created_by_id")]);
    m_created_by_id_isSet = !json[QString("created_by_id")].isNull() && m_created_by_id_isValid;

    m_mark_messages_deleted_isValid = ::OpenAPI::fromJsonValue(m_mark_messages_deleted, json[QString("mark_messages_deleted")]);
    m_mark_messages_deleted_isSet = !json[QString("mark_messages_deleted")].isNull() && m_mark_messages_deleted_isValid;

    m_user_ids_isValid = ::OpenAPI::fromJsonValue(m_user_ids, json[QString("user_ids")]);
    m_user_ids_isSet = !json[QString("user_ids")].isNull() && m_user_ids_isValid;
}

QString OAIDeactivateUsersRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeactivateUsersRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_created_by_id_isSet) {
        obj.insert(QString("created_by_id"), ::OpenAPI::toJsonValue(m_created_by_id));
    }
    if (m_mark_messages_deleted_isSet) {
        obj.insert(QString("mark_messages_deleted"), ::OpenAPI::toJsonValue(m_mark_messages_deleted));
    }
    if (m_user_ids.size() > 0) {
        obj.insert(QString("user_ids"), ::OpenAPI::toJsonValue(m_user_ids));
    }
    return obj;
}

QString OAIDeactivateUsersRequest::getCreatedById() const {
    return m_created_by_id;
}
void OAIDeactivateUsersRequest::setCreatedById(const QString &created_by_id) {
    m_created_by_id = created_by_id;
    m_created_by_id_isSet = true;
}

bool OAIDeactivateUsersRequest::is_created_by_id_Set() const{
    return m_created_by_id_isSet;
}

bool OAIDeactivateUsersRequest::is_created_by_id_Valid() const{
    return m_created_by_id_isValid;
}

bool OAIDeactivateUsersRequest::isMarkMessagesDeleted() const {
    return m_mark_messages_deleted;
}
void OAIDeactivateUsersRequest::setMarkMessagesDeleted(const bool &mark_messages_deleted) {
    m_mark_messages_deleted = mark_messages_deleted;
    m_mark_messages_deleted_isSet = true;
}

bool OAIDeactivateUsersRequest::is_mark_messages_deleted_Set() const{
    return m_mark_messages_deleted_isSet;
}

bool OAIDeactivateUsersRequest::is_mark_messages_deleted_Valid() const{
    return m_mark_messages_deleted_isValid;
}

QList<QString> OAIDeactivateUsersRequest::getUserIds() const {
    return m_user_ids;
}
void OAIDeactivateUsersRequest::setUserIds(const QList<QString> &user_ids) {
    m_user_ids = user_ids;
    m_user_ids_isSet = true;
}

bool OAIDeactivateUsersRequest::is_user_ids_Set() const{
    return m_user_ids_isSet;
}

bool OAIDeactivateUsersRequest::is_user_ids_Valid() const{
    return m_user_ids_isValid;
}

bool OAIDeactivateUsersRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_by_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mark_messages_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeactivateUsersRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_user_ids_isValid && true;
}

} // namespace OpenAPI
