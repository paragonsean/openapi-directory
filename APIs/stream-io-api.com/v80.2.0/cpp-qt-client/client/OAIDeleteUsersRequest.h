/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteUsersRequest.h
 *
 * 
 */

#ifndef OAIDeleteUsersRequest_H
#define OAIDeleteUsersRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteUsersRequest : public OAIObject {
public:
    OAIDeleteUsersRequest();
    OAIDeleteUsersRequest(QString json);
    ~OAIDeleteUsersRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConversations() const;
    void setConversations(const QString &conversations);
    bool is_conversations_Set() const;
    bool is_conversations_Valid() const;

    QString getMessages() const;
    void setMessages(const QString &messages);
    bool is_messages_Set() const;
    bool is_messages_Valid() const;

    QString getNewChannelOwnerId() const;
    void setNewChannelOwnerId(const QString &new_channel_owner_id);
    bool is_new_channel_owner_id_Set() const;
    bool is_new_channel_owner_id_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QList<QString> getUserIds() const;
    void setUserIds(const QList<QString> &user_ids);
    bool is_user_ids_Set() const;
    bool is_user_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_conversations;
    bool m_conversations_isSet;
    bool m_conversations_isValid;

    QString m_messages;
    bool m_messages_isSet;
    bool m_messages_isValid;

    QString m_new_channel_owner_id;
    bool m_new_channel_owner_id_isSet;
    bool m_new_channel_owner_id_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QList<QString> m_user_ids;
    bool m_user_ids_isSet;
    bool m_user_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteUsersRequest)

#endif // OAIDeleteUsersRequest_H
