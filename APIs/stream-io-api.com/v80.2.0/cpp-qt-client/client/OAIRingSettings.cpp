/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRingSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRingSettings::OAIRingSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRingSettings::OAIRingSettings() {
    this->initializeModel();
}

OAIRingSettings::~OAIRingSettings() {}

void OAIRingSettings::initializeModel() {

    m_auto_cancel_timeout_ms_isSet = false;
    m_auto_cancel_timeout_ms_isValid = false;

    m_auto_reject_timeout_ms_isSet = false;
    m_auto_reject_timeout_ms_isValid = false;
}

void OAIRingSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRingSettings::fromJsonObject(QJsonObject json) {

    m_auto_cancel_timeout_ms_isValid = ::OpenAPI::fromJsonValue(m_auto_cancel_timeout_ms, json[QString("auto_cancel_timeout_ms")]);
    m_auto_cancel_timeout_ms_isSet = !json[QString("auto_cancel_timeout_ms")].isNull() && m_auto_cancel_timeout_ms_isValid;

    m_auto_reject_timeout_ms_isValid = ::OpenAPI::fromJsonValue(m_auto_reject_timeout_ms, json[QString("auto_reject_timeout_ms")]);
    m_auto_reject_timeout_ms_isSet = !json[QString("auto_reject_timeout_ms")].isNull() && m_auto_reject_timeout_ms_isValid;
}

QString OAIRingSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRingSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_cancel_timeout_ms_isSet) {
        obj.insert(QString("auto_cancel_timeout_ms"), ::OpenAPI::toJsonValue(m_auto_cancel_timeout_ms));
    }
    if (m_auto_reject_timeout_ms_isSet) {
        obj.insert(QString("auto_reject_timeout_ms"), ::OpenAPI::toJsonValue(m_auto_reject_timeout_ms));
    }
    return obj;
}

qint32 OAIRingSettings::getAutoCancelTimeoutMs() const {
    return m_auto_cancel_timeout_ms;
}
void OAIRingSettings::setAutoCancelTimeoutMs(const qint32 &auto_cancel_timeout_ms) {
    m_auto_cancel_timeout_ms = auto_cancel_timeout_ms;
    m_auto_cancel_timeout_ms_isSet = true;
}

bool OAIRingSettings::is_auto_cancel_timeout_ms_Set() const{
    return m_auto_cancel_timeout_ms_isSet;
}

bool OAIRingSettings::is_auto_cancel_timeout_ms_Valid() const{
    return m_auto_cancel_timeout_ms_isValid;
}

qint32 OAIRingSettings::getAutoRejectTimeoutMs() const {
    return m_auto_reject_timeout_ms;
}
void OAIRingSettings::setAutoRejectTimeoutMs(const qint32 &auto_reject_timeout_ms) {
    m_auto_reject_timeout_ms = auto_reject_timeout_ms;
    m_auto_reject_timeout_ms_isSet = true;
}

bool OAIRingSettings::is_auto_reject_timeout_ms_Set() const{
    return m_auto_reject_timeout_ms_isSet;
}

bool OAIRingSettings::is_auto_reject_timeout_ms_Valid() const{
    return m_auto_reject_timeout_ms_isValid;
}

bool OAIRingSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_cancel_timeout_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_reject_timeout_ms_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRingSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_auto_cancel_timeout_ms_isValid && m_auto_reject_timeout_ms_isValid && true;
}

} // namespace OpenAPI
