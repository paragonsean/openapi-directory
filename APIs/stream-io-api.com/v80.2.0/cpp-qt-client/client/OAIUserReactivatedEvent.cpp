/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserReactivatedEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserReactivatedEvent::OAIUserReactivatedEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserReactivatedEvent::OAIUserReactivatedEvent() {
    this->initializeModel();
}

OAIUserReactivatedEvent::~OAIUserReactivatedEvent() {}

void OAIUserReactivatedEvent::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;
}

void OAIUserReactivatedEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserReactivatedEvent::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;
}

QString OAIUserReactivatedEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserReactivatedEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_user.isSet()) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    return obj;
}

QDateTime OAIUserReactivatedEvent::getCreatedAt() const {
    return m_created_at;
}
void OAIUserReactivatedEvent::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIUserReactivatedEvent::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIUserReactivatedEvent::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIUserReactivatedEvent::getType() const {
    return m_type;
}
void OAIUserReactivatedEvent::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIUserReactivatedEvent::is_type_Set() const{
    return m_type_isSet;
}

bool OAIUserReactivatedEvent::is_type_Valid() const{
    return m_type_isValid;
}

OAIUserObject OAIUserReactivatedEvent::getUser() const {
    return m_user;
}
void OAIUserReactivatedEvent::setUser(const OAIUserObject &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIUserReactivatedEvent::is_user_Set() const{
    return m_user_isSet;
}

bool OAIUserReactivatedEvent::is_user_Valid() const{
    return m_user_isValid;
}

bool OAIUserReactivatedEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserReactivatedEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_at_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
