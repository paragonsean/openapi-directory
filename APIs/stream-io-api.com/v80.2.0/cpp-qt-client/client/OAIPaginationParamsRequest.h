/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPaginationParamsRequest.h
 *
 * 
 */

#ifndef OAIPaginationParamsRequest_H
#define OAIPaginationParamsRequest_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPaginationParamsRequest : public OAIObject {
public:
    OAIPaginationParamsRequest();
    OAIPaginationParamsRequest(QString json);
    ~OAIPaginationParamsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getIdGt() const;
    void setIdGt(const qint32 &id_gt);
    bool is_id_gt_Set() const;
    bool is_id_gt_Valid() const;

    qint32 getIdGte() const;
    void setIdGte(const qint32 &id_gte);
    bool is_id_gte_Set() const;
    bool is_id_gte_Valid() const;

    qint32 getIdLt() const;
    void setIdLt(const qint32 &id_lt);
    bool is_id_lt_Set() const;
    bool is_id_lt_Valid() const;

    qint32 getIdLte() const;
    void setIdLte(const qint32 &id_lte);
    bool is_id_lte_Set() const;
    bool is_id_lte_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    qint32 getOffset() const;
    void setOffset(const qint32 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id_gt;
    bool m_id_gt_isSet;
    bool m_id_gt_isValid;

    qint32 m_id_gte;
    bool m_id_gte_isSet;
    bool m_id_gte_isValid;

    qint32 m_id_lt;
    bool m_id_lt_isSet;
    bool m_id_lt_isValid;

    qint32 m_id_lte;
    bool m_id_lte_isSet;
    bool m_id_lte_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    qint32 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPaginationParamsRequest)

#endif // OAIPaginationParamsRequest_H
