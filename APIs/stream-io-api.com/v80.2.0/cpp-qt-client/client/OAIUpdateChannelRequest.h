/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateChannelRequest.h
 *
 * 
 */

#ifndef OAIUpdateChannelRequest_H
#define OAIUpdateChannelRequest_H

#include <QJsonObject>

#include "OAIChannelMemberRequest.h"
#include "OAIChannelRequest.h"
#include "OAIMessageRequest.h"
#include "OAIUserObjectRequest.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChannelMemberRequest;

class OAIUpdateChannelRequest : public OAIObject {
public:
    OAIUpdateChannelRequest();
    OAIUpdateChannelRequest(QString json);
    ~OAIUpdateChannelRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAcceptInvite() const;
    void setAcceptInvite(const bool &accept_invite);
    bool is_accept_invite_Set() const;
    bool is_accept_invite_Valid() const;

    QList<OAIChannelMemberRequest> getAddMembers() const;
    void setAddMembers(const QList<OAIChannelMemberRequest> &add_members);
    bool is_add_members_Set() const;
    bool is_add_members_Valid() const;

    QList<QString> getAddModerators() const;
    void setAddModerators(const QList<QString> &add_moderators);
    bool is_add_moderators_Set() const;
    bool is_add_moderators_Valid() const;

    QList<OAIChannelMemberRequest> getAssignRoles() const;
    void setAssignRoles(const QList<OAIChannelMemberRequest> &assign_roles);
    bool is_assign_roles_Set() const;
    bool is_assign_roles_Valid() const;

    qint32 getCooldown() const;
    void setCooldown(const qint32 &cooldown);
    bool is_cooldown_Set() const;
    bool is_cooldown_Valid() const;

    OAIChannelRequest getData() const;
    void setData(const OAIChannelRequest &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QList<QString> getDemoteModerators() const;
    void setDemoteModerators(const QList<QString> &demote_moderators);
    bool is_demote_moderators_Set() const;
    bool is_demote_moderators_Valid() const;

    bool isHideHistory() const;
    void setHideHistory(const bool &hide_history);
    bool is_hide_history_Set() const;
    bool is_hide_history_Valid() const;

    QList<OAIChannelMemberRequest> getInvites() const;
    void setInvites(const QList<OAIChannelMemberRequest> &invites);
    bool is_invites_Set() const;
    bool is_invites_Valid() const;

    OAIMessageRequest getMessage() const;
    void setMessage(const OAIMessageRequest &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    bool isRejectInvite() const;
    void setRejectInvite(const bool &reject_invite);
    bool is_reject_invite_Set() const;
    bool is_reject_invite_Valid() const;

    QList<QString> getRemoveMembers() const;
    void setRemoveMembers(const QList<QString> &remove_members);
    bool is_remove_members_Set() const;
    bool is_remove_members_Valid() const;

    bool isSkipPush() const;
    void setSkipPush(const bool &skip_push);
    bool is_skip_push_Set() const;
    bool is_skip_push_Valid() const;

    OAIUserObjectRequest getUser() const;
    void setUser(const OAIUserObjectRequest &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_accept_invite;
    bool m_accept_invite_isSet;
    bool m_accept_invite_isValid;

    QList<OAIChannelMemberRequest> m_add_members;
    bool m_add_members_isSet;
    bool m_add_members_isValid;

    QList<QString> m_add_moderators;
    bool m_add_moderators_isSet;
    bool m_add_moderators_isValid;

    QList<OAIChannelMemberRequest> m_assign_roles;
    bool m_assign_roles_isSet;
    bool m_assign_roles_isValid;

    qint32 m_cooldown;
    bool m_cooldown_isSet;
    bool m_cooldown_isValid;

    OAIChannelRequest m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QList<QString> m_demote_moderators;
    bool m_demote_moderators_isSet;
    bool m_demote_moderators_isValid;

    bool m_hide_history;
    bool m_hide_history_isSet;
    bool m_hide_history_isValid;

    QList<OAIChannelMemberRequest> m_invites;
    bool m_invites_isSet;
    bool m_invites_isValid;

    OAIMessageRequest m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    bool m_reject_invite;
    bool m_reject_invite_isSet;
    bool m_reject_invite_isValid;

    QList<QString> m_remove_members;
    bool m_remove_members_isSet;
    bool m_remove_members_isValid;

    bool m_skip_push;
    bool m_skip_push_isSet;
    bool m_skip_push_isValid;

    OAIUserObjectRequest m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateChannelRequest)

#endif // OAIUpdateChannelRequest_H
