/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessagePaginationParamsRequest.h
 *
 * 
 */

#ifndef OAIMessagePaginationParamsRequest_H
#define OAIMessagePaginationParamsRequest_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMessagePaginationParamsRequest : public OAIObject {
public:
    OAIMessagePaginationParamsRequest();
    OAIMessagePaginationParamsRequest(QString json);
    ~OAIMessagePaginationParamsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAtAfter() const;
    void setCreatedAtAfter(const QDateTime &created_at_after);
    bool is_created_at_after_Set() const;
    bool is_created_at_after_Valid() const;

    QDateTime getCreatedAtAfterOrEqual() const;
    void setCreatedAtAfterOrEqual(const QDateTime &created_at_after_or_equal);
    bool is_created_at_after_or_equal_Set() const;
    bool is_created_at_after_or_equal_Valid() const;

    QDateTime getCreatedAtAround() const;
    void setCreatedAtAround(const QDateTime &created_at_around);
    bool is_created_at_around_Set() const;
    bool is_created_at_around_Valid() const;

    QDateTime getCreatedAtBefore() const;
    void setCreatedAtBefore(const QDateTime &created_at_before);
    bool is_created_at_before_Set() const;
    bool is_created_at_before_Valid() const;

    QDateTime getCreatedAtBeforeOrEqual() const;
    void setCreatedAtBeforeOrEqual(const QDateTime &created_at_before_or_equal);
    bool is_created_at_before_or_equal_Set() const;
    bool is_created_at_before_or_equal_Valid() const;

    QString getIdAround() const;
    void setIdAround(const QString &id_around);
    bool is_id_around_Set() const;
    bool is_id_around_Valid() const;

    QString getIdGt() const;
    void setIdGt(const QString &id_gt);
    bool is_id_gt_Set() const;
    bool is_id_gt_Valid() const;

    QString getIdGte() const;
    void setIdGte(const QString &id_gte);
    bool is_id_gte_Set() const;
    bool is_id_gte_Valid() const;

    QString getIdLt() const;
    void setIdLt(const QString &id_lt);
    bool is_id_lt_Set() const;
    bool is_id_lt_Valid() const;

    QString getIdLte() const;
    void setIdLte(const QString &id_lte);
    bool is_id_lte_Set() const;
    bool is_id_lte_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    qint32 getOffset() const;
    void setOffset(const qint32 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at_after;
    bool m_created_at_after_isSet;
    bool m_created_at_after_isValid;

    QDateTime m_created_at_after_or_equal;
    bool m_created_at_after_or_equal_isSet;
    bool m_created_at_after_or_equal_isValid;

    QDateTime m_created_at_around;
    bool m_created_at_around_isSet;
    bool m_created_at_around_isValid;

    QDateTime m_created_at_before;
    bool m_created_at_before_isSet;
    bool m_created_at_before_isValid;

    QDateTime m_created_at_before_or_equal;
    bool m_created_at_before_or_equal_isSet;
    bool m_created_at_before_or_equal_isValid;

    QString m_id_around;
    bool m_id_around_isSet;
    bool m_id_around_isValid;

    QString m_id_gt;
    bool m_id_gt_isSet;
    bool m_id_gt_isValid;

    QString m_id_gte;
    bool m_id_gte_isSet;
    bool m_id_gte_isValid;

    QString m_id_lt;
    bool m_id_lt_isSet;
    bool m_id_lt_isValid;

    QString m_id_lte;
    bool m_id_lte_isSet;
    bool m_id_lte_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    qint32 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessagePaginationParamsRequest)

#endif // OAIMessagePaginationParamsRequest_H
