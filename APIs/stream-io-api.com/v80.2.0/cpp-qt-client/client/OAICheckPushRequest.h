/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheckPushRequest.h
 *
 * 
 */

#ifndef OAICheckPushRequest_H
#define OAICheckPushRequest_H

#include <QJsonObject>

#include "OAIUserObjectRequest.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICheckPushRequest : public OAIObject {
public:
    OAICheckPushRequest();
    OAICheckPushRequest(QString json);
    ~OAICheckPushRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApnTemplate() const;
    void setApnTemplate(const QString &apn_template);
    bool is_apn_template_Set() const;
    bool is_apn_template_Valid() const;

    QString getFirebaseDataTemplate() const;
    void setFirebaseDataTemplate(const QString &firebase_data_template);
    bool is_firebase_data_template_Set() const;
    bool is_firebase_data_template_Valid() const;

    QString getFirebaseTemplate() const;
    void setFirebaseTemplate(const QString &firebase_template);
    bool is_firebase_template_Set() const;
    bool is_firebase_template_Valid() const;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QString getPushProviderName() const;
    void setPushProviderName(const QString &push_provider_name);
    bool is_push_provider_name_Set() const;
    bool is_push_provider_name_Valid() const;

    QString getPushProviderType() const;
    void setPushProviderType(const QString &push_provider_type);
    bool is_push_provider_type_Set() const;
    bool is_push_provider_type_Valid() const;

    bool isSkipDevices() const;
    void setSkipDevices(const bool &skip_devices);
    bool is_skip_devices_Set() const;
    bool is_skip_devices_Valid() const;

    OAIUserObjectRequest getUser() const;
    void setUser(const OAIUserObjectRequest &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_apn_template;
    bool m_apn_template_isSet;
    bool m_apn_template_isValid;

    QString m_firebase_data_template;
    bool m_firebase_data_template_isSet;
    bool m_firebase_data_template_isValid;

    QString m_firebase_template;
    bool m_firebase_template_isSet;
    bool m_firebase_template_isValid;

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QString m_push_provider_name;
    bool m_push_provider_name_isSet;
    bool m_push_provider_name_isValid;

    QString m_push_provider_type;
    bool m_push_provider_type_isSet;
    bool m_push_provider_type_isValid;

    bool m_skip_devices;
    bool m_skip_devices_isSet;
    bool m_skip_devices_isValid;

    OAIUserObjectRequest m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheckPushRequest)

#endif // OAICheckPushRequest_H
