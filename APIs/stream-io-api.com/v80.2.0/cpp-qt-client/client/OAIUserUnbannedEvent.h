/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserUnbannedEvent.h
 *
 * 
 */

#ifndef OAIUserUnbannedEvent_H
#define OAIUserUnbannedEvent_H

#include <QJsonObject>

#include "OAIUserObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserUnbannedEvent : public OAIObject {
public:
    OAIUserUnbannedEvent();
    OAIUserUnbannedEvent(QString json);
    ~OAIUserUnbannedEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChannelId() const;
    void setChannelId(const QString &channel_id);
    bool is_channel_id_Set() const;
    bool is_channel_id_Valid() const;

    QString getChannelType() const;
    void setChannelType(const QString &channel_type);
    bool is_channel_type_Set() const;
    bool is_channel_type_Valid() const;

    QString getCid() const;
    void setCid(const QString &cid);
    bool is_cid_Set() const;
    bool is_cid_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isShadow() const;
    void setShadow(const bool &shadow);
    bool is_shadow_Set() const;
    bool is_shadow_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIUserObject getUser() const;
    void setUser(const OAIUserObject &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_channel_id;
    bool m_channel_id_isSet;
    bool m_channel_id_isValid;

    QString m_channel_type;
    bool m_channel_type_isSet;
    bool m_channel_type_isValid;

    QString m_cid;
    bool m_cid_isSet;
    bool m_cid_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_shadow;
    bool m_shadow_isSet;
    bool m_shadow_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIUserObject m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserUnbannedEvent)

#endif // OAIUserUnbannedEvent_H
