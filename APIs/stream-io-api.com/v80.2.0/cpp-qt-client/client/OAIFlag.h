/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlag.h
 *
 * Contains information about flagged user or message
 */

#ifndef OAIFlag_H
#define OAIFlag_H

#include <QJsonObject>

#include "OAIFlagDetails.h"
#include "OAIMessage.h"
#include "OAIUserObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFlag : public OAIObject {
public:
    OAIFlag();
    OAIFlag(QString json);
    ~OAIFlag() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getApprovedAt() const;
    void setApprovedAt(const QDateTime &approved_at);
    bool is_approved_at_Set() const;
    bool is_approved_at_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isCreatedByAutomod() const;
    void setCreatedByAutomod(const bool &created_by_automod);
    bool is_created_by_automod_Set() const;
    bool is_created_by_automod_Valid() const;

    OAIFlagDetails getDetails() const;
    void setDetails(const OAIFlagDetails &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QDateTime getRejectedAt() const;
    void setRejectedAt(const QDateTime &rejected_at);
    bool is_rejected_at_Set() const;
    bool is_rejected_at_Valid() const;

    QDateTime getReviewedAt() const;
    void setReviewedAt(const QDateTime &reviewed_at);
    bool is_reviewed_at_Set() const;
    bool is_reviewed_at_Valid() const;

    OAIMessage getTargetMessage() const;
    void setTargetMessage(const OAIMessage &target_message);
    bool is_target_message_Set() const;
    bool is_target_message_Valid() const;

    QString getTargetMessageId() const;
    void setTargetMessageId(const QString &target_message_id);
    bool is_target_message_id_Set() const;
    bool is_target_message_id_Valid() const;

    OAIUserObject getTargetUser() const;
    void setTargetUser(const OAIUserObject &target_user);
    bool is_target_user_Set() const;
    bool is_target_user_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIUserObject getUser() const;
    void setUser(const OAIUserObject &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_approved_at;
    bool m_approved_at_isSet;
    bool m_approved_at_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_created_by_automod;
    bool m_created_by_automod_isSet;
    bool m_created_by_automod_isValid;

    OAIFlagDetails m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QDateTime m_rejected_at;
    bool m_rejected_at_isSet;
    bool m_rejected_at_isValid;

    QDateTime m_reviewed_at;
    bool m_reviewed_at_isSet;
    bool m_reviewed_at_isValid;

    OAIMessage m_target_message;
    bool m_target_message_isSet;
    bool m_target_message_isValid;

    QString m_target_message_id;
    bool m_target_message_id_isSet;
    bool m_target_message_id_isValid;

    OAIUserObject m_target_user;
    bool m_target_user_isSet;
    bool m_target_user_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIUserObject m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlag)

#endif // OAIFlag_H
