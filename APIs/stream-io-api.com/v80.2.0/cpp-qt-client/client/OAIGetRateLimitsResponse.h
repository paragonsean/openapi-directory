/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetRateLimitsResponse.h
 *
 * 
 */

#ifndef OAIGetRateLimitsResponse_H
#define OAIGetRateLimitsResponse_H

#include <QJsonObject>

#include "OAILimitInfo.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILimitInfo;

class OAIGetRateLimitsResponse : public OAIObject {
public:
    OAIGetRateLimitsResponse();
    OAIGetRateLimitsResponse(QString json);
    ~OAIGetRateLimitsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, OAILimitInfo> getAndroid() const;
    void setAndroid(const QMap<QString, OAILimitInfo> &android);
    bool is_android_Set() const;
    bool is_android_Valid() const;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QMap<QString, OAILimitInfo> getIos() const;
    void setIos(const QMap<QString, OAILimitInfo> &ios);
    bool is_ios_Set() const;
    bool is_ios_Valid() const;

    QMap<QString, OAILimitInfo> getServerSide() const;
    void setServerSide(const QMap<QString, OAILimitInfo> &server_side);
    bool is_server_side_Set() const;
    bool is_server_side_Valid() const;

    QMap<QString, OAILimitInfo> getWeb() const;
    void setWeb(const QMap<QString, OAILimitInfo> &web);
    bool is_web_Set() const;
    bool is_web_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, OAILimitInfo> m_android;
    bool m_android_isSet;
    bool m_android_isValid;

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QMap<QString, OAILimitInfo> m_ios;
    bool m_ios_isSet;
    bool m_ios_isValid;

    QMap<QString, OAILimitInfo> m_server_side;
    bool m_server_side_isSet;
    bool m_server_side_isValid;

    QMap<QString, OAILimitInfo> m_web;
    bool m_web_isSet;
    bool m_web_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetRateLimitsResponse)

#endif // OAIGetRateLimitsResponse_H
