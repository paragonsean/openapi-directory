/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHLSSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHLSSettings::OAIHLSSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHLSSettings::OAIHLSSettings() {
    this->initializeModel();
}

OAIHLSSettings::~OAIHLSSettings() {}

void OAIHLSSettings::initializeModel() {

    m_auto_on_isSet = false;
    m_auto_on_isValid = false;

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_quality_tracks_isSet = false;
    m_quality_tracks_isValid = false;
}

void OAIHLSSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHLSSettings::fromJsonObject(QJsonObject json) {

    m_auto_on_isValid = ::OpenAPI::fromJsonValue(m_auto_on, json[QString("auto_on")]);
    m_auto_on_isSet = !json[QString("auto_on")].isNull() && m_auto_on_isValid;

    m_enabled_isValid = ::OpenAPI::fromJsonValue(m_enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_quality_tracks_isValid = ::OpenAPI::fromJsonValue(m_quality_tracks, json[QString("quality_tracks")]);
    m_quality_tracks_isSet = !json[QString("quality_tracks")].isNull() && m_quality_tracks_isValid;
}

QString OAIHLSSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHLSSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_on_isSet) {
        obj.insert(QString("auto_on"), ::OpenAPI::toJsonValue(m_auto_on));
    }
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(m_enabled));
    }
    if (m_quality_tracks.size() > 0) {
        obj.insert(QString("quality_tracks"), ::OpenAPI::toJsonValue(m_quality_tracks));
    }
    return obj;
}

bool OAIHLSSettings::isAutoOn() const {
    return m_auto_on;
}
void OAIHLSSettings::setAutoOn(const bool &auto_on) {
    m_auto_on = auto_on;
    m_auto_on_isSet = true;
}

bool OAIHLSSettings::is_auto_on_Set() const{
    return m_auto_on_isSet;
}

bool OAIHLSSettings::is_auto_on_Valid() const{
    return m_auto_on_isValid;
}

bool OAIHLSSettings::isEnabled() const {
    return m_enabled;
}
void OAIHLSSettings::setEnabled(const bool &enabled) {
    m_enabled = enabled;
    m_enabled_isSet = true;
}

bool OAIHLSSettings::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIHLSSettings::is_enabled_Valid() const{
    return m_enabled_isValid;
}

QList<QString> OAIHLSSettings::getQualityTracks() const {
    return m_quality_tracks;
}
void OAIHLSSettings::setQualityTracks(const QList<QString> &quality_tracks) {
    m_quality_tracks = quality_tracks;
    m_quality_tracks_isSet = true;
}

bool OAIHLSSettings::is_quality_tracks_Set() const{
    return m_quality_tracks_isSet;
}

bool OAIHLSSettings::is_quality_tracks_Valid() const{
    return m_quality_tracks_isValid;
}

bool OAIHLSSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quality_tracks.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHLSSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_auto_on_isValid && m_enabled_isValid && m_quality_tracks_isValid && true;
}

} // namespace OpenAPI
