/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListPushProvidersResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListPushProvidersResponse::OAIListPushProvidersResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListPushProvidersResponse::OAIListPushProvidersResponse() {
    this->initializeModel();
}

OAIListPushProvidersResponse::~OAIListPushProvidersResponse() {}

void OAIListPushProvidersResponse::initializeModel() {

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_push_providers_isSet = false;
    m_push_providers_isValid = false;
}

void OAIListPushProvidersResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListPushProvidersResponse::fromJsonObject(QJsonObject json) {

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_push_providers_isValid = ::OpenAPI::fromJsonValue(m_push_providers, json[QString("push_providers")]);
    m_push_providers_isSet = !json[QString("push_providers")].isNull() && m_push_providers_isValid;
}

QString OAIListPushProvidersResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListPushProvidersResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_push_providers.size() > 0) {
        obj.insert(QString("push_providers"), ::OpenAPI::toJsonValue(m_push_providers));
    }
    return obj;
}

QString OAIListPushProvidersResponse::getDuration() const {
    return m_duration;
}
void OAIListPushProvidersResponse::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIListPushProvidersResponse::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIListPushProvidersResponse::is_duration_Valid() const{
    return m_duration_isValid;
}

QList<OAIPushProvider> OAIListPushProvidersResponse::getPushProviders() const {
    return m_push_providers;
}
void OAIListPushProvidersResponse::setPushProviders(const QList<OAIPushProvider> &push_providers) {
    m_push_providers = push_providers;
    m_push_providers_isSet = true;
}

bool OAIListPushProvidersResponse::is_push_providers_Set() const{
    return m_push_providers_isSet;
}

bool OAIListPushProvidersResponse::is_push_providers_Valid() const{
    return m_push_providers_isValid;
}

bool OAIListPushProvidersResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_push_providers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListPushProvidersResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_duration_isValid && m_push_providers_isValid && true;
}

} // namespace OpenAPI
