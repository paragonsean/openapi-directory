/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChannelConfigRequest.h
 *
 * Channel configuration overrides
 */

#ifndef OAIChannelConfigRequest_H
#define OAIChannelConfigRequest_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIChannelConfigRequest : public OAIObject {
public:
    OAIChannelConfigRequest();
    OAIChannelConfigRequest(QString json);
    ~OAIChannelConfigRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBlocklist() const;
    void setBlocklist(const QString &blocklist);
    bool is_blocklist_Set() const;
    bool is_blocklist_Valid() const;

    QString getBlocklistBehavior() const;
    void setBlocklistBehavior(const QString &blocklist_behavior);
    bool is_blocklist_behavior_Set() const;
    bool is_blocklist_behavior_Valid() const;

    QList<QString> getCommands() const;
    void setCommands(const QList<QString> &commands);
    bool is_commands_Set() const;
    bool is_commands_Valid() const;

    QMap<QString, QList<QString>> getGrants() const;
    void setGrants(const QMap<QString, QList<QString>> &grants);
    bool is_grants_Set() const;
    bool is_grants_Valid() const;

    qint32 getMaxMessageLength() const;
    void setMaxMessageLength(const qint32 &max_message_length);
    bool is_max_message_length_Set() const;
    bool is_max_message_length_Valid() const;

    bool isQuotes() const;
    void setQuotes(const bool &quotes);
    bool is_quotes_Set() const;
    bool is_quotes_Valid() const;

    bool isReactions() const;
    void setReactions(const bool &reactions);
    bool is_reactions_Set() const;
    bool is_reactions_Valid() const;

    bool isReplies() const;
    void setReplies(const bool &replies);
    bool is_replies_Set() const;
    bool is_replies_Valid() const;

    bool isTypingEvents() const;
    void setTypingEvents(const bool &typing_events);
    bool is_typing_events_Set() const;
    bool is_typing_events_Valid() const;

    bool isUploads() const;
    void setUploads(const bool &uploads);
    bool is_uploads_Set() const;
    bool is_uploads_Valid() const;

    bool isUrlEnrichment() const;
    void setUrlEnrichment(const bool &url_enrichment);
    bool is_url_enrichment_Set() const;
    bool is_url_enrichment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_blocklist;
    bool m_blocklist_isSet;
    bool m_blocklist_isValid;

    QString m_blocklist_behavior;
    bool m_blocklist_behavior_isSet;
    bool m_blocklist_behavior_isValid;

    QList<QString> m_commands;
    bool m_commands_isSet;
    bool m_commands_isValid;

    QMap<QString, QList<QString>> m_grants;
    bool m_grants_isSet;
    bool m_grants_isValid;

    qint32 m_max_message_length;
    bool m_max_message_length_isSet;
    bool m_max_message_length_isValid;

    bool m_quotes;
    bool m_quotes_isSet;
    bool m_quotes_isValid;

    bool m_reactions;
    bool m_reactions_isSet;
    bool m_reactions_isValid;

    bool m_replies;
    bool m_replies_isSet;
    bool m_replies_isValid;

    bool m_typing_events;
    bool m_typing_events_isSet;
    bool m_typing_events_isValid;

    bool m_uploads;
    bool m_uploads_isSet;
    bool m_uploads_isValid;

    bool m_url_enrichment;
    bool m_url_enrichment_isSet;
    bool m_url_enrichment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChannelConfigRequest)

#endif // OAIChannelConfigRequest_H
