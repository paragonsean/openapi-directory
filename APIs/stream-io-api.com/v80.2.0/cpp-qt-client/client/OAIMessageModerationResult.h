/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessageModerationResult.h
 *
 * 
 */

#ifndef OAIMessageModerationResult_H
#define OAIMessageModerationResult_H

#include <QJsonObject>

#include "OAIModerationResponse.h"
#include "OAIThresholds.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIModerationResponse;
class OAIThresholds;

class OAIMessageModerationResult : public OAIObject {
public:
    OAIMessageModerationResult();
    OAIMessageModerationResult(QString json);
    ~OAIMessageModerationResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    OAIModerationResponse getAiModerationResponse() const;
    void setAiModerationResponse(const OAIModerationResponse &ai_moderation_response);
    bool is_ai_moderation_response_Set() const;
    bool is_ai_moderation_response_Valid() const;

    QString getBlockedWord() const;
    void setBlockedWord(const QString &blocked_word);
    bool is_blocked_word_Set() const;
    bool is_blocked_word_Valid() const;

    QString getBlocklistName() const;
    void setBlocklistName(const QString &blocklist_name);
    bool is_blocklist_name_Set() const;
    bool is_blocklist_name_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getMessageId() const;
    void setMessageId(const QString &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QString getModeratedBy() const;
    void setModeratedBy(const QString &moderated_by);
    bool is_moderated_by_Set() const;
    bool is_moderated_by_Valid() const;

    OAIThresholds getModerationThresholds() const;
    void setModerationThresholds(const OAIThresholds &moderation_thresholds);
    bool is_moderation_thresholds_Set() const;
    bool is_moderation_thresholds_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    bool isUserBadKarma() const;
    void setUserBadKarma(const bool &user_bad_karma);
    bool is_user_bad_karma_Set() const;
    bool is_user_bad_karma_Valid() const;

    float getUserKarma() const;
    void setUserKarma(const float &user_karma);
    bool is_user_karma_Set() const;
    bool is_user_karma_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    OAIModerationResponse m_ai_moderation_response;
    bool m_ai_moderation_response_isSet;
    bool m_ai_moderation_response_isValid;

    QString m_blocked_word;
    bool m_blocked_word_isSet;
    bool m_blocked_word_isValid;

    QString m_blocklist_name;
    bool m_blocklist_name_isSet;
    bool m_blocklist_name_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QString m_moderated_by;
    bool m_moderated_by_isSet;
    bool m_moderated_by_isValid;

    OAIThresholds m_moderation_thresholds;
    bool m_moderation_thresholds_isSet;
    bool m_moderation_thresholds_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    bool m_user_bad_karma;
    bool m_user_bad_karma_isSet;
    bool m_user_bad_karma_isValid;

    float m_user_karma;
    bool m_user_karma_isSet;
    bool m_user_karma_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessageModerationResult)

#endif // OAIMessageModerationResult_H
