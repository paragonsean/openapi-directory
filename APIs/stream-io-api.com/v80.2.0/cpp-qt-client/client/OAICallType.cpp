/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICallType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICallType::OAICallType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICallType::OAICallType() {
    this->initializeModel();
}

OAICallType::~OAICallType() {}

void OAICallType::initializeModel() {

    m_app_pk_isSet = false;
    m_app_pk_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pk_isSet = false;
    m_pk_isValid = false;

    m_settings_isSet = false;
    m_settings_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAICallType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICallType::fromJsonObject(QJsonObject json) {

    m_app_pk_isValid = ::OpenAPI::fromJsonValue(m_app_pk, json[QString("AppPK")]);
    m_app_pk_isSet = !json[QString("AppPK")].isNull() && m_app_pk_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("CreatedAt")]);
    m_created_at_isSet = !json[QString("CreatedAt")].isNull() && m_created_at_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_pk_isValid = ::OpenAPI::fromJsonValue(m_pk, json[QString("PK")]);
    m_pk_isSet = !json[QString("PK")].isNull() && m_pk_isValid;

    m_settings_isValid = ::OpenAPI::fromJsonValue(m_settings, json[QString("Settings")]);
    m_settings_isSet = !json[QString("Settings")].isNull() && m_settings_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("UpdatedAt")]);
    m_updated_at_isSet = !json[QString("UpdatedAt")].isNull() && m_updated_at_isValid;
}

QString OAICallType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICallType::asJsonObject() const {
    QJsonObject obj;
    if (m_app_pk_isSet) {
        obj.insert(QString("AppPK"), ::OpenAPI::toJsonValue(m_app_pk));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("CreatedAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pk_isSet) {
        obj.insert(QString("PK"), ::OpenAPI::toJsonValue(m_pk));
    }
    if (m_settings.isSet()) {
        obj.insert(QString("Settings"), ::OpenAPI::toJsonValue(m_settings));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("UpdatedAt"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

qint32 OAICallType::getAppPk() const {
    return m_app_pk;
}
void OAICallType::setAppPk(const qint32 &app_pk) {
    m_app_pk = app_pk;
    m_app_pk_isSet = true;
}

bool OAICallType::is_app_pk_Set() const{
    return m_app_pk_isSet;
}

bool OAICallType::is_app_pk_Valid() const{
    return m_app_pk_isValid;
}

QDateTime OAICallType::getCreatedAt() const {
    return m_created_at;
}
void OAICallType::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICallType::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICallType::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAICallType::getName() const {
    return m_name;
}
void OAICallType::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICallType::is_name_Set() const{
    return m_name_isSet;
}

bool OAICallType::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAICallType::getPk() const {
    return m_pk;
}
void OAICallType::setPk(const qint32 &pk) {
    m_pk = pk;
    m_pk_isSet = true;
}

bool OAICallType::is_pk_Set() const{
    return m_pk_isSet;
}

bool OAICallType::is_pk_Valid() const{
    return m_pk_isValid;
}

OAICallSettings OAICallType::getSettings() const {
    return m_settings;
}
void OAICallType::setSettings(const OAICallSettings &settings) {
    m_settings = settings;
    m_settings_isSet = true;
}

bool OAICallType::is_settings_Set() const{
    return m_settings_isSet;
}

bool OAICallType::is_settings_Valid() const{
    return m_settings_isValid;
}

QDateTime OAICallType::getUpdatedAt() const {
    return m_updated_at;
}
void OAICallType::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAICallType::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAICallType::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAICallType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_pk_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pk_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICallType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_pk_isValid && m_created_at_isValid && m_name_isValid && m_pk_isValid && m_updated_at_isValid && true;
}

} // namespace OpenAPI
