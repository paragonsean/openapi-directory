/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISendMessageRequest.h
 *
 * Contains all information needed to send new message
 */

#ifndef OAISendMessageRequest_H
#define OAISendMessageRequest_H

#include <QJsonObject>

#include "OAIMessageRequest.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISendMessageRequest : public OAIObject {
public:
    OAISendMessageRequest();
    OAISendMessageRequest(QString json);
    ~OAISendMessageRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isForceModeration() const;
    void setForceModeration(const bool &force_moderation);
    bool is_force_moderation_Set() const;
    bool is_force_moderation_Valid() const;

    bool isIsPendingMessage() const;
    void setIsPendingMessage(const bool &is_pending_message);
    bool is_is_pending_message_Set() const;
    bool is_is_pending_message_Valid() const;

    bool isKeepChannelHidden() const;
    void setKeepChannelHidden(const bool &keep_channel_hidden);
    bool is_keep_channel_hidden_Set() const;
    bool is_keep_channel_hidden_Valid() const;

    OAIMessageRequest getMessage() const;
    void setMessage(const OAIMessageRequest &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QMap<QString, QString> getPendingMessageMetadata() const;
    void setPendingMessageMetadata(const QMap<QString, QString> &pending_message_metadata);
    bool is_pending_message_metadata_Set() const;
    bool is_pending_message_metadata_Valid() const;

    bool isSkipEnrichUrl() const;
    void setSkipEnrichUrl(const bool &skip_enrich_url);
    bool is_skip_enrich_url_Set() const;
    bool is_skip_enrich_url_Valid() const;

    bool isSkipPush() const;
    void setSkipPush(const bool &skip_push);
    bool is_skip_push_Set() const;
    bool is_skip_push_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_force_moderation;
    bool m_force_moderation_isSet;
    bool m_force_moderation_isValid;

    bool m_is_pending_message;
    bool m_is_pending_message_isSet;
    bool m_is_pending_message_isValid;

    bool m_keep_channel_hidden;
    bool m_keep_channel_hidden_isSet;
    bool m_keep_channel_hidden_isValid;

    OAIMessageRequest m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QMap<QString, QString> m_pending_message_metadata;
    bool m_pending_message_metadata_isSet;
    bool m_pending_message_metadata_isValid;

    bool m_skip_enrich_url;
    bool m_skip_enrich_url_isSet;
    bool m_skip_enrich_url_isValid;

    bool m_skip_push;
    bool m_skip_push_isSet;
    bool m_skip_push_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISendMessageRequest)

#endif // OAISendMessageRequest_H
