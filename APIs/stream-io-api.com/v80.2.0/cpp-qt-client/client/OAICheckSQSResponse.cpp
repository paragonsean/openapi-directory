/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICheckSQSResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICheckSQSResponse::OAICheckSQSResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICheckSQSResponse::OAICheckSQSResponse() {
    this->initializeModel();
}

OAICheckSQSResponse::~OAICheckSQSResponse() {}

void OAICheckSQSResponse::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAICheckSQSResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICheckSQSResponse::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAICheckSQSResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICheckSQSResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_data.size() > 0) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_error_isSet) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QMap<QString, QJsonValue> OAICheckSQSResponse::getData() const {
    return m_data;
}
void OAICheckSQSResponse::setData(const QMap<QString, QJsonValue> &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAICheckSQSResponse::is_data_Set() const{
    return m_data_isSet;
}

bool OAICheckSQSResponse::is_data_Valid() const{
    return m_data_isValid;
}

QString OAICheckSQSResponse::getDuration() const {
    return m_duration;
}
void OAICheckSQSResponse::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAICheckSQSResponse::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAICheckSQSResponse::is_duration_Valid() const{
    return m_duration_isValid;
}

QString OAICheckSQSResponse::getError() const {
    return m_error;
}
void OAICheckSQSResponse::setError(const QString &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAICheckSQSResponse::is_error_Set() const{
    return m_error_isSet;
}

bool OAICheckSQSResponse::is_error_Valid() const{
    return m_error_isValid;
}

QString OAICheckSQSResponse::getStatus() const {
    return m_status;
}
void OAICheckSQSResponse::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICheckSQSResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAICheckSQSResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAICheckSQSResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICheckSQSResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_duration_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
