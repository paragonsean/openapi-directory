/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIXiaomiConfigRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIXiaomiConfigRequest::OAIXiaomiConfigRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIXiaomiConfigRequest::OAIXiaomiConfigRequest() {
    this->initializeModel();
}

OAIXiaomiConfigRequest::~OAIXiaomiConfigRequest() {}

void OAIXiaomiConfigRequest::initializeModel() {

    m_disabled_isSet = false;
    m_disabled_isValid = false;

    m_package_name_isSet = false;
    m_package_name_isValid = false;

    m_secret_isSet = false;
    m_secret_isValid = false;
}

void OAIXiaomiConfigRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIXiaomiConfigRequest::fromJsonObject(QJsonObject json) {

    m_disabled_isValid = ::OpenAPI::fromJsonValue(m_disabled, json[QString("Disabled")]);
    m_disabled_isSet = !json[QString("Disabled")].isNull() && m_disabled_isValid;

    m_package_name_isValid = ::OpenAPI::fromJsonValue(m_package_name, json[QString("package_name")]);
    m_package_name_isSet = !json[QString("package_name")].isNull() && m_package_name_isValid;

    m_secret_isValid = ::OpenAPI::fromJsonValue(m_secret, json[QString("secret")]);
    m_secret_isSet = !json[QString("secret")].isNull() && m_secret_isValid;
}

QString OAIXiaomiConfigRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIXiaomiConfigRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_isSet) {
        obj.insert(QString("Disabled"), ::OpenAPI::toJsonValue(m_disabled));
    }
    if (m_package_name_isSet) {
        obj.insert(QString("package_name"), ::OpenAPI::toJsonValue(m_package_name));
    }
    if (m_secret_isSet) {
        obj.insert(QString("secret"), ::OpenAPI::toJsonValue(m_secret));
    }
    return obj;
}

bool OAIXiaomiConfigRequest::isDisabled() const {
    return m_disabled;
}
void OAIXiaomiConfigRequest::setDisabled(const bool &disabled) {
    m_disabled = disabled;
    m_disabled_isSet = true;
}

bool OAIXiaomiConfigRequest::is_disabled_Set() const{
    return m_disabled_isSet;
}

bool OAIXiaomiConfigRequest::is_disabled_Valid() const{
    return m_disabled_isValid;
}

QString OAIXiaomiConfigRequest::getPackageName() const {
    return m_package_name;
}
void OAIXiaomiConfigRequest::setPackageName(const QString &package_name) {
    m_package_name = package_name;
    m_package_name_isSet = true;
}

bool OAIXiaomiConfigRequest::is_package_name_Set() const{
    return m_package_name_isSet;
}

bool OAIXiaomiConfigRequest::is_package_name_Valid() const{
    return m_package_name_isValid;
}

QString OAIXiaomiConfigRequest::getSecret() const {
    return m_secret;
}
void OAIXiaomiConfigRequest::setSecret(const QString &secret) {
    m_secret = secret;
    m_secret_isSet = true;
}

bool OAIXiaomiConfigRequest::is_secret_Set() const{
    return m_secret_isSet;
}

bool OAIXiaomiConfigRequest::is_secret_Valid() const{
    return m_secret_isValid;
}

bool OAIXiaomiConfigRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secret_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIXiaomiConfigRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
