/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFlagMessageDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFlagMessageDetails::OAIFlagMessageDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFlagMessageDetails::OAIFlagMessageDetails() {
    this->initializeModel();
}

OAIFlagMessageDetails::~OAIFlagMessageDetails() {}

void OAIFlagMessageDetails::initializeModel() {

    m_pin_changed_isSet = false;
    m_pin_changed_isValid = false;

    m_should_enrich_isSet = false;
    m_should_enrich_isValid = false;

    m_skip_push_isSet = false;
    m_skip_push_isValid = false;

    m_updated_by_id_isSet = false;
    m_updated_by_id_isValid = false;
}

void OAIFlagMessageDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFlagMessageDetails::fromJsonObject(QJsonObject json) {

    m_pin_changed_isValid = ::OpenAPI::fromJsonValue(m_pin_changed, json[QString("pin_changed")]);
    m_pin_changed_isSet = !json[QString("pin_changed")].isNull() && m_pin_changed_isValid;

    m_should_enrich_isValid = ::OpenAPI::fromJsonValue(m_should_enrich, json[QString("should_enrich")]);
    m_should_enrich_isSet = !json[QString("should_enrich")].isNull() && m_should_enrich_isValid;

    m_skip_push_isValid = ::OpenAPI::fromJsonValue(m_skip_push, json[QString("skip_push")]);
    m_skip_push_isSet = !json[QString("skip_push")].isNull() && m_skip_push_isValid;

    m_updated_by_id_isValid = ::OpenAPI::fromJsonValue(m_updated_by_id, json[QString("updated_by_id")]);
    m_updated_by_id_isSet = !json[QString("updated_by_id")].isNull() && m_updated_by_id_isValid;
}

QString OAIFlagMessageDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFlagMessageDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_pin_changed_isSet) {
        obj.insert(QString("pin_changed"), ::OpenAPI::toJsonValue(m_pin_changed));
    }
    if (m_should_enrich_isSet) {
        obj.insert(QString("should_enrich"), ::OpenAPI::toJsonValue(m_should_enrich));
    }
    if (m_skip_push_isSet) {
        obj.insert(QString("skip_push"), ::OpenAPI::toJsonValue(m_skip_push));
    }
    if (m_updated_by_id_isSet) {
        obj.insert(QString("updated_by_id"), ::OpenAPI::toJsonValue(m_updated_by_id));
    }
    return obj;
}

bool OAIFlagMessageDetails::isPinChanged() const {
    return m_pin_changed;
}
void OAIFlagMessageDetails::setPinChanged(const bool &pin_changed) {
    m_pin_changed = pin_changed;
    m_pin_changed_isSet = true;
}

bool OAIFlagMessageDetails::is_pin_changed_Set() const{
    return m_pin_changed_isSet;
}

bool OAIFlagMessageDetails::is_pin_changed_Valid() const{
    return m_pin_changed_isValid;
}

bool OAIFlagMessageDetails::isShouldEnrich() const {
    return m_should_enrich;
}
void OAIFlagMessageDetails::setShouldEnrich(const bool &should_enrich) {
    m_should_enrich = should_enrich;
    m_should_enrich_isSet = true;
}

bool OAIFlagMessageDetails::is_should_enrich_Set() const{
    return m_should_enrich_isSet;
}

bool OAIFlagMessageDetails::is_should_enrich_Valid() const{
    return m_should_enrich_isValid;
}

bool OAIFlagMessageDetails::isSkipPush() const {
    return m_skip_push;
}
void OAIFlagMessageDetails::setSkipPush(const bool &skip_push) {
    m_skip_push = skip_push;
    m_skip_push_isSet = true;
}

bool OAIFlagMessageDetails::is_skip_push_Set() const{
    return m_skip_push_isSet;
}

bool OAIFlagMessageDetails::is_skip_push_Valid() const{
    return m_skip_push_isValid;
}

QString OAIFlagMessageDetails::getUpdatedById() const {
    return m_updated_by_id;
}
void OAIFlagMessageDetails::setUpdatedById(const QString &updated_by_id) {
    m_updated_by_id = updated_by_id;
    m_updated_by_id_isSet = true;
}

bool OAIFlagMessageDetails::is_updated_by_id_Set() const{
    return m_updated_by_id_isSet;
}

bool OAIFlagMessageDetails::is_updated_by_id_Valid() const{
    return m_updated_by_id_isValid;
}

bool OAIFlagMessageDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pin_changed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_should_enrich_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skip_push_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_by_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFlagMessageDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
