/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICheckPushResponse.h
 *
 * 
 */

#ifndef OAICheckPushResponse_H
#define OAICheckPushResponse_H

#include <QJsonObject>

#include "OAIDeviceErrorInfo.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeviceErrorInfo;

class OAICheckPushResponse : public OAIObject {
public:
    OAICheckPushResponse();
    OAICheckPushResponse(QString json);
    ~OAICheckPushResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, OAIDeviceErrorInfo> getDeviceErrors() const;
    void setDeviceErrors(const QMap<QString, OAIDeviceErrorInfo> &device_errors);
    bool is_device_errors_Set() const;
    bool is_device_errors_Valid() const;

    QString getDuration() const;
    void setDuration(const QString &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QList<QString> getGeneralErrors() const;
    void setGeneralErrors(const QList<QString> &general_errors);
    bool is_general_errors_Set() const;
    bool is_general_errors_Valid() const;

    QString getRenderedApnTemplate() const;
    void setRenderedApnTemplate(const QString &rendered_apn_template);
    bool is_rendered_apn_template_Set() const;
    bool is_rendered_apn_template_Valid() const;

    QString getRenderedFirebaseTemplate() const;
    void setRenderedFirebaseTemplate(const QString &rendered_firebase_template);
    bool is_rendered_firebase_template_Set() const;
    bool is_rendered_firebase_template_Valid() const;

    QMap<QString, QString> getRenderedMessage() const;
    void setRenderedMessage(const QMap<QString, QString> &rendered_message);
    bool is_rendered_message_Set() const;
    bool is_rendered_message_Valid() const;

    bool isSkipDevices() const;
    void setSkipDevices(const bool &skip_devices);
    bool is_skip_devices_Set() const;
    bool is_skip_devices_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, OAIDeviceErrorInfo> m_device_errors;
    bool m_device_errors_isSet;
    bool m_device_errors_isValid;

    QString m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QList<QString> m_general_errors;
    bool m_general_errors_isSet;
    bool m_general_errors_isValid;

    QString m_rendered_apn_template;
    bool m_rendered_apn_template_isSet;
    bool m_rendered_apn_template_isValid;

    QString m_rendered_firebase_template;
    bool m_rendered_firebase_template_isSet;
    bool m_rendered_firebase_template_isValid;

    QMap<QString, QString> m_rendered_message;
    bool m_rendered_message_isSet;
    bool m_rendered_message_isValid;

    bool m_skip_devices;
    bool m_skip_devices_isSet;
    bool m_skip_devices_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICheckPushResponse)

#endif // OAICheckPushResponse_H
