/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModerationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModerationResponse::OAIModerationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModerationResponse::OAIModerationResponse() {
    this->initializeModel();
}

OAIModerationResponse::~OAIModerationResponse() {}

void OAIModerationResponse::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_automod_response_isSet = false;
    m_automod_response_isValid = false;

    m_r_explicit_isSet = false;
    m_r_explicit_isValid = false;

    m_spam_isSet = false;
    m_spam_isValid = false;

    m_toxic_isSet = false;
    m_toxic_isValid = false;
}

void OAIModerationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModerationResponse::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_automod_response_isValid = ::OpenAPI::fromJsonValue(m_automod_response, json[QString("automod_response")]);
    m_automod_response_isSet = !json[QString("automod_response")].isNull() && m_automod_response_isValid;

    m_r_explicit_isValid = ::OpenAPI::fromJsonValue(m_r_explicit, json[QString("explicit")]);
    m_r_explicit_isSet = !json[QString("explicit")].isNull() && m_r_explicit_isValid;

    m_spam_isValid = ::OpenAPI::fromJsonValue(m_spam, json[QString("spam")]);
    m_spam_isSet = !json[QString("spam")].isNull() && m_spam_isValid;

    m_toxic_isValid = ::OpenAPI::fromJsonValue(m_toxic, json[QString("toxic")]);
    m_toxic_isSet = !json[QString("toxic")].isNull() && m_toxic_isValid;
}

QString OAIModerationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModerationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_automod_response_isSet) {
        obj.insert(QString("automod_response"), ::OpenAPI::toJsonValue(m_automod_response));
    }
    if (m_r_explicit_isSet) {
        obj.insert(QString("explicit"), ::OpenAPI::toJsonValue(m_r_explicit));
    }
    if (m_spam_isSet) {
        obj.insert(QString("spam"), ::OpenAPI::toJsonValue(m_spam));
    }
    if (m_toxic_isSet) {
        obj.insert(QString("toxic"), ::OpenAPI::toJsonValue(m_toxic));
    }
    return obj;
}

QString OAIModerationResponse::getAction() const {
    return m_action;
}
void OAIModerationResponse::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIModerationResponse::is_action_Set() const{
    return m_action_isSet;
}

bool OAIModerationResponse::is_action_Valid() const{
    return m_action_isValid;
}

QJsonValue OAIModerationResponse::getAutomodResponse() const {
    return m_automod_response;
}
void OAIModerationResponse::setAutomodResponse(const QJsonValue &automod_response) {
    m_automod_response = automod_response;
    m_automod_response_isSet = true;
}

bool OAIModerationResponse::is_automod_response_Set() const{
    return m_automod_response_isSet;
}

bool OAIModerationResponse::is_automod_response_Valid() const{
    return m_automod_response_isValid;
}

float OAIModerationResponse::getRExplicit() const {
    return m_r_explicit;
}
void OAIModerationResponse::setRExplicit(const float &r_explicit) {
    m_r_explicit = r_explicit;
    m_r_explicit_isSet = true;
}

bool OAIModerationResponse::is_r_explicit_Set() const{
    return m_r_explicit_isSet;
}

bool OAIModerationResponse::is_r_explicit_Valid() const{
    return m_r_explicit_isValid;
}

float OAIModerationResponse::getSpam() const {
    return m_spam;
}
void OAIModerationResponse::setSpam(const float &spam) {
    m_spam = spam;
    m_spam_isSet = true;
}

bool OAIModerationResponse::is_spam_Set() const{
    return m_spam_isSet;
}

bool OAIModerationResponse::is_spam_Valid() const{
    return m_spam_isValid;
}

float OAIModerationResponse::getToxic() const {
    return m_toxic;
}
void OAIModerationResponse::setToxic(const float &toxic) {
    m_toxic = toxic;
    m_toxic_isSet = true;
}

bool OAIModerationResponse::is_toxic_Set() const{
    return m_toxic_isSet;
}

bool OAIModerationResponse::is_toxic_Valid() const{
    return m_toxic_isValid;
}

bool OAIModerationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_automod_response_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_explicit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spam_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_toxic_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModerationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_action_isValid && m_automod_response_isValid && m_r_explicit_isValid && m_spam_isValid && m_toxic_isValid && true;
}

} // namespace OpenAPI
