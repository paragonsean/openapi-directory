/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateUsersRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateUsersRequest::OAIUpdateUsersRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateUsersRequest::OAIUpdateUsersRequest() {
    this->initializeModel();
}

OAIUpdateUsersRequest::~OAIUpdateUsersRequest() {}

void OAIUpdateUsersRequest::initializeModel() {

    m_users_isSet = false;
    m_users_isValid = false;
}

void OAIUpdateUsersRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateUsersRequest::fromJsonObject(QJsonObject json) {

    m_users_isValid = ::OpenAPI::fromJsonValue(m_users, json[QString("users")]);
    m_users_isSet = !json[QString("users")].isNull() && m_users_isValid;
}

QString OAIUpdateUsersRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateUsersRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_users.size() > 0) {
        obj.insert(QString("users"), ::OpenAPI::toJsonValue(m_users));
    }
    return obj;
}

QMap<QString, OAIUserObjectRequest> OAIUpdateUsersRequest::getUsers() const {
    return m_users;
}
void OAIUpdateUsersRequest::setUsers(const QMap<QString, OAIUserObjectRequest> &users) {
    m_users = users;
    m_users_isSet = true;
}

bool OAIUpdateUsersRequest::is_users_Set() const{
    return m_users_isSet;
}

bool OAIUpdateUsersRequest::is_users_Valid() const{
    return m_users_isValid;
}

bool OAIUpdateUsersRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_users.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateUsersRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_users_isValid && true;
}

} // namespace OpenAPI
