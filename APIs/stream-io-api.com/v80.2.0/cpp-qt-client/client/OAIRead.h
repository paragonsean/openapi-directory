/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRead.h
 *
 * 
 */

#ifndef OAIRead_H
#define OAIRead_H

#include <QJsonObject>

#include "OAIUserObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRead : public OAIObject {
public:
    OAIRead();
    OAIRead(QString json);
    ~OAIRead() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getLastRead() const;
    void setLastRead(const QDateTime &last_read);
    bool is_last_read_Set() const;
    bool is_last_read_Valid() const;

    QString getLastReadMessageId() const;
    void setLastReadMessageId(const QString &last_read_message_id);
    bool is_last_read_message_id_Set() const;
    bool is_last_read_message_id_Valid() const;

    qint32 getUnreadMessages() const;
    void setUnreadMessages(const qint32 &unread_messages);
    bool is_unread_messages_Set() const;
    bool is_unread_messages_Valid() const;

    OAIUserObject getUser() const;
    void setUser(const OAIUserObject &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_last_read;
    bool m_last_read_isSet;
    bool m_last_read_isValid;

    QString m_last_read_message_id;
    bool m_last_read_message_id_isSet;
    bool m_last_read_message_id_isValid;

    qint32 m_unread_messages;
    bool m_unread_messages_isSet;
    bool m_unread_messages_isValid;

    OAIUserObject m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRead)

#endif // OAIRead_H
