/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetExportChannelsStatusResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetExportChannelsStatusResponse::OAIGetExportChannelsStatusResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetExportChannelsStatusResponse::OAIGetExportChannelsStatusResponse() {
    this->initializeModel();
}

OAIGetExportChannelsStatusResponse::~OAIGetExportChannelsStatusResponse() {}

void OAIGetExportChannelsStatusResponse::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_task_id_isSet = false;
    m_task_id_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIGetExportChannelsStatusResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetExportChannelsStatusResponse::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_task_id_isValid = ::OpenAPI::fromJsonValue(m_task_id, json[QString("task_id")]);
    m_task_id_isSet = !json[QString("task_id")].isNull() && m_task_id_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;
}

QString OAIGetExportChannelsStatusResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetExportChannelsStatusResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_result.isSet()) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_task_id_isSet) {
        obj.insert(QString("task_id"), ::OpenAPI::toJsonValue(m_task_id));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

QDateTime OAIGetExportChannelsStatusResponse::getCreatedAt() const {
    return m_created_at;
}
void OAIGetExportChannelsStatusResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGetExportChannelsStatusResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGetExportChannelsStatusResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIGetExportChannelsStatusResponse::getDuration() const {
    return m_duration;
}
void OAIGetExportChannelsStatusResponse::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIGetExportChannelsStatusResponse::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIGetExportChannelsStatusResponse::is_duration_Valid() const{
    return m_duration_isValid;
}

OAIErrorResult OAIGetExportChannelsStatusResponse::getError() const {
    return m_error;
}
void OAIGetExportChannelsStatusResponse::setError(const OAIErrorResult &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIGetExportChannelsStatusResponse::is_error_Set() const{
    return m_error_isSet;
}

bool OAIGetExportChannelsStatusResponse::is_error_Valid() const{
    return m_error_isValid;
}

OAIExportChannelsResult OAIGetExportChannelsStatusResponse::getResult() const {
    return m_result;
}
void OAIGetExportChannelsStatusResponse::setResult(const OAIExportChannelsResult &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIGetExportChannelsStatusResponse::is_result_Set() const{
    return m_result_isSet;
}

bool OAIGetExportChannelsStatusResponse::is_result_Valid() const{
    return m_result_isValid;
}

QString OAIGetExportChannelsStatusResponse::getStatus() const {
    return m_status;
}
void OAIGetExportChannelsStatusResponse::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGetExportChannelsStatusResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGetExportChannelsStatusResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIGetExportChannelsStatusResponse::getTaskId() const {
    return m_task_id;
}
void OAIGetExportChannelsStatusResponse::setTaskId(const QString &task_id) {
    m_task_id = task_id;
    m_task_id_isSet = true;
}

bool OAIGetExportChannelsStatusResponse::is_task_id_Set() const{
    return m_task_id_isSet;
}

bool OAIGetExportChannelsStatusResponse::is_task_id_Valid() const{
    return m_task_id_isValid;
}

QDateTime OAIGetExportChannelsStatusResponse::getUpdatedAt() const {
    return m_updated_at;
}
void OAIGetExportChannelsStatusResponse::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIGetExportChannelsStatusResponse::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIGetExportChannelsStatusResponse::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIGetExportChannelsStatusResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_task_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetExportChannelsStatusResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_at_isValid && m_duration_isValid && m_status_isValid && m_task_id_isValid && m_updated_at_isValid && true;
}

} // namespace OpenAPI
