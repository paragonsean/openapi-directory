/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChannelGetOrCreateRequest.h
 *
 * 
 */

#ifndef OAIChannelGetOrCreateRequest_H
#define OAIChannelGetOrCreateRequest_H

#include <QJsonObject>

#include "OAIChannelRequest.h"
#include "OAIMessagePaginationParamsRequest.h"
#include "OAIPaginationParamsRequest.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPaginationParamsRequest;
class OAIMessagePaginationParamsRequest;

class OAIChannelGetOrCreateRequest : public OAIObject {
public:
    OAIChannelGetOrCreateRequest();
    OAIChannelGetOrCreateRequest(QString json);
    ~OAIChannelGetOrCreateRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getConnectionId() const;
    void setConnectionId(const QString &connection_id);
    bool is_connection_id_Set() const;
    bool is_connection_id_Valid() const;

    OAIChannelRequest getData() const;
    void setData(const OAIChannelRequest &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    bool isHideForCreator() const;
    void setHideForCreator(const bool &hide_for_creator);
    bool is_hide_for_creator_Set() const;
    bool is_hide_for_creator_Valid() const;

    OAIPaginationParamsRequest getMembers() const;
    void setMembers(const OAIPaginationParamsRequest &members);
    bool is_members_Set() const;
    bool is_members_Valid() const;

    OAIMessagePaginationParamsRequest getMessages() const;
    void setMessages(const OAIMessagePaginationParamsRequest &messages);
    bool is_messages_Set() const;
    bool is_messages_Valid() const;

    bool isPresence() const;
    void setPresence(const bool &presence);
    bool is_presence_Set() const;
    bool is_presence_Valid() const;

    bool isState() const;
    void setState(const bool &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    bool isWatch() const;
    void setWatch(const bool &watch);
    bool is_watch_Set() const;
    bool is_watch_Valid() const;

    OAIPaginationParamsRequest getWatchers() const;
    void setWatchers(const OAIPaginationParamsRequest &watchers);
    bool is_watchers_Set() const;
    bool is_watchers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_connection_id;
    bool m_connection_id_isSet;
    bool m_connection_id_isValid;

    OAIChannelRequest m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    bool m_hide_for_creator;
    bool m_hide_for_creator_isSet;
    bool m_hide_for_creator_isValid;

    OAIPaginationParamsRequest m_members;
    bool m_members_isSet;
    bool m_members_isValid;

    OAIMessagePaginationParamsRequest m_messages;
    bool m_messages_isSet;
    bool m_messages_isValid;

    bool m_presence;
    bool m_presence_isSet;
    bool m_presence_isValid;

    bool m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    bool m_watch;
    bool m_watch_isSet;
    bool m_watch_isValid;

    OAIPaginationParamsRequest m_watchers;
    bool m_watchers_isSet;
    bool m_watchers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChannelGetOrCreateRequest)

#endif // OAIChannelGetOrCreateRequest_H
