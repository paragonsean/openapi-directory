/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISyncRequest.h
 *
 * 
 */

#ifndef OAISyncRequest_H
#define OAISyncRequest_H

#include <QJsonObject>

#include "OAIUserObjectRequest.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISyncRequest : public OAIObject {
public:
    OAISyncRequest();
    OAISyncRequest(QString json);
    ~OAISyncRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getChannelCids() const;
    void setChannelCids(const QList<QString> &channel_cids);
    bool is_channel_cids_Set() const;
    bool is_channel_cids_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getConnectionId() const;
    void setConnectionId(const QString &connection_id);
    bool is_connection_id_Set() const;
    bool is_connection_id_Valid() const;

    QDateTime getLastSyncAt() const;
    void setLastSyncAt(const QDateTime &last_sync_at);
    bool is_last_sync_at_Set() const;
    bool is_last_sync_at_Valid() const;

    OAIUserObjectRequest getUser() const;
    void setUser(const OAIUserObjectRequest &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    bool isWatch() const;
    void setWatch(const bool &watch);
    bool is_watch_Set() const;
    bool is_watch_Valid() const;

    bool isWithInaccessibleCids() const;
    void setWithInaccessibleCids(const bool &with_inaccessible_cids);
    bool is_with_inaccessible_cids_Set() const;
    bool is_with_inaccessible_cids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_channel_cids;
    bool m_channel_cids_isSet;
    bool m_channel_cids_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_connection_id;
    bool m_connection_id_isSet;
    bool m_connection_id_isValid;

    QDateTime m_last_sync_at;
    bool m_last_sync_at_isSet;
    bool m_last_sync_at_isValid;

    OAIUserObjectRequest m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    bool m_watch;
    bool m_watch_isSet;
    bool m_watch_isValid;

    bool m_with_inaccessible_cids;
    bool m_with_inaccessible_cids_isSet;
    bool m_with_inaccessible_cids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISyncRequest)

#endif // OAISyncRequest_H
