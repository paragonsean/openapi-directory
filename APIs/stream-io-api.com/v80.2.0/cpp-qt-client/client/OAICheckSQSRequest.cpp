/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICheckSQSRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICheckSQSRequest::OAICheckSQSRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICheckSQSRequest::OAICheckSQSRequest() {
    this->initializeModel();
}

OAICheckSQSRequest::~OAICheckSQSRequest() {}

void OAICheckSQSRequest::initializeModel() {

    m_sqs_key_isSet = false;
    m_sqs_key_isValid = false;

    m_sqs_secret_isSet = false;
    m_sqs_secret_isValid = false;

    m_sqs_url_isSet = false;
    m_sqs_url_isValid = false;
}

void OAICheckSQSRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICheckSQSRequest::fromJsonObject(QJsonObject json) {

    m_sqs_key_isValid = ::OpenAPI::fromJsonValue(m_sqs_key, json[QString("sqs_key")]);
    m_sqs_key_isSet = !json[QString("sqs_key")].isNull() && m_sqs_key_isValid;

    m_sqs_secret_isValid = ::OpenAPI::fromJsonValue(m_sqs_secret, json[QString("sqs_secret")]);
    m_sqs_secret_isSet = !json[QString("sqs_secret")].isNull() && m_sqs_secret_isValid;

    m_sqs_url_isValid = ::OpenAPI::fromJsonValue(m_sqs_url, json[QString("sqs_url")]);
    m_sqs_url_isSet = !json[QString("sqs_url")].isNull() && m_sqs_url_isValid;
}

QString OAICheckSQSRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICheckSQSRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_sqs_key_isSet) {
        obj.insert(QString("sqs_key"), ::OpenAPI::toJsonValue(m_sqs_key));
    }
    if (m_sqs_secret_isSet) {
        obj.insert(QString("sqs_secret"), ::OpenAPI::toJsonValue(m_sqs_secret));
    }
    if (m_sqs_url_isSet) {
        obj.insert(QString("sqs_url"), ::OpenAPI::toJsonValue(m_sqs_url));
    }
    return obj;
}

QString OAICheckSQSRequest::getSqsKey() const {
    return m_sqs_key;
}
void OAICheckSQSRequest::setSqsKey(const QString &sqs_key) {
    m_sqs_key = sqs_key;
    m_sqs_key_isSet = true;
}

bool OAICheckSQSRequest::is_sqs_key_Set() const{
    return m_sqs_key_isSet;
}

bool OAICheckSQSRequest::is_sqs_key_Valid() const{
    return m_sqs_key_isValid;
}

QString OAICheckSQSRequest::getSqsSecret() const {
    return m_sqs_secret;
}
void OAICheckSQSRequest::setSqsSecret(const QString &sqs_secret) {
    m_sqs_secret = sqs_secret;
    m_sqs_secret_isSet = true;
}

bool OAICheckSQSRequest::is_sqs_secret_Set() const{
    return m_sqs_secret_isSet;
}

bool OAICheckSQSRequest::is_sqs_secret_Valid() const{
    return m_sqs_secret_isValid;
}

QString OAICheckSQSRequest::getSqsUrl() const {
    return m_sqs_url;
}
void OAICheckSQSRequest::setSqsUrl(const QString &sqs_url) {
    m_sqs_url = sqs_url;
    m_sqs_url_isSet = true;
}

bool OAICheckSQSRequest::is_sqs_url_Set() const{
    return m_sqs_url_isSet;
}

bool OAICheckSQSRequest::is_sqs_url_Valid() const{
    return m_sqs_url_isValid;
}

bool OAICheckSQSRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sqs_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sqs_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sqs_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICheckSQSRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
