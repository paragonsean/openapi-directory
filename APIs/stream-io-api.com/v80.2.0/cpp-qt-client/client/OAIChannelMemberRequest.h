/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChannelMemberRequest.h
 *
 * 
 */

#ifndef OAIChannelMemberRequest_H
#define OAIChannelMemberRequest_H

#include <QJsonObject>

#include "OAIUserObjectRequest.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIChannelMemberRequest : public OAIObject {
public:
    OAIChannelMemberRequest();
    OAIChannelMemberRequest(QString json);
    ~OAIChannelMemberRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getBanExpires() const;
    void setBanExpires(const QDateTime &ban_expires);
    bool is_ban_expires_Set() const;
    bool is_ban_expires_Valid() const;

    bool isBanned() const;
    void setBanned(const bool &banned);
    bool is_banned_Set() const;
    bool is_banned_Valid() const;

    QString getChannelRole() const;
    void setChannelRole(const QString &channel_role);
    bool is_channel_role_Set() const;
    bool is_channel_role_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getDeletedAt() const;
    void setDeletedAt(const QDateTime &deleted_at);
    bool is_deleted_at_Set() const;
    bool is_deleted_at_Valid() const;

    QDateTime getInviteAcceptedAt() const;
    void setInviteAcceptedAt(const QDateTime &invite_accepted_at);
    bool is_invite_accepted_at_Set() const;
    bool is_invite_accepted_at_Valid() const;

    QDateTime getInviteRejectedAt() const;
    void setInviteRejectedAt(const QDateTime &invite_rejected_at);
    bool is_invite_rejected_at_Set() const;
    bool is_invite_rejected_at_Valid() const;

    bool isInvited() const;
    void setInvited(const bool &invited);
    bool is_invited_Set() const;
    bool is_invited_Valid() const;

    bool isIsModerator() const;
    void setIsModerator(const bool &is_moderator);
    bool is_is_moderator_Set() const;
    bool is_is_moderator_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    bool isShadowBanned() const;
    void setShadowBanned(const bool &shadow_banned);
    bool is_shadow_banned_Set() const;
    bool is_shadow_banned_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    OAIUserObjectRequest getUser() const;
    void setUser(const OAIUserObjectRequest &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_ban_expires;
    bool m_ban_expires_isSet;
    bool m_ban_expires_isValid;

    bool m_banned;
    bool m_banned_isSet;
    bool m_banned_isValid;

    QString m_channel_role;
    bool m_channel_role_isSet;
    bool m_channel_role_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_deleted_at;
    bool m_deleted_at_isSet;
    bool m_deleted_at_isValid;

    QDateTime m_invite_accepted_at;
    bool m_invite_accepted_at_isSet;
    bool m_invite_accepted_at_isValid;

    QDateTime m_invite_rejected_at;
    bool m_invite_rejected_at_isSet;
    bool m_invite_rejected_at_isValid;

    bool m_invited;
    bool m_invited_isSet;
    bool m_invited_isValid;

    bool m_is_moderator;
    bool m_is_moderator_isSet;
    bool m_is_moderator_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    bool m_shadow_banned;
    bool m_shadow_banned_isSet;
    bool m_shadow_banned_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    OAIUserObjectRequest m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChannelMemberRequest)

#endif // OAIChannelMemberRequest_H
