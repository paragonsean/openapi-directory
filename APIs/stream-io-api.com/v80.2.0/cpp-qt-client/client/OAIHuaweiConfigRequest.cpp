/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHuaweiConfigRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHuaweiConfigRequest::OAIHuaweiConfigRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHuaweiConfigRequest::OAIHuaweiConfigRequest() {
    this->initializeModel();
}

OAIHuaweiConfigRequest::~OAIHuaweiConfigRequest() {}

void OAIHuaweiConfigRequest::initializeModel() {

    m_disabled_isSet = false;
    m_disabled_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_secret_isSet = false;
    m_secret_isValid = false;
}

void OAIHuaweiConfigRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHuaweiConfigRequest::fromJsonObject(QJsonObject json) {

    m_disabled_isValid = ::OpenAPI::fromJsonValue(m_disabled, json[QString("Disabled")]);
    m_disabled_isSet = !json[QString("Disabled")].isNull() && m_disabled_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_secret_isValid = ::OpenAPI::fromJsonValue(m_secret, json[QString("secret")]);
    m_secret_isSet = !json[QString("secret")].isNull() && m_secret_isValid;
}

QString OAIHuaweiConfigRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHuaweiConfigRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_disabled_isSet) {
        obj.insert(QString("Disabled"), ::OpenAPI::toJsonValue(m_disabled));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_secret_isSet) {
        obj.insert(QString("secret"), ::OpenAPI::toJsonValue(m_secret));
    }
    return obj;
}

bool OAIHuaweiConfigRequest::isDisabled() const {
    return m_disabled;
}
void OAIHuaweiConfigRequest::setDisabled(const bool &disabled) {
    m_disabled = disabled;
    m_disabled_isSet = true;
}

bool OAIHuaweiConfigRequest::is_disabled_Set() const{
    return m_disabled_isSet;
}

bool OAIHuaweiConfigRequest::is_disabled_Valid() const{
    return m_disabled_isValid;
}

QString OAIHuaweiConfigRequest::getId() const {
    return m_id;
}
void OAIHuaweiConfigRequest::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIHuaweiConfigRequest::is_id_Set() const{
    return m_id_isSet;
}

bool OAIHuaweiConfigRequest::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIHuaweiConfigRequest::getSecret() const {
    return m_secret;
}
void OAIHuaweiConfigRequest::setSecret(const QString &secret) {
    m_secret = secret;
    m_secret_isSet = true;
}

bool OAIHuaweiConfigRequest::is_secret_Set() const{
    return m_secret_isSet;
}

bool OAIHuaweiConfigRequest::is_secret_Valid() const{
    return m_secret_isValid;
}

bool OAIHuaweiConfigRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secret_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHuaweiConfigRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
