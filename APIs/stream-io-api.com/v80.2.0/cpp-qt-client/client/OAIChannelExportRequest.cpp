/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelExportRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelExportRequest::OAIChannelExportRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelExportRequest::OAIChannelExportRequest() {
    this->initializeModel();
}

OAIChannelExportRequest::~OAIChannelExportRequest() {}

void OAIChannelExportRequest::initializeModel() {

    m_cid_isSet = false;
    m_cid_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_messages_since_isSet = false;
    m_messages_since_isValid = false;

    m_messages_until_isSet = false;
    m_messages_until_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIChannelExportRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChannelExportRequest::fromJsonObject(QJsonObject json) {

    m_cid_isValid = ::OpenAPI::fromJsonValue(m_cid, json[QString("cid")]);
    m_cid_isSet = !json[QString("cid")].isNull() && m_cid_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_messages_since_isValid = ::OpenAPI::fromJsonValue(m_messages_since, json[QString("messages_since")]);
    m_messages_since_isSet = !json[QString("messages_since")].isNull() && m_messages_since_isValid;

    m_messages_until_isValid = ::OpenAPI::fromJsonValue(m_messages_until, json[QString("messages_until")]);
    m_messages_until_isSet = !json[QString("messages_until")].isNull() && m_messages_until_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIChannelExportRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChannelExportRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_cid_isSet) {
        obj.insert(QString("cid"), ::OpenAPI::toJsonValue(m_cid));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_messages_since_isSet) {
        obj.insert(QString("messages_since"), ::OpenAPI::toJsonValue(m_messages_since));
    }
    if (m_messages_until_isSet) {
        obj.insert(QString("messages_until"), ::OpenAPI::toJsonValue(m_messages_until));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIChannelExportRequest::getCid() const {
    return m_cid;
}
void OAIChannelExportRequest::setCid(const QString &cid) {
    m_cid = cid;
    m_cid_isSet = true;
}

bool OAIChannelExportRequest::is_cid_Set() const{
    return m_cid_isSet;
}

bool OAIChannelExportRequest::is_cid_Valid() const{
    return m_cid_isValid;
}

QString OAIChannelExportRequest::getId() const {
    return m_id;
}
void OAIChannelExportRequest::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIChannelExportRequest::is_id_Set() const{
    return m_id_isSet;
}

bool OAIChannelExportRequest::is_id_Valid() const{
    return m_id_isValid;
}

QDateTime OAIChannelExportRequest::getMessagesSince() const {
    return m_messages_since;
}
void OAIChannelExportRequest::setMessagesSince(const QDateTime &messages_since) {
    m_messages_since = messages_since;
    m_messages_since_isSet = true;
}

bool OAIChannelExportRequest::is_messages_since_Set() const{
    return m_messages_since_isSet;
}

bool OAIChannelExportRequest::is_messages_since_Valid() const{
    return m_messages_since_isValid;
}

QDateTime OAIChannelExportRequest::getMessagesUntil() const {
    return m_messages_until;
}
void OAIChannelExportRequest::setMessagesUntil(const QDateTime &messages_until) {
    m_messages_until = messages_until;
    m_messages_until_isSet = true;
}

bool OAIChannelExportRequest::is_messages_until_Set() const{
    return m_messages_until_isSet;
}

bool OAIChannelExportRequest::is_messages_until_Valid() const{
    return m_messages_until_isValid;
}

QString OAIChannelExportRequest::getType() const {
    return m_type;
}
void OAIChannelExportRequest::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIChannelExportRequest::is_type_Set() const{
    return m_type_isSet;
}

bool OAIChannelExportRequest::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIChannelExportRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_messages_since_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_messages_until_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChannelExportRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
