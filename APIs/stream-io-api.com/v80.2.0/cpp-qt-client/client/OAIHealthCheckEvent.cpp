/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHealthCheckEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHealthCheckEvent::OAIHealthCheckEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHealthCheckEvent::OAIHealthCheckEvent() {
    this->initializeModel();
}

OAIHealthCheckEvent::~OAIHealthCheckEvent() {}

void OAIHealthCheckEvent::initializeModel() {

    m_cid_isSet = false;
    m_cid_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_me_isSet = false;
    m_me_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIHealthCheckEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHealthCheckEvent::fromJsonObject(QJsonObject json) {

    m_cid_isValid = ::OpenAPI::fromJsonValue(m_cid, json[QString("cid")]);
    m_cid_isSet = !json[QString("cid")].isNull() && m_cid_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_me_isValid = ::OpenAPI::fromJsonValue(m_me, json[QString("me")]);
    m_me_isSet = !json[QString("me")].isNull() && m_me_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIHealthCheckEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHealthCheckEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_cid_isSet) {
        obj.insert(QString("cid"), ::OpenAPI::toJsonValue(m_cid));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_me.isSet()) {
        obj.insert(QString("me"), ::OpenAPI::toJsonValue(m_me));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIHealthCheckEvent::getCid() const {
    return m_cid;
}
void OAIHealthCheckEvent::setCid(const QString &cid) {
    m_cid = cid;
    m_cid_isSet = true;
}

bool OAIHealthCheckEvent::is_cid_Set() const{
    return m_cid_isSet;
}

bool OAIHealthCheckEvent::is_cid_Valid() const{
    return m_cid_isValid;
}

QDateTime OAIHealthCheckEvent::getCreatedAt() const {
    return m_created_at;
}
void OAIHealthCheckEvent::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIHealthCheckEvent::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIHealthCheckEvent::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAIOwnUser OAIHealthCheckEvent::getMe() const {
    return m_me;
}
void OAIHealthCheckEvent::setMe(const OAIOwnUser &me) {
    m_me = me;
    m_me_isSet = true;
}

bool OAIHealthCheckEvent::is_me_Set() const{
    return m_me_isSet;
}

bool OAIHealthCheckEvent::is_me_Valid() const{
    return m_me_isValid;
}

QString OAIHealthCheckEvent::getType() const {
    return m_type;
}
void OAIHealthCheckEvent::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIHealthCheckEvent::is_type_Set() const{
    return m_type_isSet;
}

bool OAIHealthCheckEvent::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIHealthCheckEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_me.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHealthCheckEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_cid_isValid && m_created_at_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
