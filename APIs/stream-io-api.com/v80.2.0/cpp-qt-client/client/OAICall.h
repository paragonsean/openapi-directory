/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICall.h
 *
 * 
 */

#ifndef OAICall_H
#define OAICall_H

#include <QJsonObject>

#include "OAIAgoraCall.h"
#include "OAIHMSCall.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAgoraCall;
class OAIHMSCall;

class OAICall : public OAIObject {
public:
    OAICall();
    OAICall(QString json);
    ~OAICall() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAgoraCall getAgora() const;
    void setAgora(const OAIAgoraCall &agora);
    bool is_agora_Set() const;
    bool is_agora_Valid() const;

    OAIHMSCall getHms() const;
    void setHms(const OAIHMSCall &hms);
    bool is_hms_Set() const;
    bool is_hms_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getProvider() const;
    void setProvider(const QString &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAgoraCall m_agora;
    bool m_agora_isSet;
    bool m_agora_isValid;

    OAIHMSCall m_hms;
    bool m_hms_isSet;
    bool m_hms_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICall)

#endif // OAICall_H
