/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChannelTypeConfig.h
 *
 * 
 */

#ifndef OAIChannelTypeConfig_H
#define OAIChannelTypeConfig_H

#include <QJsonObject>

#include "OAICommand.h"
#include "OAIPolicyRequest_1.h"
#include "OAIThresholds.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIThresholds;
class OAICommand;
class OAIPolicyRequest_1;

class OAIChannelTypeConfig : public OAIObject {
public:
    OAIChannelTypeConfig();
    OAIChannelTypeConfig(QString json);
    ~OAIChannelTypeConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAutomod() const;
    void setAutomod(const QString &automod);
    bool is_automod_Set() const;
    bool is_automod_Valid() const;

    QString getAutomodBehavior() const;
    void setAutomodBehavior(const QString &automod_behavior);
    bool is_automod_behavior_Set() const;
    bool is_automod_behavior_Valid() const;

    OAIThresholds getAutomodThresholds() const;
    void setAutomodThresholds(const OAIThresholds &automod_thresholds);
    bool is_automod_thresholds_Set() const;
    bool is_automod_thresholds_Valid() const;

    QString getBlocklist() const;
    void setBlocklist(const QString &blocklist);
    bool is_blocklist_Set() const;
    bool is_blocklist_Valid() const;

    QString getBlocklistBehavior() const;
    void setBlocklistBehavior(const QString &blocklist_behavior);
    bool is_blocklist_behavior_Set() const;
    bool is_blocklist_behavior_Valid() const;

    QList<OAICommand> getCommands() const;
    void setCommands(const QList<OAICommand> &commands);
    bool is_commands_Set() const;
    bool is_commands_Valid() const;

    bool isConnectEvents() const;
    void setConnectEvents(const bool &connect_events);
    bool is_connect_events_Set() const;
    bool is_connect_events_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isCustomEvents() const;
    void setCustomEvents(const bool &custom_events);
    bool is_custom_events_Set() const;
    bool is_custom_events_Valid() const;

    QMap<QString, QList<QString>> getGrants() const;
    void setGrants(const QMap<QString, QList<QString>> &grants);
    bool is_grants_Set() const;
    bool is_grants_Valid() const;

    qint32 getMaxMessageLength() const;
    void setMaxMessageLength(const qint32 &max_message_length);
    bool is_max_message_length_Set() const;
    bool is_max_message_length_Valid() const;

    QString getMessageRetention() const;
    void setMessageRetention(const QString &message_retention);
    bool is_message_retention_Set() const;
    bool is_message_retention_Valid() const;

    bool isMutes() const;
    void setMutes(const bool &mutes);
    bool is_mutes_Set() const;
    bool is_mutes_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIPolicyRequest_1> getPermissions() const;
    void setPermissions(const QList<OAIPolicyRequest_1> &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    bool isPushNotifications() const;
    void setPushNotifications(const bool &push_notifications);
    bool is_push_notifications_Set() const;
    bool is_push_notifications_Valid() const;

    bool isQuotes() const;
    void setQuotes(const bool &quotes);
    bool is_quotes_Set() const;
    bool is_quotes_Valid() const;

    bool isReactions() const;
    void setReactions(const bool &reactions);
    bool is_reactions_Set() const;
    bool is_reactions_Valid() const;

    bool isReadEvents() const;
    void setReadEvents(const bool &read_events);
    bool is_read_events_Set() const;
    bool is_read_events_Valid() const;

    bool isReminders() const;
    void setReminders(const bool &reminders);
    bool is_reminders_Set() const;
    bool is_reminders_Valid() const;

    bool isReplies() const;
    void setReplies(const bool &replies);
    bool is_replies_Set() const;
    bool is_replies_Valid() const;

    bool isSearch() const;
    void setSearch(const bool &search);
    bool is_search_Set() const;
    bool is_search_Valid() const;

    bool isTypingEvents() const;
    void setTypingEvents(const bool &typing_events);
    bool is_typing_events_Set() const;
    bool is_typing_events_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    bool isUploads() const;
    void setUploads(const bool &uploads);
    bool is_uploads_Set() const;
    bool is_uploads_Valid() const;

    bool isUrlEnrichment() const;
    void setUrlEnrichment(const bool &url_enrichment);
    bool is_url_enrichment_Set() const;
    bool is_url_enrichment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_automod;
    bool m_automod_isSet;
    bool m_automod_isValid;

    QString m_automod_behavior;
    bool m_automod_behavior_isSet;
    bool m_automod_behavior_isValid;

    OAIThresholds m_automod_thresholds;
    bool m_automod_thresholds_isSet;
    bool m_automod_thresholds_isValid;

    QString m_blocklist;
    bool m_blocklist_isSet;
    bool m_blocklist_isValid;

    QString m_blocklist_behavior;
    bool m_blocklist_behavior_isSet;
    bool m_blocklist_behavior_isValid;

    QList<OAICommand> m_commands;
    bool m_commands_isSet;
    bool m_commands_isValid;

    bool m_connect_events;
    bool m_connect_events_isSet;
    bool m_connect_events_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_custom_events;
    bool m_custom_events_isSet;
    bool m_custom_events_isValid;

    QMap<QString, QList<QString>> m_grants;
    bool m_grants_isSet;
    bool m_grants_isValid;

    qint32 m_max_message_length;
    bool m_max_message_length_isSet;
    bool m_max_message_length_isValid;

    QString m_message_retention;
    bool m_message_retention_isSet;
    bool m_message_retention_isValid;

    bool m_mutes;
    bool m_mutes_isSet;
    bool m_mutes_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIPolicyRequest_1> m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    bool m_push_notifications;
    bool m_push_notifications_isSet;
    bool m_push_notifications_isValid;

    bool m_quotes;
    bool m_quotes_isSet;
    bool m_quotes_isValid;

    bool m_reactions;
    bool m_reactions_isSet;
    bool m_reactions_isValid;

    bool m_read_events;
    bool m_read_events_isSet;
    bool m_read_events_isValid;

    bool m_reminders;
    bool m_reminders_isSet;
    bool m_reminders_isValid;

    bool m_replies;
    bool m_replies_isSet;
    bool m_replies_isValid;

    bool m_search;
    bool m_search_isSet;
    bool m_search_isValid;

    bool m_typing_events;
    bool m_typing_events_isSet;
    bool m_typing_events_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    bool m_uploads;
    bool m_uploads_isSet;
    bool m_uploads_isValid;

    bool m_url_enrichment;
    bool m_url_enrichment_isSet;
    bool m_url_enrichment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChannelTypeConfig)

#endif // OAIChannelTypeConfig_H
