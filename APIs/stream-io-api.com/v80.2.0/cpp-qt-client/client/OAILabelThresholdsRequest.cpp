/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILabelThresholdsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILabelThresholdsRequest::OAILabelThresholdsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILabelThresholdsRequest::OAILabelThresholdsRequest() {
    this->initializeModel();
}

OAILabelThresholdsRequest::~OAILabelThresholdsRequest() {}

void OAILabelThresholdsRequest::initializeModel() {

    m_block_isSet = false;
    m_block_isValid = false;

    m_flag_isSet = false;
    m_flag_isValid = false;
}

void OAILabelThresholdsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILabelThresholdsRequest::fromJsonObject(QJsonObject json) {

    m_block_isValid = ::OpenAPI::fromJsonValue(m_block, json[QString("block")]);
    m_block_isSet = !json[QString("block")].isNull() && m_block_isValid;

    m_flag_isValid = ::OpenAPI::fromJsonValue(m_flag, json[QString("flag")]);
    m_flag_isSet = !json[QString("flag")].isNull() && m_flag_isValid;
}

QString OAILabelThresholdsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILabelThresholdsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_block_isSet) {
        obj.insert(QString("block"), ::OpenAPI::toJsonValue(m_block));
    }
    if (m_flag_isSet) {
        obj.insert(QString("flag"), ::OpenAPI::toJsonValue(m_flag));
    }
    return obj;
}

float OAILabelThresholdsRequest::getBlock() const {
    return m_block;
}
void OAILabelThresholdsRequest::setBlock(const float &block) {
    m_block = block;
    m_block_isSet = true;
}

bool OAILabelThresholdsRequest::is_block_Set() const{
    return m_block_isSet;
}

bool OAILabelThresholdsRequest::is_block_Valid() const{
    return m_block_isValid;
}

float OAILabelThresholdsRequest::getFlag() const {
    return m_flag;
}
void OAILabelThresholdsRequest::setFlag(const float &flag) {
    m_flag = flag;
    m_flag_isSet = true;
}

bool OAILabelThresholdsRequest::is_flag_Set() const{
    return m_flag_isSet;
}

bool OAILabelThresholdsRequest::is_flag_Valid() const{
    return m_flag_isValid;
}

bool OAILabelThresholdsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_block_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flag_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILabelThresholdsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
