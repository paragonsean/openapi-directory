/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetCommandResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetCommandResponse::OAIGetCommandResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetCommandResponse::OAIGetCommandResponse() {
    this->initializeModel();
}

OAIGetCommandResponse::~OAIGetCommandResponse() {}

void OAIGetCommandResponse::initializeModel() {

    m_args_isSet = false;
    m_args_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_r_set_isSet = false;
    m_r_set_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIGetCommandResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetCommandResponse::fromJsonObject(QJsonObject json) {

    m_args_isValid = ::OpenAPI::fromJsonValue(m_args, json[QString("args")]);
    m_args_isSet = !json[QString("args")].isNull() && m_args_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_r_set_isValid = ::OpenAPI::fromJsonValue(m_r_set, json[QString("set")]);
    m_r_set_isSet = !json[QString("set")].isNull() && m_r_set_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;
}

QString OAIGetCommandResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetCommandResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_args_isSet) {
        obj.insert(QString("args"), ::OpenAPI::toJsonValue(m_args));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_r_set_isSet) {
        obj.insert(QString("set"), ::OpenAPI::toJsonValue(m_r_set));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

QString OAIGetCommandResponse::getArgs() const {
    return m_args;
}
void OAIGetCommandResponse::setArgs(const QString &args) {
    m_args = args;
    m_args_isSet = true;
}

bool OAIGetCommandResponse::is_args_Set() const{
    return m_args_isSet;
}

bool OAIGetCommandResponse::is_args_Valid() const{
    return m_args_isValid;
}

QDateTime OAIGetCommandResponse::getCreatedAt() const {
    return m_created_at;
}
void OAIGetCommandResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGetCommandResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGetCommandResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIGetCommandResponse::getDescription() const {
    return m_description;
}
void OAIGetCommandResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGetCommandResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGetCommandResponse::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGetCommandResponse::getDuration() const {
    return m_duration;
}
void OAIGetCommandResponse::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIGetCommandResponse::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIGetCommandResponse::is_duration_Valid() const{
    return m_duration_isValid;
}

QString OAIGetCommandResponse::getName() const {
    return m_name;
}
void OAIGetCommandResponse::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetCommandResponse::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetCommandResponse::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGetCommandResponse::getRSet() const {
    return m_r_set;
}
void OAIGetCommandResponse::setRSet(const QString &r_set) {
    m_r_set = r_set;
    m_r_set_isSet = true;
}

bool OAIGetCommandResponse::is_r_set_Set() const{
    return m_r_set_isSet;
}

bool OAIGetCommandResponse::is_r_set_Valid() const{
    return m_r_set_isValid;
}

QDateTime OAIGetCommandResponse::getUpdatedAt() const {
    return m_updated_at;
}
void OAIGetCommandResponse::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIGetCommandResponse::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIGetCommandResponse::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIGetCommandResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_args_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_set_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetCommandResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_args_isValid && m_description_isValid && m_duration_isValid && m_name_isValid && m_r_set_isValid && true;
}

} // namespace OpenAPI
