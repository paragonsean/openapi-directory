/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateUserPartialRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateUserPartialRequest::OAIUpdateUserPartialRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateUserPartialRequest::OAIUpdateUserPartialRequest() {
    this->initializeModel();
}

OAIUpdateUserPartialRequest::~OAIUpdateUserPartialRequest() {}

void OAIUpdateUserPartialRequest::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_r_set_isSet = false;
    m_r_set_isValid = false;

    m_unset_isSet = false;
    m_unset_isValid = false;
}

void OAIUpdateUserPartialRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateUserPartialRequest::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_r_set_isValid = ::OpenAPI::fromJsonValue(m_r_set, json[QString("set")]);
    m_r_set_isSet = !json[QString("set")].isNull() && m_r_set_isValid;

    m_unset_isValid = ::OpenAPI::fromJsonValue(m_unset, json[QString("unset")]);
    m_unset_isSet = !json[QString("unset")].isNull() && m_unset_isValid;
}

QString OAIUpdateUserPartialRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateUserPartialRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_r_set.size() > 0) {
        obj.insert(QString("set"), ::OpenAPI::toJsonValue(m_r_set));
    }
    if (m_unset.size() > 0) {
        obj.insert(QString("unset"), ::OpenAPI::toJsonValue(m_unset));
    }
    return obj;
}

QString OAIUpdateUserPartialRequest::getId() const {
    return m_id;
}
void OAIUpdateUserPartialRequest::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIUpdateUserPartialRequest::is_id_Set() const{
    return m_id_isSet;
}

bool OAIUpdateUserPartialRequest::is_id_Valid() const{
    return m_id_isValid;
}

QMap<QString, QJsonValue> OAIUpdateUserPartialRequest::getRSet() const {
    return m_r_set;
}
void OAIUpdateUserPartialRequest::setRSet(const QMap<QString, QJsonValue> &r_set) {
    m_r_set = r_set;
    m_r_set_isSet = true;
}

bool OAIUpdateUserPartialRequest::is_r_set_Set() const{
    return m_r_set_isSet;
}

bool OAIUpdateUserPartialRequest::is_r_set_Valid() const{
    return m_r_set_isValid;
}

QList<QString> OAIUpdateUserPartialRequest::getUnset() const {
    return m_unset;
}
void OAIUpdateUserPartialRequest::setUnset(const QList<QString> &unset) {
    m_unset = unset;
    m_unset_isSet = true;
}

bool OAIUpdateUserPartialRequest::is_unset_Set() const{
    return m_unset_isSet;
}

bool OAIUpdateUserPartialRequest::is_unset_Valid() const{
    return m_unset_isValid;
}

bool OAIUpdateUserPartialRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_set.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_unset.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateUserPartialRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_r_set_isValid && m_unset_isValid && true;
}

} // namespace OpenAPI
