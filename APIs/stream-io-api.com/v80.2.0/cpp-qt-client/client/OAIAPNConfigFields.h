/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAPNConfigFields.h
 *
 * 
 */

#ifndef OAIAPNConfigFields_H
#define OAIAPNConfigFields_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAPNConfigFields : public OAIObject {
public:
    OAIAPNConfigFields();
    OAIAPNConfigFields(QString json);
    ~OAIAPNConfigFields() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthKey() const;
    void setAuthKey(const QString &auth_key);
    bool is_auth_key_Set() const;
    bool is_auth_key_Valid() const;

    QString getAuthType() const;
    void setAuthType(const QString &auth_type);
    bool is_auth_type_Set() const;
    bool is_auth_type_Valid() const;

    QString getBundleId() const;
    void setBundleId(const QString &bundle_id);
    bool is_bundle_id_Set() const;
    bool is_bundle_id_Valid() const;

    bool isDevelopment() const;
    void setDevelopment(const bool &development);
    bool is_development_Set() const;
    bool is_development_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    QString getKeyId() const;
    void setKeyId(const QString &key_id);
    bool is_key_id_Set() const;
    bool is_key_id_Valid() const;

    QString getNotificationTemplate() const;
    void setNotificationTemplate(const QString &notification_template);
    bool is_notification_template_Set() const;
    bool is_notification_template_Valid() const;

    QString getP12Cert() const;
    void setP12Cert(const QString &p12_cert);
    bool is_p12_cert_Set() const;
    bool is_p12_cert_Valid() const;

    QString getTeamId() const;
    void setTeamId(const QString &team_id);
    bool is_team_id_Set() const;
    bool is_team_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_auth_key;
    bool m_auth_key_isSet;
    bool m_auth_key_isValid;

    QString m_auth_type;
    bool m_auth_type_isSet;
    bool m_auth_type_isValid;

    QString m_bundle_id;
    bool m_bundle_id_isSet;
    bool m_bundle_id_isValid;

    bool m_development;
    bool m_development_isSet;
    bool m_development_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    QString m_key_id;
    bool m_key_id_isSet;
    bool m_key_id_isValid;

    QString m_notification_template;
    bool m_notification_template_isSet;
    bool m_notification_template_isValid;

    QString m_p12_cert;
    bool m_p12_cert_isSet;
    bool m_p12_cert_isValid;

    QString m_team_id;
    bool m_team_id_isSet;
    bool m_team_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAPNConfigFields)

#endif // OAIAPNConfigFields_H
