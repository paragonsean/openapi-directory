/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReactivateUserRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReactivateUserRequest::OAIReactivateUserRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReactivateUserRequest::OAIReactivateUserRequest() {
    this->initializeModel();
}

OAIReactivateUserRequest::~OAIReactivateUserRequest() {}

void OAIReactivateUserRequest::initializeModel() {

    m_created_by_id_isSet = false;
    m_created_by_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_restore_messages_isSet = false;
    m_restore_messages_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;
}

void OAIReactivateUserRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReactivateUserRequest::fromJsonObject(QJsonObject json) {

    m_created_by_id_isValid = ::OpenAPI::fromJsonValue(m_created_by_id, json[QString("created_by_id")]);
    m_created_by_id_isSet = !json[QString("created_by_id")].isNull() && m_created_by_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_restore_messages_isValid = ::OpenAPI::fromJsonValue(m_restore_messages, json[QString("restore_messages")]);
    m_restore_messages_isSet = !json[QString("restore_messages")].isNull() && m_restore_messages_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("user_id")]);
    m_user_id_isSet = !json[QString("user_id")].isNull() && m_user_id_isValid;
}

QString OAIReactivateUserRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReactivateUserRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_created_by_id_isSet) {
        obj.insert(QString("created_by_id"), ::OpenAPI::toJsonValue(m_created_by_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_restore_messages_isSet) {
        obj.insert(QString("restore_messages"), ::OpenAPI::toJsonValue(m_restore_messages));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("user_id"), ::OpenAPI::toJsonValue(m_user_id));
    }
    return obj;
}

QString OAIReactivateUserRequest::getCreatedById() const {
    return m_created_by_id;
}
void OAIReactivateUserRequest::setCreatedById(const QString &created_by_id) {
    m_created_by_id = created_by_id;
    m_created_by_id_isSet = true;
}

bool OAIReactivateUserRequest::is_created_by_id_Set() const{
    return m_created_by_id_isSet;
}

bool OAIReactivateUserRequest::is_created_by_id_Valid() const{
    return m_created_by_id_isValid;
}

QString OAIReactivateUserRequest::getName() const {
    return m_name;
}
void OAIReactivateUserRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIReactivateUserRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIReactivateUserRequest::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIReactivateUserRequest::isRestoreMessages() const {
    return m_restore_messages;
}
void OAIReactivateUserRequest::setRestoreMessages(const bool &restore_messages) {
    m_restore_messages = restore_messages;
    m_restore_messages_isSet = true;
}

bool OAIReactivateUserRequest::is_restore_messages_Set() const{
    return m_restore_messages_isSet;
}

bool OAIReactivateUserRequest::is_restore_messages_Valid() const{
    return m_restore_messages_isValid;
}

QString OAIReactivateUserRequest::getUserId() const {
    return m_user_id;
}
void OAIReactivateUserRequest::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIReactivateUserRequest::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIReactivateUserRequest::is_user_id_Valid() const{
    return m_user_id_isValid;
}

bool OAIReactivateUserRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_by_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_restore_messages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReactivateUserRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_user_id_isValid && true;
}

} // namespace OpenAPI
