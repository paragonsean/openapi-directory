/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIImageSizeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIImageSizeRequest::OAIImageSizeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIImageSizeRequest::OAIImageSizeRequest() {
    this->initializeModel();
}

OAIImageSizeRequest::~OAIImageSizeRequest() {}

void OAIImageSizeRequest::initializeModel() {

    m_crop_isSet = false;
    m_crop_isValid = false;

    m_height_isSet = false;
    m_height_isValid = false;

    m_resize_isSet = false;
    m_resize_isValid = false;

    m_width_isSet = false;
    m_width_isValid = false;
}

void OAIImageSizeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIImageSizeRequest::fromJsonObject(QJsonObject json) {

    m_crop_isValid = ::OpenAPI::fromJsonValue(m_crop, json[QString("crop")]);
    m_crop_isSet = !json[QString("crop")].isNull() && m_crop_isValid;

    m_height_isValid = ::OpenAPI::fromJsonValue(m_height, json[QString("height")]);
    m_height_isSet = !json[QString("height")].isNull() && m_height_isValid;

    m_resize_isValid = ::OpenAPI::fromJsonValue(m_resize, json[QString("resize")]);
    m_resize_isSet = !json[QString("resize")].isNull() && m_resize_isValid;

    m_width_isValid = ::OpenAPI::fromJsonValue(m_width, json[QString("width")]);
    m_width_isSet = !json[QString("width")].isNull() && m_width_isValid;
}

QString OAIImageSizeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIImageSizeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_crop_isSet) {
        obj.insert(QString("crop"), ::OpenAPI::toJsonValue(m_crop));
    }
    if (m_height_isSet) {
        obj.insert(QString("height"), ::OpenAPI::toJsonValue(m_height));
    }
    if (m_resize_isSet) {
        obj.insert(QString("resize"), ::OpenAPI::toJsonValue(m_resize));
    }
    if (m_width_isSet) {
        obj.insert(QString("width"), ::OpenAPI::toJsonValue(m_width));
    }
    return obj;
}

QString OAIImageSizeRequest::getCrop() const {
    return m_crop;
}
void OAIImageSizeRequest::setCrop(const QString &crop) {
    m_crop = crop;
    m_crop_isSet = true;
}

bool OAIImageSizeRequest::is_crop_Set() const{
    return m_crop_isSet;
}

bool OAIImageSizeRequest::is_crop_Valid() const{
    return m_crop_isValid;
}

qint32 OAIImageSizeRequest::getHeight() const {
    return m_height;
}
void OAIImageSizeRequest::setHeight(const qint32 &height) {
    m_height = height;
    m_height_isSet = true;
}

bool OAIImageSizeRequest::is_height_Set() const{
    return m_height_isSet;
}

bool OAIImageSizeRequest::is_height_Valid() const{
    return m_height_isValid;
}

QString OAIImageSizeRequest::getResize() const {
    return m_resize;
}
void OAIImageSizeRequest::setResize(const QString &resize) {
    m_resize = resize;
    m_resize_isSet = true;
}

bool OAIImageSizeRequest::is_resize_Set() const{
    return m_resize_isSet;
}

bool OAIImageSizeRequest::is_resize_Valid() const{
    return m_resize_isValid;
}

qint32 OAIImageSizeRequest::getWidth() const {
    return m_width;
}
void OAIImageSizeRequest::setWidth(const qint32 &width) {
    m_width = width;
    m_width_isSet = true;
}

bool OAIImageSizeRequest::is_width_Set() const{
    return m_width_isSet;
}

bool OAIImageSizeRequest::is_width_Valid() const{
    return m_width_isValid;
}

bool OAIImageSizeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_crop_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_height_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resize_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_width_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIImageSizeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
