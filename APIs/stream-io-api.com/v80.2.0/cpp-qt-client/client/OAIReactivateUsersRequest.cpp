/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReactivateUsersRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReactivateUsersRequest::OAIReactivateUsersRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReactivateUsersRequest::OAIReactivateUsersRequest() {
    this->initializeModel();
}

OAIReactivateUsersRequest::~OAIReactivateUsersRequest() {}

void OAIReactivateUsersRequest::initializeModel() {

    m_created_by_id_isSet = false;
    m_created_by_id_isValid = false;

    m_restore_messages_isSet = false;
    m_restore_messages_isValid = false;

    m_user_ids_isSet = false;
    m_user_ids_isValid = false;
}

void OAIReactivateUsersRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReactivateUsersRequest::fromJsonObject(QJsonObject json) {

    m_created_by_id_isValid = ::OpenAPI::fromJsonValue(m_created_by_id, json[QString("created_by_id")]);
    m_created_by_id_isSet = !json[QString("created_by_id")].isNull() && m_created_by_id_isValid;

    m_restore_messages_isValid = ::OpenAPI::fromJsonValue(m_restore_messages, json[QString("restore_messages")]);
    m_restore_messages_isSet = !json[QString("restore_messages")].isNull() && m_restore_messages_isValid;

    m_user_ids_isValid = ::OpenAPI::fromJsonValue(m_user_ids, json[QString("user_ids")]);
    m_user_ids_isSet = !json[QString("user_ids")].isNull() && m_user_ids_isValid;
}

QString OAIReactivateUsersRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReactivateUsersRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_created_by_id_isSet) {
        obj.insert(QString("created_by_id"), ::OpenAPI::toJsonValue(m_created_by_id));
    }
    if (m_restore_messages_isSet) {
        obj.insert(QString("restore_messages"), ::OpenAPI::toJsonValue(m_restore_messages));
    }
    if (m_user_ids.size() > 0) {
        obj.insert(QString("user_ids"), ::OpenAPI::toJsonValue(m_user_ids));
    }
    return obj;
}

QString OAIReactivateUsersRequest::getCreatedById() const {
    return m_created_by_id;
}
void OAIReactivateUsersRequest::setCreatedById(const QString &created_by_id) {
    m_created_by_id = created_by_id;
    m_created_by_id_isSet = true;
}

bool OAIReactivateUsersRequest::is_created_by_id_Set() const{
    return m_created_by_id_isSet;
}

bool OAIReactivateUsersRequest::is_created_by_id_Valid() const{
    return m_created_by_id_isValid;
}

bool OAIReactivateUsersRequest::isRestoreMessages() const {
    return m_restore_messages;
}
void OAIReactivateUsersRequest::setRestoreMessages(const bool &restore_messages) {
    m_restore_messages = restore_messages;
    m_restore_messages_isSet = true;
}

bool OAIReactivateUsersRequest::is_restore_messages_Set() const{
    return m_restore_messages_isSet;
}

bool OAIReactivateUsersRequest::is_restore_messages_Valid() const{
    return m_restore_messages_isValid;
}

QList<QString> OAIReactivateUsersRequest::getUserIds() const {
    return m_user_ids;
}
void OAIReactivateUsersRequest::setUserIds(const QList<QString> &user_ids) {
    m_user_ids = user_ids;
    m_user_ids_isSet = true;
}

bool OAIReactivateUsersRequest::is_user_ids_Set() const{
    return m_user_ids_isSet;
}

bool OAIReactivateUsersRequest::is_user_ids_Valid() const{
    return m_user_ids_isValid;
}

bool OAIReactivateUsersRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_by_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_restore_messages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReactivateUsersRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_user_ids_isValid && true;
}

} // namespace OpenAPI
