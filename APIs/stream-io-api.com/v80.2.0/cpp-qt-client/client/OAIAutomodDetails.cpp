/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutomodDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutomodDetails::OAIAutomodDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutomodDetails::OAIAutomodDetails() {
    this->initializeModel();
}

OAIAutomodDetails::~OAIAutomodDetails() {}

void OAIAutomodDetails::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_image_labels_isSet = false;
    m_image_labels_isValid = false;

    m_message_details_isSet = false;
    m_message_details_isValid = false;

    m_original_message_type_isSet = false;
    m_original_message_type_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;
}

void OAIAutomodDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutomodDetails::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_image_labels_isValid = ::OpenAPI::fromJsonValue(m_image_labels, json[QString("image_labels")]);
    m_image_labels_isSet = !json[QString("image_labels")].isNull() && m_image_labels_isValid;

    m_message_details_isValid = ::OpenAPI::fromJsonValue(m_message_details, json[QString("message_details")]);
    m_message_details_isSet = !json[QString("message_details")].isNull() && m_message_details_isValid;

    m_original_message_type_isValid = ::OpenAPI::fromJsonValue(m_original_message_type, json[QString("original_message_type")]);
    m_original_message_type_isSet = !json[QString("original_message_type")].isNull() && m_original_message_type_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;
}

QString OAIAutomodDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutomodDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_image_labels.size() > 0) {
        obj.insert(QString("image_labels"), ::OpenAPI::toJsonValue(m_image_labels));
    }
    if (m_message_details.isSet()) {
        obj.insert(QString("message_details"), ::OpenAPI::toJsonValue(m_message_details));
    }
    if (m_original_message_type_isSet) {
        obj.insert(QString("original_message_type"), ::OpenAPI::toJsonValue(m_original_message_type));
    }
    if (m_result.isSet()) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    return obj;
}

QString OAIAutomodDetails::getAction() const {
    return m_action;
}
void OAIAutomodDetails::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIAutomodDetails::is_action_Set() const{
    return m_action_isSet;
}

bool OAIAutomodDetails::is_action_Valid() const{
    return m_action_isValid;
}

QList<QString> OAIAutomodDetails::getImageLabels() const {
    return m_image_labels;
}
void OAIAutomodDetails::setImageLabels(const QList<QString> &image_labels) {
    m_image_labels = image_labels;
    m_image_labels_isSet = true;
}

bool OAIAutomodDetails::is_image_labels_Set() const{
    return m_image_labels_isSet;
}

bool OAIAutomodDetails::is_image_labels_Valid() const{
    return m_image_labels_isValid;
}

OAIFlagMessageDetails OAIAutomodDetails::getMessageDetails() const {
    return m_message_details;
}
void OAIAutomodDetails::setMessageDetails(const OAIFlagMessageDetails &message_details) {
    m_message_details = message_details;
    m_message_details_isSet = true;
}

bool OAIAutomodDetails::is_message_details_Set() const{
    return m_message_details_isSet;
}

bool OAIAutomodDetails::is_message_details_Valid() const{
    return m_message_details_isValid;
}

QString OAIAutomodDetails::getOriginalMessageType() const {
    return m_original_message_type;
}
void OAIAutomodDetails::setOriginalMessageType(const QString &original_message_type) {
    m_original_message_type = original_message_type;
    m_original_message_type_isSet = true;
}

bool OAIAutomodDetails::is_original_message_type_Set() const{
    return m_original_message_type_isSet;
}

bool OAIAutomodDetails::is_original_message_type_Valid() const{
    return m_original_message_type_isValid;
}

OAIMessageModerationResult OAIAutomodDetails::getResult() const {
    return m_result;
}
void OAIAutomodDetails::setResult(const OAIMessageModerationResult &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAIAutomodDetails::is_result_Set() const{
    return m_result_isSet;
}

bool OAIAutomodDetails::is_result_Valid() const{
    return m_result_isValid;
}

bool OAIAutomodDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_message_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutomodDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
