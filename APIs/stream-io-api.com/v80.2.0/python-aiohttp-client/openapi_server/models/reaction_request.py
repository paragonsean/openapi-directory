# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_object_request import UserObjectRequest
from openapi_server import util


class ReactionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message_id: str=None, score: int=None, type: str=None, user: UserObjectRequest=None, user_id: str=None):
        """ReactionRequest - a model defined in OpenAPI

        :param message_id: The message_id of this ReactionRequest.
        :param score: The score of this ReactionRequest.
        :param type: The type of this ReactionRequest.
        :param user: The user of this ReactionRequest.
        :param user_id: The user_id of this ReactionRequest.
        """
        self.openapi_types = {
            'message_id': str,
            'score': int,
            'type': str,
            'user': UserObjectRequest,
            'user_id': str
        }

        self.attribute_map = {
            'message_id': 'message_id',
            'score': 'score',
            'type': 'type',
            'user': 'user',
            'user_id': 'user_id'
        }

        self._message_id = message_id
        self._score = score
        self._type = type
        self._user = user
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReactionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReactionRequest of this ReactionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message_id(self):
        """Gets the message_id of this ReactionRequest.

        ID of a message user reacted to

        :return: The message_id of this ReactionRequest.
        :rtype: str
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this ReactionRequest.

        ID of a message user reacted to

        :param message_id: The message_id of this ReactionRequest.
        :type message_id: str
        """

        self._message_id = message_id

    @property
    def score(self):
        """Gets the score of this ReactionRequest.

        Reaction score. If not specified reaction has score of 1

        :return: The score of this ReactionRequest.
        :rtype: int
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this ReactionRequest.

        Reaction score. If not specified reaction has score of 1

        :param score: The score of this ReactionRequest.
        :type score: int
        """

        self._score = score

    @property
    def type(self):
        """Gets the type of this ReactionRequest.

        The type of reaction (e.g. 'like', 'laugh', 'wow')

        :return: The type of this ReactionRequest.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ReactionRequest.

        The type of reaction (e.g. 'like', 'laugh', 'wow')

        :param type: The type of this ReactionRequest.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")
        if type is not None and len(type) > 30:
            raise ValueError("Invalid value for `type`, length must be less than or equal to `30`")

        self._type = type

    @property
    def user(self):
        """Gets the user of this ReactionRequest.


        :return: The user of this ReactionRequest.
        :rtype: UserObjectRequest
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this ReactionRequest.


        :param user: The user of this ReactionRequest.
        :type user: UserObjectRequest
        """

        self._user = user

    @property
    def user_id(self):
        """Gets the user_id of this ReactionRequest.

        ID of a user who reacted to a message

        :return: The user_id of this ReactionRequest.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ReactionRequest.

        ID of a user who reacted to a message

        :param user_id: The user_id of this ReactionRequest.
        :type user_id: str
        """

        self._user_id = user_id
