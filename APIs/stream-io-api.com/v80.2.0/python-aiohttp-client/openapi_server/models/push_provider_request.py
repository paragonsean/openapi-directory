# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PushProviderRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apn_auth_key: str=None, apn_auth_type: str=None, apn_development: bool=None, apn_host: str=None, apn_key_id: str=None, apn_notification_template: str=None, apn_p12_cert: str=None, apn_team_id: str=None, apn_topic: str=None, created_at: datetime=None, description: str=None, disabled_at: datetime=None, disabled_reason: str=None, firebase_apn_template: str=None, firebase_credentials: str=None, firebase_data_template: str=None, firebase_notification_template: str=None, firebase_server_key: str=None, huawei_app_id: str=None, huawei_app_secret: str=None, name: str=None, type: int=None, updated_at: datetime=None, xiaomi_app_secret: str=None, xiaomi_package_name: str=None):
        """PushProviderRequest - a model defined in OpenAPI

        :param apn_auth_key: The apn_auth_key of this PushProviderRequest.
        :param apn_auth_type: The apn_auth_type of this PushProviderRequest.
        :param apn_development: The apn_development of this PushProviderRequest.
        :param apn_host: The apn_host of this PushProviderRequest.
        :param apn_key_id: The apn_key_id of this PushProviderRequest.
        :param apn_notification_template: The apn_notification_template of this PushProviderRequest.
        :param apn_p12_cert: The apn_p12_cert of this PushProviderRequest.
        :param apn_team_id: The apn_team_id of this PushProviderRequest.
        :param apn_topic: The apn_topic of this PushProviderRequest.
        :param created_at: The created_at of this PushProviderRequest.
        :param description: The description of this PushProviderRequest.
        :param disabled_at: The disabled_at of this PushProviderRequest.
        :param disabled_reason: The disabled_reason of this PushProviderRequest.
        :param firebase_apn_template: The firebase_apn_template of this PushProviderRequest.
        :param firebase_credentials: The firebase_credentials of this PushProviderRequest.
        :param firebase_data_template: The firebase_data_template of this PushProviderRequest.
        :param firebase_notification_template: The firebase_notification_template of this PushProviderRequest.
        :param firebase_server_key: The firebase_server_key of this PushProviderRequest.
        :param huawei_app_id: The huawei_app_id of this PushProviderRequest.
        :param huawei_app_secret: The huawei_app_secret of this PushProviderRequest.
        :param name: The name of this PushProviderRequest.
        :param type: The type of this PushProviderRequest.
        :param updated_at: The updated_at of this PushProviderRequest.
        :param xiaomi_app_secret: The xiaomi_app_secret of this PushProviderRequest.
        :param xiaomi_package_name: The xiaomi_package_name of this PushProviderRequest.
        """
        self.openapi_types = {
            'apn_auth_key': str,
            'apn_auth_type': str,
            'apn_development': bool,
            'apn_host': str,
            'apn_key_id': str,
            'apn_notification_template': str,
            'apn_p12_cert': str,
            'apn_team_id': str,
            'apn_topic': str,
            'created_at': datetime,
            'description': str,
            'disabled_at': datetime,
            'disabled_reason': str,
            'firebase_apn_template': str,
            'firebase_credentials': str,
            'firebase_data_template': str,
            'firebase_notification_template': str,
            'firebase_server_key': str,
            'huawei_app_id': str,
            'huawei_app_secret': str,
            'name': str,
            'type': int,
            'updated_at': datetime,
            'xiaomi_app_secret': str,
            'xiaomi_package_name': str
        }

        self.attribute_map = {
            'apn_auth_key': 'apn_auth_key',
            'apn_auth_type': 'apn_auth_type',
            'apn_development': 'apn_development',
            'apn_host': 'apn_host',
            'apn_key_id': 'apn_key_id',
            'apn_notification_template': 'apn_notification_template',
            'apn_p12_cert': 'apn_p12_cert',
            'apn_team_id': 'apn_team_id',
            'apn_topic': 'apn_topic',
            'created_at': 'created_at',
            'description': 'description',
            'disabled_at': 'disabled_at',
            'disabled_reason': 'disabled_reason',
            'firebase_apn_template': 'firebase_apn_template',
            'firebase_credentials': 'firebase_credentials',
            'firebase_data_template': 'firebase_data_template',
            'firebase_notification_template': 'firebase_notification_template',
            'firebase_server_key': 'firebase_server_key',
            'huawei_app_id': 'huawei_app_id',
            'huawei_app_secret': 'huawei_app_secret',
            'name': 'name',
            'type': 'type',
            'updated_at': 'updated_at',
            'xiaomi_app_secret': 'xiaomi_app_secret',
            'xiaomi_package_name': 'xiaomi_package_name'
        }

        self._apn_auth_key = apn_auth_key
        self._apn_auth_type = apn_auth_type
        self._apn_development = apn_development
        self._apn_host = apn_host
        self._apn_key_id = apn_key_id
        self._apn_notification_template = apn_notification_template
        self._apn_p12_cert = apn_p12_cert
        self._apn_team_id = apn_team_id
        self._apn_topic = apn_topic
        self._created_at = created_at
        self._description = description
        self._disabled_at = disabled_at
        self._disabled_reason = disabled_reason
        self._firebase_apn_template = firebase_apn_template
        self._firebase_credentials = firebase_credentials
        self._firebase_data_template = firebase_data_template
        self._firebase_notification_template = firebase_notification_template
        self._firebase_server_key = firebase_server_key
        self._huawei_app_id = huawei_app_id
        self._huawei_app_secret = huawei_app_secret
        self._name = name
        self._type = type
        self._updated_at = updated_at
        self._xiaomi_app_secret = xiaomi_app_secret
        self._xiaomi_package_name = xiaomi_package_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PushProviderRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PushProviderRequest of this PushProviderRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apn_auth_key(self):
        """Gets the apn_auth_key of this PushProviderRequest.


        :return: The apn_auth_key of this PushProviderRequest.
        :rtype: str
        """
        return self._apn_auth_key

    @apn_auth_key.setter
    def apn_auth_key(self, apn_auth_key):
        """Sets the apn_auth_key of this PushProviderRequest.


        :param apn_auth_key: The apn_auth_key of this PushProviderRequest.
        :type apn_auth_key: str
        """

        self._apn_auth_key = apn_auth_key

    @property
    def apn_auth_type(self):
        """Gets the apn_auth_type of this PushProviderRequest.


        :return: The apn_auth_type of this PushProviderRequest.
        :rtype: str
        """
        return self._apn_auth_type

    @apn_auth_type.setter
    def apn_auth_type(self, apn_auth_type):
        """Sets the apn_auth_type of this PushProviderRequest.


        :param apn_auth_type: The apn_auth_type of this PushProviderRequest.
        :type apn_auth_type: str
        """

        self._apn_auth_type = apn_auth_type

    @property
    def apn_development(self):
        """Gets the apn_development of this PushProviderRequest.


        :return: The apn_development of this PushProviderRequest.
        :rtype: bool
        """
        return self._apn_development

    @apn_development.setter
    def apn_development(self, apn_development):
        """Sets the apn_development of this PushProviderRequest.


        :param apn_development: The apn_development of this PushProviderRequest.
        :type apn_development: bool
        """

        self._apn_development = apn_development

    @property
    def apn_host(self):
        """Gets the apn_host of this PushProviderRequest.


        :return: The apn_host of this PushProviderRequest.
        :rtype: str
        """
        return self._apn_host

    @apn_host.setter
    def apn_host(self, apn_host):
        """Sets the apn_host of this PushProviderRequest.


        :param apn_host: The apn_host of this PushProviderRequest.
        :type apn_host: str
        """

        self._apn_host = apn_host

    @property
    def apn_key_id(self):
        """Gets the apn_key_id of this PushProviderRequest.


        :return: The apn_key_id of this PushProviderRequest.
        :rtype: str
        """
        return self._apn_key_id

    @apn_key_id.setter
    def apn_key_id(self, apn_key_id):
        """Sets the apn_key_id of this PushProviderRequest.


        :param apn_key_id: The apn_key_id of this PushProviderRequest.
        :type apn_key_id: str
        """

        self._apn_key_id = apn_key_id

    @property
    def apn_notification_template(self):
        """Gets the apn_notification_template of this PushProviderRequest.


        :return: The apn_notification_template of this PushProviderRequest.
        :rtype: str
        """
        return self._apn_notification_template

    @apn_notification_template.setter
    def apn_notification_template(self, apn_notification_template):
        """Sets the apn_notification_template of this PushProviderRequest.


        :param apn_notification_template: The apn_notification_template of this PushProviderRequest.
        :type apn_notification_template: str
        """

        self._apn_notification_template = apn_notification_template

    @property
    def apn_p12_cert(self):
        """Gets the apn_p12_cert of this PushProviderRequest.


        :return: The apn_p12_cert of this PushProviderRequest.
        :rtype: str
        """
        return self._apn_p12_cert

    @apn_p12_cert.setter
    def apn_p12_cert(self, apn_p12_cert):
        """Sets the apn_p12_cert of this PushProviderRequest.


        :param apn_p12_cert: The apn_p12_cert of this PushProviderRequest.
        :type apn_p12_cert: str
        """

        self._apn_p12_cert = apn_p12_cert

    @property
    def apn_team_id(self):
        """Gets the apn_team_id of this PushProviderRequest.


        :return: The apn_team_id of this PushProviderRequest.
        :rtype: str
        """
        return self._apn_team_id

    @apn_team_id.setter
    def apn_team_id(self, apn_team_id):
        """Sets the apn_team_id of this PushProviderRequest.


        :param apn_team_id: The apn_team_id of this PushProviderRequest.
        :type apn_team_id: str
        """

        self._apn_team_id = apn_team_id

    @property
    def apn_topic(self):
        """Gets the apn_topic of this PushProviderRequest.


        :return: The apn_topic of this PushProviderRequest.
        :rtype: str
        """
        return self._apn_topic

    @apn_topic.setter
    def apn_topic(self, apn_topic):
        """Sets the apn_topic of this PushProviderRequest.


        :param apn_topic: The apn_topic of this PushProviderRequest.
        :type apn_topic: str
        """

        self._apn_topic = apn_topic

    @property
    def created_at(self):
        """Gets the created_at of this PushProviderRequest.


        :return: The created_at of this PushProviderRequest.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this PushProviderRequest.


        :param created_at: The created_at of this PushProviderRequest.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def description(self):
        """Gets the description of this PushProviderRequest.


        :return: The description of this PushProviderRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PushProviderRequest.


        :param description: The description of this PushProviderRequest.
        :type description: str
        """
        if description is not None and len(description) > 128:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `128`")

        self._description = description

    @property
    def disabled_at(self):
        """Gets the disabled_at of this PushProviderRequest.


        :return: The disabled_at of this PushProviderRequest.
        :rtype: datetime
        """
        return self._disabled_at

    @disabled_at.setter
    def disabled_at(self, disabled_at):
        """Sets the disabled_at of this PushProviderRequest.


        :param disabled_at: The disabled_at of this PushProviderRequest.
        :type disabled_at: datetime
        """

        self._disabled_at = disabled_at

    @property
    def disabled_reason(self):
        """Gets the disabled_reason of this PushProviderRequest.


        :return: The disabled_reason of this PushProviderRequest.
        :rtype: str
        """
        return self._disabled_reason

    @disabled_reason.setter
    def disabled_reason(self, disabled_reason):
        """Sets the disabled_reason of this PushProviderRequest.


        :param disabled_reason: The disabled_reason of this PushProviderRequest.
        :type disabled_reason: str
        """
        if disabled_reason is not None and len(disabled_reason) > 255:
            raise ValueError("Invalid value for `disabled_reason`, length must be less than or equal to `255`")

        self._disabled_reason = disabled_reason

    @property
    def firebase_apn_template(self):
        """Gets the firebase_apn_template of this PushProviderRequest.


        :return: The firebase_apn_template of this PushProviderRequest.
        :rtype: str
        """
        return self._firebase_apn_template

    @firebase_apn_template.setter
    def firebase_apn_template(self, firebase_apn_template):
        """Sets the firebase_apn_template of this PushProviderRequest.


        :param firebase_apn_template: The firebase_apn_template of this PushProviderRequest.
        :type firebase_apn_template: str
        """

        self._firebase_apn_template = firebase_apn_template

    @property
    def firebase_credentials(self):
        """Gets the firebase_credentials of this PushProviderRequest.


        :return: The firebase_credentials of this PushProviderRequest.
        :rtype: str
        """
        return self._firebase_credentials

    @firebase_credentials.setter
    def firebase_credentials(self, firebase_credentials):
        """Sets the firebase_credentials of this PushProviderRequest.


        :param firebase_credentials: The firebase_credentials of this PushProviderRequest.
        :type firebase_credentials: str
        """

        self._firebase_credentials = firebase_credentials

    @property
    def firebase_data_template(self):
        """Gets the firebase_data_template of this PushProviderRequest.


        :return: The firebase_data_template of this PushProviderRequest.
        :rtype: str
        """
        return self._firebase_data_template

    @firebase_data_template.setter
    def firebase_data_template(self, firebase_data_template):
        """Sets the firebase_data_template of this PushProviderRequest.


        :param firebase_data_template: The firebase_data_template of this PushProviderRequest.
        :type firebase_data_template: str
        """

        self._firebase_data_template = firebase_data_template

    @property
    def firebase_notification_template(self):
        """Gets the firebase_notification_template of this PushProviderRequest.


        :return: The firebase_notification_template of this PushProviderRequest.
        :rtype: str
        """
        return self._firebase_notification_template

    @firebase_notification_template.setter
    def firebase_notification_template(self, firebase_notification_template):
        """Sets the firebase_notification_template of this PushProviderRequest.


        :param firebase_notification_template: The firebase_notification_template of this PushProviderRequest.
        :type firebase_notification_template: str
        """

        self._firebase_notification_template = firebase_notification_template

    @property
    def firebase_server_key(self):
        """Gets the firebase_server_key of this PushProviderRequest.


        :return: The firebase_server_key of this PushProviderRequest.
        :rtype: str
        """
        return self._firebase_server_key

    @firebase_server_key.setter
    def firebase_server_key(self, firebase_server_key):
        """Sets the firebase_server_key of this PushProviderRequest.


        :param firebase_server_key: The firebase_server_key of this PushProviderRequest.
        :type firebase_server_key: str
        """

        self._firebase_server_key = firebase_server_key

    @property
    def huawei_app_id(self):
        """Gets the huawei_app_id of this PushProviderRequest.


        :return: The huawei_app_id of this PushProviderRequest.
        :rtype: str
        """
        return self._huawei_app_id

    @huawei_app_id.setter
    def huawei_app_id(self, huawei_app_id):
        """Sets the huawei_app_id of this PushProviderRequest.


        :param huawei_app_id: The huawei_app_id of this PushProviderRequest.
        :type huawei_app_id: str
        """

        self._huawei_app_id = huawei_app_id

    @property
    def huawei_app_secret(self):
        """Gets the huawei_app_secret of this PushProviderRequest.


        :return: The huawei_app_secret of this PushProviderRequest.
        :rtype: str
        """
        return self._huawei_app_secret

    @huawei_app_secret.setter
    def huawei_app_secret(self, huawei_app_secret):
        """Sets the huawei_app_secret of this PushProviderRequest.


        :param huawei_app_secret: The huawei_app_secret of this PushProviderRequest.
        :type huawei_app_secret: str
        """

        self._huawei_app_secret = huawei_app_secret

    @property
    def name(self):
        """Gets the name of this PushProviderRequest.


        :return: The name of this PushProviderRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PushProviderRequest.


        :param name: The name of this PushProviderRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")
        if name is not None and len(name) > 36:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `36`")
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")

        self._name = name

    @property
    def type(self):
        """Gets the type of this PushProviderRequest.


        :return: The type of this PushProviderRequest.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PushProviderRequest.


        :param type: The type of this PushProviderRequest.
        :type type: int
        """

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this PushProviderRequest.


        :return: The updated_at of this PushProviderRequest.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this PushProviderRequest.


        :param updated_at: The updated_at of this PushProviderRequest.
        :type updated_at: datetime
        """

        self._updated_at = updated_at

    @property
    def xiaomi_app_secret(self):
        """Gets the xiaomi_app_secret of this PushProviderRequest.


        :return: The xiaomi_app_secret of this PushProviderRequest.
        :rtype: str
        """
        return self._xiaomi_app_secret

    @xiaomi_app_secret.setter
    def xiaomi_app_secret(self, xiaomi_app_secret):
        """Sets the xiaomi_app_secret of this PushProviderRequest.


        :param xiaomi_app_secret: The xiaomi_app_secret of this PushProviderRequest.
        :type xiaomi_app_secret: str
        """

        self._xiaomi_app_secret = xiaomi_app_secret

    @property
    def xiaomi_package_name(self):
        """Gets the xiaomi_package_name of this PushProviderRequest.


        :return: The xiaomi_package_name of this PushProviderRequest.
        :rtype: str
        """
        return self._xiaomi_package_name

    @xiaomi_package_name.setter
    def xiaomi_package_name(self, xiaomi_package_name):
        """Sets the xiaomi_package_name of this PushProviderRequest.


        :param xiaomi_package_name: The xiaomi_package_name of this PushProviderRequest.
        :type xiaomi_package_name: str
        """

        self._xiaomi_package_name = xiaomi_package_name
