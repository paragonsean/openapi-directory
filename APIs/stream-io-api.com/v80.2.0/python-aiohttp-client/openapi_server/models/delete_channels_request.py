# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeleteChannelsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cids: List[str]=None, hard_delete: bool=None):
        """DeleteChannelsRequest - a model defined in OpenAPI

        :param cids: The cids of this DeleteChannelsRequest.
        :param hard_delete: The hard_delete of this DeleteChannelsRequest.
        """
        self.openapi_types = {
            'cids': List[str],
            'hard_delete': bool
        }

        self.attribute_map = {
            'cids': 'cids',
            'hard_delete': 'hard_delete'
        }

        self._cids = cids
        self._hard_delete = hard_delete

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteChannelsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteChannelsRequest of this DeleteChannelsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cids(self):
        """Gets the cids of this DeleteChannelsRequest.

        All channels that should be deleted

        :return: The cids of this DeleteChannelsRequest.
        :rtype: List[str]
        """
        return self._cids

    @cids.setter
    def cids(self, cids):
        """Sets the cids of this DeleteChannelsRequest.

        All channels that should be deleted

        :param cids: The cids of this DeleteChannelsRequest.
        :type cids: List[str]
        """

        self._cids = cids

    @property
    def hard_delete(self):
        """Gets the hard_delete of this DeleteChannelsRequest.

        Specify if channels and all ressources should be hard deleted

        :return: The hard_delete of this DeleteChannelsRequest.
        :rtype: bool
        """
        return self._hard_delete

    @hard_delete.setter
    def hard_delete(self, hard_delete):
        """Sets the hard_delete of this DeleteChannelsRequest.

        Specify if channels and all ressources should be hard deleted

        :param hard_delete: The hard_delete of this DeleteChannelsRequest.
        :type hard_delete: bool
        """

        self._hard_delete = hard_delete
