# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImportTaskHistory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, next_state: str=None, prev_state: str=None):
        """ImportTaskHistory - a model defined in OpenAPI

        :param created_at: The created_at of this ImportTaskHistory.
        :param next_state: The next_state of this ImportTaskHistory.
        :param prev_state: The prev_state of this ImportTaskHistory.
        """
        self.openapi_types = {
            'created_at': datetime,
            'next_state': str,
            'prev_state': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'next_state': 'next_state',
            'prev_state': 'prev_state'
        }

        self._created_at = created_at
        self._next_state = next_state
        self._prev_state = prev_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportTaskHistory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportTaskHistory of this ImportTaskHistory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this ImportTaskHistory.


        :return: The created_at of this ImportTaskHistory.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ImportTaskHistory.


        :param created_at: The created_at of this ImportTaskHistory.
        :type created_at: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")

        self._created_at = created_at

    @property
    def next_state(self):
        """Gets the next_state of this ImportTaskHistory.


        :return: The next_state of this ImportTaskHistory.
        :rtype: str
        """
        return self._next_state

    @next_state.setter
    def next_state(self, next_state):
        """Sets the next_state of this ImportTaskHistory.


        :param next_state: The next_state of this ImportTaskHistory.
        :type next_state: str
        """
        if next_state is None:
            raise ValueError("Invalid value for `next_state`, must not be `None`")

        self._next_state = next_state

    @property
    def prev_state(self):
        """Gets the prev_state of this ImportTaskHistory.


        :return: The prev_state of this ImportTaskHistory.
        :rtype: str
        """
        return self._prev_state

    @prev_state.setter
    def prev_state(self, prev_state):
        """Sets the prev_state of this ImportTaskHistory.


        :param prev_state: The prev_state of this ImportTaskHistory.
        :type prev_state: str
        """
        if prev_state is None:
            raise ValueError("Invalid value for `prev_state`, must not be `None`")

        self._prev_state = prev_state
