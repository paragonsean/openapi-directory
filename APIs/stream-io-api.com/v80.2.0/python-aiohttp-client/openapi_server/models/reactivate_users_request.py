# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReactivateUsersRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_by_id: str=None, restore_messages: bool=None, user_ids: List[str]=None):
        """ReactivateUsersRequest - a model defined in OpenAPI

        :param created_by_id: The created_by_id of this ReactivateUsersRequest.
        :param restore_messages: The restore_messages of this ReactivateUsersRequest.
        :param user_ids: The user_ids of this ReactivateUsersRequest.
        """
        self.openapi_types = {
            'created_by_id': str,
            'restore_messages': bool,
            'user_ids': List[str]
        }

        self.attribute_map = {
            'created_by_id': 'created_by_id',
            'restore_messages': 'restore_messages',
            'user_ids': 'user_ids'
        }

        self._created_by_id = created_by_id
        self._restore_messages = restore_messages
        self._user_ids = user_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReactivateUsersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReactivateUsersRequest of this ReactivateUsersRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_by_id(self):
        """Gets the created_by_id of this ReactivateUsersRequest.

        ID of the user who's reactivating the users

        :return: The created_by_id of this ReactivateUsersRequest.
        :rtype: str
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id):
        """Sets the created_by_id of this ReactivateUsersRequest.

        ID of the user who's reactivating the users

        :param created_by_id: The created_by_id of this ReactivateUsersRequest.
        :type created_by_id: str
        """

        self._created_by_id = created_by_id

    @property
    def restore_messages(self):
        """Gets the restore_messages of this ReactivateUsersRequest.

        Restore previously deleted messages

        :return: The restore_messages of this ReactivateUsersRequest.
        :rtype: bool
        """
        return self._restore_messages

    @restore_messages.setter
    def restore_messages(self, restore_messages):
        """Sets the restore_messages of this ReactivateUsersRequest.

        Restore previously deleted messages

        :param restore_messages: The restore_messages of this ReactivateUsersRequest.
        :type restore_messages: bool
        """

        self._restore_messages = restore_messages

    @property
    def user_ids(self):
        """Gets the user_ids of this ReactivateUsersRequest.

        User IDs to reactivate

        :return: The user_ids of this ReactivateUsersRequest.
        :rtype: List[str]
        """
        return self._user_ids

    @user_ids.setter
    def user_ids(self, user_ids):
        """Sets the user_ids of this ReactivateUsersRequest.

        User IDs to reactivate

        :param user_ids: The user_ids of this ReactivateUsersRequest.
        :type user_ids: List[str]
        """
        if user_ids is None:
            raise ValueError("Invalid value for `user_ids`, must not be `None`")

        self._user_ids = user_ids
