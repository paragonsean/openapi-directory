# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_state_response_fields import ChannelStateResponseFields
from openapi_server import util


class ChannelsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channels: List[ChannelStateResponseFields]=None, duration: str=None):
        """ChannelsResponse - a model defined in OpenAPI

        :param channels: The channels of this ChannelsResponse.
        :param duration: The duration of this ChannelsResponse.
        """
        self.openapi_types = {
            'channels': List[ChannelStateResponseFields],
            'duration': str
        }

        self.attribute_map = {
            'channels': 'channels',
            'duration': 'duration'
        }

        self._channels = channels
        self._duration = duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelsResponse of this ChannelsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channels(self):
        """Gets the channels of this ChannelsResponse.

        List of channels

        :return: The channels of this ChannelsResponse.
        :rtype: List[ChannelStateResponseFields]
        """
        return self._channels

    @channels.setter
    def channels(self, channels):
        """Sets the channels of this ChannelsResponse.

        List of channels

        :param channels: The channels of this ChannelsResponse.
        :type channels: List[ChannelStateResponseFields]
        """
        if channels is None:
            raise ValueError("Invalid value for `channels`, must not be `None`")

        self._channels = channels

    @property
    def duration(self):
        """Gets the duration of this ChannelsResponse.


        :return: The duration of this ChannelsResponse.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ChannelsResponse.


        :param duration: The duration of this ChannelsResponse.
        :type duration: str
        """
        if duration is None:
            raise ValueError("Invalid value for `duration`, must not be `None`")

        self._duration = duration
