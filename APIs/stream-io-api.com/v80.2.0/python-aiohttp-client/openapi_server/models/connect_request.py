# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_fields import DeviceFields
from openapi_server.models.user_object import UserObject
from openapi_server import util


class ConnectRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device: DeviceFields=None, user_details: UserObject=None):
        """ConnectRequest - a model defined in OpenAPI

        :param device: The device of this ConnectRequest.
        :param user_details: The user_details of this ConnectRequest.
        """
        self.openapi_types = {
            'device': DeviceFields,
            'user_details': UserObject
        }

        self.attribute_map = {
            'device': 'device',
            'user_details': 'user_details'
        }

        self._device = device
        self._user_details = user_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConnectRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConnectRequest of this ConnectRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device(self):
        """Gets the device of this ConnectRequest.


        :return: The device of this ConnectRequest.
        :rtype: DeviceFields
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this ConnectRequest.


        :param device: The device of this ConnectRequest.
        :type device: DeviceFields
        """

        self._device = device

    @property
    def user_details(self):
        """Gets the user_details of this ConnectRequest.


        :return: The user_details of this ConnectRequest.
        :rtype: UserObject
        """
        return self._user_details

    @user_details.setter
    def user_details(self, user_details):
        """Sets the user_details of this ConnectRequest.


        :param user_details: The user_details of this ConnectRequest.
        :type user_details: UserObject
        """
        if user_details is None:
            raise ValueError("Invalid value for `user_details`, must not be `None`")

        self._user_details = user_details
