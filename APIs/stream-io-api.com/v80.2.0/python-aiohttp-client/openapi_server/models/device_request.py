# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeviceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, disabled: bool=None, disabled_reason: str=None, id: str=None, push_provider: str=None, push_provider_name: str=None, user_id: str=None):
        """DeviceRequest - a model defined in OpenAPI

        :param created_at: The created_at of this DeviceRequest.
        :param disabled: The disabled of this DeviceRequest.
        :param disabled_reason: The disabled_reason of this DeviceRequest.
        :param id: The id of this DeviceRequest.
        :param push_provider: The push_provider of this DeviceRequest.
        :param push_provider_name: The push_provider_name of this DeviceRequest.
        :param user_id: The user_id of this DeviceRequest.
        """
        self.openapi_types = {
            'created_at': datetime,
            'disabled': bool,
            'disabled_reason': str,
            'id': str,
            'push_provider': str,
            'push_provider_name': str,
            'user_id': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'disabled': 'disabled',
            'disabled_reason': 'disabled_reason',
            'id': 'id',
            'push_provider': 'push_provider',
            'push_provider_name': 'push_provider_name',
            'user_id': 'user_id'
        }

        self._created_at = created_at
        self._disabled = disabled
        self._disabled_reason = disabled_reason
        self._id = id
        self._push_provider = push_provider
        self._push_provider_name = push_provider_name
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceRequest of this DeviceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this DeviceRequest.

        Date/time of creation

        :return: The created_at of this DeviceRequest.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this DeviceRequest.

        Date/time of creation

        :param created_at: The created_at of this DeviceRequest.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def disabled(self):
        """Gets the disabled of this DeviceRequest.

        Whether device is disabled or not

        :return: The disabled of this DeviceRequest.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this DeviceRequest.

        Whether device is disabled or not

        :param disabled: The disabled of this DeviceRequest.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def disabled_reason(self):
        """Gets the disabled_reason of this DeviceRequest.

        Reason explaining why device had been disabled

        :return: The disabled_reason of this DeviceRequest.
        :rtype: str
        """
        return self._disabled_reason

    @disabled_reason.setter
    def disabled_reason(self, disabled_reason):
        """Sets the disabled_reason of this DeviceRequest.

        Reason explaining why device had been disabled

        :param disabled_reason: The disabled_reason of this DeviceRequest.
        :type disabled_reason: str
        """

        self._disabled_reason = disabled_reason

    @property
    def id(self):
        """Gets the id of this DeviceRequest.


        :return: The id of this DeviceRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DeviceRequest.


        :param id: The id of this DeviceRequest.
        :type id: str
        """

        self._id = id

    @property
    def push_provider(self):
        """Gets the push_provider of this DeviceRequest.


        :return: The push_provider of this DeviceRequest.
        :rtype: str
        """
        return self._push_provider

    @push_provider.setter
    def push_provider(self, push_provider):
        """Sets the push_provider of this DeviceRequest.


        :param push_provider: The push_provider of this DeviceRequest.
        :type push_provider: str
        """

        self._push_provider = push_provider

    @property
    def push_provider_name(self):
        """Gets the push_provider_name of this DeviceRequest.


        :return: The push_provider_name of this DeviceRequest.
        :rtype: str
        """
        return self._push_provider_name

    @push_provider_name.setter
    def push_provider_name(self, push_provider_name):
        """Sets the push_provider_name of this DeviceRequest.


        :param push_provider_name: The push_provider_name of this DeviceRequest.
        :type push_provider_name: str
        """

        self._push_provider_name = push_provider_name

    @property
    def user_id(self):
        """Gets the user_id of this DeviceRequest.


        :return: The user_id of this DeviceRequest.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this DeviceRequest.


        :param user_id: The user_id of this DeviceRequest.
        :type user_id: str
        """

        self._user_id = user_id
