# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.limit_info import LimitInfo
from openapi_server import util


class GetRateLimitsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, android: Dict[str, LimitInfo]=None, duration: str=None, ios: Dict[str, LimitInfo]=None, server_side: Dict[str, LimitInfo]=None, web: Dict[str, LimitInfo]=None):
        """GetRateLimitsResponse - a model defined in OpenAPI

        :param android: The android of this GetRateLimitsResponse.
        :param duration: The duration of this GetRateLimitsResponse.
        :param ios: The ios of this GetRateLimitsResponse.
        :param server_side: The server_side of this GetRateLimitsResponse.
        :param web: The web of this GetRateLimitsResponse.
        """
        self.openapi_types = {
            'android': Dict[str, LimitInfo],
            'duration': str,
            'ios': Dict[str, LimitInfo],
            'server_side': Dict[str, LimitInfo],
            'web': Dict[str, LimitInfo]
        }

        self.attribute_map = {
            'android': 'android',
            'duration': 'duration',
            'ios': 'ios',
            'server_side': 'server_side',
            'web': 'web'
        }

        self._android = android
        self._duration = duration
        self._ios = ios
        self._server_side = server_side
        self._web = web

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetRateLimitsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetRateLimitsResponse of this GetRateLimitsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def android(self):
        """Gets the android of this GetRateLimitsResponse.

        Map of endpoint rate limits for the Android platform

        :return: The android of this GetRateLimitsResponse.
        :rtype: Dict[str, LimitInfo]
        """
        return self._android

    @android.setter
    def android(self, android):
        """Sets the android of this GetRateLimitsResponse.

        Map of endpoint rate limits for the Android platform

        :param android: The android of this GetRateLimitsResponse.
        :type android: Dict[str, LimitInfo]
        """

        self._android = android

    @property
    def duration(self):
        """Gets the duration of this GetRateLimitsResponse.


        :return: The duration of this GetRateLimitsResponse.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this GetRateLimitsResponse.


        :param duration: The duration of this GetRateLimitsResponse.
        :type duration: str
        """
        if duration is None:
            raise ValueError("Invalid value for `duration`, must not be `None`")

        self._duration = duration

    @property
    def ios(self):
        """Gets the ios of this GetRateLimitsResponse.

        Map of endpoint rate limits for the iOS platform

        :return: The ios of this GetRateLimitsResponse.
        :rtype: Dict[str, LimitInfo]
        """
        return self._ios

    @ios.setter
    def ios(self, ios):
        """Sets the ios of this GetRateLimitsResponse.

        Map of endpoint rate limits for the iOS platform

        :param ios: The ios of this GetRateLimitsResponse.
        :type ios: Dict[str, LimitInfo]
        """

        self._ios = ios

    @property
    def server_side(self):
        """Gets the server_side of this GetRateLimitsResponse.

        Map of endpoint rate limits for the server-side platform

        :return: The server_side of this GetRateLimitsResponse.
        :rtype: Dict[str, LimitInfo]
        """
        return self._server_side

    @server_side.setter
    def server_side(self, server_side):
        """Sets the server_side of this GetRateLimitsResponse.

        Map of endpoint rate limits for the server-side platform

        :param server_side: The server_side of this GetRateLimitsResponse.
        :type server_side: Dict[str, LimitInfo]
        """

        self._server_side = server_side

    @property
    def web(self):
        """Gets the web of this GetRateLimitsResponse.

        Map of endpoint rate limits for the web platform

        :return: The web of this GetRateLimitsResponse.
        :rtype: Dict[str, LimitInfo]
        """
        return self._web

    @web.setter
    def web(self, web):
        """Sets the web of this GetRateLimitsResponse.

        Map of endpoint rate limits for the web platform

        :param web: The web of this GetRateLimitsResponse.
        :type web: Dict[str, LimitInfo]
        """

        self._web = web
