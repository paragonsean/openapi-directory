# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_object_request import UserObjectRequest
from openapi_server import util


class HideChannelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clear_history: bool=None, user: UserObjectRequest=None, user_id: str=None):
        """HideChannelRequest - a model defined in OpenAPI

        :param clear_history: The clear_history of this HideChannelRequest.
        :param user: The user of this HideChannelRequest.
        :param user_id: The user_id of this HideChannelRequest.
        """
        self.openapi_types = {
            'clear_history': bool,
            'user': UserObjectRequest,
            'user_id': str
        }

        self.attribute_map = {
            'clear_history': 'clear_history',
            'user': 'user',
            'user_id': 'user_id'
        }

        self._clear_history = clear_history
        self._user = user
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HideChannelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HideChannelRequest of this HideChannelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clear_history(self):
        """Gets the clear_history of this HideChannelRequest.

        Whether to clear message history of the channel or not

        :return: The clear_history of this HideChannelRequest.
        :rtype: bool
        """
        return self._clear_history

    @clear_history.setter
    def clear_history(self, clear_history):
        """Sets the clear_history of this HideChannelRequest.

        Whether to clear message history of the channel or not

        :param clear_history: The clear_history of this HideChannelRequest.
        :type clear_history: bool
        """

        self._clear_history = clear_history

    @property
    def user(self):
        """Gets the user of this HideChannelRequest.


        :return: The user of this HideChannelRequest.
        :rtype: UserObjectRequest
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this HideChannelRequest.


        :param user: The user of this HideChannelRequest.
        :type user: UserObjectRequest
        """

        self._user = user

    @property
    def user_id(self):
        """Gets the user_id of this HideChannelRequest.


        :return: The user_id of this HideChannelRequest.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this HideChannelRequest.


        :param user_id: The user_id of this HideChannelRequest.
        :type user_id: str
        """

        self._user_id = user_id
