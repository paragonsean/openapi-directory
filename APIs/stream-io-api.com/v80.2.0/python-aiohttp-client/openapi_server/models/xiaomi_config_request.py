# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class XiaomiConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disabled: bool=None, package_name: str=None, secret: str=None):
        """XiaomiConfigRequest - a model defined in OpenAPI

        :param disabled: The disabled of this XiaomiConfigRequest.
        :param package_name: The package_name of this XiaomiConfigRequest.
        :param secret: The secret of this XiaomiConfigRequest.
        """
        self.openapi_types = {
            'disabled': bool,
            'package_name': str,
            'secret': str
        }

        self.attribute_map = {
            'disabled': 'Disabled',
            'package_name': 'package_name',
            'secret': 'secret'
        }

        self._disabled = disabled
        self._package_name = package_name
        self._secret = secret

    @classmethod
    def from_dict(cls, dikt: dict) -> 'XiaomiConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The XiaomiConfigRequest of this XiaomiConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disabled(self):
        """Gets the disabled of this XiaomiConfigRequest.


        :return: The disabled of this XiaomiConfigRequest.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this XiaomiConfigRequest.


        :param disabled: The disabled of this XiaomiConfigRequest.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def package_name(self):
        """Gets the package_name of this XiaomiConfigRequest.


        :return: The package_name of this XiaomiConfigRequest.
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this XiaomiConfigRequest.


        :param package_name: The package_name of this XiaomiConfigRequest.
        :type package_name: str
        """

        self._package_name = package_name

    @property
    def secret(self):
        """Gets the secret of this XiaomiConfigRequest.


        :return: The secret of this XiaomiConfigRequest.
        :rtype: str
        """
        return self._secret

    @secret.setter
    def secret(self, secret):
        """Sets the secret of this XiaomiConfigRequest.


        :param secret: The secret of this XiaomiConfigRequest.
        :type secret: str
        """

        self._secret = secret
