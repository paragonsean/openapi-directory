# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.import_task import ImportTask
from openapi_server import util


class CreateImportResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None, import_task: ImportTask=None):
        """CreateImportResponse - a model defined in OpenAPI

        :param duration: The duration of this CreateImportResponse.
        :param import_task: The import_task of this CreateImportResponse.
        """
        self.openapi_types = {
            'duration': str,
            'import_task': ImportTask
        }

        self.attribute_map = {
            'duration': 'duration',
            'import_task': 'import_task'
        }

        self._duration = duration
        self._import_task = import_task

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateImportResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateImportResponse of this CreateImportResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this CreateImportResponse.

        Duration of the request in human-readable format

        :return: The duration of this CreateImportResponse.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this CreateImportResponse.

        Duration of the request in human-readable format

        :param duration: The duration of this CreateImportResponse.
        :type duration: str
        """
        if duration is None:
            raise ValueError("Invalid value for `duration`, must not be `None`")

        self._duration = duration

    @property
    def import_task(self):
        """Gets the import_task of this CreateImportResponse.


        :return: The import_task of this CreateImportResponse.
        :rtype: ImportTask
        """
        return self._import_task

    @import_task.setter
    def import_task(self, import_task):
        """Sets the import_task of this CreateImportResponse.


        :param import_task: The import_task of this CreateImportResponse.
        :type import_task: ImportTask
        """

        self._import_task = import_task
