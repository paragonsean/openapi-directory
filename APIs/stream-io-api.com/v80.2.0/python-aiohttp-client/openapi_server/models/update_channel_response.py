# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_member import ChannelMember
from openapi_server.models.channel_response import ChannelResponse
from openapi_server.models.message import Message
from openapi_server import util


class UpdateChannelResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel: ChannelResponse=None, duration: str=None, members: List[ChannelMember]=None, message: Message=None):
        """UpdateChannelResponse - a model defined in OpenAPI

        :param channel: The channel of this UpdateChannelResponse.
        :param duration: The duration of this UpdateChannelResponse.
        :param members: The members of this UpdateChannelResponse.
        :param message: The message of this UpdateChannelResponse.
        """
        self.openapi_types = {
            'channel': ChannelResponse,
            'duration': str,
            'members': List[ChannelMember],
            'message': Message
        }

        self.attribute_map = {
            'channel': 'channel',
            'duration': 'duration',
            'members': 'members',
            'message': 'message'
        }

        self._channel = channel
        self._duration = duration
        self._members = members
        self._message = message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateChannelResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateChannelResponse of this UpdateChannelResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel(self):
        """Gets the channel of this UpdateChannelResponse.


        :return: The channel of this UpdateChannelResponse.
        :rtype: ChannelResponse
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this UpdateChannelResponse.


        :param channel: The channel of this UpdateChannelResponse.
        :type channel: ChannelResponse
        """

        self._channel = channel

    @property
    def duration(self):
        """Gets the duration of this UpdateChannelResponse.

        Duration of the request in human-readable format

        :return: The duration of this UpdateChannelResponse.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this UpdateChannelResponse.

        Duration of the request in human-readable format

        :param duration: The duration of this UpdateChannelResponse.
        :type duration: str
        """
        if duration is None:
            raise ValueError("Invalid value for `duration`, must not be `None`")

        self._duration = duration

    @property
    def members(self):
        """Gets the members of this UpdateChannelResponse.


        :return: The members of this UpdateChannelResponse.
        :rtype: List[ChannelMember]
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this UpdateChannelResponse.


        :param members: The members of this UpdateChannelResponse.
        :type members: List[ChannelMember]
        """
        if members is None:
            raise ValueError("Invalid value for `members`, must not be `None`")

        self._members = members

    @property
    def message(self):
        """Gets the message of this UpdateChannelResponse.


        :return: The message of this UpdateChannelResponse.
        :rtype: Message
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this UpdateChannelResponse.


        :param message: The message of this UpdateChannelResponse.
        :type message: Message
        """

        self._message = message
