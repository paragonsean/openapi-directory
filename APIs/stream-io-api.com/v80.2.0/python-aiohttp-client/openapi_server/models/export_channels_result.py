# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExportChannelsResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path: str=None, s3_bucket_name: str=None, url: str=None):
        """ExportChannelsResult - a model defined in OpenAPI

        :param path: The path of this ExportChannelsResult.
        :param s3_bucket_name: The s3_bucket_name of this ExportChannelsResult.
        :param url: The url of this ExportChannelsResult.
        """
        self.openapi_types = {
            'path': str,
            's3_bucket_name': str,
            'url': str
        }

        self.attribute_map = {
            'path': 'path',
            's3_bucket_name': 's3_bucket_name',
            'url': 'url'
        }

        self._path = path
        self._s3_bucket_name = s3_bucket_name
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportChannelsResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportChannelsResult of this ExportChannelsResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path(self):
        """Gets the path of this ExportChannelsResult.

        S3 path of result

        :return: The path of this ExportChannelsResult.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ExportChannelsResult.

        S3 path of result

        :param path: The path of this ExportChannelsResult.
        :type path: str
        """

        self._path = path

    @property
    def s3_bucket_name(self):
        """Gets the s3_bucket_name of this ExportChannelsResult.

        S3 bucket name result

        :return: The s3_bucket_name of this ExportChannelsResult.
        :rtype: str
        """
        return self._s3_bucket_name

    @s3_bucket_name.setter
    def s3_bucket_name(self, s3_bucket_name):
        """Sets the s3_bucket_name of this ExportChannelsResult.

        S3 bucket name result

        :param s3_bucket_name: The s3_bucket_name of this ExportChannelsResult.
        :type s3_bucket_name: str
        """

        self._s3_bucket_name = s3_bucket_name

    @property
    def url(self):
        """Gets the url of this ExportChannelsResult.

        URL of result

        :return: The url of this ExportChannelsResult.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ExportChannelsResult.

        URL of result

        :param url: The url of this ExportChannelsResult.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")

        self._url = url
