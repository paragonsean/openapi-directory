# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.label_thresholds_request import LabelThresholdsRequest
from openapi_server import util


class ThresholdsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, explicit: LabelThresholdsRequest=None, spam: LabelThresholdsRequest=None, toxic: LabelThresholdsRequest=None):
        """ThresholdsRequest - a model defined in OpenAPI

        :param explicit: The explicit of this ThresholdsRequest.
        :param spam: The spam of this ThresholdsRequest.
        :param toxic: The toxic of this ThresholdsRequest.
        """
        self.openapi_types = {
            'explicit': LabelThresholdsRequest,
            'spam': LabelThresholdsRequest,
            'toxic': LabelThresholdsRequest
        }

        self.attribute_map = {
            'explicit': 'explicit',
            'spam': 'spam',
            'toxic': 'toxic'
        }

        self._explicit = explicit
        self._spam = spam
        self._toxic = toxic

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ThresholdsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ThresholdsRequest of this ThresholdsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def explicit(self):
        """Gets the explicit of this ThresholdsRequest.


        :return: The explicit of this ThresholdsRequest.
        :rtype: LabelThresholdsRequest
        """
        return self._explicit

    @explicit.setter
    def explicit(self, explicit):
        """Sets the explicit of this ThresholdsRequest.


        :param explicit: The explicit of this ThresholdsRequest.
        :type explicit: LabelThresholdsRequest
        """

        self._explicit = explicit

    @property
    def spam(self):
        """Gets the spam of this ThresholdsRequest.


        :return: The spam of this ThresholdsRequest.
        :rtype: LabelThresholdsRequest
        """
        return self._spam

    @spam.setter
    def spam(self, spam):
        """Sets the spam of this ThresholdsRequest.


        :param spam: The spam of this ThresholdsRequest.
        :type spam: LabelThresholdsRequest
        """

        self._spam = spam

    @property
    def toxic(self):
        """Gets the toxic of this ThresholdsRequest.


        :return: The toxic of this ThresholdsRequest.
        :rtype: LabelThresholdsRequest
        """
        return self._toxic

    @toxic.setter
    def toxic(self, toxic):
        """Sets the toxic of this ThresholdsRequest.


        :param toxic: The toxic of this ThresholdsRequest.
        :type toxic: LabelThresholdsRequest
        """

        self._toxic = toxic
