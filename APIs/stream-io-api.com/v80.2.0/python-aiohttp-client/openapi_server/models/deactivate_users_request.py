# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeactivateUsersRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_by_id: str=None, mark_messages_deleted: bool=None, user_ids: List[str]=None):
        """DeactivateUsersRequest - a model defined in OpenAPI

        :param created_by_id: The created_by_id of this DeactivateUsersRequest.
        :param mark_messages_deleted: The mark_messages_deleted of this DeactivateUsersRequest.
        :param user_ids: The user_ids of this DeactivateUsersRequest.
        """
        self.openapi_types = {
            'created_by_id': str,
            'mark_messages_deleted': bool,
            'user_ids': List[str]
        }

        self.attribute_map = {
            'created_by_id': 'created_by_id',
            'mark_messages_deleted': 'mark_messages_deleted',
            'user_ids': 'user_ids'
        }

        self._created_by_id = created_by_id
        self._mark_messages_deleted = mark_messages_deleted
        self._user_ids = user_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeactivateUsersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeactivateUsersRequest of this DeactivateUsersRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_by_id(self):
        """Gets the created_by_id of this DeactivateUsersRequest.

        ID of the user who deactivated the users

        :return: The created_by_id of this DeactivateUsersRequest.
        :rtype: str
        """
        return self._created_by_id

    @created_by_id.setter
    def created_by_id(self, created_by_id):
        """Sets the created_by_id of this DeactivateUsersRequest.

        ID of the user who deactivated the users

        :param created_by_id: The created_by_id of this DeactivateUsersRequest.
        :type created_by_id: str
        """

        self._created_by_id = created_by_id

    @property
    def mark_messages_deleted(self):
        """Gets the mark_messages_deleted of this DeactivateUsersRequest.

        Makes messages appear to be deleted

        :return: The mark_messages_deleted of this DeactivateUsersRequest.
        :rtype: bool
        """
        return self._mark_messages_deleted

    @mark_messages_deleted.setter
    def mark_messages_deleted(self, mark_messages_deleted):
        """Sets the mark_messages_deleted of this DeactivateUsersRequest.

        Makes messages appear to be deleted

        :param mark_messages_deleted: The mark_messages_deleted of this DeactivateUsersRequest.
        :type mark_messages_deleted: bool
        """

        self._mark_messages_deleted = mark_messages_deleted

    @property
    def user_ids(self):
        """Gets the user_ids of this DeactivateUsersRequest.

        User IDs to deactivate

        :return: The user_ids of this DeactivateUsersRequest.
        :rtype: List[str]
        """
        return self._user_ids

    @user_ids.setter
    def user_ids(self, user_ids):
        """Sets the user_ids of this DeactivateUsersRequest.

        User IDs to deactivate

        :param user_ids: The user_ids of this DeactivateUsersRequest.
        :type user_ids: List[str]
        """
        if user_ids is None:
            raise ValueError("Invalid value for `user_ids`, must not be `None`")

        self._user_ids = user_ids
