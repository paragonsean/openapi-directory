# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.campaign_updateable_fields_request import CampaignUpdateableFieldsRequest
from openapi_server import util


class UpdateCampaignRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, campaign: CampaignUpdateableFieldsRequest=None):
        """UpdateCampaignRequest - a model defined in OpenAPI

        :param campaign: The campaign of this UpdateCampaignRequest.
        """
        self.openapi_types = {
            'campaign': CampaignUpdateableFieldsRequest
        }

        self.attribute_map = {
            'campaign': 'campaign'
        }

        self._campaign = campaign

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCampaignRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateCampaignRequest of this UpdateCampaignRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaign(self):
        """Gets the campaign of this UpdateCampaignRequest.


        :return: The campaign of this UpdateCampaignRequest.
        :rtype: CampaignUpdateableFieldsRequest
        """
        return self._campaign

    @campaign.setter
    def campaign(self, campaign):
        """Sets the campaign of this UpdateCampaignRequest.


        :param campaign: The campaign of this UpdateCampaignRequest.
        :type campaign: CampaignUpdateableFieldsRequest
        """
        if campaign is None:
            raise ValueError("Invalid value for `campaign`, must not be `None`")

        self._campaign = campaign
