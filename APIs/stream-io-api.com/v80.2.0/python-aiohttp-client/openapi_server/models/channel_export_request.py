# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChannelExportRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cid: str=None, id: str=None, messages_since: datetime=None, messages_until: datetime=None, type: str=None):
        """ChannelExportRequest - a model defined in OpenAPI

        :param cid: The cid of this ChannelExportRequest.
        :param id: The id of this ChannelExportRequest.
        :param messages_since: The messages_since of this ChannelExportRequest.
        :param messages_until: The messages_until of this ChannelExportRequest.
        :param type: The type of this ChannelExportRequest.
        """
        self.openapi_types = {
            'cid': str,
            'id': str,
            'messages_since': datetime,
            'messages_until': datetime,
            'type': str
        }

        self.attribute_map = {
            'cid': 'cid',
            'id': 'id',
            'messages_since': 'messages_since',
            'messages_until': 'messages_until',
            'type': 'type'
        }

        self._cid = cid
        self._id = id
        self._messages_since = messages_since
        self._messages_until = messages_until
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelExportRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelExportRequest of this ChannelExportRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cid(self):
        """Gets the cid of this ChannelExportRequest.


        :return: The cid of this ChannelExportRequest.
        :rtype: str
        """
        return self._cid

    @cid.setter
    def cid(self, cid):
        """Sets the cid of this ChannelExportRequest.


        :param cid: The cid of this ChannelExportRequest.
        :type cid: str
        """

        self._cid = cid

    @property
    def id(self):
        """Gets the id of this ChannelExportRequest.

        Channel ID

        :return: The id of this ChannelExportRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChannelExportRequest.

        Channel ID

        :param id: The id of this ChannelExportRequest.
        :type id: str
        """

        self._id = id

    @property
    def messages_since(self):
        """Gets the messages_since of this ChannelExportRequest.

        Date to export messages since

        :return: The messages_since of this ChannelExportRequest.
        :rtype: datetime
        """
        return self._messages_since

    @messages_since.setter
    def messages_since(self, messages_since):
        """Sets the messages_since of this ChannelExportRequest.

        Date to export messages since

        :param messages_since: The messages_since of this ChannelExportRequest.
        :type messages_since: datetime
        """

        self._messages_since = messages_since

    @property
    def messages_until(self):
        """Gets the messages_until of this ChannelExportRequest.

        Date to export messages until

        :return: The messages_until of this ChannelExportRequest.
        :rtype: datetime
        """
        return self._messages_until

    @messages_until.setter
    def messages_until(self, messages_until):
        """Sets the messages_until of this ChannelExportRequest.

        Date to export messages until

        :param messages_until: The messages_until of this ChannelExportRequest.
        :type messages_until: datetime
        """

        self._messages_until = messages_until

    @property
    def type(self):
        """Gets the type of this ChannelExportRequest.

        Channel type

        :return: The type of this ChannelExportRequest.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ChannelExportRequest.

        Channel type

        :param type: The type of this ChannelExportRequest.
        :type type: str
        """

        self._type = type
