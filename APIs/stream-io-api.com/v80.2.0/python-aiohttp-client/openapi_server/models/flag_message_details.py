# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FlagMessageDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pin_changed: bool=None, should_enrich: bool=None, skip_push: bool=None, updated_by_id: str=None):
        """FlagMessageDetails - a model defined in OpenAPI

        :param pin_changed: The pin_changed of this FlagMessageDetails.
        :param should_enrich: The should_enrich of this FlagMessageDetails.
        :param skip_push: The skip_push of this FlagMessageDetails.
        :param updated_by_id: The updated_by_id of this FlagMessageDetails.
        """
        self.openapi_types = {
            'pin_changed': bool,
            'should_enrich': bool,
            'skip_push': bool,
            'updated_by_id': str
        }

        self.attribute_map = {
            'pin_changed': 'pin_changed',
            'should_enrich': 'should_enrich',
            'skip_push': 'skip_push',
            'updated_by_id': 'updated_by_id'
        }

        self._pin_changed = pin_changed
        self._should_enrich = should_enrich
        self._skip_push = skip_push
        self._updated_by_id = updated_by_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FlagMessageDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FlagMessageDetails of this FlagMessageDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pin_changed(self):
        """Gets the pin_changed of this FlagMessageDetails.


        :return: The pin_changed of this FlagMessageDetails.
        :rtype: bool
        """
        return self._pin_changed

    @pin_changed.setter
    def pin_changed(self, pin_changed):
        """Sets the pin_changed of this FlagMessageDetails.


        :param pin_changed: The pin_changed of this FlagMessageDetails.
        :type pin_changed: bool
        """

        self._pin_changed = pin_changed

    @property
    def should_enrich(self):
        """Gets the should_enrich of this FlagMessageDetails.


        :return: The should_enrich of this FlagMessageDetails.
        :rtype: bool
        """
        return self._should_enrich

    @should_enrich.setter
    def should_enrich(self, should_enrich):
        """Sets the should_enrich of this FlagMessageDetails.


        :param should_enrich: The should_enrich of this FlagMessageDetails.
        :type should_enrich: bool
        """

        self._should_enrich = should_enrich

    @property
    def skip_push(self):
        """Gets the skip_push of this FlagMessageDetails.


        :return: The skip_push of this FlagMessageDetails.
        :rtype: bool
        """
        return self._skip_push

    @skip_push.setter
    def skip_push(self, skip_push):
        """Sets the skip_push of this FlagMessageDetails.


        :param skip_push: The skip_push of this FlagMessageDetails.
        :type skip_push: bool
        """

        self._skip_push = skip_push

    @property
    def updated_by_id(self):
        """Gets the updated_by_id of this FlagMessageDetails.


        :return: The updated_by_id of this FlagMessageDetails.
        :rtype: str
        """
        return self._updated_by_id

    @updated_by_id.setter
    def updated_by_id(self, updated_by_id):
        """Sets the updated_by_id of this FlagMessageDetails.


        :param updated_by_id: The updated_by_id of this FlagMessageDetails.
        :type updated_by_id: str
        """

        self._updated_by_id = updated_by_id
