# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_object_request import UserObjectRequest
from openapi_server import util


class MessageActionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, form_data: Dict[str, str]=None, user: UserObjectRequest=None, user_id: str=None):
        """MessageActionRequest - a model defined in OpenAPI

        :param id: The id of this MessageActionRequest.
        :param form_data: The form_data of this MessageActionRequest.
        :param user: The user of this MessageActionRequest.
        :param user_id: The user_id of this MessageActionRequest.
        """
        self.openapi_types = {
            'id': str,
            'form_data': Dict[str, str],
            'user': UserObjectRequest,
            'user_id': str
        }

        self.attribute_map = {
            'id': 'ID',
            'form_data': 'form_data',
            'user': 'user',
            'user_id': 'user_id'
        }

        self._id = id
        self._form_data = form_data
        self._user = user
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessageActionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MessageActionRequest of this MessageActionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this MessageActionRequest.


        :return: The id of this MessageActionRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MessageActionRequest.


        :param id: The id of this MessageActionRequest.
        :type id: str
        """

        self._id = id

    @property
    def form_data(self):
        """Gets the form_data of this MessageActionRequest.

        Data to execute command with

        :return: The form_data of this MessageActionRequest.
        :rtype: Dict[str, str]
        """
        return self._form_data

    @form_data.setter
    def form_data(self, form_data):
        """Sets the form_data of this MessageActionRequest.

        Data to execute command with

        :param form_data: The form_data of this MessageActionRequest.
        :type form_data: Dict[str, str]
        """
        if form_data is None:
            raise ValueError("Invalid value for `form_data`, must not be `None`")

        self._form_data = form_data

    @property
    def user(self):
        """Gets the user of this MessageActionRequest.


        :return: The user of this MessageActionRequest.
        :rtype: UserObjectRequest
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this MessageActionRequest.


        :param user: The user of this MessageActionRequest.
        :type user: UserObjectRequest
        """

        self._user = user

    @property
    def user_id(self):
        """Gets the user_id of this MessageActionRequest.


        :return: The user_id of this MessageActionRequest.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this MessageActionRequest.


        :param user_id: The user_id of this MessageActionRequest.
        :type user_id: str
        """

        self._user_id = user_id
