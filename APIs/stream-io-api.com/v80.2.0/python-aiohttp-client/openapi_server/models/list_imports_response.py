# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.import_task import ImportTask
from openapi_server import util


class ListImportsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None, import_tasks: List[ImportTask]=None):
        """ListImportsResponse - a model defined in OpenAPI

        :param duration: The duration of this ListImportsResponse.
        :param import_tasks: The import_tasks of this ListImportsResponse.
        """
        self.openapi_types = {
            'duration': str,
            'import_tasks': List[ImportTask]
        }

        self.attribute_map = {
            'duration': 'duration',
            'import_tasks': 'import_tasks'
        }

        self._duration = duration
        self._import_tasks = import_tasks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListImportsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListImportsResponse of this ListImportsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this ListImportsResponse.

        Duration of the request in human-readable format

        :return: The duration of this ListImportsResponse.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ListImportsResponse.

        Duration of the request in human-readable format

        :param duration: The duration of this ListImportsResponse.
        :type duration: str
        """
        if duration is None:
            raise ValueError("Invalid value for `duration`, must not be `None`")

        self._duration = duration

    @property
    def import_tasks(self):
        """Gets the import_tasks of this ListImportsResponse.


        :return: The import_tasks of this ListImportsResponse.
        :rtype: List[ImportTask]
        """
        return self._import_tasks

    @import_tasks.setter
    def import_tasks(self, import_tasks):
        """Sets the import_tasks of this ListImportsResponse.


        :param import_tasks: The import_tasks of this ListImportsResponse.
        :type import_tasks: List[ImportTask]
        """
        if import_tasks is None:
            raise ValueError("Invalid value for `import_tasks`, must not be `None`")

        self._import_tasks = import_tasks
