# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.block_list import BlockList
from openapi_server import util


class ListBlockListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blocklists: List[BlockList]=None, duration: str=None):
        """ListBlockListResponse - a model defined in OpenAPI

        :param blocklists: The blocklists of this ListBlockListResponse.
        :param duration: The duration of this ListBlockListResponse.
        """
        self.openapi_types = {
            'blocklists': List[BlockList],
            'duration': str
        }

        self.attribute_map = {
            'blocklists': 'blocklists',
            'duration': 'duration'
        }

        self._blocklists = blocklists
        self._duration = duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListBlockListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListBlockListResponse of this ListBlockListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blocklists(self):
        """Gets the blocklists of this ListBlockListResponse.


        :return: The blocklists of this ListBlockListResponse.
        :rtype: List[BlockList]
        """
        return self._blocklists

    @blocklists.setter
    def blocklists(self, blocklists):
        """Sets the blocklists of this ListBlockListResponse.


        :param blocklists: The blocklists of this ListBlockListResponse.
        :type blocklists: List[BlockList]
        """
        if blocklists is None:
            raise ValueError("Invalid value for `blocklists`, must not be `None`")

        self._blocklists = blocklists

    @property
    def duration(self):
        """Gets the duration of this ListBlockListResponse.

        Duration of the request in human-readable format

        :return: The duration of this ListBlockListResponse.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ListBlockListResponse.

        Duration of the request in human-readable format

        :param duration: The duration of this ListBlockListResponse.
        :type duration: str
        """
        if duration is None:
            raise ValueError("Invalid value for `duration`, must not be `None`")

        self._duration = duration
