# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message_flag import MessageFlag
from openapi_server import util


class QueryMessageFlagsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None, flags: List[MessageFlag]=None):
        """QueryMessageFlagsResponse - a model defined in OpenAPI

        :param duration: The duration of this QueryMessageFlagsResponse.
        :param flags: The flags of this QueryMessageFlagsResponse.
        """
        self.openapi_types = {
            'duration': str,
            'flags': List[MessageFlag]
        }

        self.attribute_map = {
            'duration': 'duration',
            'flags': 'flags'
        }

        self._duration = duration
        self._flags = flags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryMessageFlagsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryMessageFlagsResponse of this QueryMessageFlagsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this QueryMessageFlagsResponse.

        Duration of the request in human-readable format

        :return: The duration of this QueryMessageFlagsResponse.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this QueryMessageFlagsResponse.

        Duration of the request in human-readable format

        :param duration: The duration of this QueryMessageFlagsResponse.
        :type duration: str
        """
        if duration is None:
            raise ValueError("Invalid value for `duration`, must not be `None`")

        self._duration = duration

    @property
    def flags(self):
        """Gets the flags of this QueryMessageFlagsResponse.


        :return: The flags of this QueryMessageFlagsResponse.
        :rtype: List[MessageFlag]
        """
        return self._flags

    @flags.setter
    def flags(self, flags):
        """Sets the flags of this QueryMessageFlagsResponse.


        :param flags: The flags of this QueryMessageFlagsResponse.
        :type flags: List[MessageFlag]
        """
        if flags is None:
            raise ValueError("Invalid value for `flags`, must not be `None`")

        self._flags = flags
