# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message import Message
from openapi_server.models.reaction import Reaction
from openapi_server.models.user_object import UserObject
from openapi_server import util


class ExportUserResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None, messages: List[Message]=None, reactions: List[Reaction]=None, user: UserObject=None):
        """ExportUserResponse - a model defined in OpenAPI

        :param duration: The duration of this ExportUserResponse.
        :param messages: The messages of this ExportUserResponse.
        :param reactions: The reactions of this ExportUserResponse.
        :param user: The user of this ExportUserResponse.
        """
        self.openapi_types = {
            'duration': str,
            'messages': List[Message],
            'reactions': List[Reaction],
            'user': UserObject
        }

        self.attribute_map = {
            'duration': 'duration',
            'messages': 'messages',
            'reactions': 'reactions',
            'user': 'user'
        }

        self._duration = duration
        self._messages = messages
        self._reactions = reactions
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportUserResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportUserResponse of this ExportUserResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this ExportUserResponse.

        Duration of the request in human-readable format

        :return: The duration of this ExportUserResponse.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ExportUserResponse.

        Duration of the request in human-readable format

        :param duration: The duration of this ExportUserResponse.
        :type duration: str
        """
        if duration is None:
            raise ValueError("Invalid value for `duration`, must not be `None`")

        self._duration = duration

    @property
    def messages(self):
        """Gets the messages of this ExportUserResponse.


        :return: The messages of this ExportUserResponse.
        :rtype: List[Message]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this ExportUserResponse.


        :param messages: The messages of this ExportUserResponse.
        :type messages: List[Message]
        """

        self._messages = messages

    @property
    def reactions(self):
        """Gets the reactions of this ExportUserResponse.


        :return: The reactions of this ExportUserResponse.
        :rtype: List[Reaction]
        """
        return self._reactions

    @reactions.setter
    def reactions(self, reactions):
        """Sets the reactions of this ExportUserResponse.


        :param reactions: The reactions of this ExportUserResponse.
        :type reactions: List[Reaction]
        """

        self._reactions = reactions

    @property
    def user(self):
        """Gets the user of this ExportUserResponse.


        :return: The user of this ExportUserResponse.
        :rtype: UserObject
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this ExportUserResponse.


        :param user: The user of this ExportUserResponse.
        :type user: UserObject
        """

        self._user = user
