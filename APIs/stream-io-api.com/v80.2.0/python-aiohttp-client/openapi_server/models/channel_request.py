# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.channel_config_request import ChannelConfigRequest
from openapi_server.models.channel_member_request import ChannelMemberRequest
from openapi_server.models.user_object_request import UserObjectRequest
from openapi_server import util


class ChannelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_translation_enabled: bool=None, auto_translation_language: str=None, config_overrides: ChannelConfigRequest=None, created_by: UserObjectRequest=None, disabled: bool=None, frozen: bool=None, members: List[ChannelMemberRequest]=None, own_capabilities: List[int]=None, team: str=None, truncated_at: List[int]=None, truncated_by: List[int]=None, truncated_by_id: str=None):
        """ChannelRequest - a model defined in OpenAPI

        :param auto_translation_enabled: The auto_translation_enabled of this ChannelRequest.
        :param auto_translation_language: The auto_translation_language of this ChannelRequest.
        :param config_overrides: The config_overrides of this ChannelRequest.
        :param created_by: The created_by of this ChannelRequest.
        :param disabled: The disabled of this ChannelRequest.
        :param frozen: The frozen of this ChannelRequest.
        :param members: The members of this ChannelRequest.
        :param own_capabilities: The own_capabilities of this ChannelRequest.
        :param team: The team of this ChannelRequest.
        :param truncated_at: The truncated_at of this ChannelRequest.
        :param truncated_by: The truncated_by of this ChannelRequest.
        :param truncated_by_id: The truncated_by_id of this ChannelRequest.
        """
        self.openapi_types = {
            'auto_translation_enabled': bool,
            'auto_translation_language': str,
            'config_overrides': ChannelConfigRequest,
            'created_by': UserObjectRequest,
            'disabled': bool,
            'frozen': bool,
            'members': List[ChannelMemberRequest],
            'own_capabilities': List[int],
            'team': str,
            'truncated_at': List[int],
            'truncated_by': List[int],
            'truncated_by_id': str
        }

        self.attribute_map = {
            'auto_translation_enabled': 'auto_translation_enabled',
            'auto_translation_language': 'auto_translation_language',
            'config_overrides': 'config_overrides',
            'created_by': 'created_by',
            'disabled': 'disabled',
            'frozen': 'frozen',
            'members': 'members',
            'own_capabilities': 'own_capabilities',
            'team': 'team',
            'truncated_at': 'truncated_at',
            'truncated_by': 'truncated_by',
            'truncated_by_id': 'truncated_by_id'
        }

        self._auto_translation_enabled = auto_translation_enabled
        self._auto_translation_language = auto_translation_language
        self._config_overrides = config_overrides
        self._created_by = created_by
        self._disabled = disabled
        self._frozen = frozen
        self._members = members
        self._own_capabilities = own_capabilities
        self._team = team
        self._truncated_at = truncated_at
        self._truncated_by = truncated_by
        self._truncated_by_id = truncated_by_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelRequest of this ChannelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_translation_enabled(self):
        """Gets the auto_translation_enabled of this ChannelRequest.

        Enable or disable auto translation

        :return: The auto_translation_enabled of this ChannelRequest.
        :rtype: bool
        """
        return self._auto_translation_enabled

    @auto_translation_enabled.setter
    def auto_translation_enabled(self, auto_translation_enabled):
        """Sets the auto_translation_enabled of this ChannelRequest.

        Enable or disable auto translation

        :param auto_translation_enabled: The auto_translation_enabled of this ChannelRequest.
        :type auto_translation_enabled: bool
        """

        self._auto_translation_enabled = auto_translation_enabled

    @property
    def auto_translation_language(self):
        """Gets the auto_translation_language of this ChannelRequest.

        Switch auto translation language

        :return: The auto_translation_language of this ChannelRequest.
        :rtype: str
        """
        return self._auto_translation_language

    @auto_translation_language.setter
    def auto_translation_language(self, auto_translation_language):
        """Sets the auto_translation_language of this ChannelRequest.

        Switch auto translation language

        :param auto_translation_language: The auto_translation_language of this ChannelRequest.
        :type auto_translation_language: str
        """

        self._auto_translation_language = auto_translation_language

    @property
    def config_overrides(self):
        """Gets the config_overrides of this ChannelRequest.


        :return: The config_overrides of this ChannelRequest.
        :rtype: ChannelConfigRequest
        """
        return self._config_overrides

    @config_overrides.setter
    def config_overrides(self, config_overrides):
        """Sets the config_overrides of this ChannelRequest.


        :param config_overrides: The config_overrides of this ChannelRequest.
        :type config_overrides: ChannelConfigRequest
        """

        self._config_overrides = config_overrides

    @property
    def created_by(self):
        """Gets the created_by of this ChannelRequest.


        :return: The created_by of this ChannelRequest.
        :rtype: UserObjectRequest
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this ChannelRequest.


        :param created_by: The created_by of this ChannelRequest.
        :type created_by: UserObjectRequest
        """

        self._created_by = created_by

    @property
    def disabled(self):
        """Gets the disabled of this ChannelRequest.


        :return: The disabled of this ChannelRequest.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this ChannelRequest.


        :param disabled: The disabled of this ChannelRequest.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def frozen(self):
        """Gets the frozen of this ChannelRequest.

        Freeze or unfreeze the channel

        :return: The frozen of this ChannelRequest.
        :rtype: bool
        """
        return self._frozen

    @frozen.setter
    def frozen(self, frozen):
        """Sets the frozen of this ChannelRequest.

        Freeze or unfreeze the channel

        :param frozen: The frozen of this ChannelRequest.
        :type frozen: bool
        """

        self._frozen = frozen

    @property
    def members(self):
        """Gets the members of this ChannelRequest.


        :return: The members of this ChannelRequest.
        :rtype: List[ChannelMemberRequest]
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this ChannelRequest.


        :param members: The members of this ChannelRequest.
        :type members: List[ChannelMemberRequest]
        """

        self._members = members

    @property
    def own_capabilities(self):
        """Gets the own_capabilities of this ChannelRequest.


        :return: The own_capabilities of this ChannelRequest.
        :rtype: List[int]
        """
        return self._own_capabilities

    @own_capabilities.setter
    def own_capabilities(self, own_capabilities):
        """Sets the own_capabilities of this ChannelRequest.


        :param own_capabilities: The own_capabilities of this ChannelRequest.
        :type own_capabilities: List[int]
        """

        self._own_capabilities = own_capabilities

    @property
    def team(self):
        """Gets the team of this ChannelRequest.

        Team the channel belongs to (if multi-tenant mode is enabled)

        :return: The team of this ChannelRequest.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this ChannelRequest.

        Team the channel belongs to (if multi-tenant mode is enabled)

        :param team: The team of this ChannelRequest.
        :type team: str
        """

        self._team = team

    @property
    def truncated_at(self):
        """Gets the truncated_at of this ChannelRequest.


        :return: The truncated_at of this ChannelRequest.
        :rtype: List[int]
        """
        return self._truncated_at

    @truncated_at.setter
    def truncated_at(self, truncated_at):
        """Sets the truncated_at of this ChannelRequest.


        :param truncated_at: The truncated_at of this ChannelRequest.
        :type truncated_at: List[int]
        """

        self._truncated_at = truncated_at

    @property
    def truncated_by(self):
        """Gets the truncated_by of this ChannelRequest.


        :return: The truncated_by of this ChannelRequest.
        :rtype: List[int]
        """
        return self._truncated_by

    @truncated_by.setter
    def truncated_by(self, truncated_by):
        """Sets the truncated_by of this ChannelRequest.


        :param truncated_by: The truncated_by of this ChannelRequest.
        :type truncated_by: List[int]
        """

        self._truncated_by = truncated_by

    @property
    def truncated_by_id(self):
        """Gets the truncated_by_id of this ChannelRequest.


        :return: The truncated_by_id of this ChannelRequest.
        :rtype: str
        """
        return self._truncated_by_id

    @truncated_by_id.setter
    def truncated_by_id(self, truncated_by_id):
        """Sets the truncated_by_id of this ChannelRequest.


        :param truncated_by_id: The truncated_by_id of this ChannelRequest.
        :type truncated_by_id: str
        """

        self._truncated_by_id = truncated_by_id
