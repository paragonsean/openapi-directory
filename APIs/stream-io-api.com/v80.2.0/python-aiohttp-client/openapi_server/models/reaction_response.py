# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.message import Message
from openapi_server.models.reaction import Reaction
from openapi_server import util


class ReactionResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None, message: Message=None, reaction: Reaction=None):
        """ReactionResponse - a model defined in OpenAPI

        :param duration: The duration of this ReactionResponse.
        :param message: The message of this ReactionResponse.
        :param reaction: The reaction of this ReactionResponse.
        """
        self.openapi_types = {
            'duration': str,
            'message': Message,
            'reaction': Reaction
        }

        self.attribute_map = {
            'duration': 'duration',
            'message': 'message',
            'reaction': 'reaction'
        }

        self._duration = duration
        self._message = message
        self._reaction = reaction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReactionResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReactionResponse of this ReactionResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this ReactionResponse.

        Duration of the request in human-readable format

        :return: The duration of this ReactionResponse.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ReactionResponse.

        Duration of the request in human-readable format

        :param duration: The duration of this ReactionResponse.
        :type duration: str
        """
        if duration is None:
            raise ValueError("Invalid value for `duration`, must not be `None`")

        self._duration = duration

    @property
    def message(self):
        """Gets the message of this ReactionResponse.


        :return: The message of this ReactionResponse.
        :rtype: Message
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ReactionResponse.


        :param message: The message of this ReactionResponse.
        :type message: Message
        """

        self._message = message

    @property
    def reaction(self):
        """Gets the reaction of this ReactionResponse.


        :return: The reaction of this ReactionResponse.
        :rtype: Reaction
        """
        return self._reaction

    @reaction.setter
    def reaction(self, reaction):
        """Sets the reaction of this ReactionResponse.


        :param reaction: The reaction of this ReactionResponse.
        :type reaction: Reaction
        """

        self._reaction = reaction
