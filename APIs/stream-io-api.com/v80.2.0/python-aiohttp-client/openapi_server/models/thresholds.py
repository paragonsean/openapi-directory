# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.label_thresholds import LabelThresholds
from openapi_server import util


class Thresholds(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, explicit: LabelThresholds=None, spam: LabelThresholds=None, toxic: LabelThresholds=None):
        """Thresholds - a model defined in OpenAPI

        :param explicit: The explicit of this Thresholds.
        :param spam: The spam of this Thresholds.
        :param toxic: The toxic of this Thresholds.
        """
        self.openapi_types = {
            'explicit': LabelThresholds,
            'spam': LabelThresholds,
            'toxic': LabelThresholds
        }

        self.attribute_map = {
            'explicit': 'explicit',
            'spam': 'spam',
            'toxic': 'toxic'
        }

        self._explicit = explicit
        self._spam = spam
        self._toxic = toxic

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Thresholds':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Thresholds of this Thresholds.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def explicit(self):
        """Gets the explicit of this Thresholds.


        :return: The explicit of this Thresholds.
        :rtype: LabelThresholds
        """
        return self._explicit

    @explicit.setter
    def explicit(self, explicit):
        """Sets the explicit of this Thresholds.


        :param explicit: The explicit of this Thresholds.
        :type explicit: LabelThresholds
        """

        self._explicit = explicit

    @property
    def spam(self):
        """Gets the spam of this Thresholds.


        :return: The spam of this Thresholds.
        :rtype: LabelThresholds
        """
        return self._spam

    @spam.setter
    def spam(self, spam):
        """Sets the spam of this Thresholds.


        :param spam: The spam of this Thresholds.
        :type spam: LabelThresholds
        """

        self._spam = spam

    @property
    def toxic(self):
        """Gets the toxic of this Thresholds.


        :return: The toxic of this Thresholds.
        :rtype: LabelThresholds
        """
        return self._toxic

    @toxic.setter
    def toxic(self, toxic):
        """Sets the toxic of this Thresholds.


        :param toxic: The toxic of this Thresholds.
        :type toxic: LabelThresholds
        """

        self._toxic = toxic
