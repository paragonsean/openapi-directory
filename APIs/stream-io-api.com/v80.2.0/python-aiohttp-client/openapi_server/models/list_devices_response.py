# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device import Device
from openapi_server import util


class ListDevicesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, devices: List[Device]=None, duration: str=None):
        """ListDevicesResponse - a model defined in OpenAPI

        :param devices: The devices of this ListDevicesResponse.
        :param duration: The duration of this ListDevicesResponse.
        """
        self.openapi_types = {
            'devices': List[Device],
            'duration': str
        }

        self.attribute_map = {
            'devices': 'devices',
            'duration': 'duration'
        }

        self._devices = devices
        self._duration = duration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDevicesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDevicesResponse of this ListDevicesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def devices(self):
        """Gets the devices of this ListDevicesResponse.

        List of devices

        :return: The devices of this ListDevicesResponse.
        :rtype: List[Device]
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """Sets the devices of this ListDevicesResponse.

        List of devices

        :param devices: The devices of this ListDevicesResponse.
        :type devices: List[Device]
        """
        if devices is None:
            raise ValueError("Invalid value for `devices`, must not be `None`")

        self._devices = devices

    @property
    def duration(self):
        """Gets the duration of this ListDevicesResponse.


        :return: The duration of this ListDevicesResponse.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this ListDevicesResponse.


        :param duration: The duration of this ListDevicesResponse.
        :type duration: str
        """
        if duration is None:
            raise ValueError("Invalid value for `duration`, must not be `None`")

        self._duration = duration
