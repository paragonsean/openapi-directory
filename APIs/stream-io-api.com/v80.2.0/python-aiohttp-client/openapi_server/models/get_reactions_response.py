# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.reaction import Reaction
from openapi_server import util


class GetReactionsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None, reactions: List[Reaction]=None):
        """GetReactionsResponse - a model defined in OpenAPI

        :param duration: The duration of this GetReactionsResponse.
        :param reactions: The reactions of this GetReactionsResponse.
        """
        self.openapi_types = {
            'duration': str,
            'reactions': List[Reaction]
        }

        self.attribute_map = {
            'duration': 'duration',
            'reactions': 'reactions'
        }

        self._duration = duration
        self._reactions = reactions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetReactionsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetReactionsResponse of this GetReactionsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this GetReactionsResponse.


        :return: The duration of this GetReactionsResponse.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this GetReactionsResponse.


        :param duration: The duration of this GetReactionsResponse.
        :type duration: str
        """
        if duration is None:
            raise ValueError("Invalid value for `duration`, must not be `None`")

        self._duration = duration

    @property
    def reactions(self):
        """Gets the reactions of this GetReactionsResponse.

        List of reactions

        :return: The reactions of this GetReactionsResponse.
        :rtype: List[Reaction]
        """
        return self._reactions

    @reactions.setter
    def reactions(self, reactions):
        """Sets the reactions of this GetReactionsResponse.

        List of reactions

        :param reactions: The reactions of this GetReactionsResponse.
        :type reactions: List[Reaction]
        """
        if reactions is None:
            raise ValueError("Invalid value for `reactions`, must not be `None`")

        self._reactions = reactions
