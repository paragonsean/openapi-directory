# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileUploadConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_file_extensions: List[str]=None, allowed_mime_types: List[str]=None, blocked_file_extensions: List[str]=None, blocked_mime_types: List[str]=None):
        """FileUploadConfigRequest - a model defined in OpenAPI

        :param allowed_file_extensions: The allowed_file_extensions of this FileUploadConfigRequest.
        :param allowed_mime_types: The allowed_mime_types of this FileUploadConfigRequest.
        :param blocked_file_extensions: The blocked_file_extensions of this FileUploadConfigRequest.
        :param blocked_mime_types: The blocked_mime_types of this FileUploadConfigRequest.
        """
        self.openapi_types = {
            'allowed_file_extensions': List[str],
            'allowed_mime_types': List[str],
            'blocked_file_extensions': List[str],
            'blocked_mime_types': List[str]
        }

        self.attribute_map = {
            'allowed_file_extensions': 'allowed_file_extensions',
            'allowed_mime_types': 'allowed_mime_types',
            'blocked_file_extensions': 'blocked_file_extensions',
            'blocked_mime_types': 'blocked_mime_types'
        }

        self._allowed_file_extensions = allowed_file_extensions
        self._allowed_mime_types = allowed_mime_types
        self._blocked_file_extensions = blocked_file_extensions
        self._blocked_mime_types = blocked_mime_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileUploadConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileUploadConfigRequest of this FileUploadConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_file_extensions(self):
        """Gets the allowed_file_extensions of this FileUploadConfigRequest.


        :return: The allowed_file_extensions of this FileUploadConfigRequest.
        :rtype: List[str]
        """
        return self._allowed_file_extensions

    @allowed_file_extensions.setter
    def allowed_file_extensions(self, allowed_file_extensions):
        """Sets the allowed_file_extensions of this FileUploadConfigRequest.


        :param allowed_file_extensions: The allowed_file_extensions of this FileUploadConfigRequest.
        :type allowed_file_extensions: List[str]
        """

        self._allowed_file_extensions = allowed_file_extensions

    @property
    def allowed_mime_types(self):
        """Gets the allowed_mime_types of this FileUploadConfigRequest.


        :return: The allowed_mime_types of this FileUploadConfigRequest.
        :rtype: List[str]
        """
        return self._allowed_mime_types

    @allowed_mime_types.setter
    def allowed_mime_types(self, allowed_mime_types):
        """Sets the allowed_mime_types of this FileUploadConfigRequest.


        :param allowed_mime_types: The allowed_mime_types of this FileUploadConfigRequest.
        :type allowed_mime_types: List[str]
        """

        self._allowed_mime_types = allowed_mime_types

    @property
    def blocked_file_extensions(self):
        """Gets the blocked_file_extensions of this FileUploadConfigRequest.


        :return: The blocked_file_extensions of this FileUploadConfigRequest.
        :rtype: List[str]
        """
        return self._blocked_file_extensions

    @blocked_file_extensions.setter
    def blocked_file_extensions(self, blocked_file_extensions):
        """Sets the blocked_file_extensions of this FileUploadConfigRequest.


        :param blocked_file_extensions: The blocked_file_extensions of this FileUploadConfigRequest.
        :type blocked_file_extensions: List[str]
        """

        self._blocked_file_extensions = blocked_file_extensions

    @property
    def blocked_mime_types(self):
        """Gets the blocked_mime_types of this FileUploadConfigRequest.


        :return: The blocked_mime_types of this FileUploadConfigRequest.
        :rtype: List[str]
        """
        return self._blocked_mime_types

    @blocked_mime_types.setter
    def blocked_mime_types(self, blocked_mime_types):
        """Sets the blocked_mime_types of this FileUploadConfigRequest.


        :param blocked_mime_types: The blocked_mime_types of this FileUploadConfigRequest.
        :type blocked_mime_types: List[str]
        """

        self._blocked_mime_types = blocked_mime_types
