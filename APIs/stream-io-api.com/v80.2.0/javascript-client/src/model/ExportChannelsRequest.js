/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelExportRequest from './ChannelExportRequest';

/**
 * The ExportChannelsRequest model module.
 * @module model/ExportChannelsRequest
 * @version v80.2.0
 */
class ExportChannelsRequest {
    /**
     * Constructs a new <code>ExportChannelsRequest</code>.
     * @alias module:model/ExportChannelsRequest
     */
    constructor() { 
        
        ExportChannelsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExportChannelsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportChannelsRequest} obj Optional instance to populate.
     * @return {module:model/ExportChannelsRequest} The populated <code>ExportChannelsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportChannelsRequest();

            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], [ChannelExportRequest]);
            }
            if (data.hasOwnProperty('clear_deleted_message_text')) {
                obj['clear_deleted_message_text'] = ApiClient.convertToType(data['clear_deleted_message_text'], 'Boolean');
            }
            if (data.hasOwnProperty('export_users')) {
                obj['export_users'] = ApiClient.convertToType(data['export_users'], 'Boolean');
            }
            if (data.hasOwnProperty('include_truncated_messages')) {
                obj['include_truncated_messages'] = ApiClient.convertToType(data['include_truncated_messages'], 'Boolean');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportChannelsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportChannelsRequest</code>.
     */
    static validateJSON(data) {
        if (data['channels']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['channels'])) {
                throw new Error("Expected the field `channels` to be an array in the JSON data but got " + data['channels']);
            }
            // validate the optional field `channels` (array)
            for (const item of data['channels']) {
                ChannelExportRequest.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * Export options for channels
 * @member {Array.<module:model/ChannelExportRequest>} channels
 */
ExportChannelsRequest.prototype['channels'] = undefined;

/**
 * Set if deleted message text should be cleared
 * @member {Boolean} clear_deleted_message_text
 */
ExportChannelsRequest.prototype['clear_deleted_message_text'] = undefined;

/**
 * @member {Boolean} export_users
 */
ExportChannelsRequest.prototype['export_users'] = undefined;

/**
 * Set if you want to include truncated messages
 * @member {Boolean} include_truncated_messages
 */
ExportChannelsRequest.prototype['include_truncated_messages'] = undefined;

/**
 * @member {String} version
 */
ExportChannelsRequest.prototype['version'] = undefined;






export default ExportChannelsRequest;

