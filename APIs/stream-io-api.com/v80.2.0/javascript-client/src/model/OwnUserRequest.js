/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelMuteRequest from './ChannelMuteRequest';
import DeviceRequest from './DeviceRequest';
import PushNotificationSettingsRequest from './PushNotificationSettingsRequest';
import UserMuteRequest from './UserMuteRequest';

/**
 * The OwnUserRequest model module.
 * @module model/OwnUserRequest
 * @version v80.2.0
 */
class OwnUserRequest {
    /**
     * Constructs a new <code>OwnUserRequest</code>.
     * @alias module:model/OwnUserRequest
     * @extends Object
     */
    constructor() { 
        
        OwnUserRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OwnUserRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OwnUserRequest} obj Optional instance to populate.
     * @return {module:model/OwnUserRequest} The populated <code>OwnUserRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OwnUserRequest();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('banned')) {
                obj['banned'] = ApiClient.convertToType(data['banned'], 'Boolean');
            }
            if (data.hasOwnProperty('channel_mutes')) {
                obj['channel_mutes'] = ApiClient.convertToType(data['channel_mutes'], [ChannelMuteRequest]);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('deactivated_at')) {
                obj['deactivated_at'] = ApiClient.convertToType(data['deactivated_at'], 'Date');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'Date');
            }
            if (data.hasOwnProperty('devices')) {
                obj['devices'] = ApiClient.convertToType(data['devices'], [DeviceRequest]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('invisible')) {
                obj['invisible'] = ApiClient.convertToType(data['invisible'], 'Boolean');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('last_active')) {
                obj['last_active'] = ApiClient.convertToType(data['last_active'], 'Date');
            }
            if (data.hasOwnProperty('latest_hidden_channels')) {
                obj['latest_hidden_channels'] = ApiClient.convertToType(data['latest_hidden_channels'], ['String']);
            }
            if (data.hasOwnProperty('mutes')) {
                obj['mutes'] = ApiClient.convertToType(data['mutes'], [UserMuteRequest]);
            }
            if (data.hasOwnProperty('online')) {
                obj['online'] = ApiClient.convertToType(data['online'], 'Boolean');
            }
            if (data.hasOwnProperty('push_notifications')) {
                obj['push_notifications'] = PushNotificationSettingsRequest.constructFromObject(data['push_notifications']);
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('teams')) {
                obj['teams'] = ApiClient.convertToType(data['teams'], ['String']);
            }
            if (data.hasOwnProperty('total_unread_count')) {
                obj['total_unread_count'] = ApiClient.convertToType(data['total_unread_count'], 'Number');
            }
            if (data.hasOwnProperty('unread_channels')) {
                obj['unread_channels'] = ApiClient.convertToType(data['unread_channels'], 'Number');
            }
            if (data.hasOwnProperty('unread_count')) {
                obj['unread_count'] = ApiClient.convertToType(data['unread_count'], 'Number');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OwnUserRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OwnUserRequest</code>.
     */
    static validateJSON(data) {
        if (data['channel_mutes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['channel_mutes'])) {
                throw new Error("Expected the field `channel_mutes` to be an array in the JSON data but got " + data['channel_mutes']);
            }
            // validate the optional field `channel_mutes` (array)
            for (const item of data['channel_mutes']) {
                ChannelMuteRequest.validateJSON(item);
            };
        }
        if (data['devices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['devices'])) {
                throw new Error("Expected the field `devices` to be an array in the JSON data but got " + data['devices']);
            }
            // validate the optional field `devices` (array)
            for (const item of data['devices']) {
                DeviceRequest.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['latest_hidden_channels'])) {
            throw new Error("Expected the field `latest_hidden_channels` to be an array in the JSON data but got " + data['latest_hidden_channels']);
        }
        if (data['mutes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['mutes'])) {
                throw new Error("Expected the field `mutes` to be an array in the JSON data but got " + data['mutes']);
            }
            // validate the optional field `mutes` (array)
            for (const item of data['mutes']) {
                UserMuteRequest.validateJSON(item);
            };
        }
        // validate the optional field `push_notifications`
        if (data['push_notifications']) { // data not null
          PushNotificationSettingsRequest.validateJSON(data['push_notifications']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['teams'])) {
            throw new Error("Expected the field `teams` to be an array in the JSON data but got " + data['teams']);
        }

        return true;
    }


}



/**
 * @member {Boolean} banned
 */
OwnUserRequest.prototype['banned'] = undefined;

/**
 * @member {Array.<module:model/ChannelMuteRequest>} channel_mutes
 */
OwnUserRequest.prototype['channel_mutes'] = undefined;

/**
 * @member {Date} created_at
 */
OwnUserRequest.prototype['created_at'] = undefined;

/**
 * @member {Date} deactivated_at
 */
OwnUserRequest.prototype['deactivated_at'] = undefined;

/**
 * @member {Date} deleted_at
 */
OwnUserRequest.prototype['deleted_at'] = undefined;

/**
 * @member {Array.<module:model/DeviceRequest>} devices
 */
OwnUserRequest.prototype['devices'] = undefined;

/**
 * @member {String} id
 */
OwnUserRequest.prototype['id'] = undefined;

/**
 * @member {Boolean} invisible
 */
OwnUserRequest.prototype['invisible'] = undefined;

/**
 * @member {String} language
 */
OwnUserRequest.prototype['language'] = undefined;

/**
 * @member {Date} last_active
 */
OwnUserRequest.prototype['last_active'] = undefined;

/**
 * @member {Array.<String>} latest_hidden_channels
 */
OwnUserRequest.prototype['latest_hidden_channels'] = undefined;

/**
 * @member {Array.<module:model/UserMuteRequest>} mutes
 */
OwnUserRequest.prototype['mutes'] = undefined;

/**
 * @member {Boolean} online
 */
OwnUserRequest.prototype['online'] = undefined;

/**
 * @member {module:model/PushNotificationSettingsRequest} push_notifications
 */
OwnUserRequest.prototype['push_notifications'] = undefined;

/**
 * @member {String} role
 */
OwnUserRequest.prototype['role'] = undefined;

/**
 * @member {Array.<String>} teams
 */
OwnUserRequest.prototype['teams'] = undefined;

/**
 * @member {Number} total_unread_count
 */
OwnUserRequest.prototype['total_unread_count'] = undefined;

/**
 * @member {Number} unread_channels
 */
OwnUserRequest.prototype['unread_channels'] = undefined;

/**
 * @member {Number} unread_count
 */
OwnUserRequest.prototype['unread_count'] = undefined;

/**
 * @member {Date} updated_at
 */
OwnUserRequest.prototype['updated_at'] = undefined;






export default OwnUserRequest;

