/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import APNConfigFields from './APNConfigFields';
import FirebaseConfigFields from './FirebaseConfigFields';
import HuaweiConfigFields from './HuaweiConfigFields';
import PushProvider from './PushProvider';
import XiaomiConfigFields from './XiaomiConfigFields';

/**
 * The PushNotificationFields model module.
 * @module model/PushNotificationFields
 * @version v80.2.0
 */
class PushNotificationFields {
    /**
     * Constructs a new <code>PushNotificationFields</code>.
     * @alias module:model/PushNotificationFields
     * @param apn {module:model/APNConfigFields} 
     * @param firebase {module:model/FirebaseConfigFields} 
     * @param huawei {module:model/HuaweiConfigFields} 
     * @param offlineOnly {Boolean} 
     * @param version {String} 
     * @param xiaomi {module:model/XiaomiConfigFields} 
     */
    constructor(apn, firebase, huawei, offlineOnly, version, xiaomi) { 
        
        PushNotificationFields.initialize(this, apn, firebase, huawei, offlineOnly, version, xiaomi);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, apn, firebase, huawei, offlineOnly, version, xiaomi) { 
        obj['apn'] = apn;
        obj['firebase'] = firebase;
        obj['huawei'] = huawei;
        obj['offline_only'] = offlineOnly;
        obj['version'] = version;
        obj['xiaomi'] = xiaomi;
    }

    /**
     * Constructs a <code>PushNotificationFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PushNotificationFields} obj Optional instance to populate.
     * @return {module:model/PushNotificationFields} The populated <code>PushNotificationFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PushNotificationFields();

            if (data.hasOwnProperty('apn')) {
                obj['apn'] = APNConfigFields.constructFromObject(data['apn']);
            }
            if (data.hasOwnProperty('firebase')) {
                obj['firebase'] = FirebaseConfigFields.constructFromObject(data['firebase']);
            }
            if (data.hasOwnProperty('huawei')) {
                obj['huawei'] = HuaweiConfigFields.constructFromObject(data['huawei']);
            }
            if (data.hasOwnProperty('offline_only')) {
                obj['offline_only'] = ApiClient.convertToType(data['offline_only'], 'Boolean');
            }
            if (data.hasOwnProperty('providers')) {
                obj['providers'] = ApiClient.convertToType(data['providers'], [PushProvider]);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('xiaomi')) {
                obj['xiaomi'] = XiaomiConfigFields.constructFromObject(data['xiaomi']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PushNotificationFields</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PushNotificationFields</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PushNotificationFields.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `apn`
        if (data['apn']) { // data not null
          APNConfigFields.validateJSON(data['apn']);
        }
        // validate the optional field `firebase`
        if (data['firebase']) { // data not null
          FirebaseConfigFields.validateJSON(data['firebase']);
        }
        // validate the optional field `huawei`
        if (data['huawei']) { // data not null
          HuaweiConfigFields.validateJSON(data['huawei']);
        }
        if (data['providers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['providers'])) {
                throw new Error("Expected the field `providers` to be an array in the JSON data but got " + data['providers']);
            }
            // validate the optional field `providers` (array)
            for (const item of data['providers']) {
                PushProvider.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }
        // validate the optional field `xiaomi`
        if (data['xiaomi']) { // data not null
          XiaomiConfigFields.validateJSON(data['xiaomi']);
        }

        return true;
    }


}

PushNotificationFields.RequiredProperties = ["apn", "firebase", "huawei", "offline_only", "version", "xiaomi"];

/**
 * @member {module:model/APNConfigFields} apn
 */
PushNotificationFields.prototype['apn'] = undefined;

/**
 * @member {module:model/FirebaseConfigFields} firebase
 */
PushNotificationFields.prototype['firebase'] = undefined;

/**
 * @member {module:model/HuaweiConfigFields} huawei
 */
PushNotificationFields.prototype['huawei'] = undefined;

/**
 * @member {Boolean} offline_only
 */
PushNotificationFields.prototype['offline_only'] = undefined;

/**
 * @member {Array.<module:model/PushProvider>} providers
 */
PushNotificationFields.prototype['providers'] = undefined;

/**
 * @member {String} version
 */
PushNotificationFields.prototype['version'] = undefined;

/**
 * @member {module:model/XiaomiConfigFields} xiaomi
 */
PushNotificationFields.prototype['xiaomi'] = undefined;






export default PushNotificationFields;

