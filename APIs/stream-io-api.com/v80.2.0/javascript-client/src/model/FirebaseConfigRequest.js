/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FirebaseConfigRequest model module.
 * @module model/FirebaseConfigRequest
 * @version v80.2.0
 */
class FirebaseConfigRequest {
    /**
     * Constructs a new <code>FirebaseConfigRequest</code>.
     * @alias module:model/FirebaseConfigRequest
     */
    constructor() { 
        
        FirebaseConfigRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FirebaseConfigRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FirebaseConfigRequest} obj Optional instance to populate.
     * @return {module:model/FirebaseConfigRequest} The populated <code>FirebaseConfigRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FirebaseConfigRequest();

            if (data.hasOwnProperty('Disabled')) {
                obj['Disabled'] = ApiClient.convertToType(data['Disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('apn_template')) {
                obj['apn_template'] = ApiClient.convertToType(data['apn_template'], 'String');
            }
            if (data.hasOwnProperty('credentials_json')) {
                obj['credentials_json'] = ApiClient.convertToType(data['credentials_json'], 'String');
            }
            if (data.hasOwnProperty('data_template')) {
                obj['data_template'] = ApiClient.convertToType(data['data_template'], 'String');
            }
            if (data.hasOwnProperty('notification_template')) {
                obj['notification_template'] = ApiClient.convertToType(data['notification_template'], 'String');
            }
            if (data.hasOwnProperty('server_key')) {
                obj['server_key'] = ApiClient.convertToType(data['server_key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FirebaseConfigRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FirebaseConfigRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apn_template'] && !(typeof data['apn_template'] === 'string' || data['apn_template'] instanceof String)) {
            throw new Error("Expected the field `apn_template` to be a primitive type in the JSON string but got " + data['apn_template']);
        }
        // ensure the json data is a string
        if (data['credentials_json'] && !(typeof data['credentials_json'] === 'string' || data['credentials_json'] instanceof String)) {
            throw new Error("Expected the field `credentials_json` to be a primitive type in the JSON string but got " + data['credentials_json']);
        }
        // ensure the json data is a string
        if (data['data_template'] && !(typeof data['data_template'] === 'string' || data['data_template'] instanceof String)) {
            throw new Error("Expected the field `data_template` to be a primitive type in the JSON string but got " + data['data_template']);
        }
        // ensure the json data is a string
        if (data['notification_template'] && !(typeof data['notification_template'] === 'string' || data['notification_template'] instanceof String)) {
            throw new Error("Expected the field `notification_template` to be a primitive type in the JSON string but got " + data['notification_template']);
        }
        // ensure the json data is a string
        if (data['server_key'] && !(typeof data['server_key'] === 'string' || data['server_key'] instanceof String)) {
            throw new Error("Expected the field `server_key` to be a primitive type in the JSON string but got " + data['server_key']);
        }

        return true;
    }


}



/**
 * @member {Boolean} Disabled
 */
FirebaseConfigRequest.prototype['Disabled'] = undefined;

/**
 * @member {String} apn_template
 */
FirebaseConfigRequest.prototype['apn_template'] = undefined;

/**
 * @member {String} credentials_json
 */
FirebaseConfigRequest.prototype['credentials_json'] = undefined;

/**
 * @member {String} data_template
 */
FirebaseConfigRequest.prototype['data_template'] = undefined;

/**
 * @member {String} notification_template
 */
FirebaseConfigRequest.prototype['notification_template'] = undefined;

/**
 * @member {String} server_key
 */
FirebaseConfigRequest.prototype['server_key'] = undefined;






export default FirebaseConfigRequest;

