/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Campaign from './Campaign';
import Channel from './Channel';
import Recipient from './Recipient';
import Segment from './Segment';
import UserObject from './UserObject';

/**
 * The QueryRecipientsResponse model module.
 * @module model/QueryRecipientsResponse
 * @version v80.2.0
 */
class QueryRecipientsResponse {
    /**
     * Constructs a new <code>QueryRecipientsResponse</code>.
     * @alias module:model/QueryRecipientsResponse
     * @param campaigns {Object.<String, module:model/Campaign>} 
     * @param channels {Object.<String, module:model/Channel>} 
     * @param duration {String} Duration of the request in human-readable format
     * @param recipients {Array.<module:model/Recipient>} 
     * @param segments {Object.<String, module:model/Segment>} 
     * @param users {Object.<String, module:model/UserObject>} 
     */
    constructor(campaigns, channels, duration, recipients, segments, users) { 
        
        QueryRecipientsResponse.initialize(this, campaigns, channels, duration, recipients, segments, users);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, campaigns, channels, duration, recipients, segments, users) { 
        obj['campaigns'] = campaigns;
        obj['channels'] = channels;
        obj['duration'] = duration;
        obj['recipients'] = recipients;
        obj['segments'] = segments;
        obj['users'] = users;
    }

    /**
     * Constructs a <code>QueryRecipientsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryRecipientsResponse} obj Optional instance to populate.
     * @return {module:model/QueryRecipientsResponse} The populated <code>QueryRecipientsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryRecipientsResponse();

            if (data.hasOwnProperty('campaigns')) {
                obj['campaigns'] = ApiClient.convertToType(data['campaigns'], {'String': Campaign});
            }
            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], {'String': Channel});
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('recipients')) {
                obj['recipients'] = ApiClient.convertToType(data['recipients'], [Recipient]);
            }
            if (data.hasOwnProperty('segments')) {
                obj['segments'] = ApiClient.convertToType(data['segments'], {'String': Segment});
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], {'String': UserObject});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryRecipientsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryRecipientsResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QueryRecipientsResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['duration'] && !(typeof data['duration'] === 'string' || data['duration'] instanceof String)) {
            throw new Error("Expected the field `duration` to be a primitive type in the JSON string but got " + data['duration']);
        }
        if (data['recipients']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recipients'])) {
                throw new Error("Expected the field `recipients` to be an array in the JSON data but got " + data['recipients']);
            }
            // validate the optional field `recipients` (array)
            for (const item of data['recipients']) {
                Recipient.validateJSON(item);
            };
        }

        return true;
    }


}

QueryRecipientsResponse.RequiredProperties = ["campaigns", "channels", "duration", "recipients", "segments", "users"];

/**
 * @member {Object.<String, module:model/Campaign>} campaigns
 */
QueryRecipientsResponse.prototype['campaigns'] = undefined;

/**
 * @member {Object.<String, module:model/Channel>} channels
 */
QueryRecipientsResponse.prototype['channels'] = undefined;

/**
 * Duration of the request in human-readable format
 * @member {String} duration
 */
QueryRecipientsResponse.prototype['duration'] = undefined;

/**
 * @member {Array.<module:model/Recipient>} recipients
 */
QueryRecipientsResponse.prototype['recipients'] = undefined;

/**
 * @member {Object.<String, module:model/Segment>} segments
 */
QueryRecipientsResponse.prototype['segments'] = undefined;

/**
 * @member {Object.<String, module:model/UserObject>} users
 */
QueryRecipientsResponse.prototype['users'] = undefined;






export default QueryRecipientsResponse;

