/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SearchWarning model module.
 * @module model/SearchWarning
 * @version v80.2.0
 */
class SearchWarning {
    /**
     * Constructs a new <code>SearchWarning</code>.
     * @alias module:model/SearchWarning
     * @param warningCode {Number} Code corresponding to the warning
     * @param warningDescription {String} Description of the warning
     */
    constructor(warningCode, warningDescription) { 
        
        SearchWarning.initialize(this, warningCode, warningDescription);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, warningCode, warningDescription) { 
        obj['warning_code'] = warningCode;
        obj['warning_description'] = warningDescription;
    }

    /**
     * Constructs a <code>SearchWarning</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchWarning} obj Optional instance to populate.
     * @return {module:model/SearchWarning} The populated <code>SearchWarning</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchWarning();

            if (data.hasOwnProperty('channel_search_cids')) {
                obj['channel_search_cids'] = ApiClient.convertToType(data['channel_search_cids'], ['String']);
            }
            if (data.hasOwnProperty('channel_search_count')) {
                obj['channel_search_count'] = ApiClient.convertToType(data['channel_search_count'], 'Number');
            }
            if (data.hasOwnProperty('warning_code')) {
                obj['warning_code'] = ApiClient.convertToType(data['warning_code'], 'Number');
            }
            if (data.hasOwnProperty('warning_description')) {
                obj['warning_description'] = ApiClient.convertToType(data['warning_description'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchWarning</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchWarning</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchWarning.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['channel_search_cids'])) {
            throw new Error("Expected the field `channel_search_cids` to be an array in the JSON data but got " + data['channel_search_cids']);
        }
        // ensure the json data is a string
        if (data['warning_description'] && !(typeof data['warning_description'] === 'string' || data['warning_description'] instanceof String)) {
            throw new Error("Expected the field `warning_description` to be a primitive type in the JSON string but got " + data['warning_description']);
        }

        return true;
    }


}

SearchWarning.RequiredProperties = ["warning_code", "warning_description"];

/**
 * Channel CIDs for the searched channels
 * @member {Array.<String>} channel_search_cids
 */
SearchWarning.prototype['channel_search_cids'] = undefined;

/**
 * Number of channels searched
 * @member {Number} channel_search_count
 */
SearchWarning.prototype['channel_search_count'] = undefined;

/**
 * Code corresponding to the warning
 * @member {Number} warning_code
 */
SearchWarning.prototype['warning_code'] = undefined;

/**
 * Description of the warning
 * @member {String} warning_description
 */
SearchWarning.prototype['warning_description'] = undefined;






export default SearchWarning;

