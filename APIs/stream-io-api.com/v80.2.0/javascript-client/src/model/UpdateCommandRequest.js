/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateCommandRequest model module.
 * @module model/UpdateCommandRequest
 * @version v80.2.0
 */
class UpdateCommandRequest {
    /**
     * Constructs a new <code>UpdateCommandRequest</code>.
     * Represents custom chat command
     * @alias module:model/UpdateCommandRequest
     * @param description {String} Description, shown in commands auto-completion
     */
    constructor(description) { 
        
        UpdateCommandRequest.initialize(this, description);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description) { 
        obj['description'] = description;
    }

    /**
     * Constructs a <code>UpdateCommandRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateCommandRequest} obj Optional instance to populate.
     * @return {module:model/UpdateCommandRequest} The populated <code>UpdateCommandRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateCommandRequest();

            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('args')) {
                obj['args'] = ApiClient.convertToType(data['args'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('set')) {
                obj['set'] = ApiClient.convertToType(data['set'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateCommandRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateCommandRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateCommandRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['args'] && !(typeof data['args'] === 'string' || data['args'] instanceof String)) {
            throw new Error("Expected the field `args` to be a primitive type in the JSON string but got " + data['args']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['set'] && !(typeof data['set'] === 'string' || data['set'] instanceof String)) {
            throw new Error("Expected the field `set` to be a primitive type in the JSON string but got " + data['set']);
        }

        return true;
    }


}

UpdateCommandRequest.RequiredProperties = ["description"];

/**
 * @member {String} Name
 */
UpdateCommandRequest.prototype['Name'] = undefined;

/**
 * Arguments help text, shown in commands auto-completion
 * @member {String} args
 */
UpdateCommandRequest.prototype['args'] = undefined;

/**
 * Description, shown in commands auto-completion
 * @member {String} description
 */
UpdateCommandRequest.prototype['description'] = undefined;

/**
 * Set name used for grouping commands
 * @member {String} set
 */
UpdateCommandRequest.prototype['set'] = undefined;






export default UpdateCommandRequest;

