/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserObject from './UserObject';

/**
 * The Read model module.
 * @module model/Read
 * @version v80.2.0
 */
class Read {
    /**
     * Constructs a new <code>Read</code>.
     * @alias module:model/Read
     * @param lastRead {Date} 
     * @param lastReadMessageId {String} 
     * @param unreadMessages {Number} 
     */
    constructor(lastRead, lastReadMessageId, unreadMessages) { 
        
        Read.initialize(this, lastRead, lastReadMessageId, unreadMessages);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, lastRead, lastReadMessageId, unreadMessages) { 
        obj['last_read'] = lastRead;
        obj['last_read_message_id'] = lastReadMessageId;
        obj['unread_messages'] = unreadMessages;
    }

    /**
     * Constructs a <code>Read</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Read} obj Optional instance to populate.
     * @return {module:model/Read} The populated <code>Read</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Read();

            if (data.hasOwnProperty('last_read')) {
                obj['last_read'] = ApiClient.convertToType(data['last_read'], 'Date');
            }
            if (data.hasOwnProperty('last_read_message_id')) {
                obj['last_read_message_id'] = ApiClient.convertToType(data['last_read_message_id'], 'String');
            }
            if (data.hasOwnProperty('unread_messages')) {
                obj['unread_messages'] = ApiClient.convertToType(data['unread_messages'], 'Number');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserObject.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Read</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Read</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Read.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['last_read_message_id'] && !(typeof data['last_read_message_id'] === 'string' || data['last_read_message_id'] instanceof String)) {
            throw new Error("Expected the field `last_read_message_id` to be a primitive type in the JSON string but got " + data['last_read_message_id']);
        }

        return true;
    }


}

Read.RequiredProperties = ["last_read", "last_read_message_id", "unread_messages"];

/**
 * @member {Date} last_read
 */
Read.prototype['last_read'] = undefined;

/**
 * @member {String} last_read_message_id
 */
Read.prototype['last_read_message_id'] = undefined;

/**
 * @member {Number} unread_messages
 */
Read.prototype['unread_messages'] = undefined;

/**
 * @member {module:model/UserObject} user
 */
Read.prototype['user'] = undefined;






export default Read;

