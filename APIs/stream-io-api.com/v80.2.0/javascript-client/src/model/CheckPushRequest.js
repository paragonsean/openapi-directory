/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserObjectRequest from './UserObjectRequest';

/**
 * The CheckPushRequest model module.
 * @module model/CheckPushRequest
 * @version v80.2.0
 */
class CheckPushRequest {
    /**
     * Constructs a new <code>CheckPushRequest</code>.
     * @alias module:model/CheckPushRequest
     */
    constructor() { 
        
        CheckPushRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CheckPushRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckPushRequest} obj Optional instance to populate.
     * @return {module:model/CheckPushRequest} The populated <code>CheckPushRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckPushRequest();

            if (data.hasOwnProperty('apn_template')) {
                obj['apn_template'] = ApiClient.convertToType(data['apn_template'], 'String');
            }
            if (data.hasOwnProperty('firebase_data_template')) {
                obj['firebase_data_template'] = ApiClient.convertToType(data['firebase_data_template'], 'String');
            }
            if (data.hasOwnProperty('firebase_template')) {
                obj['firebase_template'] = ApiClient.convertToType(data['firebase_template'], 'String');
            }
            if (data.hasOwnProperty('message_id')) {
                obj['message_id'] = ApiClient.convertToType(data['message_id'], 'String');
            }
            if (data.hasOwnProperty('push_provider_name')) {
                obj['push_provider_name'] = ApiClient.convertToType(data['push_provider_name'], 'String');
            }
            if (data.hasOwnProperty('push_provider_type')) {
                obj['push_provider_type'] = ApiClient.convertToType(data['push_provider_type'], 'String');
            }
            if (data.hasOwnProperty('skip_devices')) {
                obj['skip_devices'] = ApiClient.convertToType(data['skip_devices'], 'Boolean');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserObjectRequest.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckPushRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckPushRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apn_template'] && !(typeof data['apn_template'] === 'string' || data['apn_template'] instanceof String)) {
            throw new Error("Expected the field `apn_template` to be a primitive type in the JSON string but got " + data['apn_template']);
        }
        // ensure the json data is a string
        if (data['firebase_data_template'] && !(typeof data['firebase_data_template'] === 'string' || data['firebase_data_template'] instanceof String)) {
            throw new Error("Expected the field `firebase_data_template` to be a primitive type in the JSON string but got " + data['firebase_data_template']);
        }
        // ensure the json data is a string
        if (data['firebase_template'] && !(typeof data['firebase_template'] === 'string' || data['firebase_template'] instanceof String)) {
            throw new Error("Expected the field `firebase_template` to be a primitive type in the JSON string but got " + data['firebase_template']);
        }
        // ensure the json data is a string
        if (data['message_id'] && !(typeof data['message_id'] === 'string' || data['message_id'] instanceof String)) {
            throw new Error("Expected the field `message_id` to be a primitive type in the JSON string but got " + data['message_id']);
        }
        // ensure the json data is a string
        if (data['push_provider_name'] && !(typeof data['push_provider_name'] === 'string' || data['push_provider_name'] instanceof String)) {
            throw new Error("Expected the field `push_provider_name` to be a primitive type in the JSON string but got " + data['push_provider_name']);
        }
        // ensure the json data is a string
        if (data['push_provider_type'] && !(typeof data['push_provider_type'] === 'string' || data['push_provider_type'] instanceof String)) {
            throw new Error("Expected the field `push_provider_type` to be a primitive type in the JSON string but got " + data['push_provider_type']);
        }
        // ensure the json data is a string
        if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
            throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
        }

        return true;
    }


}



/**
 * Push message template for APN
 * @member {String} apn_template
 */
CheckPushRequest.prototype['apn_template'] = undefined;

/**
 * Push message data template for Firebase
 * @member {String} firebase_data_template
 */
CheckPushRequest.prototype['firebase_data_template'] = undefined;

/**
 * Push message template for Firebase
 * @member {String} firebase_template
 */
CheckPushRequest.prototype['firebase_template'] = undefined;

/**
 * Message ID to send push notification for
 * @member {String} message_id
 */
CheckPushRequest.prototype['message_id'] = undefined;

/**
 * Name of push provider
 * @member {String} push_provider_name
 */
CheckPushRequest.prototype['push_provider_name'] = undefined;

/**
 * Push provider type
 * @member {module:model/CheckPushRequest.PushProviderTypeEnum} push_provider_type
 */
CheckPushRequest.prototype['push_provider_type'] = undefined;

/**
 * Don't require existing devices to render templates
 * @member {Boolean} skip_devices
 */
CheckPushRequest.prototype['skip_devices'] = undefined;

/**
 * @member {module:model/UserObjectRequest} user
 */
CheckPushRequest.prototype['user'] = undefined;

/**
 * @member {String} user_id
 */
CheckPushRequest.prototype['user_id'] = undefined;





/**
 * Allowed values for the <code>push_provider_type</code> property.
 * @enum {String}
 * @readonly
 */
CheckPushRequest['PushProviderTypeEnum'] = {

    /**
     * value: "firebase"
     * @const
     */
    "firebase": "firebase",

    /**
     * value: "apn"
     * @const
     */
    "apn": "apn",

    /**
     * value: "huawei"
     * @const
     */
    "huawei": "huawei",

    /**
     * value: "xiaomi"
     * @const
     */
    "xiaomi": "xiaomi"
};



export default CheckPushRequest;

