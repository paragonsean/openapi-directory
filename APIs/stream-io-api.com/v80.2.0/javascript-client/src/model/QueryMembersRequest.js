/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelMember from './ChannelMember';
import SortParam from './SortParam';
import UserObject from './UserObject';

/**
 * The QueryMembersRequest model module.
 * @module model/QueryMembersRequest
 * @version v80.2.0
 */
class QueryMembersRequest {
    /**
     * Constructs a new <code>QueryMembersRequest</code>.
     * @alias module:model/QueryMembersRequest
     * @param filterConditions {Object.<String, Object>} Filter to apply to members
     * @param type {String} Channel type to interact with
     */
    constructor(filterConditions, type) { 
        
        QueryMembersRequest.initialize(this, filterConditions, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, filterConditions, type) { 
        obj['filter_conditions'] = filterConditions;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>QueryMembersRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryMembersRequest} obj Optional instance to populate.
     * @return {module:model/QueryMembersRequest} The populated <code>QueryMembersRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryMembersRequest();

            if (data.hasOwnProperty('created_at_after')) {
                obj['created_at_after'] = ApiClient.convertToType(data['created_at_after'], 'Date');
            }
            if (data.hasOwnProperty('created_at_after_or_equal')) {
                obj['created_at_after_or_equal'] = ApiClient.convertToType(data['created_at_after_or_equal'], 'Date');
            }
            if (data.hasOwnProperty('created_at_before')) {
                obj['created_at_before'] = ApiClient.convertToType(data['created_at_before'], 'Date');
            }
            if (data.hasOwnProperty('created_at_before_or_equal')) {
                obj['created_at_before_or_equal'] = ApiClient.convertToType(data['created_at_before_or_equal'], 'Date');
            }
            if (data.hasOwnProperty('filter_conditions')) {
                obj['filter_conditions'] = ApiClient.convertToType(data['filter_conditions'], {'String': Object});
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], [ChannelMember]);
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('sort')) {
                obj['sort'] = ApiClient.convertToType(data['sort'], [SortParam]);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserObject.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
            if (data.hasOwnProperty('user_id_gt')) {
                obj['user_id_gt'] = ApiClient.convertToType(data['user_id_gt'], 'String');
            }
            if (data.hasOwnProperty('user_id_gte')) {
                obj['user_id_gte'] = ApiClient.convertToType(data['user_id_gte'], 'String');
            }
            if (data.hasOwnProperty('user_id_lt')) {
                obj['user_id_lt'] = ApiClient.convertToType(data['user_id_lt'], 'String');
            }
            if (data.hasOwnProperty('user_id_lte')) {
                obj['user_id_lte'] = ApiClient.convertToType(data['user_id_lte'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryMembersRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryMembersRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QueryMembersRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['members']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['members'])) {
                throw new Error("Expected the field `members` to be an array in the JSON data but got " + data['members']);
            }
            // validate the optional field `members` (array)
            for (const item of data['members']) {
                ChannelMember.validateJSON(item);
            };
        }
        if (data['sort']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sort'])) {
                throw new Error("Expected the field `sort` to be an array in the JSON data but got " + data['sort']);
            }
            // validate the optional field `sort` (array)
            for (const item of data['sort']) {
                SortParam.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
            throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
        }
        // ensure the json data is a string
        if (data['user_id_gt'] && !(typeof data['user_id_gt'] === 'string' || data['user_id_gt'] instanceof String)) {
            throw new Error("Expected the field `user_id_gt` to be a primitive type in the JSON string but got " + data['user_id_gt']);
        }
        // ensure the json data is a string
        if (data['user_id_gte'] && !(typeof data['user_id_gte'] === 'string' || data['user_id_gte'] instanceof String)) {
            throw new Error("Expected the field `user_id_gte` to be a primitive type in the JSON string but got " + data['user_id_gte']);
        }
        // ensure the json data is a string
        if (data['user_id_lt'] && !(typeof data['user_id_lt'] === 'string' || data['user_id_lt'] instanceof String)) {
            throw new Error("Expected the field `user_id_lt` to be a primitive type in the JSON string but got " + data['user_id_lt']);
        }
        // ensure the json data is a string
        if (data['user_id_lte'] && !(typeof data['user_id_lte'] === 'string' || data['user_id_lte'] instanceof String)) {
            throw new Error("Expected the field `user_id_lte` to be a primitive type in the JSON string but got " + data['user_id_lte']);
        }

        return true;
    }


}

QueryMembersRequest.RequiredProperties = ["filter_conditions", "type"];

/**
 * @member {Date} created_at_after
 */
QueryMembersRequest.prototype['created_at_after'] = undefined;

/**
 * @member {Date} created_at_after_or_equal
 */
QueryMembersRequest.prototype['created_at_after_or_equal'] = undefined;

/**
 * @member {Date} created_at_before
 */
QueryMembersRequest.prototype['created_at_before'] = undefined;

/**
 * @member {Date} created_at_before_or_equal
 */
QueryMembersRequest.prototype['created_at_before_or_equal'] = undefined;

/**
 * Filter to apply to members
 * @member {Object.<String, Object>} filter_conditions
 */
QueryMembersRequest.prototype['filter_conditions'] = undefined;

/**
 * Channel ID to interact with
 * @member {String} id
 */
QueryMembersRequest.prototype['id'] = undefined;

/**
 * Number of records to return
 * @member {Number} limit
 */
QueryMembersRequest.prototype['limit'] = undefined;

/**
 * List of members to search in distinct channels
 * @member {Array.<module:model/ChannelMember>} members
 */
QueryMembersRequest.prototype['members'] = undefined;

/**
 * Number of records to offset
 * @member {Number} offset
 */
QueryMembersRequest.prototype['offset'] = undefined;

/**
 * Array of sort parameters
 * @member {Array.<module:model/SortParam>} sort
 */
QueryMembersRequest.prototype['sort'] = undefined;

/**
 * Channel type to interact with
 * @member {String} type
 */
QueryMembersRequest.prototype['type'] = undefined;

/**
 * @member {module:model/UserObject} user
 */
QueryMembersRequest.prototype['user'] = undefined;

/**
 * @member {String} user_id
 */
QueryMembersRequest.prototype['user_id'] = undefined;

/**
 * @member {String} user_id_gt
 */
QueryMembersRequest.prototype['user_id_gt'] = undefined;

/**
 * @member {String} user_id_gte
 */
QueryMembersRequest.prototype['user_id_gte'] = undefined;

/**
 * @member {String} user_id_lt
 */
QueryMembersRequest.prototype['user_id_lt'] = undefined;

/**
 * @member {String} user_id_lte
 */
QueryMembersRequest.prototype['user_id_lte'] = undefined;






export default QueryMembersRequest;

