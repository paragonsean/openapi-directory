/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FlagDetails from './FlagDetails';
import Message from './Message';
import UserObject from './UserObject';

/**
 * The Flag model module.
 * @module model/Flag
 * @version v80.2.0
 */
class Flag {
    /**
     * Constructs a new <code>Flag</code>.
     * Contains information about flagged user or message
     * @alias module:model/Flag
     * @param createdAt {Date} Date/time of creation
     * @param createdByAutomod {Boolean} 
     * @param updatedAt {Date} Date/time of the last update
     */
    constructor(createdAt, createdByAutomod, updatedAt) { 
        
        Flag.initialize(this, createdAt, createdByAutomod, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, createdByAutomod, updatedAt) { 
        obj['created_at'] = createdAt;
        obj['created_by_automod'] = createdByAutomod;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>Flag</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Flag} obj Optional instance to populate.
     * @return {module:model/Flag} The populated <code>Flag</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Flag();

            if (data.hasOwnProperty('approved_at')) {
                obj['approved_at'] = ApiClient.convertToType(data['approved_at'], 'Date');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('created_by_automod')) {
                obj['created_by_automod'] = ApiClient.convertToType(data['created_by_automod'], 'Boolean');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = FlagDetails.constructFromObject(data['details']);
            }
            if (data.hasOwnProperty('rejected_at')) {
                obj['rejected_at'] = ApiClient.convertToType(data['rejected_at'], 'Date');
            }
            if (data.hasOwnProperty('reviewed_at')) {
                obj['reviewed_at'] = ApiClient.convertToType(data['reviewed_at'], 'Date');
            }
            if (data.hasOwnProperty('target_message')) {
                obj['target_message'] = Message.constructFromObject(data['target_message']);
            }
            if (data.hasOwnProperty('target_message_id')) {
                obj['target_message_id'] = ApiClient.convertToType(data['target_message_id'], 'String');
            }
            if (data.hasOwnProperty('target_user')) {
                obj['target_user'] = UserObject.constructFromObject(data['target_user']);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserObject.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Flag</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Flag</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Flag.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['target_message_id'] && !(typeof data['target_message_id'] === 'string' || data['target_message_id'] instanceof String)) {
            throw new Error("Expected the field `target_message_id` to be a primitive type in the JSON string but got " + data['target_message_id']);
        }

        return true;
    }


}

Flag.RequiredProperties = ["created_at", "created_by_automod", "updated_at"];

/**
 * Date of the approval
 * @member {Date} approved_at
 */
Flag.prototype['approved_at'] = undefined;

/**
 * Date/time of creation
 * @member {Date} created_at
 */
Flag.prototype['created_at'] = undefined;

/**
 * @member {Boolean} created_by_automod
 */
Flag.prototype['created_by_automod'] = undefined;

/**
 * @member {module:model/FlagDetails} details
 */
Flag.prototype['details'] = undefined;

/**
 * Date of the rejection
 * @member {Date} rejected_at
 */
Flag.prototype['rejected_at'] = undefined;

/**
 * Date of the review
 * @member {Date} reviewed_at
 */
Flag.prototype['reviewed_at'] = undefined;

/**
 * @member {module:model/Message} target_message
 */
Flag.prototype['target_message'] = undefined;

/**
 * ID of flagged message
 * @member {String} target_message_id
 */
Flag.prototype['target_message_id'] = undefined;

/**
 * @member {module:model/UserObject} target_user
 */
Flag.prototype['target_user'] = undefined;

/**
 * Date/time of the last update
 * @member {Date} updated_at
 */
Flag.prototype['updated_at'] = undefined;

/**
 * @member {module:model/UserObject} user
 */
Flag.prototype['user'] = undefined;






export default Flag;

