/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Channel from './Channel';
import Message from './Message';
import UserObject from './UserObject';

/**
 * The PendingMessage model module.
 * @module model/PendingMessage
 * @version v80.2.0
 */
class PendingMessage {
    /**
     * Constructs a new <code>PendingMessage</code>.
     * @alias module:model/PendingMessage
     */
    constructor() { 
        
        PendingMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PendingMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PendingMessage} obj Optional instance to populate.
     * @return {module:model/PendingMessage} The populated <code>PendingMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PendingMessage();

            if (data.hasOwnProperty('channel')) {
                obj['channel'] = Channel.constructFromObject(data['channel']);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = Message.constructFromObject(data['message']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserObject.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PendingMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PendingMessage</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {module:model/Channel} channel
 */
PendingMessage.prototype['channel'] = undefined;

/**
 * @member {module:model/Message} message
 */
PendingMessage.prototype['message'] = undefined;

/**
 * Additional data attached to the pending message. This data is discarded once the pending message is committed.
 * @member {Object.<String, String>} metadata
 */
PendingMessage.prototype['metadata'] = undefined;

/**
 * @member {module:model/UserObject} user
 */
PendingMessage.prototype['user'] = undefined;






export default PendingMessage;

