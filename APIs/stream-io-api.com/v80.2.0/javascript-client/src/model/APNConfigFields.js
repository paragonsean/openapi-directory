/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APNConfigFields model module.
 * @module model/APNConfigFields
 * @version v80.2.0
 */
class APNConfigFields {
    /**
     * Constructs a new <code>APNConfigFields</code>.
     * @alias module:model/APNConfigFields
     * @param development {Boolean} 
     * @param enabled {Boolean} 
     * @param notificationTemplate {String} 
     */
    constructor(development, enabled, notificationTemplate) { 
        
        APNConfigFields.initialize(this, development, enabled, notificationTemplate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, development, enabled, notificationTemplate) { 
        obj['development'] = development;
        obj['enabled'] = enabled;
        obj['notification_template'] = notificationTemplate;
    }

    /**
     * Constructs a <code>APNConfigFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APNConfigFields} obj Optional instance to populate.
     * @return {module:model/APNConfigFields} The populated <code>APNConfigFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APNConfigFields();

            if (data.hasOwnProperty('auth_key')) {
                obj['auth_key'] = ApiClient.convertToType(data['auth_key'], 'String');
            }
            if (data.hasOwnProperty('auth_type')) {
                obj['auth_type'] = ApiClient.convertToType(data['auth_type'], 'String');
            }
            if (data.hasOwnProperty('bundle_id')) {
                obj['bundle_id'] = ApiClient.convertToType(data['bundle_id'], 'String');
            }
            if (data.hasOwnProperty('development')) {
                obj['development'] = ApiClient.convertToType(data['development'], 'Boolean');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('key_id')) {
                obj['key_id'] = ApiClient.convertToType(data['key_id'], 'String');
            }
            if (data.hasOwnProperty('notification_template')) {
                obj['notification_template'] = ApiClient.convertToType(data['notification_template'], 'String');
            }
            if (data.hasOwnProperty('p12_cert')) {
                obj['p12_cert'] = ApiClient.convertToType(data['p12_cert'], 'String');
            }
            if (data.hasOwnProperty('team_id')) {
                obj['team_id'] = ApiClient.convertToType(data['team_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>APNConfigFields</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>APNConfigFields</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of APNConfigFields.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['auth_key'] && !(typeof data['auth_key'] === 'string' || data['auth_key'] instanceof String)) {
            throw new Error("Expected the field `auth_key` to be a primitive type in the JSON string but got " + data['auth_key']);
        }
        // ensure the json data is a string
        if (data['auth_type'] && !(typeof data['auth_type'] === 'string' || data['auth_type'] instanceof String)) {
            throw new Error("Expected the field `auth_type` to be a primitive type in the JSON string but got " + data['auth_type']);
        }
        // ensure the json data is a string
        if (data['bundle_id'] && !(typeof data['bundle_id'] === 'string' || data['bundle_id'] instanceof String)) {
            throw new Error("Expected the field `bundle_id` to be a primitive type in the JSON string but got " + data['bundle_id']);
        }
        // ensure the json data is a string
        if (data['host'] && !(typeof data['host'] === 'string' || data['host'] instanceof String)) {
            throw new Error("Expected the field `host` to be a primitive type in the JSON string but got " + data['host']);
        }
        // ensure the json data is a string
        if (data['key_id'] && !(typeof data['key_id'] === 'string' || data['key_id'] instanceof String)) {
            throw new Error("Expected the field `key_id` to be a primitive type in the JSON string but got " + data['key_id']);
        }
        // ensure the json data is a string
        if (data['notification_template'] && !(typeof data['notification_template'] === 'string' || data['notification_template'] instanceof String)) {
            throw new Error("Expected the field `notification_template` to be a primitive type in the JSON string but got " + data['notification_template']);
        }
        // ensure the json data is a string
        if (data['p12_cert'] && !(typeof data['p12_cert'] === 'string' || data['p12_cert'] instanceof String)) {
            throw new Error("Expected the field `p12_cert` to be a primitive type in the JSON string but got " + data['p12_cert']);
        }
        // ensure the json data is a string
        if (data['team_id'] && !(typeof data['team_id'] === 'string' || data['team_id'] instanceof String)) {
            throw new Error("Expected the field `team_id` to be a primitive type in the JSON string but got " + data['team_id']);
        }

        return true;
    }


}

APNConfigFields.RequiredProperties = ["development", "enabled", "notification_template"];

/**
 * @member {String} auth_key
 */
APNConfigFields.prototype['auth_key'] = undefined;

/**
 * @member {String} auth_type
 */
APNConfigFields.prototype['auth_type'] = undefined;

/**
 * @member {String} bundle_id
 */
APNConfigFields.prototype['bundle_id'] = undefined;

/**
 * @member {Boolean} development
 */
APNConfigFields.prototype['development'] = undefined;

/**
 * @member {Boolean} enabled
 */
APNConfigFields.prototype['enabled'] = undefined;

/**
 * @member {String} host
 */
APNConfigFields.prototype['host'] = undefined;

/**
 * @member {String} key_id
 */
APNConfigFields.prototype['key_id'] = undefined;

/**
 * @member {String} notification_template
 */
APNConfigFields.prototype['notification_template'] = undefined;

/**
 * @member {String} p12_cert
 */
APNConfigFields.prototype['p12_cert'] = undefined;

/**
 * @member {String} team_id
 */
APNConfigFields.prototype['team_id'] = undefined;






export default APNConfigFields;

