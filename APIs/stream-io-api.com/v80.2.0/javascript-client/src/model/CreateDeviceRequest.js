/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UserObjectRequest from './UserObjectRequest';

/**
 * The CreateDeviceRequest model module.
 * @module model/CreateDeviceRequest
 * @version v80.2.0
 */
class CreateDeviceRequest {
    /**
     * Constructs a new <code>CreateDeviceRequest</code>.
     * @alias module:model/CreateDeviceRequest
     */
    constructor() { 
        
        CreateDeviceRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateDeviceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDeviceRequest} obj Optional instance to populate.
     * @return {module:model/CreateDeviceRequest} The populated <code>CreateDeviceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDeviceRequest();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('push_provider')) {
                obj['push_provider'] = ApiClient.convertToType(data['push_provider'], 'String');
            }
            if (data.hasOwnProperty('push_provider_name')) {
                obj['push_provider_name'] = ApiClient.convertToType(data['push_provider_name'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserObjectRequest.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDeviceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDeviceRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['push_provider'] && !(typeof data['push_provider'] === 'string' || data['push_provider'] instanceof String)) {
            throw new Error("Expected the field `push_provider` to be a primitive type in the JSON string but got " + data['push_provider']);
        }
        // ensure the json data is a string
        if (data['push_provider_name'] && !(typeof data['push_provider_name'] === 'string' || data['push_provider_name'] instanceof String)) {
            throw new Error("Expected the field `push_provider_name` to be a primitive type in the JSON string but got " + data['push_provider_name']);
        }
        // ensure the json data is a string
        if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
            throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
CreateDeviceRequest.prototype['id'] = undefined;

/**
 * @member {module:model/CreateDeviceRequest.PushProviderEnum} push_provider
 */
CreateDeviceRequest.prototype['push_provider'] = undefined;

/**
 * @member {String} push_provider_name
 */
CreateDeviceRequest.prototype['push_provider_name'] = undefined;

/**
 * @member {module:model/UserObjectRequest} user
 */
CreateDeviceRequest.prototype['user'] = undefined;

/**
 * **Server-side only**. User ID which server acts upon
 * @member {String} user_id
 */
CreateDeviceRequest.prototype['user_id'] = undefined;





/**
 * Allowed values for the <code>push_provider</code> property.
 * @enum {String}
 * @readonly
 */
CreateDeviceRequest['PushProviderEnum'] = {

    /**
     * value: "firebase"
     * @const
     */
    "firebase": "firebase",

    /**
     * value: "apn"
     * @const
     */
    "apn": "apn",

    /**
     * value: "huawei"
     * @const
     */
    "huawei": "huawei",

    /**
     * value: "xiaomi"
     * @const
     */
    "xiaomi": "xiaomi"
};



export default CreateDeviceRequest;

