/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImportTaskHistory from './ImportTaskHistory';

/**
 * The ImportTask model module.
 * @module model/ImportTask
 * @version v80.2.0
 */
class ImportTask {
    /**
     * Constructs a new <code>ImportTask</code>.
     * @alias module:model/ImportTask
     * @param createdAt {Date} 
     * @param history {Array.<module:model/ImportTaskHistory>} 
     * @param id {String} 
     * @param mode {String} 
     * @param path {String} 
     * @param state {String} 
     * @param updatedAt {Date} 
     */
    constructor(createdAt, history, id, mode, path, state, updatedAt) { 
        
        ImportTask.initialize(this, createdAt, history, id, mode, path, state, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, history, id, mode, path, state, updatedAt) { 
        obj['created_at'] = createdAt;
        obj['history'] = history;
        obj['id'] = id;
        obj['mode'] = mode;
        obj['path'] = path;
        obj['state'] = state;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>ImportTask</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImportTask} obj Optional instance to populate.
     * @return {module:model/ImportTask} The populated <code>ImportTask</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImportTask();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('history')) {
                obj['history'] = ApiClient.convertToType(data['history'], [ImportTaskHistory]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = ApiClient.convertToType(data['result'], Object);
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImportTask</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImportTask</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImportTask.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['history']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['history'])) {
                throw new Error("Expected the field `history` to be an array in the JSON data but got " + data['history']);
            }
            // validate the optional field `history` (array)
            for (const item of data['history']) {
                ImportTaskHistory.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}

ImportTask.RequiredProperties = ["created_at", "history", "id", "mode", "path", "state", "updated_at"];

/**
 * @member {Date} created_at
 */
ImportTask.prototype['created_at'] = undefined;

/**
 * @member {Array.<module:model/ImportTaskHistory>} history
 */
ImportTask.prototype['history'] = undefined;

/**
 * @member {String} id
 */
ImportTask.prototype['id'] = undefined;

/**
 * @member {String} mode
 */
ImportTask.prototype['mode'] = undefined;

/**
 * @member {String} path
 */
ImportTask.prototype['path'] = undefined;

/**
 * @member {Object} result
 */
ImportTask.prototype['result'] = undefined;

/**
 * @member {Number} size
 */
ImportTask.prototype['size'] = undefined;

/**
 * @member {String} state
 */
ImportTask.prototype['state'] = undefined;

/**
 * @member {Date} updated_at
 */
ImportTask.prototype['updated_at'] = undefined;






export default ImportTask;

