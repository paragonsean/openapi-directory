/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelMember from './ChannelMember';
import ChannelResponse from './ChannelResponse';
import Message from './Message';
import PendingMessage from './PendingMessage';
import Read from './Read';
import UserObject from './UserObject';

/**
 * The ChannelStateResponseFields model module.
 * @module model/ChannelStateResponseFields
 * @version v80.2.0
 */
class ChannelStateResponseFields {
    /**
     * Constructs a new <code>ChannelStateResponseFields</code>.
     * @alias module:model/ChannelStateResponseFields
     * @param members {Array.<module:model/ChannelMember>} List of channel members
     * @param messages {Array.<module:model/Message>} List of channel messages
     * @param pinnedMessages {Array.<module:model/Message>} List of pinned messages in the channel
     */
    constructor(members, messages, pinnedMessages) { 
        
        ChannelStateResponseFields.initialize(this, members, messages, pinnedMessages);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, members, messages, pinnedMessages) { 
        obj['members'] = members;
        obj['messages'] = messages;
        obj['pinned_messages'] = pinnedMessages;
    }

    /**
     * Constructs a <code>ChannelStateResponseFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelStateResponseFields} obj Optional instance to populate.
     * @return {module:model/ChannelStateResponseFields} The populated <code>ChannelStateResponseFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelStateResponseFields();

            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ChannelResponse.constructFromObject(data['channel']);
            }
            if (data.hasOwnProperty('hidden')) {
                obj['hidden'] = ApiClient.convertToType(data['hidden'], 'Boolean');
            }
            if (data.hasOwnProperty('hide_messages_before')) {
                obj['hide_messages_before'] = ApiClient.convertToType(data['hide_messages_before'], 'Date');
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], [ChannelMember]);
            }
            if (data.hasOwnProperty('membership')) {
                obj['membership'] = ChannelMember.constructFromObject(data['membership']);
            }
            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [Message]);
            }
            if (data.hasOwnProperty('pending_messages')) {
                obj['pending_messages'] = ApiClient.convertToType(data['pending_messages'], [PendingMessage]);
            }
            if (data.hasOwnProperty('pinned_messages')) {
                obj['pinned_messages'] = ApiClient.convertToType(data['pinned_messages'], [Message]);
            }
            if (data.hasOwnProperty('read')) {
                obj['read'] = ApiClient.convertToType(data['read'], [Read]);
            }
            if (data.hasOwnProperty('watcher_count')) {
                obj['watcher_count'] = ApiClient.convertToType(data['watcher_count'], 'Number');
            }
            if (data.hasOwnProperty('watchers')) {
                obj['watchers'] = ApiClient.convertToType(data['watchers'], [UserObject]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelStateResponseFields</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelStateResponseFields</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ChannelStateResponseFields.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['members']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['members'])) {
                throw new Error("Expected the field `members` to be an array in the JSON data but got " + data['members']);
            }
            // validate the optional field `members` (array)
            for (const item of data['members']) {
                ChannelMember.validateJSON(item);
            };
        }
        // validate the optional field `membership`
        if (data['membership']) { // data not null
          ChannelMember.validateJSON(data['membership']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['messages'])) {
            throw new Error("Expected the field `messages` to be an array in the JSON data but got " + data['messages']);
        }
        if (data['pending_messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['pending_messages'])) {
                throw new Error("Expected the field `pending_messages` to be an array in the JSON data but got " + data['pending_messages']);
            }
            // validate the optional field `pending_messages` (array)
            for (const item of data['pending_messages']) {
                PendingMessage.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['pinned_messages'])) {
            throw new Error("Expected the field `pinned_messages` to be an array in the JSON data but got " + data['pinned_messages']);
        }
        if (data['read']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['read'])) {
                throw new Error("Expected the field `read` to be an array in the JSON data but got " + data['read']);
            }
            // validate the optional field `read` (array)
            for (const item of data['read']) {
                Read.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['watchers'])) {
            throw new Error("Expected the field `watchers` to be an array in the JSON data but got " + data['watchers']);
        }

        return true;
    }


}

ChannelStateResponseFields.RequiredProperties = ["members", "messages", "pinned_messages"];

/**
 * @member {module:model/ChannelResponse} channel
 */
ChannelStateResponseFields.prototype['channel'] = undefined;

/**
 * Whether this channel is hidden or not
 * @member {Boolean} hidden
 */
ChannelStateResponseFields.prototype['hidden'] = undefined;

/**
 * Messages before this date are hidden from the user
 * @member {Date} hide_messages_before
 */
ChannelStateResponseFields.prototype['hide_messages_before'] = undefined;

/**
 * List of channel members
 * @member {Array.<module:model/ChannelMember>} members
 */
ChannelStateResponseFields.prototype['members'] = undefined;

/**
 * @member {module:model/ChannelMember} membership
 */
ChannelStateResponseFields.prototype['membership'] = undefined;

/**
 * List of channel messages
 * @member {Array.<module:model/Message>} messages
 */
ChannelStateResponseFields.prototype['messages'] = undefined;

/**
 * Pending messages that this user has sent
 * @member {Array.<module:model/PendingMessage>} pending_messages
 */
ChannelStateResponseFields.prototype['pending_messages'] = undefined;

/**
 * List of pinned messages in the channel
 * @member {Array.<module:model/Message>} pinned_messages
 */
ChannelStateResponseFields.prototype['pinned_messages'] = undefined;

/**
 * List of read states
 * @member {Array.<module:model/Read>} read
 */
ChannelStateResponseFields.prototype['read'] = undefined;

/**
 * Number of channel watchers
 * @member {Number} watcher_count
 */
ChannelStateResponseFields.prototype['watcher_count'] = undefined;

/**
 * List of user who is watching the channel
 * @member {Array.<module:model/UserObject>} watchers
 */
ChannelStateResponseFields.prototype['watchers'] = undefined;






export default ChannelStateResponseFields;

