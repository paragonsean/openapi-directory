/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConfigRequest model module.
 * @module model/ConfigRequest
 * @version v80.2.0
 */
class ConfigRequest {
    /**
     * Constructs a new <code>ConfigRequest</code>.
     * @alias module:model/ConfigRequest
     * @param appCertificate {String} 
     * @param appId {String} 
     */
    constructor(appCertificate, appId) { 
        
        ConfigRequest.initialize(this, appCertificate, appId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appCertificate, appId) { 
        obj['app_certificate'] = appCertificate;
        obj['app_id'] = appId;
    }

    /**
     * Constructs a <code>ConfigRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfigRequest} obj Optional instance to populate.
     * @return {module:model/ConfigRequest} The populated <code>ConfigRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConfigRequest();

            if (data.hasOwnProperty('app_certificate')) {
                obj['app_certificate'] = ApiClient.convertToType(data['app_certificate'], 'String');
            }
            if (data.hasOwnProperty('app_id')) {
                obj['app_id'] = ApiClient.convertToType(data['app_id'], 'String');
            }
            if (data.hasOwnProperty('default_role')) {
                obj['default_role'] = ApiClient.convertToType(data['default_role'], 'String');
            }
            if (data.hasOwnProperty('role_map')) {
                obj['role_map'] = ApiClient.convertToType(data['role_map'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConfigRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConfigRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConfigRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['app_certificate'] && !(typeof data['app_certificate'] === 'string' || data['app_certificate'] instanceof String)) {
            throw new Error("Expected the field `app_certificate` to be a primitive type in the JSON string but got " + data['app_certificate']);
        }
        // ensure the json data is a string
        if (data['app_id'] && !(typeof data['app_id'] === 'string' || data['app_id'] instanceof String)) {
            throw new Error("Expected the field `app_id` to be a primitive type in the JSON string but got " + data['app_id']);
        }
        // ensure the json data is a string
        if (data['default_role'] && !(typeof data['default_role'] === 'string' || data['default_role'] instanceof String)) {
            throw new Error("Expected the field `default_role` to be a primitive type in the JSON string but got " + data['default_role']);
        }

        return true;
    }


}

ConfigRequest.RequiredProperties = ["app_certificate", "app_id"];

/**
 * @member {String} app_certificate
 */
ConfigRequest.prototype['app_certificate'] = undefined;

/**
 * @member {String} app_id
 */
ConfigRequest.prototype['app_id'] = undefined;

/**
 * @member {module:model/ConfigRequest.DefaultRoleEnum} default_role
 */
ConfigRequest.prototype['default_role'] = undefined;

/**
 * @member {Object.<String, String>} role_map
 */
ConfigRequest.prototype['role_map'] = undefined;





/**
 * Allowed values for the <code>default_role</code> property.
 * @enum {String}
 * @readonly
 */
ConfigRequest['DefaultRoleEnum'] = {

    /**
     * value: "attendee"
     * @const
     */
    "attendee": "attendee",

    /**
     * value: "publisher"
     * @const
     */
    "publisher": "publisher",

    /**
     * value: "subscriber"
     * @const
     */
    "subscriber": "subscriber",

    /**
     * value: "admin"
     * @const
     */
    "admin": "admin"
};



export default ConfigRequest;

