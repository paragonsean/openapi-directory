/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HuaweiConfigFields model module.
 * @module model/HuaweiConfigFields
 * @version v80.2.0
 */
class HuaweiConfigFields {
    /**
     * Constructs a new <code>HuaweiConfigFields</code>.
     * @alias module:model/HuaweiConfigFields
     * @param enabled {Boolean} 
     */
    constructor(enabled) { 
        
        HuaweiConfigFields.initialize(this, enabled);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enabled) { 
        obj['enabled'] = enabled;
    }

    /**
     * Constructs a <code>HuaweiConfigFields</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HuaweiConfigFields} obj Optional instance to populate.
     * @return {module:model/HuaweiConfigFields} The populated <code>HuaweiConfigFields</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HuaweiConfigFields();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HuaweiConfigFields</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HuaweiConfigFields</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HuaweiConfigFields.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }

        return true;
    }


}

HuaweiConfigFields.RequiredProperties = ["enabled"];

/**
 * @member {Boolean} enabled
 */
HuaweiConfigFields.prototype['enabled'] = undefined;

/**
 * @member {String} id
 */
HuaweiConfigFields.prototype['id'] = undefined;

/**
 * @member {String} secret
 */
HuaweiConfigFields.prototype['secret'] = undefined;






export default HuaweiConfigFields;

