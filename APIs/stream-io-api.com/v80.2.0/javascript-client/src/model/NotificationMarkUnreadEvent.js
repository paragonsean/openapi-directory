/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelResponse from './ChannelResponse';
import UserObject from './UserObject';

/**
 * The NotificationMarkUnreadEvent model module.
 * @module model/NotificationMarkUnreadEvent
 * @version v80.2.0
 */
class NotificationMarkUnreadEvent {
    /**
     * Constructs a new <code>NotificationMarkUnreadEvent</code>.
     * @alias module:model/NotificationMarkUnreadEvent
     * @param channelId {String} 
     * @param channelType {String} 
     * @param cid {String} 
     * @param createdAt {Date} 
     * @param firstUnreadMessageId {String} 
     * @param lastReadAt {Date} 
     * @param totalUnreadCount {Number} 
     * @param type {String} 
     * @param unreadChannels {Number} 
     * @param unreadCount {Number} 
     * @param unreadMessages {Number} 
     */
    constructor(channelId, channelType, cid, createdAt, firstUnreadMessageId, lastReadAt, totalUnreadCount, type, unreadChannels, unreadCount, unreadMessages) { 
        
        NotificationMarkUnreadEvent.initialize(this, channelId, channelType, cid, createdAt, firstUnreadMessageId, lastReadAt, totalUnreadCount, type, unreadChannels, unreadCount, unreadMessages);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, channelId, channelType, cid, createdAt, firstUnreadMessageId, lastReadAt, totalUnreadCount, type, unreadChannels, unreadCount, unreadMessages) { 
        obj['channel_id'] = channelId;
        obj['channel_type'] = channelType;
        obj['cid'] = cid;
        obj['created_at'] = createdAt;
        obj['first_unread_message_id'] = firstUnreadMessageId;
        obj['last_read_at'] = lastReadAt;
        obj['total_unread_count'] = totalUnreadCount;
        obj['type'] = type || 'notification.mark_unread';
        obj['unread_channels'] = unreadChannels;
        obj['unread_count'] = unreadCount;
        obj['unread_messages'] = unreadMessages;
    }

    /**
     * Constructs a <code>NotificationMarkUnreadEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationMarkUnreadEvent} obj Optional instance to populate.
     * @return {module:model/NotificationMarkUnreadEvent} The populated <code>NotificationMarkUnreadEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationMarkUnreadEvent();

            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ChannelResponse.constructFromObject(data['channel']);
            }
            if (data.hasOwnProperty('channel_id')) {
                obj['channel_id'] = ApiClient.convertToType(data['channel_id'], 'String');
            }
            if (data.hasOwnProperty('channel_type')) {
                obj['channel_type'] = ApiClient.convertToType(data['channel_type'], 'String');
            }
            if (data.hasOwnProperty('cid')) {
                obj['cid'] = ApiClient.convertToType(data['cid'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('first_unread_message_id')) {
                obj['first_unread_message_id'] = ApiClient.convertToType(data['first_unread_message_id'], 'String');
            }
            if (data.hasOwnProperty('last_read_at')) {
                obj['last_read_at'] = ApiClient.convertToType(data['last_read_at'], 'Date');
            }
            if (data.hasOwnProperty('team')) {
                obj['team'] = ApiClient.convertToType(data['team'], 'String');
            }
            if (data.hasOwnProperty('total_unread_count')) {
                obj['total_unread_count'] = ApiClient.convertToType(data['total_unread_count'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('unread_channels')) {
                obj['unread_channels'] = ApiClient.convertToType(data['unread_channels'], 'Number');
            }
            if (data.hasOwnProperty('unread_count')) {
                obj['unread_count'] = ApiClient.convertToType(data['unread_count'], 'Number');
            }
            if (data.hasOwnProperty('unread_messages')) {
                obj['unread_messages'] = ApiClient.convertToType(data['unread_messages'], 'Number');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserObject.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationMarkUnreadEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationMarkUnreadEvent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NotificationMarkUnreadEvent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['channel_id'] && !(typeof data['channel_id'] === 'string' || data['channel_id'] instanceof String)) {
            throw new Error("Expected the field `channel_id` to be a primitive type in the JSON string but got " + data['channel_id']);
        }
        // ensure the json data is a string
        if (data['channel_type'] && !(typeof data['channel_type'] === 'string' || data['channel_type'] instanceof String)) {
            throw new Error("Expected the field `channel_type` to be a primitive type in the JSON string but got " + data['channel_type']);
        }
        // ensure the json data is a string
        if (data['cid'] && !(typeof data['cid'] === 'string' || data['cid'] instanceof String)) {
            throw new Error("Expected the field `cid` to be a primitive type in the JSON string but got " + data['cid']);
        }
        // ensure the json data is a string
        if (data['first_unread_message_id'] && !(typeof data['first_unread_message_id'] === 'string' || data['first_unread_message_id'] instanceof String)) {
            throw new Error("Expected the field `first_unread_message_id` to be a primitive type in the JSON string but got " + data['first_unread_message_id']);
        }
        // ensure the json data is a string
        if (data['team'] && !(typeof data['team'] === 'string' || data['team'] instanceof String)) {
            throw new Error("Expected the field `team` to be a primitive type in the JSON string but got " + data['team']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

NotificationMarkUnreadEvent.RequiredProperties = ["channel_id", "channel_type", "cid", "created_at", "first_unread_message_id", "last_read_at", "total_unread_count", "type", "unread_channels", "unread_count", "unread_messages"];

/**
 * @member {module:model/ChannelResponse} channel
 */
NotificationMarkUnreadEvent.prototype['channel'] = undefined;

/**
 * @member {String} channel_id
 */
NotificationMarkUnreadEvent.prototype['channel_id'] = undefined;

/**
 * @member {String} channel_type
 */
NotificationMarkUnreadEvent.prototype['channel_type'] = undefined;

/**
 * @member {String} cid
 */
NotificationMarkUnreadEvent.prototype['cid'] = undefined;

/**
 * @member {Date} created_at
 */
NotificationMarkUnreadEvent.prototype['created_at'] = undefined;

/**
 * @member {String} first_unread_message_id
 */
NotificationMarkUnreadEvent.prototype['first_unread_message_id'] = undefined;

/**
 * @member {Date} last_read_at
 */
NotificationMarkUnreadEvent.prototype['last_read_at'] = undefined;

/**
 * @member {String} team
 */
NotificationMarkUnreadEvent.prototype['team'] = undefined;

/**
 * @member {Number} total_unread_count
 */
NotificationMarkUnreadEvent.prototype['total_unread_count'] = undefined;

/**
 * @member {String} type
 * @default 'notification.mark_unread'
 */
NotificationMarkUnreadEvent.prototype['type'] = 'notification.mark_unread';

/**
 * @member {Number} unread_channels
 */
NotificationMarkUnreadEvent.prototype['unread_channels'] = undefined;

/**
 * @member {Number} unread_count
 */
NotificationMarkUnreadEvent.prototype['unread_count'] = undefined;

/**
 * @member {Number} unread_messages
 */
NotificationMarkUnreadEvent.prototype['unread_messages'] = undefined;

/**
 * @member {module:model/UserObject} user
 */
NotificationMarkUnreadEvent.prototype['user'] = undefined;






export default NotificationMarkUnreadEvent;

