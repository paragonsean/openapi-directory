/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelConfigRequest from './ChannelConfigRequest';
import ChannelMemberRequest from './ChannelMemberRequest';
import UserObjectRequest from './UserObjectRequest';

/**
 * The ChannelRequest model module.
 * @module model/ChannelRequest
 * @version v80.2.0
 */
class ChannelRequest {
    /**
     * Constructs a new <code>ChannelRequest</code>.
     * @alias module:model/ChannelRequest
     * @extends Object
     */
    constructor() { 
        
        ChannelRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChannelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelRequest} obj Optional instance to populate.
     * @return {module:model/ChannelRequest} The populated <code>ChannelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelRequest();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('auto_translation_enabled')) {
                obj['auto_translation_enabled'] = ApiClient.convertToType(data['auto_translation_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('auto_translation_language')) {
                obj['auto_translation_language'] = ApiClient.convertToType(data['auto_translation_language'], 'String');
            }
            if (data.hasOwnProperty('config_overrides')) {
                obj['config_overrides'] = ChannelConfigRequest.constructFromObject(data['config_overrides']);
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = UserObjectRequest.constructFromObject(data['created_by']);
            }
            if (data.hasOwnProperty('disabled')) {
                obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
            }
            if (data.hasOwnProperty('frozen')) {
                obj['frozen'] = ApiClient.convertToType(data['frozen'], 'Boolean');
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], [ChannelMemberRequest]);
            }
            if (data.hasOwnProperty('own_capabilities')) {
                obj['own_capabilities'] = ApiClient.convertToType(data['own_capabilities'], ['Number']);
            }
            if (data.hasOwnProperty('team')) {
                obj['team'] = ApiClient.convertToType(data['team'], 'String');
            }
            if (data.hasOwnProperty('truncated_at')) {
                obj['truncated_at'] = ApiClient.convertToType(data['truncated_at'], ['Number']);
            }
            if (data.hasOwnProperty('truncated_by')) {
                obj['truncated_by'] = ApiClient.convertToType(data['truncated_by'], ['Number']);
            }
            if (data.hasOwnProperty('truncated_by_id')) {
                obj['truncated_by_id'] = ApiClient.convertToType(data['truncated_by_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['auto_translation_language'] && !(typeof data['auto_translation_language'] === 'string' || data['auto_translation_language'] instanceof String)) {
            throw new Error("Expected the field `auto_translation_language` to be a primitive type in the JSON string but got " + data['auto_translation_language']);
        }
        // validate the optional field `config_overrides`
        if (data['config_overrides']) { // data not null
          ChannelConfigRequest.validateJSON(data['config_overrides']);
        }
        if (data['members']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['members'])) {
                throw new Error("Expected the field `members` to be an array in the JSON data but got " + data['members']);
            }
            // validate the optional field `members` (array)
            for (const item of data['members']) {
                ChannelMemberRequest.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['own_capabilities'])) {
            throw new Error("Expected the field `own_capabilities` to be an array in the JSON data but got " + data['own_capabilities']);
        }
        // ensure the json data is a string
        if (data['team'] && !(typeof data['team'] === 'string' || data['team'] instanceof String)) {
            throw new Error("Expected the field `team` to be a primitive type in the JSON string but got " + data['team']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['truncated_at'])) {
            throw new Error("Expected the field `truncated_at` to be an array in the JSON data but got " + data['truncated_at']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['truncated_by'])) {
            throw new Error("Expected the field `truncated_by` to be an array in the JSON data but got " + data['truncated_by']);
        }
        // ensure the json data is a string
        if (data['truncated_by_id'] && !(typeof data['truncated_by_id'] === 'string' || data['truncated_by_id'] instanceof String)) {
            throw new Error("Expected the field `truncated_by_id` to be a primitive type in the JSON string but got " + data['truncated_by_id']);
        }

        return true;
    }


}



/**
 * Enable or disable auto translation
 * @member {Boolean} auto_translation_enabled
 */
ChannelRequest.prototype['auto_translation_enabled'] = undefined;

/**
 * Switch auto translation language
 * @member {String} auto_translation_language
 */
ChannelRequest.prototype['auto_translation_language'] = undefined;

/**
 * @member {module:model/ChannelConfigRequest} config_overrides
 */
ChannelRequest.prototype['config_overrides'] = undefined;

/**
 * @member {module:model/UserObjectRequest} created_by
 */
ChannelRequest.prototype['created_by'] = undefined;

/**
 * @member {Boolean} disabled
 */
ChannelRequest.prototype['disabled'] = undefined;

/**
 * Freeze or unfreeze the channel
 * @member {Boolean} frozen
 */
ChannelRequest.prototype['frozen'] = undefined;

/**
 * @member {Array.<module:model/ChannelMemberRequest>} members
 */
ChannelRequest.prototype['members'] = undefined;

/**
 * @member {Array.<Number>} own_capabilities
 */
ChannelRequest.prototype['own_capabilities'] = undefined;

/**
 * Team the channel belongs to (if multi-tenant mode is enabled)
 * @member {String} team
 */
ChannelRequest.prototype['team'] = undefined;

/**
 * @member {Array.<Number>} truncated_at
 */
ChannelRequest.prototype['truncated_at'] = undefined;

/**
 * @member {Array.<Number>} truncated_by
 */
ChannelRequest.prototype['truncated_by'] = undefined;

/**
 * @member {String} truncated_by_id
 */
ChannelRequest.prototype['truncated_by_id'] = undefined;






export default ChannelRequest;

