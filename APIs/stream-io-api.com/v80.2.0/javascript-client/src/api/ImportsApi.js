/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIError from '../model/APIError';
import CreateImportRequest from '../model/CreateImportRequest';
import CreateImportResponse from '../model/CreateImportResponse';
import CreateImportURLRequest from '../model/CreateImportURLRequest';
import CreateImportURLResponse from '../model/CreateImportURLResponse';
import GetImportResponse from '../model/GetImportResponse';
import ListImportsResponse from '../model/ListImportsResponse';

/**
* Imports service.
* @module api/ImportsApi
* @version v80.2.0
*/
export default class ImportsApi {

    /**
    * Constructs a new ImportsApi. 
    * @alias module:api/ImportsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createImport operation.
     * @callback module:api/ImportsApi~createImportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateImportResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create import
     * Creates a new import 
     * @param {module:model/CreateImportRequest} createImportRequest 
     * @param {module:api/ImportsApi~createImportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateImportResponse}
     */
    createImport(createImportRequest, callback) {
      let postBody = createImportRequest;
      // verify the required parameter 'createImportRequest' is set
      if (createImportRequest === undefined || createImportRequest === null) {
        throw new Error("Missing the required parameter 'createImportRequest' when calling createImport");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['stream-auth-type', 'api_key', 'JWT'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateImportResponse;
      return this.apiClient.callApi(
        '/imports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createImportURL operation.
     * @callback module:api/ImportsApi~createImportURLCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreateImportURLResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create import URL
     * Creates a new import URL 
     * @param {module:model/CreateImportURLRequest} createImportURLRequest 
     * @param {module:api/ImportsApi~createImportURLCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreateImportURLResponse}
     */
    createImportURL(createImportURLRequest, callback) {
      let postBody = createImportURLRequest;
      // verify the required parameter 'createImportURLRequest' is set
      if (createImportURLRequest === undefined || createImportURLRequest === null) {
        throw new Error("Missing the required parameter 'createImportURLRequest' when calling createImportURL");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['stream-auth-type', 'api_key', 'JWT'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateImportURLResponse;
      return this.apiClient.callApi(
        '/import_urls', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getImport operation.
     * @callback module:api/ImportsApi~getImportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetImportResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get import
     * Gets an import 
     * @param {String} id 
     * @param {module:api/ImportsApi~getImportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetImportResponse}
     */
    getImport(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getImport");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['stream-auth-type', 'api_key', 'JWT'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetImportResponse;
      return this.apiClient.callApi(
        '/imports/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listImports operation.
     * @callback module:api/ImportsApi~listImportsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListImportsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get import
     * Gets an import 
     * @param {module:api/ImportsApi~listImportsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListImportsResponse}
     */
    listImports(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['stream-auth-type', 'api_key', 'JWT'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListImportsResponse;
      return this.apiClient.callApi(
        '/imports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
