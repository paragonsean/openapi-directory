/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StreamChatApi);
  }
}(this, function(expect, StreamChatApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StreamChatApi.Campaign();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Campaign', function() {
    it('should create an instance of Campaign', function() {
      // uncomment below and update the code to test Campaign
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be.a(StreamChatApi.Campaign);
    });

    it('should have the property attachments (base name: "attachments")', function() {
      // uncomment below and update the code to test the property attachments
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property channelType (base name: "channel_type")', function() {
      // uncomment below and update the code to test the property channelType
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property completedAt (base name: "completed_at")', function() {
      // uncomment below and update the code to test the property completedAt
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property defaults (base name: "defaults")', function() {
      // uncomment below and update the code to test the property defaults
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property details (base name: "details")', function() {
      // uncomment below and update the code to test the property details
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property erroredMessages (base name: "errored_messages")', function() {
      // uncomment below and update the code to test the property erroredMessages
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property failedAt (base name: "failed_at")', function() {
      // uncomment below and update the code to test the property failedAt
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property resumedAt (base name: "resumed_at")', function() {
      // uncomment below and update the code to test the property resumedAt
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property scheduledAt (base name: "scheduled_at")', function() {
      // uncomment below and update the code to test the property scheduledAt
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property scheduledFor (base name: "scheduled_for")', function() {
      // uncomment below and update the code to test the property scheduledFor
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property segmentId (base name: "segment_id")', function() {
      // uncomment below and update the code to test the property segmentId
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property senderId (base name: "sender_id")', function() {
      // uncomment below and update the code to test the property senderId
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property sentMessages (base name: "sent_messages")', function() {
      // uncomment below and update the code to test the property sentMessages
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property stoppedAt (base name: "stopped_at")', function() {
      // uncomment below and update the code to test the property stoppedAt
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property taskId (base name: "task_id")', function() {
      // uncomment below and update the code to test the property taskId
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property text (base name: "text")', function() {
      // uncomment below and update the code to test the property text
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new StreamChatApi.Campaign();
      //expect(instance).to.be();
    });

  });

}));
