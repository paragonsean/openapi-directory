/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StreamChatApi);
  }
}(this, function(expect, StreamChatApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StreamChatApi.GetOGResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GetOGResponse', function() {
    it('should create an instance of GetOGResponse', function() {
      // uncomment below and update the code to test GetOGResponse
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be.a(StreamChatApi.GetOGResponse);
    });

    it('should have the property actions (base name: "actions")', function() {
      // uncomment below and update the code to test the property actions
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property assetUrl (base name: "asset_url")', function() {
      // uncomment below and update the code to test the property assetUrl
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property authorIcon (base name: "author_icon")', function() {
      // uncomment below and update the code to test the property authorIcon
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property authorLink (base name: "author_link")', function() {
      // uncomment below and update the code to test the property authorLink
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property authorName (base name: "author_name")', function() {
      // uncomment below and update the code to test the property authorName
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property color (base name: "color")', function() {
      // uncomment below and update the code to test the property color
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property fallback (base name: "fallback")', function() {
      // uncomment below and update the code to test the property fallback
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property fields (base name: "fields")', function() {
      // uncomment below and update the code to test the property fields
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property footer (base name: "footer")', function() {
      // uncomment below and update the code to test the property footer
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property footerIcon (base name: "footer_icon")', function() {
      // uncomment below and update the code to test the property footerIcon
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property giphy (base name: "giphy")', function() {
      // uncomment below and update the code to test the property giphy
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property imageUrl (base name: "image_url")', function() {
      // uncomment below and update the code to test the property imageUrl
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property ogScrapeUrl (base name: "og_scrape_url")', function() {
      // uncomment below and update the code to test the property ogScrapeUrl
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property originalHeight (base name: "original_height")', function() {
      // uncomment below and update the code to test the property originalHeight
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property originalWidth (base name: "original_width")', function() {
      // uncomment below and update the code to test the property originalWidth
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property pretext (base name: "pretext")', function() {
      // uncomment below and update the code to test the property pretext
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property text (base name: "text")', function() {
      // uncomment below and update the code to test the property text
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property thumbUrl (base name: "thumb_url")', function() {
      // uncomment below and update the code to test the property thumbUrl
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property titleLink (base name: "title_link")', function() {
      // uncomment below and update the code to test the property titleLink
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new StreamChatApi.GetOGResponse();
      //expect(instance).to.be();
    });

  });

}));
