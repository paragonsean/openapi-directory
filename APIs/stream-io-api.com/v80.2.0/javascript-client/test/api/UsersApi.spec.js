/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StreamChatApi);
  }
}(this, function(expect, StreamChatApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StreamChatApi.UsersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersApi', function() {
    describe('ban', function() {
      it('should call ban successfully', function(done) {
        //uncomment below and update the code to test ban
        //instance.ban(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('connect', function() {
      it('should call connect successfully', function(done) {
        //uncomment below and update the code to test connect
        //instance.connect(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGuest', function() {
      it('should call createGuest successfully', function(done) {
        //uncomment below and update the code to test createGuest
        //instance.createGuest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deactivateUser', function() {
      it('should call deactivateUser successfully', function(done) {
        //uncomment below and update the code to test deactivateUser
        //instance.deactivateUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deactivateUsers', function() {
      it('should call deactivateUsers successfully', function(done) {
        //uncomment below and update the code to test deactivateUsers
        //instance.deactivateUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUser', function() {
      it('should call deleteUser successfully', function(done) {
        //uncomment below and update the code to test deleteUser
        //instance.deleteUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUsers', function() {
      it('should call deleteUsers successfully', function(done) {
        //uncomment below and update the code to test deleteUsers
        //instance.deleteUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportUser', function() {
      it('should call exportUser successfully', function(done) {
        //uncomment below and update the code to test exportUser
        //instance.exportUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('flag_1', function() {
      it('should call flag_1 successfully', function(done) {
        //uncomment below and update the code to test flag_1
        //instance.flag_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('longPoll', function() {
      it('should call longPoll successfully', function(done) {
        //uncomment below and update the code to test longPoll
        //instance.longPoll(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('muteUser', function() {
      it('should call muteUser successfully', function(done) {
        //uncomment below and update the code to test muteUser
        //instance.muteUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queryBannedUsers', function() {
      it('should call queryBannedUsers successfully', function(done) {
        //uncomment below and update the code to test queryBannedUsers
        //instance.queryBannedUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queryUsers', function() {
      it('should call queryUsers successfully', function(done) {
        //uncomment below and update the code to test queryUsers
        //instance.queryUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactivateUser', function() {
      it('should call reactivateUser successfully', function(done) {
        //uncomment below and update the code to test reactivateUser
        //instance.reactivateUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reactivateUsers', function() {
      it('should call reactivateUsers successfully', function(done) {
        //uncomment below and update the code to test reactivateUsers
        //instance.reactivateUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restoreUsers', function() {
      it('should call restoreUsers successfully', function(done) {
        //uncomment below and update the code to test restoreUsers
        //instance.restoreUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unban', function() {
      it('should call unban successfully', function(done) {
        //uncomment below and update the code to test unban
        //instance.unban(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unflag_1', function() {
      it('should call unflag_1 successfully', function(done) {
        //uncomment below and update the code to test unflag_1
        //instance.unflag_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unmuteUser', function() {
      it('should call unmuteUser successfully', function(done) {
        //uncomment below and update the code to test unmuteUser
        //instance.unmuteUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUsers', function() {
      it('should call updateUsers successfully', function(done) {
        //uncomment below and update the code to test updateUsers
        //instance.updateUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUsersPartial', function() {
      it('should call updateUsersPartial successfully', function(done) {
        //uncomment below and update the code to test updateUsersPartial
        //instance.updateUsersPartial(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersUserIdExportGet', function() {
      it('should call usersUserIdExportGet successfully', function(done) {
        //uncomment below and update the code to test usersUserIdExportGet
        //instance.usersUserIdExportGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
