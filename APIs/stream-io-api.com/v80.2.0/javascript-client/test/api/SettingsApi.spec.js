/**
 * Stream Chat API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v80.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StreamChatApi);
  }
}(this, function(expect, StreamChatApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StreamChatApi.SettingsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SettingsApi', function() {
    describe('checkPush', function() {
      it('should call checkPush successfully', function(done) {
        //uncomment below and update the code to test checkPush
        //instance.checkPush(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkSQS', function() {
      it('should call checkSQS successfully', function(done) {
        //uncomment below and update the code to test checkSQS
        //instance.checkSQS(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBlockList', function() {
      it('should call createBlockList successfully', function(done) {
        //uncomment below and update the code to test createBlockList
        //instance.createBlockList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createChannelType', function() {
      it('should call createChannelType successfully', function(done) {
        //uncomment below and update the code to test createChannelType
        //instance.createChannelType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBlockList', function() {
      it('should call deleteBlockList successfully', function(done) {
        //uncomment below and update the code to test deleteBlockList
        //instance.deleteBlockList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteChannelType', function() {
      it('should call deleteChannelType successfully', function(done) {
        //uncomment below and update the code to test deleteChannelType
        //instance.deleteChannelType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePushProvider_0', function() {
      it('should call deletePushProvider_0 successfully', function(done) {
        //uncomment below and update the code to test deletePushProvider_0
        //instance.deletePushProvider_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApp', function() {
      it('should call getApp successfully', function(done) {
        //uncomment below and update the code to test getApp
        //instance.getApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBlockList', function() {
      it('should call getBlockList successfully', function(done) {
        //uncomment below and update the code to test getBlockList
        //instance.getBlockList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChannelType', function() {
      it('should call getChannelType successfully', function(done) {
        //uncomment below and update the code to test getChannelType
        //instance.getChannelType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRateLimits', function() {
      it('should call getRateLimits successfully', function(done) {
        //uncomment below and update the code to test getRateLimits
        //instance.getRateLimits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listBlockLists', function() {
      it('should call listBlockLists successfully', function(done) {
        //uncomment below and update the code to test listBlockLists
        //instance.listBlockLists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listChannelTypes', function() {
      it('should call listChannelTypes successfully', function(done) {
        //uncomment below and update the code to test listChannelTypes
        //instance.listChannelTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPushProviders_0', function() {
      it('should call listPushProviders_0 successfully', function(done) {
        //uncomment below and update the code to test listPushProviders_0
        //instance.listPushProviders_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateApp', function() {
      it('should call updateApp successfully', function(done) {
        //uncomment below and update the code to test updateApp
        //instance.updateApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBlockList', function() {
      it('should call updateBlockList successfully', function(done) {
        //uncomment below and update the code to test updateBlockList
        //instance.updateBlockList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateChannelType', function() {
      it('should call updateChannelType successfully', function(done) {
        //uncomment below and update the code to test updateChannelType
        //instance.updateChannelType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('upsertPushProvider_0', function() {
      it('should call upsertPushProvider_0 successfully', function(done) {
        //uncomment below and update the code to test upsertPushProvider_0
        //instance.upsertPushProvider_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
