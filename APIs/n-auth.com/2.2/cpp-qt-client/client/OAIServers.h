/**
 * nextAuth API
 * API for the nextAuth server
 *
 * The version of the OpenAPI document: 2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServers.h
 *
 * 
 */

#ifndef OAIServers_H
#define OAIServers_H

#include <QJsonObject>

#include "OAIServer.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIServer;

class OAIServers : public OAIObject {
public:
    OAIServers();
    OAIServers(QString json);
    ~OAIServers() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIServer> getServers() const;
    void setServers(const QList<OAIServer> &servers);
    bool is_servers_Set() const;
    bool is_servers_Valid() const;

    qint32 getTotalnumber() const;
    void setTotalnumber(const qint32 &totalnumber);
    bool is_totalnumber_Set() const;
    bool is_totalnumber_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIServer> m_servers;
    bool m_servers_isSet;
    bool m_servers_isValid;

    qint32 m_totalnumber;
    bool m_totalnumber_isSet;
    bool m_totalnumber_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServers)

#endif // OAIServers_H
