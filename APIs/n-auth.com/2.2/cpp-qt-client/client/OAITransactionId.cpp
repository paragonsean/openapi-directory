/**
 * nextAuth API
 * API for the nextAuth server
 *
 * The version of the OpenAPI document: 2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransactionId.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransactionId::OAITransactionId(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransactionId::OAITransactionId() {
    this->initializeModel();
}

OAITransactionId::~OAITransactionId() {}

void OAITransactionId::initializeModel() {

    m_tid_isSet = false;
    m_tid_isValid = false;
}

void OAITransactionId::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransactionId::fromJsonObject(QJsonObject json) {

    m_tid_isValid = ::OpenAPI::fromJsonValue(m_tid, json[QString("tid")]);
    m_tid_isSet = !json[QString("tid")].isNull() && m_tid_isValid;
}

QString OAITransactionId::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransactionId::asJsonObject() const {
    QJsonObject obj;
    if (m_tid_isSet) {
        obj.insert(QString("tid"), ::OpenAPI::toJsonValue(m_tid));
    }
    return obj;
}

QString OAITransactionId::getTid() const {
    return m_tid;
}
void OAITransactionId::setTid(const QString &tid) {
    m_tid = tid;
    m_tid_isSet = true;
}

bool OAITransactionId::is_tid_Set() const{
    return m_tid_isSet;
}

bool OAITransactionId::is_tid_Valid() const{
    return m_tid_isValid;
}

bool OAITransactionId::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransactionId::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
