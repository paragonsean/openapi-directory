/**
 * nextAuth API
 * API for the nextAuth server
 *
 * The version of the OpenAPI document: 2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISessionInfo.h
 *
 * 
 */

#ifndef OAISessionInfo_H
#define OAISessionInfo_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISessionInfo : public OAIObject {
public:
    OAISessionInfo();
    OAISessionInfo(QString json);
    ~OAISessionInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getInfo() const;
    void setInfo(const OAIObject &info);
    bool is_info_Set() const;
    bool is_info_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    QByteArray getLogo() const;
    void setLogo(const QByteArray &logo);
    bool is_logo_Set() const;
    bool is_logo_Valid() const;

    QString getUseragent() const;
    void setUseragent(const QString &useragent);
    bool is_useragent_Set() const;
    bool is_useragent_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_info;
    bool m_info_isSet;
    bool m_info_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    QByteArray m_logo;
    bool m_logo_isSet;
    bool m_logo_isValid;

    QString m_useragent;
    bool m_useragent_isSet;
    bool m_useragent_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISessionInfo)

#endif // OAISessionInfo_H
