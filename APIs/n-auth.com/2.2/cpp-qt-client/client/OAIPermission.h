/**
 * nextAuth API
 * API for the nextAuth server
 *
 * The version of the OpenAPI document: 2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPermission.h
 *
 * 
 */

#ifndef OAIPermission_H
#define OAIPermission_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPermission : public OAIObject {
public:
    OAIPermission();
    OAIPermission(QString json);
    ~OAIPermission() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcl() const;
    void setAcl(const QString &acl);
    bool is_acl_Set() const;
    bool is_acl_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    QString getServer() const;
    void setServer(const QString &server);
    bool is_server_Set() const;
    bool is_server_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_acl;
    bool m_acl_isSet;
    bool m_acl_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    QString m_server;
    bool m_server_isSet;
    bool m_server_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPermission)

#endif // OAIPermission_H
