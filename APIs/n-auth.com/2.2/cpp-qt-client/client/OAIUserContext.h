/**
 * nextAuth API
 * API for the nextAuth server
 *
 * The version of the OpenAPI document: 2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserContext.h
 *
 * 
 */

#ifndef OAIUserContext_H
#define OAIUserContext_H

#include <QJsonObject>

#include "OAISessionInfo.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISessionInfo;

class OAIUserContext : public OAIObject {
public:
    OAIUserContext();
    OAIUserContext(QString json);
    ~OAIUserContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISessionInfo getAnnounceinfo() const;
    void setAnnounceinfo(const OAISessionInfo &announceinfo);
    bool is_announceinfo_Set() const;
    bool is_announceinfo_Valid() const;

    OAISessionInfo getSessioninfo() const;
    void setSessioninfo(const OAISessionInfo &sessioninfo);
    bool is_sessioninfo_Set() const;
    bool is_sessioninfo_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISessionInfo m_announceinfo;
    bool m_announceinfo_isSet;
    bool m_announceinfo_isValid;

    OAISessionInfo m_sessioninfo;
    bool m_sessioninfo_isSet;
    bool m_sessioninfo_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserContext)

#endif // OAIUserContext_H
