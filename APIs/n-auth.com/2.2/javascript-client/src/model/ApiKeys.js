/**
 * nextAuth API
 * API for the nextAuth server
 *
 * The version of the OpenAPI document: 2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiKey from './ApiKey';

/**
 * The ApiKeys model module.
 * @module model/ApiKeys
 * @version 2.2
 */
class ApiKeys {
    /**
     * Constructs a new <code>ApiKeys</code>.
     * @alias module:model/ApiKeys
     * @param apikeys {Array.<module:model/ApiKey>} Array of apikeys
     */
    constructor(apikeys) { 
        
        ApiKeys.initialize(this, apikeys);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, apikeys) { 
        obj['apikeys'] = apikeys;
    }

    /**
     * Constructs a <code>ApiKeys</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiKeys} obj Optional instance to populate.
     * @return {module:model/ApiKeys} The populated <code>ApiKeys</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiKeys();

            if (data.hasOwnProperty('apikeys')) {
                obj['apikeys'] = ApiClient.convertToType(data['apikeys'], [ApiKey]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiKeys</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiKeys</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiKeys.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['apikeys']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['apikeys'])) {
                throw new Error("Expected the field `apikeys` to be an array in the JSON data but got " + data['apikeys']);
            }
            // validate the optional field `apikeys` (array)
            for (const item of data['apikeys']) {
                ApiKey.validateJSON(item);
            };
        }

        return true;
    }


}

ApiKeys.RequiredProperties = ["apikeys"];

/**
 * Array of apikeys
 * @member {Array.<module:model/ApiKey>} apikeys
 */
ApiKeys.prototype['apikeys'] = undefined;






export default ApiKeys;

