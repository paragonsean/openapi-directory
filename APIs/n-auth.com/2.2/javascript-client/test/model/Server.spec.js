/**
 * nextAuth API
 * API for the nextAuth server
 *
 * The version of the OpenAPI document: 2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NextAuthApi);
  }
}(this, function(expect, NextAuthApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NextAuthApi.Server();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Server', function() {
    it('should create an instance of Server', function() {
      // uncomment below and update the code to test Server
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be.a(NextAuthApi.Server);
    });

    it('should have the property accountCount (base name: "accountCount")', function() {
      // uncomment below and update the code to test the property accountCount
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property appandroid (base name: "appandroid")', function() {
      // uncomment below and update the code to test the property appandroid
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property appios (base name: "appios")', function() {
      // uncomment below and update the code to test the property appios
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property appname (base name: "appname")', function() {
      // uncomment below and update the code to test the property appname
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property appurl (base name: "appurl")', function() {
      // uncomment below and update the code to test the property appurl
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property lastLogin (base name: "lastLogin")', function() {
      // uncomment below and update the code to test the property lastLogin
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property logo (base name: "logo")', function() {
      // uncomment below and update the code to test the property logo
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property owner (base name: "owner")', function() {
      // uncomment below and update the code to test the property owner
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property pinTimeout (base name: "pinTimeout")', function() {
      // uncomment below and update the code to test the property pinTimeout
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property pinTransTimeout (base name: "pinTransTimeout")', function() {
      // uncomment below and update the code to test the property pinTransTimeout
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property pingTime (base name: "pingTime")', function() {
      // uncomment below and update the code to test the property pingTime
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property serverFlags (base name: "serverFlags")', function() {
      // uncomment below and update the code to test the property serverFlags
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property serverName (base name: "serverName")', function() {
      // uncomment below and update the code to test the property serverName
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property serverid (base name: "serverid")', function() {
      // uncomment below and update the code to test the property serverid
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property serverpk (base name: "serverpk")', function() {
      // uncomment below and update the code to test the property serverpk
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property siteurl (base name: "siteurl")', function() {
      // uncomment below and update the code to test the property siteurl
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

    it('should have the property wsurl (base name: "wsurl")', function() {
      // uncomment below and update the code to test the property wsurl
      //var instance = new NextAuthApi.Server();
      //expect(instance).to.be();
    });

  });

}));
