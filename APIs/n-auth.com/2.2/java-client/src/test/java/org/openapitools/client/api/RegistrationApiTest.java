/*
 * nextAuth API
 * API for the nextAuth server
 *
 * The version of the OpenAPI document: 2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Account;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RegistrationApi
 */
@Disabled
public class RegistrationApiTest {

    private final RegistrationApi api = new RegistrationApi();

    /**
     * Generate data for an enrol qr code
     *
     * Returns the data for an enrol qr code. Required permission: &#39;sessions&#39;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQrEnrolTest() throws ApiException {
        String serverid = null;
        String xNonce = null;
        String name = null;
        String userid = null;
        String img = null;
        Integer s = null;
        File response = api.getQrEnrol(serverid, xNonce, name, userid, img, s);
        // TODO: test validations
    }

    /**
     * Visual hash of this server
     *
     * Returns a PNG of the visual hash corresponding to this server. This visual hash is used during the registration process (optional), for the user to verify that (s)he is registering with the right server in the nextAuth app. For single-server nextAuth-enabled apps (white label or mobile SDK), the public key of the server is typically pinned within the app and hence this visual hash is not displayed to the user. Required permission: &#39;sessions&#39; or &#39;servers&#39;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getServerVashTest() throws ApiException {
        String serverid = null;
        File response = api.getServerVash(serverid);
        // TODO: test validations
    }

    /**
     * Register a userid for the currently logged in account.
     *
     * Register a user for the currently logged in account. You can also directly pass a user name when generating an ENROL qr code. Required permission: &#39;users&#39;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registerUser_0Test() throws ApiException {
        String serverid = null;
        String xNonce = null;
        String userid = null;
        api.registerUser_0(serverid, xNonce, userid);
        // TODO: test validations
    }

    /**
     * Update user of the given account.
     *
     * Update the user of the given account. Required permission: &#39;accounts&#39;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccountUser_0Test() throws ApiException {
        String serverid = null;
        Integer accountid = null;
        String userid = null;
        Account response = api.updateAccountUser_0(serverid, accountid, userid);
        // TODO: test validations
    }

}
