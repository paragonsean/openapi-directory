/*
 * nextAuth API
 * API for the nextAuth server
 *
 * The version of the OpenAPI document: 2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HtmlFooterBody;
import org.openapitools.client.model.LoginStatus;
import org.openapitools.client.model.UserContext;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HtmlApi
 */
@Disabled
public class HtmlApiTest {

    private final HtmlApi api = new HtmlApi();

    /**
     * Generate HTML to enrol a new user
     *
     * Generate HTML to enrol a new user. Required permission: &#39;sessions&#39;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHtmlEnrolTest() throws ApiException {
        String serverid = null;
        String xNonce = null;
        String name = null;
        String userid = null;
        String response = api.getHtmlEnrol(serverid, xNonce, name, userid);
        // TODO: test validations
    }

    /**
     * Generic HTML to add to footer. Required for login/logout/enrol functionality.
     *
     * HTML to add to footer of HTML page. Required permission: &#39;sessions&#39;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHtmlFooterTest() throws ApiException {
        String serverid = null;
        String xNonce = null;
        HtmlFooterBody htmlFooterBody = null;
        String response = api.getHtmlFooter(serverid, xNonce, htmlFooterBody);
        // TODO: test validations
    }

    /**
     * Generate HTML for the login block
     *
     * Generate HTML for the login block. Required permission: &#39;sessions&#39;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHtmlLoginTest() throws ApiException {
        String serverid = null;
        String xNonce = null;
        UserContext userContext = null;
        String response = api.getHtmlLogin(serverid, xNonce, userContext);
        // TODO: test validations
    }

    /**
     * Check if the user is logged in
     *
     * Based on the browser/webserver session identifier, check if the user is logged in and return the associated username. This also returns additional information: the data for the login qr code and whether or not a loggin can be provoked directly from the server. Required permission: &#39;sessions&#39;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSession_0Test() throws ApiException {
        String serverid = null;
        String xNonce = null;
        LoginStatus response = api.getSession_0(serverid, xNonce);
        // TODO: test validations
    }

    /**
     * Force a logout on the given session
     *
     * Force a logout on the given session. Required permission: &#39;sessions&#39;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void logout_0Test() throws ApiException {
        String serverid = null;
        String xNonce = null;
        api.logout_0(serverid, xNonce);
        // TODO: test validations
    }

}
