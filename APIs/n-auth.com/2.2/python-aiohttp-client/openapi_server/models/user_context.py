# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.session_info import SessionInfo
from openapi_server import util


class UserContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, announceinfo: SessionInfo=None, sessioninfo: SessionInfo=None):
        """UserContext - a model defined in OpenAPI

        :param announceinfo: The announceinfo of this UserContext.
        :param sessioninfo: The sessioninfo of this UserContext.
        """
        self.openapi_types = {
            'announceinfo': SessionInfo,
            'sessioninfo': SessionInfo
        }

        self.attribute_map = {
            'announceinfo': 'announceinfo',
            'sessioninfo': 'sessioninfo'
        }

        self._announceinfo = announceinfo
        self._sessioninfo = sessioninfo

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserContext of this UserContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def announceinfo(self):
        """Gets the announceinfo of this UserContext.


        :return: The announceinfo of this UserContext.
        :rtype: SessionInfo
        """
        return self._announceinfo

    @announceinfo.setter
    def announceinfo(self, announceinfo):
        """Sets the announceinfo of this UserContext.


        :param announceinfo: The announceinfo of this UserContext.
        :type announceinfo: SessionInfo
        """

        self._announceinfo = announceinfo

    @property
    def sessioninfo(self):
        """Gets the sessioninfo of this UserContext.


        :return: The sessioninfo of this UserContext.
        :rtype: SessionInfo
        """
        return self._sessioninfo

    @sessioninfo.setter
    def sessioninfo(self, sessioninfo):
        """Sets the sessioninfo of this UserContext.


        :param sessioninfo: The sessioninfo of this UserContext.
        :type sessioninfo: SessionInfo
        """

        self._sessioninfo = sessioninfo
