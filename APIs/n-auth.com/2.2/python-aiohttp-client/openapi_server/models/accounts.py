# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account import Account
from openapi_server import util


class Accounts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accounts: List[Account]=None, totalnumber: int=None):
        """Accounts - a model defined in OpenAPI

        :param accounts: The accounts of this Accounts.
        :param totalnumber: The totalnumber of this Accounts.
        """
        self.openapi_types = {
            'accounts': List[Account],
            'totalnumber': int
        }

        self.attribute_map = {
            'accounts': 'accounts',
            'totalnumber': 'totalnumber'
        }

        self._accounts = accounts
        self._totalnumber = totalnumber

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Accounts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Accounts of this Accounts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accounts(self):
        """Gets the accounts of this Accounts.

        Array of accounts

        :return: The accounts of this Accounts.
        :rtype: List[Account]
        """
        return self._accounts

    @accounts.setter
    def accounts(self, accounts):
        """Sets the accounts of this Accounts.

        Array of accounts

        :param accounts: The accounts of this Accounts.
        :type accounts: List[Account]
        """
        if accounts is None:
            raise ValueError("Invalid value for `accounts`, must not be `None`")

        self._accounts = accounts

    @property
    def totalnumber(self):
        """Gets the totalnumber of this Accounts.

        total number of accounts

        :return: The totalnumber of this Accounts.
        :rtype: int
        """
        return self._totalnumber

    @totalnumber.setter
    def totalnumber(self, totalnumber):
        """Sets the totalnumber of this Accounts.

        total number of accounts

        :param totalnumber: The totalnumber of this Accounts.
        :type totalnumber: int
        """

        self._totalnumber = totalnumber
