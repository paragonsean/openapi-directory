/**
 * Apicurio Registry API [v2]
 * Apicurio Registry is a datastore for standard event schemas and API designs. Apicurio Registry enables developers to manage and share the structure of their data using a REST interface. For example, client applications can dynamically push or pull the latest updates to or from the registry without needing to redeploy. Apicurio Registry also enables developers to create rules that govern how registry content can evolve over time. For example, this includes rules for content validation and version compatibility.  The Apicurio Registry REST API enables client applications to manage the artifacts in the registry. This API provides create, read, update, and delete operations for schema and API artifacts, rules, versions, and metadata.   The supported artifact types include: - Apache Avro schema - AsyncAPI specification - Google protocol buffers - GraphQL schema - JSON Schema - Kafka Connect schema - OpenAPI specification - Web Services Description Language - XML Schema Definition   **Important**: The Apicurio Registry REST API is available from `https://MY-REGISTRY-URL/apis/registry/v2` by default. Therefore you must prefix all API operation paths with `../apis/registry/v2` in this case. For example: `../apis/registry/v2/ids/globalIds/{globalId}`. 
 *
 * The version of the OpenAPI document: 2.4.x
 * Contact: apicurio@lists.jboss.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import Limits from '../model/Limits';
import SystemInfo from '../model/SystemInfo';

/**
* System service.
* @module api/SystemApi
* @version 2.4.x
*/
export default class SystemApi {

    /**
    * Constructs a new SystemApi. 
    * @alias module:api/SystemApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getResourceLimits operation.
     * @callback module:api/SystemApi~getResourceLimitsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Limits} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get resource limits information
     * This operation retrieves the list of limitations on used resources, that are applied on the current instance of Registry.
     * @param {module:api/SystemApi~getResourceLimitsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Limits}
     */
    getResourceLimits(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Limits;
      return this.apiClient.callApi(
        '/system/limits', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSystemInfo operation.
     * @callback module:api/SystemApi~getSystemInfoCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SystemInfo} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get system information
     * This operation retrieves information about the running registry system, such as the version of the software and when it was built.
     * @param {module:api/SystemApi~getSystemInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SystemInfo}
     */
    getSystemInfo(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SystemInfo;
      return this.apiClient.callApi(
        '/system/info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
