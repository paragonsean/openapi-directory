# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin: bool=None, developer: bool=None, display_name: str=None, username: str=None, viewer: bool=None):
        """UserInfo - a model defined in OpenAPI

        :param admin: The admin of this UserInfo.
        :param developer: The developer of this UserInfo.
        :param display_name: The display_name of this UserInfo.
        :param username: The username of this UserInfo.
        :param viewer: The viewer of this UserInfo.
        """
        self.openapi_types = {
            'admin': bool,
            'developer': bool,
            'display_name': str,
            'username': str,
            'viewer': bool
        }

        self.attribute_map = {
            'admin': 'admin',
            'developer': 'developer',
            'display_name': 'displayName',
            'username': 'username',
            'viewer': 'viewer'
        }

        self._admin = admin
        self._developer = developer
        self._display_name = display_name
        self._username = username
        self._viewer = viewer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserInfo of this UserInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin(self):
        """Gets the admin of this UserInfo.


        :return: The admin of this UserInfo.
        :rtype: bool
        """
        return self._admin

    @admin.setter
    def admin(self, admin):
        """Sets the admin of this UserInfo.


        :param admin: The admin of this UserInfo.
        :type admin: bool
        """

        self._admin = admin

    @property
    def developer(self):
        """Gets the developer of this UserInfo.


        :return: The developer of this UserInfo.
        :rtype: bool
        """
        return self._developer

    @developer.setter
    def developer(self, developer):
        """Sets the developer of this UserInfo.


        :param developer: The developer of this UserInfo.
        :type developer: bool
        """

        self._developer = developer

    @property
    def display_name(self):
        """Gets the display_name of this UserInfo.


        :return: The display_name of this UserInfo.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this UserInfo.


        :param display_name: The display_name of this UserInfo.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def username(self):
        """Gets the username of this UserInfo.


        :return: The username of this UserInfo.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this UserInfo.


        :param username: The username of this UserInfo.
        :type username: str
        """

        self._username = username

    @property
    def viewer(self):
        """Gets the viewer of this UserInfo.


        :return: The viewer of this UserInfo.
        :rtype: bool
        """
        return self._viewer

    @viewer.setter
    def viewer(self, viewer):
        """Sets the viewer of this UserInfo.


        :param viewer: The viewer of this UserInfo.
        :type viewer: bool
        """

        self._viewer = viewer
