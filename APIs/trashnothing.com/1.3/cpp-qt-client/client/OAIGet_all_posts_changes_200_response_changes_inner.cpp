/**
 * trash nothing
 * This is the REST API for [trashnothing.com](https://trashnothing.com).  To learn more about the API or to register your app for use with the API visit the [trash nothing Developer page](https://trashnothing.com/developer).  NOTE: All date-time values are [UTC](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) and are in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601) (eg. 2019-02-03T01:23:53). 
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_all_posts_changes_200_response_changes_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_all_posts_changes_200_response_changes_inner::OAIGet_all_posts_changes_200_response_changes_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_all_posts_changes_200_response_changes_inner::OAIGet_all_posts_changes_200_response_changes_inner() {
    this->initializeModel();
}

OAIGet_all_posts_changes_200_response_changes_inner::~OAIGet_all_posts_changes_200_response_changes_inner() {}

void OAIGet_all_posts_changes_200_response_changes_inner::initializeModel() {

    m_date_isSet = false;
    m_date_isValid = false;

    m_post_id_isSet = false;
    m_post_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGet_all_posts_changes_200_response_changes_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_all_posts_changes_200_response_changes_inner::fromJsonObject(QJsonObject json) {

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_post_id_isValid = ::OpenAPI::fromJsonValue(m_post_id, json[QString("post_id")]);
    m_post_id_isSet = !json[QString("post_id")].isNull() && m_post_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGet_all_posts_changes_200_response_changes_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_all_posts_changes_200_response_changes_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_post_id_isSet) {
        obj.insert(QString("post_id"), ::OpenAPI::toJsonValue(m_post_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QDateTime OAIGet_all_posts_changes_200_response_changes_inner::getDate() const {
    return m_date;
}
void OAIGet_all_posts_changes_200_response_changes_inner::setDate(const QDateTime &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIGet_all_posts_changes_200_response_changes_inner::is_date_Set() const{
    return m_date_isSet;
}

bool OAIGet_all_posts_changes_200_response_changes_inner::is_date_Valid() const{
    return m_date_isValid;
}

QString OAIGet_all_posts_changes_200_response_changes_inner::getPostId() const {
    return m_post_id;
}
void OAIGet_all_posts_changes_200_response_changes_inner::setPostId(const QString &post_id) {
    m_post_id = post_id;
    m_post_id_isSet = true;
}

bool OAIGet_all_posts_changes_200_response_changes_inner::is_post_id_Set() const{
    return m_post_id_isSet;
}

bool OAIGet_all_posts_changes_200_response_changes_inner::is_post_id_Valid() const{
    return m_post_id_isValid;
}

QString OAIGet_all_posts_changes_200_response_changes_inner::getType() const {
    return m_type;
}
void OAIGet_all_posts_changes_200_response_changes_inner::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGet_all_posts_changes_200_response_changes_inner::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGet_all_posts_changes_200_response_changes_inner::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGet_all_posts_changes_200_response_changes_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_all_posts_changes_200_response_changes_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
