/**
 * trash nothing
 * This is the REST API for [trashnothing.com](https://trashnothing.com).  To learn more about the API or to register your app for use with the API visit the [trash nothing Developer page](https://trashnothing.com/developer).  NOTE: All date-time values are [UTC](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) and are in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601) (eg. 2019-02-03T01:23:53). 
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser_feedback.h
 *
 * 
 */

#ifndef OAIUser_feedback_H
#define OAIUser_feedback_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUser_feedback : public OAIObject {
public:
    OAIUser_feedback();
    OAIUser_feedback(QString json);
    ~OAIUser_feedback() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getPercentPositive() const;
    void setPercentPositive(const double &percent_positive);
    bool is_percent_positive_Set() const;
    bool is_percent_positive_Valid() const;

    QString getRestriction() const;
    void setRestriction(const QString &restriction);
    bool is_restriction_Set() const;
    bool is_restriction_Valid() const;

    qint32 getScore() const;
    void setScore(const qint32 &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_percent_positive;
    bool m_percent_positive_isSet;
    bool m_percent_positive_isValid;

    QString m_restriction;
    bool m_restriction_isSet;
    bool m_restriction_isValid;

    qint32 m_score;
    bool m_score_isSet;
    bool m_score_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser_feedback)

#endif // OAIUser_feedback_H
