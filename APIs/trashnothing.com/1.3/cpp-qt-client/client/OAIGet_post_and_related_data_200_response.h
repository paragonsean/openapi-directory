/**
 * trash nothing
 * This is the REST API for [trashnothing.com](https://trashnothing.com).  To learn more about the API or to register your app for use with the API visit the [trash nothing Developer page](https://trashnothing.com/developer).  NOTE: All date-time values are [UTC](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) and are in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601) (eg. 2019-02-03T01:23:53). 
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_post_and_related_data_200_response.h
 *
 * 
 */

#ifndef OAIGet_post_and_related_data_200_response_H
#define OAIGet_post_and_related_data_200_response_H

#include <QJsonObject>

#include "OAIFeedback.h"
#include "OAIGroup.h"
#include "OAIPost.h"
#include "OAIUser.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUser;
class OAIPost;
class OAIFeedback;
class OAIGroup;

class OAIGet_post_and_related_data_200_response : public OAIObject {
public:
    OAIGet_post_and_related_data_200_response();
    OAIGet_post_and_related_data_200_response(QString json);
    ~OAIGet_post_and_related_data_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUser getAuthor() const;
    void setAuthor(const OAIUser &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    qint32 getAuthorOfferCount() const;
    void setAuthorOfferCount(const qint32 &author_offer_count);
    bool is_author_offer_count_Set() const;
    bool is_author_offer_count_Valid() const;

    QList<OAIPost> getAuthorPosts() const;
    void setAuthorPosts(const QList<OAIPost> &author_posts);
    bool is_author_posts_Set() const;
    bool is_author_posts_Valid() const;

    qint32 getAuthorWantedCount() const;
    void setAuthorWantedCount(const qint32 &author_wanted_count);
    bool is_author_wanted_count_Set() const;
    bool is_author_wanted_count_Valid() const;

    bool isBookmarked() const;
    void setBookmarked(const bool &bookmarked);
    bool is_bookmarked_Set() const;
    bool is_bookmarked_Valid() const;

    QList<OAIFeedback> getFeedback() const;
    void setFeedback(const QList<OAIFeedback> &feedback);
    bool is_feedback_Set() const;
    bool is_feedback_Valid() const;

    QList<OAIGroup> getGroups() const;
    void setGroups(const QList<OAIGroup> &groups);
    bool is_groups_Set() const;
    bool is_groups_Valid() const;

    OAIPost getPost() const;
    void setPost(const OAIPost &post);
    bool is_post_Set() const;
    bool is_post_Valid() const;

    bool isReplied() const;
    void setReplied(const bool &replied);
    bool is_replied_Set() const;
    bool is_replied_Valid() const;

    bool isUserCanReply() const;
    void setUserCanReply(const bool &user_can_reply);
    bool is_user_can_reply_Set() const;
    bool is_user_can_reply_Valid() const;

    bool isViewed() const;
    void setViewed(const bool &viewed);
    bool is_viewed_Set() const;
    bool is_viewed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUser m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    qint32 m_author_offer_count;
    bool m_author_offer_count_isSet;
    bool m_author_offer_count_isValid;

    QList<OAIPost> m_author_posts;
    bool m_author_posts_isSet;
    bool m_author_posts_isValid;

    qint32 m_author_wanted_count;
    bool m_author_wanted_count_isSet;
    bool m_author_wanted_count_isValid;

    bool m_bookmarked;
    bool m_bookmarked_isSet;
    bool m_bookmarked_isValid;

    QList<OAIFeedback> m_feedback;
    bool m_feedback_isSet;
    bool m_feedback_isValid;

    QList<OAIGroup> m_groups;
    bool m_groups_isSet;
    bool m_groups_isValid;

    OAIPost m_post;
    bool m_post_isSet;
    bool m_post_isValid;

    bool m_replied;
    bool m_replied_isSet;
    bool m_replied_isValid;

    bool m_user_can_reply;
    bool m_user_can_reply_isSet;
    bool m_user_can_reply_isValid;

    bool m_viewed;
    bool m_viewed_isSet;
    bool m_viewed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_post_and_related_data_200_response)

#endif // OAIGet_post_and_related_data_200_response_H
