/**
 * trash nothing
 * This is the REST API for [trashnothing.com](https://trashnothing.com).  To learn more about the API or to register your app for use with the API visit the [trash nothing Developer page](https://trashnothing.com/developer).  NOTE: All date-time values are [UTC](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) and are in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601) (eg. 2019-02-03T01:23:53). 
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_posts_by_ids_200_response.h
 *
 * 
 */

#ifndef OAIGet_posts_by_ids_200_response_H
#define OAIGet_posts_by_ids_200_response_H

#include <QJsonObject>

#include "OAIPost.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPost;

class OAIGet_posts_by_ids_200_response : public OAIObject {
public:
    OAIGet_posts_by_ids_200_response();
    OAIGet_posts_by_ids_200_response(QString json);
    ~OAIGet_posts_by_ids_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getForbidden() const;
    void setForbidden(const QList<QString> &forbidden);
    bool is_forbidden_Set() const;
    bool is_forbidden_Valid() const;

    QList<QString> getNotFound() const;
    void setNotFound(const QList<QString> &not_found);
    bool is_not_found_Set() const;
    bool is_not_found_Valid() const;

    QList<OAIPost> getPosts() const;
    void setPosts(const QList<OAIPost> &posts);
    bool is_posts_Set() const;
    bool is_posts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_forbidden;
    bool m_forbidden_isSet;
    bool m_forbidden_isValid;

    QList<QString> m_not_found;
    bool m_not_found_isSet;
    bool m_not_found_isValid;

    QList<OAIPost> m_posts;
    bool m_posts_isSet;
    bool m_posts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_posts_by_ids_200_response)

#endif // OAIGet_posts_by_ids_200_response_H
