/**
 * trash nothing
 * This is the REST API for [trashnothing.com](https://trashnothing.com).  To learn more about the API or to register your app for use with the API visit the [trash nothing Developer page](https://trashnothing.com/developer).  NOTE: All date-time values are [UTC](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) and are in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601) (eg. 2019-02-03T01:23:53). 
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGroup.h
 *
 * Groups are run by volunteer moderators and provide a way to group activity in a specific location. Because each group is usually run by different people, there can be variations in rules from group to group (eg. who is allowed to join, what is allowed to be posted, how often reposts are allowed). 
 */

#ifndef OAIGroup_H
#define OAIGroup_H

#include <QJsonObject>

#include "OAIGroup_country.h"
#include "OAIGroup_membership.h"
#include "OAIGroup_region.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroup_country;
class OAIGroup_membership;
class OAIGroup_region;

class OAIGroup : public OAIObject {
public:
    OAIGroup();
    OAIGroup(QString json);
    ~OAIGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGroup_country getCountry() const;
    void setCountry(const OAIGroup_country &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getGroupId() const;
    void setGroupId(const QString &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    bool isHasQuestions() const;
    void setHasQuestions(const bool &has_questions);
    bool is_has_questions_Set() const;
    bool is_has_questions_Valid() const;

    QString getHomepage() const;
    void setHomepage(const QString &homepage);
    bool is_homepage_Set() const;
    bool is_homepage_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    qint32 getMemberCount() const;
    void setMemberCount(const qint32 &member_count);
    bool is_member_count_Set() const;
    bool is_member_count_Valid() const;

    OAIGroup_membership getMembership() const;
    void setMembership(const OAIGroup_membership &membership);
    bool is_membership_Set() const;
    bool is_membership_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isOpenArchives() const;
    void setOpenArchives(const bool &open_archives);
    bool is_open_archives_Set() const;
    bool is_open_archives_Valid() const;

    bool isOpenMembership() const;
    void setOpenMembership(const bool &open_membership);
    bool is_open_membership_Set() const;
    bool is_open_membership_Valid() const;

    OAIGroup_region getRegion() const;
    void setRegion(const OAIGroup_region &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGroup_country m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;

    bool m_has_questions;
    bool m_has_questions_isSet;
    bool m_has_questions_isValid;

    QString m_homepage;
    bool m_homepage_isSet;
    bool m_homepage_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    qint32 m_member_count;
    bool m_member_count_isSet;
    bool m_member_count_isValid;

    OAIGroup_membership m_membership;
    bool m_membership_isSet;
    bool m_membership_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_open_archives;
    bool m_open_archives_isSet;
    bool m_open_archives_isValid;

    bool m_open_membership;
    bool m_open_membership_isSet;
    bool m_open_membership_isValid;

    OAIGroup_region m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGroup)

#endif // OAIGroup_H
