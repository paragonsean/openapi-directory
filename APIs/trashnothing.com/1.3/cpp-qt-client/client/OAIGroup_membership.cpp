/**
 * trash nothing
 * This is the REST API for [trashnothing.com](https://trashnothing.com).  To learn more about the API or to register your app for use with the API visit the [trash nothing Developer page](https://trashnothing.com/developer).  NOTE: All date-time values are [UTC](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) and are in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601) (eg. 2019-02-03T01:23:53). 
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroup_membership.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroup_membership::OAIGroup_membership(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroup_membership::OAIGroup_membership() {
    this->initializeModel();
}

OAIGroup_membership::~OAIGroup_membership() {}

void OAIGroup_membership::initializeModel() {

    m_date_isSet = false;
    m_date_isValid = false;

    m_questionnaire_isSet = false;
    m_questionnaire_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIGroup_membership::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGroup_membership::fromJsonObject(QJsonObject json) {

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_questionnaire_isValid = ::OpenAPI::fromJsonValue(m_questionnaire, json[QString("questionnaire")]);
    m_questionnaire_isSet = !json[QString("questionnaire")].isNull() && m_questionnaire_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIGroup_membership::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGroup_membership::asJsonObject() const {
    QJsonObject obj;
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_questionnaire.isSet()) {
        obj.insert(QString("questionnaire"), ::OpenAPI::toJsonValue(m_questionnaire));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QDateTime OAIGroup_membership::getDate() const {
    return m_date;
}
void OAIGroup_membership::setDate(const QDateTime &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIGroup_membership::is_date_Set() const{
    return m_date_isSet;
}

bool OAIGroup_membership::is_date_Valid() const{
    return m_date_isValid;
}

OAIGroup_membership_questionnaire OAIGroup_membership::getQuestionnaire() const {
    return m_questionnaire;
}
void OAIGroup_membership::setQuestionnaire(const OAIGroup_membership_questionnaire &questionnaire) {
    m_questionnaire = questionnaire;
    m_questionnaire_isSet = true;
}

bool OAIGroup_membership::is_questionnaire_Set() const{
    return m_questionnaire_isSet;
}

bool OAIGroup_membership::is_questionnaire_Valid() const{
    return m_questionnaire_isValid;
}

QString OAIGroup_membership::getStatus() const {
    return m_status;
}
void OAIGroup_membership::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIGroup_membership::is_status_Set() const{
    return m_status_isSet;
}

bool OAIGroup_membership::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIGroup_membership::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_questionnaire.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGroup_membership::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
