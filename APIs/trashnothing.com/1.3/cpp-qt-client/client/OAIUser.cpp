/**
 * trash nothing
 * This is the REST API for [trashnothing.com](https://trashnothing.com).  To learn more about the API or to register your app for use with the API visit the [trash nothing Developer page](https://trashnothing.com/developer).  NOTE: All date-time values are [UTC](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) and are in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601) (eg. 2019-02-03T01:23:53). 
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser::OAIUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser::OAIUser() {
    this->initializeModel();
}

OAIUser::~OAIUser() {}

void OAIUser::initializeModel() {

    m_about_me_isSet = false;
    m_about_me_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_feedback_isSet = false;
    m_feedback_isValid = false;

    m_firstname_isSet = false;
    m_firstname_isValid = false;

    m_lastname_isSet = false;
    m_lastname_isValid = false;

    m_member_since_isSet = false;
    m_member_since_isValid = false;

    m_profile_image_isSet = false;
    m_profile_image_isValid = false;

    m_reply_time_isSet = false;
    m_reply_time_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser::fromJsonObject(QJsonObject json) {

    m_about_me_isValid = ::OpenAPI::fromJsonValue(m_about_me, json[QString("about_me")]);
    m_about_me_isSet = !json[QString("about_me")].isNull() && m_about_me_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_feedback_isValid = ::OpenAPI::fromJsonValue(m_feedback, json[QString("feedback")]);
    m_feedback_isSet = !json[QString("feedback")].isNull() && m_feedback_isValid;

    m_firstname_isValid = ::OpenAPI::fromJsonValue(m_firstname, json[QString("firstname")]);
    m_firstname_isSet = !json[QString("firstname")].isNull() && m_firstname_isValid;

    m_lastname_isValid = ::OpenAPI::fromJsonValue(m_lastname, json[QString("lastname")]);
    m_lastname_isSet = !json[QString("lastname")].isNull() && m_lastname_isValid;

    m_member_since_isValid = ::OpenAPI::fromJsonValue(m_member_since, json[QString("member_since")]);
    m_member_since_isSet = !json[QString("member_since")].isNull() && m_member_since_isValid;

    m_profile_image_isValid = ::OpenAPI::fromJsonValue(m_profile_image, json[QString("profile_image")]);
    m_profile_image_isSet = !json[QString("profile_image")].isNull() && m_profile_image_isValid;

    m_reply_time_isValid = ::OpenAPI::fromJsonValue(m_reply_time, json[QString("reply_time")]);
    m_reply_time_isSet = !json[QString("reply_time")].isNull() && m_reply_time_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("user_id")]);
    m_user_id_isSet = !json[QString("user_id")].isNull() && m_user_id_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAIUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser::asJsonObject() const {
    QJsonObject obj;
    if (m_about_me_isSet) {
        obj.insert(QString("about_me"), ::OpenAPI::toJsonValue(m_about_me));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_feedback.isSet()) {
        obj.insert(QString("feedback"), ::OpenAPI::toJsonValue(m_feedback));
    }
    if (m_firstname_isSet) {
        obj.insert(QString("firstname"), ::OpenAPI::toJsonValue(m_firstname));
    }
    if (m_lastname_isSet) {
        obj.insert(QString("lastname"), ::OpenAPI::toJsonValue(m_lastname));
    }
    if (m_member_since_isSet) {
        obj.insert(QString("member_since"), ::OpenAPI::toJsonValue(m_member_since));
    }
    if (m_profile_image_isSet) {
        obj.insert(QString("profile_image"), ::OpenAPI::toJsonValue(m_profile_image));
    }
    if (m_reply_time_isSet) {
        obj.insert(QString("reply_time"), ::OpenAPI::toJsonValue(m_reply_time));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("user_id"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAIUser::getAboutMe() const {
    return m_about_me;
}
void OAIUser::setAboutMe(const QString &about_me) {
    m_about_me = about_me;
    m_about_me_isSet = true;
}

bool OAIUser::is_about_me_Set() const{
    return m_about_me_isSet;
}

bool OAIUser::is_about_me_Valid() const{
    return m_about_me_isValid;
}

QString OAIUser::getCountry() const {
    return m_country;
}
void OAIUser::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIUser::is_country_Set() const{
    return m_country_isSet;
}

bool OAIUser::is_country_Valid() const{
    return m_country_isValid;
}

OAIUser_feedback OAIUser::getFeedback() const {
    return m_feedback;
}
void OAIUser::setFeedback(const OAIUser_feedback &feedback) {
    m_feedback = feedback;
    m_feedback_isSet = true;
}

bool OAIUser::is_feedback_Set() const{
    return m_feedback_isSet;
}

bool OAIUser::is_feedback_Valid() const{
    return m_feedback_isValid;
}

QString OAIUser::getFirstname() const {
    return m_firstname;
}
void OAIUser::setFirstname(const QString &firstname) {
    m_firstname = firstname;
    m_firstname_isSet = true;
}

bool OAIUser::is_firstname_Set() const{
    return m_firstname_isSet;
}

bool OAIUser::is_firstname_Valid() const{
    return m_firstname_isValid;
}

QString OAIUser::getLastname() const {
    return m_lastname;
}
void OAIUser::setLastname(const QString &lastname) {
    m_lastname = lastname;
    m_lastname_isSet = true;
}

bool OAIUser::is_lastname_Set() const{
    return m_lastname_isSet;
}

bool OAIUser::is_lastname_Valid() const{
    return m_lastname_isValid;
}

QString OAIUser::getMemberSince() const {
    return m_member_since;
}
void OAIUser::setMemberSince(const QString &member_since) {
    m_member_since = member_since;
    m_member_since_isSet = true;
}

bool OAIUser::is_member_since_Set() const{
    return m_member_since_isSet;
}

bool OAIUser::is_member_since_Valid() const{
    return m_member_since_isValid;
}

QString OAIUser::getProfileImage() const {
    return m_profile_image;
}
void OAIUser::setProfileImage(const QString &profile_image) {
    m_profile_image = profile_image;
    m_profile_image_isSet = true;
}

bool OAIUser::is_profile_image_Set() const{
    return m_profile_image_isSet;
}

bool OAIUser::is_profile_image_Valid() const{
    return m_profile_image_isValid;
}

qint32 OAIUser::getReplyTime() const {
    return m_reply_time;
}
void OAIUser::setReplyTime(const qint32 &reply_time) {
    m_reply_time = reply_time;
    m_reply_time_isSet = true;
}

bool OAIUser::is_reply_time_Set() const{
    return m_reply_time_isSet;
}

bool OAIUser::is_reply_time_Valid() const{
    return m_reply_time_isValid;
}

QString OAIUser::getUserId() const {
    return m_user_id;
}
void OAIUser::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIUser::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIUser::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAIUser::getUsername() const {
    return m_username;
}
void OAIUser::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIUser::is_username_Set() const{
    return m_username_isSet;
}

bool OAIUser::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_about_me_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feedback.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_firstname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lastname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_since_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_image_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reply_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
