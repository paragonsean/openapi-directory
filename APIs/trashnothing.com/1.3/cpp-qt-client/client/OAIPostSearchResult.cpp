/**
 * trash nothing
 * This is the REST API for [trashnothing.com](https://trashnothing.com).  To learn more about the API or to register your app for use with the API visit the [trash nothing Developer page](https://trashnothing.com/developer).  NOTE: All date-time values are [UTC](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) and are in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601) (eg. 2019-02-03T01:23:53). 
 *
 * The version of the OpenAPI document: 1.3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostSearchResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostSearchResult::OAIPostSearchResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostSearchResult::OAIPostSearchResult() {
    this->initializeModel();
}

OAIPostSearchResult::~OAIPostSearchResult() {}

void OAIPostSearchResult::initializeModel() {

    m_content_isSet = false;
    m_content_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_expiration_isSet = false;
    m_expiration_isValid = false;

    m_footer_isSet = false;
    m_footer_isValid = false;

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_latitude_isSet = false;
    m_latitude_isValid = false;

    m_longitude_isSet = false;
    m_longitude_isValid = false;

    m_outcome_isSet = false;
    m_outcome_isValid = false;

    m_photos_isSet = false;
    m_photos_isValid = false;

    m_post_id_isSet = false;
    m_post_id_isValid = false;

    m_repost_count_isSet = false;
    m_repost_count_isValid = false;

    m_reselling_isSet = false;
    m_reselling_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_search_content_isSet = false;
    m_search_content_isValid = false;

    m_search_title_isSet = false;
    m_search_title_isValid = false;
}

void OAIPostSearchResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostSearchResult::fromJsonObject(QJsonObject json) {

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_expiration_isValid = ::OpenAPI::fromJsonValue(m_expiration, json[QString("expiration")]);
    m_expiration_isSet = !json[QString("expiration")].isNull() && m_expiration_isValid;

    m_footer_isValid = ::OpenAPI::fromJsonValue(m_footer, json[QString("footer")]);
    m_footer_isSet = !json[QString("footer")].isNull() && m_footer_isValid;

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("group_id")]);
    m_group_id_isSet = !json[QString("group_id")].isNull() && m_group_id_isValid;

    m_latitude_isValid = ::OpenAPI::fromJsonValue(m_latitude, json[QString("latitude")]);
    m_latitude_isSet = !json[QString("latitude")].isNull() && m_latitude_isValid;

    m_longitude_isValid = ::OpenAPI::fromJsonValue(m_longitude, json[QString("longitude")]);
    m_longitude_isSet = !json[QString("longitude")].isNull() && m_longitude_isValid;

    m_outcome_isValid = ::OpenAPI::fromJsonValue(m_outcome, json[QString("outcome")]);
    m_outcome_isSet = !json[QString("outcome")].isNull() && m_outcome_isValid;

    m_photos_isValid = ::OpenAPI::fromJsonValue(m_photos, json[QString("photos")]);
    m_photos_isSet = !json[QString("photos")].isNull() && m_photos_isValid;

    m_post_id_isValid = ::OpenAPI::fromJsonValue(m_post_id, json[QString("post_id")]);
    m_post_id_isSet = !json[QString("post_id")].isNull() && m_post_id_isValid;

    m_repost_count_isValid = ::OpenAPI::fromJsonValue(m_repost_count, json[QString("repost_count")]);
    m_repost_count_isSet = !json[QString("repost_count")].isNull() && m_repost_count_isValid;

    m_reselling_isValid = ::OpenAPI::fromJsonValue(m_reselling, json[QString("reselling")]);
    m_reselling_isSet = !json[QString("reselling")].isNull() && m_reselling_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("user_id")]);
    m_user_id_isSet = !json[QString("user_id")].isNull() && m_user_id_isValid;

    m_search_content_isValid = ::OpenAPI::fromJsonValue(m_search_content, json[QString("search_content")]);
    m_search_content_isSet = !json[QString("search_content")].isNull() && m_search_content_isValid;

    m_search_title_isValid = ::OpenAPI::fromJsonValue(m_search_title, json[QString("search_title")]);
    m_search_title_isSet = !json[QString("search_title")].isNull() && m_search_title_isValid;
}

QString OAIPostSearchResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostSearchResult::asJsonObject() const {
    QJsonObject obj;
    if (m_content_isSet) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_expiration_isSet) {
        obj.insert(QString("expiration"), ::OpenAPI::toJsonValue(m_expiration));
    }
    if (m_footer_isSet) {
        obj.insert(QString("footer"), ::OpenAPI::toJsonValue(m_footer));
    }
    if (m_group_id_isSet) {
        obj.insert(QString("group_id"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_latitude_isSet) {
        obj.insert(QString("latitude"), ::OpenAPI::toJsonValue(m_latitude));
    }
    if (m_longitude_isSet) {
        obj.insert(QString("longitude"), ::OpenAPI::toJsonValue(m_longitude));
    }
    if (m_outcome_isSet) {
        obj.insert(QString("outcome"), ::OpenAPI::toJsonValue(m_outcome));
    }
    if (m_photos.size() > 0) {
        obj.insert(QString("photos"), ::OpenAPI::toJsonValue(m_photos));
    }
    if (m_post_id_isSet) {
        obj.insert(QString("post_id"), ::OpenAPI::toJsonValue(m_post_id));
    }
    if (m_repost_count_isSet) {
        obj.insert(QString("repost_count"), ::OpenAPI::toJsonValue(m_repost_count));
    }
    if (m_reselling_isSet) {
        obj.insert(QString("reselling"), ::OpenAPI::toJsonValue(m_reselling));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("user_id"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_search_content_isSet) {
        obj.insert(QString("search_content"), ::OpenAPI::toJsonValue(m_search_content));
    }
    if (m_search_title_isSet) {
        obj.insert(QString("search_title"), ::OpenAPI::toJsonValue(m_search_title));
    }
    return obj;
}

QString OAIPostSearchResult::getContent() const {
    return m_content;
}
void OAIPostSearchResult::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIPostSearchResult::is_content_Set() const{
    return m_content_isSet;
}

bool OAIPostSearchResult::is_content_Valid() const{
    return m_content_isValid;
}

QDateTime OAIPostSearchResult::getDate() const {
    return m_date;
}
void OAIPostSearchResult::setDate(const QDateTime &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIPostSearchResult::is_date_Set() const{
    return m_date_isSet;
}

bool OAIPostSearchResult::is_date_Valid() const{
    return m_date_isValid;
}

QDateTime OAIPostSearchResult::getExpiration() const {
    return m_expiration;
}
void OAIPostSearchResult::setExpiration(const QDateTime &expiration) {
    m_expiration = expiration;
    m_expiration_isSet = true;
}

bool OAIPostSearchResult::is_expiration_Set() const{
    return m_expiration_isSet;
}

bool OAIPostSearchResult::is_expiration_Valid() const{
    return m_expiration_isValid;
}

QString OAIPostSearchResult::getFooter() const {
    return m_footer;
}
void OAIPostSearchResult::setFooter(const QString &footer) {
    m_footer = footer;
    m_footer_isSet = true;
}

bool OAIPostSearchResult::is_footer_Set() const{
    return m_footer_isSet;
}

bool OAIPostSearchResult::is_footer_Valid() const{
    return m_footer_isValid;
}

QString OAIPostSearchResult::getGroupId() const {
    return m_group_id;
}
void OAIPostSearchResult::setGroupId(const QString &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIPostSearchResult::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIPostSearchResult::is_group_id_Valid() const{
    return m_group_id_isValid;
}

double OAIPostSearchResult::getLatitude() const {
    return m_latitude;
}
void OAIPostSearchResult::setLatitude(const double &latitude) {
    m_latitude = latitude;
    m_latitude_isSet = true;
}

bool OAIPostSearchResult::is_latitude_Set() const{
    return m_latitude_isSet;
}

bool OAIPostSearchResult::is_latitude_Valid() const{
    return m_latitude_isValid;
}

double OAIPostSearchResult::getLongitude() const {
    return m_longitude;
}
void OAIPostSearchResult::setLongitude(const double &longitude) {
    m_longitude = longitude;
    m_longitude_isSet = true;
}

bool OAIPostSearchResult::is_longitude_Set() const{
    return m_longitude_isSet;
}

bool OAIPostSearchResult::is_longitude_Valid() const{
    return m_longitude_isValid;
}

QString OAIPostSearchResult::getOutcome() const {
    return m_outcome;
}
void OAIPostSearchResult::setOutcome(const QString &outcome) {
    m_outcome = outcome;
    m_outcome_isSet = true;
}

bool OAIPostSearchResult::is_outcome_Set() const{
    return m_outcome_isSet;
}

bool OAIPostSearchResult::is_outcome_Valid() const{
    return m_outcome_isValid;
}

QList<OAIPhoto> OAIPostSearchResult::getPhotos() const {
    return m_photos;
}
void OAIPostSearchResult::setPhotos(const QList<OAIPhoto> &photos) {
    m_photos = photos;
    m_photos_isSet = true;
}

bool OAIPostSearchResult::is_photos_Set() const{
    return m_photos_isSet;
}

bool OAIPostSearchResult::is_photos_Valid() const{
    return m_photos_isValid;
}

QString OAIPostSearchResult::getPostId() const {
    return m_post_id;
}
void OAIPostSearchResult::setPostId(const QString &post_id) {
    m_post_id = post_id;
    m_post_id_isSet = true;
}

bool OAIPostSearchResult::is_post_id_Set() const{
    return m_post_id_isSet;
}

bool OAIPostSearchResult::is_post_id_Valid() const{
    return m_post_id_isValid;
}

qint32 OAIPostSearchResult::getRepostCount() const {
    return m_repost_count;
}
void OAIPostSearchResult::setRepostCount(const qint32 &repost_count) {
    m_repost_count = repost_count;
    m_repost_count_isSet = true;
}

bool OAIPostSearchResult::is_repost_count_Set() const{
    return m_repost_count_isSet;
}

bool OAIPostSearchResult::is_repost_count_Valid() const{
    return m_repost_count_isValid;
}

bool OAIPostSearchResult::isReselling() const {
    return m_reselling;
}
void OAIPostSearchResult::setReselling(const bool &reselling) {
    m_reselling = reselling;
    m_reselling_isSet = true;
}

bool OAIPostSearchResult::is_reselling_Set() const{
    return m_reselling_isSet;
}

bool OAIPostSearchResult::is_reselling_Valid() const{
    return m_reselling_isValid;
}

QString OAIPostSearchResult::getSource() const {
    return m_source;
}
void OAIPostSearchResult::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIPostSearchResult::is_source_Set() const{
    return m_source_isSet;
}

bool OAIPostSearchResult::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIPostSearchResult::getTitle() const {
    return m_title;
}
void OAIPostSearchResult::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIPostSearchResult::is_title_Set() const{
    return m_title_isSet;
}

bool OAIPostSearchResult::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIPostSearchResult::getType() const {
    return m_type;
}
void OAIPostSearchResult::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIPostSearchResult::is_type_Set() const{
    return m_type_isSet;
}

bool OAIPostSearchResult::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIPostSearchResult::getUrl() const {
    return m_url;
}
void OAIPostSearchResult::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIPostSearchResult::is_url_Set() const{
    return m_url_isSet;
}

bool OAIPostSearchResult::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIPostSearchResult::getUserId() const {
    return m_user_id;
}
void OAIPostSearchResult::setUserId(const QString &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIPostSearchResult::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIPostSearchResult::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAIPostSearchResult::getSearchContent() const {
    return m_search_content;
}
void OAIPostSearchResult::setSearchContent(const QString &search_content) {
    m_search_content = search_content;
    m_search_content_isSet = true;
}

bool OAIPostSearchResult::is_search_content_Set() const{
    return m_search_content_isSet;
}

bool OAIPostSearchResult::is_search_content_Valid() const{
    return m_search_content_isValid;
}

QString OAIPostSearchResult::getSearchTitle() const {
    return m_search_title;
}
void OAIPostSearchResult::setSearchTitle(const QString &search_title) {
    m_search_title = search_title;
    m_search_title_isSet = true;
}

bool OAIPostSearchResult::is_search_title_Set() const{
    return m_search_title_isSet;
}

bool OAIPostSearchResult::is_search_title_Valid() const{
    return m_search_title_isValid;
}

bool OAIPostSearchResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_footer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_longitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outcome_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_photos.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_repost_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reselling_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostSearchResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
