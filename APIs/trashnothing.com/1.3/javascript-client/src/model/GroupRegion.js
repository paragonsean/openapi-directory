/**
 * trash nothing
 * This is the REST API for [trashnothing.com](https://trashnothing.com).  To learn more about the API or to register your app for use with the API visit the [trash nothing Developer page](https://trashnothing.com/developer).  NOTE: All date-time values are [UTC](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) and are in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601) (eg. 2019-02-03T01:23:53). 
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GroupRegion model module.
 * @module model/GroupRegion
 * @version 1.3
 */
class GroupRegion {
    /**
     * Constructs a new <code>GroupRegion</code>.
     * Provides information about an area within a country that a group is associated with (eg. a state in the US or a province in Canada).  May be null.
     * @alias module:model/GroupRegion
     */
    constructor() { 
        
        GroupRegion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GroupRegion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GroupRegion} obj Optional instance to populate.
     * @return {module:model/GroupRegion} The populated <code>GroupRegion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GroupRegion();

            if (data.hasOwnProperty('abbreviation')) {
                obj['abbreviation'] = ApiClient.convertToType(data['abbreviation'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GroupRegion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GroupRegion</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['abbreviation'] && !(typeof data['abbreviation'] === 'string' || data['abbreviation'] instanceof String)) {
            throw new Error("Expected the field `abbreviation` to be a primitive type in the JSON string but got " + data['abbreviation']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * A 2 letter abbreviation for the region (is not guaranteed to be globally unique but is unique among all the regions in the country).
 * @member {String} abbreviation
 */
GroupRegion.prototype['abbreviation'] = undefined;

/**
 * The name of the region.
 * @member {String} name
 */
GroupRegion.prototype['name'] = undefined;






export default GroupRegion;

