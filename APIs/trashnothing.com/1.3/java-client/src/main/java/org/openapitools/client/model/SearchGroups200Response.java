/*
 * trash nothing
 * This is the REST API for [trashnothing.com](https://trashnothing.com).  To learn more about the API or to register your app for use with the API visit the [trash nothing Developer page](https://trashnothing.com/developer).  NOTE: All date-time values are [UTC](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) and are in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601) (eg. 2019-02-03T01:23:53). 
 *
 * The version of the OpenAPI document: 1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Group;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SearchGroups200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:53:54.729444-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SearchGroups200Response {
  public static final String SERIALIZED_NAME_END_INDEX = "end_index";
  @SerializedName(SERIALIZED_NAME_END_INDEX)
  private Integer endIndex;

  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  private List<Group> groups = new ArrayList<>();

  public static final String SERIALIZED_NAME_NUM_GROUPS = "num_groups";
  @SerializedName(SERIALIZED_NAME_NUM_GROUPS)
  private Integer numGroups;

  public static final String SERIALIZED_NAME_NUM_PAGES = "num_pages";
  @SerializedName(SERIALIZED_NAME_NUM_PAGES)
  private Integer numPages;

  public static final String SERIALIZED_NAME_PAGE = "page";
  @SerializedName(SERIALIZED_NAME_PAGE)
  private Integer page;

  public static final String SERIALIZED_NAME_PER_PAGE = "per_page";
  @SerializedName(SERIALIZED_NAME_PER_PAGE)
  private Integer perPage;

  public static final String SERIALIZED_NAME_START_INDEX = "start_index";
  @SerializedName(SERIALIZED_NAME_START_INDEX)
  private Integer startIndex;

  public SearchGroups200Response() {
  }

  public SearchGroups200Response endIndex(Integer endIndex) {
    this.endIndex = endIndex;
    return this;
  }

  /**
   * The index of the last group being returned (an integer between start_index and num_groups).
   * @return endIndex
   */
  @javax.annotation.Nullable
  public Integer getEndIndex() {
    return endIndex;
  }

  public void setEndIndex(Integer endIndex) {
    this.endIndex = endIndex;
  }


  public SearchGroups200Response groups(List<Group> groups) {
    this.groups = groups;
    return this;
  }

  public SearchGroups200Response addGroupsItem(Group groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * Get groups
   * @return groups
   */
  @javax.annotation.Nullable
  public List<Group> getGroups() {
    return groups;
  }

  public void setGroups(List<Group> groups) {
    this.groups = groups;
  }


  public SearchGroups200Response numGroups(Integer numGroups) {
    this.numGroups = numGroups;
    return this;
  }

  /**
   * The total number of groups available.
   * @return numGroups
   */
  @javax.annotation.Nullable
  public Integer getNumGroups() {
    return numGroups;
  }

  public void setNumGroups(Integer numGroups) {
    this.numGroups = numGroups;
  }


  public SearchGroups200Response numPages(Integer numPages) {
    this.numPages = numPages;
    return this;
  }

  /**
   * The total number of pages available.
   * @return numPages
   */
  @javax.annotation.Nullable
  public Integer getNumPages() {
    return numPages;
  }

  public void setNumPages(Integer numPages) {
    this.numPages = numPages;
  }


  public SearchGroups200Response page(Integer page) {
    this.page = page;
    return this;
  }

  /**
   * The page number of the groups being returned.
   * @return page
   */
  @javax.annotation.Nullable
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }


  public SearchGroups200Response perPage(Integer perPage) {
    this.perPage = perPage;
    return this;
  }

  /**
   * The number of groups being returned per page.
   * @return perPage
   */
  @javax.annotation.Nullable
  public Integer getPerPage() {
    return perPage;
  }

  public void setPerPage(Integer perPage) {
    this.perPage = perPage;
  }


  public SearchGroups200Response startIndex(Integer startIndex) {
    this.startIndex = startIndex;
    return this;
  }

  /**
   * The index of the first group being returned (an integer between 1 and num_groups).
   * @return startIndex
   */
  @javax.annotation.Nullable
  public Integer getStartIndex() {
    return startIndex;
  }

  public void setStartIndex(Integer startIndex) {
    this.startIndex = startIndex;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchGroups200Response searchGroups200Response = (SearchGroups200Response) o;
    return Objects.equals(this.endIndex, searchGroups200Response.endIndex) &&
        Objects.equals(this.groups, searchGroups200Response.groups) &&
        Objects.equals(this.numGroups, searchGroups200Response.numGroups) &&
        Objects.equals(this.numPages, searchGroups200Response.numPages) &&
        Objects.equals(this.page, searchGroups200Response.page) &&
        Objects.equals(this.perPage, searchGroups200Response.perPage) &&
        Objects.equals(this.startIndex, searchGroups200Response.startIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endIndex, groups, numGroups, numPages, page, perPage, startIndex);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchGroups200Response {\n");
    sb.append("    endIndex: ").append(toIndentedString(endIndex)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    numGroups: ").append(toIndentedString(numGroups)).append("\n");
    sb.append("    numPages: ").append(toIndentedString(numPages)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    perPage: ").append(toIndentedString(perPage)).append("\n");
    sb.append("    startIndex: ").append(toIndentedString(startIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("end_index");
    openapiFields.add("groups");
    openapiFields.add("num_groups");
    openapiFields.add("num_pages");
    openapiFields.add("page");
    openapiFields.add("per_page");
    openapiFields.add("start_index");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SearchGroups200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SearchGroups200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchGroups200Response is not found in the empty JSON string", SearchGroups200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SearchGroups200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SearchGroups200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("groups") != null && !jsonObj.get("groups").isJsonNull()) {
        JsonArray jsonArraygroups = jsonObj.getAsJsonArray("groups");
        if (jsonArraygroups != null) {
          // ensure the json data is an array
          if (!jsonObj.get("groups").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `groups` to be an array in the JSON string but got `%s`", jsonObj.get("groups").toString()));
          }

          // validate the optional field `groups` (array)
          for (int i = 0; i < jsonArraygroups.size(); i++) {
            Group.validateJsonElement(jsonArraygroups.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchGroups200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchGroups200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchGroups200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchGroups200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchGroups200Response>() {
           @Override
           public void write(JsonWriter out, SearchGroups200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchGroups200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SearchGroups200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SearchGroups200Response
   * @throws IOException if the JSON string is invalid with respect to SearchGroups200Response
   */
  public static SearchGroups200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchGroups200Response.class);
  }

  /**
   * Convert an instance of SearchGroups200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

