# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupMembershipQuestionnaire(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, message: str=None, questions: List[str]=None):
        """GroupMembershipQuestionnaire - a model defined in OpenAPI

        :param message: The message of this GroupMembershipQuestionnaire.
        :param questions: The questions of this GroupMembershipQuestionnaire.
        """
        self.openapi_types = {
            'message': str,
            'questions': List[str]
        }

        self.attribute_map = {
            'message': 'message',
            'questions': 'questions'
        }

        self._message = message
        self._questions = questions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupMembershipQuestionnaire':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Group_membership_questionnaire of this GroupMembershipQuestionnaire.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self):
        """Gets the message of this GroupMembershipQuestionnaire.

        A message from the group moderators to be displayed above the questions (may be null).

        :return: The message of this GroupMembershipQuestionnaire.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this GroupMembershipQuestionnaire.

        A message from the group moderators to be displayed above the questions (may be null).

        :param message: The message of this GroupMembershipQuestionnaire.
        :type message: str
        """

        self._message = message

    @property
    def questions(self):
        """Gets the questions of this GroupMembershipQuestionnaire.

        The list of questions.

        :return: The questions of this GroupMembershipQuestionnaire.
        :rtype: List[str]
        """
        return self._questions

    @questions.setter
    def questions(self, questions):
        """Sets the questions of this GroupMembershipQuestionnaire.

        The list of questions.

        :param questions: The questions of this GroupMembershipQuestionnaire.
        :type questions: List[str]
        """

        self._questions = questions
