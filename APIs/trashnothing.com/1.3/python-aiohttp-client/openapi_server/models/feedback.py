# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Feedback(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, _date: datetime=None, feedback_id: str=None, positive: bool=None, reviewer_user_id: str=None, user_id: str=None):
        """Feedback - a model defined in OpenAPI

        :param content: The content of this Feedback.
        :param _date: The _date of this Feedback.
        :param feedback_id: The feedback_id of this Feedback.
        :param positive: The positive of this Feedback.
        :param reviewer_user_id: The reviewer_user_id of this Feedback.
        :param user_id: The user_id of this Feedback.
        """
        self.openapi_types = {
            'content': str,
            '_date': datetime,
            'feedback_id': str,
            'positive': bool,
            'reviewer_user_id': str,
            'user_id': str
        }

        self.attribute_map = {
            'content': 'content',
            '_date': 'date',
            'feedback_id': 'feedback_id',
            'positive': 'positive',
            'reviewer_user_id': 'reviewer_user_id',
            'user_id': 'user_id'
        }

        self._content = content
        self.__date = _date
        self._feedback_id = feedback_id
        self._positive = positive
        self._reviewer_user_id = reviewer_user_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Feedback':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Feedback of this Feedback.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this Feedback.

        A comment written by the reviewer about the user (may be null).

        :return: The content of this Feedback.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this Feedback.

        A comment written by the reviewer about the user (may be null).

        :param content: The content of this Feedback.
        :type content: str
        """

        self._content = content

    @property
    def _date(self):
        """Gets the _date of this Feedback.

        Date when the feedback was submitted.

        :return: The _date of this Feedback.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Feedback.

        Date when the feedback was submitted.

        :param _date: The _date of this Feedback.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def feedback_id(self):
        """Gets the feedback_id of this Feedback.


        :return: The feedback_id of this Feedback.
        :rtype: str
        """
        return self._feedback_id

    @feedback_id.setter
    def feedback_id(self, feedback_id):
        """Sets the feedback_id of this Feedback.


        :param feedback_id: The feedback_id of this Feedback.
        :type feedback_id: str
        """

        self._feedback_id = feedback_id

    @property
    def positive(self):
        """Gets the positive of this Feedback.

        Set to true for positive feedback and false for negative feedback.

        :return: The positive of this Feedback.
        :rtype: bool
        """
        return self._positive

    @positive.setter
    def positive(self, positive):
        """Sets the positive of this Feedback.

        Set to true for positive feedback and false for negative feedback.

        :param positive: The positive of this Feedback.
        :type positive: bool
        """

        self._positive = positive

    @property
    def reviewer_user_id(self):
        """Gets the reviewer_user_id of this Feedback.

        The user ID of the user that submitted the feedback.

        :return: The reviewer_user_id of this Feedback.
        :rtype: str
        """
        return self._reviewer_user_id

    @reviewer_user_id.setter
    def reviewer_user_id(self, reviewer_user_id):
        """Sets the reviewer_user_id of this Feedback.

        The user ID of the user that submitted the feedback.

        :param reviewer_user_id: The reviewer_user_id of this Feedback.
        :type reviewer_user_id: str
        """

        self._reviewer_user_id = reviewer_user_id

    @property
    def user_id(self):
        """Gets the user_id of this Feedback.

        The user ID of the user that the feedback is about.

        :return: The user_id of this Feedback.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Feedback.

        The user ID of the user that the feedback is about.

        :param user_id: The user_id of this Feedback.
        :type user_id: str
        """

        self._user_id = user_id
