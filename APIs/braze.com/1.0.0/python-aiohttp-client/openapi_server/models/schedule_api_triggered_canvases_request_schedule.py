# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScheduleApiTriggeredCanvasesRequestSchedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, at_optimal_time: bool=None, in_local_time: bool=None, time: str=None):
        """ScheduleApiTriggeredCanvasesRequestSchedule - a model defined in OpenAPI

        :param at_optimal_time: The at_optimal_time of this ScheduleApiTriggeredCanvasesRequestSchedule.
        :param in_local_time: The in_local_time of this ScheduleApiTriggeredCanvasesRequestSchedule.
        :param time: The time of this ScheduleApiTriggeredCanvasesRequestSchedule.
        """
        self.openapi_types = {
            'at_optimal_time': bool,
            'in_local_time': bool,
            'time': str
        }

        self.attribute_map = {
            'at_optimal_time': 'at_optimal_time',
            'in_local_time': 'in_local_time',
            'time': 'time'
        }

        self._at_optimal_time = at_optimal_time
        self._in_local_time = in_local_time
        self._time = time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduleApiTriggeredCanvasesRequestSchedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The scheduleApiTriggeredCanvases_request_schedule of this ScheduleApiTriggeredCanvasesRequestSchedule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def at_optimal_time(self):
        """Gets the at_optimal_time of this ScheduleApiTriggeredCanvasesRequestSchedule.


        :return: The at_optimal_time of this ScheduleApiTriggeredCanvasesRequestSchedule.
        :rtype: bool
        """
        return self._at_optimal_time

    @at_optimal_time.setter
    def at_optimal_time(self, at_optimal_time):
        """Sets the at_optimal_time of this ScheduleApiTriggeredCanvasesRequestSchedule.


        :param at_optimal_time: The at_optimal_time of this ScheduleApiTriggeredCanvasesRequestSchedule.
        :type at_optimal_time: bool
        """

        self._at_optimal_time = at_optimal_time

    @property
    def in_local_time(self):
        """Gets the in_local_time of this ScheduleApiTriggeredCanvasesRequestSchedule.


        :return: The in_local_time of this ScheduleApiTriggeredCanvasesRequestSchedule.
        :rtype: bool
        """
        return self._in_local_time

    @in_local_time.setter
    def in_local_time(self, in_local_time):
        """Sets the in_local_time of this ScheduleApiTriggeredCanvasesRequestSchedule.


        :param in_local_time: The in_local_time of this ScheduleApiTriggeredCanvasesRequestSchedule.
        :type in_local_time: bool
        """

        self._in_local_time = in_local_time

    @property
    def time(self):
        """Gets the time of this ScheduleApiTriggeredCanvasesRequestSchedule.


        :return: The time of this ScheduleApiTriggeredCanvasesRequestSchedule.
        :rtype: str
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this ScheduleApiTriggeredCanvasesRequestSchedule.


        :param time: The time of this ScheduleApiTriggeredCanvasesRequestSchedule.
        :type time: str
        """

        self._time = time
