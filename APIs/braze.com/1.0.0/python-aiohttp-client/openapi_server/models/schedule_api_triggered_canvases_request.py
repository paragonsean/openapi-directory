# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schedule_api_triggered_canvases_request_audience import ScheduleApiTriggeredCanvasesRequestAudience
from openapi_server.models.schedule_api_triggered_canvases_request_recipients_inner import ScheduleApiTriggeredCanvasesRequestRecipientsInner
from openapi_server.models.schedule_api_triggered_canvases_request_schedule import ScheduleApiTriggeredCanvasesRequestSchedule
from openapi_server import util


class ScheduleApiTriggeredCanvasesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audience: ScheduleApiTriggeredCanvasesRequestAudience=None, broadcast: bool=None, canvas_entry_properties: object=None, canvas_id: str=None, recipients: List[ScheduleApiTriggeredCanvasesRequestRecipientsInner]=None, schedule: ScheduleApiTriggeredCanvasesRequestSchedule=None):
        """ScheduleApiTriggeredCanvasesRequest - a model defined in OpenAPI

        :param audience: The audience of this ScheduleApiTriggeredCanvasesRequest.
        :param broadcast: The broadcast of this ScheduleApiTriggeredCanvasesRequest.
        :param canvas_entry_properties: The canvas_entry_properties of this ScheduleApiTriggeredCanvasesRequest.
        :param canvas_id: The canvas_id of this ScheduleApiTriggeredCanvasesRequest.
        :param recipients: The recipients of this ScheduleApiTriggeredCanvasesRequest.
        :param schedule: The schedule of this ScheduleApiTriggeredCanvasesRequest.
        """
        self.openapi_types = {
            'audience': ScheduleApiTriggeredCanvasesRequestAudience,
            'broadcast': bool,
            'canvas_entry_properties': object,
            'canvas_id': str,
            'recipients': List[ScheduleApiTriggeredCanvasesRequestRecipientsInner],
            'schedule': ScheduleApiTriggeredCanvasesRequestSchedule
        }

        self.attribute_map = {
            'audience': 'audience',
            'broadcast': 'broadcast',
            'canvas_entry_properties': 'canvas_entry_properties',
            'canvas_id': 'canvas_id',
            'recipients': 'recipients',
            'schedule': 'schedule'
        }

        self._audience = audience
        self._broadcast = broadcast
        self._canvas_entry_properties = canvas_entry_properties
        self._canvas_id = canvas_id
        self._recipients = recipients
        self._schedule = schedule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScheduleApiTriggeredCanvasesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The scheduleApiTriggeredCanvases_request of this ScheduleApiTriggeredCanvasesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audience(self):
        """Gets the audience of this ScheduleApiTriggeredCanvasesRequest.


        :return: The audience of this ScheduleApiTriggeredCanvasesRequest.
        :rtype: ScheduleApiTriggeredCanvasesRequestAudience
        """
        return self._audience

    @audience.setter
    def audience(self, audience):
        """Sets the audience of this ScheduleApiTriggeredCanvasesRequest.


        :param audience: The audience of this ScheduleApiTriggeredCanvasesRequest.
        :type audience: ScheduleApiTriggeredCanvasesRequestAudience
        """

        self._audience = audience

    @property
    def broadcast(self):
        """Gets the broadcast of this ScheduleApiTriggeredCanvasesRequest.


        :return: The broadcast of this ScheduleApiTriggeredCanvasesRequest.
        :rtype: bool
        """
        return self._broadcast

    @broadcast.setter
    def broadcast(self, broadcast):
        """Sets the broadcast of this ScheduleApiTriggeredCanvasesRequest.


        :param broadcast: The broadcast of this ScheduleApiTriggeredCanvasesRequest.
        :type broadcast: bool
        """

        self._broadcast = broadcast

    @property
    def canvas_entry_properties(self):
        """Gets the canvas_entry_properties of this ScheduleApiTriggeredCanvasesRequest.


        :return: The canvas_entry_properties of this ScheduleApiTriggeredCanvasesRequest.
        :rtype: object
        """
        return self._canvas_entry_properties

    @canvas_entry_properties.setter
    def canvas_entry_properties(self, canvas_entry_properties):
        """Sets the canvas_entry_properties of this ScheduleApiTriggeredCanvasesRequest.


        :param canvas_entry_properties: The canvas_entry_properties of this ScheduleApiTriggeredCanvasesRequest.
        :type canvas_entry_properties: object
        """

        self._canvas_entry_properties = canvas_entry_properties

    @property
    def canvas_id(self):
        """Gets the canvas_id of this ScheduleApiTriggeredCanvasesRequest.


        :return: The canvas_id of this ScheduleApiTriggeredCanvasesRequest.
        :rtype: str
        """
        return self._canvas_id

    @canvas_id.setter
    def canvas_id(self, canvas_id):
        """Sets the canvas_id of this ScheduleApiTriggeredCanvasesRequest.


        :param canvas_id: The canvas_id of this ScheduleApiTriggeredCanvasesRequest.
        :type canvas_id: str
        """

        self._canvas_id = canvas_id

    @property
    def recipients(self):
        """Gets the recipients of this ScheduleApiTriggeredCanvasesRequest.


        :return: The recipients of this ScheduleApiTriggeredCanvasesRequest.
        :rtype: List[ScheduleApiTriggeredCanvasesRequestRecipientsInner]
        """
        return self._recipients

    @recipients.setter
    def recipients(self, recipients):
        """Sets the recipients of this ScheduleApiTriggeredCanvasesRequest.


        :param recipients: The recipients of this ScheduleApiTriggeredCanvasesRequest.
        :type recipients: List[ScheduleApiTriggeredCanvasesRequestRecipientsInner]
        """

        self._recipients = recipients

    @property
    def schedule(self):
        """Gets the schedule of this ScheduleApiTriggeredCanvasesRequest.


        :return: The schedule of this ScheduleApiTriggeredCanvasesRequest.
        :rtype: ScheduleApiTriggeredCanvasesRequestSchedule
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this ScheduleApiTriggeredCanvasesRequest.


        :param schedule: The schedule of this ScheduleApiTriggeredCanvasesRequest.
        :type schedule: ScheduleApiTriggeredCanvasesRequestSchedule
        """

        self._schedule = schedule
