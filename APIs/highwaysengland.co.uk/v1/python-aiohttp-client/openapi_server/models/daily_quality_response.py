# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.qualities import Qualities
from openapi_server import util


class DailyQualityResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, qualities: List[Qualities]=None, row_count: int=None):
        """DailyQualityResponse - a model defined in OpenAPI

        :param qualities: The qualities of this DailyQualityResponse.
        :param row_count: The row_count of this DailyQualityResponse.
        """
        self.openapi_types = {
            'qualities': List[Qualities],
            'row_count': int
        }

        self.attribute_map = {
            'qualities': 'Qualities',
            'row_count': 'row_count'
        }

        self._qualities = qualities
        self._row_count = row_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DailyQualityResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DailyQualityResponse of this DailyQualityResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qualities(self):
        """Gets the qualities of this DailyQualityResponse.


        :return: The qualities of this DailyQualityResponse.
        :rtype: List[Qualities]
        """
        return self._qualities

    @qualities.setter
    def qualities(self, qualities):
        """Sets the qualities of this DailyQualityResponse.


        :param qualities: The qualities of this DailyQualityResponse.
        :type qualities: List[Qualities]
        """

        self._qualities = qualities

    @property
    def row_count(self):
        """Gets the row_count of this DailyQualityResponse.


        :return: The row_count of this DailyQualityResponse.
        :rtype: int
        """
        return self._row_count

    @row_count.setter
    def row_count(self, row_count):
        """Sets the row_count of this DailyQualityResponse.


        :param row_count: The row_count of this DailyQualityResponse.
        :type row_count: int
        """

        self._row_count = row_count
