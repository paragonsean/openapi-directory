# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.area import Area
from openapi_server import util


class AreaResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, areas: List[Area]=None, row_count: int=None):
        """AreaResponse - a model defined in OpenAPI

        :param areas: The areas of this AreaResponse.
        :param row_count: The row_count of this AreaResponse.
        """
        self.openapi_types = {
            'areas': List[Area],
            'row_count': int
        }

        self.attribute_map = {
            'areas': 'areas',
            'row_count': 'row_count'
        }

        self._areas = areas
        self._row_count = row_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AreaResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AreaResponse of this AreaResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def areas(self):
        """Gets the areas of this AreaResponse.


        :return: The areas of this AreaResponse.
        :rtype: List[Area]
        """
        return self._areas

    @areas.setter
    def areas(self, areas):
        """Sets the areas of this AreaResponse.


        :param areas: The areas of this AreaResponse.
        :type areas: List[Area]
        """

        self._areas = areas

    @property
    def row_count(self):
        """Gets the row_count of this AreaResponse.


        :return: The row_count of this AreaResponse.
        :rtype: int
        """
        return self._row_count

    @row_count.setter
    def row_count(self, row_count):
        """Sets the row_count of this AreaResponse.


        :param row_count: The row_count of this AreaResponse.
        :type row_count: int
        """

        self._row_count = row_count
