# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SiteResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, id: str=None, latitude: float=None, longitude: float=None, name: str=None, status: str=None):
        """SiteResult - a model defined in OpenAPI

        :param description: The description of this SiteResult.
        :param id: The id of this SiteResult.
        :param latitude: The latitude of this SiteResult.
        :param longitude: The longitude of this SiteResult.
        :param name: The name of this SiteResult.
        :param status: The status of this SiteResult.
        """
        self.openapi_types = {
            'description': str,
            'id': str,
            'latitude': float,
            'longitude': float,
            'name': str,
            'status': str
        }

        self.attribute_map = {
            'description': 'Description',
            'id': 'Id',
            'latitude': 'Latitude',
            'longitude': 'Longitude',
            'name': 'Name',
            'status': 'Status'
        }

        self._description = description
        self._id = id
        self._latitude = latitude
        self._longitude = longitude
        self._name = name
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SiteResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SiteResult of this SiteResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this SiteResult.


        :return: The description of this SiteResult.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SiteResult.


        :param description: The description of this SiteResult.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this SiteResult.


        :return: The id of this SiteResult.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SiteResult.


        :param id: The id of this SiteResult.
        :type id: str
        """

        self._id = id

    @property
    def latitude(self):
        """Gets the latitude of this SiteResult.


        :return: The latitude of this SiteResult.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this SiteResult.


        :param latitude: The latitude of this SiteResult.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this SiteResult.


        :return: The longitude of this SiteResult.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this SiteResult.


        :param longitude: The longitude of this SiteResult.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def name(self):
        """Gets the name of this SiteResult.


        :return: The name of this SiteResult.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SiteResult.


        :param name: The name of this SiteResult.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this SiteResult.


        :return: The status of this SiteResult.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SiteResult.


        :param status: The status of this SiteResult.
        :type status: str
        """

        self._status = status
