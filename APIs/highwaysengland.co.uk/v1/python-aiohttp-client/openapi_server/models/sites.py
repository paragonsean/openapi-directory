# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Sites(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: List[bool]=None, description: List[str]=None, id: List[str]=None, lattitude: List[float]=None, longitude: List[float]=None, site_id: List[str]=None):
        """Sites - a model defined in OpenAPI

        :param active: The active of this Sites.
        :param description: The description of this Sites.
        :param id: The id of this Sites.
        :param lattitude: The lattitude of this Sites.
        :param longitude: The longitude of this Sites.
        :param site_id: The site_id of this Sites.
        """
        self.openapi_types = {
            'active': List[bool],
            'description': List[str],
            'id': List[str],
            'lattitude': List[float],
            'longitude': List[float],
            'site_id': List[str]
        }

        self.attribute_map = {
            'active': 'Active',
            'description': 'Description',
            'id': 'Id',
            'lattitude': 'Lattitude',
            'longitude': 'Longitude',
            'site_id': 'SiteId'
        }

        self._active = active
        self._description = description
        self._id = id
        self._lattitude = lattitude
        self._longitude = longitude
        self._site_id = site_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Sites':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Sites of this Sites.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this Sites.


        :return: The active of this Sites.
        :rtype: List[bool]
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this Sites.


        :param active: The active of this Sites.
        :type active: List[bool]
        """

        self._active = active

    @property
    def description(self):
        """Gets the description of this Sites.


        :return: The description of this Sites.
        :rtype: List[str]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Sites.


        :param description: The description of this Sites.
        :type description: List[str]
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this Sites.


        :return: The id of this Sites.
        :rtype: List[str]
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Sites.


        :param id: The id of this Sites.
        :type id: List[str]
        """

        self._id = id

    @property
    def lattitude(self):
        """Gets the lattitude of this Sites.


        :return: The lattitude of this Sites.
        :rtype: List[float]
        """
        return self._lattitude

    @lattitude.setter
    def lattitude(self, lattitude):
        """Sets the lattitude of this Sites.


        :param lattitude: The lattitude of this Sites.
        :type lattitude: List[float]
        """

        self._lattitude = lattitude

    @property
    def longitude(self):
        """Gets the longitude of this Sites.


        :return: The longitude of this Sites.
        :rtype: List[float]
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this Sites.


        :param longitude: The longitude of this Sites.
        :type longitude: List[float]
        """

        self._longitude = longitude

    @property
    def site_id(self):
        """Gets the site_id of this Sites.


        :return: The site_id of this Sites.
        :rtype: List[str]
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this Sites.


        :param site_id: The site_id of this Sites.
        :type site_id: List[str]
        """

        self._site_id = site_id
