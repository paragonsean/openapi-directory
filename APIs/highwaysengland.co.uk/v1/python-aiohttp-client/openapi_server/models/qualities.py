# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Qualities(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: datetime=None, quality: int=None):
        """Qualities - a model defined in OpenAPI

        :param _date: The _date of this Qualities.
        :param quality: The quality of this Qualities.
        """
        self.openapi_types = {
            '_date': datetime,
            'quality': int
        }

        self.attribute_map = {
            '_date': 'Date',
            'quality': 'Quality'
        }

        self.__date = _date
        self._quality = quality

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Qualities':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Qualities of this Qualities.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this Qualities.


        :return: The _date of this Qualities.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Qualities.


        :param _date: The _date of this Qualities.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def quality(self):
        """Gets the quality of this Qualities.


        :return: The quality of this Qualities.
        :rtype: int
        """
        return self._quality

    @quality.setter
    def quality(self, quality):
        """Sets the quality of this Qualities.


        :param quality: The quality of this Qualities.
        :type quality: int
        """

        self._quality = quality
