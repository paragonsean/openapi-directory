/**
 * Highways England API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AreaResponse from '../model/AreaResponse';

/**
* Areas service.
* @module api/AreasApi
* @version v1
*/
export default class AreasApi {

    /**
    * Constructs a new AreasApi. 
    * @alias module:api/AreasApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the areasGet operation.
     * @callback module:api/AreasApi~areasGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AreaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns list of areas
     * @param {String} version 
     * @param {module:api/AreasApi~areasGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AreaResponse}
     */
    areasGet(version, callback) {
      let postBody = null;
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling areasGet");
      }

      let pathParams = {
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AreaResponse;
      return this.apiClient.callApi(
        '/v{version}/areas', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the vversionAreasAreaIdsGet operation.
     * @callback module:api/AreasApi~vversionAreasAreaIdsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AreaResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns details of selected area
     * @param {String} areaIds 
     * @param {String} version 
     * @param {module:api/AreasApi~vversionAreasAreaIdsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AreaResponse}
     */
    vversionAreasAreaIdsGet(areaIds, version, callback) {
      let postBody = null;
      // verify the required parameter 'areaIds' is set
      if (areaIds === undefined || areaIds === null) {
        throw new Error("Missing the required parameter 'areaIds' when calling vversionAreasAreaIdsGet");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling vversionAreasAreaIdsGet");
      }

      let pathParams = {
        'area_Ids': areaIds,
        'version': version
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AreaResponse;
      return this.apiClient.callApi(
        '/v{version}/areas/{area_Ids}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
