/**
 * Highways England API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Sites model module.
 * @module model/Sites
 * @version v1
 */
class Sites {
    /**
     * Constructs a new <code>Sites</code>.
     * @alias module:model/Sites
     */
    constructor() { 
        
        Sites.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Sites</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Sites} obj Optional instance to populate.
     * @return {module:model/Sites} The populated <code>Sites</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Sites();

            if (data.hasOwnProperty('Active')) {
                obj['Active'] = ApiClient.convertToType(data['Active'], ['Boolean']);
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], ['String']);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], ['String']);
            }
            if (data.hasOwnProperty('Lattitude')) {
                obj['Lattitude'] = ApiClient.convertToType(data['Lattitude'], ['Number']);
            }
            if (data.hasOwnProperty('Longitude')) {
                obj['Longitude'] = ApiClient.convertToType(data['Longitude'], ['Number']);
            }
            if (data.hasOwnProperty('SiteId')) {
                obj['SiteId'] = ApiClient.convertToType(data['SiteId'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Sites</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Sites</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['Active'])) {
            throw new Error("Expected the field `Active` to be an array in the JSON data but got " + data['Active']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Description'])) {
            throw new Error("Expected the field `Description` to be an array in the JSON data but got " + data['Description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Id'])) {
            throw new Error("Expected the field `Id` to be an array in the JSON data but got " + data['Id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Lattitude'])) {
            throw new Error("Expected the field `Lattitude` to be an array in the JSON data but got " + data['Lattitude']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Longitude'])) {
            throw new Error("Expected the field `Longitude` to be an array in the JSON data but got " + data['Longitude']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['SiteId'])) {
            throw new Error("Expected the field `SiteId` to be an array in the JSON data but got " + data['SiteId']);
        }

        return true;
    }


}



/**
 * @member {Array.<Boolean>} Active
 */
Sites.prototype['Active'] = undefined;

/**
 * @member {Array.<String>} Description
 */
Sites.prototype['Description'] = undefined;

/**
 * @member {Array.<String>} Id
 */
Sites.prototype['Id'] = undefined;

/**
 * @member {Array.<Number>} Lattitude
 */
Sites.prototype['Lattitude'] = undefined;

/**
 * @member {Array.<Number>} Longitude
 */
Sites.prototype['Longitude'] = undefined;

/**
 * @member {Array.<String>} SiteId
 */
Sites.prototype['SiteId'] = undefined;






export default Sites;

