/**
 * Highways England API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Area model module.
 * @module model/Area
 * @version v1
 */
class Area {
    /**
     * Constructs a new <code>Area</code>.
     * @alias module:model/Area
     * @param description {String} 
     * @param name {String} 
     * @param xLatitude {String} 
     * @param xLongitude {String} 
     * @param yLatitude {String} 
     * @param yLongitude {String} 
     */
    constructor(description, name, xLatitude, xLongitude, yLatitude, yLongitude) { 
        
        Area.initialize(this, description, name, xLatitude, xLongitude, yLatitude, yLongitude);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description, name, xLatitude, xLongitude, yLatitude, yLongitude) { 
        obj['Description'] = description;
        obj['Name'] = name;
        obj['XLatitude'] = xLatitude;
        obj['XLongitude'] = xLongitude;
        obj['YLatitude'] = yLatitude;
        obj['YLongitude'] = yLongitude;
    }

    /**
     * Constructs a <code>Area</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Area} obj Optional instance to populate.
     * @return {module:model/Area} The populated <code>Area</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Area();

            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('XLatitude')) {
                obj['XLatitude'] = ApiClient.convertToType(data['XLatitude'], 'String');
            }
            if (data.hasOwnProperty('XLongitude')) {
                obj['XLongitude'] = ApiClient.convertToType(data['XLongitude'], 'String');
            }
            if (data.hasOwnProperty('YLatitude')) {
                obj['YLatitude'] = ApiClient.convertToType(data['YLatitude'], 'String');
            }
            if (data.hasOwnProperty('YLongitude')) {
                obj['YLongitude'] = ApiClient.convertToType(data['YLongitude'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Area</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Area</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Area.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['XLatitude'] && !(typeof data['XLatitude'] === 'string' || data['XLatitude'] instanceof String)) {
            throw new Error("Expected the field `XLatitude` to be a primitive type in the JSON string but got " + data['XLatitude']);
        }
        // ensure the json data is a string
        if (data['XLongitude'] && !(typeof data['XLongitude'] === 'string' || data['XLongitude'] instanceof String)) {
            throw new Error("Expected the field `XLongitude` to be a primitive type in the JSON string but got " + data['XLongitude']);
        }
        // ensure the json data is a string
        if (data['YLatitude'] && !(typeof data['YLatitude'] === 'string' || data['YLatitude'] instanceof String)) {
            throw new Error("Expected the field `YLatitude` to be a primitive type in the JSON string but got " + data['YLatitude']);
        }
        // ensure the json data is a string
        if (data['YLongitude'] && !(typeof data['YLongitude'] === 'string' || data['YLongitude'] instanceof String)) {
            throw new Error("Expected the field `YLongitude` to be a primitive type in the JSON string but got " + data['YLongitude']);
        }

        return true;
    }


}

Area.RequiredProperties = ["Description", "Name", "XLatitude", "XLongitude", "YLatitude", "YLongitude"];

/**
 * @member {String} Description
 */
Area.prototype['Description'] = undefined;

/**
 * @member {String} Id
 */
Area.prototype['Id'] = undefined;

/**
 * @member {String} Name
 */
Area.prototype['Name'] = undefined;

/**
 * @member {String} XLatitude
 */
Area.prototype['XLatitude'] = undefined;

/**
 * @member {String} XLongitude
 */
Area.prototype['XLongitude'] = undefined;

/**
 * @member {String} YLatitude
 */
Area.prototype['YLatitude'] = undefined;

/**
 * @member {String} YLongitude
 */
Area.prototype['YLongitude'] = undefined;






export default Area;

