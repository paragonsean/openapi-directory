/**
 * Highways England API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArea.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArea::OAIArea(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArea::OAIArea() {
    this->initializeModel();
}

OAIArea::~OAIArea() {}

void OAIArea::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_x_latitude_isSet = false;
    m_x_latitude_isValid = false;

    m_x_longitude_isSet = false;
    m_x_longitude_isValid = false;

    m_y_latitude_isSet = false;
    m_y_latitude_isValid = false;

    m_y_longitude_isSet = false;
    m_y_longitude_isValid = false;
}

void OAIArea::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArea::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_x_latitude_isValid = ::OpenAPI::fromJsonValue(m_x_latitude, json[QString("XLatitude")]);
    m_x_latitude_isSet = !json[QString("XLatitude")].isNull() && m_x_latitude_isValid;

    m_x_longitude_isValid = ::OpenAPI::fromJsonValue(m_x_longitude, json[QString("XLongitude")]);
    m_x_longitude_isSet = !json[QString("XLongitude")].isNull() && m_x_longitude_isValid;

    m_y_latitude_isValid = ::OpenAPI::fromJsonValue(m_y_latitude, json[QString("YLatitude")]);
    m_y_latitude_isSet = !json[QString("YLatitude")].isNull() && m_y_latitude_isValid;

    m_y_longitude_isValid = ::OpenAPI::fromJsonValue(m_y_longitude, json[QString("YLongitude")]);
    m_y_longitude_isSet = !json[QString("YLongitude")].isNull() && m_y_longitude_isValid;
}

QString OAIArea::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArea::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_x_latitude_isSet) {
        obj.insert(QString("XLatitude"), ::OpenAPI::toJsonValue(m_x_latitude));
    }
    if (m_x_longitude_isSet) {
        obj.insert(QString("XLongitude"), ::OpenAPI::toJsonValue(m_x_longitude));
    }
    if (m_y_latitude_isSet) {
        obj.insert(QString("YLatitude"), ::OpenAPI::toJsonValue(m_y_latitude));
    }
    if (m_y_longitude_isSet) {
        obj.insert(QString("YLongitude"), ::OpenAPI::toJsonValue(m_y_longitude));
    }
    return obj;
}

QString OAIArea::getDescription() const {
    return m_description;
}
void OAIArea::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIArea::is_description_Set() const{
    return m_description_isSet;
}

bool OAIArea::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIArea::getId() const {
    return m_id;
}
void OAIArea::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIArea::is_id_Set() const{
    return m_id_isSet;
}

bool OAIArea::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIArea::getName() const {
    return m_name;
}
void OAIArea::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIArea::is_name_Set() const{
    return m_name_isSet;
}

bool OAIArea::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIArea::getXLatitude() const {
    return m_x_latitude;
}
void OAIArea::setXLatitude(const QString &x_latitude) {
    m_x_latitude = x_latitude;
    m_x_latitude_isSet = true;
}

bool OAIArea::is_x_latitude_Set() const{
    return m_x_latitude_isSet;
}

bool OAIArea::is_x_latitude_Valid() const{
    return m_x_latitude_isValid;
}

QString OAIArea::getXLongitude() const {
    return m_x_longitude;
}
void OAIArea::setXLongitude(const QString &x_longitude) {
    m_x_longitude = x_longitude;
    m_x_longitude_isSet = true;
}

bool OAIArea::is_x_longitude_Set() const{
    return m_x_longitude_isSet;
}

bool OAIArea::is_x_longitude_Valid() const{
    return m_x_longitude_isValid;
}

QString OAIArea::getYLatitude() const {
    return m_y_latitude;
}
void OAIArea::setYLatitude(const QString &y_latitude) {
    m_y_latitude = y_latitude;
    m_y_latitude_isSet = true;
}

bool OAIArea::is_y_latitude_Set() const{
    return m_y_latitude_isSet;
}

bool OAIArea::is_y_latitude_Valid() const{
    return m_y_latitude_isValid;
}

QString OAIArea::getYLongitude() const {
    return m_y_longitude;
}
void OAIArea::setYLongitude(const QString &y_longitude) {
    m_y_longitude = y_longitude;
    m_y_longitude_isSet = true;
}

bool OAIArea::is_y_longitude_Set() const{
    return m_y_longitude_isSet;
}

bool OAIArea::is_y_longitude_Valid() const{
    return m_y_longitude_isValid;
}

bool OAIArea::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_x_latitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_x_longitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_y_latitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_y_longitude_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArea::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_description_isValid && m_name_isValid && m_x_latitude_isValid && m_x_longitude_isValid && m_y_latitude_isValid && m_y_longitude_isValid && true;
}

} // namespace OpenAPI
