/**
 * Highways England API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDailyQualityResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDailyQualityResponse::OAIDailyQualityResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDailyQualityResponse::OAIDailyQualityResponse() {
    this->initializeModel();
}

OAIDailyQualityResponse::~OAIDailyQualityResponse() {}

void OAIDailyQualityResponse::initializeModel() {

    m_qualities_isSet = false;
    m_qualities_isValid = false;

    m_row_count_isSet = false;
    m_row_count_isValid = false;
}

void OAIDailyQualityResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDailyQualityResponse::fromJsonObject(QJsonObject json) {

    m_qualities_isValid = ::OpenAPI::fromJsonValue(m_qualities, json[QString("Qualities")]);
    m_qualities_isSet = !json[QString("Qualities")].isNull() && m_qualities_isValid;

    m_row_count_isValid = ::OpenAPI::fromJsonValue(m_row_count, json[QString("row_count")]);
    m_row_count_isSet = !json[QString("row_count")].isNull() && m_row_count_isValid;
}

QString OAIDailyQualityResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDailyQualityResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_qualities.size() > 0) {
        obj.insert(QString("Qualities"), ::OpenAPI::toJsonValue(m_qualities));
    }
    if (m_row_count_isSet) {
        obj.insert(QString("row_count"), ::OpenAPI::toJsonValue(m_row_count));
    }
    return obj;
}

QList<OAIQualities> OAIDailyQualityResponse::getQualities() const {
    return m_qualities;
}
void OAIDailyQualityResponse::setQualities(const QList<OAIQualities> &qualities) {
    m_qualities = qualities;
    m_qualities_isSet = true;
}

bool OAIDailyQualityResponse::is_qualities_Set() const{
    return m_qualities_isSet;
}

bool OAIDailyQualityResponse::is_qualities_Valid() const{
    return m_qualities_isValid;
}

qint32 OAIDailyQualityResponse::getRowCount() const {
    return m_row_count;
}
void OAIDailyQualityResponse::setRowCount(const qint32 &row_count) {
    m_row_count = row_count;
    m_row_count_isSet = true;
}

bool OAIDailyQualityResponse::is_row_count_Set() const{
    return m_row_count_isSet;
}

bool OAIDailyQualityResponse::is_row_count_Valid() const{
    return m_row_count_isValid;
}

bool OAIDailyQualityResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_qualities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_row_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDailyQualityResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
