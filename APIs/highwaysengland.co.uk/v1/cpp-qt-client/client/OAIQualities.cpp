/**
 * Highways England API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQualities.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQualities::OAIQualities(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQualities::OAIQualities() {
    this->initializeModel();
}

OAIQualities::~OAIQualities() {}

void OAIQualities::initializeModel() {

    m_date_isSet = false;
    m_date_isValid = false;

    m_quality_isSet = false;
    m_quality_isValid = false;
}

void OAIQualities::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQualities::fromJsonObject(QJsonObject json) {

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("Date")]);
    m_date_isSet = !json[QString("Date")].isNull() && m_date_isValid;

    m_quality_isValid = ::OpenAPI::fromJsonValue(m_quality, json[QString("Quality")]);
    m_quality_isSet = !json[QString("Quality")].isNull() && m_quality_isValid;
}

QString OAIQualities::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQualities::asJsonObject() const {
    QJsonObject obj;
    if (m_date_isSet) {
        obj.insert(QString("Date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_quality_isSet) {
        obj.insert(QString("Quality"), ::OpenAPI::toJsonValue(m_quality));
    }
    return obj;
}

QDateTime OAIQualities::getDate() const {
    return m_date;
}
void OAIQualities::setDate(const QDateTime &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIQualities::is_date_Set() const{
    return m_date_isSet;
}

bool OAIQualities::is_date_Valid() const{
    return m_date_isValid;
}

qint32 OAIQualities::getQuality() const {
    return m_quality;
}
void OAIQualities::setQuality(const qint32 &quality) {
    m_quality = quality;
    m_quality_isSet = true;
}

bool OAIQualities::is_quality_Set() const{
    return m_quality_isSet;
}

bool OAIQualities::is_quality_Valid() const{
    return m_quality_isValid;
}

bool OAIQualities::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quality_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQualities::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
