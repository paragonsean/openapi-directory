/**
 * Highways England API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISiteResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISiteResponse::OAISiteResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISiteResponse::OAISiteResponse() {
    this->initializeModel();
}

OAISiteResponse::~OAISiteResponse() {}

void OAISiteResponse::initializeModel() {

    m_row_count_isSet = false;
    m_row_count_isValid = false;

    m_sites_isSet = false;
    m_sites_isValid = false;
}

void OAISiteResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISiteResponse::fromJsonObject(QJsonObject json) {

    m_row_count_isValid = ::OpenAPI::fromJsonValue(m_row_count, json[QString("row_count")]);
    m_row_count_isSet = !json[QString("row_count")].isNull() && m_row_count_isValid;

    m_sites_isValid = ::OpenAPI::fromJsonValue(m_sites, json[QString("sites")]);
    m_sites_isSet = !json[QString("sites")].isNull() && m_sites_isValid;
}

QString OAISiteResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISiteResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_row_count_isSet) {
        obj.insert(QString("row_count"), ::OpenAPI::toJsonValue(m_row_count));
    }
    if (m_sites.size() > 0) {
        obj.insert(QString("sites"), ::OpenAPI::toJsonValue(m_sites));
    }
    return obj;
}

qint32 OAISiteResponse::getRowCount() const {
    return m_row_count;
}
void OAISiteResponse::setRowCount(const qint32 &row_count) {
    m_row_count = row_count;
    m_row_count_isSet = true;
}

bool OAISiteResponse::is_row_count_Set() const{
    return m_row_count_isSet;
}

bool OAISiteResponse::is_row_count_Valid() const{
    return m_row_count_isValid;
}

QList<OAISiteResult> OAISiteResponse::getSites() const {
    return m_sites;
}
void OAISiteResponse::setSites(const QList<OAISiteResult> &sites) {
    m_sites = sites;
    m_sites_isSet = true;
}

bool OAISiteResponse::is_sites_Set() const{
    return m_sites_isSet;
}

bool OAISiteResponse::is_sites_Valid() const{
    return m_sites_isValid;
}

bool OAISiteResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_row_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sites.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISiteResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
