/**
 * Furkot Trips
 * Furkot provides Rest API to access user trip data. Using Furkot API an application can list user trips and display stops for a specific trip. Furkot API uses OAuth2 protocol to authorize applications to access data on behalf of users. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: trips@furkot.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Step from '../model/Step';
import Trip from '../model/Trip';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the tripGet operation.
     * @callback module:api/DefaultApi~tripGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Trip>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list user's trips
     * @param {module:api/DefaultApi~tripGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Trip>}
     */
    tripGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['furkot_auth_access_code', 'furkot_auth_implicit'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Trip];
      return this.apiClient.callApi(
        '/trip', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the tripTripIdStopGet operation.
     * @callback module:api/DefaultApi~tripTripIdStopGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Step>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list stops for a trip identified by {trip_id}
     * @param {String} tripId id of the trip
     * @param {module:api/DefaultApi~tripTripIdStopGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Step>}
     */
    tripTripIdStopGet(tripId, callback) {
      let postBody = null;
      // verify the required parameter 'tripId' is set
      if (tripId === undefined || tripId === null) {
        throw new Error("Missing the required parameter 'tripId' when calling tripTripIdStopGet");
      }

      let pathParams = {
        'trip_id': tripId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['furkot_auth_access_code', 'furkot_auth_implicit'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Step];
      return this.apiClient.callApi(
        '/trip/{trip_id}/stop', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
