/**
 * Furkot Trips
 * Furkot provides Rest API to access user trip data. Using Furkot API an application can list user trips and display stops for a specific trip. Furkot API uses OAuth2 protocol to authorize applications to access data on behalf of users. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: trips@furkot.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StepRoute model module.
 * @module model/StepRoute
 * @version 1.0.0
 */
class StepRoute {
    /**
     * Constructs a new <code>StepRoute</code>.
     * route leading to the stop
     * @alias module:model/StepRoute
     */
    constructor() { 
        
        StepRoute.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StepRoute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StepRoute} obj Optional instance to populate.
     * @return {module:model/StepRoute} The populated <code>StepRoute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StepRoute();

            if (data.hasOwnProperty('distance')) {
                obj['distance'] = ApiClient.convertToType(data['distance'], 'Number');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('polyline')) {
                obj['polyline'] = ApiClient.convertToType(data['polyline'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StepRoute</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StepRoute</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }
        // ensure the json data is a string
        if (data['polyline'] && !(typeof data['polyline'] === 'string' || data['polyline'] instanceof String)) {
            throw new Error("Expected the field `polyline` to be a primitive type in the JSON string but got " + data['polyline']);
        }

        return true;
    }


}



/**
 * route distance in meters
 * @member {Number} distance
 */
StepRoute.prototype['distance'] = undefined;

/**
 * route duration in seconds
 * @member {Number} duration
 */
StepRoute.prototype['duration'] = undefined;

/**
 * travel mode
 * @member {module:model/StepRoute.ModeEnum} mode
 */
StepRoute.prototype['mode'] = undefined;

/**
 * route path compatible with Google polyline encoding algorithm
 * @member {String} polyline
 */
StepRoute.prototype['polyline'] = undefined;





/**
 * Allowed values for the <code>mode</code> property.
 * @enum {String}
 * @readonly
 */
StepRoute['ModeEnum'] = {

    /**
     * value: "car"
     * @const
     */
    "car": "car",

    /**
     * value: "motorcycle"
     * @const
     */
    "motorcycle": "motorcycle",

    /**
     * value: "bicycle"
     * @const
     */
    "bicycle": "bicycle",

    /**
     * value: "walk"
     * @const
     */
    "walk": "walk",

    /**
     * value: "other"
     * @const
     */
    "other": "other"
};



export default StepRoute;

