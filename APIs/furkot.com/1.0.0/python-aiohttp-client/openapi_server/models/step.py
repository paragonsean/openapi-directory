# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.step_coordinates import StepCoordinates
from openapi_server.models.step_route import StepRoute
from openapi_server import util


class Step(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, arrival: datetime=None, coordinates: StepCoordinates=None, departure: datetime=None, name: str=None, nights: int=None, passthru: bool=None, route: StepRoute=None, url: str=None):
        """Step - a model defined in OpenAPI

        :param address: The address of this Step.
        :param arrival: The arrival of this Step.
        :param coordinates: The coordinates of this Step.
        :param departure: The departure of this Step.
        :param name: The name of this Step.
        :param nights: The nights of this Step.
        :param passthru: The passthru of this Step.
        :param route: The route of this Step.
        :param url: The url of this Step.
        """
        self.openapi_types = {
            'address': str,
            'arrival': datetime,
            'coordinates': StepCoordinates,
            'departure': datetime,
            'name': str,
            'nights': int,
            'passthru': bool,
            'route': StepRoute,
            'url': str
        }

        self.attribute_map = {
            'address': 'address',
            'arrival': 'arrival',
            'coordinates': 'coordinates',
            'departure': 'departure',
            'name': 'name',
            'nights': 'nights',
            'passthru': 'passthru',
            'route': 'route',
            'url': 'url'
        }

        self._address = address
        self._arrival = arrival
        self._coordinates = coordinates
        self._departure = departure
        self._name = name
        self._nights = nights
        self._passthru = passthru
        self._route = route
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Step':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Step of this Step.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this Step.

        address of the stop

        :return: The address of this Step.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Step.

        address of the stop

        :param address: The address of this Step.
        :type address: str
        """

        self._address = address

    @property
    def arrival(self):
        """Gets the arrival of this Step.

        arrival at the stop in its local timezone as YYYY-MM-DDThh:mm

        :return: The arrival of this Step.
        :rtype: datetime
        """
        return self._arrival

    @arrival.setter
    def arrival(self, arrival):
        """Sets the arrival of this Step.

        arrival at the stop in its local timezone as YYYY-MM-DDThh:mm

        :param arrival: The arrival of this Step.
        :type arrival: datetime
        """

        self._arrival = arrival

    @property
    def coordinates(self):
        """Gets the coordinates of this Step.


        :return: The coordinates of this Step.
        :rtype: StepCoordinates
        """
        return self._coordinates

    @coordinates.setter
    def coordinates(self, coordinates):
        """Sets the coordinates of this Step.


        :param coordinates: The coordinates of this Step.
        :type coordinates: StepCoordinates
        """

        self._coordinates = coordinates

    @property
    def departure(self):
        """Gets the departure of this Step.

        departure from the stop in its local timezone as YYYY-MM-DDThh:mm

        :return: The departure of this Step.
        :rtype: datetime
        """
        return self._departure

    @departure.setter
    def departure(self, departure):
        """Sets the departure of this Step.

        departure from the stop in its local timezone as YYYY-MM-DDThh:mm

        :param departure: The departure of this Step.
        :type departure: datetime
        """

        self._departure = departure

    @property
    def name(self):
        """Gets the name of this Step.

        name of the stop

        :return: The name of this Step.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Step.

        name of the stop

        :param name: The name of this Step.
        :type name: str
        """

        self._name = name

    @property
    def nights(self):
        """Gets the nights of this Step.

        number of nights

        :return: The nights of this Step.
        :rtype: int
        """
        return self._nights

    @nights.setter
    def nights(self, nights):
        """Sets the nights of this Step.

        number of nights

        :param nights: The nights of this Step.
        :type nights: int
        """

        self._nights = nights

    @property
    def passthru(self):
        """Gets the passthru of this Step.

        true for pass-through points anchoring route

        :return: The passthru of this Step.
        :rtype: bool
        """
        return self._passthru

    @passthru.setter
    def passthru(self, passthru):
        """Sets the passthru of this Step.

        true for pass-through points anchoring route

        :param passthru: The passthru of this Step.
        :type passthru: bool
        """

        self._passthru = passthru

    @property
    def route(self):
        """Gets the route of this Step.


        :return: The route of this Step.
        :rtype: StepRoute
        """
        return self._route

    @route.setter
    def route(self, route):
        """Sets the route of this Step.


        :param route: The route of this Step.
        :type route: StepRoute
        """

        self._route = route

    @property
    def url(self):
        """Gets the url of this Step.

        url of the page with more information about the stop

        :return: The url of this Step.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Step.

        url of the page with more information about the stop

        :param url: The url of this Step.
        :type url: str
        """

        self._url = url
