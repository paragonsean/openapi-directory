/**
 * Furkot Trips
 * Furkot provides Rest API to access user trip data. Using Furkot API an application can list user trips and display stops for a specific trip. Furkot API uses OAuth2 protocol to authorize applications to access data on behalf of users. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: trips@furkot.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStep_route.h
 *
 * route leading to the stop
 */

#ifndef OAIStep_route_H
#define OAIStep_route_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStep_route : public OAIObject {
public:
    OAIStep_route();
    OAIStep_route(QString json);
    ~OAIStep_route() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getDistance() const;
    void setDistance(const qint64 &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    qint64 getDuration() const;
    void setDuration(const qint64 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    QString getPolyline() const;
    void setPolyline(const QString &polyline);
    bool is_polyline_Set() const;
    bool is_polyline_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    qint64 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    QString m_polyline;
    bool m_polyline_isSet;
    bool m_polyline_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStep_route)

#endif // OAIStep_route_H
