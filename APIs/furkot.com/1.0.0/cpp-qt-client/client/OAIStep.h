/**
 * Furkot Trips
 * Furkot provides Rest API to access user trip data. Using Furkot API an application can list user trips and display stops for a specific trip. Furkot API uses OAuth2 protocol to authorize applications to access data on behalf of users. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: trips@furkot.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStep.h
 *
 * 
 */

#ifndef OAIStep_H
#define OAIStep_H

#include <QJsonObject>

#include "OAIStep_coordinates.h"
#include "OAIStep_route.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStep_coordinates;
class OAIStep_route;

class OAIStep : public OAIObject {
public:
    OAIStep();
    OAIStep(QString json);
    ~OAIStep() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QDateTime getArrival() const;
    void setArrival(const QDateTime &arrival);
    bool is_arrival_Set() const;
    bool is_arrival_Valid() const;

    OAIStep_coordinates getCoordinates() const;
    void setCoordinates(const OAIStep_coordinates &coordinates);
    bool is_coordinates_Set() const;
    bool is_coordinates_Valid() const;

    QDateTime getDeparture() const;
    void setDeparture(const QDateTime &departure);
    bool is_departure_Set() const;
    bool is_departure_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint64 getNights() const;
    void setNights(const qint64 &nights);
    bool is_nights_Set() const;
    bool is_nights_Valid() const;

    bool isPassthru() const;
    void setPassthru(const bool &passthru);
    bool is_passthru_Set() const;
    bool is_passthru_Valid() const;

    OAIStep_route getRoute() const;
    void setRoute(const OAIStep_route &route);
    bool is_route_Set() const;
    bool is_route_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QDateTime m_arrival;
    bool m_arrival_isSet;
    bool m_arrival_isValid;

    OAIStep_coordinates m_coordinates;
    bool m_coordinates_isSet;
    bool m_coordinates_isValid;

    QDateTime m_departure;
    bool m_departure_isSet;
    bool m_departure_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint64 m_nights;
    bool m_nights_isSet;
    bool m_nights_isValid;

    bool m_passthru;
    bool m_passthru_isSet;
    bool m_passthru_isValid;

    OAIStep_route m_route;
    bool m_route_isSet;
    bool m_route_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStep)

#endif // OAIStep_H
