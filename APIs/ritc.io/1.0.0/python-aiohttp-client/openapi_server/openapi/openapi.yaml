openapi: 3.0.1
info:
  description: Rules in the Cloud
  title: Ritc
  version: 1.0.0
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://pbs.twimg.com/profile_images/664480221534552064/CwdeYGxs_400x400.jpg
  x-origin:
  - format: swagger
    url: http://www.ritc.io/openapi/ritc.swagger.json
    version: "2.0"
  x-providerName: ritc.io
servers:
- url: https://api.ritc.io/
paths:
  /actions:
    get:
      description: List actions
      operationId: list_actions
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionShortResponse'
                type: array
          description: A list of actions in an app
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Actions
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.actions_controller
    post:
      description: Create a new action
      operationId: add_action
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action59'
        description: Action information
        required: true
        x-body-name: Action Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionShortResponse'
          description: An action was created
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Actions
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: Action Object
      x-openapi-router-controller: openapi_server.controllers.actions_controller
  /actions/{action_id}:
    delete:
      description: Delete an action
      operationId: remove_action
      parameters:
      - description: Id of action
        in: path
        name: action_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The action was successfully removed
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Actions
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.actions_controller
    get:
      description: Get an action
      operationId: get_action
      parameters:
      - description: Id of action_id
        in: path
        name: action_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ActionFullResponse'
                type: array
          description: Detailed information about an action
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Actions
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.actions_controller
    patch:
      description: Update information about a specific action
      operationId: update_action
      parameters:
      - description: Id of user
        in: path
        name: action_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action59'
        description: Action information
        required: true
        x-body-name: Action Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionShortResponse'
          description: Information about the action was updated successfully
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Actions
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: Action Object
      x-openapi-router-controller: openapi_server.controllers.actions_controller
  /admin:
    get:
      description: Ping the server
      operationId: admin
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Ritc is up
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - admin
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.admin_controller
  /admin/log:
    post:
      description: Log a message
      operationId: log_in_ritc
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Log message
        required: true
        x-body-name: message
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Message logged
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - admin
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: message
      x-openapi-router-controller: openapi_server.controllers.admin_controller
  /admin/ping:
    get:
      description: Ping the server
      operationId: ping_ritc
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Ritc is up
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - admin
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.admin_controller
  /apps:
    get:
      description: Get apps information
      operationId: list_apps
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppResponse'
                type: array
          description: A list of apps in an org
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.apps_controller
    post:
      description: Create a new app
      operationId: add_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
        description: App information
        required: true
        x-body-name: App Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResponse'
          description: An app was created
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: App Object
      x-openapi-router-controller: openapi_server.controllers.apps_controller
  /apps/channels/users:
    get:
      description: Get app channels
      operationId: list_app_channels
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppChannelResponse'
                type: array
          description: List of all channels in an app
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.apps_controller
  /apps/channels/{channel_id}/users:
    get:
      description: Get users of a specified channel
      operationId: list_app_channel_users
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppChannelResponse'
                type: array
          description: Detailed information about users of a specified channel
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.apps_controller
  /apps/channels/{channel_id}/users/{user_id}:
    get:
      description: Get user of a specified channel
      operationId: get_app_channel_user
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      - description: Id of User
        in: path
        name: user_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppChannelResponse'
                type: array
          description: Detailed information about a specified user of a specified
            channel
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.apps_controller
    post:
      description: Create user channel
      operationId: add_app_channel_user
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      - description: Id of User
        in: path
        name: user_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppChannelResponse'
          description: User was assigned to a channel in in app
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.apps_controller
  /apps/ext/api/credentials:
    get:
      description: Get external credentials
      operationId: list_channel_external_credentials
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppExternalCredentialsResponse'
                type: array
          description: Detailed information about external credentials
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.apps_controller
    post:
      description: Create new external credentials
      operationId: add_channel_external_credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppExternalCredentials'
        description: App_External_Credentials information
        required: true
        x-body-name: App_External_Credentials Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppExternalCredentialsResponse'
          description: External credentials created
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: App_External_Credentials Object
      x-openapi-router-controller: openapi_server.controllers.apps_controller
  /apps/ext/api/credentials/{channel_id}:
    delete:
      description: Delete credentials for a channel
      operationId: remove_channel_external_credentials
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The credentials for a channel were successfully removed
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.apps_controller
    get:
      description: Get credentials for a channel in an app
      operationId: get_channel_external_credentials
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppExternalCredentialsResponse'
                type: array
          description: Credentials for a channel in an app
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.apps_controller
    patch:
      description: Update credentials for a channel
      operationId: update_channel_external_credentials
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppExternalCredentials'
        description: App_External_Credentials information
        required: true
        x-body-name: App_External_Credentials Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppExternalCredentialsResponse'
          description: Information about the channel credentials was updated successfully
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: App_External_Credentials Object
      x-openapi-router-controller: openapi_server.controllers.apps_controller
  /apps/rulegroup/run/{rule_id_list}:
    post:
      description: Run specified rule group in the app
      operationId: run_rule_group
      parameters:
      - description: "Ids of rules in the group, separated by commas, no spaces"
        in: path
        name: rule_id_list
        required: true
        schema:
          type: string
      - description: Do not continue with remaining rules after a rule fires
        in: query
        name: break_when_rule_fires
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Initial data
        required: false
        x-body-name: initial_data
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleResults'
                type: array
          description: "Execution of specified rules in the app (for user #1)"
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: initial_data
      x-openapi-router-controller: openapi_server.controllers.apps_controller
  /apps/rules/run:
    post:
      description: Run active app rules
      operationId: run_app
      parameters:
      - description: Do not continue with remaining rules after a rule fires
        in: query
        name: break_when_rule_fires
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Initial data
        required: false
        x-body-name: initial_data
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleResults'
                type: array
          description: "Execution of active rules in the app (for user #1)"
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: initial_data
      x-openapi-router-controller: openapi_server.controllers.apps_controller
  /apps/{app_id}:
    delete:
      description: Delete an app
      operationId: remove_app
      parameters:
      - description: Id of App
        in: path
        name: app_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The app was successfully removed
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.apps_controller
    get:
      description: Get app information
      operationId: get_app
      parameters:
      - description: Id of App
        in: path
        name: app_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppResponse'
                type: array
          description: Detailed information about an app
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.apps_controller
    patch:
      description: Update an app
      operationId: update_app
      parameters:
      - description: Id of app
        in: path
        name: app_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
        description: App information
        required: true
        x-body-name: App Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResponse'
          description: Information about the app was updated successfully
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Apps
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: App Object
      x-openapi-router-controller: openapi_server.controllers.apps_controller
  /channels:
    get:
      description: Retrieve Channels
      operationId: list_channels
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelResponse'
                type: array
          description: A list of channels available to a logged-in user
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.channels_controller
    post:
      description: Create a channel
      operationId: add_channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
        description: Channel information
        required: true
        x-body-name: Channel Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelResponse'
          description: A private channel was created
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: Channel Object
      x-openapi-router-controller: openapi_server.controllers.channels_controller
  /channels/anonymous:
    get:
      description: Retrieve Channels anonymously
      operationId: list_anonymous_channels
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelResponse'
                type: array
          description: A list of channels available to an anonymous user
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.channels_controller
  /channels/{channel_id}:
    delete:
      description: Delete a channel
      operationId: remove_channel
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The channel was successfully removed
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.channels_controller
    get:
      description: Get channel information
      operationId: get_channel
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ChannelResponse'
                type: array
          description: Detailed information about a channel
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.channels_controller
    patch:
      description: Update a channel
      operationId: update_channel
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
        description: Channel information
        required: true
        x-body-name: Channel Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelResponse'
          description: Information about the channel was updated successfully
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: Channel Object
      x-openapi-router-controller: openapi_server.controllers.channels_controller
  /channels/{channel_id}/functions:
    get:
      description: Retrieve Channel Functions
      operationId: list_channel_functions
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FunctionResponse'
                type: array
          description: A list of functions available in a channel
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.channels_controller
    post:
      description: Create a channel function
      operationId: add_channel_function
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Function7'
        description: Channel Function information
        required: true
        x-body-name: Channel Function Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FunctionResponse'
          description: A private channel function  was created
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: Channel Function Object
      x-openapi-router-controller: openapi_server.controllers.channels_controller
  /channels/{channel_id}/functions/{function_id}:
    get:
      description: Get channel function information
      operationId: get_channel_function
      parameters:
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      - description: Id of Channel Function
        in: path
        name: function_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FunctionResponse'
                type: array
          description: Detailed information about a channel function
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Channels
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.channels_controller
  /orgs:
    post:
      description: Create an org
      operationId: add_organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Org'
        description: Org information
        required: true
        x-body-name: Org Object
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrgResponse'
                type: array
          description: An org was successfully created
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Orgs
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: Org Object
      x-openapi-router-controller: openapi_server.controllers.orgs_controller
  /orgs/me:
    get:
      description: Get org information
      operationId: get_my_organization
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrgResponse'
                type: array
          description: Detailed information about an org
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Orgs
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.orgs_controller
  /rules:
    get:
      description: List rules
      operationId: list_rules
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleShortResponse'
                type: array
          description: A list of rules in an app
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Rules
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.rules_controller
    post:
      description: Create a new rule
      operationId: add_rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
        description: Rule information
        required: true
        x-body-name: Rule Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleFullResponse'
          description: A rule was created
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Rules
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: Rule Object
      x-openapi-router-controller: openapi_server.controllers.rules_controller
  /rules/{rule_id}:
    delete:
      description: Delete a rule
      operationId: remove_rule
      parameters:
      - description: Id of rule
        in: path
        name: rule_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The rule was successfully removed
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Rules
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.rules_controller
    get:
      description: Get a rule
      operationId: get_rule
      parameters:
      - description: Id of rule
        in: path
        name: rule_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleFullResponse'
                type: array
          description: Detailed information about a rule
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Rules
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.rules_controller
    patch:
      description: Update information about a specific rule
      operationId: update_rule
      parameters:
      - description: Id of user
        in: path
        name: rule_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
        description: Rule information
        required: true
        x-body-name: Rule Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleFullResponse'
          description: Information about the rule was updated successfully
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Rules
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: Rule Object
      x-openapi-router-controller: openapi_server.controllers.rules_controller
  /rules/{rule_id}/run:
    post:
      description: Run a rule
      operationId: run_rule
      parameters:
      - description: Id of rule
        in: path
        name: rule_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Initial data
        required: false
        x-body-name: initial_data
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A rule ran successfully
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Rules
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: initial_data
      x-openapi-router-controller: openapi_server.controllers.rules_controller
  /triggers:
    get:
      description: Triggers in an app
      operationId: list_triggers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TriggerShortResponse'
                type: array
          description: A list of triggers in an app
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Triggers
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
    post:
      description: Create a new trigger in an app
      operationId: add_trigger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger54'
        description: Trigger parameters and configuration
        required: true
        x-body-name: Trigger Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerShortResponse'
          description: A trigger was successfully created
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Triggers
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: Trigger Object
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
  /triggers/{trigger_id}:
    delete:
      description: Delete a trigger
      operationId: remove_trigger
      parameters:
      - description: Id of Trigger
        in: path
        name: trigger_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The trigger was successfully removed
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Triggers
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
    get:
      description: Get a trigger
      operationId: get_trigger
      parameters:
      - description: Id of Trigger
        in: path
        name: trigger_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TriggerFullResponse'
                type: array
          description: Detailed information about a trigger
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Triggers
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
    patch:
      description: Update a trigger
      operationId: update_trigger
      parameters:
      - description: Id of user
        in: path
        name: trigger_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trigger54'
        description: Trigger information
        required: true
        x-body-name: Trigger Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TriggerShortResponse'
          description: Information about the trigger was updated successfully
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Triggers
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: Trigger Object
      x-openapi-router-controller: openapi_server.controllers.triggers_controller
  /users:
    get:
      description: Users
      operationId: list_app_users
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppUserResponse'
                type: array
          description: A list of App Users in an app
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
    post:
      description: Create a new App User
      operationId: add_app_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        description: App User information
        required: true
        x-body-name: App User Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserResponse'
          description: An App User was created
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: App User Object
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/admin:
    get:
      description: Admin users
      operationId: list_admin_users
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AdminUserResponse'
                type: array
          description: A list of admin users in an app
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
    post:
      description: Create a new admin user
      operationId: add_admin_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
        description: Admin User information
        required: true
        x-body-name: Admin_User Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserResponse'
          description: An admin user was created
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: Admin_User Object
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/admin/{user_id}:
    delete:
      description: Remove an admin user
      operationId: remove_admin_user
      parameters:
      - description: Id of Admin_User
        in: path
        name: user_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The admin user was successfully removed
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
    get:
      description: Get an admin user
      operationId: get_admin_user
      parameters:
      - description: Id of Admin_User
        in: path
        name: user_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AdminUserResponse'
                type: array
          description: Detailed information about an admin user
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
    patch:
      description: Update information about an admin user
      operationId: update_admin_user
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
        description: Admin User information
        required: true
        x-body-name: Admin_User Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserResponse'
          description: Information about the admin user was updated successfully
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: Admin_User Object
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/authenticate/{user_id}/channel/{channel_id}:
    post:
      description: Authenticate a user for a channel
      operationId: authenticate_app_user_for_channel
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        schema:
          type: string
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthorizeUrlResponse'
                type: array
          description: Authorize url to be sent an authorize request
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/{user_id}:
    delete:
      description: Remove a user
      operationId: remove_app_user
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The user was successfully removed
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
    get:
      description: Get an App User
      operationId: get_app_user
      parameters:
      - description: Id of App User
        in: path
        name: user_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppUserResponse'
                type: array
          description: Detailed information about an App User
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
    patch:
      description: Update information about an App User
      operationId: update_app_user
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        description: App User information
        required: true
        x-body-name: App User Object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserResponse'
          description: Information about the user was updated successfully
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: App User Object
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/{user_id}/channels:
    get:
      description: Channels available to a User
      operationId: list_app_user_channels
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserChannel'
                type: array
          description: A list of channels available to a specific user
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
    post:
      description: Assign a channel to a user
      operationId: add_app_user_to_channel
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: Id of Channel
        required: true
        x-body-name: channel_id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserChannel'
          description: A channel was assigned to a user
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-codegen-request-body-name: channel_id
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/{user_id}/channels/{channel_id}:
    delete:
      description: Remove a user channel assignment
      operationId: remove_app_user_from_channel
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        schema:
          type: string
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The channel was successfully removed from the user
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
    get:
      description: Get a user channel
      operationId: get_app_user_channel
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        schema:
          type: string
      - description: Id of Channel
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserChannel'
                type: array
          description: Detailed information about a specific channel for a specific
            user
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/{user_id}/rules:
    get:
      description: Rules for a User
      operationId: list_app_user_rules
      parameters:
      - description: Id of user
        in: path
        name: user_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleShortResponse'
                type: array
          description: A list of rules applying to a specific user
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/{user_id}/rules/{rule_id}:
    delete:
      description: Remove a rule user
      operationId: remove_app_user_from_rule
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        schema:
          type: string
      - description: Id of Rule
        in: path
        name: rule_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: The rule was successfully removed from the system
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
    get:
      description: Get a user
      operationId: get_app_user_rule
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        schema:
          type: string
      - description: Id of Rule
        in: path
        name: rule_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RuleFullResponse'
                type: array
          description: Detailed information about a rule
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
    post:
      description: Assign a user to a rule
      operationId: add_app_user_to_rule
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        schema:
          type: string
      - description: Id of Rule
        in: path
        name: rule_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleShortResponse'
          description: A rule was assigned to the user
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/{user_id}/rules/{rule_id}/run:
    post:
      description: Run rule for a user
      operationId: run_rule_for_app_user
      parameters:
      - description: Id of User
        in: path
        name: user_id
        required: true
        schema:
          type: string
      - description: Id of Rule
        in: path
        name: rule_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: A rule ran successfully for a user
        "400":
          content:
            application/json:
              schema:
                type: object
          description: Invalid Input
        default:
          content:
            application/json:
              schema:
                type: object
          description: Unexpected error
      security:
      - Authorization: []
      tags:
      - Users
      x-operation-settings:
        AllowDynamicFormParameters: false
        AllowDynamicQueryParameters: false
        CollectParameters: false
        IsMultiContentStreaming: false
      x-unitTests: []
      x-openapi-router-controller: openapi_server.controllers.users_controller
components:
  schemas:
    Action:
      example:
        functionId: functionId
        createdDate: createdDate
        modifiedDate: modifiedDate
        name: name
        description: description
        id: id
        channelId: channelId
        status: active
      properties:
        channelId:
          title: channelId
          type: string
        createdDate:
          description: The date the rule was created
          title: createdDate
          type: string
        description:
          title: description
          type: string
        functionId:
          title: functionId
          type: string
        id:
          title: id
          type: string
        modifiedDate:
          description: The date the rule was modified
          title: modifiedDate
          type: string
        name:
          title: name
          type: string
        status:
          $ref: '#/components/schemas/Status'
      title: Action
      type: object
    Action59:
      example:
        codes: "{}"
        functionId: functionId
        name: name
        parameters: "{}"
        channelId: 0
        desc: desc
      properties:
        channelId:
          description: Id of channel used by action
          format: int32
          title: channelId
          type: integer
        codes:
          description: Object containing named Javascript code sets
          properties: {}
          title: codes
          type: object
        desc:
          description: Action description
          title: desc
          type: string
        functionId:
          description: Hash id of channel function used by action
          title: functionId
          type: string
        name:
          description: Action name
          title: name
          type: string
        parameters:
          description: Object containing channel-defined action parameters
          properties: {}
          title: parameters
          type: object
      required:
      - channelId
      - functionId
      - name
      title: Action59
      type: object
    ActionFullResponse:
      example:
        codes: "{}"
        functionId: functionId
        createdDate: createdDate
        modifiedDate: modifiedDate
        name: name
        description: description
        id: 6
        parameters: "{}"
        channelId: 0
        status: active
      properties:
        channelId:
          format: int32
          title: channelId
          type: integer
        codes:
          properties: {}
          title: codes
          type: object
        createdDate:
          description: The date the action was created
          title: createdDate
          type: string
        description:
          description: Action description
          title: description
          type: string
        functionId:
          title: functionId
          type: string
        id:
          format: int32
          title: id
          type: integer
        modifiedDate:
          description: The date the action was modified
          title: modifiedDate
          type: string
        name:
          description: Action name
          title: name
          type: string
        parameters:
          properties: {}
          title: parameters
          type: object
        status:
          $ref: '#/components/schemas/Status'
      title: Action_Full_Response
      type: object
    ActionShortResponse:
      example:
        functionId: functionId
        createdDate: createdDate
        modifiedDate: modifiedDate
        name: name
        description: description
        id: id
        channelId: channelId
        status: active
      properties:
        channelId:
          title: channelId
          type: string
        createdDate:
          description: The date the action was created
          title: createdDate
          type: string
        description:
          description: Action description
          title: description
          type: string
        functionId:
          title: functionId
          type: string
        id:
          title: id
          type: string
        modifiedDate:
          description: The date the action was modified
          title: modifiedDate
          type: string
        name:
          description: Action name
          title: name
          type: string
        status:
          $ref: '#/components/schemas/Status'
      title: Action_Short_Response
      type: object
    AdminUser:
      example:
        password: password
        type: admin
        email: email
      properties:
        email:
          description: Admin User email address
          title: email
          type: string
        password:
          description: Admin User password
          title: password
          type: string
        type:
          $ref: '#/components/schemas/Type41'
      title: Admin_User
      type: object
    AdminUserResponse:
      example:
        createdDate: createdDate
        modifiedDate: modifiedDate
        name: name
        id: 0
        email: email
        status: active
      properties:
        createdDate:
          description: The date the admin user was created
          title: createdDate
          type: string
        email:
          description: Admin User email address
          title: email
          type: string
        id:
          format: int32
          title: id
          type: integer
        modifiedDate:
          description: The date the admin user was modified
          title: modifiedDate
          type: string
        name:
          description: Admin User name
          title: name
          type: string
        status:
          $ref: '#/components/schemas/Status'
      title: Admin_User_Response
      type: object
    ApiType:
      enum:
      - Internal
      - REST
      - SDK
      title: ApiType
      type: string
    App:
      example:
        name: name
        desc: desc
      properties:
        desc:
          description: App description
          title: desc
          type: string
        name:
          description: App name
          title: name
          type: string
      title: App
      type: object
    AppChannelResponse:
      example:
        createdDate: createdDate
        id: 6
        userId: 1
        channelId: 0
        status: active
      properties:
        channelId:
          description: Channel Id
          format: int32
          title: channelId
          type: integer
        createdDate:
          description: The date the user was created
          title: createdDate
          type: string
        id:
          format: int32
          title: id
          type: integer
        status:
          $ref: '#/components/schemas/Status'
        userId:
          description: Id of App User assigned to Channel
          format: int32
          title: userId
          type: integer
      title: App_Channel_Response
      type: object
    AppExternalCredentials:
      example:
        credentials: "{}"
        name: name
        authType: apikey
        channel_id: channel_id
      properties:
        authType:
          $ref: '#/components/schemas/AuthType'
        channel_id:
          title: channel_id
          type: string
        credentials:
          properties: {}
          title: credentials
          type: object
        name:
          description: App external credentials api name
          title: name
          type: string
      title: App_External_Credentials
      type: object
    AppExternalCredentialsResponse:
      example:
        credentials: "{}"
        name: name
        id: id
        authType: apikey
        channel_id: channel_id
      properties:
        authType:
          $ref: '#/components/schemas/AuthType'
        channel_id:
          title: channel_id
          type: string
        credentials:
          properties: {}
          title: credentials
          type: object
        id:
          title: id
          type: string
        name:
          description: App external credentials api name
          title: name
          type: string
      title: App_External_Credentials_Response
      type: object
    AppResponse:
      example:
        createdDate: createdDate
        apiKey: apiKey
        modifiedDate: modifiedDate
        name: name
        description: description
        id: id
        status: active
      properties:
        apiKey:
          description: App ApiKey
          title: apiKey
          type: string
        createdDate:
          description: The date the app was created
          title: createdDate
          type: string
        description:
          description: App description
          title: description
          type: string
        id:
          title: id
          type: string
        modifiedDate:
          description: The date the app was modified
          title: modifiedDate
          type: string
        name:
          description: App name
          title: name
          type: string
        status:
          $ref: '#/components/schemas/Status'
      title: App_Response
      type: object
    AppUser:
      example:
        password: password
        name: name
        config: "{}"
      properties:
        config:
          description: Object containing user-defined app user configuration
          properties: {}
          title: config
          type: object
        name:
          description: Display name of App User
          title: name
          type: string
        password:
          description: App User password
          title: password
          type: string
      title: App_User
      type: object
    AppUserResponse:
      example:
        createdDate: createdDate
        modifiedDate: modifiedDate
        name: name
        description: description
        id: id
        status: active
      properties:
        createdDate:
          description: The date the user was created
          title: createdDate
          type: string
        description:
          description: Description of App User
          title: description
          type: string
        id:
          description: Id of App User
          title: id
          type: string
        modifiedDate:
          description: The date the user was modified
          title: modifiedDate
          type: string
        name:
          description: Display name of App User
          title: name
          type: string
        status:
          $ref: '#/components/schemas/Status'
      title: App_User_Response
      type: object
    AuthType:
      enum:
      - apikey
      - basic
      - none
      - oauth2
      title: AuthType
      type: string
    AuthorizeUrlResponse:
      example:
        url: url
      properties:
        url:
          title: url
          type: string
      title: Authorize_Url_Response
      type: object
    Channel:
      example:
        functions:
        - name: name
          id: id
          type: action
          parameters:
          - value: value
            key: key
          - value: value
            key: key
        - name: name
          id: id
          type: action
          parameters:
          - value: value
            key: key
          - value: value
            key: key
        name: name
        description: description
        id: id
        type: "{}"
      properties:
        description:
          description: Channel description
          title: description
          type: string
        functions:
          items:
            $ref: '#/components/schemas/Function'
          title: functions
          type: array
        id:
          description: Id of channel
          title: id
          type: string
        name:
          description: Channel name
          title: name
          type: string
        type:
          description: "Type of channel. Choices are 'public' or 'private'. Private\
            \ channels are only viewable within an account, while public channels\
            \ are viewable to everyone in the system"
          properties: {}
          title: type
          type: object
      title: Channel
      type: object
    ChannelResponse:
      example:
        functions:
        - name: name
          description: description
          id: id
          type: action
        - name: name
          description: description
          id: id
          type: action
        name: name
        description: description
        id: id
        type: "{}"
      properties:
        description:
          description: Channel description
          title: description
          type: string
        functions:
          items:
            $ref: '#/components/schemas/Function5'
          title: functions
          type: array
        id:
          description: Id of channel
          title: id
          type: string
        name:
          description: Channel name
          title: name
          type: string
        type:
          description: "Type of channel. Choices are 'public' or 'private'. Private\
            \ channels are only viewable within an account, while public channels\
            \ are viewable to everyone"
          properties: {}
          title: type
          type: object
      title: Channel_Response
      type: object
    Error:
      properties:
        code:
          format: int32
          type: integer
        fields:
          type: string
        message:
          type: string
      title: Error
      type: object
    Function:
      example:
        name: name
        id: id
        type: action
        parameters:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        id:
          title: id
          type: string
        name:
          description: Function name
          title: name
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/Parameter'
          title: parameters
          type: array
        type:
          $ref: '#/components/schemas/Type'
      title: Function
      type: object
    Function5:
      example:
        name: name
        description: description
        id: id
        type: action
      properties:
        description:
          description: Function description
          title: description
          type: string
        id:
          title: id
          type: string
        name:
          description: Function name
          title: name
          type: string
        type:
          $ref: '#/components/schemas/Type'
      title: Function5
      type: object
    Function7:
      example:
        endpoint: endpoint
        name: name
        requestParameters:
        - schema:
            default: default
            datatype: "{}"
            style: postbody
            expose: "{}"
            required: "{}"
          name: name
          description: description
          label: label
          fieldType: fieldType
        - schema:
            default: default
            datatype: "{}"
            style: postbody
            expose: "{}"
            required: "{}"
          name: name
          description: description
          label: label
          fieldType: fieldType
        responseFormat: Html
        httpMethod: DELETE
        type: action
        apiType: Internal
        desc: desc
      properties:
        apiType:
          $ref: '#/components/schemas/ApiType'
        desc:
          description: Function description
          title: desc
          type: string
        endpoint:
          description: Function endpoint
          title: endpoint
          type: string
        httpMethod:
          $ref: '#/components/schemas/HttpMethod'
        name:
          description: Function name
          title: name
          type: string
        requestParameters:
          items:
            $ref: '#/components/schemas/RequestParameter'
          title: requestParameters
          type: array
        responseFormat:
          $ref: '#/components/schemas/ResponseFormat'
        type:
          $ref: '#/components/schemas/Type'
      title: Function7
      type: object
    FunctionResponse:
      example:
        endpoint: endpoint
        name: name
        requestParameters:
        - schema:
            default: default
            datatype: "{}"
            style: postbody
            expose: "{}"
            required: "{}"
          name: name
          description: description
          label: label
          fieldType: fieldType
        - schema:
            default: default
            datatype: "{}"
            style: postbody
            expose: "{}"
            required: "{}"
          name: name
          description: description
          label: label
          fieldType: fieldType
        description: description
        responseFormat: Html
        id: id
        httpMethod: DELETE
        type: action
        apiType: Internal
      properties:
        apiType:
          $ref: '#/components/schemas/ApiType'
        description:
          description: Function description
          title: description
          type: string
        endpoint:
          description: Function endpoint
          title: endpoint
          type: string
        httpMethod:
          $ref: '#/components/schemas/HttpMethod'
        id:
          title: id
          type: string
        name:
          description: Function name
          title: name
          type: string
        requestParameters:
          items:
            $ref: '#/components/schemas/RequestParameter'
          title: requestParameters
          type: array
        responseFormat:
          $ref: '#/components/schemas/ResponseFormat'
        type:
          $ref: '#/components/schemas/Type'
      title: Function_Response
      type: object
    HttpMethod:
      enum:
      - DELETE
      - GET
      - PATCH
      - POST
      title: HttpMethod
      type: string
    Org:
      example:
        name: name
        type: type
        desc: desc
      properties:
        desc:
          description: Org description
          title: desc
          type: string
        name:
          description: Org name
          title: name
          type: string
        type:
          description: Org type
          title: type
          type: string
      required:
      - name
      title: Org
      type: object
    OrgResponse:
      example:
        planCat: "{}"
        createdDate: createdDate
        modifiedDate: modifiedDate
        name: name
        id: id
        type: "{}"
        plan: free
        status: status
      properties:
        createdDate:
          description: The date the org was created
          title: createdDate
          type: string
        id:
          title: id
          type: string
        modifiedDate:
          description: The date the org was modified
          title: modifiedDate
          type: string
        name:
          description: Org name
          title: name
          type: string
        plan:
          $ref: '#/components/schemas/Plan'
        planCat:
          properties: {}
          title: planCat
          type: object
        status:
          description: Org name
          title: status
          type: string
        type:
          properties: {}
          title: type
          type: object
      title: Org_Response
      type: object
    Parameter:
      example:
        value: value
        key: key
      properties:
        key:
          title: key
          type: string
        value:
          title: value
          type: string
      required:
      - key
      - value
      title: Parameter
      type: object
    Plan:
      enum:
      - free
      - basic
      title: Plan
      type: string
    RequestParameter:
      example:
        schema:
          default: default
          datatype: "{}"
          style: postbody
          expose: "{}"
          required: "{}"
        name: name
        description: description
        label: label
        fieldType: fieldType
      properties:
        description:
          title: description
          type: string
        fieldType:
          title: fieldType
          type: string
        label:
          title: label
          type: string
        name:
          title: name
          type: string
        schema:
          $ref: '#/components/schemas/Schema'
      title: RequestParameter
      type: object
    ResponseFormat:
      enum:
      - Html
      - Json
      - Text
      - Xml
      title: ResponseFormat
      type: string
    Rule:
      example:
        actionIds: actionIds
        triggerIds: triggerIds
        name: name
        description: description
        status: active
      properties:
        actionIds:
          description: Rule description
          title: actionIds
          type: string
        description:
          description: Rule description
          title: description
          type: string
        name:
          description: Rule name
          title: name
          type: string
        status:
          $ref: '#/components/schemas/Status'
        triggerIds:
          description: Rule description
          title: triggerIds
          type: string
      title: Rule
      type: object
    RuleFullResponse:
      example:
        createdDate: createdDate
        modifiedDate: modifiedDate
        name: name
        description: description
        id: 0
        triggers:
        - functionId: functionId
          createdDate: createdDate
          modifiedDate: modifiedDate
          name: name
          description: description
          id: id
          channelId: channelId
          status: null
        - functionId: functionId
          createdDate: createdDate
          modifiedDate: modifiedDate
          name: name
          description: description
          id: id
          channelId: channelId
          status: null
        actions:
        - functionId: functionId
          createdDate: createdDate
          modifiedDate: modifiedDate
          name: name
          description: description
          id: id
          channelId: channelId
          status: active
        - functionId: functionId
          createdDate: createdDate
          modifiedDate: modifiedDate
          name: name
          description: description
          id: id
          channelId: channelId
          status: active
        status: null
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Action'
          title: actions
          type: array
        createdDate:
          description: The date the rule was created
          title: createdDate
          type: string
        description:
          description: Rule description
          title: description
          type: string
        id:
          description: Rule Id
          format: int32
          title: id
          type: integer
        modifiedDate:
          description: The date the rule was modified
          title: modifiedDate
          type: string
        name:
          description: Rule name
          title: name
          type: string
        status:
          $ref: '#/components/schemas/Status'
        triggers:
          items:
            $ref: '#/components/schemas/Trigger'
          title: triggers
          type: array
      title: Rule_Full_Response
      type: object
    RuleResults:
      example:
        name: name
        id: id
        type: action
      properties:
        id:
          title: id
          type: string
        name:
          description: Name of rule results
          title: name
          type: string
        type:
          $ref: '#/components/schemas/Type'
      title: Rule_Results
      type: object
    RuleShortResponse:
      example:
        createdDate: createdDate
        modifiedDate: modifiedDate
        name: name
        description: description
        id: 0
        status: active
      properties:
        createdDate:
          description: The date the rule was created
          title: createdDate
          type: string
        description:
          description: Rule description
          title: description
          type: string
        id:
          description: Rule Id
          format: int32
          title: id
          type: integer
        modifiedDate:
          description: The date the rule was modified
          title: modifiedDate
          type: string
        name:
          description: Rule name
          title: name
          type: string
        status:
          $ref: '#/components/schemas/Status'
      title: Rule_Short_Response
      type: object
    Schema:
      example:
        default: default
        datatype: "{}"
        style: postbody
        expose: "{}"
        required: "{}"
      properties:
        datatype:
          properties: {}
          title: datatype
          type: object
        default:
          title: default
          type: string
        expose:
          properties: {}
          title: expose
          type: object
        required:
          properties: {}
          title: required
          type: object
        style:
          $ref: '#/components/schemas/Style'
      title: Schema
      type: object
    Status:
      enum:
      - active
      - inactive
      title: Status
      type: string
    Style:
      enum:
      - postbody
      - query
      - template
      title: Style
      type: string
    Trigger:
      example:
        functionId: functionId
        createdDate: createdDate
        modifiedDate: modifiedDate
        name: name
        description: description
        id: id
        channelId: channelId
        status: null
      properties:
        channelId:
          title: channelId
          type: string
        createdDate:
          description: The date the rule was created
          title: createdDate
          type: string
        description:
          title: description
          type: string
        functionId:
          title: functionId
          type: string
        id:
          title: id
          type: string
        modifiedDate:
          description: The date the rule was modified
          title: modifiedDate
          type: string
        name:
          title: name
          type: string
        status:
          $ref: '#/components/schemas/Status'
      title: Trigger
      type: object
    Trigger54:
      example:
        codes: "{}"
        functionId: functionId
        name: name
        parameters: "{}"
        channelId: 0
        desc: desc
      properties:
        channelId:
          description: Id of channel used by trigger
          format: int32
          title: channelId
          type: integer
        codes:
          description: Object containing named Javascript code sets
          properties: {}
          title: codes
          type: object
        desc:
          description: Trigger description
          title: desc
          type: string
        functionId:
          description: Hash id of channel function used by trigger
          title: functionId
          type: string
        name:
          description: Trigger name
          title: name
          type: string
        parameters:
          description: Object containing channel-defined trigger parameters
          properties: {}
          title: parameters
          type: object
      required:
      - channelId
      - functionId
      - name
      title: Trigger54
      type: object
    TriggerFullResponse:
      example:
        codes: "{}"
        functionId: functionId
        createdDate: createdDate
        modifiedDate: modifiedDate
        name: name
        description: description
        id: 6
        parameters: "{}"
        channelId: 0
        status: active
      properties:
        channelId:
          format: int32
          title: channelId
          type: integer
        codes:
          properties: {}
          title: codes
          type: object
        createdDate:
          description: The date the trigger was created
          title: createdDate
          type: string
        description:
          description: Trigger description
          title: description
          type: string
        functionId:
          title: functionId
          type: string
        id:
          format: int32
          title: id
          type: integer
        modifiedDate:
          description: The date the trigger was modified
          title: modifiedDate
          type: string
        name:
          description: Trigger name
          title: name
          type: string
        parameters:
          properties: {}
          title: parameters
          type: object
        status:
          $ref: '#/components/schemas/Status'
      title: Trigger_Full_Response
      type: object
    TriggerShortResponse:
      example:
        functionId: functionId
        createdDate: createdDate
        modifiedDate: modifiedDate
        name: name
        description: description
        id: 6
        channelId: 0
        status: active
      properties:
        channelId:
          format: int32
          title: channelId
          type: integer
        createdDate:
          description: The date the trigger was created
          title: createdDate
          type: string
        description:
          description: Trigger description
          title: description
          type: string
        functionId:
          title: functionId
          type: string
        id:
          format: int32
          title: id
          type: integer
        modifiedDate:
          description: The date the trigger was modified
          title: modifiedDate
          type: string
        name:
          description: Trigger name
          title: name
          type: string
        status:
          $ref: '#/components/schemas/Status'
      title: Trigger_Short_Response
      type: object
    Type:
      enum:
      - action
      - trigger
      title: Type
      type: string
    Type41:
      enum:
      - admin
      - guest
      title: Type41
      type: string
    UserChannel:
      example:
        userId: 6
        channelId: 0
      properties:
        channelId:
          format: int32
          title: channelId
          type: integer
        userId:
          format: int32
          title: userId
          type: integer
      title: User_Channel
      type: object
  securitySchemes:
    Authorization:
      description: "HTTP Basic Authentication/API Key. Basic Auth requires a username\
        \ and a password. For the username, use a valid API key. Ritc accepts the\
        \ API key as both plaintext and base64 encoded. Remember that you must append\
        \ a colon after the api key in order to avoid being prompted for a password.\
        \ The format is Base64encode(api-key:)"
      in: header
      name: Authorization
      type: apiKey
      x-testValue: ""
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_Authorization
x-original-swagger-version: "2.0"
