# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_type import ApiType
from openapi_server.models.http_method import HttpMethod
from openapi_server.models.request_parameter import RequestParameter
from openapi_server.models.response_format import ResponseFormat
from openapi_server.models.type import Type
from openapi_server import util


class Function7(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_type: ApiType=None, desc: str=None, endpoint: str=None, http_method: HttpMethod=None, name: str=None, request_parameters: List[RequestParameter]=None, response_format: ResponseFormat=None, type: Type=None):
        """Function7 - a model defined in OpenAPI

        :param api_type: The api_type of this Function7.
        :param desc: The desc of this Function7.
        :param endpoint: The endpoint of this Function7.
        :param http_method: The http_method of this Function7.
        :param name: The name of this Function7.
        :param request_parameters: The request_parameters of this Function7.
        :param response_format: The response_format of this Function7.
        :param type: The type of this Function7.
        """
        self.openapi_types = {
            'api_type': ApiType,
            'desc': str,
            'endpoint': str,
            'http_method': HttpMethod,
            'name': str,
            'request_parameters': List[RequestParameter],
            'response_format': ResponseFormat,
            'type': Type
        }

        self.attribute_map = {
            'api_type': 'apiType',
            'desc': 'desc',
            'endpoint': 'endpoint',
            'http_method': 'httpMethod',
            'name': 'name',
            'request_parameters': 'requestParameters',
            'response_format': 'responseFormat',
            'type': 'type'
        }

        self._api_type = api_type
        self._desc = desc
        self._endpoint = endpoint
        self._http_method = http_method
        self._name = name
        self._request_parameters = request_parameters
        self._response_format = response_format
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Function7':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Function7 of this Function7.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_type(self):
        """Gets the api_type of this Function7.


        :return: The api_type of this Function7.
        :rtype: ApiType
        """
        return self._api_type

    @api_type.setter
    def api_type(self, api_type):
        """Sets the api_type of this Function7.


        :param api_type: The api_type of this Function7.
        :type api_type: ApiType
        """

        self._api_type = api_type

    @property
    def desc(self):
        """Gets the desc of this Function7.

        Function description

        :return: The desc of this Function7.
        :rtype: str
        """
        return self._desc

    @desc.setter
    def desc(self, desc):
        """Sets the desc of this Function7.

        Function description

        :param desc: The desc of this Function7.
        :type desc: str
        """

        self._desc = desc

    @property
    def endpoint(self):
        """Gets the endpoint of this Function7.

        Function endpoint

        :return: The endpoint of this Function7.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this Function7.

        Function endpoint

        :param endpoint: The endpoint of this Function7.
        :type endpoint: str
        """

        self._endpoint = endpoint

    @property
    def http_method(self):
        """Gets the http_method of this Function7.


        :return: The http_method of this Function7.
        :rtype: HttpMethod
        """
        return self._http_method

    @http_method.setter
    def http_method(self, http_method):
        """Sets the http_method of this Function7.


        :param http_method: The http_method of this Function7.
        :type http_method: HttpMethod
        """

        self._http_method = http_method

    @property
    def name(self):
        """Gets the name of this Function7.

        Function name

        :return: The name of this Function7.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Function7.

        Function name

        :param name: The name of this Function7.
        :type name: str
        """

        self._name = name

    @property
    def request_parameters(self):
        """Gets the request_parameters of this Function7.


        :return: The request_parameters of this Function7.
        :rtype: List[RequestParameter]
        """
        return self._request_parameters

    @request_parameters.setter
    def request_parameters(self, request_parameters):
        """Sets the request_parameters of this Function7.


        :param request_parameters: The request_parameters of this Function7.
        :type request_parameters: List[RequestParameter]
        """

        self._request_parameters = request_parameters

    @property
    def response_format(self):
        """Gets the response_format of this Function7.


        :return: The response_format of this Function7.
        :rtype: ResponseFormat
        """
        return self._response_format

    @response_format.setter
    def response_format(self, response_format):
        """Sets the response_format of this Function7.


        :param response_format: The response_format of this Function7.
        :type response_format: ResponseFormat
        """

        self._response_format = response_format

    @property
    def type(self):
        """Gets the type of this Function7.


        :return: The type of this Function7.
        :rtype: Type
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Function7.


        :param type: The type of this Function7.
        :type type: Type
        """

        self._type = type
