# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auth_type import AuthType
from openapi_server import util


class AppExternalCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auth_type: AuthType=None, channel_id: str=None, credentials: object=None, name: str=None):
        """AppExternalCredentials - a model defined in OpenAPI

        :param auth_type: The auth_type of this AppExternalCredentials.
        :param channel_id: The channel_id of this AppExternalCredentials.
        :param credentials: The credentials of this AppExternalCredentials.
        :param name: The name of this AppExternalCredentials.
        """
        self.openapi_types = {
            'auth_type': AuthType,
            'channel_id': str,
            'credentials': object,
            'name': str
        }

        self.attribute_map = {
            'auth_type': 'authType',
            'channel_id': 'channel_id',
            'credentials': 'credentials',
            'name': 'name'
        }

        self._auth_type = auth_type
        self._channel_id = channel_id
        self._credentials = credentials
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppExternalCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppExternalCredentials of this AppExternalCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_type(self):
        """Gets the auth_type of this AppExternalCredentials.


        :return: The auth_type of this AppExternalCredentials.
        :rtype: AuthType
        """
        return self._auth_type

    @auth_type.setter
    def auth_type(self, auth_type):
        """Sets the auth_type of this AppExternalCredentials.


        :param auth_type: The auth_type of this AppExternalCredentials.
        :type auth_type: AuthType
        """

        self._auth_type = auth_type

    @property
    def channel_id(self):
        """Gets the channel_id of this AppExternalCredentials.


        :return: The channel_id of this AppExternalCredentials.
        :rtype: str
        """
        return self._channel_id

    @channel_id.setter
    def channel_id(self, channel_id):
        """Sets the channel_id of this AppExternalCredentials.


        :param channel_id: The channel_id of this AppExternalCredentials.
        :type channel_id: str
        """

        self._channel_id = channel_id

    @property
    def credentials(self):
        """Gets the credentials of this AppExternalCredentials.


        :return: The credentials of this AppExternalCredentials.
        :rtype: object
        """
        return self._credentials

    @credentials.setter
    def credentials(self, credentials):
        """Sets the credentials of this AppExternalCredentials.


        :param credentials: The credentials of this AppExternalCredentials.
        :type credentials: object
        """

        self._credentials = credentials

    @property
    def name(self):
        """Gets the name of this AppExternalCredentials.

        App external credentials api name

        :return: The name of this AppExternalCredentials.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AppExternalCredentials.

        App external credentials api name

        :param name: The name of this AppExternalCredentials.
        :type name: str
        """

        self._name = name
