# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.model_schema import ModelSchema
from openapi_server import util


class RequestParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, field_type: str=None, label: str=None, name: str=None, _schema: ModelSchema=None):
        """RequestParameter - a model defined in OpenAPI

        :param description: The description of this RequestParameter.
        :param field_type: The field_type of this RequestParameter.
        :param label: The label of this RequestParameter.
        :param name: The name of this RequestParameter.
        :param _schema: The _schema of this RequestParameter.
        """
        self.openapi_types = {
            'description': str,
            'field_type': str,
            'label': str,
            'name': str,
            '_schema': ModelSchema
        }

        self.attribute_map = {
            'description': 'description',
            'field_type': 'fieldType',
            'label': 'label',
            'name': 'name',
            '_schema': 'schema'
        }

        self._description = description
        self._field_type = field_type
        self._label = label
        self._name = name
        self.__schema = _schema

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RequestParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RequestParameter of this RequestParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this RequestParameter.


        :return: The description of this RequestParameter.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this RequestParameter.


        :param description: The description of this RequestParameter.
        :type description: str
        """

        self._description = description

    @property
    def field_type(self):
        """Gets the field_type of this RequestParameter.


        :return: The field_type of this RequestParameter.
        :rtype: str
        """
        return self._field_type

    @field_type.setter
    def field_type(self, field_type):
        """Sets the field_type of this RequestParameter.


        :param field_type: The field_type of this RequestParameter.
        :type field_type: str
        """

        self._field_type = field_type

    @property
    def label(self):
        """Gets the label of this RequestParameter.


        :return: The label of this RequestParameter.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this RequestParameter.


        :param label: The label of this RequestParameter.
        :type label: str
        """

        self._label = label

    @property
    def name(self):
        """Gets the name of this RequestParameter.


        :return: The name of this RequestParameter.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RequestParameter.


        :param name: The name of this RequestParameter.
        :type name: str
        """

        self._name = name

    @property
    def _schema(self):
        """Gets the _schema of this RequestParameter.


        :return: The _schema of this RequestParameter.
        :rtype: ModelSchema
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this RequestParameter.


        :param _schema: The _schema of this RequestParameter.
        :type _schema: ModelSchema
        """

        self.__schema = _schema
