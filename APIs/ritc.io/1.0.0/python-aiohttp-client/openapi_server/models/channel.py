# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.function import Function
from openapi_server import util


class Channel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, functions: List[Function]=None, id: str=None, name: str=None, type: object=None):
        """Channel - a model defined in OpenAPI

        :param description: The description of this Channel.
        :param functions: The functions of this Channel.
        :param id: The id of this Channel.
        :param name: The name of this Channel.
        :param type: The type of this Channel.
        """
        self.openapi_types = {
            'description': str,
            'functions': List[Function],
            'id': str,
            'name': str,
            'type': object
        }

        self.attribute_map = {
            'description': 'description',
            'functions': 'functions',
            'id': 'id',
            'name': 'name',
            'type': 'type'
        }

        self._description = description
        self._functions = functions
        self._id = id
        self._name = name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Channel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Channel of this Channel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this Channel.

        Channel description

        :return: The description of this Channel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Channel.

        Channel description

        :param description: The description of this Channel.
        :type description: str
        """

        self._description = description

    @property
    def functions(self):
        """Gets the functions of this Channel.


        :return: The functions of this Channel.
        :rtype: List[Function]
        """
        return self._functions

    @functions.setter
    def functions(self, functions):
        """Sets the functions of this Channel.


        :param functions: The functions of this Channel.
        :type functions: List[Function]
        """

        self._functions = functions

    @property
    def id(self):
        """Gets the id of this Channel.

        Id of channel

        :return: The id of this Channel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Channel.

        Id of channel

        :param id: The id of this Channel.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Channel.

        Channel name

        :return: The name of this Channel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Channel.

        Channel name

        :param name: The name of this Channel.
        :type name: str
        """

        self._name = name

    @property
    def type(self):
        """Gets the type of this Channel.

        Type of channel. Choices are 'public' or 'private'. Private channels are only viewable within an account, while public channels are viewable to everyone in the system

        :return: The type of this Channel.
        :rtype: object
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Channel.

        Type of channel. Choices are 'public' or 'private'. Private channels are only viewable within an account, while public channels are viewable to everyone in the system

        :param type: The type of this Channel.
        :type type: object
        """

        self._type = type
