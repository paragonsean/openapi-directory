/*
 * Ritc
 * Rules in the Cloud
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.App;
import org.openapitools.client.model.AppChannelResponse;
import org.openapitools.client.model.AppExternalCredentials;
import org.openapitools.client.model.AppExternalCredentialsResponse;
import org.openapitools.client.model.AppResponse;
import org.openapitools.client.model.RuleResults;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppsApi
 */
@Disabled
public class AppsApiTest {

    private final AppsApi api = new AppsApi();

    /**
     * Create a new app
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addAppTest() throws ApiException {
        App appObject = null;
        AppResponse response = api.addApp(appObject);
        // TODO: test validations
    }

    /**
     * Create user channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addAppChannelUserTest() throws ApiException {
        String channelId = null;
        String userId = null;
        AppChannelResponse response = api.addAppChannelUser(channelId, userId);
        // TODO: test validations
    }

    /**
     * Create new external credentials
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addChannelExternalCredentialsTest() throws ApiException {
        AppExternalCredentials appExternalCredentialsObject = null;
        AppExternalCredentialsResponse response = api.addChannelExternalCredentials(appExternalCredentialsObject);
        // TODO: test validations
    }

    /**
     * Get app information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppTest() throws ApiException {
        String appId = null;
        List<AppResponse> response = api.getApp(appId);
        // TODO: test validations
    }

    /**
     * Get user of a specified channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppChannelUserTest() throws ApiException {
        String channelId = null;
        String userId = null;
        List<AppChannelResponse> response = api.getAppChannelUser(channelId, userId);
        // TODO: test validations
    }

    /**
     * Get credentials for a channel in an app
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChannelExternalCredentialsTest() throws ApiException {
        String channelId = null;
        List<AppExternalCredentialsResponse> response = api.getChannelExternalCredentials(channelId);
        // TODO: test validations
    }

    /**
     * Get users of a specified channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppChannelUsersTest() throws ApiException {
        String channelId = null;
        List<AppChannelResponse> response = api.listAppChannelUsers(channelId);
        // TODO: test validations
    }

    /**
     * Get app channels
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppChannelsTest() throws ApiException {
        List<AppChannelResponse> response = api.listAppChannels();
        // TODO: test validations
    }

    /**
     * Get apps information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAppsTest() throws ApiException {
        List<AppResponse> response = api.listApps();
        // TODO: test validations
    }

    /**
     * Get external credentials
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listChannelExternalCredentialsTest() throws ApiException {
        List<AppExternalCredentialsResponse> response = api.listChannelExternalCredentials();
        // TODO: test validations
    }

    /**
     * Delete an app
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeAppTest() throws ApiException {
        String appId = null;
        api.removeApp(appId);
        // TODO: test validations
    }

    /**
     * Delete credentials for a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeChannelExternalCredentialsTest() throws ApiException {
        String channelId = null;
        api.removeChannelExternalCredentials(channelId);
        // TODO: test validations
    }

    /**
     * Run active app rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void runAppTest() throws ApiException {
        Boolean breakWhenRuleFires = null;
        Object initialData = null;
        List<RuleResults> response = api.runApp(breakWhenRuleFires, initialData);
        // TODO: test validations
    }

    /**
     * Run specified rule group in the app
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void runRuleGroupTest() throws ApiException {
        String ruleIdList = null;
        Boolean breakWhenRuleFires = null;
        Object initialData = null;
        List<RuleResults> response = api.runRuleGroup(ruleIdList, breakWhenRuleFires, initialData);
        // TODO: test validations
    }

    /**
     * Update an app
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAppTest() throws ApiException {
        String appId = null;
        App appObject = null;
        AppResponse response = api.updateApp(appId, appObject);
        // TODO: test validations
    }

    /**
     * Update credentials for a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateChannelExternalCredentialsTest() throws ApiException {
        String channelId = null;
        AppExternalCredentials appExternalCredentialsObject = null;
        AppExternalCredentialsResponse response = api.updateChannelExternalCredentials(channelId, appExternalCredentialsObject);
        // TODO: test validations
    }

}
