/**
 * Ritc
 * Rules in the Cloud
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Ritc);
  }
}(this, function(expect, Ritc) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Ritc.AppsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AppsApi', function() {
    describe('addApp', function() {
      it('should call addApp successfully', function(done) {
        //uncomment below and update the code to test addApp
        //instance.addApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addAppChannelUser', function() {
      it('should call addAppChannelUser successfully', function(done) {
        //uncomment below and update the code to test addAppChannelUser
        //instance.addAppChannelUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addChannelExternalCredentials', function() {
      it('should call addChannelExternalCredentials successfully', function(done) {
        //uncomment below and update the code to test addChannelExternalCredentials
        //instance.addChannelExternalCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApp', function() {
      it('should call getApp successfully', function(done) {
        //uncomment below and update the code to test getApp
        //instance.getApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAppChannelUser', function() {
      it('should call getAppChannelUser successfully', function(done) {
        //uncomment below and update the code to test getAppChannelUser
        //instance.getAppChannelUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChannelExternalCredentials', function() {
      it('should call getChannelExternalCredentials successfully', function(done) {
        //uncomment below and update the code to test getChannelExternalCredentials
        //instance.getChannelExternalCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppChannelUsers', function() {
      it('should call listAppChannelUsers successfully', function(done) {
        //uncomment below and update the code to test listAppChannelUsers
        //instance.listAppChannelUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppChannels', function() {
      it('should call listAppChannels successfully', function(done) {
        //uncomment below and update the code to test listAppChannels
        //instance.listAppChannels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listApps', function() {
      it('should call listApps successfully', function(done) {
        //uncomment below and update the code to test listApps
        //instance.listApps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listChannelExternalCredentials', function() {
      it('should call listChannelExternalCredentials successfully', function(done) {
        //uncomment below and update the code to test listChannelExternalCredentials
        //instance.listChannelExternalCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeApp', function() {
      it('should call removeApp successfully', function(done) {
        //uncomment below and update the code to test removeApp
        //instance.removeApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeChannelExternalCredentials', function() {
      it('should call removeChannelExternalCredentials successfully', function(done) {
        //uncomment below and update the code to test removeChannelExternalCredentials
        //instance.removeChannelExternalCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runApp', function() {
      it('should call runApp successfully', function(done) {
        //uncomment below and update the code to test runApp
        //instance.runApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runRuleGroup', function() {
      it('should call runRuleGroup successfully', function(done) {
        //uncomment below and update the code to test runRuleGroup
        //instance.runRuleGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateApp', function() {
      it('should call updateApp successfully', function(done) {
        //uncomment below and update the code to test updateApp
        //instance.updateApp(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateChannelExternalCredentials', function() {
      it('should call updateChannelExternalCredentials successfully', function(done) {
        //uncomment below and update the code to test updateChannelExternalCredentials
        //instance.updateChannelExternalCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
