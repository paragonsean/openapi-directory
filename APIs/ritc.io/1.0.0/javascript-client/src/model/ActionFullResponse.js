/**
 * Ritc
 * Rules in the Cloud
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Status from './Status';

/**
 * The ActionFullResponse model module.
 * @module model/ActionFullResponse
 * @version 1.0.0
 */
class ActionFullResponse {
    /**
     * Constructs a new <code>ActionFullResponse</code>.
     * @alias module:model/ActionFullResponse
     */
    constructor() { 
        
        ActionFullResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActionFullResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActionFullResponse} obj Optional instance to populate.
     * @return {module:model/ActionFullResponse} The populated <code>ActionFullResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActionFullResponse();

            if (data.hasOwnProperty('channelId')) {
                obj['channelId'] = ApiClient.convertToType(data['channelId'], 'Number');
            }
            if (data.hasOwnProperty('codes')) {
                obj['codes'] = ApiClient.convertToType(data['codes'], Object);
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('functionId')) {
                obj['functionId'] = ApiClient.convertToType(data['functionId'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('modifiedDate')) {
                obj['modifiedDate'] = ApiClient.convertToType(data['modifiedDate'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], Object);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Status.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActionFullResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActionFullResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createdDate'] && !(typeof data['createdDate'] === 'string' || data['createdDate'] instanceof String)) {
            throw new Error("Expected the field `createdDate` to be a primitive type in the JSON string but got " + data['createdDate']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['functionId'] && !(typeof data['functionId'] === 'string' || data['functionId'] instanceof String)) {
            throw new Error("Expected the field `functionId` to be a primitive type in the JSON string but got " + data['functionId']);
        }
        // ensure the json data is a string
        if (data['modifiedDate'] && !(typeof data['modifiedDate'] === 'string' || data['modifiedDate'] instanceof String)) {
            throw new Error("Expected the field `modifiedDate` to be a primitive type in the JSON string but got " + data['modifiedDate']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {Number} channelId
 */
ActionFullResponse.prototype['channelId'] = undefined;

/**
 * @member {Object} codes
 */
ActionFullResponse.prototype['codes'] = undefined;

/**
 * The date the action was created
 * @member {String} createdDate
 */
ActionFullResponse.prototype['createdDate'] = undefined;

/**
 * Action description
 * @member {String} description
 */
ActionFullResponse.prototype['description'] = undefined;

/**
 * @member {String} functionId
 */
ActionFullResponse.prototype['functionId'] = undefined;

/**
 * @member {Number} id
 */
ActionFullResponse.prototype['id'] = undefined;

/**
 * The date the action was modified
 * @member {String} modifiedDate
 */
ActionFullResponse.prototype['modifiedDate'] = undefined;

/**
 * Action name
 * @member {String} name
 */
ActionFullResponse.prototype['name'] = undefined;

/**
 * @member {Object} parameters
 */
ActionFullResponse.prototype['parameters'] = undefined;

/**
 * @member {module:model/Status} status
 */
ActionFullResponse.prototype['status'] = undefined;






export default ActionFullResponse;

