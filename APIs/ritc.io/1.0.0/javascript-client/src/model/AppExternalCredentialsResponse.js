/**
 * Ritc
 * Rules in the Cloud
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthType from './AuthType';

/**
 * The AppExternalCredentialsResponse model module.
 * @module model/AppExternalCredentialsResponse
 * @version 1.0.0
 */
class AppExternalCredentialsResponse {
    /**
     * Constructs a new <code>AppExternalCredentialsResponse</code>.
     * @alias module:model/AppExternalCredentialsResponse
     */
    constructor() { 
        
        AppExternalCredentialsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppExternalCredentialsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppExternalCredentialsResponse} obj Optional instance to populate.
     * @return {module:model/AppExternalCredentialsResponse} The populated <code>AppExternalCredentialsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppExternalCredentialsResponse();

            if (data.hasOwnProperty('authType')) {
                obj['authType'] = AuthType.constructFromObject(data['authType']);
            }
            if (data.hasOwnProperty('channel_id')) {
                obj['channel_id'] = ApiClient.convertToType(data['channel_id'], 'String');
            }
            if (data.hasOwnProperty('credentials')) {
                obj['credentials'] = ApiClient.convertToType(data['credentials'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppExternalCredentialsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppExternalCredentialsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['channel_id'] && !(typeof data['channel_id'] === 'string' || data['channel_id'] instanceof String)) {
            throw new Error("Expected the field `channel_id` to be a primitive type in the JSON string but got " + data['channel_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/AuthType} authType
 */
AppExternalCredentialsResponse.prototype['authType'] = undefined;

/**
 * @member {String} channel_id
 */
AppExternalCredentialsResponse.prototype['channel_id'] = undefined;

/**
 * @member {Object} credentials
 */
AppExternalCredentialsResponse.prototype['credentials'] = undefined;

/**
 * @member {String} id
 */
AppExternalCredentialsResponse.prototype['id'] = undefined;

/**
 * App external credentials api name
 * @member {String} name
 */
AppExternalCredentialsResponse.prototype['name'] = undefined;






export default AppExternalCredentialsResponse;

