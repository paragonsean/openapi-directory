/**
 * Ritc
 * Rules in the Cloud
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Status from './Status';

/**
 * The AppChannelResponse model module.
 * @module model/AppChannelResponse
 * @version 1.0.0
 */
class AppChannelResponse {
    /**
     * Constructs a new <code>AppChannelResponse</code>.
     * @alias module:model/AppChannelResponse
     */
    constructor() { 
        
        AppChannelResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppChannelResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppChannelResponse} obj Optional instance to populate.
     * @return {module:model/AppChannelResponse} The populated <code>AppChannelResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppChannelResponse();

            if (data.hasOwnProperty('channelId')) {
                obj['channelId'] = ApiClient.convertToType(data['channelId'], 'Number');
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Status.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppChannelResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppChannelResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createdDate'] && !(typeof data['createdDate'] === 'string' || data['createdDate'] instanceof String)) {
            throw new Error("Expected the field `createdDate` to be a primitive type in the JSON string but got " + data['createdDate']);
        }

        return true;
    }


}



/**
 * Channel Id
 * @member {Number} channelId
 */
AppChannelResponse.prototype['channelId'] = undefined;

/**
 * The date the user was created
 * @member {String} createdDate
 */
AppChannelResponse.prototype['createdDate'] = undefined;

/**
 * @member {Number} id
 */
AppChannelResponse.prototype['id'] = undefined;

/**
 * @member {module:model/Status} status
 */
AppChannelResponse.prototype['status'] = undefined;

/**
 * Id of App User assigned to Channel
 * @member {Number} userId
 */
AppChannelResponse.prototype['userId'] = undefined;






export default AppChannelResponse;

