/**
 * Ritc
 * Rules in the Cloud
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiType::OAIApiType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiType::OAIApiType() {
    this->initializeModel();
}

OAIApiType::~OAIApiType() {}

void OAIApiType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIApiType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIApiType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Internal", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApiType::INTERNAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApiType::REST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SDK", Qt::CaseInsensitive) == 0) {
        m_value = eOAIApiType::SDK;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIApiType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIApiType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIApiType::INTERNAL:
            val = "Internal";
            break;
        case eOAIApiType::REST:
            val = "REST";
            break;
        case eOAIApiType::SDK:
            val = "SDK";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIApiType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIApiType::eOAIApiType OAIApiType::getValue() const {
    return m_value;
}

void OAIApiType::setValue(const OAIApiType::eOAIApiType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIApiType::isSet() const {
    
    return m_value_isSet;
}

bool OAIApiType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
