/**
 * Ritc
 * Rules in the Cloud
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRule.h
 *
 * 
 */

#ifndef OAIRule_H
#define OAIRule_H

#include <QJsonObject>

#include "OAIStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRule : public OAIObject {
public:
    OAIRule();
    OAIRule(QString json);
    ~OAIRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActionIds() const;
    void setActionIds(const QString &action_ids);
    bool is_action_ids_Set() const;
    bool is_action_ids_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTriggerIds() const;
    void setTriggerIds(const QString &trigger_ids);
    bool is_trigger_ids_Set() const;
    bool is_trigger_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action_ids;
    bool m_action_ids_isSet;
    bool m_action_ids_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_trigger_ids;
    bool m_trigger_ids_isSet;
    bool m_trigger_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRule)

#endif // OAIRule_H
