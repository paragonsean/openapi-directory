/**
 * Ritc
 * Rules in the Cloud
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFunction7.h
 *
 * 
 */

#ifndef OAIFunction7_H
#define OAIFunction7_H

#include <QJsonObject>

#include "OAIApiType.h"
#include "OAIHttpMethod.h"
#include "OAIRequestParameter.h"
#include "OAIResponseFormat.h"
#include "OAIType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRequestParameter;

class OAIFunction7 : public OAIObject {
public:
    OAIFunction7();
    OAIFunction7(QString json);
    ~OAIFunction7() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApiType getApiType() const;
    void setApiType(const OAIApiType &api_type);
    bool is_api_type_Set() const;
    bool is_api_type_Valid() const;

    QString getDesc() const;
    void setDesc(const QString &desc);
    bool is_desc_Set() const;
    bool is_desc_Valid() const;

    QString getEndpoint() const;
    void setEndpoint(const QString &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    OAIHttpMethod getHttpMethod() const;
    void setHttpMethod(const OAIHttpMethod &http_method);
    bool is_http_method_Set() const;
    bool is_http_method_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIRequestParameter> getRequestParameters() const;
    void setRequestParameters(const QList<OAIRequestParameter> &request_parameters);
    bool is_request_parameters_Set() const;
    bool is_request_parameters_Valid() const;

    OAIResponseFormat getResponseFormat() const;
    void setResponseFormat(const OAIResponseFormat &response_format);
    bool is_response_format_Set() const;
    bool is_response_format_Valid() const;

    OAIType getType() const;
    void setType(const OAIType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApiType m_api_type;
    bool m_api_type_isSet;
    bool m_api_type_isValid;

    QString m_desc;
    bool m_desc_isSet;
    bool m_desc_isValid;

    QString m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    OAIHttpMethod m_http_method;
    bool m_http_method_isSet;
    bool m_http_method_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIRequestParameter> m_request_parameters;
    bool m_request_parameters_isSet;
    bool m_request_parameters_isValid;

    OAIResponseFormat m_response_format;
    bool m_response_format_isSet;
    bool m_response_format_isValid;

    OAIType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFunction7)

#endif // OAIFunction7_H
