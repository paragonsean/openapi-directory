/**
 * Ritc
 * Rules in the Cloud
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlan.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlan::OAIPlan(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlan::OAIPlan() {
    this->initializeModel();
}

OAIPlan::~OAIPlan() {}

void OAIPlan::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPlan::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPlan::fromJson(QString jsonString) {
    
    if ( jsonString.compare("free", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlan::FREE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("basic", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPlan::BASIC;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPlan::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPlan::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPlan::FREE:
            val = "free";
            break;
        case eOAIPlan::BASIC:
            val = "basic";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPlan::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPlan::eOAIPlan OAIPlan::getValue() const {
    return m_value;
}

void OAIPlan::setValue(const OAIPlan::eOAIPlan& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPlan::isSet() const {
    
    return m_value_isSet;
}

bool OAIPlan::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
