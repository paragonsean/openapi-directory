/**
 * Ritc
 * Rules in the Cloud
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISchema.h
 *
 * 
 */

#ifndef OAISchema_H
#define OAISchema_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIStyle.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISchema : public OAIObject {
public:
    OAISchema();
    OAISchema(QString json);
    ~OAISchema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getDatatype() const;
    void setDatatype(const OAIObject &datatype);
    bool is_datatype_Set() const;
    bool is_datatype_Valid() const;

    QString getRDefault() const;
    void setRDefault(const QString &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    OAIObject getExpose() const;
    void setExpose(const OAIObject &expose);
    bool is_expose_Set() const;
    bool is_expose_Valid() const;

    OAIObject getRequired() const;
    void setRequired(const OAIObject &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    OAIStyle getStyle() const;
    void setStyle(const OAIStyle &style);
    bool is_style_Set() const;
    bool is_style_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_datatype;
    bool m_datatype_isSet;
    bool m_datatype_isValid;

    QString m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    OAIObject m_expose;
    bool m_expose_isSet;
    bool m_expose_isValid;

    OAIObject m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    OAIStyle m_style;
    bool m_style_isSet;
    bool m_style_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISchema)

#endif // OAISchema_H
