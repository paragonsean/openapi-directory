/**
 * Ritc
 * Rules in the Cloud
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIType41.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIType41::OAIType41(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIType41::OAIType41() {
    this->initializeModel();
}

OAIType41::~OAIType41() {}

void OAIType41::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIType41::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIType41::fromJson(QString jsonString) {
    
    if ( jsonString.compare("admin", Qt::CaseInsensitive) == 0) {
        m_value = eOAIType41::ADMIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("guest", Qt::CaseInsensitive) == 0) {
        m_value = eOAIType41::GUEST;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIType41::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIType41::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIType41::ADMIN:
            val = "admin";
            break;
        case eOAIType41::GUEST:
            val = "guest";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIType41::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIType41::eOAIType41 OAIType41::getValue() const {
    return m_value;
}

void OAIType41::setValue(const OAIType41::eOAIType41& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIType41::isSet() const {
    
    return m_value_isSet;
}

bool OAIType41::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
