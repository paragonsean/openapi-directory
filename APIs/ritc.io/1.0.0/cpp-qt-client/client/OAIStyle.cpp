/**
 * Ritc
 * Rules in the Cloud
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStyle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStyle::OAIStyle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStyle::OAIStyle() {
    this->initializeModel();
}

OAIStyle::~OAIStyle() {}

void OAIStyle::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIStyle::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIStyle::fromJson(QString jsonString) {
    
    if ( jsonString.compare("postbody", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStyle::POSTBODY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("query", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStyle::QUERY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("template", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStyle::TEMPLATE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIStyle::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIStyle::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIStyle::POSTBODY:
            val = "postbody";
            break;
        case eOAIStyle::QUERY:
            val = "query";
            break;
        case eOAIStyle::TEMPLATE:
            val = "template";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIStyle::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIStyle::eOAIStyle OAIStyle::getValue() const {
    return m_value;
}

void OAIStyle::setValue(const OAIStyle::eOAIStyle& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIStyle::isSet() const {
    
    return m_value_isSet;
}

bool OAIStyle::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
