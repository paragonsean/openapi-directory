# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, affiliate_id: str=None, email: str=None, first_name: str=None, last_name: str=None, password: str=None, subscription_type: str=None, username: str=None):
        """UserDTO - a model defined in OpenAPI

        :param affiliate_id: The affiliate_id of this UserDTO.
        :param email: The email of this UserDTO.
        :param first_name: The first_name of this UserDTO.
        :param last_name: The last_name of this UserDTO.
        :param password: The password of this UserDTO.
        :param subscription_type: The subscription_type of this UserDTO.
        :param username: The username of this UserDTO.
        """
        self.openapi_types = {
            'affiliate_id': str,
            'email': str,
            'first_name': str,
            'last_name': str,
            'password': str,
            'subscription_type': str,
            'username': str
        }

        self.attribute_map = {
            'affiliate_id': 'affiliateId',
            'email': 'email',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'password': 'password',
            'subscription_type': 'subscriptionType',
            'username': 'username'
        }

        self._affiliate_id = affiliate_id
        self._email = email
        self._first_name = first_name
        self._last_name = last_name
        self._password = password
        self._subscription_type = subscription_type
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserDTO of this UserDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def affiliate_id(self):
        """Gets the affiliate_id of this UserDTO.


        :return: The affiliate_id of this UserDTO.
        :rtype: str
        """
        return self._affiliate_id

    @affiliate_id.setter
    def affiliate_id(self, affiliate_id):
        """Sets the affiliate_id of this UserDTO.


        :param affiliate_id: The affiliate_id of this UserDTO.
        :type affiliate_id: str
        """

        self._affiliate_id = affiliate_id

    @property
    def email(self):
        """Gets the email of this UserDTO.


        :return: The email of this UserDTO.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this UserDTO.


        :param email: The email of this UserDTO.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this UserDTO.


        :return: The first_name of this UserDTO.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this UserDTO.


        :param first_name: The first_name of this UserDTO.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this UserDTO.


        :return: The last_name of this UserDTO.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this UserDTO.


        :param last_name: The last_name of this UserDTO.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def password(self):
        """Gets the password of this UserDTO.


        :return: The password of this UserDTO.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this UserDTO.


        :param password: The password of this UserDTO.
        :type password: str
        """

        self._password = password

    @property
    def subscription_type(self):
        """Gets the subscription_type of this UserDTO.


        :return: The subscription_type of this UserDTO.
        :rtype: str
        """
        return self._subscription_type

    @subscription_type.setter
    def subscription_type(self, subscription_type):
        """Sets the subscription_type of this UserDTO.


        :param subscription_type: The subscription_type of this UserDTO.
        :type subscription_type: str
        """

        self._subscription_type = subscription_type

    @property
    def username(self):
        """Gets the username of this UserDTO.


        :return: The username of this UserDTO.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this UserDTO.


        :param username: The username of this UserDTO.
        :type username: str
        """

        self._username = username
