/**
 * Tradeworks
 * Authentication is required to access all methods of the API. Enter username and password.                 Credentials are automatically set as you type.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITradingAccount.h
 *
 * 
 */

#ifndef OAITradingAccount_H
#define OAITradingAccount_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITradingAccount : public OAIObject {
public:
    OAITradingAccount();
    OAITradingAccount(QString json);
    ~OAITradingAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBrokerServer() const;
    void setBrokerServer(const QString &broker_server);
    bool is_broker_server_Set() const;
    bool is_broker_server_Valid() const;

    QString getMagickUsername() const;
    void setMagickUsername(const QString &magick_username);
    bool is_magick_username_Set() const;
    bool is_magick_username_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_broker_server;
    bool m_broker_server_isSet;
    bool m_broker_server_isValid;

    QString m_magick_username;
    bool m_magick_username_isSet;
    bool m_magick_username_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITradingAccount)

#endif // OAITradingAccount_H
