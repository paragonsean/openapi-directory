/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import VerifyAccountRequest from '../model/VerifyAccountRequest';
import VerifyAccountResponse from '../model/VerifyAccountResponse';
import YodleeError from '../model/YodleeError';

/**
* VerifyAccount service.
* @module api/VerifyAccountApi
* @version 1.1.0
*/
export default class VerifyAccountApi {

    /**
    * Constructs a new VerifyAccountApi. 
    * @alias module:api/VerifyAccountApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the initiateAccountVerification operation.
     * @callback module:api/VerifyAccountApi~initiateAccountVerificationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VerifyAccountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verify Accounts Using Transactions
     * The verify account service is used to verify the account's ownership by  matching the transaction details with the accounts aggregated for the user.<br><ul><li>If a match is identified, the service returns details of all the accounts along with the matched transaction's details.<li>If no transaction match is found, an empty response will be returned.<li>A maximum of 5 transactionCriteria can be passed in a request.<li>The baseType, date, and amount parameters should mandatorily be passed.<li>The optional dateVariance parameter cannot be more than 7 days. For example, +7, -4, or +/-2.<li>Pass the container or accountId parameters for better performance.<li>This service supports the localization feature and accepts locale as a header parameter.</li></ul>
     * @param {String} providerAccountId providerAccountId
     * @param {module:model/VerifyAccountRequest} verifyAccountRequest verificationParam
     * @param {module:api/VerifyAccountApi~initiateAccountVerificationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VerifyAccountResponse}
     */
    initiateAccountVerification(providerAccountId, verifyAccountRequest, callback) {
      let postBody = verifyAccountRequest;
      // verify the required parameter 'providerAccountId' is set
      if (providerAccountId === undefined || providerAccountId === null) {
        throw new Error("Missing the required parameter 'providerAccountId' when calling initiateAccountVerification");
      }
      // verify the required parameter 'verifyAccountRequest' is set
      if (verifyAccountRequest === undefined || verifyAccountRequest === null) {
        throw new Error("Missing the required parameter 'verifyAccountRequest' when calling initiateAccountVerification");
      }

      let pathParams = {
        'providerAccountId': providerAccountId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = VerifyAccountResponse;
      return this.apiClient.callApi(
        '/verifyAccount/{providerAccountId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
