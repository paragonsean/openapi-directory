/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DerivedHoldingSummaryResponse from '../model/DerivedHoldingSummaryResponse';
import DerivedNetworthResponse from '../model/DerivedNetworthResponse';
import DerivedTransactionSummaryResponse from '../model/DerivedTransactionSummaryResponse';
import YodleeError from '../model/YodleeError';

/**
* Derived service.
* @module api/DerivedApi
* @version 1.1.0
*/
export default class DerivedApi {

    /**
    * Constructs a new DerivedApi. 
    * @alias module:api/DerivedApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getHoldingSummary operation.
     * @callback module:api/DerivedApi~getHoldingSummaryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DerivedHoldingSummaryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Holding Summary
     * The get holding summary service is used to get the summary of asset classifications for the user.<br>By default, accounts with status as ACTIVE and TO BE CLOSED will be considered.<br>If the include parameter value is passed as details then a summary with holdings and account information is returned.<br>
     * @param {Object} opts Optional parameters
     * @param {String} [accountIds] Comma separated accountIds
     * @param {String} [classificationType] e.g. Country, Sector, etc.
     * @param {String} [include] details
     * @param {module:api/DerivedApi~getHoldingSummaryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DerivedHoldingSummaryResponse}
     */
    getHoldingSummary(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'accountIds': opts['accountIds'],
        'classificationType': opts['classificationType'],
        'include': opts['include']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = DerivedHoldingSummaryResponse;
      return this.apiClient.callApi(
        '/derived/holdingSummary', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNetworth operation.
     * @callback module:api/DerivedApi~getNetworthCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DerivedNetworthResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Networth Summary
     * The get networth service is used to get the networth for the user.<br>If the include parameter value is passed as details then networth with historical balances is returned. <br>
     * @param {Object} opts Optional parameters
     * @param {String} [accountIds] comma separated accountIds
     * @param {String} [container] bank/creditCard/investment/insurance/loan/realEstate/otherAssets/otherLiabilities
     * @param {String} [fromDate] from date for balance retrieval (YYYY-MM-DD)
     * @param {String} [include] details
     * @param {String} [interval] D-daily, W-weekly or M-monthly
     * @param {Number} [skip] skip (Min 0)
     * @param {String} [toDate] toDate for balance retrieval (YYYY-MM-DD)
     * @param {Number} [top] top (Max 500)
     * @param {module:api/DerivedApi~getNetworthCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DerivedNetworthResponse}
     */
    getNetworth(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'accountIds': opts['accountIds'],
        'container': opts['container'],
        'fromDate': opts['fromDate'],
        'include': opts['include'],
        'interval': opts['interval'],
        'skip': opts['skip'],
        'toDate': opts['toDate'],
        'top': opts['top']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = DerivedNetworthResponse;
      return this.apiClient.callApi(
        '/derived/networth', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTransactionSummary operation.
     * @callback module:api/DerivedApi~getTransactionSummaryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DerivedTransactionSummaryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Transaction Summary
     * The transaction summary service provides the summary values of transactions for the given date range by category type, high-level categories, or system-defined categories.<br><br>Yodlee has the transaction data stored for a day, month, year and week per category as per the availability of user's data. If the include parameter value is passed as details, then summary details will be returned depending on the interval passed-monthly is the default.<br><br><b>Notes:</b><ol> <li> Details can be requested for only one system-defined category<li>Passing categoryType is mandatory except when the groupBy value is CATEGORY_TYPE<li>Dates will not be respected for monthly, yearly, and weekly details<li>When monthly details are requested, only the fromDate and toDate month will be respected<li>When yearly details are requested, only the fromDate and toDate year will be respected<li>For weekly data points, details will be provided for every Sunday date available within the fromDate and toDate<li>This service supports the localization feature and accepts locale as a header parameter</li></ol>
     * @param {String} groupBy CATEGORY_TYPE, HIGH_LEVEL_CATEGORY or CATEGORY
     * @param {Object} opts Optional parameters
     * @param {String} [accountId] comma separated account Ids
     * @param {String} [categoryId] comma separated categoryIds
     * @param {String} [categoryType] INCOME, EXPENSE, TRANSFER, UNCATEGORIZE or DEFERRED_COMPENSATION
     * @param {String} [fromDate] YYYY-MM-DD format
     * @param {String} [include] details
     * @param {Boolean} [includeUserCategory] TRUE/FALSE
     * @param {String} [interval] D-daily, W-weekly, M-mothly or Y-yearly
     * @param {String} [toDate] YYYY-MM-DD format
     * @param {module:api/DerivedApi~getTransactionSummaryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DerivedTransactionSummaryResponse}
     */
    getTransactionSummary(groupBy, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'groupBy' is set
      if (groupBy === undefined || groupBy === null) {
        throw new Error("Missing the required parameter 'groupBy' when calling getTransactionSummary");
      }

      let pathParams = {
      };
      let queryParams = {
        'accountId': opts['accountId'],
        'categoryId': opts['categoryId'],
        'categoryType': opts['categoryType'],
        'fromDate': opts['fromDate'],
        'groupBy': groupBy,
        'include': opts['include'],
        'includeUserCategory': opts['includeUserCategory'],
        'interval': opts['interval'],
        'toDate': opts['toDate']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = DerivedTransactionSummaryResponse;
      return this.apiClient.callApi(
        '/derived/transactionSummary', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
