/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Option model module.
 * @module model/Option
 * @version 1.1.0
 */
class Option {
    /**
     * Constructs a new <code>Option</code>.
     * @alias module:model/Option
     */
    constructor() { 
        
        Option.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Option</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Option} obj Optional instance to populate.
     * @return {module:model/Option} The populated <code>Option</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Option();

            if (data.hasOwnProperty('displayText')) {
                obj['displayText'] = ApiClient.convertToType(data['displayText'], 'String');
            }
            if (data.hasOwnProperty('isSelected')) {
                obj['isSelected'] = ApiClient.convertToType(data['isSelected'], 'Boolean');
            }
            if (data.hasOwnProperty('optionValue')) {
                obj['optionValue'] = ApiClient.convertToType(data['optionValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Option</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Option</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayText'] && !(typeof data['displayText'] === 'string' || data['displayText'] instanceof String)) {
            throw new Error("Expected the field `displayText` to be a primitive type in the JSON string but got " + data['displayText']);
        }
        // ensure the json data is a string
        if (data['optionValue'] && !(typeof data['optionValue'] === 'string' || data['optionValue'] instanceof String)) {
            throw new Error("Expected the field `optionValue` to be a primitive type in the JSON string but got " + data['optionValue']);
        }

        return true;
    }


}



/**
 * The text that is displayed to the user for that option in the provider site.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>
 * @member {String} displayText
 */
Option.prototype['displayText'] = undefined;

/**
 * The option that is selected by default in the provider site.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>
 * @member {Boolean} isSelected
 */
Option.prototype['isSelected'] = undefined;

/**
 * The value that is associated with the option.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>
 * @member {String} optionValue
 */
Option.prototype['optionValue'] = undefined;






export default Option;

