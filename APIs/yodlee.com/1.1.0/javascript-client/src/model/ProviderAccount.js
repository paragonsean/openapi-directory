/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountDataset from './AccountDataset';
import ProviderAccountPreferences from './ProviderAccountPreferences';

/**
 * The ProviderAccount model module.
 * @module model/ProviderAccount
 * @version 1.1.0
 */
class ProviderAccount {
    /**
     * Constructs a new <code>ProviderAccount</code>.
     * @alias module:model/ProviderAccount
     */
    constructor() { 
        
        ProviderAccount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProviderAccount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProviderAccount} obj Optional instance to populate.
     * @return {module:model/ProviderAccount} The populated <code>ProviderAccount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProviderAccount();

            if (data.hasOwnProperty('aggregationSource')) {
                obj['aggregationSource'] = ApiClient.convertToType(data['aggregationSource'], 'String');
            }
            if (data.hasOwnProperty('consentId')) {
                obj['consentId'] = ApiClient.convertToType(data['consentId'], 'Number');
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'String');
            }
            if (data.hasOwnProperty('dataset')) {
                obj['dataset'] = ApiClient.convertToType(data['dataset'], [AccountDataset]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('isManual')) {
                obj['isManual'] = ApiClient.convertToType(data['isManual'], 'Boolean');
            }
            if (data.hasOwnProperty('lastUpdated')) {
                obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'String');
            }
            if (data.hasOwnProperty('oauthMigrationStatus')) {
                obj['oauthMigrationStatus'] = ApiClient.convertToType(data['oauthMigrationStatus'], 'String');
            }
            if (data.hasOwnProperty('preferences')) {
                obj['preferences'] = ProviderAccountPreferences.constructFromObject(data['preferences']);
            }
            if (data.hasOwnProperty('providerId')) {
                obj['providerId'] = ApiClient.convertToType(data['providerId'], 'Number');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProviderAccount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProviderAccount</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['aggregationSource'] && !(typeof data['aggregationSource'] === 'string' || data['aggregationSource'] instanceof String)) {
            throw new Error("Expected the field `aggregationSource` to be a primitive type in the JSON string but got " + data['aggregationSource']);
        }
        // ensure the json data is a string
        if (data['createdDate'] && !(typeof data['createdDate'] === 'string' || data['createdDate'] instanceof String)) {
            throw new Error("Expected the field `createdDate` to be a primitive type in the JSON string but got " + data['createdDate']);
        }
        if (data['dataset']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dataset'])) {
                throw new Error("Expected the field `dataset` to be an array in the JSON data but got " + data['dataset']);
            }
            // validate the optional field `dataset` (array)
            for (const item of data['dataset']) {
                AccountDataset.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['lastUpdated'] && !(typeof data['lastUpdated'] === 'string' || data['lastUpdated'] instanceof String)) {
            throw new Error("Expected the field `lastUpdated` to be a primitive type in the JSON string but got " + data['lastUpdated']);
        }
        // ensure the json data is a string
        if (data['oauthMigrationStatus'] && !(typeof data['oauthMigrationStatus'] === 'string' || data['oauthMigrationStatus'] instanceof String)) {
            throw new Error("Expected the field `oauthMigrationStatus` to be a primitive type in the JSON string but got " + data['oauthMigrationStatus']);
        }
        // validate the optional field `preferences`
        if (data['preferences']) { // data not null
          ProviderAccountPreferences.validateJSON(data['preferences']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The source through which the providerAccount is added in the system.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li><li>GET dataExtracts/userData</li></ul><b>Applicable Values</b><br>
 * @member {module:model/ProviderAccount.AggregationSourceEnum} aggregationSource
 */
ProviderAccount.prototype['aggregationSource'] = undefined;

/**
 * Consent Id generated through POST Consent.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>
 * @member {Number} consentId
 */
ProviderAccount.prototype['consentId'] = undefined;

/**
 * The date on when the provider account is created in the system.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>
 * @member {String} createdDate
 */
ProviderAccount.prototype['createdDate'] = undefined;

/**
 * Logical grouping of dataset attributes into datasets such as Basic Aggregation Data, Account Profile and Documents.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li><li>GET dataExtracts/userData</li></ul>
 * @member {Array.<module:model/AccountDataset>} dataset
 */
ProviderAccount.prototype['dataset'] = undefined;

/**
 * Unique identifier for the provider account resource. This is created during account addition.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li><li>GET dataExtracts/userData</li></ul>
 * @member {Number} id
 */
ProviderAccount.prototype['id'] = undefined;

/**
 * Indicates whether account is a manual or aggregated provider account.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li><li>GET dataExtracts/userData</li></ul>
 * @member {Boolean} isManual
 */
ProviderAccount.prototype['isManual'] = undefined;

/**
 * Indicate when the providerAccount is last updated successfully.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET dataExtracts/userData</li></ul>
 * @member {String} lastUpdated
 */
ProviderAccount.prototype['lastUpdated'] = undefined;

/**
 * Indicates the migration status of the provider account from screen-scraping provider to the Open Banking provider. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>GET providerAccounts/{providerAccountId}</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET dataExtracts/userData</li></ul>
 * @member {module:model/ProviderAccount.OauthMigrationStatusEnum} oauthMigrationStatus
 */
ProviderAccount.prototype['oauthMigrationStatus'] = undefined;

/**
 * @member {module:model/ProviderAccountPreferences} preferences
 */
ProviderAccount.prototype['preferences'] = undefined;

/**
 * Unique identifier for the provider resource. This denotes the provider for which the provider account id is generated by the user.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li><li>GET dataExtracts/userData</li></ul>
 * @member {Number} providerId
 */
ProviderAccount.prototype['providerId'] = undefined;

/**
 * Unique id generated to indicate the request.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li></ul>
 * @member {String} requestId
 */
ProviderAccount.prototype['requestId'] = undefined;

/**
 * The status of last update attempted for the account. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts</li><li>POST providerAccounts</li><li>PUT providerAccounts/{providerAccountId}</li><li>GET providerAccounts/{providerAccountId}</li><li>GET dataExtracts/userData</li></ul><b>Applicable Values</b><br>
 * @member {module:model/ProviderAccount.StatusEnum} status
 */
ProviderAccount.prototype['status'] = undefined;





/**
 * Allowed values for the <code>aggregationSource</code> property.
 * @enum {String}
 * @readonly
 */
ProviderAccount['AggregationSourceEnum'] = {

    /**
     * value: "SYSTEM"
     * @const
     */
    "SYSTEM": "SYSTEM",

    /**
     * value: "USER"
     * @const
     */
    "USER": "USER"
};


/**
 * Allowed values for the <code>oauthMigrationStatus</code> property.
 * @enum {String}
 * @readonly
 */
ProviderAccount['OauthMigrationStatusEnum'] = {

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS",

    /**
     * value: "TO_BE_MIGRATED"
     * @const
     */
    "TO_BE_MIGRATED": "TO_BE_MIGRATED",

    /**
     * value: "COMPLETED"
     * @const
     */
    "COMPLETED": "COMPLETED"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ProviderAccount['StatusEnum'] = {

    /**
     * value: "LOGIN_IN_PROGRESS"
     * @const
     */
    "LOGIN_IN_PROGRESS": "LOGIN_IN_PROGRESS",

    /**
     * value: "USER_INPUT_REQUIRED"
     * @const
     */
    "USER_INPUT_REQUIRED": "USER_INPUT_REQUIRED",

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS",

    /**
     * value: "PARTIAL_SUCCESS"
     * @const
     */
    "PARTIAL_SUCCESS": "PARTIAL_SUCCESS",

    /**
     * value: "SUCCESS"
     * @const
     */
    "SUCCESS": "SUCCESS",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "MIGRATION_IN_PROGRESS"
     * @const
     */
    "MIGRATION_IN_PROGRESS": "MIGRATION_IN_PROGRESS"
};



export default ProviderAccount;

