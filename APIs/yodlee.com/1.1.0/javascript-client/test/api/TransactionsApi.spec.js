/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.YodleeCoreApis);
  }
}(this, function(expect, YodleeCoreApis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new YodleeCoreApis.TransactionsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TransactionsApi', function() {
    describe('createOrRunTransactionCategorizationRules', function() {
      it('should call createOrRunTransactionCategorizationRules successfully', function(done) {
        //uncomment below and update the code to test createOrRunTransactionCategorizationRules
        //instance.createOrRunTransactionCategorizationRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTransactionCategory', function() {
      it('should call createTransactionCategory successfully', function(done) {
        //uncomment below and update the code to test createTransactionCategory
        //instance.createTransactionCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTransactionCategorizationRule', function() {
      it('should call deleteTransactionCategorizationRule successfully', function(done) {
        //uncomment below and update the code to test deleteTransactionCategorizationRule
        //instance.deleteTransactionCategorizationRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTransactionCategory', function() {
      it('should call deleteTransactionCategory successfully', function(done) {
        //uncomment below and update the code to test deleteTransactionCategory
        //instance.deleteTransactionCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionCategories', function() {
      it('should call getTransactionCategories successfully', function(done) {
        //uncomment below and update the code to test getTransactionCategories
        //instance.getTransactionCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionCategorizationRules', function() {
      it('should call getTransactionCategorizationRules successfully', function(done) {
        //uncomment below and update the code to test getTransactionCategorizationRules
        //instance.getTransactionCategorizationRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionCategorizationRulesDeprecated', function() {
      it('should call getTransactionCategorizationRulesDeprecated successfully', function(done) {
        //uncomment below and update the code to test getTransactionCategorizationRulesDeprecated
        //instance.getTransactionCategorizationRulesDeprecated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactions', function() {
      it('should call getTransactions successfully', function(done) {
        //uncomment below and update the code to test getTransactions
        //instance.getTransactions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransactionsCount', function() {
      it('should call getTransactionsCount successfully', function(done) {
        //uncomment below and update the code to test getTransactionsCount
        //instance.getTransactionsCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runTransactionCategorizationRule', function() {
      it('should call runTransactionCategorizationRule successfully', function(done) {
        //uncomment below and update the code to test runTransactionCategorizationRule
        //instance.runTransactionCategorizationRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTransaction', function() {
      it('should call updateTransaction successfully', function(done) {
        //uncomment below and update the code to test updateTransaction
        //instance.updateTransaction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTransactionCategorizationRule', function() {
      it('should call updateTransactionCategorizationRule successfully', function(done) {
        //uncomment below and update the code to test updateTransactionCategorizationRule
        //instance.updateTransactionCategorizationRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTransactionCategory', function() {
      it('should call updateTransactionCategory successfully', function(done) {
        //uncomment below and update the code to test updateTransactionCategory
        //instance.updateTransactionCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
