/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.YodleeCoreApis);
  }
}(this, function(expect, YodleeCoreApis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new YodleeCoreApis.Attribute();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Attribute', function() {
    it('should create an instance of Attribute', function() {
      // uncomment below and update the code to test Attribute
      //var instance = new YodleeCoreApis.Attribute();
      //expect(instance).to.be.a(YodleeCoreApis.Attribute);
    });

    it('should have the property container (base name: "container")', function() {
      // uncomment below and update the code to test the property container
      //var instance = new YodleeCoreApis.Attribute();
      //expect(instance).to.be();
    });

    it('should have the property containerAttributes (base name: "containerAttributes")', function() {
      // uncomment below and update the code to test the property containerAttributes
      //var instance = new YodleeCoreApis.Attribute();
      //expect(instance).to.be();
    });

    it('should have the property fromDate (base name: "fromDate")', function() {
      // uncomment below and update the code to test the property fromDate
      //var instance = new YodleeCoreApis.Attribute();
      //expect(instance).to.be();
    });

    it('should have the property fromFinYear (base name: "fromFinYear")', function() {
      // uncomment below and update the code to test the property fromFinYear
      //var instance = new YodleeCoreApis.Attribute();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new YodleeCoreApis.Attribute();
      //expect(instance).to.be();
    });

    it('should have the property toDate (base name: "toDate")', function() {
      // uncomment below and update the code to test the property toDate
      //var instance = new YodleeCoreApis.Attribute();
      //expect(instance).to.be();
    });

    it('should have the property toFinYear (base name: "toFinYear")', function() {
      // uncomment below and update the code to test the property toFinYear
      //var instance = new YodleeCoreApis.Attribute();
      //expect(instance).to.be();
    });

  });

}));
