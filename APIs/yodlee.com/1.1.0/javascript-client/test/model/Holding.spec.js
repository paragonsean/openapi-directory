/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.YodleeCoreApis);
  }
}(this, function(expect, YodleeCoreApis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new YodleeCoreApis.Holding();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Holding', function() {
    it('should create an instance of Holding', function() {
      // uncomment below and update the code to test Holding
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be.a(YodleeCoreApis.Holding);
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property accruedIncome (base name: "accruedIncome")', function() {
      // uncomment below and update the code to test the property accruedIncome
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property accruedInterest (base name: "accruedInterest")', function() {
      // uncomment below and update the code to test the property accruedInterest
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property assetClassification (base name: "assetClassification")', function() {
      // uncomment below and update the code to test the property assetClassification
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property contractQuantity (base name: "contractQuantity")', function() {
      // uncomment below and update the code to test the property contractQuantity
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property costBasis (base name: "costBasis")', function() {
      // uncomment below and update the code to test the property costBasis
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property couponRate (base name: "couponRate")', function() {
      // uncomment below and update the code to test the property couponRate
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property createdDate (base name: "createdDate")', function() {
      // uncomment below and update the code to test the property createdDate
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property cusipNumber (base name: "cusipNumber")', function() {
      // uncomment below and update the code to test the property cusipNumber
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property enrichedDescription (base name: "enrichedDescription")', function() {
      // uncomment below and update the code to test the property enrichedDescription
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property exercisedQuantity (base name: "exercisedQuantity")', function() {
      // uncomment below and update the code to test the property exercisedQuantity
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property expirationDate (base name: "expirationDate")', function() {
      // uncomment below and update the code to test the property expirationDate
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property grantDate (base name: "grantDate")', function() {
      // uncomment below and update the code to test the property grantDate
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property holdingType (base name: "holdingType")', function() {
      // uncomment below and update the code to test the property holdingType
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property interestRate (base name: "interestRate")', function() {
      // uncomment below and update the code to test the property interestRate
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property isShort (base name: "isShort")', function() {
      // uncomment below and update the code to test the property isShort
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property isin (base name: "isin")', function() {
      // uncomment below and update the code to test the property isin
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdated (base name: "lastUpdated")', function() {
      // uncomment below and update the code to test the property lastUpdated
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property matchStatus (base name: "matchStatus")', function() {
      // uncomment below and update the code to test the property matchStatus
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property maturityDate (base name: "maturityDate")', function() {
      // uncomment below and update the code to test the property maturityDate
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property optionType (base name: "optionType")', function() {
      // uncomment below and update the code to test the property optionType
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property providerAccountId (base name: "providerAccountId")', function() {
      // uncomment below and update the code to test the property providerAccountId
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property securityStyle (base name: "securityStyle")', function() {
      // uncomment below and update the code to test the property securityStyle
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property securityType (base name: "securityType")', function() {
      // uncomment below and update the code to test the property securityType
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property sedol (base name: "sedol")', function() {
      // uncomment below and update the code to test the property sedol
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property spread (base name: "spread")', function() {
      // uncomment below and update the code to test the property spread
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property strikePrice (base name: "strikePrice")', function() {
      // uncomment below and update the code to test the property strikePrice
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property symbol (base name: "symbol")', function() {
      // uncomment below and update the code to test the property symbol
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property term (base name: "term")', function() {
      // uncomment below and update the code to test the property term
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property unvestedQuantity (base name: "unvestedQuantity")', function() {
      // uncomment below and update the code to test the property unvestedQuantity
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property unvestedValue (base name: "unvestedValue")', function() {
      // uncomment below and update the code to test the property unvestedValue
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property value (base name: "value")', function() {
      // uncomment below and update the code to test the property value
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property vestedQuantity (base name: "vestedQuantity")', function() {
      // uncomment below and update the code to test the property vestedQuantity
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property vestedSharesExercisable (base name: "vestedSharesExercisable")', function() {
      // uncomment below and update the code to test the property vestedSharesExercisable
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property vestedValue (base name: "vestedValue")', function() {
      // uncomment below and update the code to test the property vestedValue
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

    it('should have the property vestingDate (base name: "vestingDate")', function() {
      // uncomment below and update the code to test the property vestingDate
      //var instance = new YodleeCoreApis.Holding();
      //expect(instance).to.be();
    });

  });

}));
