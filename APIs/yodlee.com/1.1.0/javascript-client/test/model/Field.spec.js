/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.YodleeCoreApis);
  }
}(this, function(expect, YodleeCoreApis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new YodleeCoreApis.Field();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Field', function() {
    it('should create an instance of Field', function() {
      // uncomment below and update the code to test Field
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be.a(YodleeCoreApis.Field);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

    it('should have the property isOptional (base name: "isOptional")', function() {
      // uncomment below and update the code to test the property isOptional
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

    it('should have the property isValueProvided (base name: "isValueProvided")', function() {
      // uncomment below and update the code to test the property isValueProvided
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

    it('should have the property maxLength (base name: "maxLength")', function() {
      // uncomment below and update the code to test the property maxLength
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

    it('should have the property minLength (base name: "minLength")', function() {
      // uncomment below and update the code to test the property minLength
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

    it('should have the property option (base name: "option")', function() {
      // uncomment below and update the code to test the property option
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

    it('should have the property prefix (base name: "prefix")', function() {
      // uncomment below and update the code to test the property prefix
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

    it('should have the property suffix (base name: "suffix")', function() {
      // uncomment below and update the code to test the property suffix
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

    it('should have the property value (base name: "value")', function() {
      // uncomment below and update the code to test the property value
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

    it('should have the property valueEditable (base name: "valueEditable")', function() {
      // uncomment below and update the code to test the property valueEditable
      //var instance = new YodleeCoreApis.Field();
      //expect(instance).to.be();
    });

  });

}));
