/*
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HoldingAssetClassificationListResponse;
import org.openapitools.client.model.HoldingResponse;
import org.openapitools.client.model.HoldingSecuritiesResponse;
import org.openapitools.client.model.HoldingTypeListResponse;
import org.openapitools.client.model.YodleeError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HoldingsApi
 */
@Disabled
public class HoldingsApiTest {

    private final HoldingsApi api = new HoldingsApi();

    /**
     * Get Asset Classification List
     *
     * The get asset classifications list service is used to get the supported asset classifications. &lt;br&gt;The response includes different classification types like assetClass, country, sector, style, etc. and the values corresponding to each type.&lt;br&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssetClassificationListTest() throws ApiException {
        HoldingAssetClassificationListResponse response = api.getAssetClassificationList();
        // TODO: test validations
    }

    /**
     * Get Holding Type List
     *
     * The get holding types list service is used to get the supported holding types.&lt;br&gt;The response includes different holding types such as future, moneyMarketFund, stock, etc. and it returns the supported holding types &lt;br&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHoldingTypeListTest() throws ApiException {
        HoldingTypeListResponse response = api.getHoldingTypeList();
        // TODO: test validations
    }

    /**
     * Get Holdings
     *
     * The get holdings service is used to get the list of holdings of a user.&lt;br&gt;Supported holding types can be employeeStockOption, moneyMarketFund, bond, etc. and is obtained using get holding type list service. &lt;br&gt;Asset classifications for the holdings need to be requested through the \&quot;include\&quot; parameter.&lt;br&gt;Asset classification information for holdings are not available by default, as it is a premium feature.&lt;br&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHoldingsTest() throws ApiException {
        String accountId = null;
        String assetClassificationClassificationType = null;
        String classificationValue = null;
        String include = null;
        String providerAccountId = null;
        HoldingResponse response = api.getHoldings(accountId, assetClassificationClassificationType, classificationValue, include, providerAccountId);
        // TODO: test validations
    }

    /**
     * Get Security Details
     *
     * The get security details service is used to get all the security information for the holdings&lt;br&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSecuritiesTest() throws ApiException {
        String holdingId = null;
        HoldingSecuritiesResponse response = api.getSecurities(holdingId);
        // TODO: test validations
    }

}
