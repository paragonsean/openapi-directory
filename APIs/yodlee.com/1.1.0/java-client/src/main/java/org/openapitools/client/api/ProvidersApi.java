/*
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ProviderDetailResponse;
import org.openapitools.client.model.ProviderResponse;
import org.openapitools.client.model.ProvidersCountResponse;
import org.openapitools.client.model.YodleeError;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProvidersApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ProvidersApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ProvidersApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getAllProviders
     * @param capability CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)
     * @param dataset$filter Expression to filter the providers by dataset(s) or dataset attribute(s). The default value will be the dataset or dataset attributes configured as default for the customer. (optional)
     * @param fullAccountNumberFields Specify to filter the providers with values paymentAccountNumber,unmaskedAccountNumber. (optional)
     * @param institutionId Institution Id for Single site selection (optional)
     * @param name Name in minimum 1 character or routing number. (optional)
     * @param priority Search priority (optional)
     * @param providerId Max 5 Comma seperated Provider Ids (optional)
     * @param skip skip (Min 0) - This is not applicable along with &#39;name&#39; parameter. (optional)
     * @param top top (Max 500) - This is not applicable along with &#39;name&#39; parameter. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Y800 : Invalid value for priority&lt;br&gt;Y800 : Invalid value for providerName&lt;br&gt;Y801 : Invalid length for a site search. The search string must have atleast 1 character&lt;br&gt;Y800 : Invalid value for skip&lt;br&gt;Y804 : Permitted values of top between 1 - 500&lt;br&gt;Y821 : Dataset not supported&lt;br&gt;Y820 : The additionalDataSet is not supported for Get provider API </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllProvidersCall(String capability, String dataset$filter, String fullAccountNumberFields, Long institutionId, String name, String priority, String providerId, Integer skip, Integer top, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (capability != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("capability", capability));
        }

        if (dataset$filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dataset$filter", dataset$filter));
        }

        if (fullAccountNumberFields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fullAccountNumberFields", fullAccountNumberFields));
        }

        if (institutionId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("institutionId", institutionId));
        }

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (priority != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("priority", priority));
        }

        if (providerId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("providerId", providerId));
        }

        if (skip != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("skip", skip));
        }

        if (top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("top", top));
        }

        final String[] localVarAccepts = {
            "application/json;charset=UTF-8"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAllProvidersValidateBeforeCall(String capability, String dataset$filter, String fullAccountNumberFields, Long institutionId, String name, String priority, String providerId, Integer skip, Integer top, final ApiCallback _callback) throws ApiException {
        return getAllProvidersCall(capability, dataset$filter, fullAccountNumberFields, institutionId, name, priority, providerId, skip, top, _callback);

    }

    /**
     * Get Providers
     * The get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region. &lt;br&gt;Searching for a provider using a routing number is applicable only to the USA and Canada regions.&lt;br&gt;The valid values for priority are: &lt;br&gt;   1. cobrand: Returns providers enabled for the cobrand (Default priority)&lt;br&gt;   2. popular: Returns providers popular among users of the customer&lt;br&gt;&lt;br&gt;Only the datasets, attributes, and containers that are enabled for the customer will be returned in the response.&lt;br&gt;Input for the dataset$filter should adhere to the following expression:&lt;br&gt;&lt;dataset.name&gt;[&lt;attribute.name&gt;.container[&lt;container&gt; OR &lt;container&gt;] OR &lt;attribute.name&gt;.container[&lt;container&gt;]] &lt;br&gt;OR &lt;dataset.name&gt;[&lt;attribute.name&gt; OR &lt;attribute.name&gt;]&lt;br&gt;&lt;b&gt;dataset$filter value examples:&lt;/b&gt;&lt;br&gt;ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank OR investment OR creditCard]]&lt;br&gt;ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]&lt;br&gt;BASIC_AGG_DATA[ACCOUNT_DETAILS.container[bank OR investment] OR HOLDINGS.container[bank]] OR ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]&lt;br&gt;BASIC_AGG_DATA&lt;br&gt;BASIC_AGG_DATA OR ACCT_PROFILE&lt;br&gt;BASIC_AGG_DATA [ ACCOUNT_DETAILS OR HOLDINGS ]&lt;br&gt;BASIC_AGG_DATA [ ACCOUNT_DETAILS] OR DOCUMENT &lt;br&gt;BASIC_AGG_DATA [ BASIC_ACCOUNT_INFO OR ACCOUNT_DETAILS ] &lt;br&gt;&lt;br&gt;The fullAcountNumberFields is specified to filter the providers that have paymentAccountNumber or unmaskedAccountNumber support in the FULL_ACCT_NUMBER dataset attribute.&lt;br&gt;&lt;b&gt;Examples for usage of fullAccountNumberFields &lt;/b&gt;&lt;br&gt;dataset$filter&#x3D;ACCT_PROFILE[ FULL_ACCT_NUMBER.container [ bank ]] &amp;amp; fullAccountNumberFields&#x3D;paymentAccountNumber&lt;br&gt;dataset$filter&#x3D;ACCT_PROFILE[ FULL_ACCT_NUMBER.container [ bank ]] &amp;amp; fullAccountNumberFields&#x3D;unmaskedAccountNumber&lt;br&gt;dataset$filter&#x3D;ACCT_PROFILE[ FULL_ACCT_NUMBER.container [ bank ]] &amp;amp; fullAccountNumberFields&#x3D;unmaskedAccountNumber,paymentAccountNumber&lt;br&gt;&lt;br&gt;The skip and top parameters are used for pagination. In the skip and top parameters, pass the number of records to be skipped and retrieved, respectively.&lt;br&gt;The response header provides the links to retrieve the next and previous set of transactions.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;ol&gt;&lt;li&gt;In a product flow involving user interaction, Yodlee recommends invoking this service with filters.&lt;li&gt;Without filters, the service may perform slowly as it takes a few minutes to return data in the response.&lt;li&gt;The AuthParameter appears in the response only in case of token-based aggregation sites.&lt;li&gt;The pagination feature only applies when the priority parameter is set as cobrand. If no values are provided in the skip and top parameters, the API will only return the first 500 records.&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in query parameter and response.&lt;/li&gt;&lt;/ol&gt;
     * @param capability CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)
     * @param dataset$filter Expression to filter the providers by dataset(s) or dataset attribute(s). The default value will be the dataset or dataset attributes configured as default for the customer. (optional)
     * @param fullAccountNumberFields Specify to filter the providers with values paymentAccountNumber,unmaskedAccountNumber. (optional)
     * @param institutionId Institution Id for Single site selection (optional)
     * @param name Name in minimum 1 character or routing number. (optional)
     * @param priority Search priority (optional)
     * @param providerId Max 5 Comma seperated Provider Ids (optional)
     * @param skip skip (Min 0) - This is not applicable along with &#39;name&#39; parameter. (optional)
     * @param top top (Max 500) - This is not applicable along with &#39;name&#39; parameter. (optional)
     * @return ProviderResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Y800 : Invalid value for priority&lt;br&gt;Y800 : Invalid value for providerName&lt;br&gt;Y801 : Invalid length for a site search. The search string must have atleast 1 character&lt;br&gt;Y800 : Invalid value for skip&lt;br&gt;Y804 : Permitted values of top between 1 - 500&lt;br&gt;Y821 : Dataset not supported&lt;br&gt;Y820 : The additionalDataSet is not supported for Get provider API </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public ProviderResponse getAllProviders(String capability, String dataset$filter, String fullAccountNumberFields, Long institutionId, String name, String priority, String providerId, Integer skip, Integer top) throws ApiException {
        ApiResponse<ProviderResponse> localVarResp = getAllProvidersWithHttpInfo(capability, dataset$filter, fullAccountNumberFields, institutionId, name, priority, providerId, skip, top);
        return localVarResp.getData();
    }

    /**
     * Get Providers
     * The get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region. &lt;br&gt;Searching for a provider using a routing number is applicable only to the USA and Canada regions.&lt;br&gt;The valid values for priority are: &lt;br&gt;   1. cobrand: Returns providers enabled for the cobrand (Default priority)&lt;br&gt;   2. popular: Returns providers popular among users of the customer&lt;br&gt;&lt;br&gt;Only the datasets, attributes, and containers that are enabled for the customer will be returned in the response.&lt;br&gt;Input for the dataset$filter should adhere to the following expression:&lt;br&gt;&lt;dataset.name&gt;[&lt;attribute.name&gt;.container[&lt;container&gt; OR &lt;container&gt;] OR &lt;attribute.name&gt;.container[&lt;container&gt;]] &lt;br&gt;OR &lt;dataset.name&gt;[&lt;attribute.name&gt; OR &lt;attribute.name&gt;]&lt;br&gt;&lt;b&gt;dataset$filter value examples:&lt;/b&gt;&lt;br&gt;ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank OR investment OR creditCard]]&lt;br&gt;ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]&lt;br&gt;BASIC_AGG_DATA[ACCOUNT_DETAILS.container[bank OR investment] OR HOLDINGS.container[bank]] OR ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]&lt;br&gt;BASIC_AGG_DATA&lt;br&gt;BASIC_AGG_DATA OR ACCT_PROFILE&lt;br&gt;BASIC_AGG_DATA [ ACCOUNT_DETAILS OR HOLDINGS ]&lt;br&gt;BASIC_AGG_DATA [ ACCOUNT_DETAILS] OR DOCUMENT &lt;br&gt;BASIC_AGG_DATA [ BASIC_ACCOUNT_INFO OR ACCOUNT_DETAILS ] &lt;br&gt;&lt;br&gt;The fullAcountNumberFields is specified to filter the providers that have paymentAccountNumber or unmaskedAccountNumber support in the FULL_ACCT_NUMBER dataset attribute.&lt;br&gt;&lt;b&gt;Examples for usage of fullAccountNumberFields &lt;/b&gt;&lt;br&gt;dataset$filter&#x3D;ACCT_PROFILE[ FULL_ACCT_NUMBER.container [ bank ]] &amp;amp; fullAccountNumberFields&#x3D;paymentAccountNumber&lt;br&gt;dataset$filter&#x3D;ACCT_PROFILE[ FULL_ACCT_NUMBER.container [ bank ]] &amp;amp; fullAccountNumberFields&#x3D;unmaskedAccountNumber&lt;br&gt;dataset$filter&#x3D;ACCT_PROFILE[ FULL_ACCT_NUMBER.container [ bank ]] &amp;amp; fullAccountNumberFields&#x3D;unmaskedAccountNumber,paymentAccountNumber&lt;br&gt;&lt;br&gt;The skip and top parameters are used for pagination. In the skip and top parameters, pass the number of records to be skipped and retrieved, respectively.&lt;br&gt;The response header provides the links to retrieve the next and previous set of transactions.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;ol&gt;&lt;li&gt;In a product flow involving user interaction, Yodlee recommends invoking this service with filters.&lt;li&gt;Without filters, the service may perform slowly as it takes a few minutes to return data in the response.&lt;li&gt;The AuthParameter appears in the response only in case of token-based aggregation sites.&lt;li&gt;The pagination feature only applies when the priority parameter is set as cobrand. If no values are provided in the skip and top parameters, the API will only return the first 500 records.&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in query parameter and response.&lt;/li&gt;&lt;/ol&gt;
     * @param capability CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)
     * @param dataset$filter Expression to filter the providers by dataset(s) or dataset attribute(s). The default value will be the dataset or dataset attributes configured as default for the customer. (optional)
     * @param fullAccountNumberFields Specify to filter the providers with values paymentAccountNumber,unmaskedAccountNumber. (optional)
     * @param institutionId Institution Id for Single site selection (optional)
     * @param name Name in minimum 1 character or routing number. (optional)
     * @param priority Search priority (optional)
     * @param providerId Max 5 Comma seperated Provider Ids (optional)
     * @param skip skip (Min 0) - This is not applicable along with &#39;name&#39; parameter. (optional)
     * @param top top (Max 500) - This is not applicable along with &#39;name&#39; parameter. (optional)
     * @return ApiResponse&lt;ProviderResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Y800 : Invalid value for priority&lt;br&gt;Y800 : Invalid value for providerName&lt;br&gt;Y801 : Invalid length for a site search. The search string must have atleast 1 character&lt;br&gt;Y800 : Invalid value for skip&lt;br&gt;Y804 : Permitted values of top between 1 - 500&lt;br&gt;Y821 : Dataset not supported&lt;br&gt;Y820 : The additionalDataSet is not supported for Get provider API </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ProviderResponse> getAllProvidersWithHttpInfo(String capability, String dataset$filter, String fullAccountNumberFields, Long institutionId, String name, String priority, String providerId, Integer skip, Integer top) throws ApiException {
        okhttp3.Call localVarCall = getAllProvidersValidateBeforeCall(capability, dataset$filter, fullAccountNumberFields, institutionId, name, priority, providerId, skip, top, null);
        Type localVarReturnType = new TypeToken<ProviderResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Providers (asynchronously)
     * The get provider service is used to get all the providers that are enabled, search a provider service by name or routing number and get popular sites of a region. &lt;br&gt;Searching for a provider using a routing number is applicable only to the USA and Canada regions.&lt;br&gt;The valid values for priority are: &lt;br&gt;   1. cobrand: Returns providers enabled for the cobrand (Default priority)&lt;br&gt;   2. popular: Returns providers popular among users of the customer&lt;br&gt;&lt;br&gt;Only the datasets, attributes, and containers that are enabled for the customer will be returned in the response.&lt;br&gt;Input for the dataset$filter should adhere to the following expression:&lt;br&gt;&lt;dataset.name&gt;[&lt;attribute.name&gt;.container[&lt;container&gt; OR &lt;container&gt;] OR &lt;attribute.name&gt;.container[&lt;container&gt;]] &lt;br&gt;OR &lt;dataset.name&gt;[&lt;attribute.name&gt; OR &lt;attribute.name&gt;]&lt;br&gt;&lt;b&gt;dataset$filter value examples:&lt;/b&gt;&lt;br&gt;ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank OR investment OR creditCard]]&lt;br&gt;ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]&lt;br&gt;BASIC_AGG_DATA[ACCOUNT_DETAILS.container[bank OR investment] OR HOLDINGS.container[bank]] OR ACCT_PROFILE[FULL_ACCT_NUMBER.container[bank]]&lt;br&gt;BASIC_AGG_DATA&lt;br&gt;BASIC_AGG_DATA OR ACCT_PROFILE&lt;br&gt;BASIC_AGG_DATA [ ACCOUNT_DETAILS OR HOLDINGS ]&lt;br&gt;BASIC_AGG_DATA [ ACCOUNT_DETAILS] OR DOCUMENT &lt;br&gt;BASIC_AGG_DATA [ BASIC_ACCOUNT_INFO OR ACCOUNT_DETAILS ] &lt;br&gt;&lt;br&gt;The fullAcountNumberFields is specified to filter the providers that have paymentAccountNumber or unmaskedAccountNumber support in the FULL_ACCT_NUMBER dataset attribute.&lt;br&gt;&lt;b&gt;Examples for usage of fullAccountNumberFields &lt;/b&gt;&lt;br&gt;dataset$filter&#x3D;ACCT_PROFILE[ FULL_ACCT_NUMBER.container [ bank ]] &amp;amp; fullAccountNumberFields&#x3D;paymentAccountNumber&lt;br&gt;dataset$filter&#x3D;ACCT_PROFILE[ FULL_ACCT_NUMBER.container [ bank ]] &amp;amp; fullAccountNumberFields&#x3D;unmaskedAccountNumber&lt;br&gt;dataset$filter&#x3D;ACCT_PROFILE[ FULL_ACCT_NUMBER.container [ bank ]] &amp;amp; fullAccountNumberFields&#x3D;unmaskedAccountNumber,paymentAccountNumber&lt;br&gt;&lt;br&gt;The skip and top parameters are used for pagination. In the skip and top parameters, pass the number of records to be skipped and retrieved, respectively.&lt;br&gt;The response header provides the links to retrieve the next and previous set of transactions.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;ol&gt;&lt;li&gt;In a product flow involving user interaction, Yodlee recommends invoking this service with filters.&lt;li&gt;Without filters, the service may perform slowly as it takes a few minutes to return data in the response.&lt;li&gt;The AuthParameter appears in the response only in case of token-based aggregation sites.&lt;li&gt;The pagination feature only applies when the priority parameter is set as cobrand. If no values are provided in the skip and top parameters, the API will only return the first 500 records.&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in query parameter and response.&lt;/li&gt;&lt;/ol&gt;
     * @param capability CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)
     * @param dataset$filter Expression to filter the providers by dataset(s) or dataset attribute(s). The default value will be the dataset or dataset attributes configured as default for the customer. (optional)
     * @param fullAccountNumberFields Specify to filter the providers with values paymentAccountNumber,unmaskedAccountNumber. (optional)
     * @param institutionId Institution Id for Single site selection (optional)
     * @param name Name in minimum 1 character or routing number. (optional)
     * @param priority Search priority (optional)
     * @param providerId Max 5 Comma seperated Provider Ids (optional)
     * @param skip skip (Min 0) - This is not applicable along with &#39;name&#39; parameter. (optional)
     * @param top top (Max 500) - This is not applicable along with &#39;name&#39; parameter. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Y800 : Invalid value for priority&lt;br&gt;Y800 : Invalid value for providerName&lt;br&gt;Y801 : Invalid length for a site search. The search string must have atleast 1 character&lt;br&gt;Y800 : Invalid value for skip&lt;br&gt;Y804 : Permitted values of top between 1 - 500&lt;br&gt;Y821 : Dataset not supported&lt;br&gt;Y820 : The additionalDataSet is not supported for Get provider API </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllProvidersAsync(String capability, String dataset$filter, String fullAccountNumberFields, Long institutionId, String name, String priority, String providerId, Integer skip, Integer top, final ApiCallback<ProviderResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAllProvidersValidateBeforeCall(capability, dataset$filter, fullAccountNumberFields, institutionId, name, priority, providerId, skip, top, _callback);
        Type localVarReturnType = new TypeToken<ProviderResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getProvider
     * @param providerId providerId (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Y800 : Invalid value for providerId </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProviderCall(Long providerId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/{providerId}"
            .replace("{" + "providerId" + "}", localVarApiClient.escapeString(providerId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json;charset=UTF-8"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getProviderValidateBeforeCall(Long providerId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'providerId' is set
        if (providerId == null) {
            throw new ApiException("Missing the required parameter 'providerId' when calling getProvider(Async)");
        }

        return getProviderCall(providerId, _callback);

    }

    /**
     * Get Provider Details
     * The get provider detail service is used to get detailed information including the login form for a provider.&lt;br&gt;The response is a provider object that includes information such as name of the provider, &lt;br&gt;provider&#39;s base URL, a list of containers supported by the provider, the login form details of the provider, etc.&lt;br&gt;Only enabled datasets, attributes and containers gets returned in the response.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in the response.
     * @param providerId providerId (required)
     * @return ProviderDetailResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Y800 : Invalid value for providerId </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public ProviderDetailResponse getProvider(Long providerId) throws ApiException {
        ApiResponse<ProviderDetailResponse> localVarResp = getProviderWithHttpInfo(providerId);
        return localVarResp.getData();
    }

    /**
     * Get Provider Details
     * The get provider detail service is used to get detailed information including the login form for a provider.&lt;br&gt;The response is a provider object that includes information such as name of the provider, &lt;br&gt;provider&#39;s base URL, a list of containers supported by the provider, the login form details of the provider, etc.&lt;br&gt;Only enabled datasets, attributes and containers gets returned in the response.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in the response.
     * @param providerId providerId (required)
     * @return ApiResponse&lt;ProviderDetailResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Y800 : Invalid value for providerId </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ProviderDetailResponse> getProviderWithHttpInfo(Long providerId) throws ApiException {
        okhttp3.Call localVarCall = getProviderValidateBeforeCall(providerId, null);
        Type localVarReturnType = new TypeToken<ProviderDetailResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Provider Details (asynchronously)
     * The get provider detail service is used to get detailed information including the login form for a provider.&lt;br&gt;The response is a provider object that includes information such as name of the provider, &lt;br&gt;provider&#39;s base URL, a list of containers supported by the provider, the login form details of the provider, etc.&lt;br&gt;Only enabled datasets, attributes and containers gets returned in the response.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;li&gt;This service supports the localization feature and accepts locale as a header parameter.&lt;li&gt;The capability has been deprecated in the response.
     * @param providerId providerId (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Y800 : Invalid value for providerId </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProviderAsync(Long providerId, final ApiCallback<ProviderDetailResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getProviderValidateBeforeCall(providerId, _callback);
        Type localVarReturnType = new TypeToken<ProviderDetailResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getProvidersCount
     * @param capability CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)
     * @param dataset$filter Expression to filter the providers by dataset(s) or dataset attribute(s). The default value will be the dataset or dataset attributes configured as default for the customer. (optional)
     * @param fullAccountNumberFields Specify to filter the providers with values paymentAccountNumber,unmaskedAccountNumber. (optional)
     * @param name Name in minimum 1 character or routing number. (optional)
     * @param priority Search priority (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Y800 : Invalid value for priority&lt;br&gt;Y800 : Invalid value for providerName&lt;br&gt;Y801 : Invalid length for a site search. The search string must have at least 1 character&lt;br&gt;Y800 : Invalid value for skip&lt;br&gt;Y804 : Permitted values of top between 1 - 500&lt;br&gt;Y821 : Dataset not supported&lt;br&gt;Y820 : The additionalDataSet is not supported for Get provider API </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProvidersCountCall(String capability, String dataset$filter, String fullAccountNumberFields, String name, String priority, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/providers/count";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (capability != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("capability", capability));
        }

        if (dataset$filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("dataset$filter", dataset$filter));
        }

        if (fullAccountNumberFields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fullAccountNumberFields", fullAccountNumberFields));
        }

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        if (priority != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("priority", priority));
        }

        final String[] localVarAccepts = {
            "application/json;charset=UTF-8"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getProvidersCountValidateBeforeCall(String capability, String dataset$filter, String fullAccountNumberFields, String name, String priority, final ApiCallback _callback) throws ApiException {
        return getProvidersCountCall(capability, dataset$filter, fullAccountNumberFields, name, priority, _callback);

    }

    /**
     * Get Providers Count
     * The count service provides the total number of providers that get returned in the GET /providers depending on the input parameters passed.&lt;br&gt;If you are implementing pagination for providers, call this endpoint before calling GET /providers to know the number of providers that are returned for the input parameters passed.&lt;br&gt;The functionality of the input parameters remains the same as that of the GET /providers endpoint&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The capability has been deprecated in the query parameter.&lt;/li&gt;
     * @param capability CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)
     * @param dataset$filter Expression to filter the providers by dataset(s) or dataset attribute(s). The default value will be the dataset or dataset attributes configured as default for the customer. (optional)
     * @param fullAccountNumberFields Specify to filter the providers with values paymentAccountNumber,unmaskedAccountNumber. (optional)
     * @param name Name in minimum 1 character or routing number. (optional)
     * @param priority Search priority (optional)
     * @return ProvidersCountResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Y800 : Invalid value for priority&lt;br&gt;Y800 : Invalid value for providerName&lt;br&gt;Y801 : Invalid length for a site search. The search string must have at least 1 character&lt;br&gt;Y800 : Invalid value for skip&lt;br&gt;Y804 : Permitted values of top between 1 - 500&lt;br&gt;Y821 : Dataset not supported&lt;br&gt;Y820 : The additionalDataSet is not supported for Get provider API </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public ProvidersCountResponse getProvidersCount(String capability, String dataset$filter, String fullAccountNumberFields, String name, String priority) throws ApiException {
        ApiResponse<ProvidersCountResponse> localVarResp = getProvidersCountWithHttpInfo(capability, dataset$filter, fullAccountNumberFields, name, priority);
        return localVarResp.getData();
    }

    /**
     * Get Providers Count
     * The count service provides the total number of providers that get returned in the GET /providers depending on the input parameters passed.&lt;br&gt;If you are implementing pagination for providers, call this endpoint before calling GET /providers to know the number of providers that are returned for the input parameters passed.&lt;br&gt;The functionality of the input parameters remains the same as that of the GET /providers endpoint&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The capability has been deprecated in the query parameter.&lt;/li&gt;
     * @param capability CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)
     * @param dataset$filter Expression to filter the providers by dataset(s) or dataset attribute(s). The default value will be the dataset or dataset attributes configured as default for the customer. (optional)
     * @param fullAccountNumberFields Specify to filter the providers with values paymentAccountNumber,unmaskedAccountNumber. (optional)
     * @param name Name in minimum 1 character or routing number. (optional)
     * @param priority Search priority (optional)
     * @return ApiResponse&lt;ProvidersCountResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Y800 : Invalid value for priority&lt;br&gt;Y800 : Invalid value for providerName&lt;br&gt;Y801 : Invalid length for a site search. The search string must have at least 1 character&lt;br&gt;Y800 : Invalid value for skip&lt;br&gt;Y804 : Permitted values of top between 1 - 500&lt;br&gt;Y821 : Dataset not supported&lt;br&gt;Y820 : The additionalDataSet is not supported for Get provider API </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ProvidersCountResponse> getProvidersCountWithHttpInfo(String capability, String dataset$filter, String fullAccountNumberFields, String name, String priority) throws ApiException {
        okhttp3.Call localVarCall = getProvidersCountValidateBeforeCall(capability, dataset$filter, fullAccountNumberFields, name, priority, null);
        Type localVarReturnType = new TypeToken<ProvidersCountResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Providers Count (asynchronously)
     * The count service provides the total number of providers that get returned in the GET /providers depending on the input parameters passed.&lt;br&gt;If you are implementing pagination for providers, call this endpoint before calling GET /providers to know the number of providers that are returned for the input parameters passed.&lt;br&gt;The functionality of the input parameters remains the same as that of the GET /providers endpoint&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; &lt;li&gt;The capability has been deprecated in the query parameter.&lt;/li&gt;
     * @param capability CHALLENGE_DEPOSIT_VERIFICATION - capability search is deprecated (optional)
     * @param dataset$filter Expression to filter the providers by dataset(s) or dataset attribute(s). The default value will be the dataset or dataset attributes configured as default for the customer. (optional)
     * @param fullAccountNumberFields Specify to filter the providers with values paymentAccountNumber,unmaskedAccountNumber. (optional)
     * @param name Name in minimum 1 character or routing number. (optional)
     * @param priority Search priority (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Y800 : Invalid value for priority&lt;br&gt;Y800 : Invalid value for providerName&lt;br&gt;Y801 : Invalid length for a site search. The search string must have at least 1 character&lt;br&gt;Y800 : Invalid value for skip&lt;br&gt;Y804 : Permitted values of top between 1 - 500&lt;br&gt;Y821 : Dataset not supported&lt;br&gt;Y820 : The additionalDataSet is not supported for Get provider API </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getProvidersCountAsync(String capability, String dataset$filter, String fullAccountNumberFields, String name, String priority, final ApiCallback<ProvidersCountResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getProvidersCountValidateBeforeCall(capability, dataset$filter, fullAccountNumberFields, name, priority, _callback);
        Type localVarReturnType = new TypeToken<ProvidersCountResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
