# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DocumentDownload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, doc_content: str=None, id: str=None):
        """DocumentDownload - a model defined in OpenAPI

        :param doc_content: The doc_content of this DocumentDownload.
        :param id: The id of this DocumentDownload.
        """
        self.openapi_types = {
            'doc_content': str,
            'id': str
        }

        self.attribute_map = {
            'doc_content': 'docContent',
            'id': 'id'
        }

        self._doc_content = doc_content
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentDownload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentDownload of this DocumentDownload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def doc_content(self):
        """Gets the doc_content of this DocumentDownload.

        Contents of the document in Base64 format.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, insurance<br>

        :return: The doc_content of this DocumentDownload.
        :rtype: str
        """
        return self._doc_content

    @doc_content.setter
    def doc_content(self, doc_content):
        """Sets the doc_content of this DocumentDownload.

        Contents of the document in Base64 format.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, insurance<br>

        :param doc_content: The doc_content of this DocumentDownload.
        :type doc_content: str
        """

        self._doc_content = doc_content

    @property
    def id(self):
        """Gets the id of this DocumentDownload.

        The document's primary key and unique identifier.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, insurance<br>

        :return: The id of this DocumentDownload.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DocumentDownload.

        The document's primary key and unique identifier.<br><br><b>Applicable containers</b>: bank, investment, creditCard, loan, insurance<br>

        :param id: The id of this DocumentDownload.
        :type id: str
        """

        self._id = id
