# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.derived_holding import DerivedHolding
from openapi_server.models.derived_holdings_account import DerivedHoldingsAccount
from openapi_server.models.money import Money
from openapi_server import util


class DerivedHoldingsSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account: List[DerivedHoldingsAccount]=None, classification_type: str=None, classification_value: str=None, holding: List[DerivedHolding]=None, value: Money=None):
        """DerivedHoldingsSummary - a model defined in OpenAPI

        :param account: The account of this DerivedHoldingsSummary.
        :param classification_type: The classification_type of this DerivedHoldingsSummary.
        :param classification_value: The classification_value of this DerivedHoldingsSummary.
        :param holding: The holding of this DerivedHoldingsSummary.
        :param value: The value of this DerivedHoldingsSummary.
        """
        self.openapi_types = {
            'account': List[DerivedHoldingsAccount],
            'classification_type': str,
            'classification_value': str,
            'holding': List[DerivedHolding],
            'value': Money
        }

        self.attribute_map = {
            'account': 'account',
            'classification_type': 'classificationType',
            'classification_value': 'classificationValue',
            'holding': 'holding',
            'value': 'value'
        }

        self._account = account
        self._classification_type = classification_type
        self._classification_value = classification_value
        self._holding = holding
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DerivedHoldingsSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DerivedHoldingsSummary of this DerivedHoldingsSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account(self):
        """Gets the account of this DerivedHoldingsSummary.

        Accounts that contribute to the classification. <br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>

        :return: The account of this DerivedHoldingsSummary.
        :rtype: List[DerivedHoldingsAccount]
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this DerivedHoldingsSummary.

        Accounts that contribute to the classification. <br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>

        :param account: The account of this DerivedHoldingsSummary.
        :type account: List[DerivedHoldingsAccount]
        """

        self._account = account

    @property
    def classification_type(self):
        """Gets the classification_type of this DerivedHoldingsSummary.

        The classification type of the security. The supported asset classification type and the values are provided in the /holdings/assetClassificationList.<br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>

        :return: The classification_type of this DerivedHoldingsSummary.
        :rtype: str
        """
        return self._classification_type

    @classification_type.setter
    def classification_type(self, classification_type):
        """Sets the classification_type of this DerivedHoldingsSummary.

        The classification type of the security. The supported asset classification type and the values are provided in the /holdings/assetClassificationList.<br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>

        :param classification_type: The classification_type of this DerivedHoldingsSummary.
        :type classification_type: str
        """

        self._classification_type = classification_type

    @property
    def classification_value(self):
        """Gets the classification_value of this DerivedHoldingsSummary.

        The classification value that corresponds to the classification type of the holding. The supported asset classification type and the values are provided in the /holdings/assetClassificationList.<br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>

        :return: The classification_value of this DerivedHoldingsSummary.
        :rtype: str
        """
        return self._classification_value

    @classification_value.setter
    def classification_value(self, classification_value):
        """Sets the classification_value of this DerivedHoldingsSummary.

        The classification value that corresponds to the classification type of the holding. The supported asset classification type and the values are provided in the /holdings/assetClassificationList.<br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>

        :param classification_value: The classification_value of this DerivedHoldingsSummary.
        :type classification_value: str
        """

        self._classification_value = classification_value

    @property
    def holding(self):
        """Gets the holding of this DerivedHoldingsSummary.

        Securities that belong to the asset classification type and contributed to the summary value.<br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>

        :return: The holding of this DerivedHoldingsSummary.
        :rtype: List[DerivedHolding]
        """
        return self._holding

    @holding.setter
    def holding(self, holding):
        """Sets the holding of this DerivedHoldingsSummary.

        Securities that belong to the asset classification type and contributed to the summary value.<br><b>Required Feature Enablement</b>: Asset classification feature.<br><br><b>Applicable containers</b>: investment, insurance<br>

        :param holding: The holding of this DerivedHoldingsSummary.
        :type holding: List[DerivedHolding]
        """

        self._holding = holding

    @property
    def value(self):
        """Gets the value of this DerivedHoldingsSummary.


        :return: The value of this DerivedHoldingsSummary.
        :rtype: Money
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this DerivedHoldingsSummary.


        :param value: The value of this DerivedHoldingsSummary.
        :type value: Money
        """

        self._value = value
