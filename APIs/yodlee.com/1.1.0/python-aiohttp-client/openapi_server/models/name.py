# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Name(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first: str=None, full_name: str=None, last: str=None, middle: str=None):
        """Name - a model defined in OpenAPI

        :param first: The first of this Name.
        :param full_name: The full_name of this Name.
        :param last: The last of this Name.
        :param middle: The middle of this Name.
        """
        self.openapi_types = {
            'first': str,
            'full_name': str,
            'last': str,
            'middle': str
        }

        self.attribute_map = {
            'first': 'first',
            'full_name': 'fullName',
            'last': 'last',
            'middle': 'middle'
        }

        self._first = first
        self._full_name = full_name
        self._last = last
        self._middle = middle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Name':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Name of this Name.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first(self):
        """Gets the first of this Name.


        :return: The first of this Name.
        :rtype: str
        """
        return self._first

    @first.setter
    def first(self, first):
        """Sets the first of this Name.


        :param first: The first of this Name.
        :type first: str
        """

        self._first = first

    @property
    def full_name(self):
        """Gets the full_name of this Name.


        :return: The full_name of this Name.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this Name.


        :param full_name: The full_name of this Name.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def last(self):
        """Gets the last of this Name.


        :return: The last of this Name.
        :rtype: str
        """
        return self._last

    @last.setter
    def last(self, last):
        """Sets the last of this Name.


        :param last: The last of this Name.
        :type last: str
        """

        self._last = last

    @property
    def middle(self):
        """Gets the middle of this Name.


        :return: The middle of this Name.
        :rtype: str
        """
        return self._middle

    @middle.setter
    def middle(self, middle):
        """Sets the middle of this Name.


        :param middle: The middle of this Name.
        :type middle: str
        """

        self._middle = middle
