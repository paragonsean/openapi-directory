# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.derived_category_summary_details import DerivedCategorySummaryDetails
from openapi_server.models.derived_transactions_links import DerivedTransactionsLinks
from openapi_server.models.money import Money
from openapi_server import util


class DerivedCategorySummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_id: int=None, category_name: str=None, credit_total: Money=None, debit_total: Money=None, details: List[DerivedCategorySummaryDetails]=None, links: DerivedTransactionsLinks=None):
        """DerivedCategorySummary - a model defined in OpenAPI

        :param category_id: The category_id of this DerivedCategorySummary.
        :param category_name: The category_name of this DerivedCategorySummary.
        :param credit_total: The credit_total of this DerivedCategorySummary.
        :param debit_total: The debit_total of this DerivedCategorySummary.
        :param details: The details of this DerivedCategorySummary.
        :param links: The links of this DerivedCategorySummary.
        """
        self.openapi_types = {
            'category_id': int,
            'category_name': str,
            'credit_total': Money,
            'debit_total': Money,
            'details': List[DerivedCategorySummaryDetails],
            'links': DerivedTransactionsLinks
        }

        self.attribute_map = {
            'category_id': 'categoryId',
            'category_name': 'categoryName',
            'credit_total': 'creditTotal',
            'debit_total': 'debitTotal',
            'details': 'details',
            'links': 'links'
        }

        self._category_id = category_id
        self._category_name = category_name
        self._credit_total = credit_total
        self._debit_total = debit_total
        self._details = details
        self._links = links

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DerivedCategorySummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DerivedCategorySummary of this DerivedCategorySummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_id(self):
        """Gets the category_id of this DerivedCategorySummary.

        Id of the category. This information is provided by transactions/categories service.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>

        :return: The category_id of this DerivedCategorySummary.
        :rtype: int
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this DerivedCategorySummary.

        Id of the category. This information is provided by transactions/categories service.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>

        :param category_id: The category_id of this DerivedCategorySummary.
        :type category_id: int
        """

        self._category_id = category_id

    @property
    def category_name(self):
        """Gets the category_name of this DerivedCategorySummary.

        The name of the category.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>

        :return: The category_name of this DerivedCategorySummary.
        :rtype: str
        """
        return self._category_name

    @category_name.setter
    def category_name(self, category_name):
        """Sets the category_name of this DerivedCategorySummary.

        The name of the category.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>

        :param category_name: The category_name of this DerivedCategorySummary.
        :type category_name: str
        """

        self._category_name = category_name

    @property
    def credit_total(self):
        """Gets the credit_total of this DerivedCategorySummary.


        :return: The credit_total of this DerivedCategorySummary.
        :rtype: Money
        """
        return self._credit_total

    @credit_total.setter
    def credit_total(self, credit_total):
        """Sets the credit_total of this DerivedCategorySummary.


        :param credit_total: The credit_total of this DerivedCategorySummary.
        :type credit_total: Money
        """

        self._credit_total = credit_total

    @property
    def debit_total(self):
        """Gets the debit_total of this DerivedCategorySummary.


        :return: The debit_total of this DerivedCategorySummary.
        :rtype: Money
        """
        return self._debit_total

    @debit_total.setter
    def debit_total(self, debit_total):
        """Sets the debit_total of this DerivedCategorySummary.


        :param debit_total: The debit_total of this DerivedCategorySummary.
        :type debit_total: Money
        """

        self._debit_total = debit_total

    @property
    def details(self):
        """Gets the details of this DerivedCategorySummary.

        Credit and debit summary per date.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>

        :return: The details of this DerivedCategorySummary.
        :rtype: List[DerivedCategorySummaryDetails]
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this DerivedCategorySummary.

        Credit and debit summary per date.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>

        :param details: The details of this DerivedCategorySummary.
        :type details: List[DerivedCategorySummaryDetails]
        """

        self._details = details

    @property
    def links(self):
        """Gets the links of this DerivedCategorySummary.


        :return: The links of this DerivedCategorySummary.
        :rtype: DerivedTransactionsLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this DerivedCategorySummary.


        :param links: The links of this DerivedCategorySummary.
        :type links: DerivedTransactionsLinks
        """

        self._links = links
