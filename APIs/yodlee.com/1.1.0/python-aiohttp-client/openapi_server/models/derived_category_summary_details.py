# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.money import Money
from openapi_server import util


class DerivedCategorySummaryDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, credit_total: Money=None, _date: str=None, debit_total: Money=None):
        """DerivedCategorySummaryDetails - a model defined in OpenAPI

        :param credit_total: The credit_total of this DerivedCategorySummaryDetails.
        :param _date: The _date of this DerivedCategorySummaryDetails.
        :param debit_total: The debit_total of this DerivedCategorySummaryDetails.
        """
        self.openapi_types = {
            'credit_total': Money,
            '_date': str,
            'debit_total': Money
        }

        self.attribute_map = {
            'credit_total': 'creditTotal',
            '_date': 'date',
            'debit_total': 'debitTotal'
        }

        self._credit_total = credit_total
        self.__date = _date
        self._debit_total = debit_total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DerivedCategorySummaryDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DerivedCategorySummaryDetails of this DerivedCategorySummaryDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def credit_total(self):
        """Gets the credit_total of this DerivedCategorySummaryDetails.


        :return: The credit_total of this DerivedCategorySummaryDetails.
        :rtype: Money
        """
        return self._credit_total

    @credit_total.setter
    def credit_total(self, credit_total):
        """Sets the credit_total of this DerivedCategorySummaryDetails.


        :param credit_total: The credit_total of this DerivedCategorySummaryDetails.
        :type credit_total: Money
        """

        self._credit_total = credit_total

    @property
    def _date(self):
        """Gets the _date of this DerivedCategorySummaryDetails.

        Date on which the credit and debit transactions had occured.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>

        :return: The _date of this DerivedCategorySummaryDetails.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this DerivedCategorySummaryDetails.

        Date on which the credit and debit transactions had occured.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>

        :param _date: The _date of this DerivedCategorySummaryDetails.
        :type _date: str
        """

        self.__date = _date

    @property
    def debit_total(self):
        """Gets the debit_total of this DerivedCategorySummaryDetails.


        :return: The debit_total of this DerivedCategorySummaryDetails.
        :rtype: Money
        """
        return self._debit_total

    @debit_total.setter
    def debit_total(self, debit_total):
        """Sets the debit_total of this DerivedCategorySummaryDetails.


        :param debit_total: The debit_total of this DerivedCategorySummaryDetails.
        :type debit_total: Money
        """

        self._debit_total = debit_total
