# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_address import AccountAddress
from openapi_server import util


class EvaluateAddressResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: List[AccountAddress]=None, is_valid_address: bool=None):
        """EvaluateAddressResponse - a model defined in OpenAPI

        :param address: The address of this EvaluateAddressResponse.
        :param is_valid_address: The is_valid_address of this EvaluateAddressResponse.
        """
        self.openapi_types = {
            'address': List[AccountAddress],
            'is_valid_address': bool
        }

        self.attribute_map = {
            'address': 'address',
            'is_valid_address': 'isValidAddress'
        }

        self._address = address
        self._is_valid_address = is_valid_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluateAddressResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluateAddressResponse of this EvaluateAddressResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this EvaluateAddressResponse.


        :return: The address of this EvaluateAddressResponse.
        :rtype: List[AccountAddress]
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this EvaluateAddressResponse.


        :param address: The address of this EvaluateAddressResponse.
        :type address: List[AccountAddress]
        """

        self._address = address

    @property
    def is_valid_address(self):
        """Gets the is_valid_address of this EvaluateAddressResponse.


        :return: The is_valid_address of this EvaluateAddressResponse.
        :rtype: bool
        """
        return self._is_valid_address

    @is_valid_address.setter
    def is_valid_address(self, is_valid_address):
        """Sets the is_valid_address of this EvaluateAddressResponse.


        :param is_valid_address: The is_valid_address of this EvaluateAddressResponse.
        :type is_valid_address: bool
        """

        self._is_valid_address = is_valid_address
