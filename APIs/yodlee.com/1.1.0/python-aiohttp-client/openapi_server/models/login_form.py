# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.row import Row
from openapi_server import util


class LoginForm(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, forget_password_url: str=None, form_type: str=None, help: str=None, id: int=None, login_help: str=None, mfa_info_text: str=None, mfa_info_title: str=None, mfa_timeout: int=None, row: List[Row]=None):
        """LoginForm - a model defined in OpenAPI

        :param forget_password_url: The forget_password_url of this LoginForm.
        :param form_type: The form_type of this LoginForm.
        :param help: The help of this LoginForm.
        :param id: The id of this LoginForm.
        :param login_help: The login_help of this LoginForm.
        :param mfa_info_text: The mfa_info_text of this LoginForm.
        :param mfa_info_title: The mfa_info_title of this LoginForm.
        :param mfa_timeout: The mfa_timeout of this LoginForm.
        :param row: The row of this LoginForm.
        """
        self.openapi_types = {
            'forget_password_url': str,
            'form_type': str,
            'help': str,
            'id': int,
            'login_help': str,
            'mfa_info_text': str,
            'mfa_info_title': str,
            'mfa_timeout': int,
            'row': List[Row]
        }

        self.attribute_map = {
            'forget_password_url': 'forgetPasswordURL',
            'form_type': 'formType',
            'help': 'help',
            'id': 'id',
            'login_help': 'loginHelp',
            'mfa_info_text': 'mfaInfoText',
            'mfa_info_title': 'mfaInfoTitle',
            'mfa_timeout': 'mfaTimeout',
            'row': 'row'
        }

        self._forget_password_url = forget_password_url
        self._form_type = form_type
        self._help = help
        self._id = id
        self._login_help = login_help
        self._mfa_info_text = mfa_info_text
        self._mfa_info_title = mfa_info_title
        self._mfa_timeout = mfa_timeout
        self._row = row

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoginForm':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoginForm of this LoginForm.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def forget_password_url(self):
        """Gets the forget_password_url of this LoginForm.

        The forget password URL of the provider site.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>

        :return: The forget_password_url of this LoginForm.
        :rtype: str
        """
        return self._forget_password_url

    @forget_password_url.setter
    def forget_password_url(self, forget_password_url):
        """Sets the forget_password_url of this LoginForm.

        The forget password URL of the provider site.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>

        :param forget_password_url: The forget_password_url of this LoginForm.
        :type forget_password_url: str
        """

        self._forget_password_url = forget_password_url

    @property
    def form_type(self):
        """Gets the form_type of this LoginForm.

        The type of the forms for which the user information is required.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul><b>Applicable Values</b><br>

        :return: The form_type of this LoginForm.
        :rtype: str
        """
        return self._form_type

    @form_type.setter
    def form_type(self, form_type):
        """Sets the form_type of this LoginForm.

        The type of the forms for which the user information is required.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul><b>Applicable Values</b><br>

        :param form_type: The form_type of this LoginForm.
        :type form_type: str
        """
        allowed_values = ["login", "questionAndAnswer", "token", "image"]  # noqa: E501
        if form_type not in allowed_values:
            raise ValueError(
                "Invalid value for `form_type` ({0}), must be one of {1}"
                .format(form_type, allowed_values)
            )

        self._form_type = form_type

    @property
    def help(self):
        """Gets the help of this LoginForm.

        The help that can be displayed to the customer in the login form.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>

        :return: The help of this LoginForm.
        :rtype: str
        """
        return self._help

    @help.setter
    def help(self, help):
        """Sets the help of this LoginForm.

        The help that can be displayed to the customer in the login form.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>

        :param help: The help of this LoginForm.
        :type help: str
        """

        self._help = help

    @property
    def id(self):
        """Gets the id of this LoginForm.

        The identifier of the login form.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>

        :return: The id of this LoginForm.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LoginForm.

        The identifier of the login form.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>

        :param id: The id of this LoginForm.
        :type id: int
        """

        self._id = id

    @property
    def login_help(self):
        """Gets the login_help of this LoginForm.

        The help that can be displayed to the customer in the login form.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>

        :return: The login_help of this LoginForm.
        :rtype: str
        """
        return self._login_help

    @login_help.setter
    def login_help(self, login_help):
        """Sets the login_help of this LoginForm.

        The help that can be displayed to the customer in the login form.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>

        :param login_help: The login_help of this LoginForm.
        :type login_help: str
        """

        self._login_help = login_help

    @property
    def mfa_info_text(self):
        """Gets the mfa_info_text of this LoginForm.

        The text displayed in the provider site while requesting the user's MFA information. This field is applicable for MFA form types only. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li></ul>

        :return: The mfa_info_text of this LoginForm.
        :rtype: str
        """
        return self._mfa_info_text

    @mfa_info_text.setter
    def mfa_info_text(self, mfa_info_text):
        """Sets the mfa_info_text of this LoginForm.

        The text displayed in the provider site while requesting the user's MFA information. This field is applicable for MFA form types only. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li></ul>

        :param mfa_info_text: The mfa_info_text of this LoginForm.
        :type mfa_info_text: str
        """

        self._mfa_info_text = mfa_info_text

    @property
    def mfa_info_title(self):
        """Gets the mfa_info_title of this LoginForm.

        The title for the MFA information demanded from the user.This is the title displayed in the provider site.This field is applicable for MFA form types only. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li></ul>

        :return: The mfa_info_title of this LoginForm.
        :rtype: str
        """
        return self._mfa_info_title

    @mfa_info_title.setter
    def mfa_info_title(self, mfa_info_title):
        """Sets the mfa_info_title of this LoginForm.

        The title for the MFA information demanded from the user.This is the title displayed in the provider site.This field is applicable for MFA form types only. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li></ul>

        :param mfa_info_title: The mfa_info_title of this LoginForm.
        :type mfa_info_title: str
        """

        self._mfa_info_title = mfa_info_title

    @property
    def mfa_timeout(self):
        """Gets the mfa_timeout of this LoginForm.

        The amount of time before which the user is expected to provide MFA information. This field is applicable for MFA form types only. This would be an useful information that could be displayed to the users. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>

        :return: The mfa_timeout of this LoginForm.
        :rtype: int
        """
        return self._mfa_timeout

    @mfa_timeout.setter
    def mfa_timeout(self, mfa_timeout):
        """Sets the mfa_timeout of this LoginForm.

        The amount of time before which the user is expected to provide MFA information. This field is applicable for MFA form types only. This would be an useful information that could be displayed to the users. <br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>

        :param mfa_timeout: The mfa_timeout of this LoginForm.
        :type mfa_timeout: int
        """

        self._mfa_timeout = mfa_timeout

    @property
    def row(self):
        """Gets the row of this LoginForm.

        This indicates one row in the form. The row will have one label. But it may have single or multiple fields.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>

        :return: The row of this LoginForm.
        :rtype: List[Row]
        """
        return self._row

    @row.setter
    def row(self, row):
        """Sets the row of this LoginForm.

        This indicates one row in the form. The row will have one label. But it may have single or multiple fields.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts/{providerAccountId}</li><li>GET providers/{providerId}</li></ul>

        :param row: The row of this LoginForm.
        :type row: List[Row]
        """

        self._row = row
