# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cobrand import Cobrand
from openapi_server import util


class CobrandLoginRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cobrand: Cobrand=None):
        """CobrandLoginRequest - a model defined in OpenAPI

        :param cobrand: The cobrand of this CobrandLoginRequest.
        """
        self.openapi_types = {
            'cobrand': Cobrand
        }

        self.attribute_map = {
            'cobrand': 'cobrand'
        }

        self._cobrand = cobrand

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CobrandLoginRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CobrandLoginRequest of this CobrandLoginRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cobrand(self):
        """Gets the cobrand of this CobrandLoginRequest.


        :return: The cobrand of this CobrandLoginRequest.
        :rtype: Cobrand
        """
        return self._cobrand

    @cobrand.setter
    def cobrand(self, cobrand):
        """Sets the cobrand of this CobrandLoginRequest.


        :param cobrand: The cobrand of this CobrandLoginRequest.
        :type cobrand: Cobrand
        """
        if cobrand is None:
            raise ValueError("Invalid value for `cobrand`, must not be `None`")

        self._cobrand = cobrand
