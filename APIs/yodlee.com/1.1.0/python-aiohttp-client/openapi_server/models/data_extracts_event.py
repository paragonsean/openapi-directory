# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_extracts_event_data import DataExtractsEventData
from openapi_server import util


class DataExtractsEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: DataExtractsEventData=None, info: str=None):
        """DataExtractsEvent - a model defined in OpenAPI

        :param data: The data of this DataExtractsEvent.
        :param info: The info of this DataExtractsEvent.
        """
        self.openapi_types = {
            'data': DataExtractsEventData,
            'info': str
        }

        self.attribute_map = {
            'data': 'data',
            'info': 'info'
        }

        self._data = data
        self._info = info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataExtractsEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataExtractsEvent of this DataExtractsEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this DataExtractsEvent.


        :return: The data of this DataExtractsEvent.
        :rtype: DataExtractsEventData
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this DataExtractsEvent.


        :param data: The data of this DataExtractsEvent.
        :type data: DataExtractsEventData
        """

        self._data = data

    @property
    def info(self):
        """Gets the info of this DataExtractsEvent.


        :return: The info of this DataExtractsEvent.
        :rtype: str
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this DataExtractsEvent.


        :param info: The info of this DataExtractsEvent.
        :type info: str
        """

        self._info = info
