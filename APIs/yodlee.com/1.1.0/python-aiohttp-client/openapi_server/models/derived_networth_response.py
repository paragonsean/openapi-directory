# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.derived_networth import DerivedNetworth
from openapi_server import util


class DerivedNetworthResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, networth: List[DerivedNetworth]=None):
        """DerivedNetworthResponse - a model defined in OpenAPI

        :param networth: The networth of this DerivedNetworthResponse.
        """
        self.openapi_types = {
            'networth': List[DerivedNetworth]
        }

        self.attribute_map = {
            'networth': 'networth'
        }

        self._networth = networth

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DerivedNetworthResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DerivedNetworthResponse of this DerivedNetworthResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def networth(self):
        """Gets the networth of this DerivedNetworthResponse.


        :return: The networth of this DerivedNetworthResponse.
        :rtype: List[DerivedNetworth]
        """
        return self._networth

    @networth.setter
    def networth(self, networth):
        """Sets the networth of this DerivedNetworthResponse.


        :param networth: The networth of this DerivedNetworthResponse.
        :type networth: List[DerivedNetworth]
        """

        self._networth = networth
