# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Description(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, consumer: str=None, original: str=None, security: str=None, simple: str=None):
        """Description - a model defined in OpenAPI

        :param consumer: The consumer of this Description.
        :param original: The original of this Description.
        :param security: The security of this Description.
        :param simple: The simple of this Description.
        """
        self.openapi_types = {
            'consumer': str,
            'original': str,
            'security': str,
            'simple': str
        }

        self.attribute_map = {
            'consumer': 'consumer',
            'original': 'original',
            'security': 'security',
            'simple': 'simple'
        }

        self._consumer = consumer
        self._original = original
        self._security = security
        self._simple = simple

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Description':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Description of this Description.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def consumer(self):
        """Gets the consumer of this Description.

        The description of the transaction as defined by the consumer. The consumer can define or provide more details of the transaction in this field.<br><br><b>Applicable containers</b>:  creditCard, insurance, loan<br>

        :return: The consumer of this Description.
        :rtype: str
        """
        return self._consumer

    @consumer.setter
    def consumer(self, consumer):
        """Sets the consumer of this Description.

        The description of the transaction as defined by the consumer. The consumer can define or provide more details of the transaction in this field.<br><br><b>Applicable containers</b>:  creditCard, insurance, loan<br>

        :param consumer: The consumer of this Description.
        :type consumer: str
        """

        self._consumer = consumer

    @property
    def original(self):
        """Gets the original of this Description.

        Original transaction description as it appears at the FI site.<br><br><b>Applicable containers</b>:  creditCard, insurance, loan<br>

        :return: The original of this Description.
        :rtype: str
        """
        return self._original

    @original.setter
    def original(self, original):
        """Sets the original of this Description.

        Original transaction description as it appears at the FI site.<br><br><b>Applicable containers</b>:  creditCard, insurance, loan<br>

        :param original: The original of this Description.
        :type original: str
        """

        self._original = original

    @property
    def security(self):
        """Gets the security of this Description.

        The description will provide the actual name of the security.<br><br><b>Applicable containers</b>: investment<br>

        :return: The security of this Description.
        :rtype: str
        """
        return self._security

    @security.setter
    def security(self, security):
        """Sets the security of this Description.

        The description will provide the actual name of the security.<br><br><b>Applicable containers</b>: investment<br>

        :param security: The security of this Description.
        :type security: str
        """

        self._security = security

    @property
    def simple(self):
        """Gets the simple of this Description.

        The transaction description that appears at the FI site may not be self-explanatory, i.e., the source, purpose of the transaction may not be evident. Yodlee attempts to simplify and make the transaction meaningful to the consumer, and this simplified transaction description is provided in the simple description field.Note: The simple description field is available only in the United States, Canada, United Kingdom, and India.<br><br><b>Applicable containers</b>:  creditCard, insurance, loan<br>

        :return: The simple of this Description.
        :rtype: str
        """
        return self._simple

    @simple.setter
    def simple(self, simple):
        """Sets the simple of this Description.

        The transaction description that appears at the FI site may not be self-explanatory, i.e., the source, purpose of the transaction may not be evident. Yodlee attempts to simplify and make the transaction meaningful to the consumer, and this simplified transaction description is provided in the simple description field.Note: The simple description field is available only in the United States, Canada, United Kingdom, and India.<br><br><b>Applicable containers</b>:  creditCard, insurance, loan<br>

        :param simple: The simple of this Description.
        :type simple: str
        """

        self._simple = simple
