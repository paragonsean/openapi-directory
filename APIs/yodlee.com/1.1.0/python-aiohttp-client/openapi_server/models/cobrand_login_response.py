# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cobrand_session import CobrandSession
from openapi_server import util


class CobrandLoginResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_id: str=None, cobrand_id: int=None, locale: str=None, session: CobrandSession=None):
        """CobrandLoginResponse - a model defined in OpenAPI

        :param application_id: The application_id of this CobrandLoginResponse.
        :param cobrand_id: The cobrand_id of this CobrandLoginResponse.
        :param locale: The locale of this CobrandLoginResponse.
        :param session: The session of this CobrandLoginResponse.
        """
        self.openapi_types = {
            'application_id': str,
            'cobrand_id': int,
            'locale': str,
            'session': CobrandSession
        }

        self.attribute_map = {
            'application_id': 'applicationId',
            'cobrand_id': 'cobrandId',
            'locale': 'locale',
            'session': 'session'
        }

        self._application_id = application_id
        self._cobrand_id = cobrand_id
        self._locale = locale
        self._session = session

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CobrandLoginResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CobrandLoginResponse of this CobrandLoginResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_id(self):
        """Gets the application_id of this CobrandLoginResponse.

        The application identifier.<br><br><b>Endpoints</b>:<ul><li>POST cobrand/login</li></ul>

        :return: The application_id of this CobrandLoginResponse.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this CobrandLoginResponse.

        The application identifier.<br><br><b>Endpoints</b>:<ul><li>POST cobrand/login</li></ul>

        :param application_id: The application_id of this CobrandLoginResponse.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def cobrand_id(self):
        """Gets the cobrand_id of this CobrandLoginResponse.

        Unique identifier of the cobrand (customer) in the system.<br><br><b>Endpoints</b>:<ul><li>POST cobrand/login</li></ul>

        :return: The cobrand_id of this CobrandLoginResponse.
        :rtype: int
        """
        return self._cobrand_id

    @cobrand_id.setter
    def cobrand_id(self, cobrand_id):
        """Sets the cobrand_id of this CobrandLoginResponse.

        Unique identifier of the cobrand (customer) in the system.<br><br><b>Endpoints</b>:<ul><li>POST cobrand/login</li></ul>

        :param cobrand_id: The cobrand_id of this CobrandLoginResponse.
        :type cobrand_id: int
        """

        self._cobrand_id = cobrand_id

    @property
    def locale(self):
        """Gets the locale of this CobrandLoginResponse.

        The customer's locale that will be considered for the localization functionality.<br><br><b>Endpoints</b>:<ul><li>POST cobrand/login</li></ul>

        :return: The locale of this CobrandLoginResponse.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this CobrandLoginResponse.

        The customer's locale that will be considered for the localization functionality.<br><br><b>Endpoints</b>:<ul><li>POST cobrand/login</li></ul>

        :param locale: The locale of this CobrandLoginResponse.
        :type locale: str
        """

        self._locale = locale

    @property
    def session(self):
        """Gets the session of this CobrandLoginResponse.


        :return: The session of this CobrandLoginResponse.
        :rtype: CobrandSession
        """
        return self._session

    @session.setter
    def session(self, session):
        """Sets the session of this CobrandLoginResponse.


        :param session: The session of this CobrandLoginResponse.
        :type session: CobrandSession
        """

        self._session = session
