# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiKeyOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_date: str=None, expires_in: int=None, key: str=None, public_key: str=None):
        """ApiKeyOutput - a model defined in OpenAPI

        :param created_date: The created_date of this ApiKeyOutput.
        :param expires_in: The expires_in of this ApiKeyOutput.
        :param key: The key of this ApiKeyOutput.
        :param public_key: The public_key of this ApiKeyOutput.
        """
        self.openapi_types = {
            'created_date': str,
            'expires_in': int,
            'key': str,
            'public_key': str
        }

        self.attribute_map = {
            'created_date': 'createdDate',
            'expires_in': 'expiresIn',
            'key': 'key',
            'public_key': 'publicKey'
        }

        self._created_date = created_date
        self._expires_in = expires_in
        self._key = key
        self._public_key = public_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiKeyOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiKeyOutput of this ApiKeyOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_date(self):
        """Gets the created_date of this ApiKeyOutput.

        The date on which the apiKey was created for the customer.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>

        :return: The created_date of this ApiKeyOutput.
        :rtype: str
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this ApiKeyOutput.

        The date on which the apiKey was created for the customer.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>

        :param created_date: The created_date of this ApiKeyOutput.
        :type created_date: str
        """

        self._created_date = created_date

    @property
    def expires_in(self):
        """Gets the expires_in of this ApiKeyOutput.

        Time in seconds after which the JWT token created for users expires.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>

        :return: The expires_in of this ApiKeyOutput.
        :rtype: int
        """
        return self._expires_in

    @expires_in.setter
    def expires_in(self, expires_in):
        """Sets the expires_in of this ApiKeyOutput.

        Time in seconds after which the JWT token created for users expires.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>

        :param expires_in: The expires_in of this ApiKeyOutput.
        :type expires_in: int
        """

        self._expires_in = expires_in

    @property
    def key(self):
        """Gets the key of this ApiKeyOutput.

        ApiKey or the issuer key used to generate the JWT token for authentication.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>

        :return: The key of this ApiKeyOutput.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this ApiKeyOutput.

        ApiKey or the issuer key used to generate the JWT token for authentication.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>

        :param key: The key of this ApiKeyOutput.
        :type key: str
        """

        self._key = key

    @property
    def public_key(self):
        """Gets the public_key of this ApiKeyOutput.

        Public key uploaded by the customer while generating ApiKey.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>

        :return: The public_key of this ApiKeyOutput.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key):
        """Sets the public_key of this ApiKeyOutput.

        Public key uploaded by the customer while generating ApiKey.<br><br><b>Endpoints</b>:<ul><li>GET /auth/apiKey</li><li>POST /auth/apiKey</li></ul>

        :param public_key: The public_key of this ApiKeyOutput.
        :type public_key: str
        """
        if public_key is not None and len(public_key) > 2147483647:
            raise ValueError("Invalid value for `public_key`, length must be less than or equal to `2147483647`")
        if public_key is not None and len(public_key) < 1:
            raise ValueError("Invalid value for `public_key`, length must be greater than or equal to `1`")

        self._public_key = public_key
