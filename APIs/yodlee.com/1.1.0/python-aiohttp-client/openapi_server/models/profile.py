# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_address import AccountAddress
from openapi_server.models.email import Email
from openapi_server.models.identifier import Identifier
from openapi_server.models.name import Name
from openapi_server.models.phone_number import PhoneNumber
from openapi_server import util


class Profile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: List[AccountAddress]=None, email: List[Email]=None, gender: str=None, identifier: List[Identifier]=None, name: Name=None, phone_number: List[PhoneNumber]=None):
        """Profile - a model defined in OpenAPI

        :param address: The address of this Profile.
        :param email: The email of this Profile.
        :param gender: The gender of this Profile.
        :param identifier: The identifier of this Profile.
        :param name: The name of this Profile.
        :param phone_number: The phone_number of this Profile.
        """
        self.openapi_types = {
            'address': List[AccountAddress],
            'email': List[Email],
            'gender': str,
            'identifier': List[Identifier],
            'name': Name,
            'phone_number': List[PhoneNumber]
        }

        self.attribute_map = {
            'address': 'address',
            'email': 'email',
            'gender': 'gender',
            'identifier': 'identifier',
            'name': 'name',
            'phone_number': 'phoneNumber'
        }

        self._address = address
        self._email = email
        self._gender = gender
        self._identifier = identifier
        self._name = name
        self._phone_number = phone_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Profile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Profile of this Profile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this Profile.

        Address available in the profile page of the account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>

        :return: The address of this Profile.
        :rtype: List[AccountAddress]
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this Profile.

        Address available in the profile page of the account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>

        :param address: The address of this Profile.
        :type address: List[AccountAddress]
        """

        self._address = address

    @property
    def email(self):
        """Gets the email of this Profile.

        Email Id available in the profile page of the account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>

        :return: The email of this Profile.
        :rtype: List[Email]
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Profile.

        Email Id available in the profile page of the account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>

        :param email: The email of this Profile.
        :type email: List[Email]
        """

        self._email = email

    @property
    def gender(self):
        """Gets the gender of this Profile.

        Gender of the provider account holder.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET providerAccounts/profile</li></ul>

        :return: The gender of this Profile.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this Profile.

        Gender of the provider account holder.<br><br><b>Aggregated / Manual</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET providerAccounts/profile</li></ul>

        :param gender: The gender of this Profile.
        :type gender: str
        """

        self._gender = gender

    @property
    def identifier(self):
        """Gets the identifier of this Profile.

        Identifiers available in the profile page of the account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>

        :return: The identifier of this Profile.
        :rtype: List[Identifier]
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this Profile.

        Identifiers available in the profile page of the account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>

        :param identifier: The identifier of this Profile.
        :type identifier: List[Identifier]
        """

        self._identifier = identifier

    @property
    def name(self):
        """Gets the name of this Profile.


        :return: The name of this Profile.
        :rtype: Name
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Profile.


        :param name: The name of this Profile.
        :type name: Name
        """

        self._name = name

    @property
    def phone_number(self):
        """Gets the phone_number of this Profile.

        Phone number available in the profile page of the account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>

        :return: The phone_number of this Profile.
        :rtype: List[PhoneNumber]
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this Profile.

        Phone number available in the profile page of the account.<br><br><b>Account Type</b>: Aggregated<br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>

        :param phone_number: The phone_number of this Profile.
        :type phone_number: List[PhoneNumber]
        """

        self._phone_number = phone_number
