# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AutoRefresh(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_status: str=None, as_of_date: str=None, status: str=None):
        """AutoRefresh - a model defined in OpenAPI

        :param additional_status: The additional_status of this AutoRefresh.
        :param as_of_date: The as_of_date of this AutoRefresh.
        :param status: The status of this AutoRefresh.
        """
        self.openapi_types = {
            'additional_status': str,
            'as_of_date': str,
            'status': str
        }

        self.attribute_map = {
            'additional_status': 'additionalStatus',
            'as_of_date': 'asOfDate',
            'status': 'status'
        }

        self._additional_status = additional_status
        self._as_of_date = as_of_date
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoRefresh':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoRefresh of this AutoRefresh.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_status(self):
        """Gets the additional_status of this AutoRefresh.

        Indicates the reason for the status.<br><br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>

        :return: The additional_status of this AutoRefresh.
        :rtype: str
        """
        return self._additional_status

    @additional_status.setter
    def additional_status(self, additional_status):
        """Sets the additional_status of this AutoRefresh.

        Indicates the reason for the status.<br><br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>

        :param additional_status: The additional_status of this AutoRefresh.
        :type additional_status: str
        """
        allowed_values = ["SCHEDULED", "TEMP_ERROR", "SITE_BLOCKING", "SITE_NOT_SUPPORTED", "REAL_TIME_MFA_REQUIRED", "USER_ACTION_REQUIRED", "UNSUBSCRIBED", "MANUAL_ACCOUNT"]  # noqa: E501
        if additional_status not in allowed_values:
            raise ValueError(
                "Invalid value for `additional_status` ({0}), must be one of {1}"
                .format(additional_status, allowed_values)
            )

        self._additional_status = additional_status

    @property
    def as_of_date(self):
        """Gets the as_of_date of this AutoRefresh.

        Date on which the auto refresh status is determined.<br><br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>

        :return: The as_of_date of this AutoRefresh.
        :rtype: str
        """
        return self._as_of_date

    @as_of_date.setter
    def as_of_date(self, as_of_date):
        """Sets the as_of_date of this AutoRefresh.

        Date on which the auto refresh status is determined.<br><br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul>

        :param as_of_date: The as_of_date of this AutoRefresh.
        :type as_of_date: str
        """

        self._as_of_date = as_of_date

    @property
    def status(self):
        """Gets the status of this AutoRefresh.

        Indicates whether auto refresh is enabled or disabled.<br><br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>

        :return: The status of this AutoRefresh.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AutoRefresh.

        Indicates whether auto refresh is enabled or disabled.<br><br><b>Endpoints</b>:<ul><li>GET accounts</li><li>GET accounts/{accountId}</li></ul><b>Applicable Values</b><br>

        :param status: The status of this AutoRefresh.
        :type status: str
        """
        allowed_values = ["ENABLED", "DISABLED"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
