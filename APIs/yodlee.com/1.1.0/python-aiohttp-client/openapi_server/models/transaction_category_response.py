# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.transaction_category import TransactionCategory
from openapi_server import util


class TransactionCategoryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transaction_category: List[TransactionCategory]=None):
        """TransactionCategoryResponse - a model defined in OpenAPI

        :param transaction_category: The transaction_category of this TransactionCategoryResponse.
        """
        self.openapi_types = {
            'transaction_category': List[TransactionCategory]
        }

        self.attribute_map = {
            'transaction_category': 'transactionCategory'
        }

        self._transaction_category = transaction_category

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransactionCategoryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransactionCategoryResponse of this TransactionCategoryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transaction_category(self):
        """Gets the transaction_category of this TransactionCategoryResponse.


        :return: The transaction_category of this TransactionCategoryResponse.
        :rtype: List[TransactionCategory]
        """
        return self._transaction_category

    @transaction_category.setter
    def transaction_category(self, transaction_category):
        """Sets the transaction_category of this TransactionCategoryResponse.


        :param transaction_category: The transaction_category of this TransactionCategoryResponse.
        :type transaction_category: List[TransactionCategory]
        """

        self._transaction_category = transaction_category
