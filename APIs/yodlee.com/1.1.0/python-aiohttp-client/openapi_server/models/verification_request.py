# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.verification import Verification
from openapi_server import util


class VerificationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, verification: Verification=None):
        """VerificationRequest - a model defined in OpenAPI

        :param verification: The verification of this VerificationRequest.
        """
        self.openapi_types = {
            'verification': Verification
        }

        self.attribute_map = {
            'verification': 'verification'
        }

        self._verification = verification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerificationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VerificationRequest of this VerificationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def verification(self):
        """Gets the verification of this VerificationRequest.


        :return: The verification of this VerificationRequest.
        :rtype: Verification
        """
        return self._verification

    @verification.setter
    def verification(self, verification):
        """Sets the verification of this VerificationRequest.


        :param verification: The verification of this VerificationRequest.
        :type verification: Verification
        """
        if verification is None:
            raise ValueError("Invalid value for `verification`, must not be `None`")

        self._verification = verification
