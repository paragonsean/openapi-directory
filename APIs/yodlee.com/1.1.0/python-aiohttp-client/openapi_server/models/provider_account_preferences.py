# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProviderAccountPreferences(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_auto_refresh_enabled: bool=None, is_data_extracts_enabled: bool=None, linked_provider_account_id: int=None):
        """ProviderAccountPreferences - a model defined in OpenAPI

        :param is_auto_refresh_enabled: The is_auto_refresh_enabled of this ProviderAccountPreferences.
        :param is_data_extracts_enabled: The is_data_extracts_enabled of this ProviderAccountPreferences.
        :param linked_provider_account_id: The linked_provider_account_id of this ProviderAccountPreferences.
        """
        self.openapi_types = {
            'is_auto_refresh_enabled': bool,
            'is_data_extracts_enabled': bool,
            'linked_provider_account_id': int
        }

        self.attribute_map = {
            'is_auto_refresh_enabled': 'isAutoRefreshEnabled',
            'is_data_extracts_enabled': 'isDataExtractsEnabled',
            'linked_provider_account_id': 'linkedProviderAccountId'
        }

        self._is_auto_refresh_enabled = is_auto_refresh_enabled
        self._is_data_extracts_enabled = is_data_extracts_enabled
        self._linked_provider_account_id = linked_provider_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProviderAccountPreferences':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProviderAccountPreferences of this ProviderAccountPreferences.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_auto_refresh_enabled(self):
        """Gets the is_auto_refresh_enabled of this ProviderAccountPreferences.

        Indicates if auto-refreshes have to be triggered for the provider account.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>

        :return: The is_auto_refresh_enabled of this ProviderAccountPreferences.
        :rtype: bool
        """
        return self._is_auto_refresh_enabled

    @is_auto_refresh_enabled.setter
    def is_auto_refresh_enabled(self, is_auto_refresh_enabled):
        """Sets the is_auto_refresh_enabled of this ProviderAccountPreferences.

        Indicates if auto-refreshes have to be triggered for the provider account.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>

        :param is_auto_refresh_enabled: The is_auto_refresh_enabled of this ProviderAccountPreferences.
        :type is_auto_refresh_enabled: bool
        """

        self._is_auto_refresh_enabled = is_auto_refresh_enabled

    @property
    def is_data_extracts_enabled(self):
        """Gets the is_data_extracts_enabled of this ProviderAccountPreferences.

        Indicates if the updates to the provider account should be part of the data extracts event notification or the data extract data retrieval service.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>

        :return: The is_data_extracts_enabled of this ProviderAccountPreferences.
        :rtype: bool
        """
        return self._is_data_extracts_enabled

    @is_data_extracts_enabled.setter
    def is_data_extracts_enabled(self, is_data_extracts_enabled):
        """Sets the is_data_extracts_enabled of this ProviderAccountPreferences.

        Indicates if the updates to the provider account should be part of the data extracts event notification or the data extract data retrieval service.<br><br><b>Endpoints</b>:<ul><li>GET providerAccounts?include=preferences</li><li>GET providerAccounts/{providerAccountId}?include=preferences</li></ul>

        :param is_data_extracts_enabled: The is_data_extracts_enabled of this ProviderAccountPreferences.
        :type is_data_extracts_enabled: bool
        """

        self._is_data_extracts_enabled = is_data_extracts_enabled

    @property
    def linked_provider_account_id(self):
        """Gets the linked_provider_account_id of this ProviderAccountPreferences.

        LinkedproviderAccountd is a providerAccountId linked by the user to the primary provider account. <br>LinkedProviderAccountId and the providerAccountId belongs to the same institution.<br><br><b>Endpoints</b>:<ul><li>POST Provider Account</li><li>PUT Provider Account</li><li>GET Provider Accounts</li></ul>

        :return: The linked_provider_account_id of this ProviderAccountPreferences.
        :rtype: int
        """
        return self._linked_provider_account_id

    @linked_provider_account_id.setter
    def linked_provider_account_id(self, linked_provider_account_id):
        """Sets the linked_provider_account_id of this ProviderAccountPreferences.

        LinkedproviderAccountd is a providerAccountId linked by the user to the primary provider account. <br>LinkedProviderAccountId and the providerAccountId belongs to the same institution.<br><br><b>Endpoints</b>:<ul><li>POST Provider Account</li><li>PUT Provider Account</li><li>GET Provider Accounts</li></ul>

        :param linked_provider_account_id: The linked_provider_account_id of this ProviderAccountPreferences.
        :type linked_provider_account_id: int
        """

        self._linked_provider_account_id = linked_provider_account_id
