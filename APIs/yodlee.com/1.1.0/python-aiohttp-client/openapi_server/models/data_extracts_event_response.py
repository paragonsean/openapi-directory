# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_extracts_event import DataExtractsEvent
from openapi_server import util


class DataExtractsEventResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event: DataExtractsEvent=None):
        """DataExtractsEventResponse - a model defined in OpenAPI

        :param event: The event of this DataExtractsEventResponse.
        """
        self.openapi_types = {
            'event': DataExtractsEvent
        }

        self.attribute_map = {
            'event': 'event'
        }

        self._event = event

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataExtractsEventResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataExtractsEventResponse of this DataExtractsEventResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event(self):
        """Gets the event of this DataExtractsEventResponse.


        :return: The event of this DataExtractsEventResponse.
        :rtype: DataExtractsEvent
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this DataExtractsEventResponse.


        :param event: The event of this DataExtractsEventResponse.
        :type event: DataExtractsEvent
        """

        self._event = event
