# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DerivedTransactionsLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transactions: str=None):
        """DerivedTransactionsLinks - a model defined in OpenAPI

        :param transactions: The transactions of this DerivedTransactionsLinks.
        """
        self.openapi_types = {
            'transactions': str
        }

        self.attribute_map = {
            'transactions': 'transactions'
        }

        self._transactions = transactions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DerivedTransactionsLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DerivedTransactionsLinks of this DerivedTransactionsLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transactions(self):
        """Gets the transactions of this DerivedTransactionsLinks.

        Link of the transaction API service that corresponds to the value derivation.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>

        :return: The transactions of this DerivedTransactionsLinks.
        :rtype: str
        """
        return self._transactions

    @transactions.setter
    def transactions(self, transactions):
        """Sets the transactions of this DerivedTransactionsLinks.

        Link of the transaction API service that corresponds to the value derivation.<br><br><b>Applicable containers</b>: creditCard, bank, investment<br>

        :param transactions: The transactions of this DerivedTransactionsLinks.
        :type transactions: str
        """

        self._transactions = transactions
