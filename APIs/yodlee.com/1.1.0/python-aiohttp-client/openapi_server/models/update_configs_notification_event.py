# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateConfigsNotificationEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, callback_url: str=None):
        """UpdateConfigsNotificationEvent - a model defined in OpenAPI

        :param callback_url: The callback_url of this UpdateConfigsNotificationEvent.
        """
        self.openapi_types = {
            'callback_url': str
        }

        self.attribute_map = {
            'callback_url': 'callbackUrl'
        }

        self._callback_url = callback_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateConfigsNotificationEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateConfigsNotificationEvent of this UpdateConfigsNotificationEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callback_url(self):
        """Gets the callback_url of this UpdateConfigsNotificationEvent.

        URL to which the notification should be posted.<br><br><b>Endpoints</b>:<ul><li>GET configs/notifications/events</li></ul>

        :return: The callback_url of this UpdateConfigsNotificationEvent.
        :rtype: str
        """
        return self._callback_url

    @callback_url.setter
    def callback_url(self, callback_url):
        """Sets the callback_url of this UpdateConfigsNotificationEvent.

        URL to which the notification should be posted.<br><br><b>Endpoints</b>:<ul><li>GET configs/notifications/events</li></ul>

        :param callback_url: The callback_url of this UpdateConfigsNotificationEvent.
        :type callback_url: str
        """
        if callback_url is not None and len(callback_url) > 2147483647:
            raise ValueError("Invalid value for `callback_url`, length must be less than or equal to `2147483647`")
        if callback_url is not None and len(callback_url) < 1:
            raise ValueError("Invalid value for `callback_url`, length must be greater than or equal to `1`")

        self._callback_url = callback_url
