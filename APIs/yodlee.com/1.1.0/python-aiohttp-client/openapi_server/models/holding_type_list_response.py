# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HoldingTypeListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, holding_type: List[str]=None):
        """HoldingTypeListResponse - a model defined in OpenAPI

        :param holding_type: The holding_type of this HoldingTypeListResponse.
        """
        self.openapi_types = {
            'holding_type': List[str]
        }

        self.attribute_map = {
            'holding_type': 'holdingType'
        }

        self._holding_type = holding_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HoldingTypeListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HoldingTypeListResponse of this HoldingTypeListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def holding_type(self):
        """Gets the holding_type of this HoldingTypeListResponse.


        :return: The holding_type of this HoldingTypeListResponse.
        :rtype: List[str]
        """
        return self._holding_type

    @holding_type.setter
    def holding_type(self, holding_type):
        """Sets the holding_type of this HoldingTypeListResponse.


        :param holding_type: The holding_type of this HoldingTypeListResponse.
        :type holding_type: List[str]
        """
        allowed_values = ["stock", "mutualFund", "bond", "CD", "option", "moneyMarketFund", "other", "remic", "future", "commodity", "currency", "unitInvestmentTrust", "employeeStockOption", "insuranceAnnuity", "unknown", "preferredStock", "ETF", "warrants", "ETN"]  # noqa: E501
        if not set(holding_type).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `holding_type` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(holding_type) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._holding_type = holding_type
