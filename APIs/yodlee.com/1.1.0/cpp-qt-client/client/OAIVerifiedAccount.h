/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVerifiedAccount.h
 *
 * 
 */

#ifndef OAIVerifiedAccount_H
#define OAIVerifiedAccount_H

#include <QJsonObject>

#include "OAIAccountHolder.h"
#include "OAIBankTransferCode.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBankTransferCode;
class OAIAccountHolder;

class OAIVerifiedAccount : public OAIObject {
public:
    OAIVerifiedAccount();
    OAIVerifiedAccount(QString json);
    ~OAIVerifiedAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountNumber() const;
    void setAccountNumber(const QString &account_number);
    bool is_account_number_Set() const;
    bool is_account_number_Valid() const;

    QString getAccountType() const;
    void setAccountType(const QString &account_type);
    bool is_account_type_Set() const;
    bool is_account_type_Valid() const;

    QList<OAIBankTransferCode> getBankTransferCode() const;
    void setBankTransferCode(const QList<OAIBankTransferCode> &bank_transfer_code);
    bool is_bank_transfer_code_Set() const;
    bool is_bank_transfer_code_Valid() const;

    QString getFullAccountNumber() const;
    void setFullAccountNumber(const QString &full_account_number);
    bool is_full_account_number_Set() const;
    bool is_full_account_number_Valid() const;

    QList<OAIAccountHolder> getHolder() const;
    void setHolder(const QList<OAIAccountHolder> &holder);
    bool is_holder_Set() const;
    bool is_holder_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint64 getProviderAccountId() const;
    void setProviderAccountId(const qint64 &provider_account_id);
    bool is_provider_account_id_Set() const;
    bool is_provider_account_id_Valid() const;

    QString getProviderName() const;
    void setProviderName(const QString &provider_name);
    bool is_provider_name_Set() const;
    bool is_provider_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_number;
    bool m_account_number_isSet;
    bool m_account_number_isValid;

    QString m_account_type;
    bool m_account_type_isSet;
    bool m_account_type_isValid;

    QList<OAIBankTransferCode> m_bank_transfer_code;
    bool m_bank_transfer_code_isSet;
    bool m_bank_transfer_code_isValid;

    QString m_full_account_number;
    bool m_full_account_number_isSet;
    bool m_full_account_number_isValid;

    QList<OAIAccountHolder> m_holder;
    bool m_holder_isSet;
    bool m_holder_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint64 m_provider_account_id;
    bool m_provider_account_id_isSet;
    bool m_provider_account_id_isValid;

    QString m_provider_name;
    bool m_provider_name_isSet;
    bool m_provider_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVerifiedAccount)

#endif // OAIVerifiedAccount_H
