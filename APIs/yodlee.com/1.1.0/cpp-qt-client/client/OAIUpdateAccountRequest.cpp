/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAccountRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAccountRequest::OAIUpdateAccountRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAccountRequest::OAIUpdateAccountRequest() {
    this->initializeModel();
}

OAIUpdateAccountRequest::~OAIUpdateAccountRequest() {}

void OAIUpdateAccountRequest::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;
}

void OAIUpdateAccountRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAccountRequest::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;
}

QString OAIUpdateAccountRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAccountRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_account.isSet()) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    return obj;
}

OAIUpdateAccountInfo OAIUpdateAccountRequest::getAccount() const {
    return m_account;
}
void OAIUpdateAccountRequest::setAccount(const OAIUpdateAccountInfo &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIUpdateAccountRequest::is_account_Set() const{
    return m_account_isSet;
}

bool OAIUpdateAccountRequest::is_account_Valid() const{
    return m_account_isValid;
}

bool OAIUpdateAccountRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAccountRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_isValid && true;
}

} // namespace OpenAPI
