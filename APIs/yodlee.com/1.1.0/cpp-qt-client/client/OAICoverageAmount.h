/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICoverageAmount.h
 *
 * 
 */

#ifndef OAICoverageAmount_H
#define OAICoverageAmount_H

#include <QJsonObject>

#include "OAIMoney.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoney;

class OAICoverageAmount : public OAIObject {
public:
    OAICoverageAmount();
    OAICoverageAmount(QString json);
    ~OAICoverageAmount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMoney getCover() const;
    void setCover(const OAIMoney &cover);
    bool is_cover_Set() const;
    bool is_cover_Valid() const;

    QString getLimitType() const;
    void setLimitType(const QString &limit_type);
    bool is_limit_type_Set() const;
    bool is_limit_type_Valid() const;

    OAIMoney getMet() const;
    void setMet(const OAIMoney &met);
    bool is_met_Set() const;
    bool is_met_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUnitType() const;
    void setUnitType(const QString &unit_type);
    bool is_unit_type_Set() const;
    bool is_unit_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMoney m_cover;
    bool m_cover_isSet;
    bool m_cover_isValid;

    QString m_limit_type;
    bool m_limit_type_isSet;
    bool m_limit_type_isValid;

    OAIMoney m_met;
    bool m_met_isSet;
    bool m_met_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_unit_type;
    bool m_unit_type_isSet;
    bool m_unit_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICoverageAmount)

#endif // OAICoverageAmount_H
