/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDerivedNetworth.h
 *
 * 
 */

#ifndef OAIDerivedNetworth_H
#define OAIDerivedNetworth_H

#include <QJsonObject>

#include "OAIDerivedNetworthHistoricalBalance.h"
#include "OAIMoney.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoney;
class OAIDerivedNetworthHistoricalBalance;

class OAIDerivedNetworth : public OAIObject {
public:
    OAIDerivedNetworth();
    OAIDerivedNetworth(QString json);
    ~OAIDerivedNetworth() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMoney getAsset() const;
    void setAsset(const OAIMoney &asset);
    bool is_asset_Set() const;
    bool is_asset_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QList<OAIDerivedNetworthHistoricalBalance> getHistoricalBalances() const;
    void setHistoricalBalances(const QList<OAIDerivedNetworthHistoricalBalance> &historical_balances);
    bool is_historical_balances_Set() const;
    bool is_historical_balances_Valid() const;

    OAIMoney getLiability() const;
    void setLiability(const OAIMoney &liability);
    bool is_liability_Set() const;
    bool is_liability_Valid() const;

    OAIMoney getNetworth() const;
    void setNetworth(const OAIMoney &networth);
    bool is_networth_Set() const;
    bool is_networth_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMoney m_asset;
    bool m_asset_isSet;
    bool m_asset_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QList<OAIDerivedNetworthHistoricalBalance> m_historical_balances;
    bool m_historical_balances_isSet;
    bool m_historical_balances_isValid;

    OAIMoney m_liability;
    bool m_liability_isSet;
    bool m_liability_isValid;

    OAIMoney m_networth;
    bool m_networth_isSet;
    bool m_networth_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDerivedNetworth)

#endif // OAIDerivedNetworth_H
