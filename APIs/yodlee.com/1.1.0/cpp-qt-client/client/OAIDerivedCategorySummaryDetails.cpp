/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDerivedCategorySummaryDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDerivedCategorySummaryDetails::OAIDerivedCategorySummaryDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDerivedCategorySummaryDetails::OAIDerivedCategorySummaryDetails() {
    this->initializeModel();
}

OAIDerivedCategorySummaryDetails::~OAIDerivedCategorySummaryDetails() {}

void OAIDerivedCategorySummaryDetails::initializeModel() {

    m_credit_total_isSet = false;
    m_credit_total_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_debit_total_isSet = false;
    m_debit_total_isValid = false;
}

void OAIDerivedCategorySummaryDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDerivedCategorySummaryDetails::fromJsonObject(QJsonObject json) {

    m_credit_total_isValid = ::OpenAPI::fromJsonValue(m_credit_total, json[QString("creditTotal")]);
    m_credit_total_isSet = !json[QString("creditTotal")].isNull() && m_credit_total_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_debit_total_isValid = ::OpenAPI::fromJsonValue(m_debit_total, json[QString("debitTotal")]);
    m_debit_total_isSet = !json[QString("debitTotal")].isNull() && m_debit_total_isValid;
}

QString OAIDerivedCategorySummaryDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDerivedCategorySummaryDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_credit_total.isSet()) {
        obj.insert(QString("creditTotal"), ::OpenAPI::toJsonValue(m_credit_total));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_debit_total.isSet()) {
        obj.insert(QString("debitTotal"), ::OpenAPI::toJsonValue(m_debit_total));
    }
    return obj;
}

OAIMoney OAIDerivedCategorySummaryDetails::getCreditTotal() const {
    return m_credit_total;
}
void OAIDerivedCategorySummaryDetails::setCreditTotal(const OAIMoney &credit_total) {
    m_credit_total = credit_total;
    m_credit_total_isSet = true;
}

bool OAIDerivedCategorySummaryDetails::is_credit_total_Set() const{
    return m_credit_total_isSet;
}

bool OAIDerivedCategorySummaryDetails::is_credit_total_Valid() const{
    return m_credit_total_isValid;
}

QString OAIDerivedCategorySummaryDetails::getDate() const {
    return m_date;
}
void OAIDerivedCategorySummaryDetails::setDate(const QString &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIDerivedCategorySummaryDetails::is_date_Set() const{
    return m_date_isSet;
}

bool OAIDerivedCategorySummaryDetails::is_date_Valid() const{
    return m_date_isValid;
}

OAIMoney OAIDerivedCategorySummaryDetails::getDebitTotal() const {
    return m_debit_total;
}
void OAIDerivedCategorySummaryDetails::setDebitTotal(const OAIMoney &debit_total) {
    m_debit_total = debit_total;
    m_debit_total_isSet = true;
}

bool OAIDerivedCategorySummaryDetails::is_debit_total_Set() const{
    return m_debit_total_isSet;
}

bool OAIDerivedCategorySummaryDetails::is_debit_total_Valid() const{
    return m_debit_total_isValid;
}

bool OAIDerivedCategorySummaryDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_credit_total.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debit_total.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDerivedCategorySummaryDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
