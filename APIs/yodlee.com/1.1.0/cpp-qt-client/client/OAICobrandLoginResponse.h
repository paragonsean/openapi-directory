/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICobrandLoginResponse.h
 *
 * 
 */

#ifndef OAICobrandLoginResponse_H
#define OAICobrandLoginResponse_H

#include <QJsonObject>

#include "OAICobrandSession.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICobrandSession;

class OAICobrandLoginResponse : public OAIObject {
public:
    OAICobrandLoginResponse();
    OAICobrandLoginResponse(QString json);
    ~OAICobrandLoginResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    qint64 getCobrandId() const;
    void setCobrandId(const qint64 &cobrand_id);
    bool is_cobrand_id_Set() const;
    bool is_cobrand_id_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    OAICobrandSession getSession() const;
    void setSession(const OAICobrandSession &session);
    bool is_session_Set() const;
    bool is_session_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    qint64 m_cobrand_id;
    bool m_cobrand_id_isSet;
    bool m_cobrand_id_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    OAICobrandSession m_session;
    bool m_session_isSet;
    bool m_session_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICobrandLoginResponse)

#endif // OAICobrandLoginResponse_H
