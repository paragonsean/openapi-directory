/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMerchant.h
 *
 * 
 */

#ifndef OAIMerchant_H
#define OAIMerchant_H

#include <QJsonObject>

#include "OAIAccountAddress.h"
#include "OAIContact.h"
#include "OAICoordinates.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccountAddress;
class OAIContact;
class OAICoordinates;

class OAIMerchant : public OAIObject {
public:
    OAIMerchant();
    OAIMerchant(QString json);
    ~OAIMerchant() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccountAddress getAddress() const;
    void setAddress(const OAIAccountAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QList<QString> getCategoryLabel() const;
    void setCategoryLabel(const QList<QString> &category_label);
    bool is_category_label_Set() const;
    bool is_category_label_Valid() const;

    OAIContact getContact() const;
    void setContact(const OAIContact &contact);
    bool is_contact_Set() const;
    bool is_contact_Valid() const;

    OAICoordinates getCoordinates() const;
    void setCoordinates(const OAICoordinates &coordinates);
    bool is_coordinates_Set() const;
    bool is_coordinates_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getWebsite() const;
    void setWebsite(const QString &website);
    bool is_website_Set() const;
    bool is_website_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccountAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QList<QString> m_category_label;
    bool m_category_label_isSet;
    bool m_category_label_isValid;

    OAIContact m_contact;
    bool m_contact_isSet;
    bool m_contact_isValid;

    OAICoordinates m_coordinates;
    bool m_coordinates_isSet;
    bool m_coordinates_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_website;
    bool m_website_isSet;
    bool m_website_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMerchant)

#endif // OAIMerchant_H
