/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILoginForm.h
 *
 * 
 */

#ifndef OAILoginForm_H
#define OAILoginForm_H

#include <QJsonObject>

#include "OAIRow.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRow;

class OAILoginForm : public OAIObject {
public:
    OAILoginForm();
    OAILoginForm(QString json);
    ~OAILoginForm() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getForgetPasswordUrl() const;
    void setForgetPasswordUrl(const QString &forget_password_url);
    bool is_forget_password_url_Set() const;
    bool is_forget_password_url_Valid() const;

    QString getFormType() const;
    void setFormType(const QString &form_type);
    bool is_form_type_Set() const;
    bool is_form_type_Valid() const;

    QString getHelp() const;
    void setHelp(const QString &help);
    bool is_help_Set() const;
    bool is_help_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLoginHelp() const;
    void setLoginHelp(const QString &login_help);
    bool is_login_help_Set() const;
    bool is_login_help_Valid() const;

    QString getMfaInfoText() const;
    void setMfaInfoText(const QString &mfa_info_text);
    bool is_mfa_info_text_Set() const;
    bool is_mfa_info_text_Valid() const;

    QString getMfaInfoTitle() const;
    void setMfaInfoTitle(const QString &mfa_info_title);
    bool is_mfa_info_title_Set() const;
    bool is_mfa_info_title_Valid() const;

    qint64 getMfaTimeout() const;
    void setMfaTimeout(const qint64 &mfa_timeout);
    bool is_mfa_timeout_Set() const;
    bool is_mfa_timeout_Valid() const;

    QList<OAIRow> getRow() const;
    void setRow(const QList<OAIRow> &row);
    bool is_row_Set() const;
    bool is_row_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_forget_password_url;
    bool m_forget_password_url_isSet;
    bool m_forget_password_url_isValid;

    QString m_form_type;
    bool m_form_type_isSet;
    bool m_form_type_isValid;

    QString m_help;
    bool m_help_isSet;
    bool m_help_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_login_help;
    bool m_login_help_isSet;
    bool m_login_help_isValid;

    QString m_mfa_info_text;
    bool m_mfa_info_text_isSet;
    bool m_mfa_info_text_isValid;

    QString m_mfa_info_title;
    bool m_mfa_info_title_isSet;
    bool m_mfa_info_title_isValid;

    qint64 m_mfa_timeout;
    bool m_mfa_timeout_isSet;
    bool m_mfa_timeout_isValid;

    QList<OAIRow> m_row;
    bool m_row_isSet;
    bool m_row_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILoginForm)

#endif // OAILoginForm_H
