/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDerivedTransactionSummaryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDerivedTransactionSummaryResponse::OAIDerivedTransactionSummaryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDerivedTransactionSummaryResponse::OAIDerivedTransactionSummaryResponse() {
    this->initializeModel();
}

OAIDerivedTransactionSummaryResponse::~OAIDerivedTransactionSummaryResponse() {}

void OAIDerivedTransactionSummaryResponse::initializeModel() {

    m_links_isSet = false;
    m_links_isValid = false;

    m_transaction_summary_isSet = false;
    m_transaction_summary_isValid = false;
}

void OAIDerivedTransactionSummaryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDerivedTransactionSummaryResponse::fromJsonObject(QJsonObject json) {

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_transaction_summary_isValid = ::OpenAPI::fromJsonValue(m_transaction_summary, json[QString("transactionSummary")]);
    m_transaction_summary_isSet = !json[QString("transactionSummary")].isNull() && m_transaction_summary_isValid;
}

QString OAIDerivedTransactionSummaryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDerivedTransactionSummaryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_links.isSet()) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_transaction_summary.size() > 0) {
        obj.insert(QString("transactionSummary"), ::OpenAPI::toJsonValue(m_transaction_summary));
    }
    return obj;
}

OAIDerivedTransactionsLinks OAIDerivedTransactionSummaryResponse::getLinks() const {
    return m_links;
}
void OAIDerivedTransactionSummaryResponse::setLinks(const OAIDerivedTransactionsLinks &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIDerivedTransactionSummaryResponse::is_links_Set() const{
    return m_links_isSet;
}

bool OAIDerivedTransactionSummaryResponse::is_links_Valid() const{
    return m_links_isValid;
}

QList<OAIDerivedTransactionsSummary> OAIDerivedTransactionSummaryResponse::getTransactionSummary() const {
    return m_transaction_summary;
}
void OAIDerivedTransactionSummaryResponse::setTransactionSummary(const QList<OAIDerivedTransactionsSummary> &transaction_summary) {
    m_transaction_summary = transaction_summary;
    m_transaction_summary_isSet = true;
}

bool OAIDerivedTransactionSummaryResponse::is_transaction_summary_Set() const{
    return m_transaction_summary_isSet;
}

bool OAIDerivedTransactionSummaryResponse::is_transaction_summary_Valid() const{
    return m_transaction_summary_isValid;
}

bool OAIDerivedTransactionSummaryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_links.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_summary.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDerivedTransactionSummaryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
