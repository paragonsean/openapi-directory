/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRewardBalance.h
 *
 * 
 */

#ifndef OAIRewardBalance_H
#define OAIRewardBalance_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRewardBalance : public OAIObject {
public:
    OAIRewardBalance();
    OAIRewardBalance(QString json);
    ~OAIRewardBalance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBalance() const;
    void setBalance(const double &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    QString getBalanceToLevel() const;
    void setBalanceToLevel(const QString &balance_to_level);
    bool is_balance_to_level_Set() const;
    bool is_balance_to_level_Valid() const;

    QString getBalanceToReward() const;
    void setBalanceToReward(const QString &balance_to_reward);
    bool is_balance_to_reward_Set() const;
    bool is_balance_to_reward_Valid() const;

    QString getBalanceType() const;
    void setBalanceType(const QString &balance_type);
    bool is_balance_type_Set() const;
    bool is_balance_type_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getExpiryDate() const;
    void setExpiryDate(const QString &expiry_date);
    bool is_expiry_date_Set() const;
    bool is_expiry_date_Valid() const;

    QString getUnits() const;
    void setUnits(const QString &units);
    bool is_units_Set() const;
    bool is_units_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    QString m_balance_to_level;
    bool m_balance_to_level_isSet;
    bool m_balance_to_level_isValid;

    QString m_balance_to_reward;
    bool m_balance_to_reward_isSet;
    bool m_balance_to_reward_isValid;

    QString m_balance_type;
    bool m_balance_type_isSet;
    bool m_balance_type_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_expiry_date;
    bool m_expiry_date_isSet;
    bool m_expiry_date_isValid;

    QString m_units;
    bool m_units_isSet;
    bool m_units_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRewardBalance)

#endif // OAIRewardBalance_H
