/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProviderDetail.h
 *
 * 
 */

#ifndef OAIProviderDetail_H
#define OAIProviderDetail_H

#include <QJsonObject>

#include "OAICapability.h"
#include "OAILoginForm.h"
#include "OAIProvidersDataset.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICapability;
class OAIProvidersDataset;
class OAILoginForm;

class OAIProviderDetail : public OAIObject {
public:
    OAIProviderDetail();
    OAIProviderDetail(QString json);
    ~OAIProviderDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPriority() const;
    void setPriority(const QString &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QList<QString> getAccountType() const;
    void setAccountType(const QList<QString> &account_type);
    bool is_account_type_Set() const;
    bool is_account_type_Valid() const;

    QList<qint64> getAssociatedProviderIds() const;
    void setAssociatedProviderIds(const QList<qint64> &associated_provider_ids);
    bool is_associated_provider_ids_Set() const;
    bool is_associated_provider_ids_Valid() const;

    QList<QString> getAuthParameter() const;
    void setAuthParameter(const QList<QString> &auth_parameter);
    bool is_auth_parameter_Set() const;
    bool is_auth_parameter_Valid() const;

    QString getAuthType() const;
    void setAuthType(const QString &auth_type);
    bool is_auth_type_Set() const;
    bool is_auth_type_Valid() const;

    QString getBaseUrl() const;
    void setBaseUrl(const QString &base_url);
    bool is_base_url_Set() const;
    bool is_base_url_Valid() const;

    QList<OAICapability> getCapability() const;
    void setCapability(const QList<OAICapability> &capability);
    bool is_capability_Set() const;
    bool is_capability_Valid() const;

    QString getCountryIsoCode() const;
    void setCountryIsoCode(const QString &country_iso_code);
    bool is_country_iso_code_Set() const;
    bool is_country_iso_code_Valid() const;

    QList<OAIProvidersDataset> getDataset() const;
    void setDataset(const QList<OAIProvidersDataset> &dataset);
    bool is_dataset_Set() const;
    bool is_dataset_Valid() const;

    QString getFavicon() const;
    void setFavicon(const QString &favicon);
    bool is_favicon_Set() const;
    bool is_favicon_Valid() const;

    QString getHelp() const;
    void setHelp(const QString &help);
    bool is_help_Set() const;
    bool is_help_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIsAddedByUser() const;
    void setIsAddedByUser(const QString &is_added_by_user);
    bool is_is_added_by_user_Set() const;
    bool is_is_added_by_user_Valid() const;

    bool isIsAutoRefreshEnabled() const;
    void setIsAutoRefreshEnabled(const bool &is_auto_refresh_enabled);
    bool is_is_auto_refresh_enabled_Set() const;
    bool is_is_auto_refresh_enabled_Valid() const;

    bool isIsConsentRequired() const;
    void setIsConsentRequired(const bool &is_consent_required);
    bool is_is_consent_required_Set() const;
    bool is_is_consent_required_Valid() const;

    QString getLanguageIsoCode() const;
    void setLanguageIsoCode(const QString &language_iso_code);
    bool is_language_iso_code_Set() const;
    bool is_language_iso_code_Valid() const;

    QString getLastModified() const;
    void setLastModified(const QString &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    QList<OAILoginForm> getLoginForm() const;
    void setLoginForm(const QList<OAILoginForm> &login_form);
    bool is_login_form_Set() const;
    bool is_login_form_Valid() const;

    QString getLoginUrl() const;
    void setLoginUrl(const QString &login_url);
    bool is_login_url_Set() const;
    bool is_login_url_Valid() const;

    QString getLogo() const;
    void setLogo(const QString &logo);
    bool is_logo_Set() const;
    bool is_logo_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPrimaryLanguageIsoCode() const;
    void setPrimaryLanguageIsoCode(const QString &primary_language_iso_code);
    bool is_primary_language_iso_code_Set() const;
    bool is_primary_language_iso_code_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QList<QString> m_account_type;
    bool m_account_type_isSet;
    bool m_account_type_isValid;

    QList<qint64> m_associated_provider_ids;
    bool m_associated_provider_ids_isSet;
    bool m_associated_provider_ids_isValid;

    QList<QString> m_auth_parameter;
    bool m_auth_parameter_isSet;
    bool m_auth_parameter_isValid;

    QString m_auth_type;
    bool m_auth_type_isSet;
    bool m_auth_type_isValid;

    QString m_base_url;
    bool m_base_url_isSet;
    bool m_base_url_isValid;

    QList<OAICapability> m_capability;
    bool m_capability_isSet;
    bool m_capability_isValid;

    QString m_country_iso_code;
    bool m_country_iso_code_isSet;
    bool m_country_iso_code_isValid;

    QList<OAIProvidersDataset> m_dataset;
    bool m_dataset_isSet;
    bool m_dataset_isValid;

    QString m_favicon;
    bool m_favicon_isSet;
    bool m_favicon_isValid;

    QString m_help;
    bool m_help_isSet;
    bool m_help_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_is_added_by_user;
    bool m_is_added_by_user_isSet;
    bool m_is_added_by_user_isValid;

    bool m_is_auto_refresh_enabled;
    bool m_is_auto_refresh_enabled_isSet;
    bool m_is_auto_refresh_enabled_isValid;

    bool m_is_consent_required;
    bool m_is_consent_required_isSet;
    bool m_is_consent_required_isValid;

    QString m_language_iso_code;
    bool m_language_iso_code_isSet;
    bool m_language_iso_code_isValid;

    QString m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    QList<OAILoginForm> m_login_form;
    bool m_login_form_isSet;
    bool m_login_form_isValid;

    QString m_login_url;
    bool m_login_url_isSet;
    bool m_login_url_isValid;

    QString m_logo;
    bool m_logo_isSet;
    bool m_logo_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_primary_language_iso_code;
    bool m_primary_language_iso_code_isSet;
    bool m_primary_language_iso_code_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProviderDetail)

#endif // OAIProviderDetail_H
