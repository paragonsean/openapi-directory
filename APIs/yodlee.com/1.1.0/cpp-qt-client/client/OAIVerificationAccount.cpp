/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerificationAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerificationAccount::OAIVerificationAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerificationAccount::OAIVerificationAccount() {
    this->initializeModel();
}

OAIVerificationAccount::~OAIVerificationAccount() {}

void OAIVerificationAccount::initializeModel() {

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_account_type_isSet = false;
    m_account_type_isValid = false;

    m_bank_transfer_code_isSet = false;
    m_bank_transfer_code_isValid = false;
}

void OAIVerificationAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVerificationAccount::fromJsonObject(QJsonObject json) {

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("accountName")]);
    m_account_name_isSet = !json[QString("accountName")].isNull() && m_account_name_isValid;

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("accountNumber")]);
    m_account_number_isSet = !json[QString("accountNumber")].isNull() && m_account_number_isValid;

    m_account_type_isValid = ::OpenAPI::fromJsonValue(m_account_type, json[QString("accountType")]);
    m_account_type_isSet = !json[QString("accountType")].isNull() && m_account_type_isValid;

    m_bank_transfer_code_isValid = ::OpenAPI::fromJsonValue(m_bank_transfer_code, json[QString("bankTransferCode")]);
    m_bank_transfer_code_isSet = !json[QString("bankTransferCode")].isNull() && m_bank_transfer_code_isValid;
}

QString OAIVerificationAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVerificationAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_account_name_isSet) {
        obj.insert(QString("accountName"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_account_number_isSet) {
        obj.insert(QString("accountNumber"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_account_type_isSet) {
        obj.insert(QString("accountType"), ::OpenAPI::toJsonValue(m_account_type));
    }
    if (m_bank_transfer_code.isSet()) {
        obj.insert(QString("bankTransferCode"), ::OpenAPI::toJsonValue(m_bank_transfer_code));
    }
    return obj;
}

QString OAIVerificationAccount::getAccountName() const {
    return m_account_name;
}
void OAIVerificationAccount::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIVerificationAccount::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIVerificationAccount::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAIVerificationAccount::getAccountNumber() const {
    return m_account_number;
}
void OAIVerificationAccount::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAIVerificationAccount::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAIVerificationAccount::is_account_number_Valid() const{
    return m_account_number_isValid;
}

QString OAIVerificationAccount::getAccountType() const {
    return m_account_type;
}
void OAIVerificationAccount::setAccountType(const QString &account_type) {
    m_account_type = account_type;
    m_account_type_isSet = true;
}

bool OAIVerificationAccount::is_account_type_Set() const{
    return m_account_type_isSet;
}

bool OAIVerificationAccount::is_account_type_Valid() const{
    return m_account_type_isValid;
}

OAIVerificationBankTransferCode OAIVerificationAccount::getBankTransferCode() const {
    return m_bank_transfer_code;
}
void OAIVerificationAccount::setBankTransferCode(const OAIVerificationBankTransferCode &bank_transfer_code) {
    m_bank_transfer_code = bank_transfer_code;
    m_bank_transfer_code_isSet = true;
}

bool OAIVerificationAccount::is_bank_transfer_code_Set() const{
    return m_bank_transfer_code_isSet;
}

bool OAIVerificationAccount::is_bank_transfer_code_Valid() const{
    return m_bank_transfer_code_isValid;
}

bool OAIVerificationAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_transfer_code.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVerificationAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_number_isValid && m_account_type_isValid && m_bank_transfer_code_isValid && true;
}

} // namespace OpenAPI
