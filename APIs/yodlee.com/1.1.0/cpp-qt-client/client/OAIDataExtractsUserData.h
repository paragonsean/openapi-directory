/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataExtractsUserData.h
 *
 * 
 */

#ifndef OAIDataExtractsUserData_H
#define OAIDataExtractsUserData_H

#include <QJsonObject>

#include "OAIDataExtractsAccount.h"
#include "OAIDataExtractsHolding.h"
#include "OAIDataExtractsProviderAccount.h"
#include "OAIDataExtractsTransaction.h"
#include "OAIDataExtractsUser.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataExtractsAccount;
class OAIDataExtractsHolding;
class OAIDataExtractsProviderAccount;
class OAIDataExtractsTransaction;
class OAIDataExtractsUser;

class OAIDataExtractsUserData : public OAIObject {
public:
    OAIDataExtractsUserData();
    OAIDataExtractsUserData(QString json);
    ~OAIDataExtractsUserData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDataExtractsAccount> getAccount() const;
    void setAccount(const QList<OAIDataExtractsAccount> &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    QList<OAIDataExtractsHolding> getHolding() const;
    void setHolding(const QList<OAIDataExtractsHolding> &holding);
    bool is_holding_Set() const;
    bool is_holding_Valid() const;

    QList<OAIDataExtractsProviderAccount> getProviderAccount() const;
    void setProviderAccount(const QList<OAIDataExtractsProviderAccount> &provider_account);
    bool is_provider_account_Set() const;
    bool is_provider_account_Valid() const;

    qint64 getTotalTransactionsCount() const;
    void setTotalTransactionsCount(const qint64 &total_transactions_count);
    bool is_total_transactions_count_Set() const;
    bool is_total_transactions_count_Valid() const;

    QList<OAIDataExtractsTransaction> getTransaction() const;
    void setTransaction(const QList<OAIDataExtractsTransaction> &transaction);
    bool is_transaction_Set() const;
    bool is_transaction_Valid() const;

    OAIDataExtractsUser getUser() const;
    void setUser(const OAIDataExtractsUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDataExtractsAccount> m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    QList<OAIDataExtractsHolding> m_holding;
    bool m_holding_isSet;
    bool m_holding_isValid;

    QList<OAIDataExtractsProviderAccount> m_provider_account;
    bool m_provider_account_isSet;
    bool m_provider_account_isValid;

    qint64 m_total_transactions_count;
    bool m_total_transactions_count_isSet;
    bool m_total_transactions_count_isValid;

    QList<OAIDataExtractsTransaction> m_transaction;
    bool m_transaction_isSet;
    bool m_transaction_isValid;

    OAIDataExtractsUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataExtractsUserData)

#endif // OAIDataExtractsUserData_H
