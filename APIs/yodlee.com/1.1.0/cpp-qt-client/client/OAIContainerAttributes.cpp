/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContainerAttributes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContainerAttributes::OAIContainerAttributes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContainerAttributes::OAIContainerAttributes() {
    this->initializeModel();
}

OAIContainerAttributes::~OAIContainerAttributes() {}

void OAIContainerAttributes::initializeModel() {

    m_bank_isSet = false;
    m_bank_isValid = false;

    m_creditcard_isSet = false;
    m_creditcard_isValid = false;

    m_insurance_isSet = false;
    m_insurance_isValid = false;

    m_investment_isSet = false;
    m_investment_isValid = false;

    m_loan_isSet = false;
    m_loan_isValid = false;
}

void OAIContainerAttributes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContainerAttributes::fromJsonObject(QJsonObject json) {

    m_bank_isValid = ::OpenAPI::fromJsonValue(m_bank, json[QString("BANK")]);
    m_bank_isSet = !json[QString("BANK")].isNull() && m_bank_isValid;

    m_creditcard_isValid = ::OpenAPI::fromJsonValue(m_creditcard, json[QString("CREDITCARD")]);
    m_creditcard_isSet = !json[QString("CREDITCARD")].isNull() && m_creditcard_isValid;

    m_insurance_isValid = ::OpenAPI::fromJsonValue(m_insurance, json[QString("INSURANCE")]);
    m_insurance_isSet = !json[QString("INSURANCE")].isNull() && m_insurance_isValid;

    m_investment_isValid = ::OpenAPI::fromJsonValue(m_investment, json[QString("INVESTMENT")]);
    m_investment_isSet = !json[QString("INVESTMENT")].isNull() && m_investment_isValid;

    m_loan_isValid = ::OpenAPI::fromJsonValue(m_loan, json[QString("LOAN")]);
    m_loan_isSet = !json[QString("LOAN")].isNull() && m_loan_isValid;
}

QString OAIContainerAttributes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContainerAttributes::asJsonObject() const {
    QJsonObject obj;
    if (m_bank.isSet()) {
        obj.insert(QString("BANK"), ::OpenAPI::toJsonValue(m_bank));
    }
    if (m_creditcard.isSet()) {
        obj.insert(QString("CREDITCARD"), ::OpenAPI::toJsonValue(m_creditcard));
    }
    if (m_insurance.isSet()) {
        obj.insert(QString("INSURANCE"), ::OpenAPI::toJsonValue(m_insurance));
    }
    if (m_investment.isSet()) {
        obj.insert(QString("INVESTMENT"), ::OpenAPI::toJsonValue(m_investment));
    }
    if (m_loan.isSet()) {
        obj.insert(QString("LOAN"), ::OpenAPI::toJsonValue(m_loan));
    }
    return obj;
}

OAITransactionDays OAIContainerAttributes::getBank() const {
    return m_bank;
}
void OAIContainerAttributes::setBank(const OAITransactionDays &bank) {
    m_bank = bank;
    m_bank_isSet = true;
}

bool OAIContainerAttributes::is_bank_Set() const{
    return m_bank_isSet;
}

bool OAIContainerAttributes::is_bank_Valid() const{
    return m_bank_isValid;
}

OAITransactionDays OAIContainerAttributes::getCreditcard() const {
    return m_creditcard;
}
void OAIContainerAttributes::setCreditcard(const OAITransactionDays &creditcard) {
    m_creditcard = creditcard;
    m_creditcard_isSet = true;
}

bool OAIContainerAttributes::is_creditcard_Set() const{
    return m_creditcard_isSet;
}

bool OAIContainerAttributes::is_creditcard_Valid() const{
    return m_creditcard_isValid;
}

OAITransactionDays OAIContainerAttributes::getInsurance() const {
    return m_insurance;
}
void OAIContainerAttributes::setInsurance(const OAITransactionDays &insurance) {
    m_insurance = insurance;
    m_insurance_isSet = true;
}

bool OAIContainerAttributes::is_insurance_Set() const{
    return m_insurance_isSet;
}

bool OAIContainerAttributes::is_insurance_Valid() const{
    return m_insurance_isValid;
}

OAITransactionDays OAIContainerAttributes::getInvestment() const {
    return m_investment;
}
void OAIContainerAttributes::setInvestment(const OAITransactionDays &investment) {
    m_investment = investment;
    m_investment_isSet = true;
}

bool OAIContainerAttributes::is_investment_Set() const{
    return m_investment_isSet;
}

bool OAIContainerAttributes::is_investment_Valid() const{
    return m_investment_isValid;
}

OAITransactionDays OAIContainerAttributes::getLoan() const {
    return m_loan;
}
void OAIContainerAttributes::setLoan(const OAITransactionDays &loan) {
    m_loan = loan;
    m_loan_isSet = true;
}

bool OAIContainerAttributes::is_loan_Set() const{
    return m_loan_isSet;
}

bool OAIContainerAttributes::is_loan_Valid() const{
    return m_loan_isValid;
}

bool OAIContainerAttributes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bank.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creditcard.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_insurance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_investment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContainerAttributes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
