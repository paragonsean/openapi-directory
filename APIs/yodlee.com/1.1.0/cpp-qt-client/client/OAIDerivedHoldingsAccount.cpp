/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDerivedHoldingsAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDerivedHoldingsAccount::OAIDerivedHoldingsAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDerivedHoldingsAccount::OAIDerivedHoldingsAccount() {
    this->initializeModel();
}

OAIDerivedHoldingsAccount::~OAIDerivedHoldingsAccount() {}

void OAIDerivedHoldingsAccount::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIDerivedHoldingsAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDerivedHoldingsAccount::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIDerivedHoldingsAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDerivedHoldingsAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_value.isSet()) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

qint64 OAIDerivedHoldingsAccount::getId() const {
    return m_id;
}
void OAIDerivedHoldingsAccount::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIDerivedHoldingsAccount::is_id_Set() const{
    return m_id_isSet;
}

bool OAIDerivedHoldingsAccount::is_id_Valid() const{
    return m_id_isValid;
}

OAIMoney OAIDerivedHoldingsAccount::getValue() const {
    return m_value;
}
void OAIDerivedHoldingsAccount::setValue(const OAIMoney &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIDerivedHoldingsAccount::is_value_Set() const{
    return m_value_isSet;
}

bool OAIDerivedHoldingsAccount::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIDerivedHoldingsAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDerivedHoldingsAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
