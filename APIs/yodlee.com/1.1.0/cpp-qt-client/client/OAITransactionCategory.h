/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransactionCategory.h
 *
 * 
 */

#ifndef OAITransactionCategory_H
#define OAITransactionCategory_H

#include <QJsonObject>

#include "OAIDetailCategory.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDetailCategory;

class OAITransactionCategory : public OAIObject {
public:
    OAITransactionCategory();
    OAITransactionCategory(QString json);
    ~OAITransactionCategory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getClassification() const;
    void setClassification(const QString &classification);
    bool is_classification_Set() const;
    bool is_classification_Valid() const;

    QString getDefaultCategoryName() const;
    void setDefaultCategoryName(const QString &default_category_name);
    bool is_default_category_name_Set() const;
    bool is_default_category_name_Valid() const;

    QString getDefaultHighLevelCategoryName() const;
    void setDefaultHighLevelCategoryName(const QString &default_high_level_category_name);
    bool is_default_high_level_category_name_Set() const;
    bool is_default_high_level_category_name_Valid() const;

    QList<OAIDetailCategory> getDetailCategory() const;
    void setDetailCategory(const QList<OAIDetailCategory> &detail_category);
    bool is_detail_category_Set() const;
    bool is_detail_category_Valid() const;

    qint64 getHighLevelCategoryId() const;
    void setHighLevelCategoryId(const qint64 &high_level_category_id);
    bool is_high_level_category_id_Set() const;
    bool is_high_level_category_id_Valid() const;

    QString getHighLevelCategoryName() const;
    void setHighLevelCategoryName(const QString &high_level_category_name);
    bool is_high_level_category_name_Set() const;
    bool is_high_level_category_name_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_classification;
    bool m_classification_isSet;
    bool m_classification_isValid;

    QString m_default_category_name;
    bool m_default_category_name_isSet;
    bool m_default_category_name_isValid;

    QString m_default_high_level_category_name;
    bool m_default_high_level_category_name_isSet;
    bool m_default_high_level_category_name_isValid;

    QList<OAIDetailCategory> m_detail_category;
    bool m_detail_category_isSet;
    bool m_detail_category_isValid;

    qint64 m_high_level_category_id;
    bool m_high_level_category_id_isSet;
    bool m_high_level_category_id_isValid;

    QString m_high_level_category_name;
    bool m_high_level_category_name_isSet;
    bool m_high_level_category_name_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransactionCategory)

#endif // OAITransactionCategory_H
