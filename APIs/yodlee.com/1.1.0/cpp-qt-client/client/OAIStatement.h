/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStatement.h
 *
 * 
 */

#ifndef OAIStatement_H
#define OAIStatement_H

#include <QJsonObject>

#include "OAIMoney.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoney;

class OAIStatement : public OAIObject {
public:
    OAIStatement();
    OAIStatement(QString json);
    ~OAIStatement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAccountId() const;
    void setAccountId(const qint64 &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    OAIMoney getAmountDue() const;
    void setAmountDue(const OAIMoney &amount_due);
    bool is_amount_due_Set() const;
    bool is_amount_due_Valid() const;

    double getApr() const;
    void setApr(const double &apr);
    bool is_apr_Set() const;
    bool is_apr_Valid() const;

    QString getBillingPeriodEnd() const;
    void setBillingPeriodEnd(const QString &billing_period_end);
    bool is_billing_period_end_Set() const;
    bool is_billing_period_end_Valid() const;

    QString getBillingPeriodStart() const;
    void setBillingPeriodStart(const QString &billing_period_start);
    bool is_billing_period_start_Set() const;
    bool is_billing_period_start_Valid() const;

    OAIMoney getCashAdvance() const;
    void setCashAdvance(const OAIMoney &cash_advance);
    bool is_cash_advance_Set() const;
    bool is_cash_advance_Valid() const;

    double getCashApr() const;
    void setCashApr(const double &cash_apr);
    bool is_cash_apr_Set() const;
    bool is_cash_apr_Valid() const;

    QString getDueDate() const;
    void setDueDate(const QString &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIMoney getInterestAmount() const;
    void setInterestAmount(const OAIMoney &interest_amount);
    bool is_interest_amount_Set() const;
    bool is_interest_amount_Valid() const;

    bool isIsLatest() const;
    void setIsLatest(const bool &is_latest);
    bool is_is_latest_Set() const;
    bool is_is_latest_Valid() const;

    OAIMoney getLastPaymentAmount() const;
    void setLastPaymentAmount(const OAIMoney &last_payment_amount);
    bool is_last_payment_amount_Set() const;
    bool is_last_payment_amount_Valid() const;

    QString getLastPaymentDate() const;
    void setLastPaymentDate(const QString &last_payment_date);
    bool is_last_payment_date_Set() const;
    bool is_last_payment_date_Valid() const;

    QString getLastUpdated() const;
    void setLastUpdated(const QString &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    OAIMoney getLoanBalance() const;
    void setLoanBalance(const OAIMoney &loan_balance);
    bool is_loan_balance_Set() const;
    bool is_loan_balance_Valid() const;

    OAIMoney getMinimumPayment() const;
    void setMinimumPayment(const OAIMoney &minimum_payment);
    bool is_minimum_payment_Set() const;
    bool is_minimum_payment_Valid() const;

    OAIMoney getNewCharges() const;
    void setNewCharges(const OAIMoney &new_charges);
    bool is_new_charges_Set() const;
    bool is_new_charges_Valid() const;

    OAIMoney getPrincipalAmount() const;
    void setPrincipalAmount(const OAIMoney &principal_amount);
    bool is_principal_amount_Set() const;
    bool is_principal_amount_Valid() const;

    QString getStatementDate() const;
    void setStatementDate(const QString &statement_date);
    bool is_statement_date_Set() const;
    bool is_statement_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    OAIMoney m_amount_due;
    bool m_amount_due_isSet;
    bool m_amount_due_isValid;

    double m_apr;
    bool m_apr_isSet;
    bool m_apr_isValid;

    QString m_billing_period_end;
    bool m_billing_period_end_isSet;
    bool m_billing_period_end_isValid;

    QString m_billing_period_start;
    bool m_billing_period_start_isSet;
    bool m_billing_period_start_isValid;

    OAIMoney m_cash_advance;
    bool m_cash_advance_isSet;
    bool m_cash_advance_isValid;

    double m_cash_apr;
    bool m_cash_apr_isSet;
    bool m_cash_apr_isValid;

    QString m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIMoney m_interest_amount;
    bool m_interest_amount_isSet;
    bool m_interest_amount_isValid;

    bool m_is_latest;
    bool m_is_latest_isSet;
    bool m_is_latest_isValid;

    OAIMoney m_last_payment_amount;
    bool m_last_payment_amount_isSet;
    bool m_last_payment_amount_isValid;

    QString m_last_payment_date;
    bool m_last_payment_date_isSet;
    bool m_last_payment_date_isValid;

    QString m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    OAIMoney m_loan_balance;
    bool m_loan_balance_isSet;
    bool m_loan_balance_isValid;

    OAIMoney m_minimum_payment;
    bool m_minimum_payment_isSet;
    bool m_minimum_payment_isValid;

    OAIMoney m_new_charges;
    bool m_new_charges_isSet;
    bool m_new_charges_isValid;

    OAIMoney m_principal_amount;
    bool m_principal_amount_isSet;
    bool m_principal_amount_isValid;

    QString m_statement_date;
    bool m_statement_date_isSet;
    bool m_statement_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStatement)

#endif // OAIStatement_H
