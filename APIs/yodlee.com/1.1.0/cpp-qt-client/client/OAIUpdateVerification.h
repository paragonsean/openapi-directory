/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateVerification.h
 *
 * 
 */

#ifndef OAIUpdateVerification_H
#define OAIUpdateVerification_H

#include <QJsonObject>

#include "OAIVerificationAccount.h"
#include "OAIVerificationTransaction.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVerificationAccount;
class OAIVerificationTransaction;

class OAIUpdateVerification : public OAIObject {
public:
    OAIUpdateVerification();
    OAIUpdateVerification(QString json);
    ~OAIUpdateVerification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVerificationAccount getAccount() const;
    void setAccount(const OAIVerificationAccount &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    qint64 getAccountId() const;
    void setAccountId(const qint64 &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    qint64 getProviderAccountId() const;
    void setProviderAccountId(const qint64 &provider_account_id);
    bool is_provider_account_id_Set() const;
    bool is_provider_account_id_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QList<OAIVerificationTransaction> getTransaction() const;
    void setTransaction(const QList<OAIVerificationTransaction> &transaction);
    bool is_transaction_Set() const;
    bool is_transaction_Valid() const;

    QString getVerificationDate() const;
    void setVerificationDate(const QString &verification_date);
    bool is_verification_date_Set() const;
    bool is_verification_date_Valid() const;

    qint64 getVerificationId() const;
    void setVerificationId(const qint64 &verification_id);
    bool is_verification_id_Set() const;
    bool is_verification_id_Valid() const;

    QString getVerificationStatus() const;
    void setVerificationStatus(const QString &verification_status);
    bool is_verification_status_Set() const;
    bool is_verification_status_Valid() const;

    QString getVerificationType() const;
    void setVerificationType(const QString &verification_type);
    bool is_verification_type_Set() const;
    bool is_verification_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVerificationAccount m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    qint64 m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    qint64 m_provider_account_id;
    bool m_provider_account_id_isSet;
    bool m_provider_account_id_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QList<OAIVerificationTransaction> m_transaction;
    bool m_transaction_isSet;
    bool m_transaction_isValid;

    QString m_verification_date;
    bool m_verification_date_isSet;
    bool m_verification_date_isValid;

    qint64 m_verification_id;
    bool m_verification_id_isSet;
    bool m_verification_id_isValid;

    QString m_verification_status;
    bool m_verification_status_isSet;
    bool m_verification_status_isValid;

    QString m_verification_type;
    bool m_verification_type_isSet;
    bool m_verification_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateVerification)

#endif // OAIUpdateVerification_H
