/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerifyAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerifyAccount::OAIVerifyAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerifyAccount::OAIVerifyAccount() {
    this->initializeModel();
}

OAIVerifyAccount::~OAIVerifyAccount() {}

void OAIVerifyAccount::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;

    m_transaction_criteria_isSet = false;
    m_transaction_criteria_isValid = false;
}

void OAIVerifyAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVerifyAccount::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;

    m_transaction_criteria_isValid = ::OpenAPI::fromJsonValue(m_transaction_criteria, json[QString("transactionCriteria")]);
    m_transaction_criteria_isSet = !json[QString("transactionCriteria")].isNull() && m_transaction_criteria_isValid;
}

QString OAIVerifyAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVerifyAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_account.size() > 0) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    if (m_transaction_criteria.size() > 0) {
        obj.insert(QString("transactionCriteria"), ::OpenAPI::toJsonValue(m_transaction_criteria));
    }
    return obj;
}

QList<OAIVerifiedAccount> OAIVerifyAccount::getAccount() const {
    return m_account;
}
void OAIVerifyAccount::setAccount(const QList<OAIVerifiedAccount> &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIVerifyAccount::is_account_Set() const{
    return m_account_isSet;
}

bool OAIVerifyAccount::is_account_Valid() const{
    return m_account_isValid;
}

QList<OAIVerifyTransactionCriteria> OAIVerifyAccount::getTransactionCriteria() const {
    return m_transaction_criteria;
}
void OAIVerifyAccount::setTransactionCriteria(const QList<OAIVerifyTransactionCriteria> &transaction_criteria) {
    m_transaction_criteria = transaction_criteria;
    m_transaction_criteria_isSet = true;
}

bool OAIVerifyAccount::is_transaction_criteria_Set() const{
    return m_transaction_criteria_isSet;
}

bool OAIVerifyAccount::is_transaction_criteria_Valid() const{
    return m_transaction_criteria_isValid;
}

bool OAIVerifyAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_criteria.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVerifyAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
