/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * 
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include "OAIName.h"
#include "OAIUserResponsePreferences.h"
#include "OAIUserSession.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIName;
class OAIUserResponsePreferences;
class OAIUserSession;

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLoginName() const;
    void setLoginName(const QString &login_name);
    bool is_login_name_Set() const;
    bool is_login_name_Valid() const;

    OAIName getName() const;
    void setName(const OAIName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIUserResponsePreferences getPreferences() const;
    void setPreferences(const OAIUserResponsePreferences &preferences);
    bool is_preferences_Set() const;
    bool is_preferences_Valid() const;

    QString getRoleType() const;
    void setRoleType(const QString &role_type);
    bool is_role_type_Set() const;
    bool is_role_type_Valid() const;

    OAIUserSession getSession() const;
    void setSession(const OAIUserSession &session);
    bool is_session_Set() const;
    bool is_session_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_login_name;
    bool m_login_name_isSet;
    bool m_login_name_isValid;

    OAIName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIUserResponsePreferences m_preferences;
    bool m_preferences_isSet;
    bool m_preferences_isValid;

    QString m_role_type;
    bool m_role_type_isSet;
    bool m_role_type_isValid;

    OAIUserSession m_session;
    bool m_session_isSet;
    bool m_session_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
