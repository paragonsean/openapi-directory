/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVerifyTransactionCriteria.h
 *
 * 
 */

#ifndef OAIVerifyTransactionCriteria_H
#define OAIVerifyTransactionCriteria_H

#include <QJsonObject>

#include "OAITransaction.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransaction;

class OAIVerifyTransactionCriteria : public OAIObject {
public:
    OAIVerifyTransactionCriteria();
    OAIVerifyTransactionCriteria(QString json);
    ~OAIVerifyTransactionCriteria() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getBaseType() const;
    void setBaseType(const QString &base_type);
    bool is_base_type_Set() const;
    bool is_base_type_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDateVariance() const;
    void setDateVariance(const QString &date_variance);
    bool is_date_variance_Set() const;
    bool is_date_variance_Valid() const;

    QString getKeyword() const;
    void setKeyword(const QString &keyword);
    bool is_keyword_Set() const;
    bool is_keyword_Valid() const;

    QString getMatched() const;
    void setMatched(const QString &matched);
    bool is_matched_Set() const;
    bool is_matched_Valid() const;

    QList<OAITransaction> getVerifiedTransaction() const;
    void setVerifiedTransaction(const QList<OAITransaction> &verified_transaction);
    bool is_verified_transaction_Set() const;
    bool is_verified_transaction_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_base_type;
    bool m_base_type_isSet;
    bool m_base_type_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_date_variance;
    bool m_date_variance_isSet;
    bool m_date_variance_isValid;

    QString m_keyword;
    bool m_keyword_isSet;
    bool m_keyword_isValid;

    QString m_matched;
    bool m_matched_isSet;
    bool m_matched_isValid;

    QList<OAITransaction> m_verified_transaction;
    bool m_verified_transaction_isSet;
    bool m_verified_transaction_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVerifyTransactionCriteria)

#endif // OAIVerifyTransactionCriteria_H
