/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataExtractsTransaction.h
 *
 * 
 */

#ifndef OAIDataExtractsTransaction_H
#define OAIDataExtractsTransaction_H

#include <QJsonObject>

#include "OAIDescription.h"
#include "OAIMerchant.h"
#include "OAIMoney.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoney;
class OAIDescription;
class OAIMerchant;

class OAIDataExtractsTransaction : public OAIObject {
public:
    OAIDataExtractsTransaction();
    OAIDataExtractsTransaction(QString json);
    ~OAIDataExtractsTransaction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContainer() const;
    void setContainer(const QString &container);
    bool is_container_Set() const;
    bool is_container_Valid() const;

    qint64 getAccountId() const;
    void setAccountId(const qint64 &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    OAIMoney getAmount() const;
    void setAmount(const OAIMoney &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getBaseType() const;
    void setBaseType(const QString &base_type);
    bool is_base_type_Set() const;
    bool is_base_type_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    qint64 getCategoryId() const;
    void setCategoryId(const qint64 &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    QString getCategorySource() const;
    void setCategorySource(const QString &category_source);
    bool is_category_source_Set() const;
    bool is_category_source_Valid() const;

    QString getCategoryType() const;
    void setCategoryType(const QString &category_type);
    bool is_category_type_Set() const;
    bool is_category_type_Valid() const;

    QString getCheckNumber() const;
    void setCheckNumber(const QString &check_number);
    bool is_check_number_Set() const;
    bool is_check_number_Valid() const;

    OAIMoney getCommission() const;
    void setCommission(const OAIMoney &commission);
    bool is_commission_Set() const;
    bool is_commission_Valid() const;

    QString getCreatedDate() const;
    void setCreatedDate(const QString &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getCusipNumber() const;
    void setCusipNumber(const QString &cusip_number);
    bool is_cusip_number_Set() const;
    bool is_cusip_number_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    OAIDescription getDescription() const;
    void setDescription(const OAIDescription &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint64 getDetailCategoryId() const;
    void setDetailCategoryId(const qint64 &detail_category_id);
    bool is_detail_category_id_Set() const;
    bool is_detail_category_id_Valid() const;

    qint64 getHighLevelCategoryId() const;
    void setHighLevelCategoryId(const qint64 &high_level_category_id);
    bool is_high_level_category_id_Set() const;
    bool is_high_level_category_id_Valid() const;

    QString getHoldingDescription() const;
    void setHoldingDescription(const QString &holding_description);
    bool is_holding_description_Set() const;
    bool is_holding_description_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIMoney getInterest() const;
    void setInterest(const OAIMoney &interest);
    bool is_interest_Set() const;
    bool is_interest_Valid() const;

    bool isIsDeleted() const;
    void setIsDeleted(const bool &is_deleted);
    bool is_is_deleted_Set() const;
    bool is_is_deleted_Valid() const;

    bool isIsManual() const;
    void setIsManual(const bool &is_manual);
    bool is_is_manual_Set() const;
    bool is_is_manual_Valid() const;

    QString getIsin() const;
    void setIsin(const QString &isin);
    bool is_isin_Set() const;
    bool is_isin_Valid() const;

    QString getLastUpdated() const;
    void setLastUpdated(const QString &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getMemo() const;
    void setMemo(const QString &memo);
    bool is_memo_Set() const;
    bool is_memo_Valid() const;

    OAIMerchant getMerchant() const;
    void setMerchant(const OAIMerchant &merchant);
    bool is_merchant_Set() const;
    bool is_merchant_Valid() const;

    qint64 getParentCategoryId() const;
    void setParentCategoryId(const qint64 &parent_category_id);
    bool is_parent_category_id_Set() const;
    bool is_parent_category_id_Valid() const;

    QString getPostDate() const;
    void setPostDate(const QString &post_date);
    bool is_post_date_Set() const;
    bool is_post_date_Valid() const;

    OAIMoney getPrice() const;
    void setPrice(const OAIMoney &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    OAIMoney getPrincipal() const;
    void setPrincipal(const OAIMoney &principal);
    bool is_principal_Set() const;
    bool is_principal_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    OAIMoney getRunningBalance() const;
    void setRunningBalance(const OAIMoney &running_balance);
    bool is_running_balance_Set() const;
    bool is_running_balance_Valid() const;

    QString getSedol() const;
    void setSedol(const QString &sedol);
    bool is_sedol_Set() const;
    bool is_sedol_Valid() const;

    QString getSettleDate() const;
    void setSettleDate(const QString &settle_date);
    bool is_settle_date_Set() const;
    bool is_settle_date_Valid() const;

    QString getSourceId() const;
    void setSourceId(const QString &source_id);
    bool is_source_id_Set() const;
    bool is_source_id_Valid() const;

    QString getSourceType() const;
    void setSourceType(const QString &source_type);
    bool is_source_type_Set() const;
    bool is_source_type_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSubType() const;
    void setSubType(const QString &sub_type);
    bool is_sub_type_Set() const;
    bool is_sub_type_Valid() const;

    QString getSymbol() const;
    void setSymbol(const QString &symbol);
    bool is_symbol_Set() const;
    bool is_symbol_Valid() const;

    QString getTransactionDate() const;
    void setTransactionDate(const QString &transaction_date);
    bool is_transaction_date_Set() const;
    bool is_transaction_date_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getValoren() const;
    void setValoren(const QString &valoren);
    bool is_valoren_Set() const;
    bool is_valoren_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_container;
    bool m_container_isSet;
    bool m_container_isValid;

    qint64 m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    OAIMoney m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_base_type;
    bool m_base_type_isSet;
    bool m_base_type_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    qint64 m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    QString m_category_source;
    bool m_category_source_isSet;
    bool m_category_source_isValid;

    QString m_category_type;
    bool m_category_type_isSet;
    bool m_category_type_isValid;

    QString m_check_number;
    bool m_check_number_isSet;
    bool m_check_number_isValid;

    OAIMoney m_commission;
    bool m_commission_isSet;
    bool m_commission_isValid;

    QString m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_cusip_number;
    bool m_cusip_number_isSet;
    bool m_cusip_number_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    OAIDescription m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint64 m_detail_category_id;
    bool m_detail_category_id_isSet;
    bool m_detail_category_id_isValid;

    qint64 m_high_level_category_id;
    bool m_high_level_category_id_isSet;
    bool m_high_level_category_id_isValid;

    QString m_holding_description;
    bool m_holding_description_isSet;
    bool m_holding_description_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIMoney m_interest;
    bool m_interest_isSet;
    bool m_interest_isValid;

    bool m_is_deleted;
    bool m_is_deleted_isSet;
    bool m_is_deleted_isValid;

    bool m_is_manual;
    bool m_is_manual_isSet;
    bool m_is_manual_isValid;

    QString m_isin;
    bool m_isin_isSet;
    bool m_isin_isValid;

    QString m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_memo;
    bool m_memo_isSet;
    bool m_memo_isValid;

    OAIMerchant m_merchant;
    bool m_merchant_isSet;
    bool m_merchant_isValid;

    qint64 m_parent_category_id;
    bool m_parent_category_id_isSet;
    bool m_parent_category_id_isValid;

    QString m_post_date;
    bool m_post_date_isSet;
    bool m_post_date_isValid;

    OAIMoney m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    OAIMoney m_principal;
    bool m_principal_isSet;
    bool m_principal_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    OAIMoney m_running_balance;
    bool m_running_balance_isSet;
    bool m_running_balance_isValid;

    QString m_sedol;
    bool m_sedol_isSet;
    bool m_sedol_isValid;

    QString m_settle_date;
    bool m_settle_date_isSet;
    bool m_settle_date_isValid;

    QString m_source_id;
    bool m_source_id_isSet;
    bool m_source_id_isValid;

    QString m_source_type;
    bool m_source_type_isSet;
    bool m_source_type_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_sub_type;
    bool m_sub_type_isSet;
    bool m_sub_type_isValid;

    QString m_symbol;
    bool m_symbol_isSet;
    bool m_symbol_isValid;

    QString m_transaction_date;
    bool m_transaction_date_isSet;
    bool m_transaction_date_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_valoren;
    bool m_valoren_isSet;
    bool m_valoren_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataExtractsTransaction)

#endif // OAIDataExtractsTransaction_H
