/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFullAccountNumberList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFullAccountNumberList::OAIFullAccountNumberList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFullAccountNumberList::OAIFullAccountNumberList() {
    this->initializeModel();
}

OAIFullAccountNumberList::~OAIFullAccountNumberList() {}

void OAIFullAccountNumberList::initializeModel() {

    m_payment_account_number_isSet = false;
    m_payment_account_number_isValid = false;

    m_unmasked_account_number_isSet = false;
    m_unmasked_account_number_isValid = false;
}

void OAIFullAccountNumberList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFullAccountNumberList::fromJsonObject(QJsonObject json) {

    m_payment_account_number_isValid = ::OpenAPI::fromJsonValue(m_payment_account_number, json[QString("paymentAccountNumber")]);
    m_payment_account_number_isSet = !json[QString("paymentAccountNumber")].isNull() && m_payment_account_number_isValid;

    m_unmasked_account_number_isValid = ::OpenAPI::fromJsonValue(m_unmasked_account_number, json[QString("unmaskedAccountNumber")]);
    m_unmasked_account_number_isSet = !json[QString("unmaskedAccountNumber")].isNull() && m_unmasked_account_number_isValid;
}

QString OAIFullAccountNumberList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFullAccountNumberList::asJsonObject() const {
    QJsonObject obj;
    if (m_payment_account_number_isSet) {
        obj.insert(QString("paymentAccountNumber"), ::OpenAPI::toJsonValue(m_payment_account_number));
    }
    if (m_unmasked_account_number_isSet) {
        obj.insert(QString("unmaskedAccountNumber"), ::OpenAPI::toJsonValue(m_unmasked_account_number));
    }
    return obj;
}

QString OAIFullAccountNumberList::getPaymentAccountNumber() const {
    return m_payment_account_number;
}
void OAIFullAccountNumberList::setPaymentAccountNumber(const QString &payment_account_number) {
    m_payment_account_number = payment_account_number;
    m_payment_account_number_isSet = true;
}

bool OAIFullAccountNumberList::is_payment_account_number_Set() const{
    return m_payment_account_number_isSet;
}

bool OAIFullAccountNumberList::is_payment_account_number_Valid() const{
    return m_payment_account_number_isValid;
}

QString OAIFullAccountNumberList::getUnmaskedAccountNumber() const {
    return m_unmasked_account_number;
}
void OAIFullAccountNumberList::setUnmaskedAccountNumber(const QString &unmasked_account_number) {
    m_unmasked_account_number = unmasked_account_number;
    m_unmasked_account_number_isSet = true;
}

bool OAIFullAccountNumberList::is_unmasked_account_number_Set() const{
    return m_unmasked_account_number_isSet;
}

bool OAIFullAccountNumberList::is_unmasked_account_number_Valid() const{
    return m_unmasked_account_number_isValid;
}

bool OAIFullAccountNumberList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_payment_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unmasked_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFullAccountNumberList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
