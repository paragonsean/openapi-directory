/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataExtractsHolding.h
 *
 * 
 */

#ifndef OAIDataExtractsHolding_H
#define OAIDataExtractsHolding_H

#include <QJsonObject>

#include "OAIMoney.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMoney;

class OAIDataExtractsHolding : public OAIObject {
public:
    OAIDataExtractsHolding();
    OAIDataExtractsHolding(QString json);
    ~OAIDataExtractsHolding() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAccountId() const;
    void setAccountId(const qint64 &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    OAIMoney getAccruedIncome() const;
    void setAccruedIncome(const OAIMoney &accrued_income);
    bool is_accrued_income_Set() const;
    bool is_accrued_income_Valid() const;

    OAIMoney getAccruedInterest() const;
    void setAccruedInterest(const OAIMoney &accrued_interest);
    bool is_accrued_interest_Set() const;
    bool is_accrued_interest_Valid() const;

    double getContractQuantity() const;
    void setContractQuantity(const double &contract_quantity);
    bool is_contract_quantity_Set() const;
    bool is_contract_quantity_Valid() const;

    OAIMoney getCostBasis() const;
    void setCostBasis(const OAIMoney &cost_basis);
    bool is_cost_basis_Set() const;
    bool is_cost_basis_Valid() const;

    double getCouponRate() const;
    void setCouponRate(const double &coupon_rate);
    bool is_coupon_rate_Set() const;
    bool is_coupon_rate_Valid() const;

    QString getCreatedDate() const;
    void setCreatedDate(const QString &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getCusipNumber() const;
    void setCusipNumber(const QString &cusip_number);
    bool is_cusip_number_Set() const;
    bool is_cusip_number_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEnrichedDescription() const;
    void setEnrichedDescription(const QString &enriched_description);
    bool is_enriched_description_Set() const;
    bool is_enriched_description_Valid() const;

    double getExercisedQuantity() const;
    void setExercisedQuantity(const double &exercised_quantity);
    bool is_exercised_quantity_Set() const;
    bool is_exercised_quantity_Valid() const;

    QString getExpirationDate() const;
    void setExpirationDate(const QString &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    QString getGrantDate() const;
    void setGrantDate(const QString &grant_date);
    bool is_grant_date_Set() const;
    bool is_grant_date_Valid() const;

    QString getHoldingType() const;
    void setHoldingType(const QString &holding_type);
    bool is_holding_type_Set() const;
    bool is_holding_type_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getInterestRate() const;
    void setInterestRate(const double &interest_rate);
    bool is_interest_rate_Set() const;
    bool is_interest_rate_Valid() const;

    bool isIsShort() const;
    void setIsShort(const bool &is_short);
    bool is_is_short_Set() const;
    bool is_is_short_Valid() const;

    QString getIsin() const;
    void setIsin(const QString &isin);
    bool is_isin_Set() const;
    bool is_isin_Valid() const;

    QString getLastUpdated() const;
    void setLastUpdated(const QString &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QString getMatchStatus() const;
    void setMatchStatus(const QString &match_status);
    bool is_match_status_Set() const;
    bool is_match_status_Valid() const;

    QString getMaturityDate() const;
    void setMaturityDate(const QString &maturity_date);
    bool is_maturity_date_Set() const;
    bool is_maturity_date_Valid() const;

    QString getOptionType() const;
    void setOptionType(const QString &option_type);
    bool is_option_type_Set() const;
    bool is_option_type_Valid() const;

    OAIMoney getPrice() const;
    void setPrice(const OAIMoney &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    qint64 getProviderAccountId() const;
    void setProviderAccountId(const qint64 &provider_account_id);
    bool is_provider_account_id_Set() const;
    bool is_provider_account_id_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getSecurityStyle() const;
    void setSecurityStyle(const QString &security_style);
    bool is_security_style_Set() const;
    bool is_security_style_Valid() const;

    QString getSecurityType() const;
    void setSecurityType(const QString &security_type);
    bool is_security_type_Set() const;
    bool is_security_type_Valid() const;

    QString getSedol() const;
    void setSedol(const QString &sedol);
    bool is_sedol_Set() const;
    bool is_sedol_Valid() const;

    OAIMoney getSpread() const;
    void setSpread(const OAIMoney &spread);
    bool is_spread_Set() const;
    bool is_spread_Valid() const;

    OAIMoney getStrikePrice() const;
    void setStrikePrice(const OAIMoney &strike_price);
    bool is_strike_price_Set() const;
    bool is_strike_price_Valid() const;

    QString getSymbol() const;
    void setSymbol(const QString &symbol);
    bool is_symbol_Set() const;
    bool is_symbol_Valid() const;

    QString getTerm() const;
    void setTerm(const QString &term);
    bool is_term_Set() const;
    bool is_term_Valid() const;

    double getUnvestedQuantity() const;
    void setUnvestedQuantity(const double &unvested_quantity);
    bool is_unvested_quantity_Set() const;
    bool is_unvested_quantity_Valid() const;

    OAIMoney getUnvestedValue() const;
    void setUnvestedValue(const OAIMoney &unvested_value);
    bool is_unvested_value_Set() const;
    bool is_unvested_value_Valid() const;

    OAIMoney getValue() const;
    void setValue(const OAIMoney &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    double getVestedQuantity() const;
    void setVestedQuantity(const double &vested_quantity);
    bool is_vested_quantity_Set() const;
    bool is_vested_quantity_Valid() const;

    double getVestedSharesExercisable() const;
    void setVestedSharesExercisable(const double &vested_shares_exercisable);
    bool is_vested_shares_exercisable_Set() const;
    bool is_vested_shares_exercisable_Valid() const;

    OAIMoney getVestedValue() const;
    void setVestedValue(const OAIMoney &vested_value);
    bool is_vested_value_Set() const;
    bool is_vested_value_Valid() const;

    QString getVestingDate() const;
    void setVestingDate(const QString &vesting_date);
    bool is_vesting_date_Set() const;
    bool is_vesting_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    OAIMoney m_accrued_income;
    bool m_accrued_income_isSet;
    bool m_accrued_income_isValid;

    OAIMoney m_accrued_interest;
    bool m_accrued_interest_isSet;
    bool m_accrued_interest_isValid;

    double m_contract_quantity;
    bool m_contract_quantity_isSet;
    bool m_contract_quantity_isValid;

    OAIMoney m_cost_basis;
    bool m_cost_basis_isSet;
    bool m_cost_basis_isValid;

    double m_coupon_rate;
    bool m_coupon_rate_isSet;
    bool m_coupon_rate_isValid;

    QString m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_cusip_number;
    bool m_cusip_number_isSet;
    bool m_cusip_number_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_enriched_description;
    bool m_enriched_description_isSet;
    bool m_enriched_description_isValid;

    double m_exercised_quantity;
    bool m_exercised_quantity_isSet;
    bool m_exercised_quantity_isValid;

    QString m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    QString m_grant_date;
    bool m_grant_date_isSet;
    bool m_grant_date_isValid;

    QString m_holding_type;
    bool m_holding_type_isSet;
    bool m_holding_type_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_interest_rate;
    bool m_interest_rate_isSet;
    bool m_interest_rate_isValid;

    bool m_is_short;
    bool m_is_short_isSet;
    bool m_is_short_isValid;

    QString m_isin;
    bool m_isin_isSet;
    bool m_isin_isValid;

    QString m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QString m_match_status;
    bool m_match_status_isSet;
    bool m_match_status_isValid;

    QString m_maturity_date;
    bool m_maturity_date_isSet;
    bool m_maturity_date_isValid;

    QString m_option_type;
    bool m_option_type_isSet;
    bool m_option_type_isValid;

    OAIMoney m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    qint64 m_provider_account_id;
    bool m_provider_account_id_isSet;
    bool m_provider_account_id_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_security_style;
    bool m_security_style_isSet;
    bool m_security_style_isValid;

    QString m_security_type;
    bool m_security_type_isSet;
    bool m_security_type_isValid;

    QString m_sedol;
    bool m_sedol_isSet;
    bool m_sedol_isValid;

    OAIMoney m_spread;
    bool m_spread_isSet;
    bool m_spread_isValid;

    OAIMoney m_strike_price;
    bool m_strike_price_isSet;
    bool m_strike_price_isValid;

    QString m_symbol;
    bool m_symbol_isSet;
    bool m_symbol_isValid;

    QString m_term;
    bool m_term_isSet;
    bool m_term_isValid;

    double m_unvested_quantity;
    bool m_unvested_quantity_isSet;
    bool m_unvested_quantity_isValid;

    OAIMoney m_unvested_value;
    bool m_unvested_value_isSet;
    bool m_unvested_value_isValid;

    OAIMoney m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    double m_vested_quantity;
    bool m_vested_quantity_isSet;
    bool m_vested_quantity_isValid;

    double m_vested_shares_exercisable;
    bool m_vested_shares_exercisable_isSet;
    bool m_vested_shares_exercisable_isValid;

    OAIMoney m_vested_value;
    bool m_vested_value_isSet;
    bool m_vested_value_isValid;

    QString m_vesting_date;
    bool m_vesting_date_isSet;
    bool m_vesting_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataExtractsHolding)

#endif // OAIDataExtractsHolding_H
