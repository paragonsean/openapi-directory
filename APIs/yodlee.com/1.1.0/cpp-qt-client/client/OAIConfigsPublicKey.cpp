/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfigsPublicKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfigsPublicKey::OAIConfigsPublicKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfigsPublicKey::OAIConfigsPublicKey() {
    this->initializeModel();
}

OAIConfigsPublicKey::~OAIConfigsPublicKey() {}

void OAIConfigsPublicKey::initializeModel() {

    m_alias_isSet = false;
    m_alias_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;
}

void OAIConfigsPublicKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfigsPublicKey::fromJsonObject(QJsonObject json) {

    m_alias_isValid = ::OpenAPI::fromJsonValue(m_alias, json[QString("alias")]);
    m_alias_isSet = !json[QString("alias")].isNull() && m_alias_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;
}

QString OAIConfigsPublicKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfigsPublicKey::asJsonObject() const {
    QJsonObject obj;
    if (m_alias_isSet) {
        obj.insert(QString("alias"), ::OpenAPI::toJsonValue(m_alias));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    return obj;
}

QString OAIConfigsPublicKey::getAlias() const {
    return m_alias;
}
void OAIConfigsPublicKey::setAlias(const QString &alias) {
    m_alias = alias;
    m_alias_isSet = true;
}

bool OAIConfigsPublicKey::is_alias_Set() const{
    return m_alias_isSet;
}

bool OAIConfigsPublicKey::is_alias_Valid() const{
    return m_alias_isValid;
}

QString OAIConfigsPublicKey::getKey() const {
    return m_key;
}
void OAIConfigsPublicKey::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIConfigsPublicKey::is_key_Set() const{
    return m_key_isSet;
}

bool OAIConfigsPublicKey::is_key_Valid() const{
    return m_key_isValid;
}

bool OAIConfigsPublicKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alias_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfigsPublicKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
