/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoanPayoffDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoanPayoffDetails::OAILoanPayoffDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoanPayoffDetails::OAILoanPayoffDetails() {
    this->initializeModel();
}

OAILoanPayoffDetails::~OAILoanPayoffDetails() {}

void OAILoanPayoffDetails::initializeModel() {

    m_outstanding_balance_isSet = false;
    m_outstanding_balance_isValid = false;

    m_pay_by_date_isSet = false;
    m_pay_by_date_isValid = false;

    m_payoff_amount_isSet = false;
    m_payoff_amount_isValid = false;
}

void OAILoanPayoffDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoanPayoffDetails::fromJsonObject(QJsonObject json) {

    m_outstanding_balance_isValid = ::OpenAPI::fromJsonValue(m_outstanding_balance, json[QString("outstandingBalance")]);
    m_outstanding_balance_isSet = !json[QString("outstandingBalance")].isNull() && m_outstanding_balance_isValid;

    m_pay_by_date_isValid = ::OpenAPI::fromJsonValue(m_pay_by_date, json[QString("payByDate")]);
    m_pay_by_date_isSet = !json[QString("payByDate")].isNull() && m_pay_by_date_isValid;

    m_payoff_amount_isValid = ::OpenAPI::fromJsonValue(m_payoff_amount, json[QString("payoffAmount")]);
    m_payoff_amount_isSet = !json[QString("payoffAmount")].isNull() && m_payoff_amount_isValid;
}

QString OAILoanPayoffDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoanPayoffDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_outstanding_balance.isSet()) {
        obj.insert(QString("outstandingBalance"), ::OpenAPI::toJsonValue(m_outstanding_balance));
    }
    if (m_pay_by_date_isSet) {
        obj.insert(QString("payByDate"), ::OpenAPI::toJsonValue(m_pay_by_date));
    }
    if (m_payoff_amount.isSet()) {
        obj.insert(QString("payoffAmount"), ::OpenAPI::toJsonValue(m_payoff_amount));
    }
    return obj;
}

OAIMoney OAILoanPayoffDetails::getOutstandingBalance() const {
    return m_outstanding_balance;
}
void OAILoanPayoffDetails::setOutstandingBalance(const OAIMoney &outstanding_balance) {
    m_outstanding_balance = outstanding_balance;
    m_outstanding_balance_isSet = true;
}

bool OAILoanPayoffDetails::is_outstanding_balance_Set() const{
    return m_outstanding_balance_isSet;
}

bool OAILoanPayoffDetails::is_outstanding_balance_Valid() const{
    return m_outstanding_balance_isValid;
}

QString OAILoanPayoffDetails::getPayByDate() const {
    return m_pay_by_date;
}
void OAILoanPayoffDetails::setPayByDate(const QString &pay_by_date) {
    m_pay_by_date = pay_by_date;
    m_pay_by_date_isSet = true;
}

bool OAILoanPayoffDetails::is_pay_by_date_Set() const{
    return m_pay_by_date_isSet;
}

bool OAILoanPayoffDetails::is_pay_by_date_Valid() const{
    return m_pay_by_date_isValid;
}

OAIMoney OAILoanPayoffDetails::getPayoffAmount() const {
    return m_payoff_amount;
}
void OAILoanPayoffDetails::setPayoffAmount(const OAIMoney &payoff_amount) {
    m_payoff_amount = payoff_amount;
    m_payoff_amount_isSet = true;
}

bool OAILoanPayoffDetails::is_payoff_amount_Set() const{
    return m_payoff_amount_isSet;
}

bool OAILoanPayoffDetails::is_payoff_amount_Valid() const{
    return m_payoff_amount_isValid;
}

bool OAILoanPayoffDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_outstanding_balance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_by_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payoff_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoanPayoffDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
