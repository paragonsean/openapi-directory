/**
 * Yodlee Core APIs
 * This file describes the Yodlee Platform APIs using the swagger notation. You can use this swagger file to generate client side SDKs to the Yodlee Platform APIs for many different programming languages. Yodlee supports the Java SDK and it is available <a href=\"https://developer.yodlee.com/java-sdk-overview \">here</a>. You can generate a client SDK for Python, Java, JavaScript, PHP or other languages according to your development needs. For more details about the APIs, refer to <a href=\"https://developer.yodlee.com/docs/api/1.1/Overview\">Yodlee API v1.1 - Overview</a>.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: developer@yodlee.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentProfile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentProfile::OAIPaymentProfile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentProfile::OAIPaymentProfile() {
    this->initializeModel();
}

OAIPaymentProfile::~OAIPaymentProfile() {}

void OAIPaymentProfile::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_identifier_isSet = false;
    m_identifier_isValid = false;

    m_payment_bank_transfer_code_isSet = false;
    m_payment_bank_transfer_code_isValid = false;
}

void OAIPaymentProfile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentProfile::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_identifier_isValid = ::OpenAPI::fromJsonValue(m_identifier, json[QString("identifier")]);
    m_identifier_isSet = !json[QString("identifier")].isNull() && m_identifier_isValid;

    m_payment_bank_transfer_code_isValid = ::OpenAPI::fromJsonValue(m_payment_bank_transfer_code, json[QString("paymentBankTransferCode")]);
    m_payment_bank_transfer_code_isSet = !json[QString("paymentBankTransferCode")].isNull() && m_payment_bank_transfer_code_isValid;
}

QString OAIPaymentProfile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentProfile::asJsonObject() const {
    QJsonObject obj;
    if (m_address.size() > 0) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_identifier.isSet()) {
        obj.insert(QString("identifier"), ::OpenAPI::toJsonValue(m_identifier));
    }
    if (m_payment_bank_transfer_code.isSet()) {
        obj.insert(QString("paymentBankTransferCode"), ::OpenAPI::toJsonValue(m_payment_bank_transfer_code));
    }
    return obj;
}

QList<OAIAccountAddress> OAIPaymentProfile::getAddress() const {
    return m_address;
}
void OAIPaymentProfile::setAddress(const QList<OAIAccountAddress> &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIPaymentProfile::is_address_Set() const{
    return m_address_isSet;
}

bool OAIPaymentProfile::is_address_Valid() const{
    return m_address_isValid;
}

OAIPaymentIdentifier OAIPaymentProfile::getIdentifier() const {
    return m_identifier;
}
void OAIPaymentProfile::setIdentifier(const OAIPaymentIdentifier &identifier) {
    m_identifier = identifier;
    m_identifier_isSet = true;
}

bool OAIPaymentProfile::is_identifier_Set() const{
    return m_identifier_isSet;
}

bool OAIPaymentProfile::is_identifier_Valid() const{
    return m_identifier_isValid;
}

OAIPaymentBankTransferCode OAIPaymentProfile::getPaymentBankTransferCode() const {
    return m_payment_bank_transfer_code;
}
void OAIPaymentProfile::setPaymentBankTransferCode(const OAIPaymentBankTransferCode &payment_bank_transfer_code) {
    m_payment_bank_transfer_code = payment_bank_transfer_code;
    m_payment_bank_transfer_code_isSet = true;
}

bool OAIPaymentProfile::is_payment_bank_transfer_code_Set() const{
    return m_payment_bank_transfer_code_isSet;
}

bool OAIPaymentProfile::is_payment_bank_transfer_code_Valid() const{
    return m_payment_bank_transfer_code_isValid;
}

bool OAIPaymentProfile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_identifier.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_bank_transfer_code.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentProfile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
