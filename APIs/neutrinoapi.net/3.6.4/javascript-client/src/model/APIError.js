/**
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APIError model module.
 * @module model/APIError
 * @version 3.6.4
 */
class APIError {
    /**
     * Constructs a new <code>APIError</code>.
     * @alias module:model/APIError
     * @param apiError {Number} API error code. If set and > 0 then an API error has occurred your request could not be completed
     * @param apiErrorMsg {String} API error message
     */
    constructor(apiError, apiErrorMsg) { 
        
        APIError.initialize(this, apiError, apiErrorMsg);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, apiError, apiErrorMsg) { 
        obj['api-error'] = apiError;
        obj['api-error-msg'] = apiErrorMsg;
    }

    /**
     * Constructs a <code>APIError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIError} obj Optional instance to populate.
     * @return {module:model/APIError} The populated <code>APIError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIError();

            if (data.hasOwnProperty('api-error')) {
                obj['api-error'] = ApiClient.convertToType(data['api-error'], 'Number');
            }
            if (data.hasOwnProperty('api-error-msg')) {
                obj['api-error-msg'] = ApiClient.convertToType(data['api-error-msg'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>APIError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>APIError</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of APIError.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['api-error-msg'] && !(typeof data['api-error-msg'] === 'string' || data['api-error-msg'] instanceof String)) {
            throw new Error("Expected the field `api-error-msg` to be a primitive type in the JSON string but got " + data['api-error-msg']);
        }

        return true;
    }


}

APIError.RequiredProperties = ["api-error", "api-error-msg"];

/**
 * API error code. If set and > 0 then an API error has occurred your request could not be completed
 * @member {Number} api-error
 */
APIError.prototype['api-error'] = undefined;

/**
 * API error message
 * @member {String} api-error-msg
 */
APIError.prototype['api-error-msg'] = undefined;






export default APIError;

