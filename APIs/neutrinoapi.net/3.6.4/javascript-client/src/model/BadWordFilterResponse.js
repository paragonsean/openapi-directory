/**
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BadWordFilterResponse model module.
 * @module model/BadWordFilterResponse
 * @version 3.6.4
 */
class BadWordFilterResponse {
    /**
     * Constructs a new <code>BadWordFilterResponse</code>.
     * @alias module:model/BadWordFilterResponse
     * @param badWordsList {Array.<String>} An array of the bad words found
     * @param badWordsTotal {Number} Total number of bad words detected
     * @param censoredContent {String} The censored content (only set if censor-character has been set)
     * @param isBad {Boolean} Does the text contain bad words
     */
    constructor(badWordsList, badWordsTotal, censoredContent, isBad) { 
        
        BadWordFilterResponse.initialize(this, badWordsList, badWordsTotal, censoredContent, isBad);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, badWordsList, badWordsTotal, censoredContent, isBad) { 
        obj['bad-words-list'] = badWordsList;
        obj['bad-words-total'] = badWordsTotal;
        obj['censored-content'] = censoredContent;
        obj['is-bad'] = isBad;
    }

    /**
     * Constructs a <code>BadWordFilterResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BadWordFilterResponse} obj Optional instance to populate.
     * @return {module:model/BadWordFilterResponse} The populated <code>BadWordFilterResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BadWordFilterResponse();

            if (data.hasOwnProperty('bad-words-list')) {
                obj['bad-words-list'] = ApiClient.convertToType(data['bad-words-list'], ['String']);
            }
            if (data.hasOwnProperty('bad-words-total')) {
                obj['bad-words-total'] = ApiClient.convertToType(data['bad-words-total'], 'Number');
            }
            if (data.hasOwnProperty('censored-content')) {
                obj['censored-content'] = ApiClient.convertToType(data['censored-content'], 'String');
            }
            if (data.hasOwnProperty('is-bad')) {
                obj['is-bad'] = ApiClient.convertToType(data['is-bad'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BadWordFilterResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BadWordFilterResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BadWordFilterResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['bad-words-list'])) {
            throw new Error("Expected the field `bad-words-list` to be an array in the JSON data but got " + data['bad-words-list']);
        }
        // ensure the json data is a string
        if (data['censored-content'] && !(typeof data['censored-content'] === 'string' || data['censored-content'] instanceof String)) {
            throw new Error("Expected the field `censored-content` to be a primitive type in the JSON string but got " + data['censored-content']);
        }

        return true;
    }


}

BadWordFilterResponse.RequiredProperties = ["bad-words-list", "bad-words-total", "censored-content", "is-bad"];

/**
 * An array of the bad words found
 * @member {Array.<String>} bad-words-list
 */
BadWordFilterResponse.prototype['bad-words-list'] = undefined;

/**
 * Total number of bad words detected
 * @member {Number} bad-words-total
 */
BadWordFilterResponse.prototype['bad-words-total'] = undefined;

/**
 * The censored content (only set if censor-character has been set)
 * @member {String} censored-content
 */
BadWordFilterResponse.prototype['censored-content'] = undefined;

/**
 * Does the text contain bad words
 * @member {Boolean} is-bad
 */
BadWordFilterResponse.prototype['is-bad'] = undefined;






export default BadWordFilterResponse;

