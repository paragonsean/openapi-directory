/**
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPhonePlaybackResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPhonePlaybackResponse::OAIPhonePlaybackResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPhonePlaybackResponse::OAIPhonePlaybackResponse() {
    this->initializeModel();
}

OAIPhonePlaybackResponse::~OAIPhonePlaybackResponse() {}

void OAIPhonePlaybackResponse::initializeModel() {

    m_calling_isSet = false;
    m_calling_isValid = false;

    m_number_valid_isSet = false;
    m_number_valid_isValid = false;
}

void OAIPhonePlaybackResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPhonePlaybackResponse::fromJsonObject(QJsonObject json) {

    m_calling_isValid = ::OpenAPI::fromJsonValue(m_calling, json[QString("calling")]);
    m_calling_isSet = !json[QString("calling")].isNull() && m_calling_isValid;

    m_number_valid_isValid = ::OpenAPI::fromJsonValue(m_number_valid, json[QString("number-valid")]);
    m_number_valid_isSet = !json[QString("number-valid")].isNull() && m_number_valid_isValid;
}

QString OAIPhonePlaybackResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPhonePlaybackResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_calling_isSet) {
        obj.insert(QString("calling"), ::OpenAPI::toJsonValue(m_calling));
    }
    if (m_number_valid_isSet) {
        obj.insert(QString("number-valid"), ::OpenAPI::toJsonValue(m_number_valid));
    }
    return obj;
}

bool OAIPhonePlaybackResponse::isCalling() const {
    return m_calling;
}
void OAIPhonePlaybackResponse::setCalling(const bool &calling) {
    m_calling = calling;
    m_calling_isSet = true;
}

bool OAIPhonePlaybackResponse::is_calling_Set() const{
    return m_calling_isSet;
}

bool OAIPhonePlaybackResponse::is_calling_Valid() const{
    return m_calling_isValid;
}

bool OAIPhonePlaybackResponse::isNumberValid() const {
    return m_number_valid;
}
void OAIPhonePlaybackResponse::setNumberValid(const bool &number_valid) {
    m_number_valid = number_valid;
    m_number_valid_isSet = true;
}

bool OAIPhonePlaybackResponse::is_number_valid_Set() const{
    return m_number_valid_isSet;
}

bool OAIPhonePlaybackResponse::is_number_valid_Valid() const{
    return m_number_valid_isValid;
}

bool OAIPhonePlaybackResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_calling_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_valid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPhonePlaybackResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_calling_isValid && m_number_valid_isValid && true;
}

} // namespace OpenAPI
