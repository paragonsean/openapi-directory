/**
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUALookupResponse.h
 *
 * 
 */

#ifndef OAIUALookupResponse_H
#define OAIUALookupResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUALookupResponse : public OAIObject {
public:
    OAIUALookupResponse();
    OAIUALookupResponse(QString json);
    ~OAIUALookupResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBrowserEngine() const;
    void setBrowserEngine(const QString &browser_engine);
    bool is_browser_engine_Set() const;
    bool is_browser_engine_Valid() const;

    QString getBrowserRelease() const;
    void setBrowserRelease(const QString &browser_release);
    bool is_browser_release_Set() const;
    bool is_browser_release_Valid() const;

    QString getDeviceBrand() const;
    void setDeviceBrand(const QString &device_brand);
    bool is_device_brand_Set() const;
    bool is_device_brand_Valid() const;

    double getDeviceHeightPx() const;
    void setDeviceHeightPx(const double &device_height_px);
    bool is_device_height_px_Set() const;
    bool is_device_height_px_Valid() const;

    QString getDeviceModel() const;
    void setDeviceModel(const QString &device_model);
    bool is_device_model_Set() const;
    bool is_device_model_Valid() const;

    QString getDeviceModelCode() const;
    void setDeviceModelCode(const QString &device_model_code);
    bool is_device_model_code_Set() const;
    bool is_device_model_code_Valid() const;

    double getDevicePixelRatio() const;
    void setDevicePixelRatio(const double &device_pixel_ratio);
    bool is_device_pixel_ratio_Set() const;
    bool is_device_pixel_ratio_Valid() const;

    double getDevicePpi() const;
    void setDevicePpi(const double &device_ppi);
    bool is_device_ppi_Set() const;
    bool is_device_ppi_Valid() const;

    double getDevicePrice() const;
    void setDevicePrice(const double &device_price);
    bool is_device_price_Set() const;
    bool is_device_price_Valid() const;

    QString getDeviceRelease() const;
    void setDeviceRelease(const QString &device_release);
    bool is_device_release_Set() const;
    bool is_device_release_Valid() const;

    QString getDeviceResolution() const;
    void setDeviceResolution(const QString &device_resolution);
    bool is_device_resolution_Set() const;
    bool is_device_resolution_Valid() const;

    double getDeviceWidthPx() const;
    void setDeviceWidthPx(const double &device_width_px);
    bool is_device_width_px_Set() const;
    bool is_device_width_px_Valid() const;

    bool isIsMobile() const;
    void setIsMobile(const bool &is_mobile);
    bool is_is_mobile_Set() const;
    bool is_is_mobile_Valid() const;

    bool isIsWebview() const;
    void setIsWebview(const bool &is_webview);
    bool is_is_webview_Set() const;
    bool is_is_webview_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOs() const;
    void setOs(const QString &os);
    bool is_os_Set() const;
    bool is_os_Valid() const;

    QString getOsFamily() const;
    void setOsFamily(const QString &os_family);
    bool is_os_family_Set() const;
    bool is_os_family_Valid() const;

    QString getOsVersion() const;
    void setOsVersion(const QString &os_version);
    bool is_os_version_Set() const;
    bool is_os_version_Valid() const;

    QString getOsVersionMajor() const;
    void setOsVersionMajor(const QString &os_version_major);
    bool is_os_version_major_Set() const;
    bool is_os_version_major_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUa() const;
    void setUa(const QString &ua);
    bool is_ua_Set() const;
    bool is_ua_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getVersionMajor() const;
    void setVersionMajor(const QString &version_major);
    bool is_version_major_Set() const;
    bool is_version_major_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_browser_engine;
    bool m_browser_engine_isSet;
    bool m_browser_engine_isValid;

    QString m_browser_release;
    bool m_browser_release_isSet;
    bool m_browser_release_isValid;

    QString m_device_brand;
    bool m_device_brand_isSet;
    bool m_device_brand_isValid;

    double m_device_height_px;
    bool m_device_height_px_isSet;
    bool m_device_height_px_isValid;

    QString m_device_model;
    bool m_device_model_isSet;
    bool m_device_model_isValid;

    QString m_device_model_code;
    bool m_device_model_code_isSet;
    bool m_device_model_code_isValid;

    double m_device_pixel_ratio;
    bool m_device_pixel_ratio_isSet;
    bool m_device_pixel_ratio_isValid;

    double m_device_ppi;
    bool m_device_ppi_isSet;
    bool m_device_ppi_isValid;

    double m_device_price;
    bool m_device_price_isSet;
    bool m_device_price_isValid;

    QString m_device_release;
    bool m_device_release_isSet;
    bool m_device_release_isValid;

    QString m_device_resolution;
    bool m_device_resolution_isSet;
    bool m_device_resolution_isValid;

    double m_device_width_px;
    bool m_device_width_px_isSet;
    bool m_device_width_px_isValid;

    bool m_is_mobile;
    bool m_is_mobile_isSet;
    bool m_is_mobile_isValid;

    bool m_is_webview;
    bool m_is_webview_isSet;
    bool m_is_webview_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_os;
    bool m_os_isSet;
    bool m_os_isValid;

    QString m_os_family;
    bool m_os_family_isSet;
    bool m_os_family_isValid;

    QString m_os_version;
    bool m_os_version_isSet;
    bool m_os_version_isValid;

    QString m_os_version_major;
    bool m_os_version_major_isSet;
    bool m_os_version_major_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_ua;
    bool m_ua_isSet;
    bool m_ua_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_version_major;
    bool m_version_major_isSet;
    bool m_version_major_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUALookupResponse)

#endif // OAIUALookupResponse_H
