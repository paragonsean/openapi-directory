/**
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIPInfoResponse.h
 *
 * 
 */

#ifndef OAIIPInfoResponse_H
#define OAIIPInfoResponse_H

#include <QJsonObject>

#include "OAITimezone.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITimezone;

class OAIIPInfoResponse : public OAIObject {
public:
    OAIIPInfoResponse();
    OAIIPInfoResponse(QString json);
    ~OAIIPInfoResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getContinentCode() const;
    void setContinentCode(const QString &continent_code);
    bool is_continent_code_Set() const;
    bool is_continent_code_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QString getCountryCode3() const;
    void setCountryCode3(const QString &country_code3);
    bool is_country_code3_Set() const;
    bool is_country_code3_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getHostDomain() const;
    void setHostDomain(const QString &host_domain);
    bool is_host_domain_Set() const;
    bool is_host_domain_Valid() const;

    QString getHostname() const;
    void setHostname(const QString &hostname);
    bool is_hostname_Set() const;
    bool is_hostname_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    bool isIsBogon() const;
    void setIsBogon(const bool &is_bogon);
    bool is_is_bogon_Set() const;
    bool is_is_bogon_Valid() const;

    bool isIsV4Mapped() const;
    void setIsV4Mapped(const bool &is_v4_mapped);
    bool is_is_v4_mapped_Set() const;
    bool is_is_v4_mapped_Valid() const;

    bool isIsV6() const;
    void setIsV6(const bool &is_v6);
    bool is_is_v6_Set() const;
    bool is_is_v6_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getRegionCode() const;
    void setRegionCode(const QString &region_code);
    bool is_region_code_Set() const;
    bool is_region_code_Valid() const;

    OAITimezone getTimezone() const;
    void setTimezone(const OAITimezone &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    bool isRValid() const;
    void setRValid(const bool &r_valid);
    bool is_r_valid_Set() const;
    bool is_r_valid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_continent_code;
    bool m_continent_code_isSet;
    bool m_continent_code_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QString m_country_code3;
    bool m_country_code3_isSet;
    bool m_country_code3_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_host_domain;
    bool m_host_domain_isSet;
    bool m_host_domain_isValid;

    QString m_hostname;
    bool m_hostname_isSet;
    bool m_hostname_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    bool m_is_bogon;
    bool m_is_bogon_isSet;
    bool m_is_bogon_isValid;

    bool m_is_v4_mapped;
    bool m_is_v4_mapped_isSet;
    bool m_is_v4_mapped_isValid;

    bool m_is_v6;
    bool m_is_v6_isSet;
    bool m_is_v6_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_region_code;
    bool m_region_code_isSet;
    bool m_region_code_isValid;

    OAITimezone m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    bool m_r_valid;
    bool m_r_valid_isSet;
    bool m_r_valid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIPInfoResponse)

#endif // OAIIPInfoResponse_H
