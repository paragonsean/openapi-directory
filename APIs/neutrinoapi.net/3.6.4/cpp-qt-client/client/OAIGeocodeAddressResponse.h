/**
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGeocodeAddressResponse.h
 *
 * 
 */

#ifndef OAIGeocodeAddressResponse_H
#define OAIGeocodeAddressResponse_H

#include <QJsonObject>

#include "OAILocation.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILocation;

class OAIGeocodeAddressResponse : public OAIObject {
public:
    OAIGeocodeAddressResponse();
    OAIGeocodeAddressResponse(QString json);
    ~OAIGeocodeAddressResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFound() const;
    void setFound(const qint32 &found);
    bool is_found_Set() const;
    bool is_found_Valid() const;

    QList<OAILocation> getLocations() const;
    void setLocations(const QList<OAILocation> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_found;
    bool m_found_isSet;
    bool m_found_isValid;

    QList<OAILocation> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGeocodeAddressResponse)

#endif // OAIGeocodeAddressResponse_H
