/**
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPhoneValidateResponse.h
 *
 * 
 */

#ifndef OAIPhoneValidateResponse_H
#define OAIPhoneValidateResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPhoneValidateResponse : public OAIObject {
public:
    OAIPhoneValidateResponse();
    OAIPhoneValidateResponse(QString json);
    ~OAIPhoneValidateResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QString getCountryCode3() const;
    void setCountryCode3(const QString &country_code3);
    bool is_country_code3_Set() const;
    bool is_country_code3_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getInternationalCallingCode() const;
    void setInternationalCallingCode(const QString &international_calling_code);
    bool is_international_calling_code_Set() const;
    bool is_international_calling_code_Valid() const;

    QString getInternationalNumber() const;
    void setInternationalNumber(const QString &international_number);
    bool is_international_number_Set() const;
    bool is_international_number_Valid() const;

    bool isIsMobile() const;
    void setIsMobile(const bool &is_mobile);
    bool is_is_mobile_Set() const;
    bool is_is_mobile_Valid() const;

    QString getLocalNumber() const;
    void setLocalNumber(const QString &local_number);
    bool is_local_number_Set() const;
    bool is_local_number_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getPrefixNetwork() const;
    void setPrefixNetwork(const QString &prefix_network);
    bool is_prefix_network_Set() const;
    bool is_prefix_network_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    bool isRValid() const;
    void setRValid(const bool &r_valid);
    bool is_r_valid_Set() const;
    bool is_r_valid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QString m_country_code3;
    bool m_country_code3_isSet;
    bool m_country_code3_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_international_calling_code;
    bool m_international_calling_code_isSet;
    bool m_international_calling_code_isValid;

    QString m_international_number;
    bool m_international_number_isSet;
    bool m_international_number_isValid;

    bool m_is_mobile;
    bool m_is_mobile_isSet;
    bool m_is_mobile_isValid;

    QString m_local_number;
    bool m_local_number_isSet;
    bool m_local_number_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_prefix_network;
    bool m_prefix_network_isSet;
    bool m_prefix_network_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    bool m_r_valid;
    bool m_r_valid_isSet;
    bool m_r_valid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPhoneValidateResponse)

#endif // OAIPhoneValidateResponse_H
