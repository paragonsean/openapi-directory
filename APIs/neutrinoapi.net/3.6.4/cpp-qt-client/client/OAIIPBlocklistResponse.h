/**
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIPBlocklistResponse.h
 *
 * 
 */

#ifndef OAIIPBlocklistResponse_H
#define OAIIPBlocklistResponse_H

#include <QJsonObject>

#include "OAIBlocklistSensor.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBlocklistSensor;

class OAIIPBlocklistResponse : public OAIObject {
public:
    OAIIPBlocklistResponse();
    OAIIPBlocklistResponse(QString json);
    ~OAIIPBlocklistResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getBlocklists() const;
    void setBlocklists(const QList<QString> &blocklists);
    bool is_blocklists_Set() const;
    bool is_blocklists_Valid() const;

    QString getCidr() const;
    void setCidr(const QString &cidr);
    bool is_cidr_Set() const;
    bool is_cidr_Valid() const;

    QString getIp() const;
    void setIp(const QString &ip);
    bool is_ip_Set() const;
    bool is_ip_Valid() const;

    bool isIsBot() const;
    void setIsBot(const bool &is_bot);
    bool is_is_bot_Set() const;
    bool is_is_bot_Valid() const;

    bool isIsDshield() const;
    void setIsDshield(const bool &is_dshield);
    bool is_is_dshield_Set() const;
    bool is_is_dshield_Valid() const;

    bool isIsExploitBot() const;
    void setIsExploitBot(const bool &is_exploit_bot);
    bool is_is_exploit_bot_Set() const;
    bool is_is_exploit_bot_Valid() const;

    bool isIsHijacked() const;
    void setIsHijacked(const bool &is_hijacked);
    bool is_is_hijacked_Set() const;
    bool is_is_hijacked_Valid() const;

    bool isIsListed() const;
    void setIsListed(const bool &is_listed);
    bool is_is_listed_Set() const;
    bool is_is_listed_Valid() const;

    bool isIsMalware() const;
    void setIsMalware(const bool &is_malware);
    bool is_is_malware_Set() const;
    bool is_is_malware_Valid() const;

    bool isIsProxy() const;
    void setIsProxy(const bool &is_proxy);
    bool is_is_proxy_Set() const;
    bool is_is_proxy_Valid() const;

    bool isIsSpamBot() const;
    void setIsSpamBot(const bool &is_spam_bot);
    bool is_is_spam_bot_Set() const;
    bool is_is_spam_bot_Valid() const;

    bool isIsSpider() const;
    void setIsSpider(const bool &is_spider);
    bool is_is_spider_Set() const;
    bool is_is_spider_Valid() const;

    bool isIsSpyware() const;
    void setIsSpyware(const bool &is_spyware);
    bool is_is_spyware_Set() const;
    bool is_is_spyware_Valid() const;

    bool isIsTor() const;
    void setIsTor(const bool &is_tor);
    bool is_is_tor_Set() const;
    bool is_is_tor_Valid() const;

    bool isIsVpn() const;
    void setIsVpn(const bool &is_vpn);
    bool is_is_vpn_Set() const;
    bool is_is_vpn_Valid() const;

    qint32 getLastSeen() const;
    void setLastSeen(const qint32 &last_seen);
    bool is_last_seen_Set() const;
    bool is_last_seen_Valid() const;

    qint32 getListCount() const;
    void setListCount(const qint32 &list_count);
    bool is_list_count_Set() const;
    bool is_list_count_Valid() const;

    QList<OAIBlocklistSensor> getSensors() const;
    void setSensors(const QList<OAIBlocklistSensor> &sensors);
    bool is_sensors_Set() const;
    bool is_sensors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_blocklists;
    bool m_blocklists_isSet;
    bool m_blocklists_isValid;

    QString m_cidr;
    bool m_cidr_isSet;
    bool m_cidr_isValid;

    QString m_ip;
    bool m_ip_isSet;
    bool m_ip_isValid;

    bool m_is_bot;
    bool m_is_bot_isSet;
    bool m_is_bot_isValid;

    bool m_is_dshield;
    bool m_is_dshield_isSet;
    bool m_is_dshield_isValid;

    bool m_is_exploit_bot;
    bool m_is_exploit_bot_isSet;
    bool m_is_exploit_bot_isValid;

    bool m_is_hijacked;
    bool m_is_hijacked_isSet;
    bool m_is_hijacked_isValid;

    bool m_is_listed;
    bool m_is_listed_isSet;
    bool m_is_listed_isValid;

    bool m_is_malware;
    bool m_is_malware_isSet;
    bool m_is_malware_isValid;

    bool m_is_proxy;
    bool m_is_proxy_isSet;
    bool m_is_proxy_isValid;

    bool m_is_spam_bot;
    bool m_is_spam_bot_isSet;
    bool m_is_spam_bot_isValid;

    bool m_is_spider;
    bool m_is_spider_isSet;
    bool m_is_spider_isValid;

    bool m_is_spyware;
    bool m_is_spyware_isSet;
    bool m_is_spyware_isValid;

    bool m_is_tor;
    bool m_is_tor_isSet;
    bool m_is_tor_isValid;

    bool m_is_vpn;
    bool m_is_vpn_isSet;
    bool m_is_vpn_isValid;

    qint32 m_last_seen;
    bool m_last_seen_isSet;
    bool m_last_seen_isValid;

    qint32 m_list_count;
    bool m_list_count_isSet;
    bool m_list_count_isValid;

    QList<OAIBlocklistSensor> m_sensors;
    bool m_sensors_isSet;
    bool m_sensors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIPBlocklistResponse)

#endif // OAIIPBlocklistResponse_H
