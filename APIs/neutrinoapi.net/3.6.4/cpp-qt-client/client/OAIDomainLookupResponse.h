/**
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDomainLookupResponse.h
 *
 * 
 */

#ifndef OAIDomainLookupResponse_H
#define OAIDomainLookupResponse_H

#include <QJsonObject>

#include "OAIBlocklistSensor.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBlocklistSensor;

class OAIDomainLookupResponse : public OAIObject {
public:
    OAIDomainLookupResponse();
    OAIDomainLookupResponse(QString json);
    ~OAIDomainLookupResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAge() const;
    void setAge(const qint32 &age);
    bool is_age_Set() const;
    bool is_age_Valid() const;

    QList<QString> getBlocklists() const;
    void setBlocklists(const QList<QString> &blocklists);
    bool is_blocklists_Set() const;
    bool is_blocklists_Valid() const;

    QString getDnsProvider() const;
    void setDnsProvider(const QString &dns_provider);
    bool is_dns_provider_Set() const;
    bool is_dns_provider_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getFqdn() const;
    void setFqdn(const QString &fqdn);
    bool is_fqdn_Set() const;
    bool is_fqdn_Valid() const;

    bool isIsAdult() const;
    void setIsAdult(const bool &is_adult);
    bool is_is_adult_Set() const;
    bool is_is_adult_Valid() const;

    bool isIsGov() const;
    void setIsGov(const bool &is_gov);
    bool is_is_gov_Set() const;
    bool is_is_gov_Valid() const;

    bool isIsMalicious() const;
    void setIsMalicious(const bool &is_malicious);
    bool is_is_malicious_Set() const;
    bool is_is_malicious_Valid() const;

    bool isIsOpennic() const;
    void setIsOpennic(const bool &is_opennic);
    bool is_is_opennic_Set() const;
    bool is_is_opennic_Valid() const;

    bool isIsPending() const;
    void setIsPending(const bool &is_pending);
    bool is_is_pending_Set() const;
    bool is_is_pending_Valid() const;

    bool isIsSubdomain() const;
    void setIsSubdomain(const bool &is_subdomain);
    bool is_is_subdomain_Set() const;
    bool is_is_subdomain_Valid() const;

    QString getMailProvider() const;
    void setMailProvider(const QString &mail_provider);
    bool is_mail_provider_Set() const;
    bool is_mail_provider_Valid() const;

    qint32 getRank() const;
    void setRank(const qint32 &rank);
    bool is_rank_Set() const;
    bool is_rank_Valid() const;

    QString getRegisteredDate() const;
    void setRegisteredDate(const QString &registered_date);
    bool is_registered_date_Set() const;
    bool is_registered_date_Valid() const;

    qint32 getRegistrarId() const;
    void setRegistrarId(const qint32 &registrar_id);
    bool is_registrar_id_Set() const;
    bool is_registrar_id_Valid() const;

    QString getRegistrarName() const;
    void setRegistrarName(const QString &registrar_name);
    bool is_registrar_name_Set() const;
    bool is_registrar_name_Valid() const;

    QList<OAIBlocklistSensor> getSensors() const;
    void setSensors(const QList<OAIBlocklistSensor> &sensors);
    bool is_sensors_Set() const;
    bool is_sensors_Valid() const;

    QString getTld() const;
    void setTld(const QString &tld);
    bool is_tld_Set() const;
    bool is_tld_Valid() const;

    QString getTldCc() const;
    void setTldCc(const QString &tld_cc);
    bool is_tld_cc_Set() const;
    bool is_tld_cc_Valid() const;

    bool isRValid() const;
    void setRValid(const bool &r_valid);
    bool is_r_valid_Set() const;
    bool is_r_valid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_age;
    bool m_age_isSet;
    bool m_age_isValid;

    QList<QString> m_blocklists;
    bool m_blocklists_isSet;
    bool m_blocklists_isValid;

    QString m_dns_provider;
    bool m_dns_provider_isSet;
    bool m_dns_provider_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_fqdn;
    bool m_fqdn_isSet;
    bool m_fqdn_isValid;

    bool m_is_adult;
    bool m_is_adult_isSet;
    bool m_is_adult_isValid;

    bool m_is_gov;
    bool m_is_gov_isSet;
    bool m_is_gov_isValid;

    bool m_is_malicious;
    bool m_is_malicious_isSet;
    bool m_is_malicious_isValid;

    bool m_is_opennic;
    bool m_is_opennic_isSet;
    bool m_is_opennic_isValid;

    bool m_is_pending;
    bool m_is_pending_isSet;
    bool m_is_pending_isValid;

    bool m_is_subdomain;
    bool m_is_subdomain_isSet;
    bool m_is_subdomain_isValid;

    QString m_mail_provider;
    bool m_mail_provider_isSet;
    bool m_mail_provider_isValid;

    qint32 m_rank;
    bool m_rank_isSet;
    bool m_rank_isValid;

    QString m_registered_date;
    bool m_registered_date_isSet;
    bool m_registered_date_isValid;

    qint32 m_registrar_id;
    bool m_registrar_id_isSet;
    bool m_registrar_id_isValid;

    QString m_registrar_name;
    bool m_registrar_name_isSet;
    bool m_registrar_name_isValid;

    QList<OAIBlocklistSensor> m_sensors;
    bool m_sensors_isSet;
    bool m_sensors_isValid;

    QString m_tld;
    bool m_tld_isSet;
    bool m_tld_isValid;

    QString m_tld_cc;
    bool m_tld_cc_isSet;
    bool m_tld_cc_isValid;

    bool m_r_valid;
    bool m_r_valid_isSet;
    bool m_r_valid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDomainLookupResponse)

#endif // OAIDomainLookupResponse_H
