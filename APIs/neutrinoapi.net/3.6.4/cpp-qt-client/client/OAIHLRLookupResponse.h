/**
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHLRLookupResponse.h
 *
 * 
 */

#ifndef OAIHLRLookupResponse_H
#define OAIHLRLookupResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHLRLookupResponse : public OAIObject {
public:
    OAIHLRLookupResponse();
    OAIHLRLookupResponse(QString json);
    ~OAIHLRLookupResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QString getCountryCode3() const;
    void setCountryCode3(const QString &country_code3);
    bool is_country_code3_Set() const;
    bool is_country_code3_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QString getCurrentNetwork() const;
    void setCurrentNetwork(const QString &current_network);
    bool is_current_network_Set() const;
    bool is_current_network_Valid() const;

    QString getHlrStatus() const;
    void setHlrStatus(const QString &hlr_status);
    bool is_hlr_status_Set() const;
    bool is_hlr_status_Valid() const;

    bool isHlrValid() const;
    void setHlrValid(const bool &hlr_valid);
    bool is_hlr_valid_Set() const;
    bool is_hlr_valid_Valid() const;

    QString getImsi() const;
    void setImsi(const QString &imsi);
    bool is_imsi_Set() const;
    bool is_imsi_Valid() const;

    QString getInternationalCallingCode() const;
    void setInternationalCallingCode(const QString &international_calling_code);
    bool is_international_calling_code_Set() const;
    bool is_international_calling_code_Valid() const;

    QString getInternationalNumber() const;
    void setInternationalNumber(const QString &international_number);
    bool is_international_number_Set() const;
    bool is_international_number_Valid() const;

    bool isIsMobile() const;
    void setIsMobile(const bool &is_mobile);
    bool is_is_mobile_Set() const;
    bool is_is_mobile_Valid() const;

    bool isIsPorted() const;
    void setIsPorted(const bool &is_ported);
    bool is_is_ported_Set() const;
    bool is_is_ported_Valid() const;

    bool isIsRoaming() const;
    void setIsRoaming(const bool &is_roaming);
    bool is_is_roaming_Set() const;
    bool is_is_roaming_Valid() const;

    QString getLocalNumber() const;
    void setLocalNumber(const QString &local_number);
    bool is_local_number_Set() const;
    bool is_local_number_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getMcc() const;
    void setMcc(const QString &mcc);
    bool is_mcc_Set() const;
    bool is_mcc_Valid() const;

    QString getMnc() const;
    void setMnc(const QString &mnc);
    bool is_mnc_Set() const;
    bool is_mnc_Valid() const;

    QString getMsc() const;
    void setMsc(const QString &msc);
    bool is_msc_Set() const;
    bool is_msc_Valid() const;

    QString getMsin() const;
    void setMsin(const QString &msin);
    bool is_msin_Set() const;
    bool is_msin_Valid() const;

    QString getNumberType() const;
    void setNumberType(const QString &number_type);
    bool is_number_type_Set() const;
    bool is_number_type_Valid() const;

    bool isNumberValid() const;
    void setNumberValid(const bool &number_valid);
    bool is_number_valid_Set() const;
    bool is_number_valid_Valid() const;

    QString getOriginNetwork() const;
    void setOriginNetwork(const QString &origin_network);
    bool is_origin_network_Set() const;
    bool is_origin_network_Valid() const;

    QString getPortedNetwork() const;
    void setPortedNetwork(const QString &ported_network);
    bool is_ported_network_Set() const;
    bool is_ported_network_Valid() const;

    QString getRoamingCountryCode() const;
    void setRoamingCountryCode(const QString &roaming_country_code);
    bool is_roaming_country_code_Set() const;
    bool is_roaming_country_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QString m_country_code3;
    bool m_country_code3_isSet;
    bool m_country_code3_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QString m_current_network;
    bool m_current_network_isSet;
    bool m_current_network_isValid;

    QString m_hlr_status;
    bool m_hlr_status_isSet;
    bool m_hlr_status_isValid;

    bool m_hlr_valid;
    bool m_hlr_valid_isSet;
    bool m_hlr_valid_isValid;

    QString m_imsi;
    bool m_imsi_isSet;
    bool m_imsi_isValid;

    QString m_international_calling_code;
    bool m_international_calling_code_isSet;
    bool m_international_calling_code_isValid;

    QString m_international_number;
    bool m_international_number_isSet;
    bool m_international_number_isValid;

    bool m_is_mobile;
    bool m_is_mobile_isSet;
    bool m_is_mobile_isValid;

    bool m_is_ported;
    bool m_is_ported_isSet;
    bool m_is_ported_isValid;

    bool m_is_roaming;
    bool m_is_roaming_isSet;
    bool m_is_roaming_isValid;

    QString m_local_number;
    bool m_local_number_isSet;
    bool m_local_number_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_mcc;
    bool m_mcc_isSet;
    bool m_mcc_isValid;

    QString m_mnc;
    bool m_mnc_isSet;
    bool m_mnc_isValid;

    QString m_msc;
    bool m_msc_isSet;
    bool m_msc_isValid;

    QString m_msin;
    bool m_msin_isSet;
    bool m_msin_isValid;

    QString m_number_type;
    bool m_number_type_isSet;
    bool m_number_type_isValid;

    bool m_number_valid;
    bool m_number_valid_isSet;
    bool m_number_valid_isValid;

    QString m_origin_network;
    bool m_origin_network_isSet;
    bool m_origin_network_isValid;

    QString m_ported_network;
    bool m_ported_network_isSet;
    bool m_ported_network_isValid;

    QString m_roaming_country_code;
    bool m_roaming_country_code_isSet;
    bool m_roaming_country_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHLRLookupResponse)

#endif // OAIHLRLookupResponse_H
