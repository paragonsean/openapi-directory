/**
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBadWordFilterResponse.h
 *
 * 
 */

#ifndef OAIBadWordFilterResponse_H
#define OAIBadWordFilterResponse_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBadWordFilterResponse : public OAIObject {
public:
    OAIBadWordFilterResponse();
    OAIBadWordFilterResponse(QString json);
    ~OAIBadWordFilterResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getBadWordsList() const;
    void setBadWordsList(const QList<QString> &bad_words_list);
    bool is_bad_words_list_Set() const;
    bool is_bad_words_list_Valid() const;

    qint32 getBadWordsTotal() const;
    void setBadWordsTotal(const qint32 &bad_words_total);
    bool is_bad_words_total_Set() const;
    bool is_bad_words_total_Valid() const;

    QString getCensoredContent() const;
    void setCensoredContent(const QString &censored_content);
    bool is_censored_content_Set() const;
    bool is_censored_content_Valid() const;

    bool isIsBad() const;
    void setIsBad(const bool &is_bad);
    bool is_is_bad_Set() const;
    bool is_is_bad_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_bad_words_list;
    bool m_bad_words_list_isSet;
    bool m_bad_words_list_isValid;

    qint32 m_bad_words_total;
    bool m_bad_words_total_isSet;
    bool m_bad_words_total_isValid;

    QString m_censored_content;
    bool m_censored_content_isSet;
    bool m_censored_content_isValid;

    bool m_is_bad;
    bool m_is_bad_isSet;
    bool m_is_bad_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBadWordFilterResponse)

#endif // OAIBadWordFilterResponse_H
