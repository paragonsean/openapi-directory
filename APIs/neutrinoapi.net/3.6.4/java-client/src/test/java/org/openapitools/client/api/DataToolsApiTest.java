/*
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIError;
import org.openapitools.client.model.BadWordFilterResponse;
import org.openapitools.client.model.EmailValidateResponse;
import org.openapitools.client.model.PhoneValidateResponse;
import org.openapitools.client.model.UALookupResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataToolsApi
 */
@Disabled
public class DataToolsApiTest {

    private final DataToolsApi api = new DataToolsApi();

    /**
     * Bad Word Filter
     *
     * Detect bad words, swear words and profanity in a given text
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void badWordFilterTest() throws ApiException {
        String content = null;
        String catalog = null;
        String censorCharacter = null;
        BadWordFilterResponse response = api.badWordFilter(content, catalog, censorCharacter);
        // TODO: test validations
    }

    /**
     * Email Validate
     *
     * Parse, validate and clean an email address
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void emailValidateTest() throws ApiException {
        String email = null;
        Boolean fixTypos = null;
        EmailValidateResponse response = api.emailValidate(email, fixTypos);
        // TODO: test validations
    }

    /**
     * Phone Validate
     *
     * Parse, validate and get location information about a phone number
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void phoneValidateTest() throws ApiException {
        String number = null;
        String countryCode = null;
        String ip = null;
        PhoneValidateResponse response = api.phoneValidate(number, countryCode, ip);
        // TODO: test validations
    }

    /**
     * UA Lookup
     *
     * Parse, validate and get detailed user-agent information from a user agent string or from client hints
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uALookupTest() throws ApiException {
        String ua = null;
        String uaVersion = null;
        String uaPlatform = null;
        String uaPlatformVersion = null;
        String uaMobile = null;
        String deviceModel = null;
        String deviceBrand = null;
        UALookupResponse response = api.uALookup(ua, uaVersion, uaPlatform, uaPlatformVersion, uaMobile, deviceModel, deviceBrand);
        // TODO: test validations
    }

}
