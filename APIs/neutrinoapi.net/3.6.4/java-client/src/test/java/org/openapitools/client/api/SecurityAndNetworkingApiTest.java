/*
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIError;
import org.openapitools.client.model.DomainLookupResponse;
import org.openapitools.client.model.EmailVerifyResponse;
import java.io.File;
import org.openapitools.client.model.HostReputationResponse;
import org.openapitools.client.model.IPBlocklistResponse;
import org.openapitools.client.model.IPProbeResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SecurityAndNetworkingApi
 */
@Disabled
public class SecurityAndNetworkingApiTest {

    private final SecurityAndNetworkingApi api = new SecurityAndNetworkingApi();

    /**
     * Domain Lookup
     *
     * Retrieve domain name details and detect potentially malicious or dangerous domains
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void domainLookupTest() throws ApiException {
        String host = null;
        Boolean live = null;
        DomainLookupResponse response = api.domainLookup(host, live);
        // TODO: test validations
    }

    /**
     * Email Verify
     *
     * SMTP based email address verification
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void emailVerifyTest() throws ApiException {
        String email = null;
        Boolean fixTypos = null;
        EmailVerifyResponse response = api.emailVerify(email, fixTypos);
        // TODO: test validations
    }

    /**
     * Host Reputation
     *
     * Check the reputation of an IP address, domain name or URL against a comprehensive list of blacklists and blocklists
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void hostReputationTest() throws ApiException {
        String host = null;
        Integer listRating = null;
        String zones = null;
        HostReputationResponse response = api.hostReputation(host, listRating, zones);
        // TODO: test validations
    }

    /**
     * IP Blocklist
     *
     * The IP Blocklist API will detect potentially malicious or dangerous IP addresses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iPBlocklistTest() throws ApiException {
        String ip = null;
        Boolean vpnLookup = null;
        IPBlocklistResponse response = api.iPBlocklist(ip, vpnLookup);
        // TODO: test validations
    }

    /**
     * IP Blocklist Download
     *
     * This API is a direct feed to our IP blocklist data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iPBlocklistDownloadTest() throws ApiException {
        String format = null;
        Boolean includeVpn = null;
        Boolean cidr = null;
        Boolean ip6 = null;
        File response = api.iPBlocklistDownload(format, includeVpn, cidr, ip6);
        // TODO: test validations
    }

    /**
     * IP Probe
     *
     * Execute a realtime network probe against an IPv4 or IPv6 address
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iPProbeTest() throws ApiException {
        String ip = null;
        IPProbeResponse response = api.iPProbe(ip);
        // TODO: test validations
    }

}
