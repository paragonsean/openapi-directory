/*
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for BINLookupResponse
 */
public class BINLookupResponseTest {
    private final BINLookupResponse model = new BINLookupResponse();

    /**
     * Model tests for BINLookupResponse
     */
    @Test
    public void testBINLookupResponse() {
        // TODO: test BINLookupResponse
    }

    /**
     * Test the property 'binNumber'
     */
    @Test
    public void binNumberTest() {
        // TODO: test binNumber
    }

    /**
     * Test the property 'cardBrand'
     */
    @Test
    public void cardBrandTest() {
        // TODO: test cardBrand
    }

    /**
     * Test the property 'cardCategory'
     */
    @Test
    public void cardCategoryTest() {
        // TODO: test cardCategory
    }

    /**
     * Test the property 'cardType'
     */
    @Test
    public void cardTypeTest() {
        // TODO: test cardType
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'countryCode'
     */
    @Test
    public void countryCodeTest() {
        // TODO: test countryCode
    }

    /**
     * Test the property 'countryCode3'
     */
    @Test
    public void countryCode3Test() {
        // TODO: test countryCode3
    }

    /**
     * Test the property 'currencyCode'
     */
    @Test
    public void currencyCodeTest() {
        // TODO: test currencyCode
    }

    /**
     * Test the property 'ipBlocklisted'
     */
    @Test
    public void ipBlocklistedTest() {
        // TODO: test ipBlocklisted
    }

    /**
     * Test the property 'ipBlocklists'
     */
    @Test
    public void ipBlocklistsTest() {
        // TODO: test ipBlocklists
    }

    /**
     * Test the property 'ipCity'
     */
    @Test
    public void ipCityTest() {
        // TODO: test ipCity
    }

    /**
     * Test the property 'ipCountry'
     */
    @Test
    public void ipCountryTest() {
        // TODO: test ipCountry
    }

    /**
     * Test the property 'ipCountryCode'
     */
    @Test
    public void ipCountryCodeTest() {
        // TODO: test ipCountryCode
    }

    /**
     * Test the property 'ipCountryCode3'
     */
    @Test
    public void ipCountryCode3Test() {
        // TODO: test ipCountryCode3
    }

    /**
     * Test the property 'ipMatchesBin'
     */
    @Test
    public void ipMatchesBinTest() {
        // TODO: test ipMatchesBin
    }

    /**
     * Test the property 'ipRegion'
     */
    @Test
    public void ipRegionTest() {
        // TODO: test ipRegion
    }

    /**
     * Test the property 'isCommercial'
     */
    @Test
    public void isCommercialTest() {
        // TODO: test isCommercial
    }

    /**
     * Test the property 'isPrepaid'
     */
    @Test
    public void isPrepaidTest() {
        // TODO: test isPrepaid
    }

    /**
     * Test the property 'issuer'
     */
    @Test
    public void issuerTest() {
        // TODO: test issuer
    }

    /**
     * Test the property 'issuerPhone'
     */
    @Test
    public void issuerPhoneTest() {
        // TODO: test issuerPhone
    }

    /**
     * Test the property 'issuerWebsite'
     */
    @Test
    public void issuerWebsiteTest() {
        // TODO: test issuerWebsite
    }

    /**
     * Test the property 'valid'
     */
    @Test
    public void validTest() {
        // TODO: test valid
    }

}
