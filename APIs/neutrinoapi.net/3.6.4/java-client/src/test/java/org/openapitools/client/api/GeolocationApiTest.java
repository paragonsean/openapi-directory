/*
 * Neutrino API
 * The general-purpose API
 *
 * The version of the OpenAPI document: 3.6.4
 * Contact: ops@neutrinoapi.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIError;
import org.openapitools.client.model.GeocodeAddressResponse;
import org.openapitools.client.model.GeocodeReverseResponse;
import org.openapitools.client.model.IPInfoResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GeolocationApi
 */
@Disabled
public class GeolocationApiTest {

    private final GeolocationApi api = new GeolocationApi();

    /**
     * Geocode Address
     *
     * Geocode an address, partial address or just the name of a place
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void geocodeAddressTest() throws ApiException {
        String address = null;
        String houseNumber = null;
        String street = null;
        String city = null;
        String county = null;
        String state = null;
        String postalCode = null;
        String countryCode = null;
        String languageCode = null;
        Boolean fuzzySearch = null;
        GeocodeAddressResponse response = api.geocodeAddress(address, houseNumber, street, city, county, state, postalCode, countryCode, languageCode, fuzzySearch);
        // TODO: test validations
    }

    /**
     * Geocode Reverse
     *
     * Convert a geographic coordinate (latitude and longitude) into a real world address
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void geocodeReverseTest() throws ApiException {
        String latitude = null;
        String longitude = null;
        String languageCode = null;
        String zoom = null;
        GeocodeReverseResponse response = api.geocodeReverse(latitude, longitude, languageCode, zoom);
        // TODO: test validations
    }

    /**
     * IP Info
     *
     * Get location information about an IP address and do reverse DNS (PTR) lookups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void iPInfoTest() throws ApiException {
        String ip = null;
        Boolean reverseLookup = null;
        IPInfoResponse response = api.iPInfo(ip, reverseLookup);
        // TODO: test validations
    }

}
