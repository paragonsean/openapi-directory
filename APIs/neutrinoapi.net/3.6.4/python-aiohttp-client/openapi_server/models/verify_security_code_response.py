# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VerifySecurityCodeResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, verified: bool=None):
        """VerifySecurityCodeResponse - a model defined in OpenAPI

        :param verified: The verified of this VerifySecurityCodeResponse.
        """
        self.openapi_types = {
            'verified': bool
        }

        self.attribute_map = {
            'verified': 'verified'
        }

        self._verified = verified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VerifySecurityCodeResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VerifySecurityCodeResponse of this VerifySecurityCodeResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def verified(self):
        """Gets the verified of this VerifySecurityCodeResponse.

        True if the code is valid

        :return: The verified of this VerifySecurityCodeResponse.
        :rtype: bool
        """
        return self._verified

    @verified.setter
    def verified(self, verified):
        """Sets the verified of this VerifySecurityCodeResponse.

        True if the code is valid

        :param verified: The verified of this VerifySecurityCodeResponse.
        :type verified: bool
        """
        if verified is None:
            raise ValueError("Invalid value for `verified`, must not be `None`")

        self._verified = verified
