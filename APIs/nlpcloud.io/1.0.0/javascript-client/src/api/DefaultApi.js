/**
 * NLPCloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DependenciesOut from '../model/DependenciesOut';
import EntitiesOut from '../model/EntitiesOut';
import HTTPValidationError from '../model/HTTPValidationError';
import SentenceDependenciesOut from '../model/SentenceDependenciesOut';
import UserRequestIn from '../model/UserRequestIn';
import VersionOut from '../model/VersionOut';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the readDependenciesV1EnCoreWebSmDependenciesPost operation.
     * @callback module:api/DefaultApi~readDependenciesV1EnCoreWebSmDependenciesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DependenciesOut} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read Dependencies
     * @param {module:model/UserRequestIn} userRequestIn 
     * @param {module:api/DefaultApi~readDependenciesV1EnCoreWebSmDependenciesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DependenciesOut}
     */
    readDependenciesV1EnCoreWebSmDependenciesPost(userRequestIn, callback) {
      let postBody = userRequestIn;
      // verify the required parameter 'userRequestIn' is set
      if (userRequestIn === undefined || userRequestIn === null) {
        throw new Error("Missing the required parameter 'userRequestIn' when calling readDependenciesV1EnCoreWebSmDependenciesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DependenciesOut;
      return this.apiClient.callApi(
        '/v1/en_core_web_sm/dependencies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the readEntitiesV1EnCoreWebSmEntitiesPost operation.
     * @callback module:api/DefaultApi~readEntitiesV1EnCoreWebSmEntitiesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EntitiesOut} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read Entities
     * @param {module:model/UserRequestIn} userRequestIn 
     * @param {module:api/DefaultApi~readEntitiesV1EnCoreWebSmEntitiesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EntitiesOut}
     */
    readEntitiesV1EnCoreWebSmEntitiesPost(userRequestIn, callback) {
      let postBody = userRequestIn;
      // verify the required parameter 'userRequestIn' is set
      if (userRequestIn === undefined || userRequestIn === null) {
        throw new Error("Missing the required parameter 'userRequestIn' when calling readEntitiesV1EnCoreWebSmEntitiesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EntitiesOut;
      return this.apiClient.callApi(
        '/v1/en_core_web_sm/entities', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the readRootV1EnCoreWebSmGet operation.
     * @callback module:api/DefaultApi~readRootV1EnCoreWebSmGetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read Root
     * @param {module:api/DefaultApi~readRootV1EnCoreWebSmGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    readRootV1EnCoreWebSmGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/en_core_web_sm/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the readSentenceDependenciesV1EnCoreWebSmSentenceDependenciesPost operation.
     * @callback module:api/DefaultApi~readSentenceDependenciesV1EnCoreWebSmSentenceDependenciesPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SentenceDependenciesOut} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read Sentence Dependencies
     * @param {module:model/UserRequestIn} userRequestIn 
     * @param {module:api/DefaultApi~readSentenceDependenciesV1EnCoreWebSmSentenceDependenciesPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SentenceDependenciesOut}
     */
    readSentenceDependenciesV1EnCoreWebSmSentenceDependenciesPost(userRequestIn, callback) {
      let postBody = userRequestIn;
      // verify the required parameter 'userRequestIn' is set
      if (userRequestIn === undefined || userRequestIn === null) {
        throw new Error("Missing the required parameter 'userRequestIn' when calling readSentenceDependenciesV1EnCoreWebSmSentenceDependenciesPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SentenceDependenciesOut;
      return this.apiClient.callApi(
        '/v1/en_core_web_sm/sentence-dependencies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the readVersionV1EnCoreWebSmVersionGet operation.
     * @callback module:api/DefaultApi~readVersionV1EnCoreWebSmVersionGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VersionOut} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Read Version
     * @param {module:api/DefaultApi~readVersionV1EnCoreWebSmVersionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VersionOut}
     */
    readVersionV1EnCoreWebSmVersionGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VersionOut;
      return this.apiClient.callApi(
        '/v1/en_core_web_sm/version', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
