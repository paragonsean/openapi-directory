/**
 * NLPCloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntityOut from './EntityOut';

/**
 * The EntitiesOut model module.
 * @module model/EntitiesOut
 * @version 1.0.0
 */
class EntitiesOut {
    /**
     * Constructs a new <code>EntitiesOut</code>.
     * @alias module:model/EntitiesOut
     * @param entities {Array.<module:model/EntityOut>} 
     */
    constructor(entities) { 
        
        EntitiesOut.initialize(this, entities);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, entities) { 
        obj['entities'] = entities;
    }

    /**
     * Constructs a <code>EntitiesOut</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntitiesOut} obj Optional instance to populate.
     * @return {module:model/EntitiesOut} The populated <code>EntitiesOut</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntitiesOut();

            if (data.hasOwnProperty('entities')) {
                obj['entities'] = ApiClient.convertToType(data['entities'], [EntityOut]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EntitiesOut</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EntitiesOut</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EntitiesOut.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['entities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['entities'])) {
                throw new Error("Expected the field `entities` to be an array in the JSON data but got " + data['entities']);
            }
            // validate the optional field `entities` (array)
            for (const item of data['entities']) {
                EntityOut.validateJSON(item);
            };
        }

        return true;
    }


}

EntitiesOut.RequiredProperties = ["entities"];

/**
 * @member {Array.<module:model/EntityOut>} entities
 */
EntitiesOut.prototype['entities'] = undefined;






export default EntitiesOut;

