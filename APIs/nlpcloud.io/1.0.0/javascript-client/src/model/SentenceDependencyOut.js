/**
 * NLPCloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DependenciesOut from './DependenciesOut';

/**
 * The SentenceDependencyOut model module.
 * @module model/SentenceDependencyOut
 * @version 1.0.0
 */
class SentenceDependencyOut {
    /**
     * Constructs a new <code>SentenceDependencyOut</code>.
     * @alias module:model/SentenceDependencyOut
     * @param dependencies {module:model/DependenciesOut} 
     * @param sentence {String} 
     */
    constructor(dependencies, sentence) { 
        
        SentenceDependencyOut.initialize(this, dependencies, sentence);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dependencies, sentence) { 
        obj['dependencies'] = dependencies;
        obj['sentence'] = sentence;
    }

    /**
     * Constructs a <code>SentenceDependencyOut</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SentenceDependencyOut} obj Optional instance to populate.
     * @return {module:model/SentenceDependencyOut} The populated <code>SentenceDependencyOut</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SentenceDependencyOut();

            if (data.hasOwnProperty('dependencies')) {
                obj['dependencies'] = DependenciesOut.constructFromObject(data['dependencies']);
            }
            if (data.hasOwnProperty('sentence')) {
                obj['sentence'] = ApiClient.convertToType(data['sentence'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SentenceDependencyOut</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SentenceDependencyOut</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SentenceDependencyOut.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `dependencies`
        if (data['dependencies']) { // data not null
          DependenciesOut.validateJSON(data['dependencies']);
        }
        // ensure the json data is a string
        if (data['sentence'] && !(typeof data['sentence'] === 'string' || data['sentence'] instanceof String)) {
            throw new Error("Expected the field `sentence` to be a primitive type in the JSON string but got " + data['sentence']);
        }

        return true;
    }


}

SentenceDependencyOut.RequiredProperties = ["dependencies", "sentence"];

/**
 * @member {module:model/DependenciesOut} dependencies
 */
SentenceDependencyOut.prototype['dependencies'] = undefined;

/**
 * @member {String} sentence
 */
SentenceDependencyOut.prototype['sentence'] = undefined;






export default SentenceDependencyOut;

