/**
 * NLPCloud
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VersionOut model module.
 * @module model/VersionOut
 * @version 1.0.0
 */
class VersionOut {
    /**
     * Constructs a new <code>VersionOut</code>.
     * @alias module:model/VersionOut
     * @param spacy {String} 
     */
    constructor(spacy) { 
        
        VersionOut.initialize(this, spacy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, spacy) { 
        obj['spacy'] = spacy;
    }

    /**
     * Constructs a <code>VersionOut</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VersionOut} obj Optional instance to populate.
     * @return {module:model/VersionOut} The populated <code>VersionOut</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VersionOut();

            if (data.hasOwnProperty('spacy')) {
                obj['spacy'] = ApiClient.convertToType(data['spacy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VersionOut</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VersionOut</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VersionOut.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['spacy'] && !(typeof data['spacy'] === 'string' || data['spacy'] instanceof String)) {
            throw new Error("Expected the field `spacy` to be a primitive type in the JSON string but got " + data['spacy']);
        }

        return true;
    }


}

VersionOut.RequiredProperties = ["spacy"];

/**
 * @member {String} spacy
 */
VersionOut.prototype['spacy'] = undefined;






export default VersionOut;

