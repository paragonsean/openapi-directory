openapi: 3.0.1
info:
  contact:
    name: libertyapi@o2.cz
  description: "Transit API can be used to obtain time-aggregated data representing\
    \ moving the people between various spatial points within the Czech Republic.\
    \ Having A - 'from' and B - 'to' points, the API can return count of people traveling\
    \ from A to B or people that are from A and traveling to B, etc. The mobility\
    \ data is based on moving mobile stations in O2 mobile network."
  license:
    name: O2 Czech Republic a.s.
    url: https://developer.o2.cz/portal/vop
  title: Mobility API
  version: 1.2.0
  x-apisguru-categories:
  - telecom
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://pbs.twimg.com/profile_images/443742048365985792/Zech6Z-m_400x400.png
  x-origin:
  - format: swagger
    url: https://developer.o2.cz/mobility/sandbox/api/swagger.json
    version: "2.0"
  x-providerName: o2.cz
  x-serviceName: mobility
servers:
- url: https://developer.o2.cz/mobility/sandbox/api
tags:
- name: info
- name: transit
paths:
  /info:
    get:
      operationId: get_info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResult'
          description: Response with the requested content.
      summary: Information about versions of application and data.
      tags:
      - info
      x-openapi-router-controller: openapi_server.controllers.info_controller
  /transit/{from}/{to}:
    get:
      description: "Get count of objects that were moving between basic residential\
        \ units or objects that were visiting these basic residential units. Specific\
        \ object's occurence type in the base residential unit can be requested. If\
        \ none occurence type is present in the request or both occurence types are\
        \ zero, the result will be aggregation of all types of occurence for given\
        \ base residential units. More about base residential units can be found at\
        \ https://www.czso.cz/csu/rso/zsj_rso (czech)."
      operationId: transit
      parameters:
      - description: source basic residential unit
        example: "127752"
        in: path
        name: from
        required: true
        schema:
          type: string
      - description: destination basic residential unit
        example: "127761"
        in: path
        name: to
        required: true
        schema:
          type: string
      - description: "occurence type in the source basic residential unit (1 - transit,\
          \ 2 - visit, 0 - both)"
        in: query
        name: fromType
        schema:
          type: string
      - description: "occurence type in the destination basic residential unit (1\
          \ - transit, 2 - visit, 0 - both)"
        in: query
        name: toType
        schema:
          type: string
      - description: "all or only uniques (0 - all, 1 - uniques)"
        example: "0"
        in: query
        name: uniques
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountResult'
          description: Response with the requested content.
        "204":
          content: {}
          description: "The request is valid, but the platform is not able to serve\
            \ the data. The reason may be restriction (e.g. differential privacy)\
            \ or no data were found."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: "Invalid request provided, missing or invalid parameter."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: Internal server error.
      summary: Transit between basic residential units
      tags:
      - transit
      x-openapi-router-controller: openapi_server.controllers.transit_controller
components:
  schemas:
    CountResult:
      description: Response with the result
      example:
        count: "62984"
      properties:
        count:
          description: Final count as the result of the request
          example: "62984"
          title: count
          type: string
      title: CountResult
      type: object
    ErrorResult:
      description: Response with error message
      example:
        message: Error message example.
      properties:
        message:
          description: Error response message content
          example: Error message example.
          title: message
          type: string
      title: ErrorResult
      type: object
    InfoResult:
      description: Response to the info request
      example:
        appVersion: 1.0-M6-SNAPSHOT
        appName: Mobility API Frontend
        appVendor: O2 Czech Republic a.s.
        backendAppVersion: 1.0-M6-SNAPSHOT
        backendDataFrom: 2017-07-31
        backendAppName: Mobility API Backend
        backendAppVendor: O2 Czech Republic a.s.
      properties:
        appName:
          description: Application name
          example: Mobility API Frontend
          title: appName
          type: string
        appVendor:
          description: Application vendor
          example: O2 Czech Republic a.s.
          title: appVendor
          type: string
        appVersion:
          description: Application version
          example: 1.0-M6-SNAPSHOT
          title: appVersion
          type: string
        backendAppName:
          description: Backend application name
          example: Mobility API Backend
          title: backendAppName
          type: string
        backendAppVendor:
          description: Backend application vendor
          example: O2 Czech Republic a.s.
          title: backendAppVendor
          type: string
        backendAppVersion:
          description: Backend application version
          example: 1.0-M6-SNAPSHOT
          title: backendAppVersion
          type: string
        backendDataFrom:
          description: For which day are data valid
          example: 2017-07-31
          title: backendDataFrom
          type: string
      title: InfoResult
      type: object
x-original-swagger-version: "2.0"
