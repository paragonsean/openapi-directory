/**
 * Mobility API
 * Transit API can be used to obtain time-aggregated data representing moving the people between various spatial points within the Czech Republic. Having A - 'from' and B - 'to' points, the API can return count of people traveling from A to B or people that are from A and traveling to B, etc. The mobility data is based on moving mobile stations in O2 mobile network.
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInfoResult.h
 *
 * Response to the info request
 */

#ifndef OAIInfoResult_H
#define OAIInfoResult_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInfoResult : public OAIObject {
public:
    OAIInfoResult();
    OAIInfoResult(QString json);
    ~OAIInfoResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppName() const;
    void setAppName(const QString &app_name);
    bool is_app_name_Set() const;
    bool is_app_name_Valid() const;

    QString getAppVendor() const;
    void setAppVendor(const QString &app_vendor);
    bool is_app_vendor_Set() const;
    bool is_app_vendor_Valid() const;

    QString getAppVersion() const;
    void setAppVersion(const QString &app_version);
    bool is_app_version_Set() const;
    bool is_app_version_Valid() const;

    QString getBackendAppName() const;
    void setBackendAppName(const QString &backend_app_name);
    bool is_backend_app_name_Set() const;
    bool is_backend_app_name_Valid() const;

    QString getBackendAppVendor() const;
    void setBackendAppVendor(const QString &backend_app_vendor);
    bool is_backend_app_vendor_Set() const;
    bool is_backend_app_vendor_Valid() const;

    QString getBackendAppVersion() const;
    void setBackendAppVersion(const QString &backend_app_version);
    bool is_backend_app_version_Set() const;
    bool is_backend_app_version_Valid() const;

    QString getBackendDataFrom() const;
    void setBackendDataFrom(const QString &backend_data_from);
    bool is_backend_data_from_Set() const;
    bool is_backend_data_from_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_name;
    bool m_app_name_isSet;
    bool m_app_name_isValid;

    QString m_app_vendor;
    bool m_app_vendor_isSet;
    bool m_app_vendor_isValid;

    QString m_app_version;
    bool m_app_version_isSet;
    bool m_app_version_isValid;

    QString m_backend_app_name;
    bool m_backend_app_name_isSet;
    bool m_backend_app_name_isValid;

    QString m_backend_app_vendor;
    bool m_backend_app_vendor_isSet;
    bool m_backend_app_vendor_isValid;

    QString m_backend_app_version;
    bool m_backend_app_version_isSet;
    bool m_backend_app_version_isValid;

    QString m_backend_data_from;
    bool m_backend_data_from_isSet;
    bool m_backend_data_from_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInfoResult)

#endif // OAIInfoResult_H
