/**
 * EVEMarketer Marketstat API
 * EVEMarketer Marketstat API is almost compatible with EVE-Central's Marketstat API.
 *
 * The version of the OpenAPI document: 1.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIForQuery.h
 *
 * 
 */

#ifndef OAIForQuery_H
#define OAIForQuery_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIForQuery : public OAIObject {
public:
    OAIForQuery();
    OAIForQuery(QString json);
    ~OAIForQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBid() const;
    void setBid(const bool &bid);
    bool is_bid_Set() const;
    bool is_bid_Valid() const;

    qint32 getHours() const;
    void setHours(const qint32 &hours);
    bool is_hours_Set() const;
    bool is_hours_Valid() const;

    qint32 getMinq() const;
    void setMinq(const qint32 &minq);
    bool is_minq_Set() const;
    bool is_minq_Valid() const;

    QList<qint32> getRegions() const;
    void setRegions(const QList<qint32> &regions);
    bool is_regions_Set() const;
    bool is_regions_Valid() const;

    QList<qint32> getSystems() const;
    void setSystems(const QList<qint32> &systems);
    bool is_systems_Set() const;
    bool is_systems_Valid() const;

    QList<qint32> getTypes() const;
    void setTypes(const QList<qint32> &types);
    bool is_types_Set() const;
    bool is_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_bid;
    bool m_bid_isSet;
    bool m_bid_isValid;

    qint32 m_hours;
    bool m_hours_isSet;
    bool m_hours_isValid;

    qint32 m_minq;
    bool m_minq_isSet;
    bool m_minq_isValid;

    QList<qint32> m_regions;
    bool m_regions_isSet;
    bool m_regions_isValid;

    QList<qint32> m_systems;
    bool m_systems_isSet;
    bool m_systems_isValid;

    QList<qint32> m_types;
    bool m_types_isSet;
    bool m_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIForQuery)

#endif // OAIForQuery_H
