/**
 * EVEMarketer Marketstat API
 * EVEMarketer Marketstat API is almost compatible with EVE-Central's Marketstat API.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ForQuery model module.
 * @module model/ForQuery
 * @version 1.0.1
 */
class ForQuery {
    /**
     * Constructs a new <code>ForQuery</code>.
     * @alias module:model/ForQuery
     */
    constructor() { 
        
        ForQuery.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ForQuery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ForQuery} obj Optional instance to populate.
     * @return {module:model/ForQuery} The populated <code>ForQuery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ForQuery();

            if (data.hasOwnProperty('bid')) {
                obj['bid'] = ApiClient.convertToType(data['bid'], 'Boolean');
            }
            if (data.hasOwnProperty('hours')) {
                obj['hours'] = ApiClient.convertToType(data['hours'], 'Number');
            }
            if (data.hasOwnProperty('minq')) {
                obj['minq'] = ApiClient.convertToType(data['minq'], 'Number');
            }
            if (data.hasOwnProperty('regions')) {
                obj['regions'] = ApiClient.convertToType(data['regions'], ['Number']);
            }
            if (data.hasOwnProperty('systems')) {
                obj['systems'] = ApiClient.convertToType(data['systems'], ['Number']);
            }
            if (data.hasOwnProperty('types')) {
                obj['types'] = ApiClient.convertToType(data['types'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ForQuery</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ForQuery</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['regions'])) {
            throw new Error("Expected the field `regions` to be an array in the JSON data but got " + data['regions']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['systems'])) {
            throw new Error("Expected the field `systems` to be an array in the JSON data but got " + data['systems']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['types'])) {
            throw new Error("Expected the field `types` to be an array in the JSON data but got " + data['types']);
        }

        return true;
    }


}



/**
 * is buy?
 * @member {Boolean} bid
 */
ForQuery.prototype['bid'] = undefined;

/**
 * always 0
 * @member {Number} hours
 */
ForQuery.prototype['hours'] = undefined;

/**
 * always 0
 * @member {Number} minq
 */
ForQuery.prototype['minq'] = undefined;

/**
 * Region IDs
 * @member {Array.<Number>} regions
 */
ForQuery.prototype['regions'] = undefined;

/**
 * System IDs
 * @member {Array.<Number>} systems
 */
ForQuery.prototype['systems'] = undefined;

/**
 * Type IDs
 * @member {Array.<Number>} types
 */
ForQuery.prototype['types'] = undefined;






export default ForQuery;

