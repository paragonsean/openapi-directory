/**
 * EVEMarketer Marketstat API
 * EVEMarketer Marketstat API is almost compatible with EVE-Central's Marketstat API.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MarketStatXMLInner from './MarketStatXMLInner';

/**
 * The ExecAPI model module.
 * @module model/ExecAPI
 * @version 1.0.1
 */
class ExecAPI {
    /**
     * Constructs a new <code>ExecAPI</code>.
     * @alias module:model/ExecAPI
     */
    constructor() { 
        
        ExecAPI.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExecAPI</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExecAPI} obj Optional instance to populate.
     * @return {module:model/ExecAPI} The populated <code>ExecAPI</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExecAPI();

            if (data.hasOwnProperty('marketstat')) {
                obj['marketstat'] = ApiClient.convertToType(data['marketstat'], [MarketStatXMLInner]);
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExecAPI</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExecAPI</code>.
     */
    static validateJSON(data) {
        if (data['marketstat']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['marketstat'])) {
                throw new Error("Expected the field `marketstat` to be an array in the JSON data but got " + data['marketstat']);
            }
            // validate the optional field `marketstat` (array)
            for (const item of data['marketstat']) {
                MarketStatXMLInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/MarketStatXMLInner>} marketstat
 */
ExecAPI.prototype['marketstat'] = undefined;

/**
 * @member {String} method
 */
ExecAPI.prototype['method'] = undefined;

/**
 * @member {String} version
 */
ExecAPI.prototype['version'] = undefined;






export default ExecAPI;

