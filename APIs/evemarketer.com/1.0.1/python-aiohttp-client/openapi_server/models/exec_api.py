# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.market_stat_xml_inner import MarketStatXMLInner
from openapi_server import util


class ExecAPI(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, marketstat: List[MarketStatXMLInner]=None, method: str=None, version: str=None):
        """ExecAPI - a model defined in OpenAPI

        :param marketstat: The marketstat of this ExecAPI.
        :param method: The method of this ExecAPI.
        :param version: The version of this ExecAPI.
        """
        self.openapi_types = {
            'marketstat': List[MarketStatXMLInner],
            'method': str,
            'version': str
        }

        self.attribute_map = {
            'marketstat': 'marketstat',
            'method': 'method',
            'version': 'version'
        }

        self._marketstat = marketstat
        self._method = method
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExecAPI':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExecAPI of this ExecAPI.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def marketstat(self):
        """Gets the marketstat of this ExecAPI.


        :return: The marketstat of this ExecAPI.
        :rtype: List[MarketStatXMLInner]
        """
        return self._marketstat

    @marketstat.setter
    def marketstat(self, marketstat):
        """Sets the marketstat of this ExecAPI.


        :param marketstat: The marketstat of this ExecAPI.
        :type marketstat: List[MarketStatXMLInner]
        """

        self._marketstat = marketstat

    @property
    def method(self):
        """Gets the method of this ExecAPI.


        :return: The method of this ExecAPI.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this ExecAPI.


        :param method: The method of this ExecAPI.
        :type method: str
        """

        self._method = method

    @property
    def version(self):
        """Gets the version of this ExecAPI.


        :return: The version of this ExecAPI.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ExecAPI.


        :param version: The version of this ExecAPI.
        :type version: str
        """

        self._version = version
