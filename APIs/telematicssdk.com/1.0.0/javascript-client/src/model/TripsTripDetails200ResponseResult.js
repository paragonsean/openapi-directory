/**
 * Quick start - Telematics SDK
 * # Introduction We have prepared a set of APIs for quick start to integrate telematics SDK that powers mobile telematics inside 3rd party mobile applications.  * [CONTACT US](https://telematicssdk.com) * [SANDBOX](https://userdatahub.com) * [DEV.PORTAL](https://docs.telematicssdk.com) * [DEMO APP](https://raxeltelematics.com/telematics-app)   # Overview Datamotion provides telematics infrastructure for mobile applications.   Telematics SDK turns any smartphone into telematics data gathering device to collect Location, driving and behavior data. API services unlocks power of your mobile application  There are 3 groups of methods: * 1 - user management * 2 - statistics for mobile app * 3 - statistics for back-end(s)  in certain cases you will need SNS or any other notification services. read more [here](https://docs.telematicssdk.com/platform-features/sns) # Possible architecture  There are three common schemes that are used by our clients. These schemes can be combined * Collect, Process, Store (required: 1&2) * Collect, Process (required: 1& sns) * Collect (required 1&sns)   ## Collect, Process, Store ![Collect, Process, Store](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection%2C+processing%2C+storage)  ## Collect, Process ![Collect, Process](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection+and+processing)  ## Collect ![Collect](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection+only)  *** ![Telematic sdk](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Github/transportation_small.png)  # Common use-cases: * Safe and efficient driving * Usage-based insurance * Safe driving assessment * Driver assessment * Trip log * Geo-analysis * Accident monitoring * Driving engagements * Location based services * Realtime Tracking and beyond  # How to start * Register a [SANDBOX ACCOUNT](https://userdatahub.com) * Get [CREDENTIALS](https://docs.userdatahub.com/sandbox/credentials)  * Follow the guide from [DEVELOPER POERTAL](https://docs.telematicssdk.com)  # Authentication To create a user on datamotion platform, you require to use InstanceID and InstanceKEY. You can get it in Datahub -> management -> user-service credentials  Once you create a user, you will get Device token, JWT token and refresh token. then, you will use it for APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TripsTripDetails200ResponseResultTrack from './TripsTripDetails200ResponseResultTrack';

/**
 * The TripsTripDetails200ResponseResult model module.
 * @module model/TripsTripDetails200ResponseResult
 * @version 1.0.0
 */
class TripsTripDetails200ResponseResult {
    /**
     * Constructs a new <code>TripsTripDetails200ResponseResult</code>.
     * @alias module:model/TripsTripDetails200ResponseResult
     */
    constructor() { 
        
        TripsTripDetails200ResponseResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TripsTripDetails200ResponseResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TripsTripDetails200ResponseResult} obj Optional instance to populate.
     * @return {module:model/TripsTripDetails200ResponseResult} The populated <code>TripsTripDetails200ResponseResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TripsTripDetails200ResponseResult();

            if (data.hasOwnProperty('Code')) {
                obj['Code'] = ApiClient.convertToType(data['Code'], 'Number');
            }
            if (data.hasOwnProperty('Track')) {
                obj['Track'] = TripsTripDetails200ResponseResultTrack.constructFromObject(data['Track']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TripsTripDetails200ResponseResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TripsTripDetails200ResponseResult</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Track`
        if (data['Track']) { // data not null
          TripsTripDetails200ResponseResultTrack.validateJSON(data['Track']);
        }

        return true;
    }


}



/**
 * @member {Number} Code
 */
TripsTripDetails200ResponseResult.prototype['Code'] = undefined;

/**
 * @member {module:model/TripsTripDetails200ResponseResultTrack} Track
 */
TripsTripDetails200ResponseResult.prototype['Track'] = undefined;






export default TripsTripDetails200ResponseResult;

