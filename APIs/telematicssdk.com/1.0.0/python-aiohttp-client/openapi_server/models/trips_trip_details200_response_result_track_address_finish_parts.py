# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TripsTripDetails200ResponseResultTrackAddressFinishParts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, country_code: str=None, district: str=None, house: str=None, postal_code: str=None, street: str=None):
        """TripsTripDetails200ResponseResultTrackAddressFinishParts - a model defined in OpenAPI

        :param city: The city of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :param country_code: The country_code of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :param district: The district of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :param house: The house of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :param postal_code: The postal_code of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :param street: The street of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        """
        self.openapi_types = {
            'city': str,
            'country_code': str,
            'district': str,
            'house': str,
            'postal_code': str,
            'street': str
        }

        self.attribute_map = {
            'city': 'City',
            'country_code': 'CountryCode',
            'district': 'District',
            'house': 'House',
            'postal_code': 'PostalCode',
            'street': 'Street'
        }

        self._city = city
        self._country_code = country_code
        self._district = district
        self._house = house
        self._postal_code = postal_code
        self._street = street

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TripsTripDetails200ResponseResultTrackAddressFinishParts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The tripsTripDetails_200_response_Result_Track_AddressFinishParts of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this TripsTripDetails200ResponseResultTrackAddressFinishParts.


        :return: The city of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this TripsTripDetails200ResponseResultTrackAddressFinishParts.


        :param city: The city of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :type city: str
        """

        self._city = city

    @property
    def country_code(self):
        """Gets the country_code of this TripsTripDetails200ResponseResultTrackAddressFinishParts.


        :return: The country_code of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this TripsTripDetails200ResponseResultTrackAddressFinishParts.


        :param country_code: The country_code of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def district(self):
        """Gets the district of this TripsTripDetails200ResponseResultTrackAddressFinishParts.


        :return: The district of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :rtype: str
        """
        return self._district

    @district.setter
    def district(self, district):
        """Sets the district of this TripsTripDetails200ResponseResultTrackAddressFinishParts.


        :param district: The district of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :type district: str
        """

        self._district = district

    @property
    def house(self):
        """Gets the house of this TripsTripDetails200ResponseResultTrackAddressFinishParts.


        :return: The house of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :rtype: str
        """
        return self._house

    @house.setter
    def house(self, house):
        """Sets the house of this TripsTripDetails200ResponseResultTrackAddressFinishParts.


        :param house: The house of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :type house: str
        """

        self._house = house

    @property
    def postal_code(self):
        """Gets the postal_code of this TripsTripDetails200ResponseResultTrackAddressFinishParts.


        :return: The postal_code of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this TripsTripDetails200ResponseResultTrackAddressFinishParts.


        :param postal_code: The postal_code of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def street(self):
        """Gets the street of this TripsTripDetails200ResponseResultTrackAddressFinishParts.


        :return: The street of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street):
        """Sets the street of this TripsTripDetails200ResponseResultTrackAddressFinishParts.


        :param street: The street of this TripsTripDetails200ResponseResultTrackAddressFinishParts.
        :type street: str
        """

        self._street = street
