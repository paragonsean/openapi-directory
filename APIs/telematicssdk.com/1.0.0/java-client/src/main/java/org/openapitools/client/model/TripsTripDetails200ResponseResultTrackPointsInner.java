/*
 * Quick start - Telematics SDK
 * # Introduction We have prepared a set of APIs for quick start to integrate telematics SDK that powers mobile telematics inside 3rd party mobile applications.  * [CONTACT US](https://telematicssdk.com) * [SANDBOX](https://userdatahub.com) * [DEV.PORTAL](https://docs.telematicssdk.com) * [DEMO APP](https://raxeltelematics.com/telematics-app)   # Overview Datamotion provides telematics infrastructure for mobile applications.   Telematics SDK turns any smartphone into telematics data gathering device to collect Location, driving and behavior data. API services unlocks power of your mobile application  There are 3 groups of methods: * 1 - user management * 2 - statistics for mobile app * 3 - statistics for back-end(s)  in certain cases you will need SNS or any other notification services. read more [here](https://docs.telematicssdk.com/platform-features/sns) # Possible architecture  There are three common schemes that are used by our clients. These schemes can be combined * Collect, Process, Store (required: 1&2) * Collect, Process (required: 1& sns) * Collect (required 1&sns)   ## Collect, Process, Store ![Collect, Process, Store](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection%2C+processing%2C+storage)  ## Collect, Process ![Collect, Process](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection+and+processing)  ## Collect ![Collect](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection+only)  *** ![Telematic sdk](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Github/transportation_small.png)  # Common use-cases: * Safe and efficient driving * Usage-based insurance * Safe driving assessment * Driver assessment * Trip log * Geo-analysis * Accident monitoring * Driving engagements * Location based services * Realtime Tracking and beyond  # How to start * Register a [SANDBOX ACCOUNT](https://userdatahub.com) * Get [CREDENTIALS](https://docs.userdatahub.com/sandbox/credentials)  * Follow the guide from [DEVELOPER POERTAL](https://docs.telematicssdk.com)  # Authentication To create a user on datamotion platform, you require to use InstanceID and InstanceKEY. You can get it in Datahub -> management -> user-service credentials  Once you create a user, you will get Device token, JWT token and refresh token. then, you will use it for APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TripsTripDetails200ResponseResultTrackPointsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:38.418404-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TripsTripDetails200ResponseResultTrackPointsInner {
  public static final String SERIALIZED_NAME_ALERT_TYPE = "AlertType";
  @SerializedName(SERIALIZED_NAME_ALERT_TYPE)
  private String alertType;

  public static final String SERIALIZED_NAME_ALERT_VALUE = "AlertValue";
  @SerializedName(SERIALIZED_NAME_ALERT_VALUE)
  private BigDecimal alertValue;

  public static final String SERIALIZED_NAME_CORNERING = "Cornering";
  @SerializedName(SERIALIZED_NAME_CORNERING)
  private Boolean cornering;

  public static final String SERIALIZED_NAME_COURSE = "Course";
  @SerializedName(SERIALIZED_NAME_COURSE)
  private BigDecimal course;

  public static final String SERIALIZED_NAME_HEIGHT = "Height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private BigDecimal height;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private BigDecimal id;

  public static final String SERIALIZED_NAME_LATERAL = "Lateral";
  @SerializedName(SERIALIZED_NAME_LATERAL)
  private BigDecimal lateral;

  public static final String SERIALIZED_NAME_LATITUDE = "Latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private BigDecimal latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "Longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private BigDecimal longitude;

  public static final String SERIALIZED_NAME_MID_SPEED = "MidSpeed";
  @SerializedName(SERIALIZED_NAME_MID_SPEED)
  private BigDecimal midSpeed;

  public static final String SERIALIZED_NAME_NUMBER = "Number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private BigDecimal number;

  public static final String SERIALIZED_NAME_PHONE_USAGE = "PhoneUsage";
  @SerializedName(SERIALIZED_NAME_PHONE_USAGE)
  private Boolean phoneUsage;

  public static final String SERIALIZED_NAME_POINT_DATE = "PointDate";
  @SerializedName(SERIALIZED_NAME_POINT_DATE)
  private String pointDate;

  public static final String SERIALIZED_NAME_SPEED = "Speed";
  @SerializedName(SERIALIZED_NAME_SPEED)
  private BigDecimal speed;

  public static final String SERIALIZED_NAME_SPEED_LIMIT = "SpeedLimit";
  @SerializedName(SERIALIZED_NAME_SPEED_LIMIT)
  private BigDecimal speedLimit;

  public static final String SERIALIZED_NAME_SPEED_TYPE = "SpeedType";
  @SerializedName(SERIALIZED_NAME_SPEED_TYPE)
  private String speedType;

  public static final String SERIALIZED_NAME_TOTAL_METERS = "TotalMeters";
  @SerializedName(SERIALIZED_NAME_TOTAL_METERS)
  private BigDecimal totalMeters;

  public static final String SERIALIZED_NAME_YAW = "Yaw";
  @SerializedName(SERIALIZED_NAME_YAW)
  private BigDecimal yaw;

  public TripsTripDetails200ResponseResultTrackPointsInner() {
  }

  public TripsTripDetails200ResponseResultTrackPointsInner alertType(String alertType) {
    this.alertType = alertType;
    return this;
  }

  /**
   * Get alertType
   * @return alertType
   */
  @javax.annotation.Nullable
  public String getAlertType() {
    return alertType;
  }

  public void setAlertType(String alertType) {
    this.alertType = alertType;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner alertValue(BigDecimal alertValue) {
    this.alertValue = alertValue;
    return this;
  }

  /**
   * Get alertValue
   * @return alertValue
   */
  @javax.annotation.Nullable
  public BigDecimal getAlertValue() {
    return alertValue;
  }

  public void setAlertValue(BigDecimal alertValue) {
    this.alertValue = alertValue;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner cornering(Boolean cornering) {
    this.cornering = cornering;
    return this;
  }

  /**
   * Get cornering
   * @return cornering
   */
  @javax.annotation.Nullable
  public Boolean getCornering() {
    return cornering;
  }

  public void setCornering(Boolean cornering) {
    this.cornering = cornering;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner course(BigDecimal course) {
    this.course = course;
    return this;
  }

  /**
   * Get course
   * @return course
   */
  @javax.annotation.Nullable
  public BigDecimal getCourse() {
    return course;
  }

  public void setCourse(BigDecimal course) {
    this.course = course;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner height(BigDecimal height) {
    this.height = height;
    return this;
  }

  /**
   * Get height
   * @return height
   */
  @javax.annotation.Nullable
  public BigDecimal getHeight() {
    return height;
  }

  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner id(BigDecimal id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public BigDecimal getId() {
    return id;
  }

  public void setId(BigDecimal id) {
    this.id = id;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner lateral(BigDecimal lateral) {
    this.lateral = lateral;
    return this;
  }

  /**
   * Get lateral
   * @return lateral
   */
  @javax.annotation.Nullable
  public BigDecimal getLateral() {
    return lateral;
  }

  public void setLateral(BigDecimal lateral) {
    this.lateral = lateral;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner latitude(BigDecimal latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   */
  @javax.annotation.Nullable
  public BigDecimal getLatitude() {
    return latitude;
  }

  public void setLatitude(BigDecimal latitude) {
    this.latitude = latitude;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner longitude(BigDecimal longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Get longitude
   * @return longitude
   */
  @javax.annotation.Nullable
  public BigDecimal getLongitude() {
    return longitude;
  }

  public void setLongitude(BigDecimal longitude) {
    this.longitude = longitude;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner midSpeed(BigDecimal midSpeed) {
    this.midSpeed = midSpeed;
    return this;
  }

  /**
   * Get midSpeed
   * @return midSpeed
   */
  @javax.annotation.Nullable
  public BigDecimal getMidSpeed() {
    return midSpeed;
  }

  public void setMidSpeed(BigDecimal midSpeed) {
    this.midSpeed = midSpeed;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner number(BigDecimal number) {
    this.number = number;
    return this;
  }

  /**
   * Get number
   * @return number
   */
  @javax.annotation.Nullable
  public BigDecimal getNumber() {
    return number;
  }

  public void setNumber(BigDecimal number) {
    this.number = number;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner phoneUsage(Boolean phoneUsage) {
    this.phoneUsage = phoneUsage;
    return this;
  }

  /**
   * Get phoneUsage
   * @return phoneUsage
   */
  @javax.annotation.Nullable
  public Boolean getPhoneUsage() {
    return phoneUsage;
  }

  public void setPhoneUsage(Boolean phoneUsage) {
    this.phoneUsage = phoneUsage;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner pointDate(String pointDate) {
    this.pointDate = pointDate;
    return this;
  }

  /**
   * Get pointDate
   * @return pointDate
   */
  @javax.annotation.Nullable
  public String getPointDate() {
    return pointDate;
  }

  public void setPointDate(String pointDate) {
    this.pointDate = pointDate;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner speed(BigDecimal speed) {
    this.speed = speed;
    return this;
  }

  /**
   * Get speed
   * @return speed
   */
  @javax.annotation.Nullable
  public BigDecimal getSpeed() {
    return speed;
  }

  public void setSpeed(BigDecimal speed) {
    this.speed = speed;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner speedLimit(BigDecimal speedLimit) {
    this.speedLimit = speedLimit;
    return this;
  }

  /**
   * Get speedLimit
   * @return speedLimit
   */
  @javax.annotation.Nullable
  public BigDecimal getSpeedLimit() {
    return speedLimit;
  }

  public void setSpeedLimit(BigDecimal speedLimit) {
    this.speedLimit = speedLimit;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner speedType(String speedType) {
    this.speedType = speedType;
    return this;
  }

  /**
   * Get speedType
   * @return speedType
   */
  @javax.annotation.Nullable
  public String getSpeedType() {
    return speedType;
  }

  public void setSpeedType(String speedType) {
    this.speedType = speedType;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner totalMeters(BigDecimal totalMeters) {
    this.totalMeters = totalMeters;
    return this;
  }

  /**
   * Get totalMeters
   * @return totalMeters
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalMeters() {
    return totalMeters;
  }

  public void setTotalMeters(BigDecimal totalMeters) {
    this.totalMeters = totalMeters;
  }


  public TripsTripDetails200ResponseResultTrackPointsInner yaw(BigDecimal yaw) {
    this.yaw = yaw;
    return this;
  }

  /**
   * Get yaw
   * @return yaw
   */
  @javax.annotation.Nullable
  public BigDecimal getYaw() {
    return yaw;
  }

  public void setYaw(BigDecimal yaw) {
    this.yaw = yaw;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TripsTripDetails200ResponseResultTrackPointsInner tripsTripDetails200ResponseResultTrackPointsInner = (TripsTripDetails200ResponseResultTrackPointsInner) o;
    return Objects.equals(this.alertType, tripsTripDetails200ResponseResultTrackPointsInner.alertType) &&
        Objects.equals(this.alertValue, tripsTripDetails200ResponseResultTrackPointsInner.alertValue) &&
        Objects.equals(this.cornering, tripsTripDetails200ResponseResultTrackPointsInner.cornering) &&
        Objects.equals(this.course, tripsTripDetails200ResponseResultTrackPointsInner.course) &&
        Objects.equals(this.height, tripsTripDetails200ResponseResultTrackPointsInner.height) &&
        Objects.equals(this.id, tripsTripDetails200ResponseResultTrackPointsInner.id) &&
        Objects.equals(this.lateral, tripsTripDetails200ResponseResultTrackPointsInner.lateral) &&
        Objects.equals(this.latitude, tripsTripDetails200ResponseResultTrackPointsInner.latitude) &&
        Objects.equals(this.longitude, tripsTripDetails200ResponseResultTrackPointsInner.longitude) &&
        Objects.equals(this.midSpeed, tripsTripDetails200ResponseResultTrackPointsInner.midSpeed) &&
        Objects.equals(this.number, tripsTripDetails200ResponseResultTrackPointsInner.number) &&
        Objects.equals(this.phoneUsage, tripsTripDetails200ResponseResultTrackPointsInner.phoneUsage) &&
        Objects.equals(this.pointDate, tripsTripDetails200ResponseResultTrackPointsInner.pointDate) &&
        Objects.equals(this.speed, tripsTripDetails200ResponseResultTrackPointsInner.speed) &&
        Objects.equals(this.speedLimit, tripsTripDetails200ResponseResultTrackPointsInner.speedLimit) &&
        Objects.equals(this.speedType, tripsTripDetails200ResponseResultTrackPointsInner.speedType) &&
        Objects.equals(this.totalMeters, tripsTripDetails200ResponseResultTrackPointsInner.totalMeters) &&
        Objects.equals(this.yaw, tripsTripDetails200ResponseResultTrackPointsInner.yaw);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertType, alertValue, cornering, course, height, id, lateral, latitude, longitude, midSpeed, number, phoneUsage, pointDate, speed, speedLimit, speedType, totalMeters, yaw);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TripsTripDetails200ResponseResultTrackPointsInner {\n");
    sb.append("    alertType: ").append(toIndentedString(alertType)).append("\n");
    sb.append("    alertValue: ").append(toIndentedString(alertValue)).append("\n");
    sb.append("    cornering: ").append(toIndentedString(cornering)).append("\n");
    sb.append("    course: ").append(toIndentedString(course)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lateral: ").append(toIndentedString(lateral)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    midSpeed: ").append(toIndentedString(midSpeed)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    phoneUsage: ").append(toIndentedString(phoneUsage)).append("\n");
    sb.append("    pointDate: ").append(toIndentedString(pointDate)).append("\n");
    sb.append("    speed: ").append(toIndentedString(speed)).append("\n");
    sb.append("    speedLimit: ").append(toIndentedString(speedLimit)).append("\n");
    sb.append("    speedType: ").append(toIndentedString(speedType)).append("\n");
    sb.append("    totalMeters: ").append(toIndentedString(totalMeters)).append("\n");
    sb.append("    yaw: ").append(toIndentedString(yaw)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AlertType");
    openapiFields.add("AlertValue");
    openapiFields.add("Cornering");
    openapiFields.add("Course");
    openapiFields.add("Height");
    openapiFields.add("Id");
    openapiFields.add("Lateral");
    openapiFields.add("Latitude");
    openapiFields.add("Longitude");
    openapiFields.add("MidSpeed");
    openapiFields.add("Number");
    openapiFields.add("PhoneUsage");
    openapiFields.add("PointDate");
    openapiFields.add("Speed");
    openapiFields.add("SpeedLimit");
    openapiFields.add("SpeedType");
    openapiFields.add("TotalMeters");
    openapiFields.add("Yaw");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TripsTripDetails200ResponseResultTrackPointsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TripsTripDetails200ResponseResultTrackPointsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TripsTripDetails200ResponseResultTrackPointsInner is not found in the empty JSON string", TripsTripDetails200ResponseResultTrackPointsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TripsTripDetails200ResponseResultTrackPointsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TripsTripDetails200ResponseResultTrackPointsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AlertType") != null && !jsonObj.get("AlertType").isJsonNull()) && !jsonObj.get("AlertType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AlertType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AlertType").toString()));
      }
      if ((jsonObj.get("PointDate") != null && !jsonObj.get("PointDate").isJsonNull()) && !jsonObj.get("PointDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PointDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PointDate").toString()));
      }
      if ((jsonObj.get("SpeedType") != null && !jsonObj.get("SpeedType").isJsonNull()) && !jsonObj.get("SpeedType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SpeedType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SpeedType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TripsTripDetails200ResponseResultTrackPointsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TripsTripDetails200ResponseResultTrackPointsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TripsTripDetails200ResponseResultTrackPointsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TripsTripDetails200ResponseResultTrackPointsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<TripsTripDetails200ResponseResultTrackPointsInner>() {
           @Override
           public void write(JsonWriter out, TripsTripDetails200ResponseResultTrackPointsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TripsTripDetails200ResponseResultTrackPointsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TripsTripDetails200ResponseResultTrackPointsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TripsTripDetails200ResponseResultTrackPointsInner
   * @throws IOException if the JSON string is invalid with respect to TripsTripDetails200ResponseResultTrackPointsInner
   */
  public static TripsTripDetails200ResponseResultTrackPointsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TripsTripDetails200ResponseResultTrackPointsInner.class);
  }

  /**
   * Convert an instance of TripsTripDetails200ResponseResultTrackPointsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

