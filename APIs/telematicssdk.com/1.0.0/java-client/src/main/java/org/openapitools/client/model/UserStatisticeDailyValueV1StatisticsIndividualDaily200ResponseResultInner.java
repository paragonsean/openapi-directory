/*
 * Quick start - Telematics SDK
 * # Introduction We have prepared a set of APIs for quick start to integrate telematics SDK that powers mobile telematics inside 3rd party mobile applications.  * [CONTACT US](https://telematicssdk.com) * [SANDBOX](https://userdatahub.com) * [DEV.PORTAL](https://docs.telematicssdk.com) * [DEMO APP](https://raxeltelematics.com/telematics-app)   # Overview Datamotion provides telematics infrastructure for mobile applications.   Telematics SDK turns any smartphone into telematics data gathering device to collect Location, driving and behavior data. API services unlocks power of your mobile application  There are 3 groups of methods: * 1 - user management * 2 - statistics for mobile app * 3 - statistics for back-end(s)  in certain cases you will need SNS or any other notification services. read more [here](https://docs.telematicssdk.com/platform-features/sns) # Possible architecture  There are three common schemes that are used by our clients. These schemes can be combined * Collect, Process, Store (required: 1&2) * Collect, Process (required: 1& sns) * Collect (required 1&sns)   ## Collect, Process, Store ![Collect, Process, Store](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection%2C+processing%2C+storage)  ## Collect, Process ![Collect, Process](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection+and+processing)  ## Collect ![Collect](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection+only)  *** ![Telematic sdk](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Github/transportation_small.png)  # Common use-cases: * Safe and efficient driving * Usage-based insurance * Safe driving assessment * Driver assessment * Trip log * Geo-analysis * Accident monitoring * Driving engagements * Location based services * Realtime Tracking and beyond  # How to start * Register a [SANDBOX ACCOUNT](https://userdatahub.com) * Get [CREDENTIALS](https://docs.userdatahub.com/sandbox/credentials)  * Follow the guide from [DEVELOPER POERTAL](https://docs.telematicssdk.com)  # Authentication To create a user on datamotion platform, you require to use InstanceID and InstanceKEY. You can get it in Datahub -> management -> user-service credentials  Once you create a user, you will get Device token, JWT token and refresh token. then, you will use it for APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:38.418404-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner {
  public static final String SERIALIZED_NAME_ACCELERATION_COUNT = "AccelerationCount";
  @SerializedName(SERIALIZED_NAME_ACCELERATION_COUNT)
  private BigDecimal accelerationCount;

  public static final String SERIALIZED_NAME_APP_ID = "AppId";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_AVERAGE_SPEED_KMH = "AverageSpeedKmh";
  @SerializedName(SERIALIZED_NAME_AVERAGE_SPEED_KMH)
  private BigDecimal averageSpeedKmh;

  public static final String SERIALIZED_NAME_AVERAGE_SPEED_MILEH = "AverageSpeedMileh";
  @SerializedName(SERIALIZED_NAME_AVERAGE_SPEED_MILEH)
  private BigDecimal averageSpeedMileh;

  public static final String SERIALIZED_NAME_BREAKING_COUNT = "BreakingCount";
  @SerializedName(SERIALIZED_NAME_BREAKING_COUNT)
  private BigDecimal breakingCount;

  public static final String SERIALIZED_NAME_COMPANY_ID = "CompanyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_CORNERING_COUNT = "CorneringCount";
  @SerializedName(SERIALIZED_NAME_CORNERING_COUNT)
  private BigDecimal corneringCount;

  public static final String SERIALIZED_NAME_DAY_DRIVING_TIME = "DayDrivingTime";
  @SerializedName(SERIALIZED_NAME_DAY_DRIVING_TIME)
  private BigDecimal dayDrivingTime;

  public static final String SERIALIZED_NAME_DEVICE_TOKEN = "DeviceToken";
  @SerializedName(SERIALIZED_NAME_DEVICE_TOKEN)
  private String deviceToken;

  public static final String SERIALIZED_NAME_DRIVER_TRIPS_COUNT = "DriverTripsCount";
  @SerializedName(SERIALIZED_NAME_DRIVER_TRIPS_COUNT)
  private BigDecimal driverTripsCount;

  public static final String SERIALIZED_NAME_DRIVING_TIME = "DrivingTime";
  @SerializedName(SERIALIZED_NAME_DRIVING_TIME)
  private BigDecimal drivingTime;

  public static final String SERIALIZED_NAME_INSTANCE_ID = "InstanceId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private String instanceId;

  public static final String SERIALIZED_NAME_MAX_SPEED_KMH = "MaxSpeedKmh";
  @SerializedName(SERIALIZED_NAME_MAX_SPEED_KMH)
  private BigDecimal maxSpeedKmh;

  public static final String SERIALIZED_NAME_MAX_SPEED_MILEH = "MaxSpeedMileh";
  @SerializedName(SERIALIZED_NAME_MAX_SPEED_MILEH)
  private BigDecimal maxSpeedMileh;

  public static final String SERIALIZED_NAME_MILEAGE_KM = "MileageKm";
  @SerializedName(SERIALIZED_NAME_MILEAGE_KM)
  private BigDecimal mileageKm;

  public static final String SERIALIZED_NAME_MILEAGE_MILE = "MileageMile";
  @SerializedName(SERIALIZED_NAME_MILEAGE_MILE)
  private BigDecimal mileageMile;

  public static final String SERIALIZED_NAME_NIGHT_DRIVING_TIME = "NightDrivingTime";
  @SerializedName(SERIALIZED_NAME_NIGHT_DRIVING_TIME)
  private BigDecimal nightDrivingTime;

  public static final String SERIALIZED_NAME_OTHER_TRIPS_COUNT = "OtherTripsCount";
  @SerializedName(SERIALIZED_NAME_OTHER_TRIPS_COUNT)
  private BigDecimal otherTripsCount;

  public static final String SERIALIZED_NAME_PHONE_USAGE_DISTANCE_KM = "PhoneUsageDistanceKm";
  @SerializedName(SERIALIZED_NAME_PHONE_USAGE_DISTANCE_KM)
  private BigDecimal phoneUsageDistanceKm;

  public static final String SERIALIZED_NAME_PHONE_USAGE_DISTANCE_MILE = "PhoneUsageDistanceMile";
  @SerializedName(SERIALIZED_NAME_PHONE_USAGE_DISTANCE_MILE)
  private BigDecimal phoneUsageDistanceMile;

  public static final String SERIALIZED_NAME_PHONE_USAGE_DURATION_MIN = "PhoneUsageDurationMin";
  @SerializedName(SERIALIZED_NAME_PHONE_USAGE_DURATION_MIN)
  private BigDecimal phoneUsageDurationMin;

  public static final String SERIALIZED_NAME_PHONE_USAGE_OVER_SPEED_DISTANCE_KM = "PhoneUsageOverSpeedDistanceKm";
  @SerializedName(SERIALIZED_NAME_PHONE_USAGE_OVER_SPEED_DISTANCE_KM)
  private BigDecimal phoneUsageOverSpeedDistanceKm;

  public static final String SERIALIZED_NAME_PHONE_USAGE_OVER_SPEED_DISTANCE_MILE = "PhoneUsageOverSpeedDistanceMile";
  @SerializedName(SERIALIZED_NAME_PHONE_USAGE_OVER_SPEED_DISTANCE_MILE)
  private BigDecimal phoneUsageOverSpeedDistanceMile;

  public static final String SERIALIZED_NAME_PHONE_USAGE_OVER_SPEED_DURATION_MIN = "PhoneUsageOverSpeedDurationMin";
  @SerializedName(SERIALIZED_NAME_PHONE_USAGE_OVER_SPEED_DURATION_MIN)
  private BigDecimal phoneUsageOverSpeedDurationMin;

  public static final String SERIALIZED_NAME_REPORT_DATE = "ReportDate";
  @SerializedName(SERIALIZED_NAME_REPORT_DATE)
  private String reportDate;

  public static final String SERIALIZED_NAME_RUSH_HOURS_DRIVING_TIME = "RushHoursDrivingTime";
  @SerializedName(SERIALIZED_NAME_RUSH_HOURS_DRIVING_TIME)
  private BigDecimal rushHoursDrivingTime;

  public static final String SERIALIZED_NAME_TOTAL_SPEEDING_KM = "TotalSpeedingKm";
  @SerializedName(SERIALIZED_NAME_TOTAL_SPEEDING_KM)
  private BigDecimal totalSpeedingKm;

  public static final String SERIALIZED_NAME_TOTAL_SPEEDING_MILE = "TotalSpeedingMile";
  @SerializedName(SERIALIZED_NAME_TOTAL_SPEEDING_MILE)
  private BigDecimal totalSpeedingMile;

  public static final String SERIALIZED_NAME_TRIPS_COUNT = "TripsCount";
  @SerializedName(SERIALIZED_NAME_TRIPS_COUNT)
  private BigDecimal tripsCount;

  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner() {
  }

  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner accelerationCount(BigDecimal accelerationCount) {
    this.accelerationCount = accelerationCount;
    return this;
  }

  /**
   * Get accelerationCount
   * @return accelerationCount
   */
  @javax.annotation.Nullable
  public BigDecimal getAccelerationCount() {
    return accelerationCount;
  }

  public void setAccelerationCount(BigDecimal accelerationCount) {
    this.accelerationCount = accelerationCount;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner appId(String appId) {
    this.appId = appId;
    return this;
  }

  /**
   * Get appId
   * @return appId
   */
  @javax.annotation.Nullable
  public String getAppId() {
    return appId;
  }

  public void setAppId(String appId) {
    this.appId = appId;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner averageSpeedKmh(BigDecimal averageSpeedKmh) {
    this.averageSpeedKmh = averageSpeedKmh;
    return this;
  }

  /**
   * Get averageSpeedKmh
   * @return averageSpeedKmh
   */
  @javax.annotation.Nullable
  public BigDecimal getAverageSpeedKmh() {
    return averageSpeedKmh;
  }

  public void setAverageSpeedKmh(BigDecimal averageSpeedKmh) {
    this.averageSpeedKmh = averageSpeedKmh;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner averageSpeedMileh(BigDecimal averageSpeedMileh) {
    this.averageSpeedMileh = averageSpeedMileh;
    return this;
  }

  /**
   * Get averageSpeedMileh
   * @return averageSpeedMileh
   */
  @javax.annotation.Nullable
  public BigDecimal getAverageSpeedMileh() {
    return averageSpeedMileh;
  }

  public void setAverageSpeedMileh(BigDecimal averageSpeedMileh) {
    this.averageSpeedMileh = averageSpeedMileh;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner breakingCount(BigDecimal breakingCount) {
    this.breakingCount = breakingCount;
    return this;
  }

  /**
   * Get breakingCount
   * @return breakingCount
   */
  @javax.annotation.Nullable
  public BigDecimal getBreakingCount() {
    return breakingCount;
  }

  public void setBreakingCount(BigDecimal breakingCount) {
    this.breakingCount = breakingCount;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner companyId(String companyId) {
    this.companyId = companyId;
    return this;
  }

  /**
   * Get companyId
   * @return companyId
   */
  @javax.annotation.Nullable
  public String getCompanyId() {
    return companyId;
  }

  public void setCompanyId(String companyId) {
    this.companyId = companyId;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner corneringCount(BigDecimal corneringCount) {
    this.corneringCount = corneringCount;
    return this;
  }

  /**
   * Get corneringCount
   * @return corneringCount
   */
  @javax.annotation.Nullable
  public BigDecimal getCorneringCount() {
    return corneringCount;
  }

  public void setCorneringCount(BigDecimal corneringCount) {
    this.corneringCount = corneringCount;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner dayDrivingTime(BigDecimal dayDrivingTime) {
    this.dayDrivingTime = dayDrivingTime;
    return this;
  }

  /**
   * Get dayDrivingTime
   * @return dayDrivingTime
   */
  @javax.annotation.Nullable
  public BigDecimal getDayDrivingTime() {
    return dayDrivingTime;
  }

  public void setDayDrivingTime(BigDecimal dayDrivingTime) {
    this.dayDrivingTime = dayDrivingTime;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner deviceToken(String deviceToken) {
    this.deviceToken = deviceToken;
    return this;
  }

  /**
   * Get deviceToken
   * @return deviceToken
   */
  @javax.annotation.Nullable
  public String getDeviceToken() {
    return deviceToken;
  }

  public void setDeviceToken(String deviceToken) {
    this.deviceToken = deviceToken;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner driverTripsCount(BigDecimal driverTripsCount) {
    this.driverTripsCount = driverTripsCount;
    return this;
  }

  /**
   * Get driverTripsCount
   * @return driverTripsCount
   */
  @javax.annotation.Nullable
  public BigDecimal getDriverTripsCount() {
    return driverTripsCount;
  }

  public void setDriverTripsCount(BigDecimal driverTripsCount) {
    this.driverTripsCount = driverTripsCount;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner drivingTime(BigDecimal drivingTime) {
    this.drivingTime = drivingTime;
    return this;
  }

  /**
   * Get drivingTime
   * @return drivingTime
   */
  @javax.annotation.Nullable
  public BigDecimal getDrivingTime() {
    return drivingTime;
  }

  public void setDrivingTime(BigDecimal drivingTime) {
    this.drivingTime = drivingTime;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nullable
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner maxSpeedKmh(BigDecimal maxSpeedKmh) {
    this.maxSpeedKmh = maxSpeedKmh;
    return this;
  }

  /**
   * Get maxSpeedKmh
   * @return maxSpeedKmh
   */
  @javax.annotation.Nullable
  public BigDecimal getMaxSpeedKmh() {
    return maxSpeedKmh;
  }

  public void setMaxSpeedKmh(BigDecimal maxSpeedKmh) {
    this.maxSpeedKmh = maxSpeedKmh;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner maxSpeedMileh(BigDecimal maxSpeedMileh) {
    this.maxSpeedMileh = maxSpeedMileh;
    return this;
  }

  /**
   * Get maxSpeedMileh
   * @return maxSpeedMileh
   */
  @javax.annotation.Nullable
  public BigDecimal getMaxSpeedMileh() {
    return maxSpeedMileh;
  }

  public void setMaxSpeedMileh(BigDecimal maxSpeedMileh) {
    this.maxSpeedMileh = maxSpeedMileh;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner mileageKm(BigDecimal mileageKm) {
    this.mileageKm = mileageKm;
    return this;
  }

  /**
   * Get mileageKm
   * @return mileageKm
   */
  @javax.annotation.Nullable
  public BigDecimal getMileageKm() {
    return mileageKm;
  }

  public void setMileageKm(BigDecimal mileageKm) {
    this.mileageKm = mileageKm;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner mileageMile(BigDecimal mileageMile) {
    this.mileageMile = mileageMile;
    return this;
  }

  /**
   * Get mileageMile
   * @return mileageMile
   */
  @javax.annotation.Nullable
  public BigDecimal getMileageMile() {
    return mileageMile;
  }

  public void setMileageMile(BigDecimal mileageMile) {
    this.mileageMile = mileageMile;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner nightDrivingTime(BigDecimal nightDrivingTime) {
    this.nightDrivingTime = nightDrivingTime;
    return this;
  }

  /**
   * Get nightDrivingTime
   * @return nightDrivingTime
   */
  @javax.annotation.Nullable
  public BigDecimal getNightDrivingTime() {
    return nightDrivingTime;
  }

  public void setNightDrivingTime(BigDecimal nightDrivingTime) {
    this.nightDrivingTime = nightDrivingTime;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner otherTripsCount(BigDecimal otherTripsCount) {
    this.otherTripsCount = otherTripsCount;
    return this;
  }

  /**
   * Get otherTripsCount
   * @return otherTripsCount
   */
  @javax.annotation.Nullable
  public BigDecimal getOtherTripsCount() {
    return otherTripsCount;
  }

  public void setOtherTripsCount(BigDecimal otherTripsCount) {
    this.otherTripsCount = otherTripsCount;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner phoneUsageDistanceKm(BigDecimal phoneUsageDistanceKm) {
    this.phoneUsageDistanceKm = phoneUsageDistanceKm;
    return this;
  }

  /**
   * Get phoneUsageDistanceKm
   * @return phoneUsageDistanceKm
   */
  @javax.annotation.Nullable
  public BigDecimal getPhoneUsageDistanceKm() {
    return phoneUsageDistanceKm;
  }

  public void setPhoneUsageDistanceKm(BigDecimal phoneUsageDistanceKm) {
    this.phoneUsageDistanceKm = phoneUsageDistanceKm;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner phoneUsageDistanceMile(BigDecimal phoneUsageDistanceMile) {
    this.phoneUsageDistanceMile = phoneUsageDistanceMile;
    return this;
  }

  /**
   * Get phoneUsageDistanceMile
   * @return phoneUsageDistanceMile
   */
  @javax.annotation.Nullable
  public BigDecimal getPhoneUsageDistanceMile() {
    return phoneUsageDistanceMile;
  }

  public void setPhoneUsageDistanceMile(BigDecimal phoneUsageDistanceMile) {
    this.phoneUsageDistanceMile = phoneUsageDistanceMile;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner phoneUsageDurationMin(BigDecimal phoneUsageDurationMin) {
    this.phoneUsageDurationMin = phoneUsageDurationMin;
    return this;
  }

  /**
   * Get phoneUsageDurationMin
   * @return phoneUsageDurationMin
   */
  @javax.annotation.Nullable
  public BigDecimal getPhoneUsageDurationMin() {
    return phoneUsageDurationMin;
  }

  public void setPhoneUsageDurationMin(BigDecimal phoneUsageDurationMin) {
    this.phoneUsageDurationMin = phoneUsageDurationMin;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner phoneUsageOverSpeedDistanceKm(BigDecimal phoneUsageOverSpeedDistanceKm) {
    this.phoneUsageOverSpeedDistanceKm = phoneUsageOverSpeedDistanceKm;
    return this;
  }

  /**
   * Get phoneUsageOverSpeedDistanceKm
   * @return phoneUsageOverSpeedDistanceKm
   */
  @javax.annotation.Nullable
  public BigDecimal getPhoneUsageOverSpeedDistanceKm() {
    return phoneUsageOverSpeedDistanceKm;
  }

  public void setPhoneUsageOverSpeedDistanceKm(BigDecimal phoneUsageOverSpeedDistanceKm) {
    this.phoneUsageOverSpeedDistanceKm = phoneUsageOverSpeedDistanceKm;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner phoneUsageOverSpeedDistanceMile(BigDecimal phoneUsageOverSpeedDistanceMile) {
    this.phoneUsageOverSpeedDistanceMile = phoneUsageOverSpeedDistanceMile;
    return this;
  }

  /**
   * Get phoneUsageOverSpeedDistanceMile
   * @return phoneUsageOverSpeedDistanceMile
   */
  @javax.annotation.Nullable
  public BigDecimal getPhoneUsageOverSpeedDistanceMile() {
    return phoneUsageOverSpeedDistanceMile;
  }

  public void setPhoneUsageOverSpeedDistanceMile(BigDecimal phoneUsageOverSpeedDistanceMile) {
    this.phoneUsageOverSpeedDistanceMile = phoneUsageOverSpeedDistanceMile;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner phoneUsageOverSpeedDurationMin(BigDecimal phoneUsageOverSpeedDurationMin) {
    this.phoneUsageOverSpeedDurationMin = phoneUsageOverSpeedDurationMin;
    return this;
  }

  /**
   * Get phoneUsageOverSpeedDurationMin
   * @return phoneUsageOverSpeedDurationMin
   */
  @javax.annotation.Nullable
  public BigDecimal getPhoneUsageOverSpeedDurationMin() {
    return phoneUsageOverSpeedDurationMin;
  }

  public void setPhoneUsageOverSpeedDurationMin(BigDecimal phoneUsageOverSpeedDurationMin) {
    this.phoneUsageOverSpeedDurationMin = phoneUsageOverSpeedDurationMin;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner reportDate(String reportDate) {
    this.reportDate = reportDate;
    return this;
  }

  /**
   * Get reportDate
   * @return reportDate
   */
  @javax.annotation.Nullable
  public String getReportDate() {
    return reportDate;
  }

  public void setReportDate(String reportDate) {
    this.reportDate = reportDate;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner rushHoursDrivingTime(BigDecimal rushHoursDrivingTime) {
    this.rushHoursDrivingTime = rushHoursDrivingTime;
    return this;
  }

  /**
   * Get rushHoursDrivingTime
   * @return rushHoursDrivingTime
   */
  @javax.annotation.Nullable
  public BigDecimal getRushHoursDrivingTime() {
    return rushHoursDrivingTime;
  }

  public void setRushHoursDrivingTime(BigDecimal rushHoursDrivingTime) {
    this.rushHoursDrivingTime = rushHoursDrivingTime;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner totalSpeedingKm(BigDecimal totalSpeedingKm) {
    this.totalSpeedingKm = totalSpeedingKm;
    return this;
  }

  /**
   * Get totalSpeedingKm
   * @return totalSpeedingKm
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalSpeedingKm() {
    return totalSpeedingKm;
  }

  public void setTotalSpeedingKm(BigDecimal totalSpeedingKm) {
    this.totalSpeedingKm = totalSpeedingKm;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner totalSpeedingMile(BigDecimal totalSpeedingMile) {
    this.totalSpeedingMile = totalSpeedingMile;
    return this;
  }

  /**
   * Get totalSpeedingMile
   * @return totalSpeedingMile
   */
  @javax.annotation.Nullable
  public BigDecimal getTotalSpeedingMile() {
    return totalSpeedingMile;
  }

  public void setTotalSpeedingMile(BigDecimal totalSpeedingMile) {
    this.totalSpeedingMile = totalSpeedingMile;
  }


  public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner tripsCount(BigDecimal tripsCount) {
    this.tripsCount = tripsCount;
    return this;
  }

  /**
   * Get tripsCount
   * @return tripsCount
   */
  @javax.annotation.Nullable
  public BigDecimal getTripsCount() {
    return tripsCount;
  }

  public void setTripsCount(BigDecimal tripsCount) {
    this.tripsCount = tripsCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner = (UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner) o;
    return Objects.equals(this.accelerationCount, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.accelerationCount) &&
        Objects.equals(this.appId, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.appId) &&
        Objects.equals(this.averageSpeedKmh, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.averageSpeedKmh) &&
        Objects.equals(this.averageSpeedMileh, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.averageSpeedMileh) &&
        Objects.equals(this.breakingCount, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.breakingCount) &&
        Objects.equals(this.companyId, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.companyId) &&
        Objects.equals(this.corneringCount, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.corneringCount) &&
        Objects.equals(this.dayDrivingTime, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.dayDrivingTime) &&
        Objects.equals(this.deviceToken, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.deviceToken) &&
        Objects.equals(this.driverTripsCount, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.driverTripsCount) &&
        Objects.equals(this.drivingTime, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.drivingTime) &&
        Objects.equals(this.instanceId, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.instanceId) &&
        Objects.equals(this.maxSpeedKmh, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.maxSpeedKmh) &&
        Objects.equals(this.maxSpeedMileh, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.maxSpeedMileh) &&
        Objects.equals(this.mileageKm, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.mileageKm) &&
        Objects.equals(this.mileageMile, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.mileageMile) &&
        Objects.equals(this.nightDrivingTime, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.nightDrivingTime) &&
        Objects.equals(this.otherTripsCount, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.otherTripsCount) &&
        Objects.equals(this.phoneUsageDistanceKm, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.phoneUsageDistanceKm) &&
        Objects.equals(this.phoneUsageDistanceMile, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.phoneUsageDistanceMile) &&
        Objects.equals(this.phoneUsageDurationMin, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.phoneUsageDurationMin) &&
        Objects.equals(this.phoneUsageOverSpeedDistanceKm, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.phoneUsageOverSpeedDistanceKm) &&
        Objects.equals(this.phoneUsageOverSpeedDistanceMile, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.phoneUsageOverSpeedDistanceMile) &&
        Objects.equals(this.phoneUsageOverSpeedDurationMin, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.phoneUsageOverSpeedDurationMin) &&
        Objects.equals(this.reportDate, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.reportDate) &&
        Objects.equals(this.rushHoursDrivingTime, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.rushHoursDrivingTime) &&
        Objects.equals(this.totalSpeedingKm, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.totalSpeedingKm) &&
        Objects.equals(this.totalSpeedingMile, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.totalSpeedingMile) &&
        Objects.equals(this.tripsCount, userStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.tripsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accelerationCount, appId, averageSpeedKmh, averageSpeedMileh, breakingCount, companyId, corneringCount, dayDrivingTime, deviceToken, driverTripsCount, drivingTime, instanceId, maxSpeedKmh, maxSpeedMileh, mileageKm, mileageMile, nightDrivingTime, otherTripsCount, phoneUsageDistanceKm, phoneUsageDistanceMile, phoneUsageDurationMin, phoneUsageOverSpeedDistanceKm, phoneUsageOverSpeedDistanceMile, phoneUsageOverSpeedDurationMin, reportDate, rushHoursDrivingTime, totalSpeedingKm, totalSpeedingMile, tripsCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner {\n");
    sb.append("    accelerationCount: ").append(toIndentedString(accelerationCount)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    averageSpeedKmh: ").append(toIndentedString(averageSpeedKmh)).append("\n");
    sb.append("    averageSpeedMileh: ").append(toIndentedString(averageSpeedMileh)).append("\n");
    sb.append("    breakingCount: ").append(toIndentedString(breakingCount)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    corneringCount: ").append(toIndentedString(corneringCount)).append("\n");
    sb.append("    dayDrivingTime: ").append(toIndentedString(dayDrivingTime)).append("\n");
    sb.append("    deviceToken: ").append(toIndentedString(deviceToken)).append("\n");
    sb.append("    driverTripsCount: ").append(toIndentedString(driverTripsCount)).append("\n");
    sb.append("    drivingTime: ").append(toIndentedString(drivingTime)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    maxSpeedKmh: ").append(toIndentedString(maxSpeedKmh)).append("\n");
    sb.append("    maxSpeedMileh: ").append(toIndentedString(maxSpeedMileh)).append("\n");
    sb.append("    mileageKm: ").append(toIndentedString(mileageKm)).append("\n");
    sb.append("    mileageMile: ").append(toIndentedString(mileageMile)).append("\n");
    sb.append("    nightDrivingTime: ").append(toIndentedString(nightDrivingTime)).append("\n");
    sb.append("    otherTripsCount: ").append(toIndentedString(otherTripsCount)).append("\n");
    sb.append("    phoneUsageDistanceKm: ").append(toIndentedString(phoneUsageDistanceKm)).append("\n");
    sb.append("    phoneUsageDistanceMile: ").append(toIndentedString(phoneUsageDistanceMile)).append("\n");
    sb.append("    phoneUsageDurationMin: ").append(toIndentedString(phoneUsageDurationMin)).append("\n");
    sb.append("    phoneUsageOverSpeedDistanceKm: ").append(toIndentedString(phoneUsageOverSpeedDistanceKm)).append("\n");
    sb.append("    phoneUsageOverSpeedDistanceMile: ").append(toIndentedString(phoneUsageOverSpeedDistanceMile)).append("\n");
    sb.append("    phoneUsageOverSpeedDurationMin: ").append(toIndentedString(phoneUsageOverSpeedDurationMin)).append("\n");
    sb.append("    reportDate: ").append(toIndentedString(reportDate)).append("\n");
    sb.append("    rushHoursDrivingTime: ").append(toIndentedString(rushHoursDrivingTime)).append("\n");
    sb.append("    totalSpeedingKm: ").append(toIndentedString(totalSpeedingKm)).append("\n");
    sb.append("    totalSpeedingMile: ").append(toIndentedString(totalSpeedingMile)).append("\n");
    sb.append("    tripsCount: ").append(toIndentedString(tripsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccelerationCount");
    openapiFields.add("AppId");
    openapiFields.add("AverageSpeedKmh");
    openapiFields.add("AverageSpeedMileh");
    openapiFields.add("BreakingCount");
    openapiFields.add("CompanyId");
    openapiFields.add("CorneringCount");
    openapiFields.add("DayDrivingTime");
    openapiFields.add("DeviceToken");
    openapiFields.add("DriverTripsCount");
    openapiFields.add("DrivingTime");
    openapiFields.add("InstanceId");
    openapiFields.add("MaxSpeedKmh");
    openapiFields.add("MaxSpeedMileh");
    openapiFields.add("MileageKm");
    openapiFields.add("MileageMile");
    openapiFields.add("NightDrivingTime");
    openapiFields.add("OtherTripsCount");
    openapiFields.add("PhoneUsageDistanceKm");
    openapiFields.add("PhoneUsageDistanceMile");
    openapiFields.add("PhoneUsageDurationMin");
    openapiFields.add("PhoneUsageOverSpeedDistanceKm");
    openapiFields.add("PhoneUsageOverSpeedDistanceMile");
    openapiFields.add("PhoneUsageOverSpeedDurationMin");
    openapiFields.add("ReportDate");
    openapiFields.add("RushHoursDrivingTime");
    openapiFields.add("TotalSpeedingKm");
    openapiFields.add("TotalSpeedingMile");
    openapiFields.add("TripsCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner is not found in the empty JSON string", UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AppId") != null && !jsonObj.get("AppId").isJsonNull()) && !jsonObj.get("AppId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AppId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AppId").toString()));
      }
      if ((jsonObj.get("CompanyId") != null && !jsonObj.get("CompanyId").isJsonNull()) && !jsonObj.get("CompanyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CompanyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CompanyId").toString()));
      }
      if ((jsonObj.get("DeviceToken") != null && !jsonObj.get("DeviceToken").isJsonNull()) && !jsonObj.get("DeviceToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DeviceToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DeviceToken").toString()));
      }
      if ((jsonObj.get("InstanceId") != null && !jsonObj.get("InstanceId").isJsonNull()) && !jsonObj.get("InstanceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InstanceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InstanceId").toString()));
      }
      if ((jsonObj.get("ReportDate") != null && !jsonObj.get("ReportDate").isJsonNull()) && !jsonObj.get("ReportDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ReportDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ReportDate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.class));

       return (TypeAdapter<T>) new TypeAdapter<UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner>() {
           @Override
           public void write(JsonWriter out, UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner
   * @throws IOException if the JSON string is invalid with respect to UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner
   */
  public static UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner.class);
  }

  /**
   * Convert an instance of UserStatisticeDailyValueV1StatisticsIndividualDaily200ResponseResultInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

