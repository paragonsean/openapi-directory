/*
 * Quick start - Telematics SDK
 * # Introduction We have prepared a set of APIs for quick start to integrate telematics SDK that powers mobile telematics inside 3rd party mobile applications.  * [CONTACT US](https://telematicssdk.com) * [SANDBOX](https://userdatahub.com) * [DEV.PORTAL](https://docs.telematicssdk.com) * [DEMO APP](https://raxeltelematics.com/telematics-app)   # Overview Datamotion provides telematics infrastructure for mobile applications.   Telematics SDK turns any smartphone into telematics data gathering device to collect Location, driving and behavior data. API services unlocks power of your mobile application  There are 3 groups of methods: * 1 - user management * 2 - statistics for mobile app * 3 - statistics for back-end(s)  in certain cases you will need SNS or any other notification services. read more [here](https://docs.telematicssdk.com/platform-features/sns) # Possible architecture  There are three common schemes that are used by our clients. These schemes can be combined * Collect, Process, Store (required: 1&2) * Collect, Process (required: 1& sns) * Collect (required 1&sns)   ## Collect, Process, Store ![Collect, Process, Store](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection%2C+processing%2C+storage)  ## Collect, Process ![Collect, Process](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection+and+processing)  ## Collect ![Collect](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Dev.portal/Architecture+-+Collection+only)  *** ![Telematic sdk](https://website-cliparts-datamotion.s3.us-east-2.amazonaws.com/Github/transportation_small.png)  # Common use-cases: * Safe and efficient driving * Usage-based insurance * Safe driving assessment * Driver assessment * Trip log * Geo-analysis * Accident monitoring * Driving engagements * Location based services * Realtime Tracking and beyond  # How to start * Register a [SANDBOX ACCOUNT](https://userdatahub.com) * Get [CREDENTIALS](https://docs.userdatahub.com/sandbox/credentials)  * Follow the guide from [DEVELOPER POERTAL](https://docs.telematicssdk.com)  # Authentication To create a user on datamotion platform, you require to use InstanceID and InstanceKEY. You can get it in Datahub -> management -> user-service credentials  Once you create a user, you will get Device token, JWT token and refresh token. then, you will use it for APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TripsTripDetails200ResponseResultTrackAddressFinishParts;
import org.openapitools.client.model.TripsTripDetails200ResponseResultTrackPointsInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TripsTripDetails200ResponseResultTrack
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:38.418404-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TripsTripDetails200ResponseResultTrack {
  public static final String SERIALIZED_NAME_ACCELERATION_COUNT = "AccelerationCount";
  @SerializedName(SERIALIZED_NAME_ACCELERATION_COUNT)
  private BigDecimal accelerationCount;

  public static final String SERIALIZED_NAME_ADDRESS_END = "AddressEnd";
  @SerializedName(SERIALIZED_NAME_ADDRESS_END)
  private String addressEnd;

  public static final String SERIALIZED_NAME_ADDRESS_FINISH_PARTS = "AddressFinishParts";
  @SerializedName(SERIALIZED_NAME_ADDRESS_FINISH_PARTS)
  private TripsTripDetails200ResponseResultTrackAddressFinishParts addressFinishParts;

  public static final String SERIALIZED_NAME_ADDRESS_START = "AddressStart";
  @SerializedName(SERIALIZED_NAME_ADDRESS_START)
  private String addressStart;

  public static final String SERIALIZED_NAME_ADDRESS_START_PARTS = "AddressStartParts";
  @SerializedName(SERIALIZED_NAME_ADDRESS_START_PARTS)
  private TripsTripDetails200ResponseResultTrackAddressFinishParts addressStartParts;

  public static final String SERIALIZED_NAME_BEACON_ID = "BeaconId";
  @SerializedName(SERIALIZED_NAME_BEACON_ID)
  private BigDecimal beaconId;

  public static final String SERIALIZED_NAME_CITY_FINISH = "CityFinish";
  @SerializedName(SERIALIZED_NAME_CITY_FINISH)
  private String cityFinish;

  public static final String SERIALIZED_NAME_CITY_START = "CityStart";
  @SerializedName(SERIALIZED_NAME_CITY_START)
  private String cityStart;

  public static final String SERIALIZED_NAME_DECELERATION_COUNT = "DecelerationCount";
  @SerializedName(SERIALIZED_NAME_DECELERATION_COUNT)
  private BigDecimal decelerationCount;

  public static final String SERIALIZED_NAME_DISTANCE = "Distance";
  @SerializedName(SERIALIZED_NAME_DISTANCE)
  private BigDecimal distance;

  public static final String SERIALIZED_NAME_DRIVING_TIPS = "DrivingTips";
  @SerializedName(SERIALIZED_NAME_DRIVING_TIPS)
  private String drivingTips;

  public static final String SERIALIZED_NAME_DURATION = "Duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private BigDecimal duration;

  public static final String SERIALIZED_NAME_ECO_SCORE = "EcoScore";
  @SerializedName(SERIALIZED_NAME_ECO_SCORE)
  private BigDecimal ecoScore;

  public static final String SERIALIZED_NAME_ECO_SCORE_BRAKES = "EcoScoreBrakes";
  @SerializedName(SERIALIZED_NAME_ECO_SCORE_BRAKES)
  private BigDecimal ecoScoreBrakes;

  public static final String SERIALIZED_NAME_ECO_SCORE_DEPRECIATION = "EcoScoreDepreciation";
  @SerializedName(SERIALIZED_NAME_ECO_SCORE_DEPRECIATION)
  private BigDecimal ecoScoreDepreciation;

  public static final String SERIALIZED_NAME_ECO_SCORE_FUEL = "EcoScoreFuel";
  @SerializedName(SERIALIZED_NAME_ECO_SCORE_FUEL)
  private BigDecimal ecoScoreFuel;

  public static final String SERIALIZED_NAME_ECO_SCORE_TYRES = "EcoScoreTyres";
  @SerializedName(SERIALIZED_NAME_ECO_SCORE_TYRES)
  private BigDecimal ecoScoreTyres;

  public static final String SERIALIZED_NAME_END_DATE = "EndDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_HIGH_OVER_SPEED_MILEAGE = "HighOverSpeedMileage";
  @SerializedName(SERIALIZED_NAME_HIGH_OVER_SPEED_MILEAGE)
  private BigDecimal highOverSpeedMileage;

  public static final String SERIALIZED_NAME_MID_OVER_SPEED_MILEAGE = "MidOverSpeedMileage";
  @SerializedName(SERIALIZED_NAME_MID_OVER_SPEED_MILEAGE)
  private BigDecimal midOverSpeedMileage;

  public static final String SERIALIZED_NAME_ORIGIN_CHANGED = "OriginChanged";
  @SerializedName(SERIALIZED_NAME_ORIGIN_CHANGED)
  private Boolean originChanged;

  public static final String SERIALIZED_NAME_PHONE_USAGE = "PhoneUsage";
  @SerializedName(SERIALIZED_NAME_PHONE_USAGE)
  private BigDecimal phoneUsage;

  public static final String SERIALIZED_NAME_POINTS = "Points";
  @SerializedName(SERIALIZED_NAME_POINTS)
  private List<TripsTripDetails200ResponseResultTrackPointsInner> points = new ArrayList<>();

  public static final String SERIALIZED_NAME_RATING = "Rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private BigDecimal rating;

  public static final String SERIALIZED_NAME_RATING100 = "Rating100";
  @SerializedName(SERIALIZED_NAME_RATING100)
  private BigDecimal rating100;

  public static final String SERIALIZED_NAME_RATING_ACCELERATION = "RatingAcceleration";
  @SerializedName(SERIALIZED_NAME_RATING_ACCELERATION)
  private BigDecimal ratingAcceleration;

  public static final String SERIALIZED_NAME_RATING_ACCELERATION100 = "RatingAcceleration100";
  @SerializedName(SERIALIZED_NAME_RATING_ACCELERATION100)
  private BigDecimal ratingAcceleration100;

  public static final String SERIALIZED_NAME_RATING_BRAKING = "RatingBraking";
  @SerializedName(SERIALIZED_NAME_RATING_BRAKING)
  private BigDecimal ratingBraking;

  public static final String SERIALIZED_NAME_RATING_BRAKING100 = "RatingBraking100";
  @SerializedName(SERIALIZED_NAME_RATING_BRAKING100)
  private BigDecimal ratingBraking100;

  public static final String SERIALIZED_NAME_RATING_CORNERING = "RatingCornering";
  @SerializedName(SERIALIZED_NAME_RATING_CORNERING)
  private BigDecimal ratingCornering;

  public static final String SERIALIZED_NAME_RATING_CORNERING100 = "RatingCornering100";
  @SerializedName(SERIALIZED_NAME_RATING_CORNERING100)
  private BigDecimal ratingCornering100;

  public static final String SERIALIZED_NAME_RATING_PHONE_DISTRACTION100 = "RatingPhoneDistraction100";
  @SerializedName(SERIALIZED_NAME_RATING_PHONE_DISTRACTION100)
  private BigDecimal ratingPhoneDistraction100;

  public static final String SERIALIZED_NAME_RATING_PHONE_USAGE = "RatingPhoneUsage";
  @SerializedName(SERIALIZED_NAME_RATING_PHONE_USAGE)
  private BigDecimal ratingPhoneUsage;

  public static final String SERIALIZED_NAME_RATING_SPEEDING = "RatingSpeeding";
  @SerializedName(SERIALIZED_NAME_RATING_SPEEDING)
  private BigDecimal ratingSpeeding;

  public static final String SERIALIZED_NAME_RATING_SPEEDING100 = "RatingSpeeding100";
  @SerializedName(SERIALIZED_NAME_RATING_SPEEDING100)
  private BigDecimal ratingSpeeding100;

  public static final String SERIALIZED_NAME_RATING_TIME_OF_DAY = "RatingTimeOfDay";
  @SerializedName(SERIALIZED_NAME_RATING_TIME_OF_DAY)
  private BigDecimal ratingTimeOfDay;

  public static final String SERIALIZED_NAME_SHARE_TYPE = "ShareType";
  @SerializedName(SERIALIZED_NAME_SHARE_TYPE)
  private String shareType;

  public static final String SERIALIZED_NAME_START_DATE = "StartDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TRACK_ORIGIN_CODE = "TrackOriginCode";
  @SerializedName(SERIALIZED_NAME_TRACK_ORIGIN_CODE)
  private String trackOriginCode;

  public TripsTripDetails200ResponseResultTrack() {
  }

  public TripsTripDetails200ResponseResultTrack accelerationCount(BigDecimal accelerationCount) {
    this.accelerationCount = accelerationCount;
    return this;
  }

  /**
   * Get accelerationCount
   * @return accelerationCount
   */
  @javax.annotation.Nullable
  public BigDecimal getAccelerationCount() {
    return accelerationCount;
  }

  public void setAccelerationCount(BigDecimal accelerationCount) {
    this.accelerationCount = accelerationCount;
  }


  public TripsTripDetails200ResponseResultTrack addressEnd(String addressEnd) {
    this.addressEnd = addressEnd;
    return this;
  }

  /**
   * Get addressEnd
   * @return addressEnd
   */
  @javax.annotation.Nullable
  public String getAddressEnd() {
    return addressEnd;
  }

  public void setAddressEnd(String addressEnd) {
    this.addressEnd = addressEnd;
  }


  public TripsTripDetails200ResponseResultTrack addressFinishParts(TripsTripDetails200ResponseResultTrackAddressFinishParts addressFinishParts) {
    this.addressFinishParts = addressFinishParts;
    return this;
  }

  /**
   * Get addressFinishParts
   * @return addressFinishParts
   */
  @javax.annotation.Nullable
  public TripsTripDetails200ResponseResultTrackAddressFinishParts getAddressFinishParts() {
    return addressFinishParts;
  }

  public void setAddressFinishParts(TripsTripDetails200ResponseResultTrackAddressFinishParts addressFinishParts) {
    this.addressFinishParts = addressFinishParts;
  }


  public TripsTripDetails200ResponseResultTrack addressStart(String addressStart) {
    this.addressStart = addressStart;
    return this;
  }

  /**
   * Get addressStart
   * @return addressStart
   */
  @javax.annotation.Nullable
  public String getAddressStart() {
    return addressStart;
  }

  public void setAddressStart(String addressStart) {
    this.addressStart = addressStart;
  }


  public TripsTripDetails200ResponseResultTrack addressStartParts(TripsTripDetails200ResponseResultTrackAddressFinishParts addressStartParts) {
    this.addressStartParts = addressStartParts;
    return this;
  }

  /**
   * Get addressStartParts
   * @return addressStartParts
   */
  @javax.annotation.Nullable
  public TripsTripDetails200ResponseResultTrackAddressFinishParts getAddressStartParts() {
    return addressStartParts;
  }

  public void setAddressStartParts(TripsTripDetails200ResponseResultTrackAddressFinishParts addressStartParts) {
    this.addressStartParts = addressStartParts;
  }


  public TripsTripDetails200ResponseResultTrack beaconId(BigDecimal beaconId) {
    this.beaconId = beaconId;
    return this;
  }

  /**
   * Get beaconId
   * @return beaconId
   */
  @javax.annotation.Nullable
  public BigDecimal getBeaconId() {
    return beaconId;
  }

  public void setBeaconId(BigDecimal beaconId) {
    this.beaconId = beaconId;
  }


  public TripsTripDetails200ResponseResultTrack cityFinish(String cityFinish) {
    this.cityFinish = cityFinish;
    return this;
  }

  /**
   * Get cityFinish
   * @return cityFinish
   */
  @javax.annotation.Nullable
  public String getCityFinish() {
    return cityFinish;
  }

  public void setCityFinish(String cityFinish) {
    this.cityFinish = cityFinish;
  }


  public TripsTripDetails200ResponseResultTrack cityStart(String cityStart) {
    this.cityStart = cityStart;
    return this;
  }

  /**
   * Get cityStart
   * @return cityStart
   */
  @javax.annotation.Nullable
  public String getCityStart() {
    return cityStart;
  }

  public void setCityStart(String cityStart) {
    this.cityStart = cityStart;
  }


  public TripsTripDetails200ResponseResultTrack decelerationCount(BigDecimal decelerationCount) {
    this.decelerationCount = decelerationCount;
    return this;
  }

  /**
   * Get decelerationCount
   * @return decelerationCount
   */
  @javax.annotation.Nullable
  public BigDecimal getDecelerationCount() {
    return decelerationCount;
  }

  public void setDecelerationCount(BigDecimal decelerationCount) {
    this.decelerationCount = decelerationCount;
  }


  public TripsTripDetails200ResponseResultTrack distance(BigDecimal distance) {
    this.distance = distance;
    return this;
  }

  /**
   * Get distance
   * @return distance
   */
  @javax.annotation.Nullable
  public BigDecimal getDistance() {
    return distance;
  }

  public void setDistance(BigDecimal distance) {
    this.distance = distance;
  }


  public TripsTripDetails200ResponseResultTrack drivingTips(String drivingTips) {
    this.drivingTips = drivingTips;
    return this;
  }

  /**
   * Get drivingTips
   * @return drivingTips
   */
  @javax.annotation.Nullable
  public String getDrivingTips() {
    return drivingTips;
  }

  public void setDrivingTips(String drivingTips) {
    this.drivingTips = drivingTips;
  }


  public TripsTripDetails200ResponseResultTrack duration(BigDecimal duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Get duration
   * @return duration
   */
  @javax.annotation.Nullable
  public BigDecimal getDuration() {
    return duration;
  }

  public void setDuration(BigDecimal duration) {
    this.duration = duration;
  }


  public TripsTripDetails200ResponseResultTrack ecoScore(BigDecimal ecoScore) {
    this.ecoScore = ecoScore;
    return this;
  }

  /**
   * Get ecoScore
   * @return ecoScore
   */
  @javax.annotation.Nullable
  public BigDecimal getEcoScore() {
    return ecoScore;
  }

  public void setEcoScore(BigDecimal ecoScore) {
    this.ecoScore = ecoScore;
  }


  public TripsTripDetails200ResponseResultTrack ecoScoreBrakes(BigDecimal ecoScoreBrakes) {
    this.ecoScoreBrakes = ecoScoreBrakes;
    return this;
  }

  /**
   * Get ecoScoreBrakes
   * @return ecoScoreBrakes
   */
  @javax.annotation.Nullable
  public BigDecimal getEcoScoreBrakes() {
    return ecoScoreBrakes;
  }

  public void setEcoScoreBrakes(BigDecimal ecoScoreBrakes) {
    this.ecoScoreBrakes = ecoScoreBrakes;
  }


  public TripsTripDetails200ResponseResultTrack ecoScoreDepreciation(BigDecimal ecoScoreDepreciation) {
    this.ecoScoreDepreciation = ecoScoreDepreciation;
    return this;
  }

  /**
   * Get ecoScoreDepreciation
   * @return ecoScoreDepreciation
   */
  @javax.annotation.Nullable
  public BigDecimal getEcoScoreDepreciation() {
    return ecoScoreDepreciation;
  }

  public void setEcoScoreDepreciation(BigDecimal ecoScoreDepreciation) {
    this.ecoScoreDepreciation = ecoScoreDepreciation;
  }


  public TripsTripDetails200ResponseResultTrack ecoScoreFuel(BigDecimal ecoScoreFuel) {
    this.ecoScoreFuel = ecoScoreFuel;
    return this;
  }

  /**
   * Get ecoScoreFuel
   * @return ecoScoreFuel
   */
  @javax.annotation.Nullable
  public BigDecimal getEcoScoreFuel() {
    return ecoScoreFuel;
  }

  public void setEcoScoreFuel(BigDecimal ecoScoreFuel) {
    this.ecoScoreFuel = ecoScoreFuel;
  }


  public TripsTripDetails200ResponseResultTrack ecoScoreTyres(BigDecimal ecoScoreTyres) {
    this.ecoScoreTyres = ecoScoreTyres;
    return this;
  }

  /**
   * Get ecoScoreTyres
   * @return ecoScoreTyres
   */
  @javax.annotation.Nullable
  public BigDecimal getEcoScoreTyres() {
    return ecoScoreTyres;
  }

  public void setEcoScoreTyres(BigDecimal ecoScoreTyres) {
    this.ecoScoreTyres = ecoScoreTyres;
  }


  public TripsTripDetails200ResponseResultTrack endDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  public String getEndDate() {
    return endDate;
  }

  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }


  public TripsTripDetails200ResponseResultTrack highOverSpeedMileage(BigDecimal highOverSpeedMileage) {
    this.highOverSpeedMileage = highOverSpeedMileage;
    return this;
  }

  /**
   * Get highOverSpeedMileage
   * @return highOverSpeedMileage
   */
  @javax.annotation.Nullable
  public BigDecimal getHighOverSpeedMileage() {
    return highOverSpeedMileage;
  }

  public void setHighOverSpeedMileage(BigDecimal highOverSpeedMileage) {
    this.highOverSpeedMileage = highOverSpeedMileage;
  }


  public TripsTripDetails200ResponseResultTrack midOverSpeedMileage(BigDecimal midOverSpeedMileage) {
    this.midOverSpeedMileage = midOverSpeedMileage;
    return this;
  }

  /**
   * Get midOverSpeedMileage
   * @return midOverSpeedMileage
   */
  @javax.annotation.Nullable
  public BigDecimal getMidOverSpeedMileage() {
    return midOverSpeedMileage;
  }

  public void setMidOverSpeedMileage(BigDecimal midOverSpeedMileage) {
    this.midOverSpeedMileage = midOverSpeedMileage;
  }


  public TripsTripDetails200ResponseResultTrack originChanged(Boolean originChanged) {
    this.originChanged = originChanged;
    return this;
  }

  /**
   * Get originChanged
   * @return originChanged
   */
  @javax.annotation.Nullable
  public Boolean getOriginChanged() {
    return originChanged;
  }

  public void setOriginChanged(Boolean originChanged) {
    this.originChanged = originChanged;
  }


  public TripsTripDetails200ResponseResultTrack phoneUsage(BigDecimal phoneUsage) {
    this.phoneUsage = phoneUsage;
    return this;
  }

  /**
   * Get phoneUsage
   * @return phoneUsage
   */
  @javax.annotation.Nullable
  public BigDecimal getPhoneUsage() {
    return phoneUsage;
  }

  public void setPhoneUsage(BigDecimal phoneUsage) {
    this.phoneUsage = phoneUsage;
  }


  public TripsTripDetails200ResponseResultTrack points(List<TripsTripDetails200ResponseResultTrackPointsInner> points) {
    this.points = points;
    return this;
  }

  public TripsTripDetails200ResponseResultTrack addPointsItem(TripsTripDetails200ResponseResultTrackPointsInner pointsItem) {
    if (this.points == null) {
      this.points = new ArrayList<>();
    }
    this.points.add(pointsItem);
    return this;
  }

  /**
   * Get points
   * @return points
   */
  @javax.annotation.Nullable
  public List<TripsTripDetails200ResponseResultTrackPointsInner> getPoints() {
    return points;
  }

  public void setPoints(List<TripsTripDetails200ResponseResultTrackPointsInner> points) {
    this.points = points;
  }


  public TripsTripDetails200ResponseResultTrack rating(BigDecimal rating) {
    this.rating = rating;
    return this;
  }

  /**
   * Get rating
   * @return rating
   */
  @javax.annotation.Nullable
  public BigDecimal getRating() {
    return rating;
  }

  public void setRating(BigDecimal rating) {
    this.rating = rating;
  }


  public TripsTripDetails200ResponseResultTrack rating100(BigDecimal rating100) {
    this.rating100 = rating100;
    return this;
  }

  /**
   * Get rating100
   * @return rating100
   */
  @javax.annotation.Nullable
  public BigDecimal getRating100() {
    return rating100;
  }

  public void setRating100(BigDecimal rating100) {
    this.rating100 = rating100;
  }


  public TripsTripDetails200ResponseResultTrack ratingAcceleration(BigDecimal ratingAcceleration) {
    this.ratingAcceleration = ratingAcceleration;
    return this;
  }

  /**
   * Get ratingAcceleration
   * @return ratingAcceleration
   */
  @javax.annotation.Nullable
  public BigDecimal getRatingAcceleration() {
    return ratingAcceleration;
  }

  public void setRatingAcceleration(BigDecimal ratingAcceleration) {
    this.ratingAcceleration = ratingAcceleration;
  }


  public TripsTripDetails200ResponseResultTrack ratingAcceleration100(BigDecimal ratingAcceleration100) {
    this.ratingAcceleration100 = ratingAcceleration100;
    return this;
  }

  /**
   * Get ratingAcceleration100
   * @return ratingAcceleration100
   */
  @javax.annotation.Nullable
  public BigDecimal getRatingAcceleration100() {
    return ratingAcceleration100;
  }

  public void setRatingAcceleration100(BigDecimal ratingAcceleration100) {
    this.ratingAcceleration100 = ratingAcceleration100;
  }


  public TripsTripDetails200ResponseResultTrack ratingBraking(BigDecimal ratingBraking) {
    this.ratingBraking = ratingBraking;
    return this;
  }

  /**
   * Get ratingBraking
   * @return ratingBraking
   */
  @javax.annotation.Nullable
  public BigDecimal getRatingBraking() {
    return ratingBraking;
  }

  public void setRatingBraking(BigDecimal ratingBraking) {
    this.ratingBraking = ratingBraking;
  }


  public TripsTripDetails200ResponseResultTrack ratingBraking100(BigDecimal ratingBraking100) {
    this.ratingBraking100 = ratingBraking100;
    return this;
  }

  /**
   * Get ratingBraking100
   * @return ratingBraking100
   */
  @javax.annotation.Nullable
  public BigDecimal getRatingBraking100() {
    return ratingBraking100;
  }

  public void setRatingBraking100(BigDecimal ratingBraking100) {
    this.ratingBraking100 = ratingBraking100;
  }


  public TripsTripDetails200ResponseResultTrack ratingCornering(BigDecimal ratingCornering) {
    this.ratingCornering = ratingCornering;
    return this;
  }

  /**
   * Get ratingCornering
   * @return ratingCornering
   */
  @javax.annotation.Nullable
  public BigDecimal getRatingCornering() {
    return ratingCornering;
  }

  public void setRatingCornering(BigDecimal ratingCornering) {
    this.ratingCornering = ratingCornering;
  }


  public TripsTripDetails200ResponseResultTrack ratingCornering100(BigDecimal ratingCornering100) {
    this.ratingCornering100 = ratingCornering100;
    return this;
  }

  /**
   * Get ratingCornering100
   * @return ratingCornering100
   */
  @javax.annotation.Nullable
  public BigDecimal getRatingCornering100() {
    return ratingCornering100;
  }

  public void setRatingCornering100(BigDecimal ratingCornering100) {
    this.ratingCornering100 = ratingCornering100;
  }


  public TripsTripDetails200ResponseResultTrack ratingPhoneDistraction100(BigDecimal ratingPhoneDistraction100) {
    this.ratingPhoneDistraction100 = ratingPhoneDistraction100;
    return this;
  }

  /**
   * Get ratingPhoneDistraction100
   * @return ratingPhoneDistraction100
   */
  @javax.annotation.Nullable
  public BigDecimal getRatingPhoneDistraction100() {
    return ratingPhoneDistraction100;
  }

  public void setRatingPhoneDistraction100(BigDecimal ratingPhoneDistraction100) {
    this.ratingPhoneDistraction100 = ratingPhoneDistraction100;
  }


  public TripsTripDetails200ResponseResultTrack ratingPhoneUsage(BigDecimal ratingPhoneUsage) {
    this.ratingPhoneUsage = ratingPhoneUsage;
    return this;
  }

  /**
   * Get ratingPhoneUsage
   * @return ratingPhoneUsage
   */
  @javax.annotation.Nullable
  public BigDecimal getRatingPhoneUsage() {
    return ratingPhoneUsage;
  }

  public void setRatingPhoneUsage(BigDecimal ratingPhoneUsage) {
    this.ratingPhoneUsage = ratingPhoneUsage;
  }


  public TripsTripDetails200ResponseResultTrack ratingSpeeding(BigDecimal ratingSpeeding) {
    this.ratingSpeeding = ratingSpeeding;
    return this;
  }

  /**
   * Get ratingSpeeding
   * @return ratingSpeeding
   */
  @javax.annotation.Nullable
  public BigDecimal getRatingSpeeding() {
    return ratingSpeeding;
  }

  public void setRatingSpeeding(BigDecimal ratingSpeeding) {
    this.ratingSpeeding = ratingSpeeding;
  }


  public TripsTripDetails200ResponseResultTrack ratingSpeeding100(BigDecimal ratingSpeeding100) {
    this.ratingSpeeding100 = ratingSpeeding100;
    return this;
  }

  /**
   * Get ratingSpeeding100
   * @return ratingSpeeding100
   */
  @javax.annotation.Nullable
  public BigDecimal getRatingSpeeding100() {
    return ratingSpeeding100;
  }

  public void setRatingSpeeding100(BigDecimal ratingSpeeding100) {
    this.ratingSpeeding100 = ratingSpeeding100;
  }


  public TripsTripDetails200ResponseResultTrack ratingTimeOfDay(BigDecimal ratingTimeOfDay) {
    this.ratingTimeOfDay = ratingTimeOfDay;
    return this;
  }

  /**
   * Get ratingTimeOfDay
   * @return ratingTimeOfDay
   */
  @javax.annotation.Nullable
  public BigDecimal getRatingTimeOfDay() {
    return ratingTimeOfDay;
  }

  public void setRatingTimeOfDay(BigDecimal ratingTimeOfDay) {
    this.ratingTimeOfDay = ratingTimeOfDay;
  }


  public TripsTripDetails200ResponseResultTrack shareType(String shareType) {
    this.shareType = shareType;
    return this;
  }

  /**
   * Get shareType
   * @return shareType
   */
  @javax.annotation.Nullable
  public String getShareType() {
    return shareType;
  }

  public void setShareType(String shareType) {
    this.shareType = shareType;
  }


  public TripsTripDetails200ResponseResultTrack startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }


  public TripsTripDetails200ResponseResultTrack status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public TripsTripDetails200ResponseResultTrack trackOriginCode(String trackOriginCode) {
    this.trackOriginCode = trackOriginCode;
    return this;
  }

  /**
   * Get trackOriginCode
   * @return trackOriginCode
   */
  @javax.annotation.Nullable
  public String getTrackOriginCode() {
    return trackOriginCode;
  }

  public void setTrackOriginCode(String trackOriginCode) {
    this.trackOriginCode = trackOriginCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TripsTripDetails200ResponseResultTrack tripsTripDetails200ResponseResultTrack = (TripsTripDetails200ResponseResultTrack) o;
    return Objects.equals(this.accelerationCount, tripsTripDetails200ResponseResultTrack.accelerationCount) &&
        Objects.equals(this.addressEnd, tripsTripDetails200ResponseResultTrack.addressEnd) &&
        Objects.equals(this.addressFinishParts, tripsTripDetails200ResponseResultTrack.addressFinishParts) &&
        Objects.equals(this.addressStart, tripsTripDetails200ResponseResultTrack.addressStart) &&
        Objects.equals(this.addressStartParts, tripsTripDetails200ResponseResultTrack.addressStartParts) &&
        Objects.equals(this.beaconId, tripsTripDetails200ResponseResultTrack.beaconId) &&
        Objects.equals(this.cityFinish, tripsTripDetails200ResponseResultTrack.cityFinish) &&
        Objects.equals(this.cityStart, tripsTripDetails200ResponseResultTrack.cityStart) &&
        Objects.equals(this.decelerationCount, tripsTripDetails200ResponseResultTrack.decelerationCount) &&
        Objects.equals(this.distance, tripsTripDetails200ResponseResultTrack.distance) &&
        Objects.equals(this.drivingTips, tripsTripDetails200ResponseResultTrack.drivingTips) &&
        Objects.equals(this.duration, tripsTripDetails200ResponseResultTrack.duration) &&
        Objects.equals(this.ecoScore, tripsTripDetails200ResponseResultTrack.ecoScore) &&
        Objects.equals(this.ecoScoreBrakes, tripsTripDetails200ResponseResultTrack.ecoScoreBrakes) &&
        Objects.equals(this.ecoScoreDepreciation, tripsTripDetails200ResponseResultTrack.ecoScoreDepreciation) &&
        Objects.equals(this.ecoScoreFuel, tripsTripDetails200ResponseResultTrack.ecoScoreFuel) &&
        Objects.equals(this.ecoScoreTyres, tripsTripDetails200ResponseResultTrack.ecoScoreTyres) &&
        Objects.equals(this.endDate, tripsTripDetails200ResponseResultTrack.endDate) &&
        Objects.equals(this.highOverSpeedMileage, tripsTripDetails200ResponseResultTrack.highOverSpeedMileage) &&
        Objects.equals(this.midOverSpeedMileage, tripsTripDetails200ResponseResultTrack.midOverSpeedMileage) &&
        Objects.equals(this.originChanged, tripsTripDetails200ResponseResultTrack.originChanged) &&
        Objects.equals(this.phoneUsage, tripsTripDetails200ResponseResultTrack.phoneUsage) &&
        Objects.equals(this.points, tripsTripDetails200ResponseResultTrack.points) &&
        Objects.equals(this.rating, tripsTripDetails200ResponseResultTrack.rating) &&
        Objects.equals(this.rating100, tripsTripDetails200ResponseResultTrack.rating100) &&
        Objects.equals(this.ratingAcceleration, tripsTripDetails200ResponseResultTrack.ratingAcceleration) &&
        Objects.equals(this.ratingAcceleration100, tripsTripDetails200ResponseResultTrack.ratingAcceleration100) &&
        Objects.equals(this.ratingBraking, tripsTripDetails200ResponseResultTrack.ratingBraking) &&
        Objects.equals(this.ratingBraking100, tripsTripDetails200ResponseResultTrack.ratingBraking100) &&
        Objects.equals(this.ratingCornering, tripsTripDetails200ResponseResultTrack.ratingCornering) &&
        Objects.equals(this.ratingCornering100, tripsTripDetails200ResponseResultTrack.ratingCornering100) &&
        Objects.equals(this.ratingPhoneDistraction100, tripsTripDetails200ResponseResultTrack.ratingPhoneDistraction100) &&
        Objects.equals(this.ratingPhoneUsage, tripsTripDetails200ResponseResultTrack.ratingPhoneUsage) &&
        Objects.equals(this.ratingSpeeding, tripsTripDetails200ResponseResultTrack.ratingSpeeding) &&
        Objects.equals(this.ratingSpeeding100, tripsTripDetails200ResponseResultTrack.ratingSpeeding100) &&
        Objects.equals(this.ratingTimeOfDay, tripsTripDetails200ResponseResultTrack.ratingTimeOfDay) &&
        Objects.equals(this.shareType, tripsTripDetails200ResponseResultTrack.shareType) &&
        Objects.equals(this.startDate, tripsTripDetails200ResponseResultTrack.startDate) &&
        Objects.equals(this.status, tripsTripDetails200ResponseResultTrack.status) &&
        Objects.equals(this.trackOriginCode, tripsTripDetails200ResponseResultTrack.trackOriginCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accelerationCount, addressEnd, addressFinishParts, addressStart, addressStartParts, beaconId, cityFinish, cityStart, decelerationCount, distance, drivingTips, duration, ecoScore, ecoScoreBrakes, ecoScoreDepreciation, ecoScoreFuel, ecoScoreTyres, endDate, highOverSpeedMileage, midOverSpeedMileage, originChanged, phoneUsage, points, rating, rating100, ratingAcceleration, ratingAcceleration100, ratingBraking, ratingBraking100, ratingCornering, ratingCornering100, ratingPhoneDistraction100, ratingPhoneUsage, ratingSpeeding, ratingSpeeding100, ratingTimeOfDay, shareType, startDate, status, trackOriginCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TripsTripDetails200ResponseResultTrack {\n");
    sb.append("    accelerationCount: ").append(toIndentedString(accelerationCount)).append("\n");
    sb.append("    addressEnd: ").append(toIndentedString(addressEnd)).append("\n");
    sb.append("    addressFinishParts: ").append(toIndentedString(addressFinishParts)).append("\n");
    sb.append("    addressStart: ").append(toIndentedString(addressStart)).append("\n");
    sb.append("    addressStartParts: ").append(toIndentedString(addressStartParts)).append("\n");
    sb.append("    beaconId: ").append(toIndentedString(beaconId)).append("\n");
    sb.append("    cityFinish: ").append(toIndentedString(cityFinish)).append("\n");
    sb.append("    cityStart: ").append(toIndentedString(cityStart)).append("\n");
    sb.append("    decelerationCount: ").append(toIndentedString(decelerationCount)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    drivingTips: ").append(toIndentedString(drivingTips)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    ecoScore: ").append(toIndentedString(ecoScore)).append("\n");
    sb.append("    ecoScoreBrakes: ").append(toIndentedString(ecoScoreBrakes)).append("\n");
    sb.append("    ecoScoreDepreciation: ").append(toIndentedString(ecoScoreDepreciation)).append("\n");
    sb.append("    ecoScoreFuel: ").append(toIndentedString(ecoScoreFuel)).append("\n");
    sb.append("    ecoScoreTyres: ").append(toIndentedString(ecoScoreTyres)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    highOverSpeedMileage: ").append(toIndentedString(highOverSpeedMileage)).append("\n");
    sb.append("    midOverSpeedMileage: ").append(toIndentedString(midOverSpeedMileage)).append("\n");
    sb.append("    originChanged: ").append(toIndentedString(originChanged)).append("\n");
    sb.append("    phoneUsage: ").append(toIndentedString(phoneUsage)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    rating100: ").append(toIndentedString(rating100)).append("\n");
    sb.append("    ratingAcceleration: ").append(toIndentedString(ratingAcceleration)).append("\n");
    sb.append("    ratingAcceleration100: ").append(toIndentedString(ratingAcceleration100)).append("\n");
    sb.append("    ratingBraking: ").append(toIndentedString(ratingBraking)).append("\n");
    sb.append("    ratingBraking100: ").append(toIndentedString(ratingBraking100)).append("\n");
    sb.append("    ratingCornering: ").append(toIndentedString(ratingCornering)).append("\n");
    sb.append("    ratingCornering100: ").append(toIndentedString(ratingCornering100)).append("\n");
    sb.append("    ratingPhoneDistraction100: ").append(toIndentedString(ratingPhoneDistraction100)).append("\n");
    sb.append("    ratingPhoneUsage: ").append(toIndentedString(ratingPhoneUsage)).append("\n");
    sb.append("    ratingSpeeding: ").append(toIndentedString(ratingSpeeding)).append("\n");
    sb.append("    ratingSpeeding100: ").append(toIndentedString(ratingSpeeding100)).append("\n");
    sb.append("    ratingTimeOfDay: ").append(toIndentedString(ratingTimeOfDay)).append("\n");
    sb.append("    shareType: ").append(toIndentedString(shareType)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    trackOriginCode: ").append(toIndentedString(trackOriginCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccelerationCount");
    openapiFields.add("AddressEnd");
    openapiFields.add("AddressFinishParts");
    openapiFields.add("AddressStart");
    openapiFields.add("AddressStartParts");
    openapiFields.add("BeaconId");
    openapiFields.add("CityFinish");
    openapiFields.add("CityStart");
    openapiFields.add("DecelerationCount");
    openapiFields.add("Distance");
    openapiFields.add("DrivingTips");
    openapiFields.add("Duration");
    openapiFields.add("EcoScore");
    openapiFields.add("EcoScoreBrakes");
    openapiFields.add("EcoScoreDepreciation");
    openapiFields.add("EcoScoreFuel");
    openapiFields.add("EcoScoreTyres");
    openapiFields.add("EndDate");
    openapiFields.add("HighOverSpeedMileage");
    openapiFields.add("MidOverSpeedMileage");
    openapiFields.add("OriginChanged");
    openapiFields.add("PhoneUsage");
    openapiFields.add("Points");
    openapiFields.add("Rating");
    openapiFields.add("Rating100");
    openapiFields.add("RatingAcceleration");
    openapiFields.add("RatingAcceleration100");
    openapiFields.add("RatingBraking");
    openapiFields.add("RatingBraking100");
    openapiFields.add("RatingCornering");
    openapiFields.add("RatingCornering100");
    openapiFields.add("RatingPhoneDistraction100");
    openapiFields.add("RatingPhoneUsage");
    openapiFields.add("RatingSpeeding");
    openapiFields.add("RatingSpeeding100");
    openapiFields.add("RatingTimeOfDay");
    openapiFields.add("ShareType");
    openapiFields.add("StartDate");
    openapiFields.add("Status");
    openapiFields.add("TrackOriginCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TripsTripDetails200ResponseResultTrack
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TripsTripDetails200ResponseResultTrack.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TripsTripDetails200ResponseResultTrack is not found in the empty JSON string", TripsTripDetails200ResponseResultTrack.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TripsTripDetails200ResponseResultTrack.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TripsTripDetails200ResponseResultTrack` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AddressEnd") != null && !jsonObj.get("AddressEnd").isJsonNull()) && !jsonObj.get("AddressEnd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AddressEnd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AddressEnd").toString()));
      }
      // validate the optional field `AddressFinishParts`
      if (jsonObj.get("AddressFinishParts") != null && !jsonObj.get("AddressFinishParts").isJsonNull()) {
        TripsTripDetails200ResponseResultTrackAddressFinishParts.validateJsonElement(jsonObj.get("AddressFinishParts"));
      }
      if ((jsonObj.get("AddressStart") != null && !jsonObj.get("AddressStart").isJsonNull()) && !jsonObj.get("AddressStart").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AddressStart` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AddressStart").toString()));
      }
      // validate the optional field `AddressStartParts`
      if (jsonObj.get("AddressStartParts") != null && !jsonObj.get("AddressStartParts").isJsonNull()) {
        TripsTripDetails200ResponseResultTrackAddressFinishParts.validateJsonElement(jsonObj.get("AddressStartParts"));
      }
      if ((jsonObj.get("CityFinish") != null && !jsonObj.get("CityFinish").isJsonNull()) && !jsonObj.get("CityFinish").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CityFinish` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CityFinish").toString()));
      }
      if ((jsonObj.get("CityStart") != null && !jsonObj.get("CityStart").isJsonNull()) && !jsonObj.get("CityStart").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CityStart` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CityStart").toString()));
      }
      if ((jsonObj.get("DrivingTips") != null && !jsonObj.get("DrivingTips").isJsonNull()) && !jsonObj.get("DrivingTips").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DrivingTips` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DrivingTips").toString()));
      }
      if ((jsonObj.get("EndDate") != null && !jsonObj.get("EndDate").isJsonNull()) && !jsonObj.get("EndDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EndDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EndDate").toString()));
      }
      if (jsonObj.get("Points") != null && !jsonObj.get("Points").isJsonNull()) {
        JsonArray jsonArraypoints = jsonObj.getAsJsonArray("Points");
        if (jsonArraypoints != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Points").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Points` to be an array in the JSON string but got `%s`", jsonObj.get("Points").toString()));
          }

          // validate the optional field `Points` (array)
          for (int i = 0; i < jsonArraypoints.size(); i++) {
            TripsTripDetails200ResponseResultTrackPointsInner.validateJsonElement(jsonArraypoints.get(i));
          };
        }
      }
      if ((jsonObj.get("ShareType") != null && !jsonObj.get("ShareType").isJsonNull()) && !jsonObj.get("ShareType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShareType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShareType").toString()));
      }
      if ((jsonObj.get("StartDate") != null && !jsonObj.get("StartDate").isJsonNull()) && !jsonObj.get("StartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StartDate").toString()));
      }
      if ((jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) && !jsonObj.get("Status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Status").toString()));
      }
      if ((jsonObj.get("TrackOriginCode") != null && !jsonObj.get("TrackOriginCode").isJsonNull()) && !jsonObj.get("TrackOriginCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TrackOriginCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TrackOriginCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TripsTripDetails200ResponseResultTrack.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TripsTripDetails200ResponseResultTrack' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TripsTripDetails200ResponseResultTrack> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TripsTripDetails200ResponseResultTrack.class));

       return (TypeAdapter<T>) new TypeAdapter<TripsTripDetails200ResponseResultTrack>() {
           @Override
           public void write(JsonWriter out, TripsTripDetails200ResponseResultTrack value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TripsTripDetails200ResponseResultTrack read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TripsTripDetails200ResponseResultTrack given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TripsTripDetails200ResponseResultTrack
   * @throws IOException if the JSON string is invalid with respect to TripsTripDetails200ResponseResultTrack
   */
  public static TripsTripDetails200ResponseResultTrack fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TripsTripDetails200ResponseResultTrack.class);
  }

  /**
   * Convert an instance of TripsTripDetails200ResponseResultTrack to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

