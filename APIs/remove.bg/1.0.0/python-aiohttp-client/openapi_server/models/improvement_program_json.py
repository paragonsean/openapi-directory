# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImprovementProgramJson(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_file_b64: str=None, image_filename: str=None, image_url: str=None, tag: str=None):
        """ImprovementProgramJson - a model defined in OpenAPI

        :param image_file_b64: The image_file_b64 of this ImprovementProgramJson.
        :param image_filename: The image_filename of this ImprovementProgramJson.
        :param image_url: The image_url of this ImprovementProgramJson.
        :param tag: The tag of this ImprovementProgramJson.
        """
        self.openapi_types = {
            'image_file_b64': str,
            'image_filename': str,
            'image_url': str,
            'tag': str
        }

        self.attribute_map = {
            'image_file_b64': 'image_file_b64',
            'image_filename': 'image_filename',
            'image_url': 'image_url',
            'tag': 'tag'
        }

        self._image_file_b64 = image_file_b64
        self._image_filename = image_filename
        self._image_url = image_url
        self._tag = tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImprovementProgramJson':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImprovementProgramJson of this ImprovementProgramJson.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_file_b64(self):
        """Gets the image_file_b64 of this ImprovementProgramJson.

        Source image file (base64-encoded string). (If this parameter is present, the other image source parameters must be empty.)

        :return: The image_file_b64 of this ImprovementProgramJson.
        :rtype: str
        """
        return self._image_file_b64

    @image_file_b64.setter
    def image_file_b64(self, image_file_b64):
        """Sets the image_file_b64 of this ImprovementProgramJson.

        Source image file (base64-encoded string). (If this parameter is present, the other image source parameters must be empty.)

        :param image_file_b64: The image_file_b64 of this ImprovementProgramJson.
        :type image_file_b64: str
        """

        self._image_file_b64 = image_file_b64

    @property
    def image_filename(self):
        """Gets the image_filename of this ImprovementProgramJson.

        Filename of the image, if not provided it will be autodetected form the submitted data.

        :return: The image_filename of this ImprovementProgramJson.
        :rtype: str
        """
        return self._image_filename

    @image_filename.setter
    def image_filename(self, image_filename):
        """Sets the image_filename of this ImprovementProgramJson.

        Filename of the image, if not provided it will be autodetected form the submitted data.

        :param image_filename: The image_filename of this ImprovementProgramJson.
        :type image_filename: str
        """

        self._image_filename = image_filename

    @property
    def image_url(self):
        """Gets the image_url of this ImprovementProgramJson.

        Source image URL. (If this parameter is present, the other image source parameters must be empty.)

        :return: The image_url of this ImprovementProgramJson.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this ImprovementProgramJson.

        Source image URL. (If this parameter is present, the other image source parameters must be empty.)

        :param image_url: The image_url of this ImprovementProgramJson.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def tag(self):
        """Gets the tag of this ImprovementProgramJson.

        Images with the same tag are grouped together.

        :return: The tag of this ImprovementProgramJson.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this ImprovementProgramJson.

        Images with the same tag are grouped together.

        :param tag: The tag of this ImprovementProgramJson.
        :type tag: str
        """

        self._tag = tag
