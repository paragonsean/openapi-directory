/**
 * Background Removal API
 * Remove the background of any image
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BackgroundRemovalApi);
  }
}(this, function(expect, BackgroundRemovalApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BackgroundRemovalApi.RemoveBgJson();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RemoveBgJson', function() {
    it('should create an instance of RemoveBgJson', function() {
      // uncomment below and update the code to test RemoveBgJson
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be.a(BackgroundRemovalApi.RemoveBgJson);
    });

    it('should have the property addShadow (base name: "add_shadow")', function() {
      // uncomment below and update the code to test the property addShadow
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property bgColor (base name: "bg_color")', function() {
      // uncomment below and update the code to test the property bgColor
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property bgImageUrl (base name: "bg_image_url")', function() {
      // uncomment below and update the code to test the property bgImageUrl
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property channels (base name: "channels")', function() {
      // uncomment below and update the code to test the property channels
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property crop (base name: "crop")', function() {
      // uncomment below and update the code to test the property crop
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property cropMargin (base name: "crop_margin")', function() {
      // uncomment below and update the code to test the property cropMargin
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property format (base name: "format")', function() {
      // uncomment below and update the code to test the property format
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property imageFileB64 (base name: "image_file_b64")', function() {
      // uncomment below and update the code to test the property imageFileB64
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property imageUrl (base name: "image_url")', function() {
      // uncomment below and update the code to test the property imageUrl
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property position (base name: "position")', function() {
      // uncomment below and update the code to test the property position
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property roi (base name: "roi")', function() {
      // uncomment below and update the code to test the property roi
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property scale (base name: "scale")', function() {
      // uncomment below and update the code to test the property scale
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property semitransparency (base name: "semitransparency")', function() {
      // uncomment below and update the code to test the property semitransparency
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

    it('should have the property typeLevel (base name: "type_level")', function() {
      // uncomment below and update the code to test the property typeLevel
      //var instance = new BackgroundRemovalApi.RemoveBgJson();
      //expect(instance).to.be();
    });

  });

}));
