/**
 * Background Removal API
 * Remove the background of any image
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthFailed from '../model/AuthFailed';
import ImprovePost400Response from '../model/ImprovePost400Response';
import ImprovementProgramJson from '../model/ImprovementProgramJson';
import ImprovementProgramJsonResponse from '../model/ImprovementProgramJsonResponse';
import ImprovementProgramMultipart from '../model/ImprovementProgramMultipart';
import RateLimit from '../model/RateLimit';

/**
* ImprovementProgram service.
* @module api/ImprovementProgramApi
* @version 1.0.0
*/
export default class ImprovementProgramApi {

    /**
    * Constructs a new ImprovementProgramApi. 
    * @alias module:api/ImprovementProgramApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the improvePost operation.
     * @callback module:api/ImprovementProgramApi~improvePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ImprovementProgramJsonResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Submit an image to the remove.bg Improvement program * Contribute an image that remove.bg is currently not able to remove the background from properly * Help us make remove.bg better * Get better results for similiar images in the future  Notes:   * By submitting images through the API you agree to the <a target=\"_blank\" rel=\"noopener\" href=\"/ipc\">Improvement Program Conditions</a>   * File size: up to 12MB   * up to 100 files per day. <br> Higher Rate Limits are available for Enterprise customers <a href=\"/support/contact?subject=Improvement+Program+Rate+Limit\">upon request</a>.  Requires either an API Key to be provided in the `X-API-Key` request header or an OAuth 2.0 access token to be provided in the `Authorization` request header.  Please note that submissions are used on a best-effort basis and the extent of expected improvement varies depending on many factors, including the number of provided images, their complexity and visual similarity. Improvements usually take several weeks to become effective. 
     * @param {module:model/ImprovementProgramJson} improvementProgramJson 
     * @param {module:api/ImprovementProgramApi~improvePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ImprovementProgramJsonResponse}
     */
    improvePost(improvementProgramJson, callback) {
      let postBody = improvementProgramJson;
      // verify the required parameter 'improvementProgramJson' is set
      if (improvementProgramJson === undefined || improvementProgramJson === null) {
        throw new Error("Missing the required parameter 'improvementProgramJson' when calling improvePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['APIKeyHeader'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['*/*'];
      let returnType = ImprovementProgramJsonResponse;
      return this.apiClient.callApi(
        '/improve', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
