/**
 * Background Removal API
 * Remove the background of any image
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_account_get_200_response_data_attributes_api.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_account_get_200_response_data_attributes_api::OAI_account_get_200_response_data_attributes_api(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_account_get_200_response_data_attributes_api::OAI_account_get_200_response_data_attributes_api() {
    this->initializeModel();
}

OAI_account_get_200_response_data_attributes_api::~OAI_account_get_200_response_data_attributes_api() {}

void OAI_account_get_200_response_data_attributes_api::initializeModel() {

    m_free_calls_isSet = false;
    m_free_calls_isValid = false;

    m_sizes_isSet = false;
    m_sizes_isValid = false;
}

void OAI_account_get_200_response_data_attributes_api::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_account_get_200_response_data_attributes_api::fromJsonObject(QJsonObject json) {

    m_free_calls_isValid = ::OpenAPI::fromJsonValue(m_free_calls, json[QString("free_calls")]);
    m_free_calls_isSet = !json[QString("free_calls")].isNull() && m_free_calls_isValid;

    m_sizes_isValid = ::OpenAPI::fromJsonValue(m_sizes, json[QString("sizes")]);
    m_sizes_isSet = !json[QString("sizes")].isNull() && m_sizes_isValid;
}

QString OAI_account_get_200_response_data_attributes_api::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_account_get_200_response_data_attributes_api::asJsonObject() const {
    QJsonObject obj;
    if (m_free_calls_isSet) {
        obj.insert(QString("free_calls"), ::OpenAPI::toJsonValue(m_free_calls));
    }
    if (m_sizes_isSet) {
        obj.insert(QString("sizes"), ::OpenAPI::toJsonValue(m_sizes));
    }
    return obj;
}

qint32 OAI_account_get_200_response_data_attributes_api::getFreeCalls() const {
    return m_free_calls;
}
void OAI_account_get_200_response_data_attributes_api::setFreeCalls(const qint32 &free_calls) {
    m_free_calls = free_calls;
    m_free_calls_isSet = true;
}

bool OAI_account_get_200_response_data_attributes_api::is_free_calls_Set() const{
    return m_free_calls_isSet;
}

bool OAI_account_get_200_response_data_attributes_api::is_free_calls_Valid() const{
    return m_free_calls_isValid;
}

QString OAI_account_get_200_response_data_attributes_api::getSizes() const {
    return m_sizes;
}
void OAI_account_get_200_response_data_attributes_api::setSizes(const QString &sizes) {
    m_sizes = sizes;
    m_sizes_isSet = true;
}

bool OAI_account_get_200_response_data_attributes_api::is_sizes_Set() const{
    return m_sizes_isSet;
}

bool OAI_account_get_200_response_data_attributes_api::is_sizes_Valid() const{
    return m_sizes_isValid;
}

bool OAI_account_get_200_response_data_attributes_api::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_free_calls_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sizes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_account_get_200_response_data_attributes_api::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
