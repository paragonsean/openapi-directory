/**
 * Background Removal API
 * Remove the background of any image
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_account_get_200_response_data_attributes_credits.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_account_get_200_response_data_attributes_credits::OAI_account_get_200_response_data_attributes_credits(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_account_get_200_response_data_attributes_credits::OAI_account_get_200_response_data_attributes_credits() {
    this->initializeModel();
}

OAI_account_get_200_response_data_attributes_credits::~OAI_account_get_200_response_data_attributes_credits() {}

void OAI_account_get_200_response_data_attributes_credits::initializeModel() {

    m_enterprise_isSet = false;
    m_enterprise_isValid = false;

    m_payg_isSet = false;
    m_payg_isValid = false;

    m_subscription_isSet = false;
    m_subscription_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAI_account_get_200_response_data_attributes_credits::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_account_get_200_response_data_attributes_credits::fromJsonObject(QJsonObject json) {

    m_enterprise_isValid = ::OpenAPI::fromJsonValue(m_enterprise, json[QString("enterprise")]);
    m_enterprise_isSet = !json[QString("enterprise")].isNull() && m_enterprise_isValid;

    m_payg_isValid = ::OpenAPI::fromJsonValue(m_payg, json[QString("payg")]);
    m_payg_isSet = !json[QString("payg")].isNull() && m_payg_isValid;

    m_subscription_isValid = ::OpenAPI::fromJsonValue(m_subscription, json[QString("subscription")]);
    m_subscription_isSet = !json[QString("subscription")].isNull() && m_subscription_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAI_account_get_200_response_data_attributes_credits::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_account_get_200_response_data_attributes_credits::asJsonObject() const {
    QJsonObject obj;
    if (m_enterprise_isSet) {
        obj.insert(QString("enterprise"), ::OpenAPI::toJsonValue(m_enterprise));
    }
    if (m_payg_isSet) {
        obj.insert(QString("payg"), ::OpenAPI::toJsonValue(m_payg));
    }
    if (m_subscription_isSet) {
        obj.insert(QString("subscription"), ::OpenAPI::toJsonValue(m_subscription));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

float OAI_account_get_200_response_data_attributes_credits::getEnterprise() const {
    return m_enterprise;
}
void OAI_account_get_200_response_data_attributes_credits::setEnterprise(const float &enterprise) {
    m_enterprise = enterprise;
    m_enterprise_isSet = true;
}

bool OAI_account_get_200_response_data_attributes_credits::is_enterprise_Set() const{
    return m_enterprise_isSet;
}

bool OAI_account_get_200_response_data_attributes_credits::is_enterprise_Valid() const{
    return m_enterprise_isValid;
}

float OAI_account_get_200_response_data_attributes_credits::getPayg() const {
    return m_payg;
}
void OAI_account_get_200_response_data_attributes_credits::setPayg(const float &payg) {
    m_payg = payg;
    m_payg_isSet = true;
}

bool OAI_account_get_200_response_data_attributes_credits::is_payg_Set() const{
    return m_payg_isSet;
}

bool OAI_account_get_200_response_data_attributes_credits::is_payg_Valid() const{
    return m_payg_isValid;
}

float OAI_account_get_200_response_data_attributes_credits::getSubscription() const {
    return m_subscription;
}
void OAI_account_get_200_response_data_attributes_credits::setSubscription(const float &subscription) {
    m_subscription = subscription;
    m_subscription_isSet = true;
}

bool OAI_account_get_200_response_data_attributes_credits::is_subscription_Set() const{
    return m_subscription_isSet;
}

bool OAI_account_get_200_response_data_attributes_credits::is_subscription_Valid() const{
    return m_subscription_isValid;
}

float OAI_account_get_200_response_data_attributes_credits::getTotal() const {
    return m_total;
}
void OAI_account_get_200_response_data_attributes_credits::setTotal(const float &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAI_account_get_200_response_data_attributes_credits::is_total_Set() const{
    return m_total_isSet;
}

bool OAI_account_get_200_response_data_attributes_credits::is_total_Valid() const{
    return m_total_isValid;
}

bool OAI_account_get_200_response_data_attributes_credits::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enterprise_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payg_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_account_get_200_response_data_attributes_credits::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
