/*
 * GoToMeeting
 * <br>The GoToMeeting API provides seamless integration of GoToMeeting provisioning and meeting management into your existing infrastructure or third party applications.<br><br>For customers, the ability to add, suspend or delete an organizer in your GoToMeeting Corporate account from within your primary management systems simplifies and streamlines the entire process of account management. The ability to monitor meeting schedules, history and active meeting status allows managers to leverage GoToMeeting activities through your primary applications.<br><br>For third parties, the ability to create, update or delete a meeting from within your application makes real-time collaboration possible for your customers. The ability to update meeting schedules, view history and scheduled meetings, and view attendees from past meetings allows you to enhance your users' experience and the value of your applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@citrixonline.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AttendeeByOrganizer;
import org.openapitools.client.model.HistoricalMeeting;
import org.openapitools.client.model.MeetingByOrganizer;
import java.time.OffsetDateTime;
import org.openapitools.client.model.Organizer;
import org.openapitools.client.model.OrganizerReq;
import org.openapitools.client.model.OrganizerShort;
import org.openapitools.client.model.OrganizerStatus;
import org.openapitools.client.model.UpcomingMeeting;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrganizersApi
 */
@Disabled
public class OrganizersApiTest {

    private final OrganizersApi api = new OrganizersApi();

    /**
     * Delete organizer by email
     *
     * Deletes the individual organizer specified by the email address. This API call is only available to users with the admin role.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organizersDeleteTest() throws ApiException {
        String authorization = null;
        String email = null;
        api.organizersDelete(authorization, email);
        // TODO: test validations
    }

    /**
     * Get organizer by email / Get all organizers
     *
     * Gets the individual organizer specified by the organizer&#39;s email address. If an email address is not specified, all organizers are returned. This API call is only available to users with the admin role.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organizersGetTest() throws ApiException {
        String authorization = null;
        String email = null;
        List<Organizer> response = api.organizersGet(authorization, email);
        // TODO: test validations
    }

    /**
     * Get attendees by organizer
     *
     * Lists all attendees for all meetings within a specified date range for a specified organizer. This API call is only available to users with the admin role.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organizersOrganizerKeyAttendeesGetTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        List<AttendeeByOrganizer> response = api.organizersOrganizerKeyAttendeesGet(authorization, organizerKey, startDate, endDate);
        // TODO: test validations
    }

    /**
     * Delete organizer
     *
     * Deletes the individual organizer specified by the organizer key. This API call is only available to users with the admin role.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organizersOrganizerKeyDeleteTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        api.organizersOrganizerKeyDelete(authorization, organizerKey);
        // TODO: test validations
    }

    /**
     * Get organizer
     *
     * Returns the individual organizer specified by the key. This API call is only available to users with the admin role. Non-admin users can only make this call for their own organizerKey.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organizersOrganizerKeyGetTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        List<Organizer> response = api.organizersOrganizerKeyGet(authorization, organizerKey);
        // TODO: test validations
    }

    /**
     * Get historical meetings by organizer
     *
     * Get historical meetings for the specified organizer that started within the specified date/time range. Remark: Meetings which are still ongoing at the time of the request are NOT contained in the result array.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organizersOrganizerKeyHistoricalMeetingsGetTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        List<HistoricalMeeting> response = api.organizersOrganizerKeyHistoricalMeetingsGet(authorization, organizerKey, startDate, endDate);
        // TODO: test validations
    }

    /**
     * DEPRECATED: Get meetings by organizer
     *
     * DEPRECATED: Please use the new API calls &#39;Get historical meetings by organizer&#39; and &#39;Get upcoming meetings by organizer&#39;. Gets future (scheduled) or past (history) meetings for a specified organizer. Include &#39;history&#x3D;true&#39; and the past start and end dates in the URL to retrieve past meetings. Enter &#39;scheduled&#x3D;true&#39; (without dates) to get scheduled meetings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organizersOrganizerKeyMeetingsGetTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Boolean scheduled = null;
        Boolean history = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        List<MeetingByOrganizer> response = api.organizersOrganizerKeyMeetingsGet(authorization, organizerKey, scheduled, history, startDate, endDate);
        // TODO: test validations
    }

    /**
     * Update organizer
     *
     * Updates the products of the specified organizer. To add a product (G2M, G2W, G2T, OPENVOICE) for the organizer, the call must be sent once for each product you want to add. To remove all products for the organizer, set status to &#39;suspended&#39;. The call is limited to users with the admin role.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organizersOrganizerKeyPutTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        OrganizerStatus body = null;
        api.organizersOrganizerKeyPut(authorization, organizerKey, body);
        // TODO: test validations
    }

    /**
     * Get upcoming meetings by organizer
     *
     * Get upcoming meetings for a specified organizer. This API call is only available to users with the admin role.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organizersOrganizerKeyUpcomingMeetingsGetTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        List<UpcomingMeeting> response = api.organizersOrganizerKeyUpcomingMeetingsGet(authorization, organizerKey);
        // TODO: test validations
    }

    /**
     * Create organizer
     *
     * Creates a new organizer and sends an email to the email address defined in the request. This API call is only available to users with the admin role. You may also pass &#39;G2W&#39; or &#39;G2T&#39; or &#39;OPENVOICE&#39; as productType variables, creating organizers for those products. A G2W or G2T organizer will also have access to G2M.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void organizersPostTest() throws ApiException {
        String authorization = null;
        OrganizerReq body = null;
        List<OrganizerShort> response = api.organizersPost(authorization, body);
        // TODO: test validations
    }

}
