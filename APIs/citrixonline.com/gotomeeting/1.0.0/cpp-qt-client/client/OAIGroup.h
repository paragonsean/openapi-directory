/**
 * GoToMeeting
 * <br>The GoToMeeting API provides seamless integration of GoToMeeting provisioning and meeting management into your existing infrastructure or third party applications.<br><br>For customers, the ability to add, suspend or delete an organizer in your GoToMeeting Corporate account from within your primary management systems simplifies and streamlines the entire process of account management. The ability to monitor meeting schedules, history and active meeting status allows managers to leverage GoToMeeting activities through your primary applications.<br><br>For third parties, the ability to create, update or delete a meeting from within your application makes real-time collaboration possible for your customers. The ability to update meeting schedules, view history and scheduled meetings, and view attendees from past meetings allows you to enhance your users' experience and the value of your applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@citrixonline.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGroup.h
 *
 * Describes a collection of organizers categorized by department or job function, for example. Can be a subgroup of a larger group.
 */

#ifndef OAIGroup_H
#define OAIGroup_H

#include <QJsonObject>

#include "OAIStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGroup : public OAIObject {
public:
    OAIGroup();
    OAIGroup(QString json);
    ~OAIGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGroupName() const;
    void setGroupName(const QString &group_name);
    bool is_group_name_Set() const;
    bool is_group_name_Valid() const;

    qint64 getGroupkey() const;
    void setGroupkey(const qint64 &groupkey);
    bool is_groupkey_Set() const;
    bool is_groupkey_Valid() const;

    qint32 getNumOrganizers() const;
    void setNumOrganizers(const qint32 &num_organizers);
    bool is_num_organizers_Set() const;
    bool is_num_organizers_Valid() const;

    qint64 getParentKey() const;
    void setParentKey(const qint64 &parent_key);
    bool is_parent_key_Set() const;
    bool is_parent_key_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_group_name;
    bool m_group_name_isSet;
    bool m_group_name_isValid;

    qint64 m_groupkey;
    bool m_groupkey_isSet;
    bool m_groupkey_isValid;

    qint32 m_num_organizers;
    bool m_num_organizers_isSet;
    bool m_num_organizers_isValid;

    qint64 m_parent_key;
    bool m_parent_key_isSet;
    bool m_parent_key_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGroup)

#endif // OAIGroup_H
