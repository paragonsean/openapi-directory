/**
 * GoToMeeting
 * <br>The GoToMeeting API provides seamless integration of GoToMeeting provisioning and meeting management into your existing infrastructure or third party applications.<br><br>For customers, the ability to add, suspend or delete an organizer in your GoToMeeting Corporate account from within your primary management systems simplifies and streamlines the entire process of account management. The ability to monitor meeting schedules, history and active meeting status allows managers to leverage GoToMeeting activities through your primary applications.<br><br>For third parties, the ability to create, update or delete a meeting from within your application makes real-time collaboration possible for your customers. The ability to update meeting schedules, view history and scheduled meetings, and view attendees from past meetings allows you to enhance your users' experience and the value of your applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@citrixonline.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrganizerStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrganizerStatus::OAIOrganizerStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrganizerStatus::OAIOrganizerStatus() {
    this->initializeModel();
}

OAIOrganizerStatus::~OAIOrganizerStatus() {}

void OAIOrganizerStatus::initializeModel() {

    m_product_type_isSet = false;
    m_product_type_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIOrganizerStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrganizerStatus::fromJsonObject(QJsonObject json) {

    m_product_type_isValid = ::OpenAPI::fromJsonValue(m_product_type, json[QString("productType")]);
    m_product_type_isSet = !json[QString("productType")].isNull() && m_product_type_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIOrganizerStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrganizerStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_product_type.isSet()) {
        obj.insert(QString("productType"), ::OpenAPI::toJsonValue(m_product_type));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIProduct OAIOrganizerStatus::getProductType() const {
    return m_product_type;
}
void OAIOrganizerStatus::setProductType(const OAIProduct &product_type) {
    m_product_type = product_type;
    m_product_type_isSet = true;
}

bool OAIOrganizerStatus::is_product_type_Set() const{
    return m_product_type_isSet;
}

bool OAIOrganizerStatus::is_product_type_Valid() const{
    return m_product_type_isValid;
}

QString OAIOrganizerStatus::getStatus() const {
    return m_status;
}
void OAIOrganizerStatus::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIOrganizerStatus::is_status_Set() const{
    return m_status_isSet;
}

bool OAIOrganizerStatus::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIOrganizerStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_product_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrganizerStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
