/**
 * GoToMeeting
 * <br>The GoToMeeting API provides seamless integration of GoToMeeting provisioning and meeting management into your existing infrastructure or third party applications.<br><br>For customers, the ability to add, suspend or delete an organizer in your GoToMeeting Corporate account from within your primary management systems simplifies and streamlines the entire process of account management. The ability to monitor meeting schedules, history and active meeting status allows managers to leverage GoToMeeting activities through your primary applications.<br><br>For third parties, the ability to create, update or delete a meeting from within your application makes real-time collaboration possible for your customers. The ability to update meeting schedules, view history and scheduled meetings, and view attendees from past meetings allows you to enhance your users' experience and the value of your applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@citrixonline.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MeetingType from './MeetingType';

/**
 * The MeetingReqCreate model module.
 * @module model/MeetingReqCreate
 * @version 1.0.0
 */
class MeetingReqCreate {
    /**
     * Constructs a new <code>MeetingReqCreate</code>.
     * Describes the information required to create a meeting.
     * @alias module:model/MeetingReqCreate
     * @param conferencecallinfo {String} A required string. Can be one of the following options: <br>PSTN (PSTN only), <br>Free (PSTN and VoIP), <br>Hybrid, (PSTN and VoIP), <br>Private (you provide numbers and access code), or <br>VoIP (VoIP only). <br>You may also enter plain text for numbers and access codes with a limit of 255 characters
     * @param endtime {Date} The ending time of the meeting. Required ISO8601 UTC string, e.g. 2015-07-01T23:00:00Z
     * @param meetingtype {module:model/MeetingType} 
     * @param passwordrequired {Boolean} Indicates whether a password is required to join the meeting. Required parameter
     * @param starttime {Date} The starting time of the meeting. Required ISO8601 UTC string, e.g. 2015-07-01T22:00:00Z
     * @param subject {String} The subject of the meeting. 100 characters maximum. The characters '&gt;' and '&lt;' have to be replaced with the corresponding html character code (&amp;gt; for &#39;&gt;&#39; and &amp;lt; for &#39;&lt;&#39;)
     * @param timezonekey {String} DEPRECATED. Must be provided and set to empty string ''
     */
    constructor(conferencecallinfo, endtime, meetingtype, passwordrequired, starttime, subject, timezonekey) { 
        
        MeetingReqCreate.initialize(this, conferencecallinfo, endtime, meetingtype, passwordrequired, starttime, subject, timezonekey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, conferencecallinfo, endtime, meetingtype, passwordrequired, starttime, subject, timezonekey) { 
        obj['conferencecallinfo'] = conferencecallinfo;
        obj['endtime'] = endtime;
        obj['meetingtype'] = meetingtype;
        obj['passwordrequired'] = passwordrequired;
        obj['starttime'] = starttime;
        obj['subject'] = subject;
        obj['timezonekey'] = timezonekey;
    }

    /**
     * Constructs a <code>MeetingReqCreate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MeetingReqCreate} obj Optional instance to populate.
     * @return {module:model/MeetingReqCreate} The populated <code>MeetingReqCreate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MeetingReqCreate();

            if (data.hasOwnProperty('conferencecallinfo')) {
                obj['conferencecallinfo'] = ApiClient.convertToType(data['conferencecallinfo'], 'String');
            }
            if (data.hasOwnProperty('endtime')) {
                obj['endtime'] = ApiClient.convertToType(data['endtime'], 'Date');
            }
            if (data.hasOwnProperty('meetingtype')) {
                obj['meetingtype'] = MeetingType.constructFromObject(data['meetingtype']);
            }
            if (data.hasOwnProperty('passwordrequired')) {
                obj['passwordrequired'] = ApiClient.convertToType(data['passwordrequired'], 'Boolean');
            }
            if (data.hasOwnProperty('starttime')) {
                obj['starttime'] = ApiClient.convertToType(data['starttime'], 'Date');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('timezonekey')) {
                obj['timezonekey'] = ApiClient.convertToType(data['timezonekey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MeetingReqCreate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MeetingReqCreate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MeetingReqCreate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['conferencecallinfo'] && !(typeof data['conferencecallinfo'] === 'string' || data['conferencecallinfo'] instanceof String)) {
            throw new Error("Expected the field `conferencecallinfo` to be a primitive type in the JSON string but got " + data['conferencecallinfo']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is a string
        if (data['timezonekey'] && !(typeof data['timezonekey'] === 'string' || data['timezonekey'] instanceof String)) {
            throw new Error("Expected the field `timezonekey` to be a primitive type in the JSON string but got " + data['timezonekey']);
        }

        return true;
    }


}

MeetingReqCreate.RequiredProperties = ["conferencecallinfo", "endtime", "meetingtype", "passwordrequired", "starttime", "subject", "timezonekey"];

/**
 * A required string. Can be one of the following options: <br>PSTN (PSTN only), <br>Free (PSTN and VoIP), <br>Hybrid, (PSTN and VoIP), <br>Private (you provide numbers and access code), or <br>VoIP (VoIP only). <br>You may also enter plain text for numbers and access codes with a limit of 255 characters
 * @member {String} conferencecallinfo
 */
MeetingReqCreate.prototype['conferencecallinfo'] = undefined;

/**
 * The ending time of the meeting. Required ISO8601 UTC string, e.g. 2015-07-01T23:00:00Z
 * @member {Date} endtime
 */
MeetingReqCreate.prototype['endtime'] = undefined;

/**
 * @member {module:model/MeetingType} meetingtype
 */
MeetingReqCreate.prototype['meetingtype'] = undefined;

/**
 * Indicates whether a password is required to join the meeting. Required parameter
 * @member {Boolean} passwordrequired
 */
MeetingReqCreate.prototype['passwordrequired'] = undefined;

/**
 * The starting time of the meeting. Required ISO8601 UTC string, e.g. 2015-07-01T22:00:00Z
 * @member {Date} starttime
 */
MeetingReqCreate.prototype['starttime'] = undefined;

/**
 * The subject of the meeting. 100 characters maximum. The characters '&gt;' and '&lt;' have to be replaced with the corresponding html character code (&amp;gt; for &#39;&gt;&#39; and &amp;lt; for &#39;&lt;&#39;)
 * @member {String} subject
 */
MeetingReqCreate.prototype['subject'] = undefined;

/**
 * DEPRECATED. Must be provided and set to empty string ''
 * @member {String} timezonekey
 */
MeetingReqCreate.prototype['timezonekey'] = undefined;






export default MeetingReqCreate;

