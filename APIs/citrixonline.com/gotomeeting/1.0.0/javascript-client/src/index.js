/**
 * GoToMeeting
 * <br>The GoToMeeting API provides seamless integration of GoToMeeting provisioning and meeting management into your existing infrastructure or third party applications.<br><br>For customers, the ability to add, suspend or delete an organizer in your GoToMeeting Corporate account from within your primary management systems simplifies and streamlines the entire process of account management. The ability to monitor meeting schedules, history and active meeting status allows managers to leverage GoToMeeting activities through your primary applications.<br><br>For third parties, the ability to create, update or delete a meeting from within your application makes real-time collaboration possible for your customers. The ability to update meeting schedules, view history and scheduled meetings, and view attendees from past meetings allows you to enhance your users' experience and the value of your applications.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@citrixonline.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AttendeeByGroup from './model/AttendeeByGroup';
import AttendeeByMeeting from './model/AttendeeByMeeting';
import AttendeeByOrganizer from './model/AttendeeByOrganizer';
import Group from './model/Group';
import HistoricalMeeting from './model/HistoricalMeeting';
import HistoricalMeetingByGroup from './model/HistoricalMeetingByGroup';
import HistoryMeetingByGroup from './model/HistoryMeetingByGroup';
import MeetingById from './model/MeetingById';
import MeetingByOrganizer from './model/MeetingByOrganizer';
import MeetingCreated from './model/MeetingCreated';
import MeetingHistory from './model/MeetingHistory';
import MeetingReqCreate from './model/MeetingReqCreate';
import MeetingReqUpdate from './model/MeetingReqUpdate';
import MeetingScheduled from './model/MeetingScheduled';
import MeetingStatus from './model/MeetingStatus';
import MeetingType from './model/MeetingType';
import Organizer from './model/Organizer';
import OrganizerByGroup from './model/OrganizerByGroup';
import OrganizerReq from './model/OrganizerReq';
import OrganizerShort from './model/OrganizerShort';
import OrganizerStatus from './model/OrganizerStatus';
import Product from './model/Product';
import ScheduledMeetingByGroup from './model/ScheduledMeetingByGroup';
import StartUrl from './model/StartUrl';
import Status from './model/Status';
import UpcomingMeeting from './model/UpcomingMeeting';
import UpcomingMeetingByGroup from './model/UpcomingMeetingByGroup';
import GroupsApi from './api/GroupsApi';
import MeetingsApi from './api/MeetingsApi';
import OrganizersApi from './api/OrganizersApi';


/**
* &lt;br&gt;The GoToMeeting API provides seamless integration of GoToMeeting provisioning and meeting management into your existing infrastructure or third party applications.&lt;br&gt;&lt;br&gt;For customers, the ability to add, suspend or delete an organizer in your GoToMeeting Corporate account from within your primary management systems simplifies and streamlines the entire process of account management. The ability to monitor meeting schedules, history and active meeting status allows managers to leverage GoToMeeting activities through your primary applications.&lt;br&gt;&lt;br&gt;For third parties, the ability to create, update or delete a meeting from within your application makes real-time collaboration possible for your customers. The ability to update meeting schedules, view history and scheduled meetings, and view attendees from past meetings allows you to enhance your users&#39; experience and the value of your applications..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GoToMeeting = require('index'); // See note below*.
* var xxxSvc = new GoToMeeting.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GoToMeeting.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GoToMeeting.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GoToMeeting.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AttendeeByGroup model constructor.
     * @property {module:model/AttendeeByGroup}
     */
    AttendeeByGroup,

    /**
     * The AttendeeByMeeting model constructor.
     * @property {module:model/AttendeeByMeeting}
     */
    AttendeeByMeeting,

    /**
     * The AttendeeByOrganizer model constructor.
     * @property {module:model/AttendeeByOrganizer}
     */
    AttendeeByOrganizer,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The HistoricalMeeting model constructor.
     * @property {module:model/HistoricalMeeting}
     */
    HistoricalMeeting,

    /**
     * The HistoricalMeetingByGroup model constructor.
     * @property {module:model/HistoricalMeetingByGroup}
     */
    HistoricalMeetingByGroup,

    /**
     * The HistoryMeetingByGroup model constructor.
     * @property {module:model/HistoryMeetingByGroup}
     */
    HistoryMeetingByGroup,

    /**
     * The MeetingById model constructor.
     * @property {module:model/MeetingById}
     */
    MeetingById,

    /**
     * The MeetingByOrganizer model constructor.
     * @property {module:model/MeetingByOrganizer}
     */
    MeetingByOrganizer,

    /**
     * The MeetingCreated model constructor.
     * @property {module:model/MeetingCreated}
     */
    MeetingCreated,

    /**
     * The MeetingHistory model constructor.
     * @property {module:model/MeetingHistory}
     */
    MeetingHistory,

    /**
     * The MeetingReqCreate model constructor.
     * @property {module:model/MeetingReqCreate}
     */
    MeetingReqCreate,

    /**
     * The MeetingReqUpdate model constructor.
     * @property {module:model/MeetingReqUpdate}
     */
    MeetingReqUpdate,

    /**
     * The MeetingScheduled model constructor.
     * @property {module:model/MeetingScheduled}
     */
    MeetingScheduled,

    /**
     * The MeetingStatus model constructor.
     * @property {module:model/MeetingStatus}
     */
    MeetingStatus,

    /**
     * The MeetingType model constructor.
     * @property {module:model/MeetingType}
     */
    MeetingType,

    /**
     * The Organizer model constructor.
     * @property {module:model/Organizer}
     */
    Organizer,

    /**
     * The OrganizerByGroup model constructor.
     * @property {module:model/OrganizerByGroup}
     */
    OrganizerByGroup,

    /**
     * The OrganizerReq model constructor.
     * @property {module:model/OrganizerReq}
     */
    OrganizerReq,

    /**
     * The OrganizerShort model constructor.
     * @property {module:model/OrganizerShort}
     */
    OrganizerShort,

    /**
     * The OrganizerStatus model constructor.
     * @property {module:model/OrganizerStatus}
     */
    OrganizerStatus,

    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product,

    /**
     * The ScheduledMeetingByGroup model constructor.
     * @property {module:model/ScheduledMeetingByGroup}
     */
    ScheduledMeetingByGroup,

    /**
     * The StartUrl model constructor.
     * @property {module:model/StartUrl}
     */
    StartUrl,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The UpcomingMeeting model constructor.
     * @property {module:model/UpcomingMeeting}
     */
    UpcomingMeeting,

    /**
     * The UpcomingMeetingByGroup model constructor.
     * @property {module:model/UpcomingMeetingByGroup}
     */
    UpcomingMeetingByGroup,

    /**
    * The GroupsApi service constructor.
    * @property {module:api/GroupsApi}
    */
    GroupsApi,

    /**
    * The MeetingsApi service constructor.
    * @property {module:api/MeetingsApi}
    */
    MeetingsApi,

    /**
    * The OrganizersApi service constructor.
    * @property {module:api/OrganizersApi}
    */
    OrganizersApi
};
