# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_full_name import UserFullName
from openapi_server import util


class UserDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, locale: str=None, name: UserFullName=None, password: str=None, timezone: str=None, user_name: str=None):
        """UserDefinition - a model defined in OpenAPI

        :param display_name: The display_name of this UserDefinition.
        :param locale: The locale of this UserDefinition.
        :param name: The name of this UserDefinition.
        :param password: The password of this UserDefinition.
        :param timezone: The timezone of this UserDefinition.
        :param user_name: The user_name of this UserDefinition.
        """
        self.openapi_types = {
            'display_name': str,
            'locale': str,
            'name': UserFullName,
            'password': str,
            'timezone': str,
            'user_name': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'locale': 'locale',
            'name': 'name',
            'password': 'password',
            'timezone': 'timezone',
            'user_name': 'userName'
        }

        self._display_name = display_name
        self._locale = locale
        self._name = name
        self._password = password
        self._timezone = timezone
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserDefinition of this UserDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this UserDefinition.

        The user's display name

        :return: The display_name of this UserDefinition.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this UserDefinition.

        The user's display name

        :param display_name: The display_name of this UserDefinition.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def locale(self):
        """Gets the locale of this UserDefinition.

        The user's language settings

        :return: The locale of this UserDefinition.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this UserDefinition.

        The user's language settings

        :param locale: The locale of this UserDefinition.
        :type locale: str
        """

        self._locale = locale

    @property
    def name(self):
        """Gets the name of this UserDefinition.


        :return: The name of this UserDefinition.
        :rtype: UserFullName
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UserDefinition.


        :param name: The name of this UserDefinition.
        :type name: UserFullName
        """

        self._name = name

    @property
    def password(self):
        """Gets the password of this UserDefinition.

        The user's password

        :return: The password of this UserDefinition.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this UserDefinition.

        The user's password

        :param password: The password of this UserDefinition.
        :type password: str
        """

        self._password = password

    @property
    def timezone(self):
        """Gets the timezone of this UserDefinition.

        The user's time zone

        :return: The timezone of this UserDefinition.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this UserDefinition.

        The user's time zone

        :param timezone: The timezone of this UserDefinition.
        :type timezone: str
        """

        self._timezone = timezone

    @property
    def user_name(self):
        """Gets the user_name of this UserDefinition.

        The user's username, usually their email address

        :return: The user_name of this UserDefinition.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this UserDefinition.

        The user's username, usually their email address

        :param user_name: The user_name of this UserDefinition.
        :type user_name: str
        """

        self._user_name = user_name
