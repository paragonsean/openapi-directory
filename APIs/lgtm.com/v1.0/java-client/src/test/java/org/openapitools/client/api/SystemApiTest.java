/*
 * LGTM API specification
 * The REST API for LGTM provides data so that you can customize how you integrate LGTM analysis into your workflow. It includes the following resources:   * `/` ([API root](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-API-root))&mdash;get version information or download the specification in OpenAPI format.   * `/projects` ([Projects](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Projects))&mdash;list projects, get a summary of the current status for a project, or add new projects.   * `/analyses` ([Analyses](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Analyses))&mdash;get a summary of results, download all the alerts, or trigger analysis for a specific commit.   * `/codereviews` ([Code reviews](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Code-reviews))&mdash;trigger code review for a patch, and view the results.   * `/operations` ([Operations](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Operations))&mdash;get information about long-running tasks, for example, analyses or code reviews that you've requested.   * `/snapshots` ([Snapshots](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Snapshots))&mdash;download and upload databases representing a snapshot of a codebase.   * `/queryjobs` ([Query jobs](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Query-jobs))&mdash;submit queries to evaluate against existing projects, and download their results.   * `/system` ([System](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-System))&mdash;get information on the health or usage of the system.  For an overview and getting started topics, see [API for LGTM](https://lgtm.com/help/lgtm/api/api-for-lgtm). 
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Health;
import org.openapitools.client.model.Metric;
import org.openapitools.client.model.MetricsList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SystemApi
 */
@Disabled
public class SystemApiTest {

    private final SystemApi api = new SystemApi();

    /**
     * Get a summary of the application&#39;s health
     *
     * Return an indication of whether the application is working as expected (up) or needs  attention (down).  \\&gt; The &#x60;description&#x60; and &#x60;details&#x60; fields are reported only if the request includes an access token for a user account that has administration rights for this LGTM server. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getHealthTest() throws ApiException {
        Health response = api.getHealth();
        // TODO: test validations
    }

    /**
     * Get the computed values of the specified metric
     *
     * LGTM administrators can download usage data using this endpoint. The response includes up to 1000 values for the specified metric and reports the date-time that each value was calculated. There is normally one value per day. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetricTest() throws ApiException {
        String metricId = null;
        Metric response = api.getMetric(metricId);
        // TODO: test validations
    }

    /**
     * Get the identifiers and descriptions of the usage metrics
     *
     * LGTM administrators can use this endpoint to list the usage metrics that are available to download. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetricsTest() throws ApiException {
        MetricsList response = api.getMetrics();
        // TODO: test validations
    }

}
