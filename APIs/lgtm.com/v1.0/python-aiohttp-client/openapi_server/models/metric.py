# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.measurement import Measurement
from openapi_server import util


class Metric(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, measurements: List[Measurement]=None, metric_id: str=None):
        """Metric - a model defined in OpenAPI

        :param measurements: The measurements of this Metric.
        :param metric_id: The metric_id of this Metric.
        """
        self.openapi_types = {
            'measurements': List[Measurement],
            'metric_id': str
        }

        self.attribute_map = {
            'measurements': 'measurements',
            'metric_id': 'metric-id'
        }

        self._measurements = measurements
        self._metric_id = metric_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Metric':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The metric of this Metric.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def measurements(self):
        """Gets the measurements of this Metric.

        A time series of values taken by the metric at different timestamps.

        :return: The measurements of this Metric.
        :rtype: List[Measurement]
        """
        return self._measurements

    @measurements.setter
    def measurements(self, measurements):
        """Sets the measurements of this Metric.

        A time series of values taken by the metric at different timestamps.

        :param measurements: The measurements of this Metric.
        :type measurements: List[Measurement]
        """

        self._measurements = measurements

    @property
    def metric_id(self):
        """Gets the metric_id of this Metric.

        The identifier by which this metric is referenced in the API.

        :return: The metric_id of this Metric.
        :rtype: str
        """
        return self._metric_id

    @metric_id.setter
    def metric_id(self, metric_id):
        """Sets the metric_id of this Metric.

        The identifier by which this metric is referenced in the API.

        :param metric_id: The metric_id of this Metric.
        :type metric_id: str
        """

        self._metric_id = metric_id
