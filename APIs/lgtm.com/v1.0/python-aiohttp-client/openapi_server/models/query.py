# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.query_properties import QueryProperties
from openapi_server import util


class Query(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, language: str=None, name: str=None, pack: str=None, properties: QueryProperties=None, url: str=None):
        """Query - a model defined in OpenAPI

        :param id: The id of this Query.
        :param language: The language of this Query.
        :param name: The name of this Query.
        :param pack: The pack of this Query.
        :param properties: The properties of this Query.
        :param url: The url of this Query.
        """
        self.openapi_types = {
            'id': int,
            'language': str,
            'name': str,
            'pack': str,
            'properties': QueryProperties,
            'url': str
        }

        self.attribute_map = {
            'id': 'id',
            'language': 'language',
            'name': 'name',
            'pack': 'pack',
            'properties': 'properties',
            'url': 'url'
        }

        self._id = id
        self._language = language
        self._name = name
        self._pack = pack
        self._properties = properties
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Query':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The query of this Query.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Query.

        The numeric identifier of the query.

        :return: The id of this Query.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Query.

        The numeric identifier of the query.

        :param id: The id of this Query.
        :type id: int
        """

        self._id = id

    @property
    def language(self):
        """Gets the language of this Query.

        The [language code](https://lgtm.com/help/lgtm/analysis-faqs#which-languages-are-supported) of the query.

        :return: The language of this Query.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this Query.

        The [language code](https://lgtm.com/help/lgtm/analysis-faqs#which-languages-are-supported) of the query.

        :param language: The language of this Query.
        :type language: str
        """

        self._language = language

    @property
    def name(self):
        """Gets the name of this Query.

        The `@name` of the query.

        :return: The name of this Query.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Query.

        The `@name` of the query.

        :param name: The name of this Query.
        :type name: str
        """

        self._name = name

    @property
    def pack(self):
        """Gets the pack of this Query.

        The name of the query pack that contains the query.

        :return: The pack of this Query.
        :rtype: str
        """
        return self._pack

    @pack.setter
    def pack(self, pack):
        """Sets the pack of this Query.

        The name of the query pack that contains the query.

        :param pack: The pack of this Query.
        :type pack: str
        """

        self._pack = pack

    @property
    def properties(self):
        """Gets the properties of this Query.


        :return: The properties of this Query.
        :rtype: QueryProperties
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this Query.


        :param properties: The properties of this Query.
        :type properties: QueryProperties
        """

        self._properties = properties

    @property
    def url(self):
        """Gets the url of this Query.

        A page on LGTM to view the details of the query.

        :return: The url of this Query.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Query.

        A page on LGTM to view the details of the query.

        :param url: The url of this Query.
        :type url: str
        """

        self._url = url
