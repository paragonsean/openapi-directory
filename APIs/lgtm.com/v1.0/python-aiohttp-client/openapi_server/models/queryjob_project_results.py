# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.project import Project
from openapi_server.models.query_result_entry import QueryResultEntry
from openapi_server import util


class QueryjobProjectResults(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: List[str]=None, data: List[List[QueryResultEntry]]=None, next: str=None, project: Project=None):
        """QueryjobProjectResults - a model defined in OpenAPI

        :param columns: The columns of this QueryjobProjectResults.
        :param data: The data of this QueryjobProjectResults.
        :param next: The next of this QueryjobProjectResults.
        :param project: The project of this QueryjobProjectResults.
        """
        self.openapi_types = {
            'columns': List[str],
            'data': List[List[QueryResultEntry]],
            'next': str,
            'project': Project
        }

        self.attribute_map = {
            'columns': 'columns',
            'data': 'data',
            'next': 'next',
            'project': 'project'
        }

        self._columns = columns
        self._data = data
        self._next = next
        self._project = project

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryjobProjectResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The queryjob-project-results of this QueryjobProjectResults.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this QueryjobProjectResults.

        Columns returned by the query.

        :return: The columns of this QueryjobProjectResults.
        :rtype: List[str]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this QueryjobProjectResults.

        Columns returned by the query.

        :param columns: The columns of this QueryjobProjectResults.
        :type columns: List[str]
        """

        self._columns = columns

    @property
    def data(self):
        """Gets the data of this QueryjobProjectResults.

        Results of the query divided by row.

        :return: The data of this QueryjobProjectResults.
        :rtype: List[List[QueryResultEntry]]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this QueryjobProjectResults.

        Results of the query divided by row.

        :param data: The data of this QueryjobProjectResults.
        :type data: List[List[QueryResultEntry]]
        """

        self._data = data

    @property
    def next(self):
        """Gets the next of this QueryjobProjectResults.

        URL for retrieving the next part of the results (if applicable).

        :return: The next of this QueryjobProjectResults.
        :rtype: str
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this QueryjobProjectResults.

        URL for retrieving the next part of the results (if applicable).

        :param next: The next of this QueryjobProjectResults.
        :type next: str
        """

        self._next = next

    @property
    def project(self):
        """Gets the project of this QueryjobProjectResults.


        :return: The project of this QueryjobProjectResults.
        :rtype: Project
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this QueryjobProjectResults.


        :param project: The project of this QueryjobProjectResults.
        :type project: Project
        """

        self._project = project
