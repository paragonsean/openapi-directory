# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.queryjob_results_overview_entry import QueryjobResultsOverviewEntry
from openapi_server import util


class QueryjobResultsOverview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: List[QueryjobResultsOverviewEntry]=None, next: str=None):
        """QueryjobResultsOverview - a model defined in OpenAPI

        :param data: The data of this QueryjobResultsOverview.
        :param next: The next of this QueryjobResultsOverview.
        """
        self.openapi_types = {
            'data': List[QueryjobResultsOverviewEntry],
            'next': str
        }

        self.attribute_map = {
            'data': 'data',
            'next': 'next'
        }

        self._data = data
        self._next = next

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryjobResultsOverview':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The queryjob-results-overview of this QueryjobResultsOverview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this QueryjobResultsOverview.


        :return: The data of this QueryjobResultsOverview.
        :rtype: List[QueryjobResultsOverviewEntry]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this QueryjobResultsOverview.


        :param data: The data of this QueryjobResultsOverview.
        :type data: List[QueryjobResultsOverviewEntry]
        """

        self._data = data

    @property
    def next(self):
        """Gets the next of this QueryjobResultsOverview.


        :return: The next of this QueryjobResultsOverview.
        :rtype: str
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this QueryjobResultsOverview.


        :param next: The next of this QueryjobResultsOverview.
        :type next: str
        """

        self._next = next
