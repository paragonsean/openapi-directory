from typing import List, Dict
from aiohttp import web

from openapi_server import util


async def get_issue(request: web.Request, project_id, alert_key) -> web.Response:
    """Get detailed alert information for an issue

    Fetch the alert information for an issue in [SARIF](https://lgtm.com/help/lgtm/sarif-results-file) format. 

    :param project_id: The numeric project identifier.
    :type project_id: int
    :param alert_key: The alert key is generated by LGTM when it posts an issue &#x60;create&#x60; webhook request   to an external system using the [issue tracker Webhook API](https://lgtm.com/admin/help/issuetracker-webhook-api).  This key is an opaque identifier that tracks the alert&#39;s location over time. For example, if a file containing the alert  is modified, the SARIF data will reflect the updated location of the alert.  Note that the key needs to be URL encoded as it may contain characters that are not web-safe.   
    :type alert_key: str

    """
    return web.Response(status=200)
