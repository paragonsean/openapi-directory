/**
 * LGTM API specification
 * The REST API for LGTM provides data so that you can customize how you integrate LGTM analysis into your workflow. It includes the following resources:   * `/` ([API root](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-API-root))&mdash;get version information or download the specification in OpenAPI format.   * `/projects` ([Projects](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Projects))&mdash;list projects, get a summary of the current status for a project, or add new projects.   * `/analyses` ([Analyses](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Analyses))&mdash;get a summary of results, download all the alerts, or trigger analysis for a specific commit.   * `/codereviews` ([Code reviews](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Code-reviews))&mdash;trigger code review for a patch, and view the results.   * `/operations` ([Operations](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Operations))&mdash;get information about long-running tasks, for example, analyses or code reviews that you've requested.   * `/snapshots` ([Snapshots](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Snapshots))&mdash;download and upload databases representing a snapshot of a codebase.   * `/queryjobs` ([Query jobs](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-Query-jobs))&mdash;submit queries to evaluate against existing projects, and download their results.   * `/system` ([System](https://lgtm.com/help/lgtm/api/api-v1#LGTM-API-specification-System))&mdash;get information on the health or usage of the system.  For an overview and getting started topics, see [API for LGTM](https://lgtm.com/help/lgtm/api/api-for-lgtm). 
 *
 * The version of the OpenAPI document: v1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalysis.h
 *
 * 
 */

#ifndef OAIAnalysis_H
#define OAIAnalysis_H

#include <QJsonObject>

#include "OAILanguage_stats.h"
#include "OAIProject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILanguage_stats;
class OAIProject;

class OAIAnalysis : public OAIObject {
public:
    OAIAnalysis();
    OAIAnalysis(QString json);
    ~OAIAnalysis() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCommitId() const;
    void setCommitId(const QString &commit_id);
    bool is_commit_id_Set() const;
    bool is_commit_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAILanguage_stats> getLanguages() const;
    void setLanguages(const QList<OAILanguage_stats> &languages);
    bool is_languages_Set() const;
    bool is_languages_Valid() const;

    QString getLogUrl() const;
    void setLogUrl(const QString &log_url);
    bool is_log_url_Set() const;
    bool is_log_url_Valid() const;

    OAIProject getProject() const;
    void setProject(const OAIProject &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    QString getResultsUrl() const;
    void setResultsUrl(const QString &results_url);
    bool is_results_url_Set() const;
    bool is_results_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_commit_id;
    bool m_commit_id_isSet;
    bool m_commit_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAILanguage_stats> m_languages;
    bool m_languages_isSet;
    bool m_languages_isValid;

    QString m_log_url;
    bool m_log_url_isSet;
    bool m_log_url_isValid;

    OAIProject m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    QString m_results_url;
    bool m_results_url_isSet;
    bool m_results_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalysis)

#endif // OAIAnalysis_H
