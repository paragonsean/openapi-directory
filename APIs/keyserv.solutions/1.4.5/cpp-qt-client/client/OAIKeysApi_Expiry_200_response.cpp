/**
 * KeyServ
 * KeyServ API
 *
 * The version of the OpenAPI document: 1.4.5
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKeysApi_Expiry_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKeysApi_Expiry_200_response::OAIKeysApi_Expiry_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKeysApi_Expiry_200_response::OAIKeysApi_Expiry_200_response() {
    this->initializeModel();
}

OAIKeysApi_Expiry_200_response::~OAIKeysApi_Expiry_200_response() {}

void OAIKeysApi_Expiry_200_response::initializeModel() {

    m_expires_isSet = false;
    m_expires_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;
}

void OAIKeysApi_Expiry_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKeysApi_Expiry_200_response::fromJsonObject(QJsonObject json) {

    m_expires_isValid = ::OpenAPI::fromJsonValue(m_expires, json[QString("expires")]);
    m_expires_isSet = !json[QString("expires")].isNull() && m_expires_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;
}

QString OAIKeysApi_Expiry_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKeysApi_Expiry_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_expires_isSet) {
        obj.insert(QString("expires"), ::OpenAPI::toJsonValue(m_expires));
    }
    if (m_time_isSet) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(m_time));
    }
    return obj;
}

QDateTime OAIKeysApi_Expiry_200_response::getExpires() const {
    return m_expires;
}
void OAIKeysApi_Expiry_200_response::setExpires(const QDateTime &expires) {
    m_expires = expires;
    m_expires_isSet = true;
}

bool OAIKeysApi_Expiry_200_response::is_expires_Set() const{
    return m_expires_isSet;
}

bool OAIKeysApi_Expiry_200_response::is_expires_Valid() const{
    return m_expires_isValid;
}

QString OAIKeysApi_Expiry_200_response::getTime() const {
    return m_time;
}
void OAIKeysApi_Expiry_200_response::setTime(const QString &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAIKeysApi_Expiry_200_response::is_time_Set() const{
    return m_time_isSet;
}

bool OAIKeysApi_Expiry_200_response::is_time_Valid() const{
    return m_time_isValid;
}

bool OAIKeysApi_Expiry_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expires_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKeysApi_Expiry_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
