/**
 * KeyServ
 * KeyServ API
 *
 * The version of the OpenAPI document: 1.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KeyServ);
  }
}(this, function(expect, KeyServ) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KeyServ.SubscriptionsApiApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SubscriptionsApiApi', function() {
    describe('subscriptionsApiCount', function() {
      it('should call subscriptionsApiCount successfully', function(done) {
        //uncomment below and update the code to test subscriptionsApiCount
        //instance.subscriptionsApiCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscriptionsApiDeleteSubscription', function() {
      it('should call subscriptionsApiDeleteSubscription successfully', function(done) {
        //uncomment below and update the code to test subscriptionsApiDeleteSubscription
        //instance.subscriptionsApiDeleteSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscriptionsApiDeleteSubscription2', function() {
      it('should call subscriptionsApiDeleteSubscription2 successfully', function(done) {
        //uncomment below and update the code to test subscriptionsApiDeleteSubscription2
        //instance.subscriptionsApiDeleteSubscription2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscriptionsApiDisable', function() {
      it('should call subscriptionsApiDisable successfully', function(done) {
        //uncomment below and update the code to test subscriptionsApiDisable
        //instance.subscriptionsApiDisable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscriptionsApiDisable2', function() {
      it('should call subscriptionsApiDisable2 successfully', function(done) {
        //uncomment below and update the code to test subscriptionsApiDisable2
        //instance.subscriptionsApiDisable2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscriptionsApiEnable', function() {
      it('should call subscriptionsApiEnable successfully', function(done) {
        //uncomment below and update the code to test subscriptionsApiEnable
        //instance.subscriptionsApiEnable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscriptionsApiEnable2', function() {
      it('should call subscriptionsApiEnable2 successfully', function(done) {
        //uncomment below and update the code to test subscriptionsApiEnable2
        //instance.subscriptionsApiEnable2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscriptionsApiFind', function() {
      it('should call subscriptionsApiFind successfully', function(done) {
        //uncomment below and update the code to test subscriptionsApiFind
        //instance.subscriptionsApiFind(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscriptionsApiList', function() {
      it('should call subscriptionsApiList successfully', function(done) {
        //uncomment below and update the code to test subscriptionsApiList
        //instance.subscriptionsApiList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscriptionsApiPutSubscription', function() {
      it('should call subscriptionsApiPutSubscription successfully', function(done) {
        //uncomment below and update the code to test subscriptionsApiPutSubscription
        //instance.subscriptionsApiPutSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscriptionsApiPutSubscription2', function() {
      it('should call subscriptionsApiPutSubscription2 successfully', function(done) {
        //uncomment below and update the code to test subscriptionsApiPutSubscription2
        //instance.subscriptionsApiPutSubscription2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscriptionsApiSave', function() {
      it('should call subscriptionsApiSave successfully', function(done) {
        //uncomment below and update the code to test subscriptionsApiSave
        //instance.subscriptionsApiSave(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
