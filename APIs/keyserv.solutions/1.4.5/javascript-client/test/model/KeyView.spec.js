/**
 * KeyServ
 * KeyServ API
 *
 * The version of the OpenAPI document: 1.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KeyServ);
  }
}(this, function(expect, KeyServ) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KeyServ.KeyView();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('KeyView', function() {
    it('should create an instance of KeyView', function() {
      // uncomment below and update the code to test KeyView
      //var instance = new KeyServ.KeyView();
      //expect(instance).to.be.a(KeyServ.KeyView);
    });

    it('should have the property action (base name: "action")', function() {
      // uncomment below and update the code to test the property action
      //var instance = new KeyServ.KeyView();
      //expect(instance).to.be();
    });

    it('should have the property callbackOnModify (base name: "callbackOnModify")', function() {
      // uncomment below and update the code to test the property callbackOnModify
      //var instance = new KeyServ.KeyView();
      //expect(instance).to.be();
    });

    it('should have the property callbackUrl (base name: "callbackUrl")', function() {
      // uncomment below and update the code to test the property callbackUrl
      //var instance = new KeyServ.KeyView();
      //expect(instance).to.be();
    });

    it('should have the property commenced (base name: "commenced")', function() {
      // uncomment below and update the code to test the property commenced
      //var instance = new KeyServ.KeyView();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new KeyServ.KeyView();
      //expect(instance).to.be();
    });

    it('should have the property current (base name: "current")', function() {
      // uncomment below and update the code to test the property current
      //var instance = new KeyServ.KeyView();
      //expect(instance).to.be();
    });

    it('should have the property custom (base name: "custom")', function() {
      // uncomment below and update the code to test the property custom
      //var instance = new KeyServ.KeyView();
      //expect(instance).to.be();
    });

    it('should have the property frequency (base name: "frequency")', function() {
      // uncomment below and update the code to test the property frequency
      //var instance = new KeyServ.KeyView();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new KeyServ.KeyView();
      //expect(instance).to.be();
    });

    it('should have the property serial (base name: "serial")', function() {
      // uncomment below and update the code to test the property serial
      //var instance = new KeyServ.KeyView();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new KeyServ.KeyView();
      //expect(instance).to.be();
    });

  });

}));
