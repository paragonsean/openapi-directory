/*
 * KeyServ
 * KeyServ API
 *
 * The version of the OpenAPI document: 1.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ProductView;
import org.openapitools.client.model.ProductsApiCount200Response;
import org.openapitools.client.model.ProductsApiCountRequest;
import org.openapitools.client.model.ProductsApiFind200Response;
import org.openapitools.client.model.ProductsApiFindRequest;
import org.openapitools.client.model.ProductsApiPatchProduct2Request;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductsApiApi
 */
@Disabled
public class ProductsApiApiTest {

    private final ProductsApiApi api = new ProductsApiApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsApiCountTest() throws ApiException {
        ProductsApiCountRequest productsApiCountRequest = null;
        ProductsApiCount200Response response = api.productsApiCount(productsApiCountRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsApiDeleteProductTest() throws ApiException {
        String xApiKey = null;
        String serial = null;
        api.productsApiDeleteProduct(xApiKey, serial);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsApiDeleteProduct2Test() throws ApiException {
        String xApiKey = null;
        String serial = null;
        api.productsApiDeleteProduct2(xApiKey, serial);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsApiFindTest() throws ApiException {
        ProductsApiFindRequest productsApiFindRequest = null;
        Integer page = null;
        ProductsApiFind200Response response = api.productsApiFind(productsApiFindRequest, page);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsApiListTest() throws ApiException {
        ProductsApiCountRequest productsApiCountRequest = null;
        Integer page = null;
        List<ProductView> response = api.productsApiList(productsApiCountRequest, page);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsApiPatchProductTest() throws ApiException {
        ProductsApiPatchProduct2Request productsApiPatchProduct2Request = null;
        api.productsApiPatchProduct(productsApiPatchProduct2Request);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsApiPatchProduct2Test() throws ApiException {
        ProductsApiPatchProduct2Request productsApiPatchProduct2Request = null;
        api.productsApiPatchProduct2(productsApiPatchProduct2Request);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void productsApiSaveTest() throws ApiException {
        ProductsApiPatchProduct2Request productsApiPatchProduct2Request = null;
        ProductsApiFind200Response response = api.productsApiSave(productsApiPatchProduct2Request);
        // TODO: test validations
    }

}
