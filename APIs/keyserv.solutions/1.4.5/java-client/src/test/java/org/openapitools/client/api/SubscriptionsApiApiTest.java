/*
 * KeyServ
 * KeyServ API
 *
 * The version of the OpenAPI document: 1.4.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.KeysApiFind200Response;
import org.openapitools.client.model.ProductsApiCount200Response;
import org.openapitools.client.model.ProductsApiFindRequest;
import org.openapitools.client.model.SubscriptionView;
import org.openapitools.client.model.SubscriptionsApiCountRequest;
import org.openapitools.client.model.SubscriptionsApiFind200Response;
import org.openapitools.client.model.SubscriptionsApiPutSubscriptionRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubscriptionsApiApi
 */
@Disabled
public class SubscriptionsApiApiTest {

    private final SubscriptionsApiApi api = new SubscriptionsApiApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsApiCountTest() throws ApiException {
        SubscriptionsApiCountRequest subscriptionsApiCountRequest = null;
        ProductsApiCount200Response response = api.subscriptionsApiCount(subscriptionsApiCountRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsApiDeleteSubscriptionTest() throws ApiException {
        String xApiKey = null;
        String serial = null;
        Boolean keep = null;
        api.subscriptionsApiDeleteSubscription(xApiKey, serial, keep);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsApiDeleteSubscription2Test() throws ApiException {
        String xApiKey = null;
        String serial = null;
        Boolean keep = null;
        api.subscriptionsApiDeleteSubscription2(xApiKey, serial, keep);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsApiDisableTest() throws ApiException {
        ProductsApiFindRequest productsApiFindRequest = null;
        api.subscriptionsApiDisable(productsApiFindRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsApiDisable2Test() throws ApiException {
        ProductsApiFindRequest productsApiFindRequest = null;
        api.subscriptionsApiDisable2(productsApiFindRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsApiEnableTest() throws ApiException {
        ProductsApiFindRequest productsApiFindRequest = null;
        api.subscriptionsApiEnable(productsApiFindRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsApiEnable2Test() throws ApiException {
        ProductsApiFindRequest productsApiFindRequest = null;
        api.subscriptionsApiEnable2(productsApiFindRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsApiFindTest() throws ApiException {
        ProductsApiFindRequest productsApiFindRequest = null;
        SubscriptionsApiFind200Response response = api.subscriptionsApiFind(productsApiFindRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsApiListTest() throws ApiException {
        ProductsApiFindRequest productsApiFindRequest = null;
        Integer page = null;
        List<SubscriptionView> response = api.subscriptionsApiList(productsApiFindRequest, page);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsApiPutSubscriptionTest() throws ApiException {
        SubscriptionsApiPutSubscriptionRequest subscriptionsApiPutSubscriptionRequest = null;
        api.subscriptionsApiPutSubscription(subscriptionsApiPutSubscriptionRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsApiPutSubscription2Test() throws ApiException {
        SubscriptionsApiPutSubscriptionRequest subscriptionsApiPutSubscriptionRequest = null;
        api.subscriptionsApiPutSubscription2(subscriptionsApiPutSubscriptionRequest);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void subscriptionsApiSaveTest() throws ApiException {
        SubscriptionsApiPutSubscriptionRequest subscriptionsApiPutSubscriptionRequest = null;
        KeysApiFind200Response response = api.subscriptionsApiSave(subscriptionsApiPutSubscriptionRequest);
        // TODO: test validations
    }

}
