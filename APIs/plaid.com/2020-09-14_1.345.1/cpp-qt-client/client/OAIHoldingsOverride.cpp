/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHoldingsOverride.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHoldingsOverride::OAIHoldingsOverride(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHoldingsOverride::OAIHoldingsOverride() {
    this->initializeModel();
}

OAIHoldingsOverride::~OAIHoldingsOverride() {}

void OAIHoldingsOverride::initializeModel() {

    m_cost_basis_isSet = false;
    m_cost_basis_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_institution_price_isSet = false;
    m_institution_price_isValid = false;

    m_institution_price_as_of_isSet = false;
    m_institution_price_as_of_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_security_isSet = false;
    m_security_isValid = false;
}

void OAIHoldingsOverride::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHoldingsOverride::fromJsonObject(QJsonObject json) {

    m_cost_basis_isValid = ::OpenAPI::fromJsonValue(m_cost_basis, json[QString("cost_basis")]);
    m_cost_basis_isSet = !json[QString("cost_basis")].isNull() && m_cost_basis_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_institution_price_isValid = ::OpenAPI::fromJsonValue(m_institution_price, json[QString("institution_price")]);
    m_institution_price_isSet = !json[QString("institution_price")].isNull() && m_institution_price_isValid;

    m_institution_price_as_of_isValid = ::OpenAPI::fromJsonValue(m_institution_price_as_of, json[QString("institution_price_as_of")]);
    m_institution_price_as_of_isSet = !json[QString("institution_price_as_of")].isNull() && m_institution_price_as_of_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_security_isValid = ::OpenAPI::fromJsonValue(m_security, json[QString("security")]);
    m_security_isSet = !json[QString("security")].isNull() && m_security_isValid;
}

QString OAIHoldingsOverride::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHoldingsOverride::asJsonObject() const {
    QJsonObject obj;
    if (m_cost_basis_isSet) {
        obj.insert(QString("cost_basis"), ::OpenAPI::toJsonValue(m_cost_basis));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_institution_price_isSet) {
        obj.insert(QString("institution_price"), ::OpenAPI::toJsonValue(m_institution_price));
    }
    if (m_institution_price_as_of_isSet) {
        obj.insert(QString("institution_price_as_of"), ::OpenAPI::toJsonValue(m_institution_price_as_of));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_security.isSet()) {
        obj.insert(QString("security"), ::OpenAPI::toJsonValue(m_security));
    }
    return obj;
}

double OAIHoldingsOverride::getCostBasis() const {
    return m_cost_basis;
}
void OAIHoldingsOverride::setCostBasis(const double &cost_basis) {
    m_cost_basis = cost_basis;
    m_cost_basis_isSet = true;
}

bool OAIHoldingsOverride::is_cost_basis_Set() const{
    return m_cost_basis_isSet;
}

bool OAIHoldingsOverride::is_cost_basis_Valid() const{
    return m_cost_basis_isValid;
}

QString OAIHoldingsOverride::getCurrency() const {
    return m_currency;
}
void OAIHoldingsOverride::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIHoldingsOverride::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIHoldingsOverride::is_currency_Valid() const{
    return m_currency_isValid;
}

double OAIHoldingsOverride::getInstitutionPrice() const {
    return m_institution_price;
}
void OAIHoldingsOverride::setInstitutionPrice(const double &institution_price) {
    m_institution_price = institution_price;
    m_institution_price_isSet = true;
}

bool OAIHoldingsOverride::is_institution_price_Set() const{
    return m_institution_price_isSet;
}

bool OAIHoldingsOverride::is_institution_price_Valid() const{
    return m_institution_price_isValid;
}

QDate OAIHoldingsOverride::getInstitutionPriceAsOf() const {
    return m_institution_price_as_of;
}
void OAIHoldingsOverride::setInstitutionPriceAsOf(const QDate &institution_price_as_of) {
    m_institution_price_as_of = institution_price_as_of;
    m_institution_price_as_of_isSet = true;
}

bool OAIHoldingsOverride::is_institution_price_as_of_Set() const{
    return m_institution_price_as_of_isSet;
}

bool OAIHoldingsOverride::is_institution_price_as_of_Valid() const{
    return m_institution_price_as_of_isValid;
}

double OAIHoldingsOverride::getQuantity() const {
    return m_quantity;
}
void OAIHoldingsOverride::setQuantity(const double &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIHoldingsOverride::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIHoldingsOverride::is_quantity_Valid() const{
    return m_quantity_isValid;
}

OAISecurityOverride OAIHoldingsOverride::getSecurity() const {
    return m_security;
}
void OAIHoldingsOverride::setSecurity(const OAISecurityOverride &security) {
    m_security = security;
    m_security_isSet = true;
}

bool OAIHoldingsOverride::is_security_Set() const{
    return m_security_isSet;
}

bool OAIHoldingsOverride::is_security_Valid() const{
    return m_security_isValid;
}

bool OAIHoldingsOverride::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost_basis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_institution_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_institution_price_as_of_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHoldingsOverride::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_currency_isValid && m_institution_price_isValid && m_quantity_isValid && m_security_isValid && true;
}

} // namespace OpenAPI
