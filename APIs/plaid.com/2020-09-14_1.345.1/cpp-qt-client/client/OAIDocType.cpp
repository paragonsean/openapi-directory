/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocType::OAIDocType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocType::OAIDocType() {
    this->initializeModel();
}

OAIDocType::~OAIDocType() {}

void OAIDocType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDocType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDocType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("UNKNOWN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocType::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOCUMENT_TYPE_PAYSTUB", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocType::DOCUMENT_TYPE_PAYSTUB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOCUMENT_TYPE_BANK_STATEMENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocType::DOCUMENT_TYPE_BANK_STATEMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOCUMENT_TYPE_US_TAX_W2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocType::DOCUMENT_TYPE_US_TAX_W2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOCUMENT_TYPE_US_MILITARY_ERAS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocType::DOCUMENT_TYPE_US_MILITARY_ERAS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOCUMENT_TYPE_US_MILITARY_LES", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocType::DOCUMENT_TYPE_US_MILITARY_LES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOCUMENT_TYPE_US_MILITARY_CLES", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocType::DOCUMENT_TYPE_US_MILITARY_CLES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOCUMENT_TYPE_GIG", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocType::DOCUMENT_TYPE_GIG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOCUMENT_TYPE_NONE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocType::DOCUMENT_TYPE_NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOCUMENT_TYPE_US_TAX_1099_MISC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocType::DOCUMENT_TYPE_US_TAX_1099_MISC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOCUMENT_TYPE_US_TAX_1099_K", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocType::DOCUMENT_TYPE_US_TAX_1099_K;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DOCUMENT_TYPE_PLAID_GENERATED_PAYSTUB_PDF", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDocType::DOCUMENT_TYPE_PLAID_GENERATED_PAYSTUB_PDF;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDocType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDocType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDocType::UNKNOWN:
            val = "UNKNOWN";
            break;
        case eOAIDocType::DOCUMENT_TYPE_PAYSTUB:
            val = "DOCUMENT_TYPE_PAYSTUB";
            break;
        case eOAIDocType::DOCUMENT_TYPE_BANK_STATEMENT:
            val = "DOCUMENT_TYPE_BANK_STATEMENT";
            break;
        case eOAIDocType::DOCUMENT_TYPE_US_TAX_W2:
            val = "DOCUMENT_TYPE_US_TAX_W2";
            break;
        case eOAIDocType::DOCUMENT_TYPE_US_MILITARY_ERAS:
            val = "DOCUMENT_TYPE_US_MILITARY_ERAS";
            break;
        case eOAIDocType::DOCUMENT_TYPE_US_MILITARY_LES:
            val = "DOCUMENT_TYPE_US_MILITARY_LES";
            break;
        case eOAIDocType::DOCUMENT_TYPE_US_MILITARY_CLES:
            val = "DOCUMENT_TYPE_US_MILITARY_CLES";
            break;
        case eOAIDocType::DOCUMENT_TYPE_GIG:
            val = "DOCUMENT_TYPE_GIG";
            break;
        case eOAIDocType::DOCUMENT_TYPE_NONE:
            val = "DOCUMENT_TYPE_NONE";
            break;
        case eOAIDocType::DOCUMENT_TYPE_US_TAX_1099_MISC:
            val = "DOCUMENT_TYPE_US_TAX_1099_MISC";
            break;
        case eOAIDocType::DOCUMENT_TYPE_US_TAX_1099_K:
            val = "DOCUMENT_TYPE_US_TAX_1099_K";
            break;
        case eOAIDocType::DOCUMENT_TYPE_PLAID_GENERATED_PAYSTUB_PDF:
            val = "DOCUMENT_TYPE_PLAID_GENERATED_PAYSTUB_PDF";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDocType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDocType::eOAIDocType OAIDocType::getValue() const {
    return m_value;
}

void OAIDocType::setValue(const OAIDocType::eOAIDocType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDocType::isSet() const {
    
    return m_value_isSet;
}

bool OAIDocType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
