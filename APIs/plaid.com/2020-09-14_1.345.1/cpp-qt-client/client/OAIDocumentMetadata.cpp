/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentMetadata::OAIDocumentMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentMetadata::OAIDocumentMetadata() {
    this->initializeModel();
}

OAIDocumentMetadata::~OAIDocumentMetadata() {}

void OAIDocumentMetadata::initializeModel() {

    m_doc_id_isSet = false;
    m_doc_id_isValid = false;

    m_doc_type_isSet = false;
    m_doc_type_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIDocumentMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentMetadata::fromJsonObject(QJsonObject json) {

    m_doc_id_isValid = ::OpenAPI::fromJsonValue(m_doc_id, json[QString("doc_id")]);
    m_doc_id_isSet = !json[QString("doc_id")].isNull() && m_doc_id_isValid;

    m_doc_type_isValid = ::OpenAPI::fromJsonValue(m_doc_type, json[QString("doc_type")]);
    m_doc_type_isSet = !json[QString("doc_type")].isNull() && m_doc_type_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIDocumentMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_doc_id_isSet) {
        obj.insert(QString("doc_id"), ::OpenAPI::toJsonValue(m_doc_id));
    }
    if (m_doc_type.isSet()) {
        obj.insert(QString("doc_type"), ::OpenAPI::toJsonValue(m_doc_type));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIDocumentMetadata::getDocId() const {
    return m_doc_id;
}
void OAIDocumentMetadata::setDocId(const QString &doc_id) {
    m_doc_id = doc_id;
    m_doc_id_isSet = true;
}

bool OAIDocumentMetadata::is_doc_id_Set() const{
    return m_doc_id_isSet;
}

bool OAIDocumentMetadata::is_doc_id_Valid() const{
    return m_doc_id_isValid;
}

OAIDocType OAIDocumentMetadata::getDocType() const {
    return m_doc_type;
}
void OAIDocumentMetadata::setDocType(const OAIDocType &doc_type) {
    m_doc_type = doc_type;
    m_doc_type_isSet = true;
}

bool OAIDocumentMetadata::is_doc_type_Set() const{
    return m_doc_type_isSet;
}

bool OAIDocumentMetadata::is_doc_type_Valid() const{
    return m_doc_type_isValid;
}

QString OAIDocumentMetadata::getName() const {
    return m_name;
}
void OAIDocumentMetadata::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDocumentMetadata::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDocumentMetadata::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIDocumentMetadata::getStatus() const {
    return m_status;
}
void OAIDocumentMetadata::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDocumentMetadata::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDocumentMetadata::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIDocumentMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_doc_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_doc_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
