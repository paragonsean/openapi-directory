/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmploymentVerificationGetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmploymentVerificationGetResponse::OAIEmploymentVerificationGetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmploymentVerificationGetResponse::OAIEmploymentVerificationGetResponse() {
    this->initializeModel();
}

OAIEmploymentVerificationGetResponse::~OAIEmploymentVerificationGetResponse() {}

void OAIEmploymentVerificationGetResponse::initializeModel() {

    m_employments_isSet = false;
    m_employments_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAIEmploymentVerificationGetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmploymentVerificationGetResponse::fromJsonObject(QJsonObject json) {

    m_employments_isValid = ::OpenAPI::fromJsonValue(m_employments, json[QString("employments")]);
    m_employments_isSet = !json[QString("employments")].isNull() && m_employments_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("request_id")]);
    m_request_id_isSet = !json[QString("request_id")].isNull() && m_request_id_isValid;
}

QString OAIEmploymentVerificationGetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmploymentVerificationGetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_employments.size() > 0) {
        obj.insert(QString("employments"), ::OpenAPI::toJsonValue(m_employments));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("request_id"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

QList<OAIEmploymentVerification> OAIEmploymentVerificationGetResponse::getEmployments() const {
    return m_employments;
}
void OAIEmploymentVerificationGetResponse::setEmployments(const QList<OAIEmploymentVerification> &employments) {
    m_employments = employments;
    m_employments_isSet = true;
}

bool OAIEmploymentVerificationGetResponse::is_employments_Set() const{
    return m_employments_isSet;
}

bool OAIEmploymentVerificationGetResponse::is_employments_Valid() const{
    return m_employments_isValid;
}

QString OAIEmploymentVerificationGetResponse::getRequestId() const {
    return m_request_id;
}
void OAIEmploymentVerificationGetResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIEmploymentVerificationGetResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIEmploymentVerificationGetResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAIEmploymentVerificationGetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_employments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmploymentVerificationGetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_employments_isValid && m_request_id_isValid && true;
}

} // namespace OpenAPI
