/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWalletTransactionCounterpartyNumbers.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWalletTransactionCounterpartyNumbers::OAIWalletTransactionCounterpartyNumbers(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWalletTransactionCounterpartyNumbers::OAIWalletTransactionCounterpartyNumbers() {
    this->initializeModel();
}

OAIWalletTransactionCounterpartyNumbers::~OAIWalletTransactionCounterpartyNumbers() {}

void OAIWalletTransactionCounterpartyNumbers::initializeModel() {

    m_bacs_isSet = false;
    m_bacs_isValid = false;

    m_international_isSet = false;
    m_international_isValid = false;
}

void OAIWalletTransactionCounterpartyNumbers::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWalletTransactionCounterpartyNumbers::fromJsonObject(QJsonObject json) {

    m_bacs_isValid = ::OpenAPI::fromJsonValue(m_bacs, json[QString("bacs")]);
    m_bacs_isSet = !json[QString("bacs")].isNull() && m_bacs_isValid;

    m_international_isValid = ::OpenAPI::fromJsonValue(m_international, json[QString("international")]);
    m_international_isSet = !json[QString("international")].isNull() && m_international_isValid;
}

QString OAIWalletTransactionCounterpartyNumbers::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWalletTransactionCounterpartyNumbers::asJsonObject() const {
    QJsonObject obj;
    if (m_bacs.isSet()) {
        obj.insert(QString("bacs"), ::OpenAPI::toJsonValue(m_bacs));
    }
    if (m_international.isSet()) {
        obj.insert(QString("international"), ::OpenAPI::toJsonValue(m_international));
    }
    return obj;
}

OAIWalletTransactionCounterpartyBACS OAIWalletTransactionCounterpartyNumbers::getBacs() const {
    return m_bacs;
}
void OAIWalletTransactionCounterpartyNumbers::setBacs(const OAIWalletTransactionCounterpartyBACS &bacs) {
    m_bacs = bacs;
    m_bacs_isSet = true;
}

bool OAIWalletTransactionCounterpartyNumbers::is_bacs_Set() const{
    return m_bacs_isSet;
}

bool OAIWalletTransactionCounterpartyNumbers::is_bacs_Valid() const{
    return m_bacs_isValid;
}

OAIWalletTransactionCounterpartyInternational OAIWalletTransactionCounterpartyNumbers::getInternational() const {
    return m_international;
}
void OAIWalletTransactionCounterpartyNumbers::setInternational(const OAIWalletTransactionCounterpartyInternational &international) {
    m_international = international;
    m_international_isSet = true;
}

bool OAIWalletTransactionCounterpartyNumbers::is_international_Set() const{
    return m_international_isSet;
}

bool OAIWalletTransactionCounterpartyNumbers::is_international_Valid() const{
    return m_international_isValid;
}

bool OAIWalletTransactionCounterpartyNumbers::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bacs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_international.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWalletTransactionCounterpartyNumbers::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
