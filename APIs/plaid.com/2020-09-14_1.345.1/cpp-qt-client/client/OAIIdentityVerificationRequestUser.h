/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdentityVerificationRequestUser.h
 *
 * User information collected outside of Link, most likely via your own onboarding process.  Each of the following identity fields are optional:  &#x60;email_address&#x60;  &#x60;phone_number&#x60;  &#x60;date_of_birth&#x60;  &#x60;name&#x60;  &#x60;address&#x60;  &#x60;id_number&#x60;  Specifically, these fields are optional in that they can either be fully provided (satisfying every required field in their subschema) or omitted from the request entirely by not providing the key or value. Providing these fields via the API will result in Link skipping the data collection process for the associated user. All verification steps enabled in the associated Identity Verification Template will still be run. Verification steps will either be run immediately, or once the user completes the &#x60;accept_tos&#x60; step, depending on the value provided to the &#x60;gave_consent&#x60; field.
 */

#ifndef OAIIdentityVerificationRequestUser_H
#define OAIIdentityVerificationRequestUser_H

#include <QJsonObject>

#include "OAIIdentityVerificationRequestUserName.h"
#include "OAIUserAddress.h"
#include "OAIUserIDNumber.h"
#include <QDate>
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIdentityVerificationRequestUserName;

class OAIIdentityVerificationRequestUser : public OAIObject {
public:
    OAIIdentityVerificationRequestUser();
    OAIIdentityVerificationRequestUser(QString json);
    ~OAIIdentityVerificationRequestUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUserAddress getAddress() const;
    void setAddress(const OAIUserAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getClientUserId() const;
    void setClientUserId(const QString &client_user_id);
    bool is_client_user_id_Set() const;
    bool is_client_user_id_Valid() const;

    QDate getDateOfBirth() const;
    void setDateOfBirth(const QDate &date_of_birth);
    bool is_date_of_birth_Set() const;
    bool is_date_of_birth_Valid() const;

    QString getEmailAddress() const;
    void setEmailAddress(const QString &email_address);
    bool is_email_address_Set() const;
    bool is_email_address_Valid() const;

    OAIUserIDNumber getIdNumber() const;
    void setIdNumber(const OAIUserIDNumber &id_number);
    bool is_id_number_Set() const;
    bool is_id_number_Valid() const;

    OAIIdentityVerificationRequestUserName getName() const;
    void setName(const OAIIdentityVerificationRequestUserName &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUserAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_client_user_id;
    bool m_client_user_id_isSet;
    bool m_client_user_id_isValid;

    QDate m_date_of_birth;
    bool m_date_of_birth_isSet;
    bool m_date_of_birth_isValid;

    QString m_email_address;
    bool m_email_address_isSet;
    bool m_email_address_isValid;

    OAIUserIDNumber m_id_number;
    bool m_id_number_isSet;
    bool m_id_number_isValid;

    OAIIdentityVerificationRequestUserName m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdentityVerificationRequestUser)

#endif // OAIIdentityVerificationRequestUser_H
