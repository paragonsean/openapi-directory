/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentInitiationPaymentStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentInitiationPaymentStatus::OAIPaymentInitiationPaymentStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentInitiationPaymentStatus::OAIPaymentInitiationPaymentStatus() {
    this->initializeModel();
}

OAIPaymentInitiationPaymentStatus::~OAIPaymentInitiationPaymentStatus() {}

void OAIPaymentInitiationPaymentStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPaymentInitiationPaymentStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPaymentInitiationPaymentStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("PAYMENT_STATUS_INPUT_NEEDED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::INPUT_NEEDED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_PROCESSING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::PROCESSING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_INITIATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::INITIATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_COMPLETED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_INSUFFICIENT_FUNDS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::INSUFFICIENT_FUNDS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_BLOCKED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::BLOCKED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_UNKNOWN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_EXECUTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::EXECUTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_SETTLED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::SETTLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_AUTHORISING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::AUTHORISING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_CANCELLED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::CANCELLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_ESTABLISHED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::ESTABLISHED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PAYMENT_STATUS_REJECTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentInitiationPaymentStatus::REJECTED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPaymentInitiationPaymentStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPaymentInitiationPaymentStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPaymentInitiationPaymentStatus::INPUT_NEEDED:
            val = "PAYMENT_STATUS_INPUT_NEEDED";
            break;
        case eOAIPaymentInitiationPaymentStatus::PROCESSING:
            val = "PAYMENT_STATUS_PROCESSING";
            break;
        case eOAIPaymentInitiationPaymentStatus::INITIATED:
            val = "PAYMENT_STATUS_INITIATED";
            break;
        case eOAIPaymentInitiationPaymentStatus::COMPLETED:
            val = "PAYMENT_STATUS_COMPLETED";
            break;
        case eOAIPaymentInitiationPaymentStatus::INSUFFICIENT_FUNDS:
            val = "PAYMENT_STATUS_INSUFFICIENT_FUNDS";
            break;
        case eOAIPaymentInitiationPaymentStatus::FAILED:
            val = "PAYMENT_STATUS_FAILED";
            break;
        case eOAIPaymentInitiationPaymentStatus::BLOCKED:
            val = "PAYMENT_STATUS_BLOCKED";
            break;
        case eOAIPaymentInitiationPaymentStatus::UNKNOWN:
            val = "PAYMENT_STATUS_UNKNOWN";
            break;
        case eOAIPaymentInitiationPaymentStatus::EXECUTED:
            val = "PAYMENT_STATUS_EXECUTED";
            break;
        case eOAIPaymentInitiationPaymentStatus::SETTLED:
            val = "PAYMENT_STATUS_SETTLED";
            break;
        case eOAIPaymentInitiationPaymentStatus::AUTHORISING:
            val = "PAYMENT_STATUS_AUTHORISING";
            break;
        case eOAIPaymentInitiationPaymentStatus::CANCELLED:
            val = "PAYMENT_STATUS_CANCELLED";
            break;
        case eOAIPaymentInitiationPaymentStatus::ESTABLISHED:
            val = "PAYMENT_STATUS_ESTABLISHED";
            break;
        case eOAIPaymentInitiationPaymentStatus::REJECTED:
            val = "PAYMENT_STATUS_REJECTED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPaymentInitiationPaymentStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPaymentInitiationPaymentStatus::eOAIPaymentInitiationPaymentStatus OAIPaymentInitiationPaymentStatus::getValue() const {
    return m_value;
}

void OAIPaymentInitiationPaymentStatus::setValue(const OAIPaymentInitiationPaymentStatus::eOAIPaymentInitiationPaymentStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPaymentInitiationPaymentStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIPaymentInitiationPaymentStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
