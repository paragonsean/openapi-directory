/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIncomeSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIncomeSummary::OAIIncomeSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIncomeSummary::OAIIncomeSummary() {
    this->initializeModel();
}

OAIIncomeSummary::~OAIIncomeSummary() {}

void OAIIncomeSummary::initializeModel() {

    m_employee_name_isSet = false;
    m_employee_name_isValid = false;

    m_employer_name_isSet = false;
    m_employer_name_isValid = false;

    m_pay_frequency_isSet = false;
    m_pay_frequency_isValid = false;

    m_projected_wage_isSet = false;
    m_projected_wage_isValid = false;

    m_verified_transaction_isSet = false;
    m_verified_transaction_isValid = false;

    m_ytd_gross_income_isSet = false;
    m_ytd_gross_income_isValid = false;

    m_ytd_net_income_isSet = false;
    m_ytd_net_income_isValid = false;
}

void OAIIncomeSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIncomeSummary::fromJsonObject(QJsonObject json) {

    m_employee_name_isValid = ::OpenAPI::fromJsonValue(m_employee_name, json[QString("employee_name")]);
    m_employee_name_isSet = !json[QString("employee_name")].isNull() && m_employee_name_isValid;

    m_employer_name_isValid = ::OpenAPI::fromJsonValue(m_employer_name, json[QString("employer_name")]);
    m_employer_name_isSet = !json[QString("employer_name")].isNull() && m_employer_name_isValid;

    m_pay_frequency_isValid = ::OpenAPI::fromJsonValue(m_pay_frequency, json[QString("pay_frequency")]);
    m_pay_frequency_isSet = !json[QString("pay_frequency")].isNull() && m_pay_frequency_isValid;

    m_projected_wage_isValid = ::OpenAPI::fromJsonValue(m_projected_wage, json[QString("projected_wage")]);
    m_projected_wage_isSet = !json[QString("projected_wage")].isNull() && m_projected_wage_isValid;

    m_verified_transaction_isValid = ::OpenAPI::fromJsonValue(m_verified_transaction, json[QString("verified_transaction")]);
    m_verified_transaction_isSet = !json[QString("verified_transaction")].isNull() && m_verified_transaction_isValid;

    m_ytd_gross_income_isValid = ::OpenAPI::fromJsonValue(m_ytd_gross_income, json[QString("ytd_gross_income")]);
    m_ytd_gross_income_isSet = !json[QString("ytd_gross_income")].isNull() && m_ytd_gross_income_isValid;

    m_ytd_net_income_isValid = ::OpenAPI::fromJsonValue(m_ytd_net_income, json[QString("ytd_net_income")]);
    m_ytd_net_income_isSet = !json[QString("ytd_net_income")].isNull() && m_ytd_net_income_isValid;
}

QString OAIIncomeSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIncomeSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_employee_name.isSet()) {
        obj.insert(QString("employee_name"), ::OpenAPI::toJsonValue(m_employee_name));
    }
    if (m_employer_name.isSet()) {
        obj.insert(QString("employer_name"), ::OpenAPI::toJsonValue(m_employer_name));
    }
    if (m_pay_frequency.isSet()) {
        obj.insert(QString("pay_frequency"), ::OpenAPI::toJsonValue(m_pay_frequency));
    }
    if (m_projected_wage.isSet()) {
        obj.insert(QString("projected_wage"), ::OpenAPI::toJsonValue(m_projected_wage));
    }
    if (m_verified_transaction.isSet()) {
        obj.insert(QString("verified_transaction"), ::OpenAPI::toJsonValue(m_verified_transaction));
    }
    if (m_ytd_gross_income.isSet()) {
        obj.insert(QString("ytd_gross_income"), ::OpenAPI::toJsonValue(m_ytd_gross_income));
    }
    if (m_ytd_net_income.isSet()) {
        obj.insert(QString("ytd_net_income"), ::OpenAPI::toJsonValue(m_ytd_net_income));
    }
    return obj;
}

OAIEmployeeIncomeSummaryFieldString OAIIncomeSummary::getEmployeeName() const {
    return m_employee_name;
}
void OAIIncomeSummary::setEmployeeName(const OAIEmployeeIncomeSummaryFieldString &employee_name) {
    m_employee_name = employee_name;
    m_employee_name_isSet = true;
}

bool OAIIncomeSummary::is_employee_name_Set() const{
    return m_employee_name_isSet;
}

bool OAIIncomeSummary::is_employee_name_Valid() const{
    return m_employee_name_isValid;
}

OAIEmployerIncomeSummaryFieldString OAIIncomeSummary::getEmployerName() const {
    return m_employer_name;
}
void OAIIncomeSummary::setEmployerName(const OAIEmployerIncomeSummaryFieldString &employer_name) {
    m_employer_name = employer_name;
    m_employer_name_isSet = true;
}

bool OAIIncomeSummary::is_employer_name_Set() const{
    return m_employer_name_isSet;
}

bool OAIIncomeSummary::is_employer_name_Valid() const{
    return m_employer_name_isValid;
}

OAIPayFrequency OAIIncomeSummary::getPayFrequency() const {
    return m_pay_frequency;
}
void OAIIncomeSummary::setPayFrequency(const OAIPayFrequency &pay_frequency) {
    m_pay_frequency = pay_frequency;
    m_pay_frequency_isSet = true;
}

bool OAIIncomeSummary::is_pay_frequency_Set() const{
    return m_pay_frequency_isSet;
}

bool OAIIncomeSummary::is_pay_frequency_Valid() const{
    return m_pay_frequency_isValid;
}

OAIProjectedIncomeSummaryFieldNumber OAIIncomeSummary::getProjectedWage() const {
    return m_projected_wage;
}
void OAIIncomeSummary::setProjectedWage(const OAIProjectedIncomeSummaryFieldNumber &projected_wage) {
    m_projected_wage = projected_wage;
    m_projected_wage_isSet = true;
}

bool OAIIncomeSummary::is_projected_wage_Set() const{
    return m_projected_wage_isSet;
}

bool OAIIncomeSummary::is_projected_wage_Valid() const{
    return m_projected_wage_isValid;
}

OAITransactionData OAIIncomeSummary::getVerifiedTransaction() const {
    return m_verified_transaction;
}
void OAIIncomeSummary::setVerifiedTransaction(const OAITransactionData &verified_transaction) {
    m_verified_transaction = verified_transaction;
    m_verified_transaction_isSet = true;
}

bool OAIIncomeSummary::is_verified_transaction_Set() const{
    return m_verified_transaction_isSet;
}

bool OAIIncomeSummary::is_verified_transaction_Valid() const{
    return m_verified_transaction_isValid;
}

OAIYTDGrossIncomeSummaryFieldNumber OAIIncomeSummary::getYtdGrossIncome() const {
    return m_ytd_gross_income;
}
void OAIIncomeSummary::setYtdGrossIncome(const OAIYTDGrossIncomeSummaryFieldNumber &ytd_gross_income) {
    m_ytd_gross_income = ytd_gross_income;
    m_ytd_gross_income_isSet = true;
}

bool OAIIncomeSummary::is_ytd_gross_income_Set() const{
    return m_ytd_gross_income_isSet;
}

bool OAIIncomeSummary::is_ytd_gross_income_Valid() const{
    return m_ytd_gross_income_isValid;
}

OAIYTDNetIncomeSummaryFieldNumber OAIIncomeSummary::getYtdNetIncome() const {
    return m_ytd_net_income;
}
void OAIIncomeSummary::setYtdNetIncome(const OAIYTDNetIncomeSummaryFieldNumber &ytd_net_income) {
    m_ytd_net_income = ytd_net_income;
    m_ytd_net_income_isSet = true;
}

bool OAIIncomeSummary::is_ytd_net_income_Set() const{
    return m_ytd_net_income_isSet;
}

bool OAIIncomeSummary::is_ytd_net_income_Valid() const{
    return m_ytd_net_income_isValid;
}

bool OAIIncomeSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_employee_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_employer_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_frequency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_projected_wage.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_verified_transaction.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ytd_gross_income.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ytd_net_income.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIncomeSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_employee_name_isValid && m_employer_name_isValid && m_pay_frequency_isValid && m_projected_wage_isValid && m_verified_transaction_isValid && m_ytd_gross_income_isValid && m_ytd_net_income_isValid && true;
}

} // namespace OpenAPI
