/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentInitiationConsentConstraints.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentInitiationConsentConstraints::OAIPaymentInitiationConsentConstraints(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentInitiationConsentConstraints::OAIPaymentInitiationConsentConstraints() {
    this->initializeModel();
}

OAIPaymentInitiationConsentConstraints::~OAIPaymentInitiationConsentConstraints() {}

void OAIPaymentInitiationConsentConstraints::initializeModel() {

    m_max_payment_amount_isSet = false;
    m_max_payment_amount_isValid = false;

    m_periodic_amounts_isSet = false;
    m_periodic_amounts_isValid = false;

    m_valid_date_time_isSet = false;
    m_valid_date_time_isValid = false;
}

void OAIPaymentInitiationConsentConstraints::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentInitiationConsentConstraints::fromJsonObject(QJsonObject json) {

    m_max_payment_amount_isValid = ::OpenAPI::fromJsonValue(m_max_payment_amount, json[QString("max_payment_amount")]);
    m_max_payment_amount_isSet = !json[QString("max_payment_amount")].isNull() && m_max_payment_amount_isValid;

    m_periodic_amounts_isValid = ::OpenAPI::fromJsonValue(m_periodic_amounts, json[QString("periodic_amounts")]);
    m_periodic_amounts_isSet = !json[QString("periodic_amounts")].isNull() && m_periodic_amounts_isValid;

    m_valid_date_time_isValid = ::OpenAPI::fromJsonValue(m_valid_date_time, json[QString("valid_date_time")]);
    m_valid_date_time_isSet = !json[QString("valid_date_time")].isNull() && m_valid_date_time_isValid;
}

QString OAIPaymentInitiationConsentConstraints::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentInitiationConsentConstraints::asJsonObject() const {
    QJsonObject obj;
    if (m_max_payment_amount.isSet()) {
        obj.insert(QString("max_payment_amount"), ::OpenAPI::toJsonValue(m_max_payment_amount));
    }
    if (m_periodic_amounts.size() > 0) {
        obj.insert(QString("periodic_amounts"), ::OpenAPI::toJsonValue(m_periodic_amounts));
    }
    if (m_valid_date_time.isSet()) {
        obj.insert(QString("valid_date_time"), ::OpenAPI::toJsonValue(m_valid_date_time));
    }
    return obj;
}

OAIPaymentConsentMaxPaymentAmount OAIPaymentInitiationConsentConstraints::getMaxPaymentAmount() const {
    return m_max_payment_amount;
}
void OAIPaymentInitiationConsentConstraints::setMaxPaymentAmount(const OAIPaymentConsentMaxPaymentAmount &max_payment_amount) {
    m_max_payment_amount = max_payment_amount;
    m_max_payment_amount_isSet = true;
}

bool OAIPaymentInitiationConsentConstraints::is_max_payment_amount_Set() const{
    return m_max_payment_amount_isSet;
}

bool OAIPaymentInitiationConsentConstraints::is_max_payment_amount_Valid() const{
    return m_max_payment_amount_isValid;
}

QList<OAIPaymentConsentPeriodicAmount> OAIPaymentInitiationConsentConstraints::getPeriodicAmounts() const {
    return m_periodic_amounts;
}
void OAIPaymentInitiationConsentConstraints::setPeriodicAmounts(const QList<OAIPaymentConsentPeriodicAmount> &periodic_amounts) {
    m_periodic_amounts = periodic_amounts;
    m_periodic_amounts_isSet = true;
}

bool OAIPaymentInitiationConsentConstraints::is_periodic_amounts_Set() const{
    return m_periodic_amounts_isSet;
}

bool OAIPaymentInitiationConsentConstraints::is_periodic_amounts_Valid() const{
    return m_periodic_amounts_isValid;
}

OAIPaymentConsentValidDateTime OAIPaymentInitiationConsentConstraints::getValidDateTime() const {
    return m_valid_date_time;
}
void OAIPaymentInitiationConsentConstraints::setValidDateTime(const OAIPaymentConsentValidDateTime &valid_date_time) {
    m_valid_date_time = valid_date_time;
    m_valid_date_time_isSet = true;
}

bool OAIPaymentInitiationConsentConstraints::is_valid_date_time_Set() const{
    return m_valid_date_time_isSet;
}

bool OAIPaymentInitiationConsentConstraints::is_valid_date_time_Valid() const{
    return m_valid_date_time_isValid;
}

bool OAIPaymentInitiationConsentConstraints::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_payment_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_periodic_amounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_date_time.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentInitiationConsentConstraints::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_max_payment_amount_isValid && m_periodic_amounts_isValid && true;
}

} // namespace OpenAPI
