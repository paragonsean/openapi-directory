/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISandboxPublicTokenCreateRequestOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISandboxPublicTokenCreateRequestOptions::OAISandboxPublicTokenCreateRequestOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISandboxPublicTokenCreateRequestOptions::OAISandboxPublicTokenCreateRequestOptions() {
    this->initializeModel();
}

OAISandboxPublicTokenCreateRequestOptions::~OAISandboxPublicTokenCreateRequestOptions() {}

void OAISandboxPublicTokenCreateRequestOptions::initializeModel() {

    m_income_verification_isSet = false;
    m_income_verification_isValid = false;

    m_override_password_isSet = false;
    m_override_password_isValid = false;

    m_override_username_isSet = false;
    m_override_username_isValid = false;

    m_transactions_isSet = false;
    m_transactions_isValid = false;

    m_webhook_isSet = false;
    m_webhook_isValid = false;
}

void OAISandboxPublicTokenCreateRequestOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISandboxPublicTokenCreateRequestOptions::fromJsonObject(QJsonObject json) {

    m_income_verification_isValid = ::OpenAPI::fromJsonValue(m_income_verification, json[QString("income_verification")]);
    m_income_verification_isSet = !json[QString("income_verification")].isNull() && m_income_verification_isValid;

    m_override_password_isValid = ::OpenAPI::fromJsonValue(m_override_password, json[QString("override_password")]);
    m_override_password_isSet = !json[QString("override_password")].isNull() && m_override_password_isValid;

    m_override_username_isValid = ::OpenAPI::fromJsonValue(m_override_username, json[QString("override_username")]);
    m_override_username_isSet = !json[QString("override_username")].isNull() && m_override_username_isValid;

    m_transactions_isValid = ::OpenAPI::fromJsonValue(m_transactions, json[QString("transactions")]);
    m_transactions_isSet = !json[QString("transactions")].isNull() && m_transactions_isValid;

    m_webhook_isValid = ::OpenAPI::fromJsonValue(m_webhook, json[QString("webhook")]);
    m_webhook_isSet = !json[QString("webhook")].isNull() && m_webhook_isValid;
}

QString OAISandboxPublicTokenCreateRequestOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISandboxPublicTokenCreateRequestOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_income_verification.isSet()) {
        obj.insert(QString("income_verification"), ::OpenAPI::toJsonValue(m_income_verification));
    }
    if (m_override_password_isSet) {
        obj.insert(QString("override_password"), ::OpenAPI::toJsonValue(m_override_password));
    }
    if (m_override_username_isSet) {
        obj.insert(QString("override_username"), ::OpenAPI::toJsonValue(m_override_username));
    }
    if (m_transactions.isSet()) {
        obj.insert(QString("transactions"), ::OpenAPI::toJsonValue(m_transactions));
    }
    if (m_webhook_isSet) {
        obj.insert(QString("webhook"), ::OpenAPI::toJsonValue(m_webhook));
    }
    return obj;
}

OAISandboxPublicTokenCreateRequestOptionsIncomeVerification OAISandboxPublicTokenCreateRequestOptions::getIncomeVerification() const {
    return m_income_verification;
}
void OAISandboxPublicTokenCreateRequestOptions::setIncomeVerification(const OAISandboxPublicTokenCreateRequestOptionsIncomeVerification &income_verification) {
    m_income_verification = income_verification;
    m_income_verification_isSet = true;
}

bool OAISandboxPublicTokenCreateRequestOptions::is_income_verification_Set() const{
    return m_income_verification_isSet;
}

bool OAISandboxPublicTokenCreateRequestOptions::is_income_verification_Valid() const{
    return m_income_verification_isValid;
}

QString OAISandboxPublicTokenCreateRequestOptions::getOverridePassword() const {
    return m_override_password;
}
void OAISandboxPublicTokenCreateRequestOptions::setOverridePassword(const QString &override_password) {
    m_override_password = override_password;
    m_override_password_isSet = true;
}

bool OAISandboxPublicTokenCreateRequestOptions::is_override_password_Set() const{
    return m_override_password_isSet;
}

bool OAISandboxPublicTokenCreateRequestOptions::is_override_password_Valid() const{
    return m_override_password_isValid;
}

QString OAISandboxPublicTokenCreateRequestOptions::getOverrideUsername() const {
    return m_override_username;
}
void OAISandboxPublicTokenCreateRequestOptions::setOverrideUsername(const QString &override_username) {
    m_override_username = override_username;
    m_override_username_isSet = true;
}

bool OAISandboxPublicTokenCreateRequestOptions::is_override_username_Set() const{
    return m_override_username_isSet;
}

bool OAISandboxPublicTokenCreateRequestOptions::is_override_username_Valid() const{
    return m_override_username_isValid;
}

OAISandboxPublicTokenCreateRequestOptionsTransactions OAISandboxPublicTokenCreateRequestOptions::getTransactions() const {
    return m_transactions;
}
void OAISandboxPublicTokenCreateRequestOptions::setTransactions(const OAISandboxPublicTokenCreateRequestOptionsTransactions &transactions) {
    m_transactions = transactions;
    m_transactions_isSet = true;
}

bool OAISandboxPublicTokenCreateRequestOptions::is_transactions_Set() const{
    return m_transactions_isSet;
}

bool OAISandboxPublicTokenCreateRequestOptions::is_transactions_Valid() const{
    return m_transactions_isValid;
}

QString OAISandboxPublicTokenCreateRequestOptions::getWebhook() const {
    return m_webhook;
}
void OAISandboxPublicTokenCreateRequestOptions::setWebhook(const QString &webhook) {
    m_webhook = webhook;
    m_webhook_isSet = true;
}

bool OAISandboxPublicTokenCreateRequestOptions::is_webhook_Set() const{
    return m_webhook_isSet;
}

bool OAISandboxPublicTokenCreateRequestOptions::is_webhook_Valid() const{
    return m_webhook_isValid;
}

bool OAISandboxPublicTokenCreateRequestOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_income_verification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_override_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_override_username_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISandboxPublicTokenCreateRequestOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
