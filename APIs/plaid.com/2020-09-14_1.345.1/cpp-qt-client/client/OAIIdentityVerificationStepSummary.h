/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdentityVerificationStepSummary.h
 *
 * Each step will be one of the following values:   &#x60;active&#x60; - This step is the user&#39;s current step. They are either in the process of completing this step, or they recently closed their Identity Verification attempt while in the middle of this step. Only one step will be marked as &#x60;active&#x60; at any given point.  &#x60;success&#x60; - The Identity Verification attempt has completed this step.  &#x60;failed&#x60; - The user failed this step. This can either call the user to fail the session as a whole, or cause them to fallback to another step depending on how the Identity Verification template is configured. A failed step does not imply a failed session.  &#x60;waiting_for_prerequisite&#x60; - The user needs to complete another step first, before they progress to this step. This step may never run, depending on if the user fails an earlier step or if the step is only run as a fallback.  &#x60;not_applicable&#x60; - This step will not be run for this session.  &#x60;skipped&#x60; - The retry instructions that created this Identity Verification attempt specified that this step should be skipped.  &#x60;expired&#x60; - This step had not yet been completed when the Identity Verification attempt as a whole expired.  &#x60;canceled&#x60; - The Identity Verification attempt was canceled before the user completed this step.  &#x60;pending_review&#x60; - The Identity Verification attempt template was configured to perform a screening that had one or more hits needing review.  &#x60;manually_approved&#x60; - The step was manually overridden to pass by a team member in the dashboard.  &#x60;manually_rejected&#x60; - The step was manually overridden to fail by a team member in the dashboard.
 */

#ifndef OAIIdentityVerificationStepSummary_H
#define OAIIdentityVerificationStepSummary_H

#include <QJsonObject>

#include "OAIIdentityVerificationStepStatus.h"
#include <QJsonValue>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIdentityVerificationStepSummary : public OAIObject {
public:
    OAIIdentityVerificationStepSummary();
    OAIIdentityVerificationStepSummary(QString json);
    ~OAIIdentityVerificationStepSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIdentityVerificationStepStatus getAcceptTos() const;
    void setAcceptTos(const OAIIdentityVerificationStepStatus &accept_tos);
    bool is_accept_tos_Set() const;
    bool is_accept_tos_Valid() const;

    OAIIdentityVerificationStepStatus getDocumentaryVerification() const;
    void setDocumentaryVerification(const OAIIdentityVerificationStepStatus &documentary_verification);
    bool is_documentary_verification_Set() const;
    bool is_documentary_verification_Valid() const;

    OAIIdentityVerificationStepStatus getKycCheck() const;
    void setKycCheck(const OAIIdentityVerificationStepStatus &kyc_check);
    bool is_kyc_check_Set() const;
    bool is_kyc_check_Valid() const;

    OAIIdentityVerificationStepStatus getRiskCheck() const;
    void setRiskCheck(const OAIIdentityVerificationStepStatus &risk_check);
    bool is_risk_check_Set() const;
    bool is_risk_check_Valid() const;

    OAIIdentityVerificationStepStatus getSelfieCheck() const;
    void setSelfieCheck(const OAIIdentityVerificationStepStatus &selfie_check);
    bool is_selfie_check_Set() const;
    bool is_selfie_check_Valid() const;

    OAIIdentityVerificationStepStatus getVerifySms() const;
    void setVerifySms(const OAIIdentityVerificationStepStatus &verify_sms);
    bool is_verify_sms_Set() const;
    bool is_verify_sms_Valid() const;

    OAIIdentityVerificationStepStatus getWatchlistScreening() const;
    void setWatchlistScreening(const OAIIdentityVerificationStepStatus &watchlist_screening);
    bool is_watchlist_screening_Set() const;
    bool is_watchlist_screening_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIdentityVerificationStepStatus m_accept_tos;
    bool m_accept_tos_isSet;
    bool m_accept_tos_isValid;

    OAIIdentityVerificationStepStatus m_documentary_verification;
    bool m_documentary_verification_isSet;
    bool m_documentary_verification_isValid;

    OAIIdentityVerificationStepStatus m_kyc_check;
    bool m_kyc_check_isSet;
    bool m_kyc_check_isValid;

    OAIIdentityVerificationStepStatus m_risk_check;
    bool m_risk_check_isSet;
    bool m_risk_check_isValid;

    OAIIdentityVerificationStepStatus m_selfie_check;
    bool m_selfie_check_isSet;
    bool m_selfie_check_isValid;

    OAIIdentityVerificationStepStatus m_verify_sms;
    bool m_verify_sms_isSet;
    bool m_verify_sms_isValid;

    OAIIdentityVerificationStepStatus m_watchlist_screening;
    bool m_watchlist_screening_isSet;
    bool m_watchlist_screening_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdentityVerificationStepSummary)

#endif // OAIIdentityVerificationStepSummary_H
