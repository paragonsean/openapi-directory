/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditBankIncomeAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditBankIncomeAccount::OAICreditBankIncomeAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditBankIncomeAccount::OAICreditBankIncomeAccount() {
    this->initializeModel();
}

OAICreditBankIncomeAccount::~OAICreditBankIncomeAccount() {}

void OAICreditBankIncomeAccount::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_mask_isSet = false;
    m_mask_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_official_name_isSet = false;
    m_official_name_isValid = false;

    m_owners_isSet = false;
    m_owners_isValid = false;

    m_subtype_isSet = false;
    m_subtype_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICreditBankIncomeAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditBankIncomeAccount::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_mask_isValid = ::OpenAPI::fromJsonValue(m_mask, json[QString("mask")]);
    m_mask_isSet = !json[QString("mask")].isNull() && m_mask_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_official_name_isValid = ::OpenAPI::fromJsonValue(m_official_name, json[QString("official_name")]);
    m_official_name_isSet = !json[QString("official_name")].isNull() && m_official_name_isValid;

    m_owners_isValid = ::OpenAPI::fromJsonValue(m_owners, json[QString("owners")]);
    m_owners_isSet = !json[QString("owners")].isNull() && m_owners_isValid;

    m_subtype_isValid = ::OpenAPI::fromJsonValue(m_subtype, json[QString("subtype")]);
    m_subtype_isSet = !json[QString("subtype")].isNull() && m_subtype_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAICreditBankIncomeAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditBankIncomeAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_mask_isSet) {
        obj.insert(QString("mask"), ::OpenAPI::toJsonValue(m_mask));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_official_name_isSet) {
        obj.insert(QString("official_name"), ::OpenAPI::toJsonValue(m_official_name));
    }
    if (m_owners.size() > 0) {
        obj.insert(QString("owners"), ::OpenAPI::toJsonValue(m_owners));
    }
    if (m_subtype.isSet()) {
        obj.insert(QString("subtype"), ::OpenAPI::toJsonValue(m_subtype));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAICreditBankIncomeAccount::getAccountId() const {
    return m_account_id;
}
void OAICreditBankIncomeAccount::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAICreditBankIncomeAccount::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAICreditBankIncomeAccount::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAICreditBankIncomeAccount::getMask() const {
    return m_mask;
}
void OAICreditBankIncomeAccount::setMask(const QString &mask) {
    m_mask = mask;
    m_mask_isSet = true;
}

bool OAICreditBankIncomeAccount::is_mask_Set() const{
    return m_mask_isSet;
}

bool OAICreditBankIncomeAccount::is_mask_Valid() const{
    return m_mask_isValid;
}

QString OAICreditBankIncomeAccount::getName() const {
    return m_name;
}
void OAICreditBankIncomeAccount::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreditBankIncomeAccount::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreditBankIncomeAccount::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreditBankIncomeAccount::getOfficialName() const {
    return m_official_name;
}
void OAICreditBankIncomeAccount::setOfficialName(const QString &official_name) {
    m_official_name = official_name;
    m_official_name_isSet = true;
}

bool OAICreditBankIncomeAccount::is_official_name_Set() const{
    return m_official_name_isSet;
}

bool OAICreditBankIncomeAccount::is_official_name_Valid() const{
    return m_official_name_isValid;
}

QList<OAIOwner> OAICreditBankIncomeAccount::getOwners() const {
    return m_owners;
}
void OAICreditBankIncomeAccount::setOwners(const QList<OAIOwner> &owners) {
    m_owners = owners;
    m_owners_isSet = true;
}

bool OAICreditBankIncomeAccount::is_owners_Set() const{
    return m_owners_isSet;
}

bool OAICreditBankIncomeAccount::is_owners_Valid() const{
    return m_owners_isValid;
}

OAIDepositoryAccountSubtype OAICreditBankIncomeAccount::getSubtype() const {
    return m_subtype;
}
void OAICreditBankIncomeAccount::setSubtype(const OAIDepositoryAccountSubtype &subtype) {
    m_subtype = subtype;
    m_subtype_isSet = true;
}

bool OAICreditBankIncomeAccount::is_subtype_Set() const{
    return m_subtype_isSet;
}

bool OAICreditBankIncomeAccount::is_subtype_Valid() const{
    return m_subtype_isValid;
}

OAICreditBankIncomeAccountType OAICreditBankIncomeAccount::getType() const {
    return m_type;
}
void OAICreditBankIncomeAccount::setType(const OAICreditBankIncomeAccountType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICreditBankIncomeAccount::is_type_Set() const{
    return m_type_isSet;
}

bool OAICreditBankIncomeAccount::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICreditBankIncomeAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mask_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_official_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owners.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtype.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditBankIncomeAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_mask_isValid && m_name_isValid && m_official_name_isValid && m_owners_isValid && m_subtype_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
