/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditPayStubDeductions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditPayStubDeductions::OAICreditPayStubDeductions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditPayStubDeductions::OAICreditPayStubDeductions() {
    this->initializeModel();
}

OAICreditPayStubDeductions::~OAICreditPayStubDeductions() {}

void OAICreditPayStubDeductions::initializeModel() {

    m_breakdown_isSet = false;
    m_breakdown_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAICreditPayStubDeductions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditPayStubDeductions::fromJsonObject(QJsonObject json) {

    m_breakdown_isValid = ::OpenAPI::fromJsonValue(m_breakdown, json[QString("breakdown")]);
    m_breakdown_isSet = !json[QString("breakdown")].isNull() && m_breakdown_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAICreditPayStubDeductions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditPayStubDeductions::asJsonObject() const {
    QJsonObject obj;
    if (m_breakdown.size() > 0) {
        obj.insert(QString("breakdown"), ::OpenAPI::toJsonValue(m_breakdown));
    }
    if (m_total.isSet()) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

QList<OAIPayStubDeductionsBreakdown> OAICreditPayStubDeductions::getBreakdown() const {
    return m_breakdown;
}
void OAICreditPayStubDeductions::setBreakdown(const QList<OAIPayStubDeductionsBreakdown> &breakdown) {
    m_breakdown = breakdown;
    m_breakdown_isSet = true;
}

bool OAICreditPayStubDeductions::is_breakdown_Set() const{
    return m_breakdown_isSet;
}

bool OAICreditPayStubDeductions::is_breakdown_Valid() const{
    return m_breakdown_isValid;
}

OAIPayStubDeductionsTotal OAICreditPayStubDeductions::getTotal() const {
    return m_total;
}
void OAICreditPayStubDeductions::setTotal(const OAIPayStubDeductionsTotal &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAICreditPayStubDeductions::is_total_Set() const{
    return m_total_isSet;
}

bool OAICreditPayStubDeductions::is_total_Valid() const{
    return m_total_isValid;
}

bool OAICreditPayStubDeductions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_breakdown.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditPayStubDeductions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_breakdown_isValid && m_total_isValid && true;
}

} // namespace OpenAPI
