/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmploymentVerification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmploymentVerification::OAIEmploymentVerification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmploymentVerification::OAIEmploymentVerification() {
    this->initializeModel();
}

OAIEmploymentVerification::~OAIEmploymentVerification() {}

void OAIEmploymentVerification::initializeModel() {

    m_employer_isSet = false;
    m_employer_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_platform_ids_isSet = false;
    m_platform_ids_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIEmploymentVerification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmploymentVerification::fromJsonObject(QJsonObject json) {

    m_employer_isValid = ::OpenAPI::fromJsonValue(m_employer, json[QString("employer")]);
    m_employer_isSet = !json[QString("employer")].isNull() && m_employer_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("end_date")]);
    m_end_date_isSet = !json[QString("end_date")].isNull() && m_end_date_isValid;

    m_platform_ids_isValid = ::OpenAPI::fromJsonValue(m_platform_ids, json[QString("platform_ids")]);
    m_platform_ids_isSet = !json[QString("platform_ids")].isNull() && m_platform_ids_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("start_date")]);
    m_start_date_isSet = !json[QString("start_date")].isNull() && m_start_date_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIEmploymentVerification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmploymentVerification::asJsonObject() const {
    QJsonObject obj;
    if (m_employer.isSet()) {
        obj.insert(QString("employer"), ::OpenAPI::toJsonValue(m_employer));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("end_date"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_platform_ids.isSet()) {
        obj.insert(QString("platform_ids"), ::OpenAPI::toJsonValue(m_platform_ids));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("start_date"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

OAIEmployerVerification OAIEmploymentVerification::getEmployer() const {
    return m_employer;
}
void OAIEmploymentVerification::setEmployer(const OAIEmployerVerification &employer) {
    m_employer = employer;
    m_employer_isSet = true;
}

bool OAIEmploymentVerification::is_employer_Set() const{
    return m_employer_isSet;
}

bool OAIEmploymentVerification::is_employer_Valid() const{
    return m_employer_isValid;
}

QDate OAIEmploymentVerification::getEndDate() const {
    return m_end_date;
}
void OAIEmploymentVerification::setEndDate(const QDate &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIEmploymentVerification::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIEmploymentVerification::is_end_date_Valid() const{
    return m_end_date_isValid;
}

OAIPlatformIds OAIEmploymentVerification::getPlatformIds() const {
    return m_platform_ids;
}
void OAIEmploymentVerification::setPlatformIds(const OAIPlatformIds &platform_ids) {
    m_platform_ids = platform_ids;
    m_platform_ids_isSet = true;
}

bool OAIEmploymentVerification::is_platform_ids_Set() const{
    return m_platform_ids_isSet;
}

bool OAIEmploymentVerification::is_platform_ids_Valid() const{
    return m_platform_ids_isValid;
}

QDate OAIEmploymentVerification::getStartDate() const {
    return m_start_date;
}
void OAIEmploymentVerification::setStartDate(const QDate &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIEmploymentVerification::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIEmploymentVerification::is_start_date_Valid() const{
    return m_start_date_isValid;
}

OAIEmploymentVerificationStatus OAIEmploymentVerification::getStatus() const {
    return m_status;
}
void OAIEmploymentVerification::setStatus(const OAIEmploymentVerificationStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIEmploymentVerification::is_status_Set() const{
    return m_status_isSet;
}

bool OAIEmploymentVerification::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIEmploymentVerification::getTitle() const {
    return m_title;
}
void OAIEmploymentVerification::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIEmploymentVerification::is_title_Set() const{
    return m_title_isSet;
}

bool OAIEmploymentVerification::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIEmploymentVerification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_employer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_platform_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmploymentVerification::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
