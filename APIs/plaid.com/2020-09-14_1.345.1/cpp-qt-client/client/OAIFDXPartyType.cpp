/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFDXPartyType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFDXPartyType::OAIFDXPartyType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFDXPartyType::OAIFDXPartyType() {
    this->initializeModel();
}

OAIFDXPartyType::~OAIFDXPartyType() {}

void OAIFDXPartyType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFDXPartyType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFDXPartyType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("DATA_ACCESS_PLATFORM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFDXPartyType::DATA_ACCESS_PLATFORM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DATA_PROVIDER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFDXPartyType::DATA_PROVIDER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DATA_RECIPIENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFDXPartyType::DATA_RECIPIENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INDIVIDUAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFDXPartyType::INDIVIDUAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MERCHANT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFDXPartyType::MERCHANT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VENDOR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFDXPartyType::VENDOR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFDXPartyType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFDXPartyType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFDXPartyType::DATA_ACCESS_PLATFORM:
            val = "DATA_ACCESS_PLATFORM";
            break;
        case eOAIFDXPartyType::DATA_PROVIDER:
            val = "DATA_PROVIDER";
            break;
        case eOAIFDXPartyType::DATA_RECIPIENT:
            val = "DATA_RECIPIENT";
            break;
        case eOAIFDXPartyType::INDIVIDUAL:
            val = "INDIVIDUAL";
            break;
        case eOAIFDXPartyType::MERCHANT:
            val = "MERCHANT";
            break;
        case eOAIFDXPartyType::VENDOR:
            val = "VENDOR";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFDXPartyType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFDXPartyType::eOAIFDXPartyType OAIFDXPartyType::getValue() const {
    return m_value;
}

void OAIFDXPartyType::setValue(const OAIFDXPartyType::eOAIFDXPartyType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFDXPartyType::isSet() const {
    
    return m_value_isSet;
}

bool OAIFDXPartyType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
