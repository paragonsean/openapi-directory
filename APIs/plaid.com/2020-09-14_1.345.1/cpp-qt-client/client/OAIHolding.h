/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHolding.h
 *
 * A securities holding at an institution.
 */

#ifndef OAIHolding_H
#define OAIHolding_H

#include <QJsonObject>

#include <QDate>
#include <QDateTime>
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIHolding : public OAIObject {
public:
    OAIHolding();
    OAIHolding(QString json);
    ~OAIHolding() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    double getCostBasis() const;
    void setCostBasis(const double &cost_basis);
    bool is_cost_basis_Set() const;
    bool is_cost_basis_Valid() const;

    double getInstitutionPrice() const;
    void setInstitutionPrice(const double &institution_price);
    bool is_institution_price_Set() const;
    bool is_institution_price_Valid() const;

    QDate getInstitutionPriceAsOf() const;
    void setInstitutionPriceAsOf(const QDate &institution_price_as_of);
    bool is_institution_price_as_of_Set() const;
    bool is_institution_price_as_of_Valid() const;

    QDateTime getInstitutionPriceDatetime() const;
    void setInstitutionPriceDatetime(const QDateTime &institution_price_datetime);
    bool is_institution_price_datetime_Set() const;
    bool is_institution_price_datetime_Valid() const;

    double getInstitutionValue() const;
    void setInstitutionValue(const double &institution_value);
    bool is_institution_value_Set() const;
    bool is_institution_value_Valid() const;

    QString getIsoCurrencyCode() const;
    void setIsoCurrencyCode(const QString &iso_currency_code);
    bool is_iso_currency_code_Set() const;
    bool is_iso_currency_code_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getSecurityId() const;
    void setSecurityId(const QString &security_id);
    bool is_security_id_Set() const;
    bool is_security_id_Valid() const;

    QString getUnofficialCurrencyCode() const;
    void setUnofficialCurrencyCode(const QString &unofficial_currency_code);
    bool is_unofficial_currency_code_Set() const;
    bool is_unofficial_currency_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    double m_cost_basis;
    bool m_cost_basis_isSet;
    bool m_cost_basis_isValid;

    double m_institution_price;
    bool m_institution_price_isSet;
    bool m_institution_price_isValid;

    QDate m_institution_price_as_of;
    bool m_institution_price_as_of_isSet;
    bool m_institution_price_as_of_isValid;

    QDateTime m_institution_price_datetime;
    bool m_institution_price_datetime_isSet;
    bool m_institution_price_datetime_isValid;

    double m_institution_value;
    bool m_institution_value_isSet;
    bool m_institution_value_isValid;

    QString m_iso_currency_code;
    bool m_iso_currency_code_isSet;
    bool m_iso_currency_code_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_security_id;
    bool m_security_id_isSet;
    bool m_security_id_isValid;

    QString m_unofficial_currency_code;
    bool m_unofficial_currency_code_isSet;
    bool m_unofficial_currency_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHolding)

#endif // OAIHolding_H
