/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmploymentDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmploymentDetails::OAIEmploymentDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmploymentDetails::OAIEmploymentDetails() {
    this->initializeModel();
}

OAIEmploymentDetails::~OAIEmploymentDetails() {}

void OAIEmploymentDetails::initializeModel() {

    m_annual_salary_isSet = false;
    m_annual_salary_isValid = false;

    m_hire_date_isSet = false;
    m_hire_date_isValid = false;
}

void OAIEmploymentDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmploymentDetails::fromJsonObject(QJsonObject json) {

    m_annual_salary_isValid = ::OpenAPI::fromJsonValue(m_annual_salary, json[QString("annual_salary")]);
    m_annual_salary_isSet = !json[QString("annual_salary")].isNull() && m_annual_salary_isValid;

    m_hire_date_isValid = ::OpenAPI::fromJsonValue(m_hire_date, json[QString("hire_date")]);
    m_hire_date_isSet = !json[QString("hire_date")].isNull() && m_hire_date_isValid;
}

QString OAIEmploymentDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmploymentDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_annual_salary.isSet()) {
        obj.insert(QString("annual_salary"), ::OpenAPI::toJsonValue(m_annual_salary));
    }
    if (m_hire_date_isSet) {
        obj.insert(QString("hire_date"), ::OpenAPI::toJsonValue(m_hire_date));
    }
    return obj;
}

OAIPay OAIEmploymentDetails::getAnnualSalary() const {
    return m_annual_salary;
}
void OAIEmploymentDetails::setAnnualSalary(const OAIPay &annual_salary) {
    m_annual_salary = annual_salary;
    m_annual_salary_isSet = true;
}

bool OAIEmploymentDetails::is_annual_salary_Set() const{
    return m_annual_salary_isSet;
}

bool OAIEmploymentDetails::is_annual_salary_Valid() const{
    return m_annual_salary_isValid;
}

QDate OAIEmploymentDetails::getHireDate() const {
    return m_hire_date;
}
void OAIEmploymentDetails::setHireDate(const QDate &hire_date) {
    m_hire_date = hire_date;
    m_hire_date_isSet = true;
}

bool OAIEmploymentDetails::is_hire_date_Set() const{
    return m_hire_date_isSet;
}

bool OAIEmploymentDetails::is_hire_date_Valid() const{
    return m_hire_date_isValid;
}

bool OAIEmploymentDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annual_salary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_hire_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmploymentDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
