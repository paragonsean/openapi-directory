/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransferAuthorization.h
 *
 * Contains the authorization decision for a proposed transfer.
 */

#ifndef OAITransferAuthorization_H
#define OAITransferAuthorization_H

#include <QJsonObject>

#include "OAITransferAuthorizationDecision.h"
#include "OAITransferAuthorizationDecisionRationale.h"
#include "OAITransferAuthorizationGuaranteeDecision.h"
#include "OAITransferAuthorizationGuaranteeDecisionRationale.h"
#include "OAITransferAuthorizationProposedTransfer.h"
#include <QDateTime>
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransferAuthorization : public OAIObject {
public:
    OAITransferAuthorization();
    OAITransferAuthorization(QString json);
    ~OAITransferAuthorization() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    OAITransferAuthorizationDecision getDecision() const;
    void setDecision(const OAITransferAuthorizationDecision &decision);
    bool is_decision_Set() const;
    bool is_decision_Valid() const;

    OAITransferAuthorizationDecisionRationale getDecisionRationale() const;
    void setDecisionRationale(const OAITransferAuthorizationDecisionRationale &decision_rationale);
    bool is_decision_rationale_Set() const;
    bool is_decision_rationale_Valid() const;

    OAITransferAuthorizationGuaranteeDecision getGuaranteeDecision() const;
    void setGuaranteeDecision(const OAITransferAuthorizationGuaranteeDecision &guarantee_decision);
    bool is_guarantee_decision_Set() const;
    bool is_guarantee_decision_Valid() const;

    OAITransferAuthorizationGuaranteeDecisionRationale getGuaranteeDecisionRationale() const;
    void setGuaranteeDecisionRationale(const OAITransferAuthorizationGuaranteeDecisionRationale &guarantee_decision_rationale);
    bool is_guarantee_decision_rationale_Set() const;
    bool is_guarantee_decision_rationale_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAITransferAuthorizationProposedTransfer getProposedTransfer() const;
    void setProposedTransfer(const OAITransferAuthorizationProposedTransfer &proposed_transfer);
    bool is_proposed_transfer_Set() const;
    bool is_proposed_transfer_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    OAITransferAuthorizationDecision m_decision;
    bool m_decision_isSet;
    bool m_decision_isValid;

    OAITransferAuthorizationDecisionRationale m_decision_rationale;
    bool m_decision_rationale_isSet;
    bool m_decision_rationale_isValid;

    OAITransferAuthorizationGuaranteeDecision m_guarantee_decision;
    bool m_guarantee_decision_isSet;
    bool m_guarantee_decision_isValid;

    OAITransferAuthorizationGuaranteeDecisionRationale m_guarantee_decision_rationale;
    bool m_guarantee_decision_rationale_isSet;
    bool m_guarantee_decision_rationale_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAITransferAuthorizationProposedTransfer m_proposed_transfer;
    bool m_proposed_transfer_isSet;
    bool m_proposed_transfer_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransferAuthorization)

#endif // OAITransferAuthorization_H
