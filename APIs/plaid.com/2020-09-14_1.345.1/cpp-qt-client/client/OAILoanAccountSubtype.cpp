/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoanAccountSubtype.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoanAccountSubtype::OAILoanAccountSubtype(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoanAccountSubtype::OAILoanAccountSubtype() {
    this->initializeModel();
}

OAILoanAccountSubtype::~OAILoanAccountSubtype() {}

void OAILoanAccountSubtype::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAILoanAccountSubtype::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAILoanAccountSubtype::fromJson(QString jsonString) {
    
    if ( jsonString.compare("auto", Qt::CaseInsensitive) == 0) {
        m_value = eOAILoanAccountSubtype::AUTO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("business", Qt::CaseInsensitive) == 0) {
        m_value = eOAILoanAccountSubtype::BUSINESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("commercial", Qt::CaseInsensitive) == 0) {
        m_value = eOAILoanAccountSubtype::COMMERCIAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("construction", Qt::CaseInsensitive) == 0) {
        m_value = eOAILoanAccountSubtype::CONSTRUCTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("consumer", Qt::CaseInsensitive) == 0) {
        m_value = eOAILoanAccountSubtype::CONSUMER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("home equity", Qt::CaseInsensitive) == 0) {
        m_value = eOAILoanAccountSubtype::HOME_EQUITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("loan", Qt::CaseInsensitive) == 0) {
        m_value = eOAILoanAccountSubtype::LOAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mortgage", Qt::CaseInsensitive) == 0) {
        m_value = eOAILoanAccountSubtype::MORTGAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("line of credit", Qt::CaseInsensitive) == 0) {
        m_value = eOAILoanAccountSubtype::LINE_OF_CREDIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("student", Qt::CaseInsensitive) == 0) {
        m_value = eOAILoanAccountSubtype::STUDENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("other", Qt::CaseInsensitive) == 0) {
        m_value = eOAILoanAccountSubtype::OTHER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("all", Qt::CaseInsensitive) == 0) {
        m_value = eOAILoanAccountSubtype::ALL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAILoanAccountSubtype::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAILoanAccountSubtype::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAILoanAccountSubtype::AUTO:
            val = "auto";
            break;
        case eOAILoanAccountSubtype::BUSINESS:
            val = "business";
            break;
        case eOAILoanAccountSubtype::COMMERCIAL:
            val = "commercial";
            break;
        case eOAILoanAccountSubtype::CONSTRUCTION:
            val = "construction";
            break;
        case eOAILoanAccountSubtype::CONSUMER:
            val = "consumer";
            break;
        case eOAILoanAccountSubtype::HOME_EQUITY:
            val = "home equity";
            break;
        case eOAILoanAccountSubtype::LOAN:
            val = "loan";
            break;
        case eOAILoanAccountSubtype::MORTGAGE:
            val = "mortgage";
            break;
        case eOAILoanAccountSubtype::LINE_OF_CREDIT:
            val = "line of credit";
            break;
        case eOAILoanAccountSubtype::STUDENT:
            val = "student";
            break;
        case eOAILoanAccountSubtype::OTHER:
            val = "other";
            break;
        case eOAILoanAccountSubtype::ALL:
            val = "all";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAILoanAccountSubtype::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAILoanAccountSubtype::eOAILoanAccountSubtype OAILoanAccountSubtype::getValue() const {
    return m_value;
}

void OAILoanAccountSubtype::setValue(const OAILoanAccountSubtype::eOAILoanAccountSubtype& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAILoanAccountSubtype::isSet() const {
    
    return m_value_isSet;
}

bool OAILoanAccountSubtype::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
