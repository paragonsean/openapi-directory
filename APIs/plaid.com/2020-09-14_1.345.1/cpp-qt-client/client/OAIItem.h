/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItem.h
 *
 * Metadata about the Item.
 */

#ifndef OAIItem_H
#define OAIItem_H

#include <QJsonObject>

#include "OAIPlaidError.h"
#include "OAIProducts.h"
#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIItem : public OAIObject {
public:
    OAIItem();
    OAIItem(QString json);
    ~OAIItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIProducts> getAvailableProducts() const;
    void setAvailableProducts(const QList<OAIProducts> &available_products);
    bool is_available_products_Set() const;
    bool is_available_products_Valid() const;

    QList<OAIProducts> getBilledProducts() const;
    void setBilledProducts(const QList<OAIProducts> &billed_products);
    bool is_billed_products_Set() const;
    bool is_billed_products_Valid() const;

    QDateTime getConsentExpirationTime() const;
    void setConsentExpirationTime(const QDateTime &consent_expiration_time);
    bool is_consent_expiration_time_Set() const;
    bool is_consent_expiration_time_Valid() const;

    QList<OAIProducts> getConsentedProducts() const;
    void setConsentedProducts(const QList<OAIProducts> &consented_products);
    bool is_consented_products_Set() const;
    bool is_consented_products_Valid() const;

    OAIPlaidError getError() const;
    void setError(const OAIPlaidError &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getInstitutionId() const;
    void setInstitutionId(const QString &institution_id);
    bool is_institution_id_Set() const;
    bool is_institution_id_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QList<OAIProducts> getProducts() const;
    void setProducts(const QList<OAIProducts> &products);
    bool is_products_Set() const;
    bool is_products_Valid() const;

    QString getUpdateType() const;
    void setUpdateType(const QString &update_type);
    bool is_update_type_Set() const;
    bool is_update_type_Valid() const;

    QString getWebhook() const;
    void setWebhook(const QString &webhook);
    bool is_webhook_Set() const;
    bool is_webhook_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIProducts> m_available_products;
    bool m_available_products_isSet;
    bool m_available_products_isValid;

    QList<OAIProducts> m_billed_products;
    bool m_billed_products_isSet;
    bool m_billed_products_isValid;

    QDateTime m_consent_expiration_time;
    bool m_consent_expiration_time_isSet;
    bool m_consent_expiration_time_isValid;

    QList<OAIProducts> m_consented_products;
    bool m_consented_products_isSet;
    bool m_consented_products_isValid;

    OAIPlaidError m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_institution_id;
    bool m_institution_id_isSet;
    bool m_institution_id_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QList<OAIProducts> m_products;
    bool m_products_isSet;
    bool m_products_isValid;

    QString m_update_type;
    bool m_update_type_isSet;
    bool m_update_type_isValid;

    QString m_webhook;
    bool m_webhook_isSet;
    bool m_webhook_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItem)

#endif // OAIItem_H
