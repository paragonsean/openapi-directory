/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWallet.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWallet::OAIWallet(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWallet::OAIWallet() {
    this->initializeModel();
}

OAIWallet::~OAIWallet() {}

void OAIWallet::initializeModel() {

    m_balance_isSet = false;
    m_balance_isValid = false;

    m_numbers_isSet = false;
    m_numbers_isValid = false;

    m_recipient_id_isSet = false;
    m_recipient_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_wallet_id_isSet = false;
    m_wallet_id_isValid = false;
}

void OAIWallet::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWallet::fromJsonObject(QJsonObject json) {

    m_balance_isValid = ::OpenAPI::fromJsonValue(m_balance, json[QString("balance")]);
    m_balance_isSet = !json[QString("balance")].isNull() && m_balance_isValid;

    m_numbers_isValid = ::OpenAPI::fromJsonValue(m_numbers, json[QString("numbers")]);
    m_numbers_isSet = !json[QString("numbers")].isNull() && m_numbers_isValid;

    m_recipient_id_isValid = ::OpenAPI::fromJsonValue(m_recipient_id, json[QString("recipient_id")]);
    m_recipient_id_isSet = !json[QString("recipient_id")].isNull() && m_recipient_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_wallet_id_isValid = ::OpenAPI::fromJsonValue(m_wallet_id, json[QString("wallet_id")]);
    m_wallet_id_isSet = !json[QString("wallet_id")].isNull() && m_wallet_id_isValid;
}

QString OAIWallet::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWallet::asJsonObject() const {
    QJsonObject obj;
    if (m_balance.isSet()) {
        obj.insert(QString("balance"), ::OpenAPI::toJsonValue(m_balance));
    }
    if (m_numbers.isSet()) {
        obj.insert(QString("numbers"), ::OpenAPI::toJsonValue(m_numbers));
    }
    if (m_recipient_id_isSet) {
        obj.insert(QString("recipient_id"), ::OpenAPI::toJsonValue(m_recipient_id));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_wallet_id_isSet) {
        obj.insert(QString("wallet_id"), ::OpenAPI::toJsonValue(m_wallet_id));
    }
    return obj;
}

OAIWalletBalance OAIWallet::getBalance() const {
    return m_balance;
}
void OAIWallet::setBalance(const OAIWalletBalance &balance) {
    m_balance = balance;
    m_balance_isSet = true;
}

bool OAIWallet::is_balance_Set() const{
    return m_balance_isSet;
}

bool OAIWallet::is_balance_Valid() const{
    return m_balance_isValid;
}

OAIWalletNumbers OAIWallet::getNumbers() const {
    return m_numbers;
}
void OAIWallet::setNumbers(const OAIWalletNumbers &numbers) {
    m_numbers = numbers;
    m_numbers_isSet = true;
}

bool OAIWallet::is_numbers_Set() const{
    return m_numbers_isSet;
}

bool OAIWallet::is_numbers_Valid() const{
    return m_numbers_isValid;
}

QString OAIWallet::getRecipientId() const {
    return m_recipient_id;
}
void OAIWallet::setRecipientId(const QString &recipient_id) {
    m_recipient_id = recipient_id;
    m_recipient_id_isSet = true;
}

bool OAIWallet::is_recipient_id_Set() const{
    return m_recipient_id_isSet;
}

bool OAIWallet::is_recipient_id_Valid() const{
    return m_recipient_id_isValid;
}

OAIWalletStatus OAIWallet::getStatus() const {
    return m_status;
}
void OAIWallet::setStatus(const OAIWalletStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIWallet::is_status_Set() const{
    return m_status_isSet;
}

bool OAIWallet::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIWallet::getWalletId() const {
    return m_wallet_id;
}
void OAIWallet::setWalletId(const QString &wallet_id) {
    m_wallet_id = wallet_id;
    m_wallet_id_isSet = true;
}

bool OAIWallet::is_wallet_id_Set() const{
    return m_wallet_id_isSet;
}

bool OAIWallet::is_wallet_id_Valid() const{
    return m_wallet_id_isValid;
}

bool OAIWallet::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_balance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_numbers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_wallet_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWallet::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_balance_isValid && m_numbers_isValid && m_status_isValid && m_wallet_id_isValid && true;
}

} // namespace OpenAPI
