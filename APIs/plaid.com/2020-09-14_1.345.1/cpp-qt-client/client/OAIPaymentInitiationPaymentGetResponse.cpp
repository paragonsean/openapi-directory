/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentInitiationPaymentGetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentInitiationPaymentGetResponse::OAIPaymentInitiationPaymentGetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentInitiationPaymentGetResponse::OAIPaymentInitiationPaymentGetResponse() {
    this->initializeModel();
}

OAIPaymentInitiationPaymentGetResponse::~OAIPaymentInitiationPaymentGetResponse() {}

void OAIPaymentInitiationPaymentGetResponse::initializeModel() {

    m_adjusted_reference_isSet = false;
    m_adjusted_reference_isValid = false;

    m_adjusted_scheme_isSet = false;
    m_adjusted_scheme_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_amount_refunded_isSet = false;
    m_amount_refunded_isValid = false;

    m_bacs_isSet = false;
    m_bacs_isValid = false;

    m_consent_id_isSet = false;
    m_consent_id_isValid = false;

    m_iban_isSet = false;
    m_iban_isValid = false;

    m_last_status_update_isSet = false;
    m_last_status_update_isValid = false;

    m_payment_id_isSet = false;
    m_payment_id_isValid = false;

    m_recipient_id_isSet = false;
    m_recipient_id_isValid = false;

    m_reference_isSet = false;
    m_reference_isValid = false;

    m_refund_details_isSet = false;
    m_refund_details_isValid = false;

    m_refund_ids_isSet = false;
    m_refund_ids_isValid = false;

    m_schedule_isSet = false;
    m_schedule_isValid = false;

    m_scheme_isSet = false;
    m_scheme_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;

    m_wallet_id_isSet = false;
    m_wallet_id_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAIPaymentInitiationPaymentGetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentInitiationPaymentGetResponse::fromJsonObject(QJsonObject json) {

    m_adjusted_reference_isValid = ::OpenAPI::fromJsonValue(m_adjusted_reference, json[QString("adjusted_reference")]);
    m_adjusted_reference_isSet = !json[QString("adjusted_reference")].isNull() && m_adjusted_reference_isValid;

    m_adjusted_scheme_isValid = ::OpenAPI::fromJsonValue(m_adjusted_scheme, json[QString("adjusted_scheme")]);
    m_adjusted_scheme_isSet = !json[QString("adjusted_scheme")].isNull() && m_adjusted_scheme_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_amount_refunded_isValid = ::OpenAPI::fromJsonValue(m_amount_refunded, json[QString("amount_refunded")]);
    m_amount_refunded_isSet = !json[QString("amount_refunded")].isNull() && m_amount_refunded_isValid;

    m_bacs_isValid = ::OpenAPI::fromJsonValue(m_bacs, json[QString("bacs")]);
    m_bacs_isSet = !json[QString("bacs")].isNull() && m_bacs_isValid;

    m_consent_id_isValid = ::OpenAPI::fromJsonValue(m_consent_id, json[QString("consent_id")]);
    m_consent_id_isSet = !json[QString("consent_id")].isNull() && m_consent_id_isValid;

    m_iban_isValid = ::OpenAPI::fromJsonValue(m_iban, json[QString("iban")]);
    m_iban_isSet = !json[QString("iban")].isNull() && m_iban_isValid;

    m_last_status_update_isValid = ::OpenAPI::fromJsonValue(m_last_status_update, json[QString("last_status_update")]);
    m_last_status_update_isSet = !json[QString("last_status_update")].isNull() && m_last_status_update_isValid;

    m_payment_id_isValid = ::OpenAPI::fromJsonValue(m_payment_id, json[QString("payment_id")]);
    m_payment_id_isSet = !json[QString("payment_id")].isNull() && m_payment_id_isValid;

    m_recipient_id_isValid = ::OpenAPI::fromJsonValue(m_recipient_id, json[QString("recipient_id")]);
    m_recipient_id_isSet = !json[QString("recipient_id")].isNull() && m_recipient_id_isValid;

    m_reference_isValid = ::OpenAPI::fromJsonValue(m_reference, json[QString("reference")]);
    m_reference_isSet = !json[QString("reference")].isNull() && m_reference_isValid;

    m_refund_details_isValid = ::OpenAPI::fromJsonValue(m_refund_details, json[QString("refund_details")]);
    m_refund_details_isSet = !json[QString("refund_details")].isNull() && m_refund_details_isValid;

    m_refund_ids_isValid = ::OpenAPI::fromJsonValue(m_refund_ids, json[QString("refund_ids")]);
    m_refund_ids_isSet = !json[QString("refund_ids")].isNull() && m_refund_ids_isValid;

    m_schedule_isValid = ::OpenAPI::fromJsonValue(m_schedule, json[QString("schedule")]);
    m_schedule_isSet = !json[QString("schedule")].isNull() && m_schedule_isValid;

    m_scheme_isValid = ::OpenAPI::fromJsonValue(m_scheme, json[QString("scheme")]);
    m_scheme_isSet = !json[QString("scheme")].isNull() && m_scheme_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transaction_id")]);
    m_transaction_id_isSet = !json[QString("transaction_id")].isNull() && m_transaction_id_isValid;

    m_wallet_id_isValid = ::OpenAPI::fromJsonValue(m_wallet_id, json[QString("wallet_id")]);
    m_wallet_id_isSet = !json[QString("wallet_id")].isNull() && m_wallet_id_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("request_id")]);
    m_request_id_isSet = !json[QString("request_id")].isNull() && m_request_id_isValid;
}

QString OAIPaymentInitiationPaymentGetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentInitiationPaymentGetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_adjusted_reference_isSet) {
        obj.insert(QString("adjusted_reference"), ::OpenAPI::toJsonValue(m_adjusted_reference));
    }
    if (m_adjusted_scheme.isSet()) {
        obj.insert(QString("adjusted_scheme"), ::OpenAPI::toJsonValue(m_adjusted_scheme));
    }
    if (m_amount.isSet()) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_amount_refunded.isSet()) {
        obj.insert(QString("amount_refunded"), ::OpenAPI::toJsonValue(m_amount_refunded));
    }
    if (m_bacs.isSet()) {
        obj.insert(QString("bacs"), ::OpenAPI::toJsonValue(m_bacs));
    }
    if (m_consent_id_isSet) {
        obj.insert(QString("consent_id"), ::OpenAPI::toJsonValue(m_consent_id));
    }
    if (m_iban_isSet) {
        obj.insert(QString("iban"), ::OpenAPI::toJsonValue(m_iban));
    }
    if (m_last_status_update_isSet) {
        obj.insert(QString("last_status_update"), ::OpenAPI::toJsonValue(m_last_status_update));
    }
    if (m_payment_id_isSet) {
        obj.insert(QString("payment_id"), ::OpenAPI::toJsonValue(m_payment_id));
    }
    if (m_recipient_id_isSet) {
        obj.insert(QString("recipient_id"), ::OpenAPI::toJsonValue(m_recipient_id));
    }
    if (m_reference_isSet) {
        obj.insert(QString("reference"), ::OpenAPI::toJsonValue(m_reference));
    }
    if (m_refund_details.isSet()) {
        obj.insert(QString("refund_details"), ::OpenAPI::toJsonValue(m_refund_details));
    }
    if (m_refund_ids.size() > 0) {
        obj.insert(QString("refund_ids"), ::OpenAPI::toJsonValue(m_refund_ids));
    }
    if (m_schedule.isSet()) {
        obj.insert(QString("schedule"), ::OpenAPI::toJsonValue(m_schedule));
    }
    if (m_scheme.isSet()) {
        obj.insert(QString("scheme"), ::OpenAPI::toJsonValue(m_scheme));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transaction_id"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    if (m_wallet_id_isSet) {
        obj.insert(QString("wallet_id"), ::OpenAPI::toJsonValue(m_wallet_id));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("request_id"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

QString OAIPaymentInitiationPaymentGetResponse::getAdjustedReference() const {
    return m_adjusted_reference;
}
void OAIPaymentInitiationPaymentGetResponse::setAdjustedReference(const QString &adjusted_reference) {
    m_adjusted_reference = adjusted_reference;
    m_adjusted_reference_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_adjusted_reference_Set() const{
    return m_adjusted_reference_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_adjusted_reference_Valid() const{
    return m_adjusted_reference_isValid;
}

OAIPaymentScheme OAIPaymentInitiationPaymentGetResponse::getAdjustedScheme() const {
    return m_adjusted_scheme;
}
void OAIPaymentInitiationPaymentGetResponse::setAdjustedScheme(const OAIPaymentScheme &adjusted_scheme) {
    m_adjusted_scheme = adjusted_scheme;
    m_adjusted_scheme_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_adjusted_scheme_Set() const{
    return m_adjusted_scheme_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_adjusted_scheme_Valid() const{
    return m_adjusted_scheme_isValid;
}

OAIPaymentAmount OAIPaymentInitiationPaymentGetResponse::getAmount() const {
    return m_amount;
}
void OAIPaymentInitiationPaymentGetResponse::setAmount(const OAIPaymentAmount &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_amount_Valid() const{
    return m_amount_isValid;
}

OAIPaymentAmountRefunded OAIPaymentInitiationPaymentGetResponse::getAmountRefunded() const {
    return m_amount_refunded;
}
void OAIPaymentInitiationPaymentGetResponse::setAmountRefunded(const OAIPaymentAmountRefunded &amount_refunded) {
    m_amount_refunded = amount_refunded;
    m_amount_refunded_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_amount_refunded_Set() const{
    return m_amount_refunded_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_amount_refunded_Valid() const{
    return m_amount_refunded_isValid;
}

OAISenderBACSNullable OAIPaymentInitiationPaymentGetResponse::getBacs() const {
    return m_bacs;
}
void OAIPaymentInitiationPaymentGetResponse::setBacs(const OAISenderBACSNullable &bacs) {
    m_bacs = bacs;
    m_bacs_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_bacs_Set() const{
    return m_bacs_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_bacs_Valid() const{
    return m_bacs_isValid;
}

QString OAIPaymentInitiationPaymentGetResponse::getConsentId() const {
    return m_consent_id;
}
void OAIPaymentInitiationPaymentGetResponse::setConsentId(const QString &consent_id) {
    m_consent_id = consent_id;
    m_consent_id_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_consent_id_Set() const{
    return m_consent_id_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_consent_id_Valid() const{
    return m_consent_id_isValid;
}

QString OAIPaymentInitiationPaymentGetResponse::getIban() const {
    return m_iban;
}
void OAIPaymentInitiationPaymentGetResponse::setIban(const QString &iban) {
    m_iban = iban;
    m_iban_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_iban_Set() const{
    return m_iban_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_iban_Valid() const{
    return m_iban_isValid;
}

QDateTime OAIPaymentInitiationPaymentGetResponse::getLastStatusUpdate() const {
    return m_last_status_update;
}
void OAIPaymentInitiationPaymentGetResponse::setLastStatusUpdate(const QDateTime &last_status_update) {
    m_last_status_update = last_status_update;
    m_last_status_update_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_last_status_update_Set() const{
    return m_last_status_update_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_last_status_update_Valid() const{
    return m_last_status_update_isValid;
}

QString OAIPaymentInitiationPaymentGetResponse::getPaymentId() const {
    return m_payment_id;
}
void OAIPaymentInitiationPaymentGetResponse::setPaymentId(const QString &payment_id) {
    m_payment_id = payment_id;
    m_payment_id_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_payment_id_Set() const{
    return m_payment_id_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_payment_id_Valid() const{
    return m_payment_id_isValid;
}

QString OAIPaymentInitiationPaymentGetResponse::getRecipientId() const {
    return m_recipient_id;
}
void OAIPaymentInitiationPaymentGetResponse::setRecipientId(const QString &recipient_id) {
    m_recipient_id = recipient_id;
    m_recipient_id_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_recipient_id_Set() const{
    return m_recipient_id_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_recipient_id_Valid() const{
    return m_recipient_id_isValid;
}

QString OAIPaymentInitiationPaymentGetResponse::getReference() const {
    return m_reference;
}
void OAIPaymentInitiationPaymentGetResponse::setReference(const QString &reference) {
    m_reference = reference;
    m_reference_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_reference_Set() const{
    return m_reference_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_reference_Valid() const{
    return m_reference_isValid;
}

OAIExternalPaymentRefundDetails OAIPaymentInitiationPaymentGetResponse::getRefundDetails() const {
    return m_refund_details;
}
void OAIPaymentInitiationPaymentGetResponse::setRefundDetails(const OAIExternalPaymentRefundDetails &refund_details) {
    m_refund_details = refund_details;
    m_refund_details_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_refund_details_Set() const{
    return m_refund_details_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_refund_details_Valid() const{
    return m_refund_details_isValid;
}

QList<QString> OAIPaymentInitiationPaymentGetResponse::getRefundIds() const {
    return m_refund_ids;
}
void OAIPaymentInitiationPaymentGetResponse::setRefundIds(const QList<QString> &refund_ids) {
    m_refund_ids = refund_ids;
    m_refund_ids_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_refund_ids_Set() const{
    return m_refund_ids_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_refund_ids_Valid() const{
    return m_refund_ids_isValid;
}

OAIExternalPaymentScheduleGet OAIPaymentInitiationPaymentGetResponse::getSchedule() const {
    return m_schedule;
}
void OAIPaymentInitiationPaymentGetResponse::setSchedule(const OAIExternalPaymentScheduleGet &schedule) {
    m_schedule = schedule;
    m_schedule_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_schedule_Set() const{
    return m_schedule_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_schedule_Valid() const{
    return m_schedule_isValid;
}

OAIPaymentScheme OAIPaymentInitiationPaymentGetResponse::getScheme() const {
    return m_scheme;
}
void OAIPaymentInitiationPaymentGetResponse::setScheme(const OAIPaymentScheme &scheme) {
    m_scheme = scheme;
    m_scheme_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_scheme_Set() const{
    return m_scheme_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_scheme_Valid() const{
    return m_scheme_isValid;
}

OAIPaymentInitiationPaymentStatus OAIPaymentInitiationPaymentGetResponse::getStatus() const {
    return m_status;
}
void OAIPaymentInitiationPaymentGetResponse::setStatus(const OAIPaymentInitiationPaymentStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIPaymentInitiationPaymentGetResponse::getTransactionId() const {
    return m_transaction_id;
}
void OAIPaymentInitiationPaymentGetResponse::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

QString OAIPaymentInitiationPaymentGetResponse::getWalletId() const {
    return m_wallet_id;
}
void OAIPaymentInitiationPaymentGetResponse::setWalletId(const QString &wallet_id) {
    m_wallet_id = wallet_id;
    m_wallet_id_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_wallet_id_Set() const{
    return m_wallet_id_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_wallet_id_Valid() const{
    return m_wallet_id_isValid;
}

QString OAIPaymentInitiationPaymentGetResponse::getRequestId() const {
    return m_request_id;
}
void OAIPaymentInitiationPaymentGetResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIPaymentInitiationPaymentGetResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIPaymentInitiationPaymentGetResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAIPaymentInitiationPaymentGetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adjusted_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_adjusted_scheme.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_refunded.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bacs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_consent_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iban_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_status_update_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refund_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_refund_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheme.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wallet_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentInitiationPaymentGetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_bacs_isValid && m_iban_isValid && m_last_status_update_isValid && m_payment_id_isValid && m_recipient_id_isValid && m_reference_isValid && m_status_isValid && m_request_id_isValid && true;
}

} // namespace OpenAPI
