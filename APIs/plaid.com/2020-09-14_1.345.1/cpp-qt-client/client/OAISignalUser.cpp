/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISignalUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISignalUser::OAISignalUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISignalUser::OAISignalUser() {
    this->initializeModel();
}

OAISignalUser::~OAISignalUser() {}

void OAISignalUser::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;
}

void OAISignalUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISignalUser::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("email_address")]);
    m_email_address_isSet = !json[QString("email_address")].isNull() && m_email_address_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phone_number")]);
    m_phone_number_isSet = !json[QString("phone_number")].isNull() && m_phone_number_isValid;
}

QString OAISignalUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISignalUser::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("email_address"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_name.isSet()) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phone_number"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    return obj;
}

OAISignalAddressData OAISignalUser::getAddress() const {
    return m_address;
}
void OAISignalUser::setAddress(const OAISignalAddressData &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAISignalUser::is_address_Set() const{
    return m_address_isSet;
}

bool OAISignalUser::is_address_Valid() const{
    return m_address_isValid;
}

QString OAISignalUser::getEmailAddress() const {
    return m_email_address;
}
void OAISignalUser::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAISignalUser::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAISignalUser::is_email_address_Valid() const{
    return m_email_address_isValid;
}

OAISignalPersonName OAISignalUser::getName() const {
    return m_name;
}
void OAISignalUser::setName(const OAISignalPersonName &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISignalUser::is_name_Set() const{
    return m_name_isSet;
}

bool OAISignalUser::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISignalUser::getPhoneNumber() const {
    return m_phone_number;
}
void OAISignalUser::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAISignalUser::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAISignalUser::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

bool OAISignalUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISignalUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
