/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISignalPaymentMethod.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISignalPaymentMethod::OAISignalPaymentMethod(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISignalPaymentMethod::OAISignalPaymentMethod() {
    this->initializeModel();
}

OAISignalPaymentMethod::~OAISignalPaymentMethod() {}

void OAISignalPaymentMethod::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISignalPaymentMethod::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISignalPaymentMethod::fromJson(QString jsonString) {
    
    if ( jsonString.compare("SAME_DAY_ACH", Qt::CaseInsensitive) == 0) {
        m_value = eOAISignalPaymentMethod::SAME_DAY_ACH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NEXT_DAY_ACH", Qt::CaseInsensitive) == 0) {
        m_value = eOAISignalPaymentMethod::NEXT_DAY_ACH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("STANDARD_ACH", Qt::CaseInsensitive) == 0) {
        m_value = eOAISignalPaymentMethod::STANDARD_ACH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("REAL_TIME_PAYMENTS", Qt::CaseInsensitive) == 0) {
        m_value = eOAISignalPaymentMethod::REAL_TIME_PAYMENTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DEBIT_CARD", Qt::CaseInsensitive) == 0) {
        m_value = eOAISignalPaymentMethod::DEBIT_CARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MULTIPLE_PAYMENT_METHODS", Qt::CaseInsensitive) == 0) {
        m_value = eOAISignalPaymentMethod::MULTIPLE_PAYMENT_METHODS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISignalPaymentMethod::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISignalPaymentMethod::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISignalPaymentMethod::SAME_DAY_ACH:
            val = "SAME_DAY_ACH";
            break;
        case eOAISignalPaymentMethod::NEXT_DAY_ACH:
            val = "NEXT_DAY_ACH";
            break;
        case eOAISignalPaymentMethod::STANDARD_ACH:
            val = "STANDARD_ACH";
            break;
        case eOAISignalPaymentMethod::REAL_TIME_PAYMENTS:
            val = "REAL_TIME_PAYMENTS";
            break;
        case eOAISignalPaymentMethod::DEBIT_CARD:
            val = "DEBIT_CARD";
            break;
        case eOAISignalPaymentMethod::MULTIPLE_PAYMENT_METHODS:
            val = "MULTIPLE_PAYMENT_METHODS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISignalPaymentMethod::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISignalPaymentMethod::eOAISignalPaymentMethod OAISignalPaymentMethod::getValue() const {
    return m_value;
}

void OAISignalPaymentMethod::setValue(const OAISignalPaymentMethod::eOAISignalPaymentMethod& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISignalPaymentMethod::isSet() const {
    
    return m_value_isSet;
}

bool OAISignalPaymentMethod::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
