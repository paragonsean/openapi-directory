/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransferDiligenceStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransferDiligenceStatus::OAITransferDiligenceStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransferDiligenceStatus::OAITransferDiligenceStatus() {
    this->initializeModel();
}

OAITransferDiligenceStatus::~OAITransferDiligenceStatus() {}

void OAITransferDiligenceStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITransferDiligenceStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITransferDiligenceStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("under_review", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferDiligenceStatus::UNDER_REVIEW;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("approved", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferDiligenceStatus::APPROVED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("denied", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransferDiligenceStatus::DENIED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITransferDiligenceStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITransferDiligenceStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITransferDiligenceStatus::UNDER_REVIEW:
            val = "under_review";
            break;
        case eOAITransferDiligenceStatus::APPROVED:
            val = "approved";
            break;
        case eOAITransferDiligenceStatus::DENIED:
            val = "denied";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITransferDiligenceStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITransferDiligenceStatus::eOAITransferDiligenceStatus OAITransferDiligenceStatus::getValue() const {
    return m_value;
}

void OAITransferDiligenceStatus::setValue(const OAITransferDiligenceStatus::eOAITransferDiligenceStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITransferDiligenceStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAITransferDiligenceStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
