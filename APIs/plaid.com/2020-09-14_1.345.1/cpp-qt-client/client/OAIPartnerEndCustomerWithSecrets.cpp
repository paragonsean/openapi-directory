/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPartnerEndCustomerWithSecrets.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPartnerEndCustomerWithSecrets::OAIPartnerEndCustomerWithSecrets(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPartnerEndCustomerWithSecrets::OAIPartnerEndCustomerWithSecrets() {
    this->initializeModel();
}

OAIPartnerEndCustomerWithSecrets::~OAIPartnerEndCustomerWithSecrets() {}

void OAIPartnerEndCustomerWithSecrets::initializeModel() {

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_secrets_isSet = false;
    m_secrets_isValid = false;
}

void OAIPartnerEndCustomerWithSecrets::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPartnerEndCustomerWithSecrets::fromJsonObject(QJsonObject json) {

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("client_id")]);
    m_client_id_isSet = !json[QString("client_id")].isNull() && m_client_id_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("company_name")]);
    m_company_name_isSet = !json[QString("company_name")].isNull() && m_company_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_secrets_isValid = ::OpenAPI::fromJsonValue(m_secrets, json[QString("secrets")]);
    m_secrets_isSet = !json[QString("secrets")].isNull() && m_secrets_isValid;
}

QString OAIPartnerEndCustomerWithSecrets::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPartnerEndCustomerWithSecrets::asJsonObject() const {
    QJsonObject obj;
    if (m_client_id_isSet) {
        obj.insert(QString("client_id"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("company_name"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_secrets.isSet()) {
        obj.insert(QString("secrets"), ::OpenAPI::toJsonValue(m_secrets));
    }
    return obj;
}

QString OAIPartnerEndCustomerWithSecrets::getClientId() const {
    return m_client_id;
}
void OAIPartnerEndCustomerWithSecrets::setClientId(const QString &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAIPartnerEndCustomerWithSecrets::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAIPartnerEndCustomerWithSecrets::is_client_id_Valid() const{
    return m_client_id_isValid;
}

QString OAIPartnerEndCustomerWithSecrets::getCompanyName() const {
    return m_company_name;
}
void OAIPartnerEndCustomerWithSecrets::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIPartnerEndCustomerWithSecrets::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIPartnerEndCustomerWithSecrets::is_company_name_Valid() const{
    return m_company_name_isValid;
}

OAIPartnerEndCustomerStatus OAIPartnerEndCustomerWithSecrets::getStatus() const {
    return m_status;
}
void OAIPartnerEndCustomerWithSecrets::setStatus(const OAIPartnerEndCustomerStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIPartnerEndCustomerWithSecrets::is_status_Set() const{
    return m_status_isSet;
}

bool OAIPartnerEndCustomerWithSecrets::is_status_Valid() const{
    return m_status_isValid;
}

OAIPartnerEndCustomerSecrets OAIPartnerEndCustomerWithSecrets::getSecrets() const {
    return m_secrets;
}
void OAIPartnerEndCustomerWithSecrets::setSecrets(const OAIPartnerEndCustomerSecrets &secrets) {
    m_secrets = secrets;
    m_secrets_isSet = true;
}

bool OAIPartnerEndCustomerWithSecrets::is_secrets_Set() const{
    return m_secrets_isSet;
}

bool OAIPartnerEndCustomerWithSecrets::is_secrets_Valid() const{
    return m_secrets_isValid;
}

bool OAIPartnerEndCustomerWithSecrets::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_secrets.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPartnerEndCustomerWithSecrets::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
