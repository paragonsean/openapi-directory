/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFDXParty.h
 *
 * FDX Participant - an entity or person that is a part of a FDX API transaction
 */

#ifndef OAIFDXParty_H
#define OAIFDXParty_H

#include <QJsonObject>

#include "OAIFDXPartyRegistry.h"
#include "OAIFDXPartyType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFDXParty : public OAIObject {
public:
    OAIFDXParty();
    OAIFDXParty(QString json);
    ~OAIFDXParty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHomeUri() const;
    void setHomeUri(const QString &home_uri);
    bool is_home_uri_Set() const;
    bool is_home_uri_Valid() const;

    QString getLogoUri() const;
    void setLogoUri(const QString &logo_uri);
    bool is_logo_uri_Set() const;
    bool is_logo_uri_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRegisteredEntityId() const;
    void setRegisteredEntityId(const QString &registered_entity_id);
    bool is_registered_entity_id_Set() const;
    bool is_registered_entity_id_Valid() const;

    QString getRegisteredEntityName() const;
    void setRegisteredEntityName(const QString &registered_entity_name);
    bool is_registered_entity_name_Set() const;
    bool is_registered_entity_name_Valid() const;

    OAIFDXPartyRegistry getRegistry() const;
    void setRegistry(const OAIFDXPartyRegistry &registry);
    bool is_registry_Set() const;
    bool is_registry_Valid() const;

    OAIFDXPartyType getType() const;
    void setType(const OAIFDXPartyType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_home_uri;
    bool m_home_uri_isSet;
    bool m_home_uri_isValid;

    QString m_logo_uri;
    bool m_logo_uri_isSet;
    bool m_logo_uri_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_registered_entity_id;
    bool m_registered_entity_id_isSet;
    bool m_registered_entity_id_isValid;

    QString m_registered_entity_name;
    bool m_registered_entity_name_isSet;
    bool m_registered_entity_name_isValid;

    OAIFDXPartyRegistry m_registry;
    bool m_registry_isSet;
    bool m_registry_isValid;

    OAIFDXPartyType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFDXParty)

#endif // OAIFDXParty_H
