/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProducts.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProducts::OAIProducts(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProducts::OAIProducts() {
    this->initializeModel();
}

OAIProducts::~OAIProducts() {}

void OAIProducts::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProducts::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProducts::fromJson(QString jsonString) {
    
    if ( jsonString.compare("assets", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::ASSETS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("auth", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::AUTH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("balance", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::BALANCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("identity", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::IDENTITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("investments", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::INVESTMENTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("liabilities", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::LIABILITIES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("payment_initiation", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::PAYMENT_INITIATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("identity_verification", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::IDENTITY_VERIFICATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("transactions", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::TRANSACTIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("credit_details", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::CREDIT_DETAILS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("income", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::INCOME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("income_verification", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::INCOME_VERIFICATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("deposit_switch", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::DEPOSIT_SWITCH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("standing_orders", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::STANDING_ORDERS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("transfer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::TRANSFER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("employment", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::EMPLOYMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("recurring_transactions", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::RECURRING_TRANSACTIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("signal", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProducts::SIGNAL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProducts::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProducts::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProducts::ASSETS:
            val = "assets";
            break;
        case eOAIProducts::AUTH:
            val = "auth";
            break;
        case eOAIProducts::BALANCE:
            val = "balance";
            break;
        case eOAIProducts::IDENTITY:
            val = "identity";
            break;
        case eOAIProducts::INVESTMENTS:
            val = "investments";
            break;
        case eOAIProducts::LIABILITIES:
            val = "liabilities";
            break;
        case eOAIProducts::PAYMENT_INITIATION:
            val = "payment_initiation";
            break;
        case eOAIProducts::IDENTITY_VERIFICATION:
            val = "identity_verification";
            break;
        case eOAIProducts::TRANSACTIONS:
            val = "transactions";
            break;
        case eOAIProducts::CREDIT_DETAILS:
            val = "credit_details";
            break;
        case eOAIProducts::INCOME:
            val = "income";
            break;
        case eOAIProducts::INCOME_VERIFICATION:
            val = "income_verification";
            break;
        case eOAIProducts::DEPOSIT_SWITCH:
            val = "deposit_switch";
            break;
        case eOAIProducts::STANDING_ORDERS:
            val = "standing_orders";
            break;
        case eOAIProducts::TRANSFER:
            val = "transfer";
            break;
        case eOAIProducts::EMPLOYMENT:
            val = "employment";
            break;
        case eOAIProducts::RECURRING_TRANSACTIONS:
            val = "recurring_transactions";
            break;
        case eOAIProducts::SIGNAL:
            val = "signal";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProducts::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProducts::eOAIProducts OAIProducts::getValue() const {
    return m_value;
}

void OAIProducts::setValue(const OAIProducts::eOAIProducts& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProducts::isSet() const {
    
    return m_value_isSet;
}

bool OAIProducts::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
