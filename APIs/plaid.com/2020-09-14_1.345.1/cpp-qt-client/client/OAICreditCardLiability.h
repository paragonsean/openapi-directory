/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreditCardLiability.h
 *
 * An object representing a credit card account.
 */

#ifndef OAICreditCardLiability_H
#define OAICreditCardLiability_H

#include <QJsonObject>

#include "OAIAPR.h"
#include <QDate>
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreditCardLiability : public OAIObject {
public:
    OAICreditCardLiability();
    OAICreditCardLiability(QString json);
    ~OAICreditCardLiability() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QList<OAIAPR> getAprs() const;
    void setAprs(const QList<OAIAPR> &aprs);
    bool is_aprs_Set() const;
    bool is_aprs_Valid() const;

    bool isIsOverdue() const;
    void setIsOverdue(const bool &is_overdue);
    bool is_is_overdue_Set() const;
    bool is_is_overdue_Valid() const;

    double getLastPaymentAmount() const;
    void setLastPaymentAmount(const double &last_payment_amount);
    bool is_last_payment_amount_Set() const;
    bool is_last_payment_amount_Valid() const;

    QDate getLastPaymentDate() const;
    void setLastPaymentDate(const QDate &last_payment_date);
    bool is_last_payment_date_Set() const;
    bool is_last_payment_date_Valid() const;

    double getLastStatementBalance() const;
    void setLastStatementBalance(const double &last_statement_balance);
    bool is_last_statement_balance_Set() const;
    bool is_last_statement_balance_Valid() const;

    QDate getLastStatementIssueDate() const;
    void setLastStatementIssueDate(const QDate &last_statement_issue_date);
    bool is_last_statement_issue_date_Set() const;
    bool is_last_statement_issue_date_Valid() const;

    double getMinimumPaymentAmount() const;
    void setMinimumPaymentAmount(const double &minimum_payment_amount);
    bool is_minimum_payment_amount_Set() const;
    bool is_minimum_payment_amount_Valid() const;

    QDate getNextPaymentDueDate() const;
    void setNextPaymentDueDate(const QDate &next_payment_due_date);
    bool is_next_payment_due_date_Set() const;
    bool is_next_payment_due_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QList<OAIAPR> m_aprs;
    bool m_aprs_isSet;
    bool m_aprs_isValid;

    bool m_is_overdue;
    bool m_is_overdue_isSet;
    bool m_is_overdue_isValid;

    double m_last_payment_amount;
    bool m_last_payment_amount_isSet;
    bool m_last_payment_amount_isValid;

    QDate m_last_payment_date;
    bool m_last_payment_date_isSet;
    bool m_last_payment_date_isValid;

    double m_last_statement_balance;
    bool m_last_statement_balance_isSet;
    bool m_last_statement_balance_isValid;

    QDate m_last_statement_issue_date;
    bool m_last_statement_issue_date_isSet;
    bool m_last_statement_issue_date_isValid;

    double m_minimum_payment_amount;
    bool m_minimum_payment_amount_isSet;
    bool m_minimum_payment_amount_isValid;

    QDate m_next_payment_due_date;
    bool m_next_payment_due_date_isSet;
    bool m_next_payment_due_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreditCardLiability)

#endif // OAICreditCardLiability_H
