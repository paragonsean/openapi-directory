/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPendingExpirationWebhook.h
 *
 * Fired when an Item’s access consent is expiring in 7 days. Some Items have explicit expiration times and we try to relay this when possible to reduce service disruption. This can be resolved by having the user go through Link’s update mode.
 */

#ifndef OAIPendingExpirationWebhook_H
#define OAIPendingExpirationWebhook_H

#include <QJsonObject>

#include "OAIWebhookEnvironmentValues.h"
#include <QDateTime>
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPendingExpirationWebhook : public OAIObject {
public:
    OAIPendingExpirationWebhook();
    OAIPendingExpirationWebhook(QString json);
    ~OAIPendingExpirationWebhook() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getConsentExpirationTime() const;
    void setConsentExpirationTime(const QDateTime &consent_expiration_time);
    bool is_consent_expiration_time_Set() const;
    bool is_consent_expiration_time_Valid() const;

    OAIWebhookEnvironmentValues getEnvironment() const;
    void setEnvironment(const OAIWebhookEnvironmentValues &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QString getWebhookCode() const;
    void setWebhookCode(const QString &webhook_code);
    bool is_webhook_code_Set() const;
    bool is_webhook_code_Valid() const;

    QString getWebhookType() const;
    void setWebhookType(const QString &webhook_type);
    bool is_webhook_type_Set() const;
    bool is_webhook_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_consent_expiration_time;
    bool m_consent_expiration_time_isSet;
    bool m_consent_expiration_time_isValid;

    OAIWebhookEnvironmentValues m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QString m_webhook_code;
    bool m_webhook_code_isSet;
    bool m_webhook_code_isValid;

    QString m_webhook_type;
    bool m_webhook_type_isSet;
    bool m_webhook_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPendingExpirationWebhook)

#endif // OAIPendingExpirationWebhook_H
