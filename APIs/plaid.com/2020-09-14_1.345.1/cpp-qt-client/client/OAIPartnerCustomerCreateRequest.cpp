/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPartnerCustomerCreateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPartnerCustomerCreateRequest::OAIPartnerCustomerCreateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPartnerCustomerCreateRequest::OAIPartnerCustomerCreateRequest() {
    this->initializeModel();
}

OAIPartnerCustomerCreateRequest::~OAIPartnerCustomerCreateRequest() {}

void OAIPartnerCustomerCreateRequest::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_application_name_isSet = false;
    m_application_name_isValid = false;

    m_assets_under_management_isSet = false;
    m_assets_under_management_isValid = false;

    m_billing_contact_isSet = false;
    m_billing_contact_isValid = false;

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_create_link_customization_isSet = false;
    m_create_link_customization_isValid = false;

    m_customer_support_info_isSet = false;
    m_customer_support_info_isValid = false;

    m_is_bank_addendum_completed_isSet = false;
    m_is_bank_addendum_completed_isValid = false;

    m_is_diligence_attested_isSet = false;
    m_is_diligence_attested_isValid = false;

    m_legal_entity_name_isSet = false;
    m_legal_entity_name_isValid = false;

    m_logo_isSet = false;
    m_logo_isValid = false;

    m_products_isSet = false;
    m_products_isValid = false;

    m_redirect_uris_isSet = false;
    m_redirect_uris_isValid = false;

    m_secret_isSet = false;
    m_secret_isValid = false;

    m_technical_contact_isSet = false;
    m_technical_contact_isValid = false;

    m_website_isSet = false;
    m_website_isValid = false;
}

void OAIPartnerCustomerCreateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPartnerCustomerCreateRequest::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_application_name_isValid = ::OpenAPI::fromJsonValue(m_application_name, json[QString("application_name")]);
    m_application_name_isSet = !json[QString("application_name")].isNull() && m_application_name_isValid;

    m_assets_under_management_isValid = ::OpenAPI::fromJsonValue(m_assets_under_management, json[QString("assets_under_management")]);
    m_assets_under_management_isSet = !json[QString("assets_under_management")].isNull() && m_assets_under_management_isValid;

    m_billing_contact_isValid = ::OpenAPI::fromJsonValue(m_billing_contact, json[QString("billing_contact")]);
    m_billing_contact_isSet = !json[QString("billing_contact")].isNull() && m_billing_contact_isValid;

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("client_id")]);
    m_client_id_isSet = !json[QString("client_id")].isNull() && m_client_id_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("company_name")]);
    m_company_name_isSet = !json[QString("company_name")].isNull() && m_company_name_isValid;

    m_create_link_customization_isValid = ::OpenAPI::fromJsonValue(m_create_link_customization, json[QString("create_link_customization")]);
    m_create_link_customization_isSet = !json[QString("create_link_customization")].isNull() && m_create_link_customization_isValid;

    m_customer_support_info_isValid = ::OpenAPI::fromJsonValue(m_customer_support_info, json[QString("customer_support_info")]);
    m_customer_support_info_isSet = !json[QString("customer_support_info")].isNull() && m_customer_support_info_isValid;

    m_is_bank_addendum_completed_isValid = ::OpenAPI::fromJsonValue(m_is_bank_addendum_completed, json[QString("is_bank_addendum_completed")]);
    m_is_bank_addendum_completed_isSet = !json[QString("is_bank_addendum_completed")].isNull() && m_is_bank_addendum_completed_isValid;

    m_is_diligence_attested_isValid = ::OpenAPI::fromJsonValue(m_is_diligence_attested, json[QString("is_diligence_attested")]);
    m_is_diligence_attested_isSet = !json[QString("is_diligence_attested")].isNull() && m_is_diligence_attested_isValid;

    m_legal_entity_name_isValid = ::OpenAPI::fromJsonValue(m_legal_entity_name, json[QString("legal_entity_name")]);
    m_legal_entity_name_isSet = !json[QString("legal_entity_name")].isNull() && m_legal_entity_name_isValid;

    m_logo_isValid = ::OpenAPI::fromJsonValue(m_logo, json[QString("logo")]);
    m_logo_isSet = !json[QString("logo")].isNull() && m_logo_isValid;

    m_products_isValid = ::OpenAPI::fromJsonValue(m_products, json[QString("products")]);
    m_products_isSet = !json[QString("products")].isNull() && m_products_isValid;

    m_redirect_uris_isValid = ::OpenAPI::fromJsonValue(m_redirect_uris, json[QString("redirect_uris")]);
    m_redirect_uris_isSet = !json[QString("redirect_uris")].isNull() && m_redirect_uris_isValid;

    m_secret_isValid = ::OpenAPI::fromJsonValue(m_secret, json[QString("secret")]);
    m_secret_isSet = !json[QString("secret")].isNull() && m_secret_isValid;

    m_technical_contact_isValid = ::OpenAPI::fromJsonValue(m_technical_contact, json[QString("technical_contact")]);
    m_technical_contact_isSet = !json[QString("technical_contact")].isNull() && m_technical_contact_isValid;

    m_website_isValid = ::OpenAPI::fromJsonValue(m_website, json[QString("website")]);
    m_website_isSet = !json[QString("website")].isNull() && m_website_isValid;
}

QString OAIPartnerCustomerCreateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPartnerCustomerCreateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_application_name_isSet) {
        obj.insert(QString("application_name"), ::OpenAPI::toJsonValue(m_application_name));
    }
    if (m_assets_under_management.isSet()) {
        obj.insert(QString("assets_under_management"), ::OpenAPI::toJsonValue(m_assets_under_management));
    }
    if (m_billing_contact.isSet()) {
        obj.insert(QString("billing_contact"), ::OpenAPI::toJsonValue(m_billing_contact));
    }
    if (m_client_id_isSet) {
        obj.insert(QString("client_id"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("company_name"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_create_link_customization_isSet) {
        obj.insert(QString("create_link_customization"), ::OpenAPI::toJsonValue(m_create_link_customization));
    }
    if (m_customer_support_info.isSet()) {
        obj.insert(QString("customer_support_info"), ::OpenAPI::toJsonValue(m_customer_support_info));
    }
    if (m_is_bank_addendum_completed_isSet) {
        obj.insert(QString("is_bank_addendum_completed"), ::OpenAPI::toJsonValue(m_is_bank_addendum_completed));
    }
    if (m_is_diligence_attested_isSet) {
        obj.insert(QString("is_diligence_attested"), ::OpenAPI::toJsonValue(m_is_diligence_attested));
    }
    if (m_legal_entity_name_isSet) {
        obj.insert(QString("legal_entity_name"), ::OpenAPI::toJsonValue(m_legal_entity_name));
    }
    if (m_logo_isSet) {
        obj.insert(QString("logo"), ::OpenAPI::toJsonValue(m_logo));
    }
    if (m_products.size() > 0) {
        obj.insert(QString("products"), ::OpenAPI::toJsonValue(m_products));
    }
    if (m_redirect_uris.size() > 0) {
        obj.insert(QString("redirect_uris"), ::OpenAPI::toJsonValue(m_redirect_uris));
    }
    if (m_secret_isSet) {
        obj.insert(QString("secret"), ::OpenAPI::toJsonValue(m_secret));
    }
    if (m_technical_contact.isSet()) {
        obj.insert(QString("technical_contact"), ::OpenAPI::toJsonValue(m_technical_contact));
    }
    if (m_website_isSet) {
        obj.insert(QString("website"), ::OpenAPI::toJsonValue(m_website));
    }
    return obj;
}

OAIPartnerEndCustomerAddress OAIPartnerCustomerCreateRequest::getAddress() const {
    return m_address;
}
void OAIPartnerCustomerCreateRequest::setAddress(const OAIPartnerEndCustomerAddress &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_address_Set() const{
    return m_address_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIPartnerCustomerCreateRequest::getApplicationName() const {
    return m_application_name;
}
void OAIPartnerCustomerCreateRequest::setApplicationName(const QString &application_name) {
    m_application_name = application_name;
    m_application_name_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_application_name_Set() const{
    return m_application_name_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_application_name_Valid() const{
    return m_application_name_isValid;
}

OAIPartnerEndCustomerAssetsUnderManagement OAIPartnerCustomerCreateRequest::getAssetsUnderManagement() const {
    return m_assets_under_management;
}
void OAIPartnerCustomerCreateRequest::setAssetsUnderManagement(const OAIPartnerEndCustomerAssetsUnderManagement &assets_under_management) {
    m_assets_under_management = assets_under_management;
    m_assets_under_management_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_assets_under_management_Set() const{
    return m_assets_under_management_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_assets_under_management_Valid() const{
    return m_assets_under_management_isValid;
}

OAIPartnerEndCustomerBillingContact OAIPartnerCustomerCreateRequest::getBillingContact() const {
    return m_billing_contact;
}
void OAIPartnerCustomerCreateRequest::setBillingContact(const OAIPartnerEndCustomerBillingContact &billing_contact) {
    m_billing_contact = billing_contact;
    m_billing_contact_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_billing_contact_Set() const{
    return m_billing_contact_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_billing_contact_Valid() const{
    return m_billing_contact_isValid;
}

QString OAIPartnerCustomerCreateRequest::getClientId() const {
    return m_client_id;
}
void OAIPartnerCustomerCreateRequest::setClientId(const QString &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_client_id_Valid() const{
    return m_client_id_isValid;
}

QString OAIPartnerCustomerCreateRequest::getCompanyName() const {
    return m_company_name;
}
void OAIPartnerCustomerCreateRequest::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_company_name_Valid() const{
    return m_company_name_isValid;
}

bool OAIPartnerCustomerCreateRequest::isCreateLinkCustomization() const {
    return m_create_link_customization;
}
void OAIPartnerCustomerCreateRequest::setCreateLinkCustomization(const bool &create_link_customization) {
    m_create_link_customization = create_link_customization;
    m_create_link_customization_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_create_link_customization_Set() const{
    return m_create_link_customization_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_create_link_customization_Valid() const{
    return m_create_link_customization_isValid;
}

OAIPartnerEndCustomerCustomerSupportInfo OAIPartnerCustomerCreateRequest::getCustomerSupportInfo() const {
    return m_customer_support_info;
}
void OAIPartnerCustomerCreateRequest::setCustomerSupportInfo(const OAIPartnerEndCustomerCustomerSupportInfo &customer_support_info) {
    m_customer_support_info = customer_support_info;
    m_customer_support_info_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_customer_support_info_Set() const{
    return m_customer_support_info_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_customer_support_info_Valid() const{
    return m_customer_support_info_isValid;
}

bool OAIPartnerCustomerCreateRequest::isIsBankAddendumCompleted() const {
    return m_is_bank_addendum_completed;
}
void OAIPartnerCustomerCreateRequest::setIsBankAddendumCompleted(const bool &is_bank_addendum_completed) {
    m_is_bank_addendum_completed = is_bank_addendum_completed;
    m_is_bank_addendum_completed_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_is_bank_addendum_completed_Set() const{
    return m_is_bank_addendum_completed_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_is_bank_addendum_completed_Valid() const{
    return m_is_bank_addendum_completed_isValid;
}

bool OAIPartnerCustomerCreateRequest::isIsDiligenceAttested() const {
    return m_is_diligence_attested;
}
void OAIPartnerCustomerCreateRequest::setIsDiligenceAttested(const bool &is_diligence_attested) {
    m_is_diligence_attested = is_diligence_attested;
    m_is_diligence_attested_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_is_diligence_attested_Set() const{
    return m_is_diligence_attested_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_is_diligence_attested_Valid() const{
    return m_is_diligence_attested_isValid;
}

QString OAIPartnerCustomerCreateRequest::getLegalEntityName() const {
    return m_legal_entity_name;
}
void OAIPartnerCustomerCreateRequest::setLegalEntityName(const QString &legal_entity_name) {
    m_legal_entity_name = legal_entity_name;
    m_legal_entity_name_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_legal_entity_name_Set() const{
    return m_legal_entity_name_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_legal_entity_name_Valid() const{
    return m_legal_entity_name_isValid;
}

QString OAIPartnerCustomerCreateRequest::getLogo() const {
    return m_logo;
}
void OAIPartnerCustomerCreateRequest::setLogo(const QString &logo) {
    m_logo = logo;
    m_logo_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_logo_Set() const{
    return m_logo_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_logo_Valid() const{
    return m_logo_isValid;
}

QList<OAIProducts> OAIPartnerCustomerCreateRequest::getProducts() const {
    return m_products;
}
void OAIPartnerCustomerCreateRequest::setProducts(const QList<OAIProducts> &products) {
    m_products = products;
    m_products_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_products_Set() const{
    return m_products_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_products_Valid() const{
    return m_products_isValid;
}

QList<QString> OAIPartnerCustomerCreateRequest::getRedirectUris() const {
    return m_redirect_uris;
}
void OAIPartnerCustomerCreateRequest::setRedirectUris(const QList<QString> &redirect_uris) {
    m_redirect_uris = redirect_uris;
    m_redirect_uris_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_redirect_uris_Set() const{
    return m_redirect_uris_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_redirect_uris_Valid() const{
    return m_redirect_uris_isValid;
}

QString OAIPartnerCustomerCreateRequest::getSecret() const {
    return m_secret;
}
void OAIPartnerCustomerCreateRequest::setSecret(const QString &secret) {
    m_secret = secret;
    m_secret_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_secret_Set() const{
    return m_secret_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_secret_Valid() const{
    return m_secret_isValid;
}

OAIPartnerEndCustomerTechnicalContact OAIPartnerCustomerCreateRequest::getTechnicalContact() const {
    return m_technical_contact;
}
void OAIPartnerCustomerCreateRequest::setTechnicalContact(const OAIPartnerEndCustomerTechnicalContact &technical_contact) {
    m_technical_contact = technical_contact;
    m_technical_contact_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_technical_contact_Set() const{
    return m_technical_contact_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_technical_contact_Valid() const{
    return m_technical_contact_isValid;
}

QString OAIPartnerCustomerCreateRequest::getWebsite() const {
    return m_website;
}
void OAIPartnerCustomerCreateRequest::setWebsite(const QString &website) {
    m_website = website;
    m_website_isSet = true;
}

bool OAIPartnerCustomerCreateRequest::is_website_Set() const{
    return m_website_isSet;
}

bool OAIPartnerCustomerCreateRequest::is_website_Valid() const{
    return m_website_isValid;
}

bool OAIPartnerCustomerCreateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_application_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_assets_under_management.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_link_customization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_support_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_bank_addendum_completed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_diligence_attested_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_legal_entity_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_redirect_uris.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_technical_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPartnerCustomerCreateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_isValid && m_application_name_isValid && m_company_name_isValid && m_is_bank_addendum_completed_isValid && m_is_diligence_attested_isValid && m_legal_entity_name_isValid && m_products_isValid && m_website_isValid && true;
}

} // namespace OpenAPI
