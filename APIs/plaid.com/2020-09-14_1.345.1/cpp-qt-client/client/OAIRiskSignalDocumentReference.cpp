/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRiskSignalDocumentReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRiskSignalDocumentReference::OAIRiskSignalDocumentReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRiskSignalDocumentReference::OAIRiskSignalDocumentReference() {
    this->initializeModel();
}

OAIRiskSignalDocumentReference::~OAIRiskSignalDocumentReference() {}

void OAIRiskSignalDocumentReference::initializeModel() {

    m_document_id_isSet = false;
    m_document_id_isValid = false;

    m_document_name_isSet = false;
    m_document_name_isValid = false;
}

void OAIRiskSignalDocumentReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRiskSignalDocumentReference::fromJsonObject(QJsonObject json) {

    m_document_id_isValid = ::OpenAPI::fromJsonValue(m_document_id, json[QString("document_id")]);
    m_document_id_isSet = !json[QString("document_id")].isNull() && m_document_id_isValid;

    m_document_name_isValid = ::OpenAPI::fromJsonValue(m_document_name, json[QString("document_name")]);
    m_document_name_isSet = !json[QString("document_name")].isNull() && m_document_name_isValid;
}

QString OAIRiskSignalDocumentReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRiskSignalDocumentReference::asJsonObject() const {
    QJsonObject obj;
    if (m_document_id_isSet) {
        obj.insert(QString("document_id"), ::OpenAPI::toJsonValue(m_document_id));
    }
    if (m_document_name_isSet) {
        obj.insert(QString("document_name"), ::OpenAPI::toJsonValue(m_document_name));
    }
    return obj;
}

QString OAIRiskSignalDocumentReference::getDocumentId() const {
    return m_document_id;
}
void OAIRiskSignalDocumentReference::setDocumentId(const QString &document_id) {
    m_document_id = document_id;
    m_document_id_isSet = true;
}

bool OAIRiskSignalDocumentReference::is_document_id_Set() const{
    return m_document_id_isSet;
}

bool OAIRiskSignalDocumentReference::is_document_id_Valid() const{
    return m_document_id_isValid;
}

QString OAIRiskSignalDocumentReference::getDocumentName() const {
    return m_document_name;
}
void OAIRiskSignalDocumentReference::setDocumentName(const QString &document_name) {
    m_document_name = document_name;
    m_document_name_isSet = true;
}

bool OAIRiskSignalDocumentReference::is_document_name_Set() const{
    return m_document_name_isSet;
}

bool OAIRiskSignalDocumentReference::is_document_name_Valid() const{
    return m_document_name_isValid;
}

bool OAIRiskSignalDocumentReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRiskSignalDocumentReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
