/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditBankIncomeHistoricalSummary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditBankIncomeHistoricalSummary::OAICreditBankIncomeHistoricalSummary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditBankIncomeHistoricalSummary::OAICreditBankIncomeHistoricalSummary() {
    this->initializeModel();
}

OAICreditBankIncomeHistoricalSummary::~OAICreditBankIncomeHistoricalSummary() {}

void OAICreditBankIncomeHistoricalSummary::initializeModel() {

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_iso_currency_code_isSet = false;
    m_iso_currency_code_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_total_amount_isSet = false;
    m_total_amount_isValid = false;

    m_total_amounts_isSet = false;
    m_total_amounts_isValid = false;

    m_transactions_isSet = false;
    m_transactions_isValid = false;

    m_unofficial_currency_code_isSet = false;
    m_unofficial_currency_code_isValid = false;
}

void OAICreditBankIncomeHistoricalSummary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditBankIncomeHistoricalSummary::fromJsonObject(QJsonObject json) {

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("end_date")]);
    m_end_date_isSet = !json[QString("end_date")].isNull() && m_end_date_isValid;

    m_iso_currency_code_isValid = ::OpenAPI::fromJsonValue(m_iso_currency_code, json[QString("iso_currency_code")]);
    m_iso_currency_code_isSet = !json[QString("iso_currency_code")].isNull() && m_iso_currency_code_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("start_date")]);
    m_start_date_isSet = !json[QString("start_date")].isNull() && m_start_date_isValid;

    m_total_amount_isValid = ::OpenAPI::fromJsonValue(m_total_amount, json[QString("total_amount")]);
    m_total_amount_isSet = !json[QString("total_amount")].isNull() && m_total_amount_isValid;

    m_total_amounts_isValid = ::OpenAPI::fromJsonValue(m_total_amounts, json[QString("total_amounts")]);
    m_total_amounts_isSet = !json[QString("total_amounts")].isNull() && m_total_amounts_isValid;

    m_transactions_isValid = ::OpenAPI::fromJsonValue(m_transactions, json[QString("transactions")]);
    m_transactions_isSet = !json[QString("transactions")].isNull() && m_transactions_isValid;

    m_unofficial_currency_code_isValid = ::OpenAPI::fromJsonValue(m_unofficial_currency_code, json[QString("unofficial_currency_code")]);
    m_unofficial_currency_code_isSet = !json[QString("unofficial_currency_code")].isNull() && m_unofficial_currency_code_isValid;
}

QString OAICreditBankIncomeHistoricalSummary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditBankIncomeHistoricalSummary::asJsonObject() const {
    QJsonObject obj;
    if (m_end_date_isSet) {
        obj.insert(QString("end_date"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_iso_currency_code_isSet) {
        obj.insert(QString("iso_currency_code"), ::OpenAPI::toJsonValue(m_iso_currency_code));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("start_date"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_total_amount_isSet) {
        obj.insert(QString("total_amount"), ::OpenAPI::toJsonValue(m_total_amount));
    }
    if (m_total_amounts.size() > 0) {
        obj.insert(QString("total_amounts"), ::OpenAPI::toJsonValue(m_total_amounts));
    }
    if (m_transactions.size() > 0) {
        obj.insert(QString("transactions"), ::OpenAPI::toJsonValue(m_transactions));
    }
    if (m_unofficial_currency_code_isSet) {
        obj.insert(QString("unofficial_currency_code"), ::OpenAPI::toJsonValue(m_unofficial_currency_code));
    }
    return obj;
}

QDate OAICreditBankIncomeHistoricalSummary::getEndDate() const {
    return m_end_date;
}
void OAICreditBankIncomeHistoricalSummary::setEndDate(const QDate &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAICreditBankIncomeHistoricalSummary::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAICreditBankIncomeHistoricalSummary::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QString OAICreditBankIncomeHistoricalSummary::getIsoCurrencyCode() const {
    return m_iso_currency_code;
}
void OAICreditBankIncomeHistoricalSummary::setIsoCurrencyCode(const QString &iso_currency_code) {
    m_iso_currency_code = iso_currency_code;
    m_iso_currency_code_isSet = true;
}

bool OAICreditBankIncomeHistoricalSummary::is_iso_currency_code_Set() const{
    return m_iso_currency_code_isSet;
}

bool OAICreditBankIncomeHistoricalSummary::is_iso_currency_code_Valid() const{
    return m_iso_currency_code_isValid;
}

QDate OAICreditBankIncomeHistoricalSummary::getStartDate() const {
    return m_start_date;
}
void OAICreditBankIncomeHistoricalSummary::setStartDate(const QDate &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAICreditBankIncomeHistoricalSummary::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAICreditBankIncomeHistoricalSummary::is_start_date_Valid() const{
    return m_start_date_isValid;
}

double OAICreditBankIncomeHistoricalSummary::getTotalAmount() const {
    return m_total_amount;
}
void OAICreditBankIncomeHistoricalSummary::setTotalAmount(const double &total_amount) {
    m_total_amount = total_amount;
    m_total_amount_isSet = true;
}

bool OAICreditBankIncomeHistoricalSummary::is_total_amount_Set() const{
    return m_total_amount_isSet;
}

bool OAICreditBankIncomeHistoricalSummary::is_total_amount_Valid() const{
    return m_total_amount_isValid;
}

QList<OAICreditAmountWithCurrency> OAICreditBankIncomeHistoricalSummary::getTotalAmounts() const {
    return m_total_amounts;
}
void OAICreditBankIncomeHistoricalSummary::setTotalAmounts(const QList<OAICreditAmountWithCurrency> &total_amounts) {
    m_total_amounts = total_amounts;
    m_total_amounts_isSet = true;
}

bool OAICreditBankIncomeHistoricalSummary::is_total_amounts_Set() const{
    return m_total_amounts_isSet;
}

bool OAICreditBankIncomeHistoricalSummary::is_total_amounts_Valid() const{
    return m_total_amounts_isValid;
}

QList<OAICreditBankIncomeTransaction> OAICreditBankIncomeHistoricalSummary::getTransactions() const {
    return m_transactions;
}
void OAICreditBankIncomeHistoricalSummary::setTransactions(const QList<OAICreditBankIncomeTransaction> &transactions) {
    m_transactions = transactions;
    m_transactions_isSet = true;
}

bool OAICreditBankIncomeHistoricalSummary::is_transactions_Set() const{
    return m_transactions_isSet;
}

bool OAICreditBankIncomeHistoricalSummary::is_transactions_Valid() const{
    return m_transactions_isValid;
}

QString OAICreditBankIncomeHistoricalSummary::getUnofficialCurrencyCode() const {
    return m_unofficial_currency_code;
}
void OAICreditBankIncomeHistoricalSummary::setUnofficialCurrencyCode(const QString &unofficial_currency_code) {
    m_unofficial_currency_code = unofficial_currency_code;
    m_unofficial_currency_code_isSet = true;
}

bool OAICreditBankIncomeHistoricalSummary::is_unofficial_currency_code_Set() const{
    return m_unofficial_currency_code_isSet;
}

bool OAICreditBankIncomeHistoricalSummary::is_unofficial_currency_code_Valid() const{
    return m_unofficial_currency_code_isValid;
}

bool OAICreditBankIncomeHistoricalSummary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_amounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_unofficial_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditBankIncomeHistoricalSummary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
