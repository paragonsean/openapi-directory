/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDateRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDateRange::OAIDateRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDateRange::OAIDateRange() {
    this->initializeModel();
}

OAIDateRange::~OAIDateRange() {}

void OAIDateRange::initializeModel() {

    m_beginning_isSet = false;
    m_beginning_isValid = false;

    m_ending_isSet = false;
    m_ending_isValid = false;
}

void OAIDateRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDateRange::fromJsonObject(QJsonObject json) {

    m_beginning_isValid = ::OpenAPI::fromJsonValue(m_beginning, json[QString("beginning")]);
    m_beginning_isSet = !json[QString("beginning")].isNull() && m_beginning_isValid;

    m_ending_isValid = ::OpenAPI::fromJsonValue(m_ending, json[QString("ending")]);
    m_ending_isSet = !json[QString("ending")].isNull() && m_ending_isValid;
}

QString OAIDateRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDateRange::asJsonObject() const {
    QJsonObject obj;
    if (m_beginning_isSet) {
        obj.insert(QString("beginning"), ::OpenAPI::toJsonValue(m_beginning));
    }
    if (m_ending_isSet) {
        obj.insert(QString("ending"), ::OpenAPI::toJsonValue(m_ending));
    }
    return obj;
}

QDate OAIDateRange::getBeginning() const {
    return m_beginning;
}
void OAIDateRange::setBeginning(const QDate &beginning) {
    m_beginning = beginning;
    m_beginning_isSet = true;
}

bool OAIDateRange::is_beginning_Set() const{
    return m_beginning_isSet;
}

bool OAIDateRange::is_beginning_Valid() const{
    return m_beginning_isValid;
}

QDate OAIDateRange::getEnding() const {
    return m_ending;
}
void OAIDateRange::setEnding(const QDate &ending) {
    m_ending = ending;
    m_ending_isSet = true;
}

bool OAIDateRange::is_ending_Set() const{
    return m_ending_isSet;
}

bool OAIDateRange::is_ending_Valid() const{
    return m_ending_isValid;
}

bool OAIDateRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_beginning_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ending_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDateRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_beginning_isValid && m_ending_isValid && true;
}

} // namespace OpenAPI
