/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkTokenGetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkTokenGetResponse::OAILinkTokenGetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkTokenGetResponse::OAILinkTokenGetResponse() {
    this->initializeModel();
}

OAILinkTokenGetResponse::~OAILinkTokenGetResponse() {}

void OAILinkTokenGetResponse::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_expiration_isSet = false;
    m_expiration_isValid = false;

    m_link_token_isSet = false;
    m_link_token_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAILinkTokenGetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkTokenGetResponse::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_expiration_isValid = ::OpenAPI::fromJsonValue(m_expiration, json[QString("expiration")]);
    m_expiration_isSet = !json[QString("expiration")].isNull() && m_expiration_isValid;

    m_link_token_isValid = ::OpenAPI::fromJsonValue(m_link_token, json[QString("link_token")]);
    m_link_token_isSet = !json[QString("link_token")].isNull() && m_link_token_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("request_id")]);
    m_request_id_isSet = !json[QString("request_id")].isNull() && m_request_id_isValid;
}

QString OAILinkTokenGetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkTokenGetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_expiration_isSet) {
        obj.insert(QString("expiration"), ::OpenAPI::toJsonValue(m_expiration));
    }
    if (m_link_token_isSet) {
        obj.insert(QString("link_token"), ::OpenAPI::toJsonValue(m_link_token));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("request_id"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

QDateTime OAILinkTokenGetResponse::getCreatedAt() const {
    return m_created_at;
}
void OAILinkTokenGetResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAILinkTokenGetResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAILinkTokenGetResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAILinkTokenGetResponse::getExpiration() const {
    return m_expiration;
}
void OAILinkTokenGetResponse::setExpiration(const QDateTime &expiration) {
    m_expiration = expiration;
    m_expiration_isSet = true;
}

bool OAILinkTokenGetResponse::is_expiration_Set() const{
    return m_expiration_isSet;
}

bool OAILinkTokenGetResponse::is_expiration_Valid() const{
    return m_expiration_isValid;
}

QString OAILinkTokenGetResponse::getLinkToken() const {
    return m_link_token;
}
void OAILinkTokenGetResponse::setLinkToken(const QString &link_token) {
    m_link_token = link_token;
    m_link_token_isSet = true;
}

bool OAILinkTokenGetResponse::is_link_token_Set() const{
    return m_link_token_isSet;
}

bool OAILinkTokenGetResponse::is_link_token_Valid() const{
    return m_link_token_isValid;
}

OAILinkTokenGetMetadataResponse OAILinkTokenGetResponse::getMetadata() const {
    return m_metadata;
}
void OAILinkTokenGetResponse::setMetadata(const OAILinkTokenGetMetadataResponse &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAILinkTokenGetResponse::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAILinkTokenGetResponse::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAILinkTokenGetResponse::getRequestId() const {
    return m_request_id;
}
void OAILinkTokenGetResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAILinkTokenGetResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAILinkTokenGetResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAILinkTokenGetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkTokenGetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_at_isValid && m_expiration_isValid && m_link_token_isValid && m_metadata_isValid && m_request_id_isValid && true;
}

} // namespace OpenAPI
