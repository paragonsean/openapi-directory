/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStandaloneAccountType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStandaloneAccountType::OAIStandaloneAccountType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStandaloneAccountType::OAIStandaloneAccountType() {
    this->initializeModel();
}

OAIStandaloneAccountType::~OAIStandaloneAccountType() {}

void OAIStandaloneAccountType::initializeModel() {

    m_credit_isSet = false;
    m_credit_isValid = false;

    m_depository_isSet = false;
    m_depository_isValid = false;

    m_investment_isSet = false;
    m_investment_isValid = false;

    m_loan_isSet = false;
    m_loan_isValid = false;

    m_other_isSet = false;
    m_other_isValid = false;
}

void OAIStandaloneAccountType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStandaloneAccountType::fromJsonObject(QJsonObject json) {

    m_credit_isValid = ::OpenAPI::fromJsonValue(m_credit, json[QString("credit")]);
    m_credit_isSet = !json[QString("credit")].isNull() && m_credit_isValid;

    m_depository_isValid = ::OpenAPI::fromJsonValue(m_depository, json[QString("depository")]);
    m_depository_isSet = !json[QString("depository")].isNull() && m_depository_isValid;

    m_investment_isValid = ::OpenAPI::fromJsonValue(m_investment, json[QString("investment")]);
    m_investment_isSet = !json[QString("investment")].isNull() && m_investment_isValid;

    m_loan_isValid = ::OpenAPI::fromJsonValue(m_loan, json[QString("loan")]);
    m_loan_isSet = !json[QString("loan")].isNull() && m_loan_isValid;

    m_other_isValid = ::OpenAPI::fromJsonValue(m_other, json[QString("other")]);
    m_other_isSet = !json[QString("other")].isNull() && m_other_isValid;
}

QString OAIStandaloneAccountType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStandaloneAccountType::asJsonObject() const {
    QJsonObject obj;
    if (m_credit_isSet) {
        obj.insert(QString("credit"), ::OpenAPI::toJsonValue(m_credit));
    }
    if (m_depository_isSet) {
        obj.insert(QString("depository"), ::OpenAPI::toJsonValue(m_depository));
    }
    if (m_investment_isSet) {
        obj.insert(QString("investment"), ::OpenAPI::toJsonValue(m_investment));
    }
    if (m_loan_isSet) {
        obj.insert(QString("loan"), ::OpenAPI::toJsonValue(m_loan));
    }
    if (m_other_isSet) {
        obj.insert(QString("other"), ::OpenAPI::toJsonValue(m_other));
    }
    return obj;
}

QString OAIStandaloneAccountType::getCredit() const {
    return m_credit;
}
void OAIStandaloneAccountType::setCredit(const QString &credit) {
    m_credit = credit;
    m_credit_isSet = true;
}

bool OAIStandaloneAccountType::is_credit_Set() const{
    return m_credit_isSet;
}

bool OAIStandaloneAccountType::is_credit_Valid() const{
    return m_credit_isValid;
}

QString OAIStandaloneAccountType::getDepository() const {
    return m_depository;
}
void OAIStandaloneAccountType::setDepository(const QString &depository) {
    m_depository = depository;
    m_depository_isSet = true;
}

bool OAIStandaloneAccountType::is_depository_Set() const{
    return m_depository_isSet;
}

bool OAIStandaloneAccountType::is_depository_Valid() const{
    return m_depository_isValid;
}

QString OAIStandaloneAccountType::getInvestment() const {
    return m_investment;
}
void OAIStandaloneAccountType::setInvestment(const QString &investment) {
    m_investment = investment;
    m_investment_isSet = true;
}

bool OAIStandaloneAccountType::is_investment_Set() const{
    return m_investment_isSet;
}

bool OAIStandaloneAccountType::is_investment_Valid() const{
    return m_investment_isValid;
}

QString OAIStandaloneAccountType::getLoan() const {
    return m_loan;
}
void OAIStandaloneAccountType::setLoan(const QString &loan) {
    m_loan = loan;
    m_loan_isSet = true;
}

bool OAIStandaloneAccountType::is_loan_Set() const{
    return m_loan_isSet;
}

bool OAIStandaloneAccountType::is_loan_Valid() const{
    return m_loan_isValid;
}

QString OAIStandaloneAccountType::getOther() const {
    return m_other;
}
void OAIStandaloneAccountType::setOther(const QString &other) {
    m_other = other;
    m_other_isSet = true;
}

bool OAIStandaloneAccountType::is_other_Set() const{
    return m_other_isSet;
}

bool OAIStandaloneAccountType::is_other_Valid() const{
    return m_other_isValid;
}

bool OAIStandaloneAccountType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_credit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_depository_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_investment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_other_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStandaloneAccountType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_credit_isValid && m_depository_isValid && m_investment_isValid && m_loan_isValid && m_other_isValid && true;
}

} // namespace OpenAPI
