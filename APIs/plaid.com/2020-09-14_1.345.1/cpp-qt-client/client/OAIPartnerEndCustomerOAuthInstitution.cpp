/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPartnerEndCustomerOAuthInstitution.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPartnerEndCustomerOAuthInstitution::OAIPartnerEndCustomerOAuthInstitution(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPartnerEndCustomerOAuthInstitution::OAIPartnerEndCustomerOAuthInstitution() {
    this->initializeModel();
}

OAIPartnerEndCustomerOAuthInstitution::~OAIPartnerEndCustomerOAuthInstitution() {}

void OAIPartnerEndCustomerOAuthInstitution::initializeModel() {

    m_classic_disablement_date_isSet = false;
    m_classic_disablement_date_isValid = false;

    m_environments_isSet = false;
    m_environments_isValid = false;

    m_institution_id_isSet = false;
    m_institution_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_production_enablement_date_isSet = false;
    m_production_enablement_date_isValid = false;
}

void OAIPartnerEndCustomerOAuthInstitution::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPartnerEndCustomerOAuthInstitution::fromJsonObject(QJsonObject json) {

    m_classic_disablement_date_isValid = ::OpenAPI::fromJsonValue(m_classic_disablement_date, json[QString("classic_disablement_date")]);
    m_classic_disablement_date_isSet = !json[QString("classic_disablement_date")].isNull() && m_classic_disablement_date_isValid;

    m_environments_isValid = ::OpenAPI::fromJsonValue(m_environments, json[QString("environments")]);
    m_environments_isSet = !json[QString("environments")].isNull() && m_environments_isValid;

    m_institution_id_isValid = ::OpenAPI::fromJsonValue(m_institution_id, json[QString("institution_id")]);
    m_institution_id_isSet = !json[QString("institution_id")].isNull() && m_institution_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_production_enablement_date_isValid = ::OpenAPI::fromJsonValue(m_production_enablement_date, json[QString("production_enablement_date")]);
    m_production_enablement_date_isSet = !json[QString("production_enablement_date")].isNull() && m_production_enablement_date_isValid;
}

QString OAIPartnerEndCustomerOAuthInstitution::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPartnerEndCustomerOAuthInstitution::asJsonObject() const {
    QJsonObject obj;
    if (m_classic_disablement_date_isSet) {
        obj.insert(QString("classic_disablement_date"), ::OpenAPI::toJsonValue(m_classic_disablement_date));
    }
    if (m_environments.isSet()) {
        obj.insert(QString("environments"), ::OpenAPI::toJsonValue(m_environments));
    }
    if (m_institution_id_isSet) {
        obj.insert(QString("institution_id"), ::OpenAPI::toJsonValue(m_institution_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_production_enablement_date_isSet) {
        obj.insert(QString("production_enablement_date"), ::OpenAPI::toJsonValue(m_production_enablement_date));
    }
    return obj;
}

QString OAIPartnerEndCustomerOAuthInstitution::getClassicDisablementDate() const {
    return m_classic_disablement_date;
}
void OAIPartnerEndCustomerOAuthInstitution::setClassicDisablementDate(const QString &classic_disablement_date) {
    m_classic_disablement_date = classic_disablement_date;
    m_classic_disablement_date_isSet = true;
}

bool OAIPartnerEndCustomerOAuthInstitution::is_classic_disablement_date_Set() const{
    return m_classic_disablement_date_isSet;
}

bool OAIPartnerEndCustomerOAuthInstitution::is_classic_disablement_date_Valid() const{
    return m_classic_disablement_date_isValid;
}

OAIPartnerEndCustomerOAuthInstitutionEnvironments OAIPartnerEndCustomerOAuthInstitution::getEnvironments() const {
    return m_environments;
}
void OAIPartnerEndCustomerOAuthInstitution::setEnvironments(const OAIPartnerEndCustomerOAuthInstitutionEnvironments &environments) {
    m_environments = environments;
    m_environments_isSet = true;
}

bool OAIPartnerEndCustomerOAuthInstitution::is_environments_Set() const{
    return m_environments_isSet;
}

bool OAIPartnerEndCustomerOAuthInstitution::is_environments_Valid() const{
    return m_environments_isValid;
}

QString OAIPartnerEndCustomerOAuthInstitution::getInstitutionId() const {
    return m_institution_id;
}
void OAIPartnerEndCustomerOAuthInstitution::setInstitutionId(const QString &institution_id) {
    m_institution_id = institution_id;
    m_institution_id_isSet = true;
}

bool OAIPartnerEndCustomerOAuthInstitution::is_institution_id_Set() const{
    return m_institution_id_isSet;
}

bool OAIPartnerEndCustomerOAuthInstitution::is_institution_id_Valid() const{
    return m_institution_id_isValid;
}

QString OAIPartnerEndCustomerOAuthInstitution::getName() const {
    return m_name;
}
void OAIPartnerEndCustomerOAuthInstitution::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPartnerEndCustomerOAuthInstitution::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPartnerEndCustomerOAuthInstitution::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPartnerEndCustomerOAuthInstitution::getProductionEnablementDate() const {
    return m_production_enablement_date;
}
void OAIPartnerEndCustomerOAuthInstitution::setProductionEnablementDate(const QString &production_enablement_date) {
    m_production_enablement_date = production_enablement_date;
    m_production_enablement_date_isSet = true;
}

bool OAIPartnerEndCustomerOAuthInstitution::is_production_enablement_date_Set() const{
    return m_production_enablement_date_isSet;
}

bool OAIPartnerEndCustomerOAuthInstitution::is_production_enablement_date_Valid() const{
    return m_production_enablement_date_isValid;
}

bool OAIPartnerEndCustomerOAuthInstitution::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_classic_disablement_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environments.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_institution_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_production_enablement_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPartnerEndCustomerOAuthInstitution::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
