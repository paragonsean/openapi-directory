/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaystubDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaystubDetails::OAIPaystubDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaystubDetails::OAIPaystubDetails() {
    this->initializeModel();
}

OAIPaystubDetails::~OAIPaystubDetails() {}

void OAIPaystubDetails::initializeModel() {

    m_pay_date_isSet = false;
    m_pay_date_isValid = false;

    m_pay_frequency_isSet = false;
    m_pay_frequency_isValid = false;

    m_pay_period_end_date_isSet = false;
    m_pay_period_end_date_isValid = false;

    m_pay_period_start_date_isSet = false;
    m_pay_period_start_date_isValid = false;

    m_paystub_provider_isSet = false;
    m_paystub_provider_isValid = false;
}

void OAIPaystubDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaystubDetails::fromJsonObject(QJsonObject json) {

    m_pay_date_isValid = ::OpenAPI::fromJsonValue(m_pay_date, json[QString("pay_date")]);
    m_pay_date_isSet = !json[QString("pay_date")].isNull() && m_pay_date_isValid;

    m_pay_frequency_isValid = ::OpenAPI::fromJsonValue(m_pay_frequency, json[QString("pay_frequency")]);
    m_pay_frequency_isSet = !json[QString("pay_frequency")].isNull() && m_pay_frequency_isValid;

    m_pay_period_end_date_isValid = ::OpenAPI::fromJsonValue(m_pay_period_end_date, json[QString("pay_period_end_date")]);
    m_pay_period_end_date_isSet = !json[QString("pay_period_end_date")].isNull() && m_pay_period_end_date_isValid;

    m_pay_period_start_date_isValid = ::OpenAPI::fromJsonValue(m_pay_period_start_date, json[QString("pay_period_start_date")]);
    m_pay_period_start_date_isSet = !json[QString("pay_period_start_date")].isNull() && m_pay_period_start_date_isValid;

    m_paystub_provider_isValid = ::OpenAPI::fromJsonValue(m_paystub_provider, json[QString("paystub_provider")]);
    m_paystub_provider_isSet = !json[QString("paystub_provider")].isNull() && m_paystub_provider_isValid;
}

QString OAIPaystubDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaystubDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_pay_date_isSet) {
        obj.insert(QString("pay_date"), ::OpenAPI::toJsonValue(m_pay_date));
    }
    if (m_pay_frequency.isSet()) {
        obj.insert(QString("pay_frequency"), ::OpenAPI::toJsonValue(m_pay_frequency));
    }
    if (m_pay_period_end_date_isSet) {
        obj.insert(QString("pay_period_end_date"), ::OpenAPI::toJsonValue(m_pay_period_end_date));
    }
    if (m_pay_period_start_date_isSet) {
        obj.insert(QString("pay_period_start_date"), ::OpenAPI::toJsonValue(m_pay_period_start_date));
    }
    if (m_paystub_provider_isSet) {
        obj.insert(QString("paystub_provider"), ::OpenAPI::toJsonValue(m_paystub_provider));
    }
    return obj;
}

QDate OAIPaystubDetails::getPayDate() const {
    return m_pay_date;
}
void OAIPaystubDetails::setPayDate(const QDate &pay_date) {
    m_pay_date = pay_date;
    m_pay_date_isSet = true;
}

bool OAIPaystubDetails::is_pay_date_Set() const{
    return m_pay_date_isSet;
}

bool OAIPaystubDetails::is_pay_date_Valid() const{
    return m_pay_date_isValid;
}

OAIPaystubPayFrequency OAIPaystubDetails::getPayFrequency() const {
    return m_pay_frequency;
}
void OAIPaystubDetails::setPayFrequency(const OAIPaystubPayFrequency &pay_frequency) {
    m_pay_frequency = pay_frequency;
    m_pay_frequency_isSet = true;
}

bool OAIPaystubDetails::is_pay_frequency_Set() const{
    return m_pay_frequency_isSet;
}

bool OAIPaystubDetails::is_pay_frequency_Valid() const{
    return m_pay_frequency_isValid;
}

QDate OAIPaystubDetails::getPayPeriodEndDate() const {
    return m_pay_period_end_date;
}
void OAIPaystubDetails::setPayPeriodEndDate(const QDate &pay_period_end_date) {
    m_pay_period_end_date = pay_period_end_date;
    m_pay_period_end_date_isSet = true;
}

bool OAIPaystubDetails::is_pay_period_end_date_Set() const{
    return m_pay_period_end_date_isSet;
}

bool OAIPaystubDetails::is_pay_period_end_date_Valid() const{
    return m_pay_period_end_date_isValid;
}

QDate OAIPaystubDetails::getPayPeriodStartDate() const {
    return m_pay_period_start_date;
}
void OAIPaystubDetails::setPayPeriodStartDate(const QDate &pay_period_start_date) {
    m_pay_period_start_date = pay_period_start_date;
    m_pay_period_start_date_isSet = true;
}

bool OAIPaystubDetails::is_pay_period_start_date_Set() const{
    return m_pay_period_start_date_isSet;
}

bool OAIPaystubDetails::is_pay_period_start_date_Valid() const{
    return m_pay_period_start_date_isValid;
}

QString OAIPaystubDetails::getPaystubProvider() const {
    return m_paystub_provider;
}
void OAIPaystubDetails::setPaystubProvider(const QString &paystub_provider) {
    m_paystub_provider = paystub_provider;
    m_paystub_provider_isSet = true;
}

bool OAIPaystubDetails::is_paystub_provider_Set() const{
    return m_paystub_provider_isSet;
}

bool OAIPaystubDetails::is_paystub_provider_Valid() const{
    return m_paystub_provider_isValid;
}

bool OAIPaystubDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pay_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_frequency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_period_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_period_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_paystub_provider_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaystubDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
