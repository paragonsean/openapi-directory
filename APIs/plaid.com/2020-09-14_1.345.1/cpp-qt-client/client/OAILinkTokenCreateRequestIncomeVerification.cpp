/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkTokenCreateRequestIncomeVerification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkTokenCreateRequestIncomeVerification::OAILinkTokenCreateRequestIncomeVerification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkTokenCreateRequestIncomeVerification::OAILinkTokenCreateRequestIncomeVerification() {
    this->initializeModel();
}

OAILinkTokenCreateRequestIncomeVerification::~OAILinkTokenCreateRequestIncomeVerification() {}

void OAILinkTokenCreateRequestIncomeVerification::initializeModel() {

    m_access_tokens_isSet = false;
    m_access_tokens_isValid = false;

    m_asset_report_id_isSet = false;
    m_asset_report_id_isValid = false;

    m_bank_income_isSet = false;
    m_bank_income_isValid = false;

    m_income_source_types_isSet = false;
    m_income_source_types_isValid = false;

    m_income_verification_id_isSet = false;
    m_income_verification_id_isValid = false;

    m_payroll_income_isSet = false;
    m_payroll_income_isValid = false;

    m_precheck_id_isSet = false;
    m_precheck_id_isValid = false;

    m_stated_income_sources_isSet = false;
    m_stated_income_sources_isValid = false;
}

void OAILinkTokenCreateRequestIncomeVerification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkTokenCreateRequestIncomeVerification::fromJsonObject(QJsonObject json) {

    m_access_tokens_isValid = ::OpenAPI::fromJsonValue(m_access_tokens, json[QString("access_tokens")]);
    m_access_tokens_isSet = !json[QString("access_tokens")].isNull() && m_access_tokens_isValid;

    m_asset_report_id_isValid = ::OpenAPI::fromJsonValue(m_asset_report_id, json[QString("asset_report_id")]);
    m_asset_report_id_isSet = !json[QString("asset_report_id")].isNull() && m_asset_report_id_isValid;

    m_bank_income_isValid = ::OpenAPI::fromJsonValue(m_bank_income, json[QString("bank_income")]);
    m_bank_income_isSet = !json[QString("bank_income")].isNull() && m_bank_income_isValid;

    m_income_source_types_isValid = ::OpenAPI::fromJsonValue(m_income_source_types, json[QString("income_source_types")]);
    m_income_source_types_isSet = !json[QString("income_source_types")].isNull() && m_income_source_types_isValid;

    m_income_verification_id_isValid = ::OpenAPI::fromJsonValue(m_income_verification_id, json[QString("income_verification_id")]);
    m_income_verification_id_isSet = !json[QString("income_verification_id")].isNull() && m_income_verification_id_isValid;

    m_payroll_income_isValid = ::OpenAPI::fromJsonValue(m_payroll_income, json[QString("payroll_income")]);
    m_payroll_income_isSet = !json[QString("payroll_income")].isNull() && m_payroll_income_isValid;

    m_precheck_id_isValid = ::OpenAPI::fromJsonValue(m_precheck_id, json[QString("precheck_id")]);
    m_precheck_id_isSet = !json[QString("precheck_id")].isNull() && m_precheck_id_isValid;

    m_stated_income_sources_isValid = ::OpenAPI::fromJsonValue(m_stated_income_sources, json[QString("stated_income_sources")]);
    m_stated_income_sources_isSet = !json[QString("stated_income_sources")].isNull() && m_stated_income_sources_isValid;
}

QString OAILinkTokenCreateRequestIncomeVerification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkTokenCreateRequestIncomeVerification::asJsonObject() const {
    QJsonObject obj;
    if (m_access_tokens.size() > 0) {
        obj.insert(QString("access_tokens"), ::OpenAPI::toJsonValue(m_access_tokens));
    }
    if (m_asset_report_id_isSet) {
        obj.insert(QString("asset_report_id"), ::OpenAPI::toJsonValue(m_asset_report_id));
    }
    if (m_bank_income.isSet()) {
        obj.insert(QString("bank_income"), ::OpenAPI::toJsonValue(m_bank_income));
    }
    if (m_income_source_types.size() > 0) {
        obj.insert(QString("income_source_types"), ::OpenAPI::toJsonValue(m_income_source_types));
    }
    if (m_income_verification_id_isSet) {
        obj.insert(QString("income_verification_id"), ::OpenAPI::toJsonValue(m_income_verification_id));
    }
    if (m_payroll_income.isSet()) {
        obj.insert(QString("payroll_income"), ::OpenAPI::toJsonValue(m_payroll_income));
    }
    if (m_precheck_id_isSet) {
        obj.insert(QString("precheck_id"), ::OpenAPI::toJsonValue(m_precheck_id));
    }
    if (m_stated_income_sources.size() > 0) {
        obj.insert(QString("stated_income_sources"), ::OpenAPI::toJsonValue(m_stated_income_sources));
    }
    return obj;
}

QList<QString> OAILinkTokenCreateRequestIncomeVerification::getAccessTokens() const {
    return m_access_tokens;
}
void OAILinkTokenCreateRequestIncomeVerification::setAccessTokens(const QList<QString> &access_tokens) {
    m_access_tokens = access_tokens;
    m_access_tokens_isSet = true;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_access_tokens_Set() const{
    return m_access_tokens_isSet;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_access_tokens_Valid() const{
    return m_access_tokens_isValid;
}

QString OAILinkTokenCreateRequestIncomeVerification::getAssetReportId() const {
    return m_asset_report_id;
}
void OAILinkTokenCreateRequestIncomeVerification::setAssetReportId(const QString &asset_report_id) {
    m_asset_report_id = asset_report_id;
    m_asset_report_id_isSet = true;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_asset_report_id_Set() const{
    return m_asset_report_id_isSet;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_asset_report_id_Valid() const{
    return m_asset_report_id_isValid;
}

OAILinkTokenCreateRequestIncomeVerificationBankIncome OAILinkTokenCreateRequestIncomeVerification::getBankIncome() const {
    return m_bank_income;
}
void OAILinkTokenCreateRequestIncomeVerification::setBankIncome(const OAILinkTokenCreateRequestIncomeVerificationBankIncome &bank_income) {
    m_bank_income = bank_income;
    m_bank_income_isSet = true;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_bank_income_Set() const{
    return m_bank_income_isSet;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_bank_income_Valid() const{
    return m_bank_income_isValid;
}

QList<OAIIncomeVerificationSourceType> OAILinkTokenCreateRequestIncomeVerification::getIncomeSourceTypes() const {
    return m_income_source_types;
}
void OAILinkTokenCreateRequestIncomeVerification::setIncomeSourceTypes(const QList<OAIIncomeVerificationSourceType> &income_source_types) {
    m_income_source_types = income_source_types;
    m_income_source_types_isSet = true;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_income_source_types_Set() const{
    return m_income_source_types_isSet;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_income_source_types_Valid() const{
    return m_income_source_types_isValid;
}

QString OAILinkTokenCreateRequestIncomeVerification::getIncomeVerificationId() const {
    return m_income_verification_id;
}
void OAILinkTokenCreateRequestIncomeVerification::setIncomeVerificationId(const QString &income_verification_id) {
    m_income_verification_id = income_verification_id;
    m_income_verification_id_isSet = true;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_income_verification_id_Set() const{
    return m_income_verification_id_isSet;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_income_verification_id_Valid() const{
    return m_income_verification_id_isValid;
}

OAILinkTokenCreateRequestIncomeVerificationPayrollIncome OAILinkTokenCreateRequestIncomeVerification::getPayrollIncome() const {
    return m_payroll_income;
}
void OAILinkTokenCreateRequestIncomeVerification::setPayrollIncome(const OAILinkTokenCreateRequestIncomeVerificationPayrollIncome &payroll_income) {
    m_payroll_income = payroll_income;
    m_payroll_income_isSet = true;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_payroll_income_Set() const{
    return m_payroll_income_isSet;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_payroll_income_Valid() const{
    return m_payroll_income_isValid;
}

QString OAILinkTokenCreateRequestIncomeVerification::getPrecheckId() const {
    return m_precheck_id;
}
void OAILinkTokenCreateRequestIncomeVerification::setPrecheckId(const QString &precheck_id) {
    m_precheck_id = precheck_id;
    m_precheck_id_isSet = true;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_precheck_id_Set() const{
    return m_precheck_id_isSet;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_precheck_id_Valid() const{
    return m_precheck_id_isValid;
}

QList<OAILinkTokenCreateRequestUserStatedIncomeSource> OAILinkTokenCreateRequestIncomeVerification::getStatedIncomeSources() const {
    return m_stated_income_sources;
}
void OAILinkTokenCreateRequestIncomeVerification::setStatedIncomeSources(const QList<OAILinkTokenCreateRequestUserStatedIncomeSource> &stated_income_sources) {
    m_stated_income_sources = stated_income_sources;
    m_stated_income_sources_isSet = true;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_stated_income_sources_Set() const{
    return m_stated_income_sources_isSet;
}

bool OAILinkTokenCreateRequestIncomeVerification::is_stated_income_sources_Valid() const{
    return m_stated_income_sources_isValid;
}

bool OAILinkTokenCreateRequestIncomeVerification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_tokens.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_asset_report_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_income.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_income_source_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_income_verification_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payroll_income.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_precheck_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stated_income_sources.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkTokenCreateRequestIncomeVerification::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
