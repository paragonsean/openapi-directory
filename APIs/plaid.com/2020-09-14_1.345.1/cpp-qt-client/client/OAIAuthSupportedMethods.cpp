/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthSupportedMethods.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthSupportedMethods::OAIAuthSupportedMethods(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthSupportedMethods::OAIAuthSupportedMethods() {
    this->initializeModel();
}

OAIAuthSupportedMethods::~OAIAuthSupportedMethods() {}

void OAIAuthSupportedMethods::initializeModel() {

    m_automated_micro_deposits_isSet = false;
    m_automated_micro_deposits_isValid = false;

    m_instant_auth_isSet = false;
    m_instant_auth_isValid = false;

    m_instant_match_isSet = false;
    m_instant_match_isValid = false;
}

void OAIAuthSupportedMethods::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthSupportedMethods::fromJsonObject(QJsonObject json) {

    m_automated_micro_deposits_isValid = ::OpenAPI::fromJsonValue(m_automated_micro_deposits, json[QString("automated_micro_deposits")]);
    m_automated_micro_deposits_isSet = !json[QString("automated_micro_deposits")].isNull() && m_automated_micro_deposits_isValid;

    m_instant_auth_isValid = ::OpenAPI::fromJsonValue(m_instant_auth, json[QString("instant_auth")]);
    m_instant_auth_isSet = !json[QString("instant_auth")].isNull() && m_instant_auth_isValid;

    m_instant_match_isValid = ::OpenAPI::fromJsonValue(m_instant_match, json[QString("instant_match")]);
    m_instant_match_isSet = !json[QString("instant_match")].isNull() && m_instant_match_isValid;
}

QString OAIAuthSupportedMethods::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthSupportedMethods::asJsonObject() const {
    QJsonObject obj;
    if (m_automated_micro_deposits_isSet) {
        obj.insert(QString("automated_micro_deposits"), ::OpenAPI::toJsonValue(m_automated_micro_deposits));
    }
    if (m_instant_auth_isSet) {
        obj.insert(QString("instant_auth"), ::OpenAPI::toJsonValue(m_instant_auth));
    }
    if (m_instant_match_isSet) {
        obj.insert(QString("instant_match"), ::OpenAPI::toJsonValue(m_instant_match));
    }
    return obj;
}

bool OAIAuthSupportedMethods::isAutomatedMicroDeposits() const {
    return m_automated_micro_deposits;
}
void OAIAuthSupportedMethods::setAutomatedMicroDeposits(const bool &automated_micro_deposits) {
    m_automated_micro_deposits = automated_micro_deposits;
    m_automated_micro_deposits_isSet = true;
}

bool OAIAuthSupportedMethods::is_automated_micro_deposits_Set() const{
    return m_automated_micro_deposits_isSet;
}

bool OAIAuthSupportedMethods::is_automated_micro_deposits_Valid() const{
    return m_automated_micro_deposits_isValid;
}

bool OAIAuthSupportedMethods::isInstantAuth() const {
    return m_instant_auth;
}
void OAIAuthSupportedMethods::setInstantAuth(const bool &instant_auth) {
    m_instant_auth = instant_auth;
    m_instant_auth_isSet = true;
}

bool OAIAuthSupportedMethods::is_instant_auth_Set() const{
    return m_instant_auth_isSet;
}

bool OAIAuthSupportedMethods::is_instant_auth_Valid() const{
    return m_instant_auth_isValid;
}

bool OAIAuthSupportedMethods::isInstantMatch() const {
    return m_instant_match;
}
void OAIAuthSupportedMethods::setInstantMatch(const bool &instant_match) {
    m_instant_match = instant_match;
    m_instant_match_isSet = true;
}

bool OAIAuthSupportedMethods::is_instant_match_Set() const{
    return m_instant_match_isSet;
}

bool OAIAuthSupportedMethods::is_instant_match_Valid() const{
    return m_instant_match_isValid;
}

bool OAIAuthSupportedMethods::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automated_micro_deposits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instant_auth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instant_match_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthSupportedMethods::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_automated_micro_deposits_isValid && m_instant_auth_isValid && m_instant_match_isValid && true;
}

} // namespace OpenAPI
