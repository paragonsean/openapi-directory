/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITotal.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITotal::OAITotal(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITotal::OAITotal() {
    this->initializeModel();
}

OAITotal::~OAITotal() {}

void OAITotal::initializeModel() {

    m_canonical_description_isSet = false;
    m_canonical_description_isValid = false;

    m_current_pay_isSet = false;
    m_current_pay_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_ytd_pay_isSet = false;
    m_ytd_pay_isValid = false;
}

void OAITotal::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITotal::fromJsonObject(QJsonObject json) {

    m_canonical_description_isValid = ::OpenAPI::fromJsonValue(m_canonical_description, json[QString("canonical_description")]);
    m_canonical_description_isSet = !json[QString("canonical_description")].isNull() && m_canonical_description_isValid;

    m_current_pay_isValid = ::OpenAPI::fromJsonValue(m_current_pay, json[QString("current_pay")]);
    m_current_pay_isSet = !json[QString("current_pay")].isNull() && m_current_pay_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_ytd_pay_isValid = ::OpenAPI::fromJsonValue(m_ytd_pay, json[QString("ytd_pay")]);
    m_ytd_pay_isSet = !json[QString("ytd_pay")].isNull() && m_ytd_pay_isValid;
}

QString OAITotal::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITotal::asJsonObject() const {
    QJsonObject obj;
    if (m_canonical_description.isSet()) {
        obj.insert(QString("canonical_description"), ::OpenAPI::toJsonValue(m_canonical_description));
    }
    if (m_current_pay.isSet()) {
        obj.insert(QString("current_pay"), ::OpenAPI::toJsonValue(m_current_pay));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_ytd_pay.isSet()) {
        obj.insert(QString("ytd_pay"), ::OpenAPI::toJsonValue(m_ytd_pay));
    }
    return obj;
}

OAITotalCanonicalDescription OAITotal::getCanonicalDescription() const {
    return m_canonical_description;
}
void OAITotal::setCanonicalDescription(const OAITotalCanonicalDescription &canonical_description) {
    m_canonical_description = canonical_description;
    m_canonical_description_isSet = true;
}

bool OAITotal::is_canonical_description_Set() const{
    return m_canonical_description_isSet;
}

bool OAITotal::is_canonical_description_Valid() const{
    return m_canonical_description_isValid;
}

OAIPay OAITotal::getCurrentPay() const {
    return m_current_pay;
}
void OAITotal::setCurrentPay(const OAIPay &current_pay) {
    m_current_pay = current_pay;
    m_current_pay_isSet = true;
}

bool OAITotal::is_current_pay_Set() const{
    return m_current_pay_isSet;
}

bool OAITotal::is_current_pay_Valid() const{
    return m_current_pay_isValid;
}

QString OAITotal::getDescription() const {
    return m_description;
}
void OAITotal::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITotal::is_description_Set() const{
    return m_description_isSet;
}

bool OAITotal::is_description_Valid() const{
    return m_description_isValid;
}

OAIPay OAITotal::getYtdPay() const {
    return m_ytd_pay;
}
void OAITotal::setYtdPay(const OAIPay &ytd_pay) {
    m_ytd_pay = ytd_pay;
    m_ytd_pay_isSet = true;
}

bool OAITotal::is_ytd_pay_Set() const{
    return m_ytd_pay_isSet;
}

bool OAITotal::is_ytd_pay_Valid() const{
    return m_ytd_pay_isValid;
}

bool OAITotal::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_canonical_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_pay.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ytd_pay.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITotal::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
