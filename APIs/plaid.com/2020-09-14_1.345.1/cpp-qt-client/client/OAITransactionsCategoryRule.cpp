/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransactionsCategoryRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransactionsCategoryRule::OAITransactionsCategoryRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransactionsCategoryRule::OAITransactionsCategoryRule() {
    this->initializeModel();
}

OAITransactionsCategoryRule::~OAITransactionsCategoryRule() {}

void OAITransactionsCategoryRule::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_item_id_isSet = false;
    m_item_id_isValid = false;

    m_personal_finance_category_isSet = false;
    m_personal_finance_category_isValid = false;

    m_rule_details_isSet = false;
    m_rule_details_isValid = false;
}

void OAITransactionsCategoryRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransactionsCategoryRule::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_item_id_isValid = ::OpenAPI::fromJsonValue(m_item_id, json[QString("item_id")]);
    m_item_id_isSet = !json[QString("item_id")].isNull() && m_item_id_isValid;

    m_personal_finance_category_isValid = ::OpenAPI::fromJsonValue(m_personal_finance_category, json[QString("personal_finance_category")]);
    m_personal_finance_category_isSet = !json[QString("personal_finance_category")].isNull() && m_personal_finance_category_isValid;

    m_rule_details_isValid = ::OpenAPI::fromJsonValue(m_rule_details, json[QString("rule_details")]);
    m_rule_details_isSet = !json[QString("rule_details")].isNull() && m_rule_details_isValid;
}

QString OAITransactionsCategoryRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransactionsCategoryRule::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_item_id_isSet) {
        obj.insert(QString("item_id"), ::OpenAPI::toJsonValue(m_item_id));
    }
    if (m_personal_finance_category_isSet) {
        obj.insert(QString("personal_finance_category"), ::OpenAPI::toJsonValue(m_personal_finance_category));
    }
    if (m_rule_details.isSet()) {
        obj.insert(QString("rule_details"), ::OpenAPI::toJsonValue(m_rule_details));
    }
    return obj;
}

QDateTime OAITransactionsCategoryRule::getCreatedAt() const {
    return m_created_at;
}
void OAITransactionsCategoryRule::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAITransactionsCategoryRule::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAITransactionsCategoryRule::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAITransactionsCategoryRule::getId() const {
    return m_id;
}
void OAITransactionsCategoryRule::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITransactionsCategoryRule::is_id_Set() const{
    return m_id_isSet;
}

bool OAITransactionsCategoryRule::is_id_Valid() const{
    return m_id_isValid;
}

QString OAITransactionsCategoryRule::getItemId() const {
    return m_item_id;
}
void OAITransactionsCategoryRule::setItemId(const QString &item_id) {
    m_item_id = item_id;
    m_item_id_isSet = true;
}

bool OAITransactionsCategoryRule::is_item_id_Set() const{
    return m_item_id_isSet;
}

bool OAITransactionsCategoryRule::is_item_id_Valid() const{
    return m_item_id_isValid;
}

QString OAITransactionsCategoryRule::getPersonalFinanceCategory() const {
    return m_personal_finance_category;
}
void OAITransactionsCategoryRule::setPersonalFinanceCategory(const QString &personal_finance_category) {
    m_personal_finance_category = personal_finance_category;
    m_personal_finance_category_isSet = true;
}

bool OAITransactionsCategoryRule::is_personal_finance_category_Set() const{
    return m_personal_finance_category_isSet;
}

bool OAITransactionsCategoryRule::is_personal_finance_category_Valid() const{
    return m_personal_finance_category_isValid;
}

OAITransactionsRuleDetails OAITransactionsCategoryRule::getRuleDetails() const {
    return m_rule_details;
}
void OAITransactionsCategoryRule::setRuleDetails(const OAITransactionsRuleDetails &rule_details) {
    m_rule_details = rule_details;
    m_rule_details_isSet = true;
}

bool OAITransactionsCategoryRule::is_rule_details_Set() const{
    return m_rule_details_isSet;
}

bool OAITransactionsCategoryRule::is_rule_details_Valid() const{
    return m_rule_details_isValid;
}

bool OAITransactionsCategoryRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_personal_finance_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_details.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransactionsCategoryRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
