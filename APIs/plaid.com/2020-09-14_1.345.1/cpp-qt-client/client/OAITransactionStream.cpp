/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransactionStream.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransactionStream::OAITransactionStream(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransactionStream::OAITransactionStream() {
    this->initializeModel();
}

OAITransactionStream::~OAITransactionStream() {}

void OAITransactionStream::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_average_amount_isSet = false;
    m_average_amount_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;

    m_category_id_isSet = false;
    m_category_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_first_date_isSet = false;
    m_first_date_isValid = false;

    m_frequency_isSet = false;
    m_frequency_isValid = false;

    m_is_active_isSet = false;
    m_is_active_isValid = false;

    m_last_amount_isSet = false;
    m_last_amount_isValid = false;

    m_last_date_isSet = false;
    m_last_date_isValid = false;

    m_merchant_name_isSet = false;
    m_merchant_name_isValid = false;

    m_personal_finance_category_isSet = false;
    m_personal_finance_category_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_stream_id_isSet = false;
    m_stream_id_isValid = false;

    m_transaction_ids_isSet = false;
    m_transaction_ids_isValid = false;
}

void OAITransactionStream::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransactionStream::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_average_amount_isValid = ::OpenAPI::fromJsonValue(m_average_amount, json[QString("average_amount")]);
    m_average_amount_isSet = !json[QString("average_amount")].isNull() && m_average_amount_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_category_id_isValid = ::OpenAPI::fromJsonValue(m_category_id, json[QString("category_id")]);
    m_category_id_isSet = !json[QString("category_id")].isNull() && m_category_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_first_date_isValid = ::OpenAPI::fromJsonValue(m_first_date, json[QString("first_date")]);
    m_first_date_isSet = !json[QString("first_date")].isNull() && m_first_date_isValid;

    m_frequency_isValid = ::OpenAPI::fromJsonValue(m_frequency, json[QString("frequency")]);
    m_frequency_isSet = !json[QString("frequency")].isNull() && m_frequency_isValid;

    m_is_active_isValid = ::OpenAPI::fromJsonValue(m_is_active, json[QString("is_active")]);
    m_is_active_isSet = !json[QString("is_active")].isNull() && m_is_active_isValid;

    m_last_amount_isValid = ::OpenAPI::fromJsonValue(m_last_amount, json[QString("last_amount")]);
    m_last_amount_isSet = !json[QString("last_amount")].isNull() && m_last_amount_isValid;

    m_last_date_isValid = ::OpenAPI::fromJsonValue(m_last_date, json[QString("last_date")]);
    m_last_date_isSet = !json[QString("last_date")].isNull() && m_last_date_isValid;

    m_merchant_name_isValid = ::OpenAPI::fromJsonValue(m_merchant_name, json[QString("merchant_name")]);
    m_merchant_name_isSet = !json[QString("merchant_name")].isNull() && m_merchant_name_isValid;

    m_personal_finance_category_isValid = ::OpenAPI::fromJsonValue(m_personal_finance_category, json[QString("personal_finance_category")]);
    m_personal_finance_category_isSet = !json[QString("personal_finance_category")].isNull() && m_personal_finance_category_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_stream_id_isValid = ::OpenAPI::fromJsonValue(m_stream_id, json[QString("stream_id")]);
    m_stream_id_isSet = !json[QString("stream_id")].isNull() && m_stream_id_isValid;

    m_transaction_ids_isValid = ::OpenAPI::fromJsonValue(m_transaction_ids, json[QString("transaction_ids")]);
    m_transaction_ids_isSet = !json[QString("transaction_ids")].isNull() && m_transaction_ids_isValid;
}

QString OAITransactionStream::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransactionStream::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_average_amount.isSet()) {
        obj.insert(QString("average_amount"), ::OpenAPI::toJsonValue(m_average_amount));
    }
    if (m_category.size() > 0) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_category_id_isSet) {
        obj.insert(QString("category_id"), ::OpenAPI::toJsonValue(m_category_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_first_date_isSet) {
        obj.insert(QString("first_date"), ::OpenAPI::toJsonValue(m_first_date));
    }
    if (m_frequency.isSet()) {
        obj.insert(QString("frequency"), ::OpenAPI::toJsonValue(m_frequency));
    }
    if (m_is_active_isSet) {
        obj.insert(QString("is_active"), ::OpenAPI::toJsonValue(m_is_active));
    }
    if (m_last_amount.isSet()) {
        obj.insert(QString("last_amount"), ::OpenAPI::toJsonValue(m_last_amount));
    }
    if (m_last_date_isSet) {
        obj.insert(QString("last_date"), ::OpenAPI::toJsonValue(m_last_date));
    }
    if (m_merchant_name_isSet) {
        obj.insert(QString("merchant_name"), ::OpenAPI::toJsonValue(m_merchant_name));
    }
    if (m_personal_finance_category.isSet()) {
        obj.insert(QString("personal_finance_category"), ::OpenAPI::toJsonValue(m_personal_finance_category));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_stream_id_isSet) {
        obj.insert(QString("stream_id"), ::OpenAPI::toJsonValue(m_stream_id));
    }
    if (m_transaction_ids.size() > 0) {
        obj.insert(QString("transaction_ids"), ::OpenAPI::toJsonValue(m_transaction_ids));
    }
    return obj;
}

QString OAITransactionStream::getAccountId() const {
    return m_account_id;
}
void OAITransactionStream::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAITransactionStream::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAITransactionStream::is_account_id_Valid() const{
    return m_account_id_isValid;
}

OAITransactionStreamAmount OAITransactionStream::getAverageAmount() const {
    return m_average_amount;
}
void OAITransactionStream::setAverageAmount(const OAITransactionStreamAmount &average_amount) {
    m_average_amount = average_amount;
    m_average_amount_isSet = true;
}

bool OAITransactionStream::is_average_amount_Set() const{
    return m_average_amount_isSet;
}

bool OAITransactionStream::is_average_amount_Valid() const{
    return m_average_amount_isValid;
}

QList<QString> OAITransactionStream::getCategory() const {
    return m_category;
}
void OAITransactionStream::setCategory(const QList<QString> &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAITransactionStream::is_category_Set() const{
    return m_category_isSet;
}

bool OAITransactionStream::is_category_Valid() const{
    return m_category_isValid;
}

QString OAITransactionStream::getCategoryId() const {
    return m_category_id;
}
void OAITransactionStream::setCategoryId(const QString &category_id) {
    m_category_id = category_id;
    m_category_id_isSet = true;
}

bool OAITransactionStream::is_category_id_Set() const{
    return m_category_id_isSet;
}

bool OAITransactionStream::is_category_id_Valid() const{
    return m_category_id_isValid;
}

QString OAITransactionStream::getDescription() const {
    return m_description;
}
void OAITransactionStream::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITransactionStream::is_description_Set() const{
    return m_description_isSet;
}

bool OAITransactionStream::is_description_Valid() const{
    return m_description_isValid;
}

QDate OAITransactionStream::getFirstDate() const {
    return m_first_date;
}
void OAITransactionStream::setFirstDate(const QDate &first_date) {
    m_first_date = first_date;
    m_first_date_isSet = true;
}

bool OAITransactionStream::is_first_date_Set() const{
    return m_first_date_isSet;
}

bool OAITransactionStream::is_first_date_Valid() const{
    return m_first_date_isValid;
}

OAIRecurringTransactionFrequency OAITransactionStream::getFrequency() const {
    return m_frequency;
}
void OAITransactionStream::setFrequency(const OAIRecurringTransactionFrequency &frequency) {
    m_frequency = frequency;
    m_frequency_isSet = true;
}

bool OAITransactionStream::is_frequency_Set() const{
    return m_frequency_isSet;
}

bool OAITransactionStream::is_frequency_Valid() const{
    return m_frequency_isValid;
}

bool OAITransactionStream::isIsActive() const {
    return m_is_active;
}
void OAITransactionStream::setIsActive(const bool &is_active) {
    m_is_active = is_active;
    m_is_active_isSet = true;
}

bool OAITransactionStream::is_is_active_Set() const{
    return m_is_active_isSet;
}

bool OAITransactionStream::is_is_active_Valid() const{
    return m_is_active_isValid;
}

OAITransactionStreamAmount OAITransactionStream::getLastAmount() const {
    return m_last_amount;
}
void OAITransactionStream::setLastAmount(const OAITransactionStreamAmount &last_amount) {
    m_last_amount = last_amount;
    m_last_amount_isSet = true;
}

bool OAITransactionStream::is_last_amount_Set() const{
    return m_last_amount_isSet;
}

bool OAITransactionStream::is_last_amount_Valid() const{
    return m_last_amount_isValid;
}

QDate OAITransactionStream::getLastDate() const {
    return m_last_date;
}
void OAITransactionStream::setLastDate(const QDate &last_date) {
    m_last_date = last_date;
    m_last_date_isSet = true;
}

bool OAITransactionStream::is_last_date_Set() const{
    return m_last_date_isSet;
}

bool OAITransactionStream::is_last_date_Valid() const{
    return m_last_date_isValid;
}

QString OAITransactionStream::getMerchantName() const {
    return m_merchant_name;
}
void OAITransactionStream::setMerchantName(const QString &merchant_name) {
    m_merchant_name = merchant_name;
    m_merchant_name_isSet = true;
}

bool OAITransactionStream::is_merchant_name_Set() const{
    return m_merchant_name_isSet;
}

bool OAITransactionStream::is_merchant_name_Valid() const{
    return m_merchant_name_isValid;
}

OAIPersonalFinanceCategory OAITransactionStream::getPersonalFinanceCategory() const {
    return m_personal_finance_category;
}
void OAITransactionStream::setPersonalFinanceCategory(const OAIPersonalFinanceCategory &personal_finance_category) {
    m_personal_finance_category = personal_finance_category;
    m_personal_finance_category_isSet = true;
}

bool OAITransactionStream::is_personal_finance_category_Set() const{
    return m_personal_finance_category_isSet;
}

bool OAITransactionStream::is_personal_finance_category_Valid() const{
    return m_personal_finance_category_isValid;
}

OAITransactionStreamStatus OAITransactionStream::getStatus() const {
    return m_status;
}
void OAITransactionStream::setStatus(const OAITransactionStreamStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAITransactionStream::is_status_Set() const{
    return m_status_isSet;
}

bool OAITransactionStream::is_status_Valid() const{
    return m_status_isValid;
}

QString OAITransactionStream::getStreamId() const {
    return m_stream_id;
}
void OAITransactionStream::setStreamId(const QString &stream_id) {
    m_stream_id = stream_id;
    m_stream_id_isSet = true;
}

bool OAITransactionStream::is_stream_id_Set() const{
    return m_stream_id_isSet;
}

bool OAITransactionStream::is_stream_id_Valid() const{
    return m_stream_id_isValid;
}

QList<QString> OAITransactionStream::getTransactionIds() const {
    return m_transaction_ids;
}
void OAITransactionStream::setTransactionIds(const QList<QString> &transaction_ids) {
    m_transaction_ids = transaction_ids;
    m_transaction_ids_isSet = true;
}

bool OAITransactionStream::is_transaction_ids_Set() const{
    return m_transaction_ids_isSet;
}

bool OAITransactionStream::is_transaction_ids_Valid() const{
    return m_transaction_ids_isValid;
}

bool OAITransactionStream::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_average_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_category.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_frequency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_merchant_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_personal_finance_category.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_stream_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransactionStream::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_average_amount_isValid && m_category_isValid && m_category_id_isValid && m_description_isValid && m_first_date_isValid && m_frequency_isValid && m_is_active_isValid && m_last_amount_isValid && m_last_date_isValid && m_merchant_name_isValid && m_status_isValid && m_stream_id_isValid && m_transaction_ids_isValid && true;
}

} // namespace OpenAPI
