/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetReportRefreshRequestOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetReportRefreshRequestOptions::OAIAssetReportRefreshRequestOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetReportRefreshRequestOptions::OAIAssetReportRefreshRequestOptions() {
    this->initializeModel();
}

OAIAssetReportRefreshRequestOptions::~OAIAssetReportRefreshRequestOptions() {}

void OAIAssetReportRefreshRequestOptions::initializeModel() {

    m_client_report_id_isSet = false;
    m_client_report_id_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;

    m_webhook_isSet = false;
    m_webhook_isValid = false;
}

void OAIAssetReportRefreshRequestOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssetReportRefreshRequestOptions::fromJsonObject(QJsonObject json) {

    m_client_report_id_isValid = ::OpenAPI::fromJsonValue(m_client_report_id, json[QString("client_report_id")]);
    m_client_report_id_isSet = !json[QString("client_report_id")].isNull() && m_client_report_id_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;

    m_webhook_isValid = ::OpenAPI::fromJsonValue(m_webhook, json[QString("webhook")]);
    m_webhook_isSet = !json[QString("webhook")].isNull() && m_webhook_isValid;
}

QString OAIAssetReportRefreshRequestOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssetReportRefreshRequestOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_client_report_id_isSet) {
        obj.insert(QString("client_report_id"), ::OpenAPI::toJsonValue(m_client_report_id));
    }
    if (m_user.isSet()) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    if (m_webhook_isSet) {
        obj.insert(QString("webhook"), ::OpenAPI::toJsonValue(m_webhook));
    }
    return obj;
}

QString OAIAssetReportRefreshRequestOptions::getClientReportId() const {
    return m_client_report_id;
}
void OAIAssetReportRefreshRequestOptions::setClientReportId(const QString &client_report_id) {
    m_client_report_id = client_report_id;
    m_client_report_id_isSet = true;
}

bool OAIAssetReportRefreshRequestOptions::is_client_report_id_Set() const{
    return m_client_report_id_isSet;
}

bool OAIAssetReportRefreshRequestOptions::is_client_report_id_Valid() const{
    return m_client_report_id_isValid;
}

OAIAssetReportUser OAIAssetReportRefreshRequestOptions::getUser() const {
    return m_user;
}
void OAIAssetReportRefreshRequestOptions::setUser(const OAIAssetReportUser &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIAssetReportRefreshRequestOptions::is_user_Set() const{
    return m_user_isSet;
}

bool OAIAssetReportRefreshRequestOptions::is_user_Valid() const{
    return m_user_isValid;
}

QString OAIAssetReportRefreshRequestOptions::getWebhook() const {
    return m_webhook;
}
void OAIAssetReportRefreshRequestOptions::setWebhook(const QString &webhook) {
    m_webhook = webhook;
    m_webhook_isSet = true;
}

bool OAIAssetReportRefreshRequestOptions::is_webhook_Set() const{
    return m_webhook_isSet;
}

bool OAIAssetReportRefreshRequestOptions::is_webhook_Valid() const{
    return m_webhook_isValid;
}

bool OAIAssetReportRefreshRequestOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_report_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssetReportRefreshRequestOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
