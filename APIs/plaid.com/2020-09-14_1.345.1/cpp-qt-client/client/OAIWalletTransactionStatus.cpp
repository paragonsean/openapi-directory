/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWalletTransactionStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWalletTransactionStatus::OAIWalletTransactionStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWalletTransactionStatus::OAIWalletTransactionStatus() {
    this->initializeModel();
}

OAIWalletTransactionStatus::~OAIWalletTransactionStatus() {}

void OAIWalletTransactionStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIWalletTransactionStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIWalletTransactionStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AUTHORISING", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWalletTransactionStatus::AUTHORISING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INITIATED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWalletTransactionStatus::INITIATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EXECUTED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWalletTransactionStatus::EXECUTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SETTLED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWalletTransactionStatus::SETTLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BLOCKED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWalletTransactionStatus::BLOCKED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FAILED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWalletTransactionStatus::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIWalletTransactionStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIWalletTransactionStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIWalletTransactionStatus::AUTHORISING:
            val = "AUTHORISING";
            break;
        case eOAIWalletTransactionStatus::INITIATED:
            val = "INITIATED";
            break;
        case eOAIWalletTransactionStatus::EXECUTED:
            val = "EXECUTED";
            break;
        case eOAIWalletTransactionStatus::SETTLED:
            val = "SETTLED";
            break;
        case eOAIWalletTransactionStatus::BLOCKED:
            val = "BLOCKED";
            break;
        case eOAIWalletTransactionStatus::FAILED:
            val = "FAILED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIWalletTransactionStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIWalletTransactionStatus::eOAIWalletTransactionStatus OAIWalletTransactionStatus::getValue() const {
    return m_value;
}

void OAIWalletTransactionStatus::setValue(const OAIWalletTransactionStatus::eOAIWalletTransactionStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIWalletTransactionStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIWalletTransactionStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
