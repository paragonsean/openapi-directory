/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserStatedIncomeSourceCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserStatedIncomeSourceCategory::OAIUserStatedIncomeSourceCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserStatedIncomeSourceCategory::OAIUserStatedIncomeSourceCategory() {
    this->initializeModel();
}

OAIUserStatedIncomeSourceCategory::~OAIUserStatedIncomeSourceCategory() {}

void OAIUserStatedIncomeSourceCategory::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIUserStatedIncomeSourceCategory::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIUserStatedIncomeSourceCategory::fromJson(QString jsonString) {
    
    if ( jsonString.compare("OTHER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserStatedIncomeSourceCategory::OTHER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SALARY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserStatedIncomeSourceCategory::SALARY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UNEMPLOYMENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserStatedIncomeSourceCategory::UNEMPLOYMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CASH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserStatedIncomeSourceCategory::CASH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GIG_ECONOMY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserStatedIncomeSourceCategory::GIG_ECONOMY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RENTAL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserStatedIncomeSourceCategory::RENTAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CHILD_SUPPORT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserStatedIncomeSourceCategory::CHILD_SUPPORT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MILITARY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserStatedIncomeSourceCategory::MILITARY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RETIREMENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserStatedIncomeSourceCategory::RETIREMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LONG_TERM_DISABILITY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserStatedIncomeSourceCategory::LONG_TERM_DISABILITY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BANK_INTEREST", Qt::CaseInsensitive) == 0) {
        m_value = eOAIUserStatedIncomeSourceCategory::BANK_INTEREST;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIUserStatedIncomeSourceCategory::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIUserStatedIncomeSourceCategory::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIUserStatedIncomeSourceCategory::OTHER:
            val = "OTHER";
            break;
        case eOAIUserStatedIncomeSourceCategory::SALARY:
            val = "SALARY";
            break;
        case eOAIUserStatedIncomeSourceCategory::UNEMPLOYMENT:
            val = "UNEMPLOYMENT";
            break;
        case eOAIUserStatedIncomeSourceCategory::CASH:
            val = "CASH";
            break;
        case eOAIUserStatedIncomeSourceCategory::GIG_ECONOMY:
            val = "GIG_ECONOMY";
            break;
        case eOAIUserStatedIncomeSourceCategory::RENTAL:
            val = "RENTAL";
            break;
        case eOAIUserStatedIncomeSourceCategory::CHILD_SUPPORT:
            val = "CHILD_SUPPORT";
            break;
        case eOAIUserStatedIncomeSourceCategory::MILITARY:
            val = "MILITARY";
            break;
        case eOAIUserStatedIncomeSourceCategory::RETIREMENT:
            val = "RETIREMENT";
            break;
        case eOAIUserStatedIncomeSourceCategory::LONG_TERM_DISABILITY:
            val = "LONG_TERM_DISABILITY";
            break;
        case eOAIUserStatedIncomeSourceCategory::BANK_INTEREST:
            val = "BANK_INTEREST";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIUserStatedIncomeSourceCategory::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIUserStatedIncomeSourceCategory::eOAIUserStatedIncomeSourceCategory OAIUserStatedIncomeSourceCategory::getValue() const {
    return m_value;
}

void OAIUserStatedIncomeSourceCategory::setValue(const OAIUserStatedIncomeSourceCategory::eOAIUserStatedIncomeSourceCategory& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIUserStatedIncomeSourceCategory::isSet() const {
    
    return m_value_isSet;
}

bool OAIUserStatedIncomeSourceCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
