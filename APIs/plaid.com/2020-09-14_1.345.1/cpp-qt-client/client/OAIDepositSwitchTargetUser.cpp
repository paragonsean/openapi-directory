/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDepositSwitchTargetUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDepositSwitchTargetUser::OAIDepositSwitchTargetUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDepositSwitchTargetUser::OAIDepositSwitchTargetUser() {
    this->initializeModel();
}

OAIDepositSwitchTargetUser::~OAIDepositSwitchTargetUser() {}

void OAIDepositSwitchTargetUser::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_family_name_isSet = false;
    m_family_name_isValid = false;

    m_given_name_isSet = false;
    m_given_name_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_tax_payer_id_isSet = false;
    m_tax_payer_id_isValid = false;
}

void OAIDepositSwitchTargetUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDepositSwitchTargetUser::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_family_name_isValid = ::OpenAPI::fromJsonValue(m_family_name, json[QString("family_name")]);
    m_family_name_isSet = !json[QString("family_name")].isNull() && m_family_name_isValid;

    m_given_name_isValid = ::OpenAPI::fromJsonValue(m_given_name, json[QString("given_name")]);
    m_given_name_isSet = !json[QString("given_name")].isNull() && m_given_name_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_tax_payer_id_isValid = ::OpenAPI::fromJsonValue(m_tax_payer_id, json[QString("tax_payer_id")]);
    m_tax_payer_id_isSet = !json[QString("tax_payer_id")].isNull() && m_tax_payer_id_isValid;
}

QString OAIDepositSwitchTargetUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDepositSwitchTargetUser::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_family_name_isSet) {
        obj.insert(QString("family_name"), ::OpenAPI::toJsonValue(m_family_name));
    }
    if (m_given_name_isSet) {
        obj.insert(QString("given_name"), ::OpenAPI::toJsonValue(m_given_name));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_tax_payer_id_isSet) {
        obj.insert(QString("tax_payer_id"), ::OpenAPI::toJsonValue(m_tax_payer_id));
    }
    return obj;
}

OAIDepositSwitchAddressData OAIDepositSwitchTargetUser::getAddress() const {
    return m_address;
}
void OAIDepositSwitchTargetUser::setAddress(const OAIDepositSwitchAddressData &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIDepositSwitchTargetUser::is_address_Set() const{
    return m_address_isSet;
}

bool OAIDepositSwitchTargetUser::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIDepositSwitchTargetUser::getEmail() const {
    return m_email;
}
void OAIDepositSwitchTargetUser::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIDepositSwitchTargetUser::is_email_Set() const{
    return m_email_isSet;
}

bool OAIDepositSwitchTargetUser::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIDepositSwitchTargetUser::getFamilyName() const {
    return m_family_name;
}
void OAIDepositSwitchTargetUser::setFamilyName(const QString &family_name) {
    m_family_name = family_name;
    m_family_name_isSet = true;
}

bool OAIDepositSwitchTargetUser::is_family_name_Set() const{
    return m_family_name_isSet;
}

bool OAIDepositSwitchTargetUser::is_family_name_Valid() const{
    return m_family_name_isValid;
}

QString OAIDepositSwitchTargetUser::getGivenName() const {
    return m_given_name;
}
void OAIDepositSwitchTargetUser::setGivenName(const QString &given_name) {
    m_given_name = given_name;
    m_given_name_isSet = true;
}

bool OAIDepositSwitchTargetUser::is_given_name_Set() const{
    return m_given_name_isSet;
}

bool OAIDepositSwitchTargetUser::is_given_name_Valid() const{
    return m_given_name_isValid;
}

QString OAIDepositSwitchTargetUser::getPhone() const {
    return m_phone;
}
void OAIDepositSwitchTargetUser::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIDepositSwitchTargetUser::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIDepositSwitchTargetUser::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAIDepositSwitchTargetUser::getTaxPayerId() const {
    return m_tax_payer_id;
}
void OAIDepositSwitchTargetUser::setTaxPayerId(const QString &tax_payer_id) {
    m_tax_payer_id = tax_payer_id;
    m_tax_payer_id_isSet = true;
}

bool OAIDepositSwitchTargetUser::is_tax_payer_id_Set() const{
    return m_tax_payer_id_isSet;
}

bool OAIDepositSwitchTargetUser::is_tax_payer_id_Valid() const{
    return m_tax_payer_id_isValid;
}

bool OAIDepositSwitchTargetUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_family_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_given_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_payer_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDepositSwitchTargetUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_isValid && m_family_name_isValid && m_given_name_isValid && m_phone_isValid && true;
}

} // namespace OpenAPI
