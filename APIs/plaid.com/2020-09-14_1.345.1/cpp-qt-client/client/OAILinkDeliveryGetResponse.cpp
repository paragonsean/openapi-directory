/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkDeliveryGetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkDeliveryGetResponse::OAILinkDeliveryGetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkDeliveryGetResponse::OAILinkDeliveryGetResponse() {
    this->initializeModel();
}

OAILinkDeliveryGetResponse::~OAILinkDeliveryGetResponse() {}

void OAILinkDeliveryGetResponse::initializeModel() {

    m_access_tokens_isSet = false;
    m_access_tokens_isValid = false;

    m_completed_at_isSet = false;
    m_completed_at_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_item_ids_isSet = false;
    m_item_ids_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAILinkDeliveryGetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkDeliveryGetResponse::fromJsonObject(QJsonObject json) {

    m_access_tokens_isValid = ::OpenAPI::fromJsonValue(m_access_tokens, json[QString("access_tokens")]);
    m_access_tokens_isSet = !json[QString("access_tokens")].isNull() && m_access_tokens_isValid;

    m_completed_at_isValid = ::OpenAPI::fromJsonValue(m_completed_at, json[QString("completed_at")]);
    m_completed_at_isSet = !json[QString("completed_at")].isNull() && m_completed_at_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_item_ids_isValid = ::OpenAPI::fromJsonValue(m_item_ids, json[QString("item_ids")]);
    m_item_ids_isSet = !json[QString("item_ids")].isNull() && m_item_ids_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("request_id")]);
    m_request_id_isSet = !json[QString("request_id")].isNull() && m_request_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAILinkDeliveryGetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkDeliveryGetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_access_tokens.size() > 0) {
        obj.insert(QString("access_tokens"), ::OpenAPI::toJsonValue(m_access_tokens));
    }
    if (m_completed_at_isSet) {
        obj.insert(QString("completed_at"), ::OpenAPI::toJsonValue(m_completed_at));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_item_ids.size() > 0) {
        obj.insert(QString("item_ids"), ::OpenAPI::toJsonValue(m_item_ids));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("request_id"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QList<QString> OAILinkDeliveryGetResponse::getAccessTokens() const {
    return m_access_tokens;
}
void OAILinkDeliveryGetResponse::setAccessTokens(const QList<QString> &access_tokens) {
    m_access_tokens = access_tokens;
    m_access_tokens_isSet = true;
}

bool OAILinkDeliveryGetResponse::is_access_tokens_Set() const{
    return m_access_tokens_isSet;
}

bool OAILinkDeliveryGetResponse::is_access_tokens_Valid() const{
    return m_access_tokens_isValid;
}

QDateTime OAILinkDeliveryGetResponse::getCompletedAt() const {
    return m_completed_at;
}
void OAILinkDeliveryGetResponse::setCompletedAt(const QDateTime &completed_at) {
    m_completed_at = completed_at;
    m_completed_at_isSet = true;
}

bool OAILinkDeliveryGetResponse::is_completed_at_Set() const{
    return m_completed_at_isSet;
}

bool OAILinkDeliveryGetResponse::is_completed_at_Valid() const{
    return m_completed_at_isValid;
}

QDateTime OAILinkDeliveryGetResponse::getCreatedAt() const {
    return m_created_at;
}
void OAILinkDeliveryGetResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAILinkDeliveryGetResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAILinkDeliveryGetResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QList<QString> OAILinkDeliveryGetResponse::getItemIds() const {
    return m_item_ids;
}
void OAILinkDeliveryGetResponse::setItemIds(const QList<QString> &item_ids) {
    m_item_ids = item_ids;
    m_item_ids_isSet = true;
}

bool OAILinkDeliveryGetResponse::is_item_ids_Set() const{
    return m_item_ids_isSet;
}

bool OAILinkDeliveryGetResponse::is_item_ids_Valid() const{
    return m_item_ids_isValid;
}

QString OAILinkDeliveryGetResponse::getRequestId() const {
    return m_request_id;
}
void OAILinkDeliveryGetResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAILinkDeliveryGetResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAILinkDeliveryGetResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

OAILinkDeliverySessionStatus OAILinkDeliveryGetResponse::getStatus() const {
    return m_status;
}
void OAILinkDeliveryGetResponse::setStatus(const OAILinkDeliverySessionStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAILinkDeliveryGetResponse::is_status_Set() const{
    return m_status_isSet;
}

bool OAILinkDeliveryGetResponse::is_status_Valid() const{
    return m_status_isValid;
}

bool OAILinkDeliveryGetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_tokens.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_completed_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkDeliveryGetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_at_isValid && m_request_id_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
