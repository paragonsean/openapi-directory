/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRiskCheckBehavior.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRiskCheckBehavior::OAIRiskCheckBehavior(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRiskCheckBehavior::OAIRiskCheckBehavior() {
    this->initializeModel();
}

OAIRiskCheckBehavior::~OAIRiskCheckBehavior() {}

void OAIRiskCheckBehavior::initializeModel() {

    m_bot_detected_isSet = false;
    m_bot_detected_isValid = false;

    m_fraud_ring_detected_isSet = false;
    m_fraud_ring_detected_isValid = false;

    m_user_interactions_isSet = false;
    m_user_interactions_isValid = false;
}

void OAIRiskCheckBehavior::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRiskCheckBehavior::fromJsonObject(QJsonObject json) {

    m_bot_detected_isValid = ::OpenAPI::fromJsonValue(m_bot_detected, json[QString("bot_detected")]);
    m_bot_detected_isSet = !json[QString("bot_detected")].isNull() && m_bot_detected_isValid;

    m_fraud_ring_detected_isValid = ::OpenAPI::fromJsonValue(m_fraud_ring_detected, json[QString("fraud_ring_detected")]);
    m_fraud_ring_detected_isSet = !json[QString("fraud_ring_detected")].isNull() && m_fraud_ring_detected_isValid;

    m_user_interactions_isValid = ::OpenAPI::fromJsonValue(m_user_interactions, json[QString("user_interactions")]);
    m_user_interactions_isSet = !json[QString("user_interactions")].isNull() && m_user_interactions_isValid;
}

QString OAIRiskCheckBehavior::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRiskCheckBehavior::asJsonObject() const {
    QJsonObject obj;
    if (m_bot_detected.isSet()) {
        obj.insert(QString("bot_detected"), ::OpenAPI::toJsonValue(m_bot_detected));
    }
    if (m_fraud_ring_detected.isSet()) {
        obj.insert(QString("fraud_ring_detected"), ::OpenAPI::toJsonValue(m_fraud_ring_detected));
    }
    if (m_user_interactions.isSet()) {
        obj.insert(QString("user_interactions"), ::OpenAPI::toJsonValue(m_user_interactions));
    }
    return obj;
}

OAIRiskCheckBehaviorBotDetectedLabel OAIRiskCheckBehavior::getBotDetected() const {
    return m_bot_detected;
}
void OAIRiskCheckBehavior::setBotDetected(const OAIRiskCheckBehaviorBotDetectedLabel &bot_detected) {
    m_bot_detected = bot_detected;
    m_bot_detected_isSet = true;
}

bool OAIRiskCheckBehavior::is_bot_detected_Set() const{
    return m_bot_detected_isSet;
}

bool OAIRiskCheckBehavior::is_bot_detected_Valid() const{
    return m_bot_detected_isValid;
}

OAIRiskCheckBehaviorFraudRingDetectedLabel OAIRiskCheckBehavior::getFraudRingDetected() const {
    return m_fraud_ring_detected;
}
void OAIRiskCheckBehavior::setFraudRingDetected(const OAIRiskCheckBehaviorFraudRingDetectedLabel &fraud_ring_detected) {
    m_fraud_ring_detected = fraud_ring_detected;
    m_fraud_ring_detected_isSet = true;
}

bool OAIRiskCheckBehavior::is_fraud_ring_detected_Set() const{
    return m_fraud_ring_detected_isSet;
}

bool OAIRiskCheckBehavior::is_fraud_ring_detected_Valid() const{
    return m_fraud_ring_detected_isValid;
}

OAIRiskCheckBehaviorUserInteractionsLabel OAIRiskCheckBehavior::getUserInteractions() const {
    return m_user_interactions;
}
void OAIRiskCheckBehavior::setUserInteractions(const OAIRiskCheckBehaviorUserInteractionsLabel &user_interactions) {
    m_user_interactions = user_interactions;
    m_user_interactions_isSet = true;
}

bool OAIRiskCheckBehavior::is_user_interactions_Set() const{
    return m_user_interactions_isSet;
}

bool OAIRiskCheckBehavior::is_user_interactions_Valid() const{
    return m_user_interactions_isValid;
}

bool OAIRiskCheckBehavior::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bot_detected.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fraud_ring_detected.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_interactions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRiskCheckBehavior::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bot_detected_isValid && m_fraud_ring_detected_isValid && m_user_interactions_isValid && true;
}

} // namespace OpenAPI
