/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIDNumberType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIDNumberType::OAIIDNumberType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIDNumberType::OAIIDNumberType() {
    this->initializeModel();
}

OAIIDNumberType::~OAIIDNumberType() {}

void OAIIDNumberType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIIDNumberType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIIDNumberType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ar_dni", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::AR_DNI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("au_drivers_license", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::AU_DRIVERS_LICENSE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("au_passport", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::AU_PASSPORT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("br_cpf", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::BR_CPF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ca_sin", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::CA_SIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("cl_run", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::CL_RUN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("cn_resident_card", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::CN_RESIDENT_CARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("co_nit", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::CO_NIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("dk_cpr", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::DK_CPR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("eg_national_id", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::EG_NATIONAL_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("es_dni", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::ES_DNI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("es_nie", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::ES_NIE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("hk_hkid", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::HK_HKID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("in_pan", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::IN_PAN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("it_cf", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::IT_CF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("jo_civil_id", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::JO_CIVIL_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("jp_my_number", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::JP_MY_NUMBER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ke_huduma_namba", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::KE_HUDUMA_NAMBA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("kw_civil_id", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::KW_CIVIL_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mx_curp", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::MX_CURP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("mx_rfc", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::MX_RFC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("my_nric", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::MY_NRIC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ng_nin", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::NG_NIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("nz_drivers_license", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::NZ_DRIVERS_LICENSE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("om_civil_id", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::OM_CIVIL_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ph_psn", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::PH_PSN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("pl_pesel", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::PL_PESEL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ro_cnp", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::RO_CNP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sa_national_id", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::SA_NATIONAL_ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("se_pin", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::SE_PIN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sg_nric", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::SG_NRIC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("tr_tc_kimlik", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::TR_TC_KIMLIK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("us_ssn", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::US_SSN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("us_ssn_last_4", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::US_SSN_LAST_4;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("za_smart_id", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIDNumberType::ZA_SMART_ID;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIIDNumberType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIIDNumberType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIIDNumberType::AR_DNI:
            val = "ar_dni";
            break;
        case eOAIIDNumberType::AU_DRIVERS_LICENSE:
            val = "au_drivers_license";
            break;
        case eOAIIDNumberType::AU_PASSPORT:
            val = "au_passport";
            break;
        case eOAIIDNumberType::BR_CPF:
            val = "br_cpf";
            break;
        case eOAIIDNumberType::CA_SIN:
            val = "ca_sin";
            break;
        case eOAIIDNumberType::CL_RUN:
            val = "cl_run";
            break;
        case eOAIIDNumberType::CN_RESIDENT_CARD:
            val = "cn_resident_card";
            break;
        case eOAIIDNumberType::CO_NIT:
            val = "co_nit";
            break;
        case eOAIIDNumberType::DK_CPR:
            val = "dk_cpr";
            break;
        case eOAIIDNumberType::EG_NATIONAL_ID:
            val = "eg_national_id";
            break;
        case eOAIIDNumberType::ES_DNI:
            val = "es_dni";
            break;
        case eOAIIDNumberType::ES_NIE:
            val = "es_nie";
            break;
        case eOAIIDNumberType::HK_HKID:
            val = "hk_hkid";
            break;
        case eOAIIDNumberType::IN_PAN:
            val = "in_pan";
            break;
        case eOAIIDNumberType::IT_CF:
            val = "it_cf";
            break;
        case eOAIIDNumberType::JO_CIVIL_ID:
            val = "jo_civil_id";
            break;
        case eOAIIDNumberType::JP_MY_NUMBER:
            val = "jp_my_number";
            break;
        case eOAIIDNumberType::KE_HUDUMA_NAMBA:
            val = "ke_huduma_namba";
            break;
        case eOAIIDNumberType::KW_CIVIL_ID:
            val = "kw_civil_id";
            break;
        case eOAIIDNumberType::MX_CURP:
            val = "mx_curp";
            break;
        case eOAIIDNumberType::MX_RFC:
            val = "mx_rfc";
            break;
        case eOAIIDNumberType::MY_NRIC:
            val = "my_nric";
            break;
        case eOAIIDNumberType::NG_NIN:
            val = "ng_nin";
            break;
        case eOAIIDNumberType::NZ_DRIVERS_LICENSE:
            val = "nz_drivers_license";
            break;
        case eOAIIDNumberType::OM_CIVIL_ID:
            val = "om_civil_id";
            break;
        case eOAIIDNumberType::PH_PSN:
            val = "ph_psn";
            break;
        case eOAIIDNumberType::PL_PESEL:
            val = "pl_pesel";
            break;
        case eOAIIDNumberType::RO_CNP:
            val = "ro_cnp";
            break;
        case eOAIIDNumberType::SA_NATIONAL_ID:
            val = "sa_national_id";
            break;
        case eOAIIDNumberType::SE_PIN:
            val = "se_pin";
            break;
        case eOAIIDNumberType::SG_NRIC:
            val = "sg_nric";
            break;
        case eOAIIDNumberType::TR_TC_KIMLIK:
            val = "tr_tc_kimlik";
            break;
        case eOAIIDNumberType::US_SSN:
            val = "us_ssn";
            break;
        case eOAIIDNumberType::US_SSN_LAST_4:
            val = "us_ssn_last_4";
            break;
        case eOAIIDNumberType::ZA_SMART_ID:
            val = "za_smart_id";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIIDNumberType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIIDNumberType::eOAIIDNumberType OAIIDNumberType::getValue() const {
    return m_value;
}

void OAIIDNumberType::setValue(const OAIIDNumberType::eOAIIDNumberType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIIDNumberType::isSet() const {
    
    return m_value_isSet;
}

bool OAIIDNumberType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
