/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISignalPersonName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISignalPersonName::OAISignalPersonName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISignalPersonName::OAISignalPersonName() {
    this->initializeModel();
}

OAISignalPersonName::~OAISignalPersonName() {}

void OAISignalPersonName::initializeModel() {

    m_family_name_isSet = false;
    m_family_name_isValid = false;

    m_given_name_isSet = false;
    m_given_name_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_prefix_isSet = false;
    m_prefix_isValid = false;

    m_suffix_isSet = false;
    m_suffix_isValid = false;
}

void OAISignalPersonName::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISignalPersonName::fromJsonObject(QJsonObject json) {

    m_family_name_isValid = ::OpenAPI::fromJsonValue(m_family_name, json[QString("family_name")]);
    m_family_name_isSet = !json[QString("family_name")].isNull() && m_family_name_isValid;

    m_given_name_isValid = ::OpenAPI::fromJsonValue(m_given_name, json[QString("given_name")]);
    m_given_name_isSet = !json[QString("given_name")].isNull() && m_given_name_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middle_name")]);
    m_middle_name_isSet = !json[QString("middle_name")].isNull() && m_middle_name_isValid;

    m_prefix_isValid = ::OpenAPI::fromJsonValue(m_prefix, json[QString("prefix")]);
    m_prefix_isSet = !json[QString("prefix")].isNull() && m_prefix_isValid;

    m_suffix_isValid = ::OpenAPI::fromJsonValue(m_suffix, json[QString("suffix")]);
    m_suffix_isSet = !json[QString("suffix")].isNull() && m_suffix_isValid;
}

QString OAISignalPersonName::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISignalPersonName::asJsonObject() const {
    QJsonObject obj;
    if (m_family_name_isSet) {
        obj.insert(QString("family_name"), ::OpenAPI::toJsonValue(m_family_name));
    }
    if (m_given_name_isSet) {
        obj.insert(QString("given_name"), ::OpenAPI::toJsonValue(m_given_name));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middle_name"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_prefix_isSet) {
        obj.insert(QString("prefix"), ::OpenAPI::toJsonValue(m_prefix));
    }
    if (m_suffix_isSet) {
        obj.insert(QString("suffix"), ::OpenAPI::toJsonValue(m_suffix));
    }
    return obj;
}

QString OAISignalPersonName::getFamilyName() const {
    return m_family_name;
}
void OAISignalPersonName::setFamilyName(const QString &family_name) {
    m_family_name = family_name;
    m_family_name_isSet = true;
}

bool OAISignalPersonName::is_family_name_Set() const{
    return m_family_name_isSet;
}

bool OAISignalPersonName::is_family_name_Valid() const{
    return m_family_name_isValid;
}

QString OAISignalPersonName::getGivenName() const {
    return m_given_name;
}
void OAISignalPersonName::setGivenName(const QString &given_name) {
    m_given_name = given_name;
    m_given_name_isSet = true;
}

bool OAISignalPersonName::is_given_name_Set() const{
    return m_given_name_isSet;
}

bool OAISignalPersonName::is_given_name_Valid() const{
    return m_given_name_isValid;
}

QString OAISignalPersonName::getMiddleName() const {
    return m_middle_name;
}
void OAISignalPersonName::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAISignalPersonName::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAISignalPersonName::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAISignalPersonName::getPrefix() const {
    return m_prefix;
}
void OAISignalPersonName::setPrefix(const QString &prefix) {
    m_prefix = prefix;
    m_prefix_isSet = true;
}

bool OAISignalPersonName::is_prefix_Set() const{
    return m_prefix_isSet;
}

bool OAISignalPersonName::is_prefix_Valid() const{
    return m_prefix_isValid;
}

QString OAISignalPersonName::getSuffix() const {
    return m_suffix;
}
void OAISignalPersonName::setSuffix(const QString &suffix) {
    m_suffix = suffix;
    m_suffix_isSet = true;
}

bool OAISignalPersonName::is_suffix_Set() const{
    return m_suffix_isSet;
}

bool OAISignalPersonName::is_suffix_Valid() const{
    return m_suffix_isValid;
}

bool OAISignalPersonName::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_family_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_given_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suffix_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISignalPersonName::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
