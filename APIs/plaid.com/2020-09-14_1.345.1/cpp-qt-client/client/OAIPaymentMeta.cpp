/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentMeta.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentMeta::OAIPaymentMeta(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentMeta::OAIPaymentMeta() {
    this->initializeModel();
}

OAIPaymentMeta::~OAIPaymentMeta() {}

void OAIPaymentMeta::initializeModel() {

    m_by_order_of_isSet = false;
    m_by_order_of_isValid = false;

    m_payee_isSet = false;
    m_payee_isValid = false;

    m_payer_isSet = false;
    m_payer_isValid = false;

    m_payment_method_isSet = false;
    m_payment_method_isValid = false;

    m_payment_processor_isSet = false;
    m_payment_processor_isValid = false;

    m_ppd_id_isSet = false;
    m_ppd_id_isValid = false;

    m_reason_isSet = false;
    m_reason_isValid = false;

    m_reference_number_isSet = false;
    m_reference_number_isValid = false;
}

void OAIPaymentMeta::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentMeta::fromJsonObject(QJsonObject json) {

    m_by_order_of_isValid = ::OpenAPI::fromJsonValue(m_by_order_of, json[QString("by_order_of")]);
    m_by_order_of_isSet = !json[QString("by_order_of")].isNull() && m_by_order_of_isValid;

    m_payee_isValid = ::OpenAPI::fromJsonValue(m_payee, json[QString("payee")]);
    m_payee_isSet = !json[QString("payee")].isNull() && m_payee_isValid;

    m_payer_isValid = ::OpenAPI::fromJsonValue(m_payer, json[QString("payer")]);
    m_payer_isSet = !json[QString("payer")].isNull() && m_payer_isValid;

    m_payment_method_isValid = ::OpenAPI::fromJsonValue(m_payment_method, json[QString("payment_method")]);
    m_payment_method_isSet = !json[QString("payment_method")].isNull() && m_payment_method_isValid;

    m_payment_processor_isValid = ::OpenAPI::fromJsonValue(m_payment_processor, json[QString("payment_processor")]);
    m_payment_processor_isSet = !json[QString("payment_processor")].isNull() && m_payment_processor_isValid;

    m_ppd_id_isValid = ::OpenAPI::fromJsonValue(m_ppd_id, json[QString("ppd_id")]);
    m_ppd_id_isSet = !json[QString("ppd_id")].isNull() && m_ppd_id_isValid;

    m_reason_isValid = ::OpenAPI::fromJsonValue(m_reason, json[QString("reason")]);
    m_reason_isSet = !json[QString("reason")].isNull() && m_reason_isValid;

    m_reference_number_isValid = ::OpenAPI::fromJsonValue(m_reference_number, json[QString("reference_number")]);
    m_reference_number_isSet = !json[QString("reference_number")].isNull() && m_reference_number_isValid;
}

QString OAIPaymentMeta::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentMeta::asJsonObject() const {
    QJsonObject obj;
    if (m_by_order_of_isSet) {
        obj.insert(QString("by_order_of"), ::OpenAPI::toJsonValue(m_by_order_of));
    }
    if (m_payee_isSet) {
        obj.insert(QString("payee"), ::OpenAPI::toJsonValue(m_payee));
    }
    if (m_payer_isSet) {
        obj.insert(QString("payer"), ::OpenAPI::toJsonValue(m_payer));
    }
    if (m_payment_method_isSet) {
        obj.insert(QString("payment_method"), ::OpenAPI::toJsonValue(m_payment_method));
    }
    if (m_payment_processor_isSet) {
        obj.insert(QString("payment_processor"), ::OpenAPI::toJsonValue(m_payment_processor));
    }
    if (m_ppd_id_isSet) {
        obj.insert(QString("ppd_id"), ::OpenAPI::toJsonValue(m_ppd_id));
    }
    if (m_reason_isSet) {
        obj.insert(QString("reason"), ::OpenAPI::toJsonValue(m_reason));
    }
    if (m_reference_number_isSet) {
        obj.insert(QString("reference_number"), ::OpenAPI::toJsonValue(m_reference_number));
    }
    return obj;
}

QString OAIPaymentMeta::getByOrderOf() const {
    return m_by_order_of;
}
void OAIPaymentMeta::setByOrderOf(const QString &by_order_of) {
    m_by_order_of = by_order_of;
    m_by_order_of_isSet = true;
}

bool OAIPaymentMeta::is_by_order_of_Set() const{
    return m_by_order_of_isSet;
}

bool OAIPaymentMeta::is_by_order_of_Valid() const{
    return m_by_order_of_isValid;
}

QString OAIPaymentMeta::getPayee() const {
    return m_payee;
}
void OAIPaymentMeta::setPayee(const QString &payee) {
    m_payee = payee;
    m_payee_isSet = true;
}

bool OAIPaymentMeta::is_payee_Set() const{
    return m_payee_isSet;
}

bool OAIPaymentMeta::is_payee_Valid() const{
    return m_payee_isValid;
}

QString OAIPaymentMeta::getPayer() const {
    return m_payer;
}
void OAIPaymentMeta::setPayer(const QString &payer) {
    m_payer = payer;
    m_payer_isSet = true;
}

bool OAIPaymentMeta::is_payer_Set() const{
    return m_payer_isSet;
}

bool OAIPaymentMeta::is_payer_Valid() const{
    return m_payer_isValid;
}

QString OAIPaymentMeta::getPaymentMethod() const {
    return m_payment_method;
}
void OAIPaymentMeta::setPaymentMethod(const QString &payment_method) {
    m_payment_method = payment_method;
    m_payment_method_isSet = true;
}

bool OAIPaymentMeta::is_payment_method_Set() const{
    return m_payment_method_isSet;
}

bool OAIPaymentMeta::is_payment_method_Valid() const{
    return m_payment_method_isValid;
}

QString OAIPaymentMeta::getPaymentProcessor() const {
    return m_payment_processor;
}
void OAIPaymentMeta::setPaymentProcessor(const QString &payment_processor) {
    m_payment_processor = payment_processor;
    m_payment_processor_isSet = true;
}

bool OAIPaymentMeta::is_payment_processor_Set() const{
    return m_payment_processor_isSet;
}

bool OAIPaymentMeta::is_payment_processor_Valid() const{
    return m_payment_processor_isValid;
}

QString OAIPaymentMeta::getPpdId() const {
    return m_ppd_id;
}
void OAIPaymentMeta::setPpdId(const QString &ppd_id) {
    m_ppd_id = ppd_id;
    m_ppd_id_isSet = true;
}

bool OAIPaymentMeta::is_ppd_id_Set() const{
    return m_ppd_id_isSet;
}

bool OAIPaymentMeta::is_ppd_id_Valid() const{
    return m_ppd_id_isValid;
}

QString OAIPaymentMeta::getReason() const {
    return m_reason;
}
void OAIPaymentMeta::setReason(const QString &reason) {
    m_reason = reason;
    m_reason_isSet = true;
}

bool OAIPaymentMeta::is_reason_Set() const{
    return m_reason_isSet;
}

bool OAIPaymentMeta::is_reason_Valid() const{
    return m_reason_isValid;
}

QString OAIPaymentMeta::getReferenceNumber() const {
    return m_reference_number;
}
void OAIPaymentMeta::setReferenceNumber(const QString &reference_number) {
    m_reference_number = reference_number;
    m_reference_number_isSet = true;
}

bool OAIPaymentMeta::is_reference_number_Set() const{
    return m_reference_number_isSet;
}

bool OAIPaymentMeta::is_reference_number_Valid() const{
    return m_reference_number_isValid;
}

bool OAIPaymentMeta::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_by_order_of_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_processor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ppd_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentMeta::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_by_order_of_isValid && m_payee_isValid && m_payer_isValid && m_payment_method_isValid && m_payment_processor_isValid && m_ppd_id_isValid && m_reason_isValid && m_reference_number_isValid && true;
}

} // namespace OpenAPI
