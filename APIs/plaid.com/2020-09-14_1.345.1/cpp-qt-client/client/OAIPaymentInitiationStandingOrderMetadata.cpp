/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentInitiationStandingOrderMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentInitiationStandingOrderMetadata::OAIPaymentInitiationStandingOrderMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentInitiationStandingOrderMetadata::OAIPaymentInitiationStandingOrderMetadata() {
    this->initializeModel();
}

OAIPaymentInitiationStandingOrderMetadata::~OAIPaymentInitiationStandingOrderMetadata() {}

void OAIPaymentInitiationStandingOrderMetadata::initializeModel() {

    m_supports_standing_order_end_date_isSet = false;
    m_supports_standing_order_end_date_isValid = false;

    m_supports_standing_order_negative_execution_days_isSet = false;
    m_supports_standing_order_negative_execution_days_isValid = false;

    m_valid_standing_order_intervals_isSet = false;
    m_valid_standing_order_intervals_isValid = false;
}

void OAIPaymentInitiationStandingOrderMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentInitiationStandingOrderMetadata::fromJsonObject(QJsonObject json) {

    m_supports_standing_order_end_date_isValid = ::OpenAPI::fromJsonValue(m_supports_standing_order_end_date, json[QString("supports_standing_order_end_date")]);
    m_supports_standing_order_end_date_isSet = !json[QString("supports_standing_order_end_date")].isNull() && m_supports_standing_order_end_date_isValid;

    m_supports_standing_order_negative_execution_days_isValid = ::OpenAPI::fromJsonValue(m_supports_standing_order_negative_execution_days, json[QString("supports_standing_order_negative_execution_days")]);
    m_supports_standing_order_negative_execution_days_isSet = !json[QString("supports_standing_order_negative_execution_days")].isNull() && m_supports_standing_order_negative_execution_days_isValid;

    m_valid_standing_order_intervals_isValid = ::OpenAPI::fromJsonValue(m_valid_standing_order_intervals, json[QString("valid_standing_order_intervals")]);
    m_valid_standing_order_intervals_isSet = !json[QString("valid_standing_order_intervals")].isNull() && m_valid_standing_order_intervals_isValid;
}

QString OAIPaymentInitiationStandingOrderMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentInitiationStandingOrderMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_supports_standing_order_end_date_isSet) {
        obj.insert(QString("supports_standing_order_end_date"), ::OpenAPI::toJsonValue(m_supports_standing_order_end_date));
    }
    if (m_supports_standing_order_negative_execution_days_isSet) {
        obj.insert(QString("supports_standing_order_negative_execution_days"), ::OpenAPI::toJsonValue(m_supports_standing_order_negative_execution_days));
    }
    if (m_valid_standing_order_intervals.size() > 0) {
        obj.insert(QString("valid_standing_order_intervals"), ::OpenAPI::toJsonValue(m_valid_standing_order_intervals));
    }
    return obj;
}

bool OAIPaymentInitiationStandingOrderMetadata::isSupportsStandingOrderEndDate() const {
    return m_supports_standing_order_end_date;
}
void OAIPaymentInitiationStandingOrderMetadata::setSupportsStandingOrderEndDate(const bool &supports_standing_order_end_date) {
    m_supports_standing_order_end_date = supports_standing_order_end_date;
    m_supports_standing_order_end_date_isSet = true;
}

bool OAIPaymentInitiationStandingOrderMetadata::is_supports_standing_order_end_date_Set() const{
    return m_supports_standing_order_end_date_isSet;
}

bool OAIPaymentInitiationStandingOrderMetadata::is_supports_standing_order_end_date_Valid() const{
    return m_supports_standing_order_end_date_isValid;
}

bool OAIPaymentInitiationStandingOrderMetadata::isSupportsStandingOrderNegativeExecutionDays() const {
    return m_supports_standing_order_negative_execution_days;
}
void OAIPaymentInitiationStandingOrderMetadata::setSupportsStandingOrderNegativeExecutionDays(const bool &supports_standing_order_negative_execution_days) {
    m_supports_standing_order_negative_execution_days = supports_standing_order_negative_execution_days;
    m_supports_standing_order_negative_execution_days_isSet = true;
}

bool OAIPaymentInitiationStandingOrderMetadata::is_supports_standing_order_negative_execution_days_Set() const{
    return m_supports_standing_order_negative_execution_days_isSet;
}

bool OAIPaymentInitiationStandingOrderMetadata::is_supports_standing_order_negative_execution_days_Valid() const{
    return m_supports_standing_order_negative_execution_days_isValid;
}

QList<OAIPaymentScheduleInterval> OAIPaymentInitiationStandingOrderMetadata::getValidStandingOrderIntervals() const {
    return m_valid_standing_order_intervals;
}
void OAIPaymentInitiationStandingOrderMetadata::setValidStandingOrderIntervals(const QList<OAIPaymentScheduleInterval> &valid_standing_order_intervals) {
    m_valid_standing_order_intervals = valid_standing_order_intervals;
    m_valid_standing_order_intervals_isSet = true;
}

bool OAIPaymentInitiationStandingOrderMetadata::is_valid_standing_order_intervals_Set() const{
    return m_valid_standing_order_intervals_isSet;
}

bool OAIPaymentInitiationStandingOrderMetadata::is_valid_standing_order_intervals_Valid() const{
    return m_valid_standing_order_intervals_isValid;
}

bool OAIPaymentInitiationStandingOrderMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_supports_standing_order_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supports_standing_order_negative_execution_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_standing_order_intervals.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentInitiationStandingOrderMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_supports_standing_order_end_date_isValid && m_supports_standing_order_negative_execution_days_isValid && m_valid_standing_order_intervals_isValid && true;
}

} // namespace OpenAPI
