/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRiskCheckDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRiskCheckDetails::OAIRiskCheckDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRiskCheckDetails::OAIRiskCheckDetails() {
    this->initializeModel();
}

OAIRiskCheckDetails::~OAIRiskCheckDetails() {}

void OAIRiskCheckDetails::initializeModel() {

    m_behavior_isSet = false;
    m_behavior_isValid = false;

    m_devices_isSet = false;
    m_devices_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIRiskCheckDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRiskCheckDetails::fromJsonObject(QJsonObject json) {

    m_behavior_isValid = ::OpenAPI::fromJsonValue(m_behavior, json[QString("behavior")]);
    m_behavior_isSet = !json[QString("behavior")].isNull() && m_behavior_isValid;

    m_devices_isValid = ::OpenAPI::fromJsonValue(m_devices, json[QString("devices")]);
    m_devices_isSet = !json[QString("devices")].isNull() && m_devices_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIRiskCheckDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRiskCheckDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_behavior.isSet()) {
        obj.insert(QString("behavior"), ::OpenAPI::toJsonValue(m_behavior));
    }
    if (m_devices.size() > 0) {
        obj.insert(QString("devices"), ::OpenAPI::toJsonValue(m_devices));
    }
    if (m_email.isSet()) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_phone.isSet()) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIRiskCheckBehavior OAIRiskCheckDetails::getBehavior() const {
    return m_behavior;
}
void OAIRiskCheckDetails::setBehavior(const OAIRiskCheckBehavior &behavior) {
    m_behavior = behavior;
    m_behavior_isSet = true;
}

bool OAIRiskCheckDetails::is_behavior_Set() const{
    return m_behavior_isSet;
}

bool OAIRiskCheckDetails::is_behavior_Valid() const{
    return m_behavior_isValid;
}

QList<OAIRiskCheckDevice> OAIRiskCheckDetails::getDevices() const {
    return m_devices;
}
void OAIRiskCheckDetails::setDevices(const QList<OAIRiskCheckDevice> &devices) {
    m_devices = devices;
    m_devices_isSet = true;
}

bool OAIRiskCheckDetails::is_devices_Set() const{
    return m_devices_isSet;
}

bool OAIRiskCheckDetails::is_devices_Valid() const{
    return m_devices_isValid;
}

OAIRiskCheckEmail OAIRiskCheckDetails::getEmail() const {
    return m_email;
}
void OAIRiskCheckDetails::setEmail(const OAIRiskCheckEmail &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIRiskCheckDetails::is_email_Set() const{
    return m_email_isSet;
}

bool OAIRiskCheckDetails::is_email_Valid() const{
    return m_email_isValid;
}

OAIRiskCheckPhone OAIRiskCheckDetails::getPhone() const {
    return m_phone;
}
void OAIRiskCheckDetails::setPhone(const OAIRiskCheckPhone &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIRiskCheckDetails::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIRiskCheckDetails::is_phone_Valid() const{
    return m_phone_isValid;
}

OAIIdentityVerificationStepStatus OAIRiskCheckDetails::getStatus() const {
    return m_status;
}
void OAIRiskCheckDetails::setStatus(const OAIIdentityVerificationStepStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIRiskCheckDetails::is_status_Set() const{
    return m_status_isSet;
}

bool OAIRiskCheckDetails::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIRiskCheckDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_behavior.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_devices.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_email.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRiskCheckDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_behavior_isValid && m_devices_isValid && m_email_isValid && m_phone_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
