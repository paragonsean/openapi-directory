/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOwnerOverride.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOwnerOverride::OAIOwnerOverride(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOwnerOverride::OAIOwnerOverride() {
    this->initializeModel();
}

OAIOwnerOverride::~OAIOwnerOverride() {}

void OAIOwnerOverride::initializeModel() {

    m_addresses_isSet = false;
    m_addresses_isValid = false;

    m_emails_isSet = false;
    m_emails_isValid = false;

    m_names_isSet = false;
    m_names_isValid = false;

    m_phone_numbers_isSet = false;
    m_phone_numbers_isValid = false;
}

void OAIOwnerOverride::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOwnerOverride::fromJsonObject(QJsonObject json) {

    m_addresses_isValid = ::OpenAPI::fromJsonValue(m_addresses, json[QString("addresses")]);
    m_addresses_isSet = !json[QString("addresses")].isNull() && m_addresses_isValid;

    m_emails_isValid = ::OpenAPI::fromJsonValue(m_emails, json[QString("emails")]);
    m_emails_isSet = !json[QString("emails")].isNull() && m_emails_isValid;

    m_names_isValid = ::OpenAPI::fromJsonValue(m_names, json[QString("names")]);
    m_names_isSet = !json[QString("names")].isNull() && m_names_isValid;

    m_phone_numbers_isValid = ::OpenAPI::fromJsonValue(m_phone_numbers, json[QString("phone_numbers")]);
    m_phone_numbers_isSet = !json[QString("phone_numbers")].isNull() && m_phone_numbers_isValid;
}

QString OAIOwnerOverride::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOwnerOverride::asJsonObject() const {
    QJsonObject obj;
    if (m_addresses.size() > 0) {
        obj.insert(QString("addresses"), ::OpenAPI::toJsonValue(m_addresses));
    }
    if (m_emails.size() > 0) {
        obj.insert(QString("emails"), ::OpenAPI::toJsonValue(m_emails));
    }
    if (m_names.size() > 0) {
        obj.insert(QString("names"), ::OpenAPI::toJsonValue(m_names));
    }
    if (m_phone_numbers.size() > 0) {
        obj.insert(QString("phone_numbers"), ::OpenAPI::toJsonValue(m_phone_numbers));
    }
    return obj;
}

QList<OAIAddress> OAIOwnerOverride::getAddresses() const {
    return m_addresses;
}
void OAIOwnerOverride::setAddresses(const QList<OAIAddress> &addresses) {
    m_addresses = addresses;
    m_addresses_isSet = true;
}

bool OAIOwnerOverride::is_addresses_Set() const{
    return m_addresses_isSet;
}

bool OAIOwnerOverride::is_addresses_Valid() const{
    return m_addresses_isValid;
}

QList<OAIEmail> OAIOwnerOverride::getEmails() const {
    return m_emails;
}
void OAIOwnerOverride::setEmails(const QList<OAIEmail> &emails) {
    m_emails = emails;
    m_emails_isSet = true;
}

bool OAIOwnerOverride::is_emails_Set() const{
    return m_emails_isSet;
}

bool OAIOwnerOverride::is_emails_Valid() const{
    return m_emails_isValid;
}

QList<QString> OAIOwnerOverride::getNames() const {
    return m_names;
}
void OAIOwnerOverride::setNames(const QList<QString> &names) {
    m_names = names;
    m_names_isSet = true;
}

bool OAIOwnerOverride::is_names_Set() const{
    return m_names_isSet;
}

bool OAIOwnerOverride::is_names_Valid() const{
    return m_names_isValid;
}

QList<OAIPhoneNumber> OAIOwnerOverride::getPhoneNumbers() const {
    return m_phone_numbers;
}
void OAIOwnerOverride::setPhoneNumbers(const QList<OAIPhoneNumber> &phone_numbers) {
    m_phone_numbers = phone_numbers;
    m_phone_numbers_isSet = true;
}

bool OAIOwnerOverride::is_phone_numbers_Set() const{
    return m_phone_numbers_isSet;
}

bool OAIOwnerOverride::is_phone_numbers_Valid() const{
    return m_phone_numbers_isValid;
}

bool OAIOwnerOverride::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_emails.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOwnerOverride::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_addresses_isValid && m_emails_isValid && m_names_isValid && m_phone_numbers_isValid && true;
}

} // namespace OpenAPI
