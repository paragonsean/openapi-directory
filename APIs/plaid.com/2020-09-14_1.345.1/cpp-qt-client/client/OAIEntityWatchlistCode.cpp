/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEntityWatchlistCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEntityWatchlistCode::OAIEntityWatchlistCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEntityWatchlistCode::OAIEntityWatchlistCode() {
    this->initializeModel();
}

OAIEntityWatchlistCode::~OAIEntityWatchlistCode() {}

void OAIEntityWatchlistCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEntityWatchlistCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEntityWatchlistCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CA_CON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::CA_CON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EU_CON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::EU_CON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IZ_SOE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::IZ_SOE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IZ_UNC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::IZ_UNC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IZ_WBK", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::IZ_WBK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_CAP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::US_CAP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_FSE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::US_FSE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_MBS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::US_MBS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_SDN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::US_SDN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_SSI", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::US_SSI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_CMC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::US_CMC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_UVL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::US_UVL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AU_CON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::AU_CON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UK_HMC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEntityWatchlistCode::UK_HMC;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEntityWatchlistCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEntityWatchlistCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEntityWatchlistCode::CA_CON:
            val = "CA_CON";
            break;
        case eOAIEntityWatchlistCode::EU_CON:
            val = "EU_CON";
            break;
        case eOAIEntityWatchlistCode::IZ_SOE:
            val = "IZ_SOE";
            break;
        case eOAIEntityWatchlistCode::IZ_UNC:
            val = "IZ_UNC";
            break;
        case eOAIEntityWatchlistCode::IZ_WBK:
            val = "IZ_WBK";
            break;
        case eOAIEntityWatchlistCode::US_CAP:
            val = "US_CAP";
            break;
        case eOAIEntityWatchlistCode::US_FSE:
            val = "US_FSE";
            break;
        case eOAIEntityWatchlistCode::US_MBS:
            val = "US_MBS";
            break;
        case eOAIEntityWatchlistCode::US_SDN:
            val = "US_SDN";
            break;
        case eOAIEntityWatchlistCode::US_SSI:
            val = "US_SSI";
            break;
        case eOAIEntityWatchlistCode::US_CMC:
            val = "US_CMC";
            break;
        case eOAIEntityWatchlistCode::US_UVL:
            val = "US_UVL";
            break;
        case eOAIEntityWatchlistCode::AU_CON:
            val = "AU_CON";
            break;
        case eOAIEntityWatchlistCode::UK_HMC:
            val = "UK_HMC";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEntityWatchlistCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEntityWatchlistCode::eOAIEntityWatchlistCode OAIEntityWatchlistCode::getValue() const {
    return m_value;
}

void OAIEntityWatchlistCode::setValue(const OAIEntityWatchlistCode::eOAIEntityWatchlistCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEntityWatchlistCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIEntityWatchlistCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
