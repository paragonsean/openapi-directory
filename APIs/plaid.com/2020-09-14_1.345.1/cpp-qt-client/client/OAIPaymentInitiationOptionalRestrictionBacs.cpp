/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentInitiationOptionalRestrictionBacs.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentInitiationOptionalRestrictionBacs::OAIPaymentInitiationOptionalRestrictionBacs(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentInitiationOptionalRestrictionBacs::OAIPaymentInitiationOptionalRestrictionBacs() {
    this->initializeModel();
}

OAIPaymentInitiationOptionalRestrictionBacs::~OAIPaymentInitiationOptionalRestrictionBacs() {}

void OAIPaymentInitiationOptionalRestrictionBacs::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;

    m_sort_code_isSet = false;
    m_sort_code_isValid = false;
}

void OAIPaymentInitiationOptionalRestrictionBacs::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentInitiationOptionalRestrictionBacs::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;

    m_sort_code_isValid = ::OpenAPI::fromJsonValue(m_sort_code, json[QString("sort_code")]);
    m_sort_code_isSet = !json[QString("sort_code")].isNull() && m_sort_code_isValid;
}

QString OAIPaymentInitiationOptionalRestrictionBacs::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentInitiationOptionalRestrictionBacs::asJsonObject() const {
    QJsonObject obj;
    if (m_account_isSet) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    if (m_sort_code_isSet) {
        obj.insert(QString("sort_code"), ::OpenAPI::toJsonValue(m_sort_code));
    }
    return obj;
}

QString OAIPaymentInitiationOptionalRestrictionBacs::getAccount() const {
    return m_account;
}
void OAIPaymentInitiationOptionalRestrictionBacs::setAccount(const QString &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIPaymentInitiationOptionalRestrictionBacs::is_account_Set() const{
    return m_account_isSet;
}

bool OAIPaymentInitiationOptionalRestrictionBacs::is_account_Valid() const{
    return m_account_isValid;
}

QString OAIPaymentInitiationOptionalRestrictionBacs::getSortCode() const {
    return m_sort_code;
}
void OAIPaymentInitiationOptionalRestrictionBacs::setSortCode(const QString &sort_code) {
    m_sort_code = sort_code;
    m_sort_code_isSet = true;
}

bool OAIPaymentInitiationOptionalRestrictionBacs::is_sort_code_Set() const{
    return m_sort_code_isSet;
}

bool OAIPaymentInitiationOptionalRestrictionBacs::is_sort_code_Valid() const{
    return m_sort_code_isValid;
}

bool OAIPaymentInitiationOptionalRestrictionBacs::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentInitiationOptionalRestrictionBacs::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
