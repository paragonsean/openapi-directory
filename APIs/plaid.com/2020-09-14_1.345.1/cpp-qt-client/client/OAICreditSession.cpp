/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditSession.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditSession::OAICreditSession(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditSession::OAICreditSession() {
    this->initializeModel();
}

OAICreditSession::~OAICreditSession() {}

void OAICreditSession::initializeModel() {

    m_errors_isSet = false;
    m_errors_isValid = false;

    m_link_session_id_isSet = false;
    m_link_session_id_isValid = false;

    m_results_isSet = false;
    m_results_isValid = false;

    m_session_start_time_isSet = false;
    m_session_start_time_isValid = false;
}

void OAICreditSession::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditSession::fromJsonObject(QJsonObject json) {

    m_errors_isValid = ::OpenAPI::fromJsonValue(m_errors, json[QString("errors")]);
    m_errors_isSet = !json[QString("errors")].isNull() && m_errors_isValid;

    m_link_session_id_isValid = ::OpenAPI::fromJsonValue(m_link_session_id, json[QString("link_session_id")]);
    m_link_session_id_isSet = !json[QString("link_session_id")].isNull() && m_link_session_id_isValid;

    m_results_isValid = ::OpenAPI::fromJsonValue(m_results, json[QString("results")]);
    m_results_isSet = !json[QString("results")].isNull() && m_results_isValid;

    m_session_start_time_isValid = ::OpenAPI::fromJsonValue(m_session_start_time, json[QString("session_start_time")]);
    m_session_start_time_isSet = !json[QString("session_start_time")].isNull() && m_session_start_time_isValid;
}

QString OAICreditSession::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditSession::asJsonObject() const {
    QJsonObject obj;
    if (m_errors.size() > 0) {
        obj.insert(QString("errors"), ::OpenAPI::toJsonValue(m_errors));
    }
    if (m_link_session_id_isSet) {
        obj.insert(QString("link_session_id"), ::OpenAPI::toJsonValue(m_link_session_id));
    }
    if (m_results.isSet()) {
        obj.insert(QString("results"), ::OpenAPI::toJsonValue(m_results));
    }
    if (m_session_start_time_isSet) {
        obj.insert(QString("session_start_time"), ::OpenAPI::toJsonValue(m_session_start_time));
    }
    return obj;
}

QList<OAICreditSessionError> OAICreditSession::getErrors() const {
    return m_errors;
}
void OAICreditSession::setErrors(const QList<OAICreditSessionError> &errors) {
    m_errors = errors;
    m_errors_isSet = true;
}

bool OAICreditSession::is_errors_Set() const{
    return m_errors_isSet;
}

bool OAICreditSession::is_errors_Valid() const{
    return m_errors_isValid;
}

QString OAICreditSession::getLinkSessionId() const {
    return m_link_session_id;
}
void OAICreditSession::setLinkSessionId(const QString &link_session_id) {
    m_link_session_id = link_session_id;
    m_link_session_id_isSet = true;
}

bool OAICreditSession::is_link_session_id_Set() const{
    return m_link_session_id_isSet;
}

bool OAICreditSession::is_link_session_id_Valid() const{
    return m_link_session_id_isValid;
}

OAICreditSessionResults OAICreditSession::getResults() const {
    return m_results;
}
void OAICreditSession::setResults(const OAICreditSessionResults &results) {
    m_results = results;
    m_results_isSet = true;
}

bool OAICreditSession::is_results_Set() const{
    return m_results_isSet;
}

bool OAICreditSession::is_results_Valid() const{
    return m_results_isValid;
}

QDateTime OAICreditSession::getSessionStartTime() const {
    return m_session_start_time;
}
void OAICreditSession::setSessionStartTime(const QDateTime &session_start_time) {
    m_session_start_time = session_start_time;
    m_session_start_time_isSet = true;
}

bool OAICreditSession::is_session_start_time_Set() const{
    return m_session_start_time_isSet;
}

bool OAICreditSession::is_session_start_time_Valid() const{
    return m_session_start_time_isValid;
}

bool OAICreditSession::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_session_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_results.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_session_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditSession::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
