/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentaryVerification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentaryVerification::OAIDocumentaryVerification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentaryVerification::OAIDocumentaryVerification() {
    this->initializeModel();
}

OAIDocumentaryVerification::~OAIDocumentaryVerification() {}

void OAIDocumentaryVerification::initializeModel() {

    m_documents_isSet = false;
    m_documents_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIDocumentaryVerification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentaryVerification::fromJsonObject(QJsonObject json) {

    m_documents_isValid = ::OpenAPI::fromJsonValue(m_documents, json[QString("documents")]);
    m_documents_isSet = !json[QString("documents")].isNull() && m_documents_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIDocumentaryVerification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentaryVerification::asJsonObject() const {
    QJsonObject obj;
    if (m_documents.size() > 0) {
        obj.insert(QString("documents"), ::OpenAPI::toJsonValue(m_documents));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QList<OAIDocumentaryVerificationDocument> OAIDocumentaryVerification::getDocuments() const {
    return m_documents;
}
void OAIDocumentaryVerification::setDocuments(const QList<OAIDocumentaryVerificationDocument> &documents) {
    m_documents = documents;
    m_documents_isSet = true;
}

bool OAIDocumentaryVerification::is_documents_Set() const{
    return m_documents_isSet;
}

bool OAIDocumentaryVerification::is_documents_Valid() const{
    return m_documents_isValid;
}

QString OAIDocumentaryVerification::getStatus() const {
    return m_status;
}
void OAIDocumentaryVerification::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIDocumentaryVerification::is_status_Set() const{
    return m_status_isSet;
}

bool OAIDocumentaryVerification::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIDocumentaryVerification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_documents.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentaryVerification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_documents_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
