/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkDeliveryRecipient.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkDeliveryRecipient::OAILinkDeliveryRecipient(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkDeliveryRecipient::OAILinkDeliveryRecipient() {
    this->initializeModel();
}

OAILinkDeliveryRecipient::~OAILinkDeliveryRecipient() {}

void OAILinkDeliveryRecipient::initializeModel() {

    m_communication_methods_isSet = false;
    m_communication_methods_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;
}

void OAILinkDeliveryRecipient::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkDeliveryRecipient::fromJsonObject(QJsonObject json) {

    m_communication_methods_isValid = ::OpenAPI::fromJsonValue(m_communication_methods, json[QString("communication_methods")]);
    m_communication_methods_isSet = !json[QString("communication_methods")].isNull() && m_communication_methods_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;
}

QString OAILinkDeliveryRecipient::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkDeliveryRecipient::asJsonObject() const {
    QJsonObject obj;
    if (m_communication_methods.size() > 0) {
        obj.insert(QString("communication_methods"), ::OpenAPI::toJsonValue(m_communication_methods));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    return obj;
}

QList<OAILinkDeliveryCommunicationMethod> OAILinkDeliveryRecipient::getCommunicationMethods() const {
    return m_communication_methods;
}
void OAILinkDeliveryRecipient::setCommunicationMethods(const QList<OAILinkDeliveryCommunicationMethod> &communication_methods) {
    m_communication_methods = communication_methods;
    m_communication_methods_isSet = true;
}

bool OAILinkDeliveryRecipient::is_communication_methods_Set() const{
    return m_communication_methods_isSet;
}

bool OAILinkDeliveryRecipient::is_communication_methods_Valid() const{
    return m_communication_methods_isValid;
}

QString OAILinkDeliveryRecipient::getFirstName() const {
    return m_first_name;
}
void OAILinkDeliveryRecipient::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAILinkDeliveryRecipient::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAILinkDeliveryRecipient::is_first_name_Valid() const{
    return m_first_name_isValid;
}

bool OAILinkDeliveryRecipient::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_communication_methods.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkDeliveryRecipient::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
