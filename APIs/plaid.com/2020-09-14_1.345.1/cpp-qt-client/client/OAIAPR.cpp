/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPR.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPR::OAIAPR(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPR::OAIAPR() {
    this->initializeModel();
}

OAIAPR::~OAIAPR() {}

void OAIAPR::initializeModel() {

    m_apr_percentage_isSet = false;
    m_apr_percentage_isValid = false;

    m_apr_type_isSet = false;
    m_apr_type_isValid = false;

    m_balance_subject_to_apr_isSet = false;
    m_balance_subject_to_apr_isValid = false;

    m_interest_charge_amount_isSet = false;
    m_interest_charge_amount_isValid = false;
}

void OAIAPR::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPR::fromJsonObject(QJsonObject json) {

    m_apr_percentage_isValid = ::OpenAPI::fromJsonValue(m_apr_percentage, json[QString("apr_percentage")]);
    m_apr_percentage_isSet = !json[QString("apr_percentage")].isNull() && m_apr_percentage_isValid;

    m_apr_type_isValid = ::OpenAPI::fromJsonValue(m_apr_type, json[QString("apr_type")]);
    m_apr_type_isSet = !json[QString("apr_type")].isNull() && m_apr_type_isValid;

    m_balance_subject_to_apr_isValid = ::OpenAPI::fromJsonValue(m_balance_subject_to_apr, json[QString("balance_subject_to_apr")]);
    m_balance_subject_to_apr_isSet = !json[QString("balance_subject_to_apr")].isNull() && m_balance_subject_to_apr_isValid;

    m_interest_charge_amount_isValid = ::OpenAPI::fromJsonValue(m_interest_charge_amount, json[QString("interest_charge_amount")]);
    m_interest_charge_amount_isSet = !json[QString("interest_charge_amount")].isNull() && m_interest_charge_amount_isValid;
}

QString OAIAPR::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPR::asJsonObject() const {
    QJsonObject obj;
    if (m_apr_percentage_isSet) {
        obj.insert(QString("apr_percentage"), ::OpenAPI::toJsonValue(m_apr_percentage));
    }
    if (m_apr_type_isSet) {
        obj.insert(QString("apr_type"), ::OpenAPI::toJsonValue(m_apr_type));
    }
    if (m_balance_subject_to_apr_isSet) {
        obj.insert(QString("balance_subject_to_apr"), ::OpenAPI::toJsonValue(m_balance_subject_to_apr));
    }
    if (m_interest_charge_amount_isSet) {
        obj.insert(QString("interest_charge_amount"), ::OpenAPI::toJsonValue(m_interest_charge_amount));
    }
    return obj;
}

double OAIAPR::getAprPercentage() const {
    return m_apr_percentage;
}
void OAIAPR::setAprPercentage(const double &apr_percentage) {
    m_apr_percentage = apr_percentage;
    m_apr_percentage_isSet = true;
}

bool OAIAPR::is_apr_percentage_Set() const{
    return m_apr_percentage_isSet;
}

bool OAIAPR::is_apr_percentage_Valid() const{
    return m_apr_percentage_isValid;
}

QString OAIAPR::getAprType() const {
    return m_apr_type;
}
void OAIAPR::setAprType(const QString &apr_type) {
    m_apr_type = apr_type;
    m_apr_type_isSet = true;
}

bool OAIAPR::is_apr_type_Set() const{
    return m_apr_type_isSet;
}

bool OAIAPR::is_apr_type_Valid() const{
    return m_apr_type_isValid;
}

double OAIAPR::getBalanceSubjectToApr() const {
    return m_balance_subject_to_apr;
}
void OAIAPR::setBalanceSubjectToApr(const double &balance_subject_to_apr) {
    m_balance_subject_to_apr = balance_subject_to_apr;
    m_balance_subject_to_apr_isSet = true;
}

bool OAIAPR::is_balance_subject_to_apr_Set() const{
    return m_balance_subject_to_apr_isSet;
}

bool OAIAPR::is_balance_subject_to_apr_Valid() const{
    return m_balance_subject_to_apr_isValid;
}

double OAIAPR::getInterestChargeAmount() const {
    return m_interest_charge_amount;
}
void OAIAPR::setInterestChargeAmount(const double &interest_charge_amount) {
    m_interest_charge_amount = interest_charge_amount;
    m_interest_charge_amount_isSet = true;
}

bool OAIAPR::is_interest_charge_amount_Set() const{
    return m_interest_charge_amount_isSet;
}

bool OAIAPR::is_interest_charge_amount_Valid() const{
    return m_interest_charge_amount_isValid;
}

bool OAIAPR::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_apr_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apr_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance_subject_to_apr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_interest_charge_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPR::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_apr_percentage_isValid && m_apr_type_isValid && m_balance_subject_to_apr_isValid && m_interest_charge_amount_isValid && true;
}

} // namespace OpenAPI
