/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISignalDecisionReportRequest.h
 *
 * SignalDecisionReportRequest defines the request schema for &#x60;/signal/decision/report&#x60;
 */

#ifndef OAISignalDecisionReportRequest_H
#define OAISignalDecisionReportRequest_H

#include <QJsonObject>

#include "OAISignalDecisionOutcome.h"
#include "OAISignalPaymentMethod.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISignalDecisionReportRequest : public OAIObject {
public:
    OAISignalDecisionReportRequest();
    OAISignalDecisionReportRequest(QString json);
    ~OAISignalDecisionReportRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmountInstantlyAvailable() const;
    void setAmountInstantlyAvailable(const double &amount_instantly_available);
    bool is_amount_instantly_available_Set() const;
    bool is_amount_instantly_available_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getClientTransactionId() const;
    void setClientTransactionId(const QString &client_transaction_id);
    bool is_client_transaction_id_Set() const;
    bool is_client_transaction_id_Valid() const;

    qint32 getDaysFundsOnHold() const;
    void setDaysFundsOnHold(const qint32 &days_funds_on_hold);
    bool is_days_funds_on_hold_Set() const;
    bool is_days_funds_on_hold_Valid() const;

    OAISignalDecisionOutcome getDecisionOutcome() const;
    void setDecisionOutcome(const OAISignalDecisionOutcome &decision_outcome);
    bool is_decision_outcome_Set() const;
    bool is_decision_outcome_Valid() const;

    bool isInitiated() const;
    void setInitiated(const bool &initiated);
    bool is_initiated_Set() const;
    bool is_initiated_Valid() const;

    OAISignalPaymentMethod getPaymentMethod() const;
    void setPaymentMethod(const OAISignalPaymentMethod &payment_method);
    bool is_payment_method_Set() const;
    bool is_payment_method_Valid() const;

    QString getSecret() const;
    void setSecret(const QString &secret);
    bool is_secret_Set() const;
    bool is_secret_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount_instantly_available;
    bool m_amount_instantly_available_isSet;
    bool m_amount_instantly_available_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_client_transaction_id;
    bool m_client_transaction_id_isSet;
    bool m_client_transaction_id_isValid;

    qint32 m_days_funds_on_hold;
    bool m_days_funds_on_hold_isSet;
    bool m_days_funds_on_hold_isValid;

    OAISignalDecisionOutcome m_decision_outcome;
    bool m_decision_outcome_isSet;
    bool m_decision_outcome_isValid;

    bool m_initiated;
    bool m_initiated_isSet;
    bool m_initiated_isValid;

    OAISignalPaymentMethod m_payment_method;
    bool m_payment_method_isSet;
    bool m_payment_method_isValid;

    QString m_secret;
    bool m_secret_isSet;
    bool m_secret_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISignalDecisionReportRequest)

#endif // OAISignalDecisionReportRequest_H
