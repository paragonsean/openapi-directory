/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPartnerEndCustomerOAuthInstitutionEnvironments.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPartnerEndCustomerOAuthInstitutionEnvironments::OAIPartnerEndCustomerOAuthInstitutionEnvironments(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPartnerEndCustomerOAuthInstitutionEnvironments::OAIPartnerEndCustomerOAuthInstitutionEnvironments() {
    this->initializeModel();
}

OAIPartnerEndCustomerOAuthInstitutionEnvironments::~OAIPartnerEndCustomerOAuthInstitutionEnvironments() {}

void OAIPartnerEndCustomerOAuthInstitutionEnvironments::initializeModel() {

    m_development_isSet = false;
    m_development_isValid = false;

    m_production_isSet = false;
    m_production_isValid = false;
}

void OAIPartnerEndCustomerOAuthInstitutionEnvironments::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPartnerEndCustomerOAuthInstitutionEnvironments::fromJsonObject(QJsonObject json) {

    m_development_isValid = ::OpenAPI::fromJsonValue(m_development, json[QString("development")]);
    m_development_isSet = !json[QString("development")].isNull() && m_development_isValid;

    m_production_isValid = ::OpenAPI::fromJsonValue(m_production, json[QString("production")]);
    m_production_isSet = !json[QString("production")].isNull() && m_production_isValid;
}

QString OAIPartnerEndCustomerOAuthInstitutionEnvironments::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPartnerEndCustomerOAuthInstitutionEnvironments::asJsonObject() const {
    QJsonObject obj;
    if (m_development.isSet()) {
        obj.insert(QString("development"), ::OpenAPI::toJsonValue(m_development));
    }
    if (m_production.isSet()) {
        obj.insert(QString("production"), ::OpenAPI::toJsonValue(m_production));
    }
    return obj;
}

OAIPartnerEndCustomerOAuthInstitutionApplicationStatus OAIPartnerEndCustomerOAuthInstitutionEnvironments::getDevelopment() const {
    return m_development;
}
void OAIPartnerEndCustomerOAuthInstitutionEnvironments::setDevelopment(const OAIPartnerEndCustomerOAuthInstitutionApplicationStatus &development) {
    m_development = development;
    m_development_isSet = true;
}

bool OAIPartnerEndCustomerOAuthInstitutionEnvironments::is_development_Set() const{
    return m_development_isSet;
}

bool OAIPartnerEndCustomerOAuthInstitutionEnvironments::is_development_Valid() const{
    return m_development_isValid;
}

OAIPartnerEndCustomerOAuthInstitutionApplicationStatus OAIPartnerEndCustomerOAuthInstitutionEnvironments::getProduction() const {
    return m_production;
}
void OAIPartnerEndCustomerOAuthInstitutionEnvironments::setProduction(const OAIPartnerEndCustomerOAuthInstitutionApplicationStatus &production) {
    m_production = production;
    m_production_isSet = true;
}

bool OAIPartnerEndCustomerOAuthInstitutionEnvironments::is_production_Set() const{
    return m_production_isSet;
}

bool OAIPartnerEndCustomerOAuthInstitutionEnvironments::is_production_Valid() const{
    return m_production_isValid;
}

bool OAIPartnerEndCustomerOAuthInstitutionEnvironments::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_development.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_production.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPartnerEndCustomerOAuthInstitutionEnvironments::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
