/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransferConfigurationGetResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransferConfigurationGetResponse::OAITransferConfigurationGetResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransferConfigurationGetResponse::OAITransferConfigurationGetResponse() {
    this->initializeModel();
}

OAITransferConfigurationGetResponse::~OAITransferConfigurationGetResponse() {}

void OAITransferConfigurationGetResponse::initializeModel() {

    m_iso_currency_code_isSet = false;
    m_iso_currency_code_isValid = false;

    m_max_daily_credit_amount_isSet = false;
    m_max_daily_credit_amount_isValid = false;

    m_max_daily_debit_amount_isSet = false;
    m_max_daily_debit_amount_isValid = false;

    m_max_monthly_amount_isSet = false;
    m_max_monthly_amount_isValid = false;

    m_max_single_transfer_amount_isSet = false;
    m_max_single_transfer_amount_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAITransferConfigurationGetResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransferConfigurationGetResponse::fromJsonObject(QJsonObject json) {

    m_iso_currency_code_isValid = ::OpenAPI::fromJsonValue(m_iso_currency_code, json[QString("iso_currency_code")]);
    m_iso_currency_code_isSet = !json[QString("iso_currency_code")].isNull() && m_iso_currency_code_isValid;

    m_max_daily_credit_amount_isValid = ::OpenAPI::fromJsonValue(m_max_daily_credit_amount, json[QString("max_daily_credit_amount")]);
    m_max_daily_credit_amount_isSet = !json[QString("max_daily_credit_amount")].isNull() && m_max_daily_credit_amount_isValid;

    m_max_daily_debit_amount_isValid = ::OpenAPI::fromJsonValue(m_max_daily_debit_amount, json[QString("max_daily_debit_amount")]);
    m_max_daily_debit_amount_isSet = !json[QString("max_daily_debit_amount")].isNull() && m_max_daily_debit_amount_isValid;

    m_max_monthly_amount_isValid = ::OpenAPI::fromJsonValue(m_max_monthly_amount, json[QString("max_monthly_amount")]);
    m_max_monthly_amount_isSet = !json[QString("max_monthly_amount")].isNull() && m_max_monthly_amount_isValid;

    m_max_single_transfer_amount_isValid = ::OpenAPI::fromJsonValue(m_max_single_transfer_amount, json[QString("max_single_transfer_amount")]);
    m_max_single_transfer_amount_isSet = !json[QString("max_single_transfer_amount")].isNull() && m_max_single_transfer_amount_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("request_id")]);
    m_request_id_isSet = !json[QString("request_id")].isNull() && m_request_id_isValid;
}

QString OAITransferConfigurationGetResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransferConfigurationGetResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_iso_currency_code_isSet) {
        obj.insert(QString("iso_currency_code"), ::OpenAPI::toJsonValue(m_iso_currency_code));
    }
    if (m_max_daily_credit_amount_isSet) {
        obj.insert(QString("max_daily_credit_amount"), ::OpenAPI::toJsonValue(m_max_daily_credit_amount));
    }
    if (m_max_daily_debit_amount_isSet) {
        obj.insert(QString("max_daily_debit_amount"), ::OpenAPI::toJsonValue(m_max_daily_debit_amount));
    }
    if (m_max_monthly_amount_isSet) {
        obj.insert(QString("max_monthly_amount"), ::OpenAPI::toJsonValue(m_max_monthly_amount));
    }
    if (m_max_single_transfer_amount_isSet) {
        obj.insert(QString("max_single_transfer_amount"), ::OpenAPI::toJsonValue(m_max_single_transfer_amount));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("request_id"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

QString OAITransferConfigurationGetResponse::getIsoCurrencyCode() const {
    return m_iso_currency_code;
}
void OAITransferConfigurationGetResponse::setIsoCurrencyCode(const QString &iso_currency_code) {
    m_iso_currency_code = iso_currency_code;
    m_iso_currency_code_isSet = true;
}

bool OAITransferConfigurationGetResponse::is_iso_currency_code_Set() const{
    return m_iso_currency_code_isSet;
}

bool OAITransferConfigurationGetResponse::is_iso_currency_code_Valid() const{
    return m_iso_currency_code_isValid;
}

QString OAITransferConfigurationGetResponse::getMaxDailyCreditAmount() const {
    return m_max_daily_credit_amount;
}
void OAITransferConfigurationGetResponse::setMaxDailyCreditAmount(const QString &max_daily_credit_amount) {
    m_max_daily_credit_amount = max_daily_credit_amount;
    m_max_daily_credit_amount_isSet = true;
}

bool OAITransferConfigurationGetResponse::is_max_daily_credit_amount_Set() const{
    return m_max_daily_credit_amount_isSet;
}

bool OAITransferConfigurationGetResponse::is_max_daily_credit_amount_Valid() const{
    return m_max_daily_credit_amount_isValid;
}

QString OAITransferConfigurationGetResponse::getMaxDailyDebitAmount() const {
    return m_max_daily_debit_amount;
}
void OAITransferConfigurationGetResponse::setMaxDailyDebitAmount(const QString &max_daily_debit_amount) {
    m_max_daily_debit_amount = max_daily_debit_amount;
    m_max_daily_debit_amount_isSet = true;
}

bool OAITransferConfigurationGetResponse::is_max_daily_debit_amount_Set() const{
    return m_max_daily_debit_amount_isSet;
}

bool OAITransferConfigurationGetResponse::is_max_daily_debit_amount_Valid() const{
    return m_max_daily_debit_amount_isValid;
}

QString OAITransferConfigurationGetResponse::getMaxMonthlyAmount() const {
    return m_max_monthly_amount;
}
void OAITransferConfigurationGetResponse::setMaxMonthlyAmount(const QString &max_monthly_amount) {
    m_max_monthly_amount = max_monthly_amount;
    m_max_monthly_amount_isSet = true;
}

bool OAITransferConfigurationGetResponse::is_max_monthly_amount_Set() const{
    return m_max_monthly_amount_isSet;
}

bool OAITransferConfigurationGetResponse::is_max_monthly_amount_Valid() const{
    return m_max_monthly_amount_isValid;
}

QString OAITransferConfigurationGetResponse::getMaxSingleTransferAmount() const {
    return m_max_single_transfer_amount;
}
void OAITransferConfigurationGetResponse::setMaxSingleTransferAmount(const QString &max_single_transfer_amount) {
    m_max_single_transfer_amount = max_single_transfer_amount;
    m_max_single_transfer_amount_isSet = true;
}

bool OAITransferConfigurationGetResponse::is_max_single_transfer_amount_Set() const{
    return m_max_single_transfer_amount_isSet;
}

bool OAITransferConfigurationGetResponse::is_max_single_transfer_amount_Valid() const{
    return m_max_single_transfer_amount_isValid;
}

QString OAITransferConfigurationGetResponse::getRequestId() const {
    return m_request_id;
}
void OAITransferConfigurationGetResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAITransferConfigurationGetResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAITransferConfigurationGetResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAITransferConfigurationGetResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_iso_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_daily_credit_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_daily_debit_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_monthly_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_single_transfer_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransferConfigurationGetResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_iso_currency_code_isValid && m_max_daily_credit_amount_isValid && m_max_daily_debit_amount_isValid && m_max_monthly_amount_isValid && m_max_single_transfer_amount_isValid && m_request_id_isValid && true;
}

} // namespace OpenAPI
