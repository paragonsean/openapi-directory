/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdentityVerificationCreateRequest.h
 *
 * Request schema for &#39;/identity_verification/create&#39;
 */

#ifndef OAIIdentityVerificationCreateRequest_H
#define OAIIdentityVerificationCreateRequest_H

#include <QJsonObject>

#include "OAIIdentityVerificationRequestUser.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIdentityVerificationCreateRequest : public OAIObject {
public:
    OAIIdentityVerificationCreateRequest();
    OAIIdentityVerificationCreateRequest(QString json);
    ~OAIIdentityVerificationCreateRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    bool isGaveConsent() const;
    void setGaveConsent(const bool &gave_consent);
    bool is_gave_consent_Set() const;
    bool is_gave_consent_Valid() const;

    bool isIsIdempotent() const;
    void setIsIdempotent(const bool &is_idempotent);
    bool is_is_idempotent_Set() const;
    bool is_is_idempotent_Valid() const;

    bool isIsShareable() const;
    void setIsShareable(const bool &is_shareable);
    bool is_is_shareable_Set() const;
    bool is_is_shareable_Valid() const;

    QString getSecret() const;
    void setSecret(const QString &secret);
    bool is_secret_Set() const;
    bool is_secret_Valid() const;

    QString getTemplateId() const;
    void setTemplateId(const QString &template_id);
    bool is_template_id_Set() const;
    bool is_template_id_Valid() const;

    OAIIdentityVerificationRequestUser getUser() const;
    void setUser(const OAIIdentityVerificationRequestUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    bool m_gave_consent;
    bool m_gave_consent_isSet;
    bool m_gave_consent_isValid;

    bool m_is_idempotent;
    bool m_is_idempotent_isSet;
    bool m_is_idempotent_isValid;

    bool m_is_shareable;
    bool m_is_shareable_isSet;
    bool m_is_shareable_isValid;

    QString m_secret;
    bool m_secret_isSet;
    bool m_secret_isValid;

    QString m_template_id;
    bool m_template_id_isSet;
    bool m_template_id_isValid;

    OAIIdentityVerificationRequestUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdentityVerificationCreateRequest)

#endif // OAIIdentityVerificationCreateRequest_H
