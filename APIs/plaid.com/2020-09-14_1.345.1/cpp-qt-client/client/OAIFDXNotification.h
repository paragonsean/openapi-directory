/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFDXNotification.h
 *
 * Provides the base fields of a notification. Clients will read the &#x60;type&#x60; property to determine the expected notification payload
 */

#ifndef OAIFDXNotification_H
#define OAIFDXNotification_H

#include <QJsonObject>

#include "OAIFDXHateoasLink.h"
#include "OAIFDXNotificationCategory.h"
#include "OAIFDXNotificationPayload.h"
#include "OAIFDXNotificationPriority.h"
#include "OAIFDXNotificationSeverity.h"
#include "OAIFDXNotificationType.h"
#include "OAIFDXParty.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFDXNotificationPayload;
class OAIFDXParty;
class OAIFDXHateoasLink;

class OAIFDXNotification : public OAIObject {
public:
    OAIFDXNotification();
    OAIFDXNotification(QString json);
    ~OAIFDXNotification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFDXNotificationCategory getCategory() const;
    void setCategory(const OAIFDXNotificationCategory &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getNotificationId() const;
    void setNotificationId(const QString &notification_id);
    bool is_notification_id_Set() const;
    bool is_notification_id_Valid() const;

    OAIFDXNotificationPayload getNotificationPayload() const;
    void setNotificationPayload(const OAIFDXNotificationPayload &notification_payload);
    bool is_notification_payload_Set() const;
    bool is_notification_payload_Valid() const;

    OAIFDXNotificationPriority getPriority() const;
    void setPriority(const OAIFDXNotificationPriority &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    OAIFDXParty getPublisher() const;
    void setPublisher(const OAIFDXParty &publisher);
    bool is_publisher_Set() const;
    bool is_publisher_Valid() const;

    QDateTime getSentOn() const;
    void setSentOn(const QDateTime &sent_on);
    bool is_sent_on_Set() const;
    bool is_sent_on_Valid() const;

    OAIFDXNotificationSeverity getSeverity() const;
    void setSeverity(const OAIFDXNotificationSeverity &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    OAIFDXParty getSubscriber() const;
    void setSubscriber(const OAIFDXParty &subscriber);
    bool is_subscriber_Set() const;
    bool is_subscriber_Valid() const;

    OAIFDXNotificationType getType() const;
    void setType(const OAIFDXNotificationType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIFDXHateoasLink getUrl() const;
    void setUrl(const OAIFDXHateoasLink &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFDXNotificationCategory m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_notification_id;
    bool m_notification_id_isSet;
    bool m_notification_id_isValid;

    OAIFDXNotificationPayload m_notification_payload;
    bool m_notification_payload_isSet;
    bool m_notification_payload_isValid;

    OAIFDXNotificationPriority m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    OAIFDXParty m_publisher;
    bool m_publisher_isSet;
    bool m_publisher_isValid;

    QDateTime m_sent_on;
    bool m_sent_on_isSet;
    bool m_sent_on_isValid;

    OAIFDXNotificationSeverity m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    OAIFDXParty m_subscriber;
    bool m_subscriber_isSet;
    bool m_subscriber_isValid;

    OAIFDXNotificationType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIFDXHateoasLink m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFDXNotification)

#endif // OAIFDXNotification_H
