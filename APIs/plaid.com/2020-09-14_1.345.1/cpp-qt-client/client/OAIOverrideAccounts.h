/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOverrideAccounts.h
 *
 * Data to use to set values of test accounts. Some values cannot be specified in the schema and will instead will be calculated from other test data in order to achieve more consistent, realistic test data.
 */

#ifndef OAIOverrideAccounts_H
#define OAIOverrideAccounts_H

#include <QJsonObject>

#include "OAIAccountSubtype.h"
#include "OAIHoldingsOverride.h"
#include "OAIIncomeOverride.h"
#include "OAIInflowModel.h"
#include "OAIInvestments_TransactionsOverride.h"
#include "OAILiabilityOverride.h"
#include "OAIMeta.h"
#include "OAINumbers.h"
#include "OAIOverrideAccountType.h"
#include "OAIOwnerOverride.h"
#include "OAITransactionOverride.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHoldingsOverride;
class OAIIncomeOverride;
class OAIInvestments_TransactionsOverride;

class OAIOverrideAccounts : public OAIObject {
public:
    OAIOverrideAccounts();
    OAIOverrideAccounts(QString json);
    ~OAIOverrideAccounts() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    double getForceAvailableBalance() const;
    void setForceAvailableBalance(const double &force_available_balance);
    bool is_force_available_balance_Set() const;
    bool is_force_available_balance_Valid() const;

    OAIHoldingsOverride getHoldings() const;
    void setHoldings(const OAIHoldingsOverride &holdings);
    bool is_holdings_Set() const;
    bool is_holdings_Valid() const;

    OAIOwnerOverride getIdentity() const;
    void setIdentity(const OAIOwnerOverride &identity);
    bool is_identity_Set() const;
    bool is_identity_Valid() const;

    OAIIncomeOverride getIncome() const;
    void setIncome(const OAIIncomeOverride &income);
    bool is_income_Set() const;
    bool is_income_Valid() const;

    OAIInflowModel getInflowModel() const;
    void setInflowModel(const OAIInflowModel &inflow_model);
    bool is_inflow_model_Set() const;
    bool is_inflow_model_Valid() const;

    OAIInvestments_TransactionsOverride getInvestmentTransactions() const;
    void setInvestmentTransactions(const OAIInvestments_TransactionsOverride &investment_transactions);
    bool is_investment_transactions_Set() const;
    bool is_investment_transactions_Valid() const;

    OAILiabilityOverride getLiability() const;
    void setLiability(const OAILiabilityOverride &liability);
    bool is_liability_Set() const;
    bool is_liability_Valid() const;

    OAIMeta getMeta() const;
    void setMeta(const OAIMeta &meta);
    bool is_meta_Set() const;
    bool is_meta_Valid() const;

    OAINumbers getNumbers() const;
    void setNumbers(const OAINumbers &numbers);
    bool is_numbers_Set() const;
    bool is_numbers_Valid() const;

    double getStartingBalance() const;
    void setStartingBalance(const double &starting_balance);
    bool is_starting_balance_Set() const;
    bool is_starting_balance_Valid() const;

    OAIAccountSubtype getSubtype() const;
    void setSubtype(const OAIAccountSubtype &subtype);
    bool is_subtype_Set() const;
    bool is_subtype_Valid() const;

    QList<OAITransactionOverride> getTransactions() const;
    void setTransactions(const QList<OAITransactionOverride> &transactions);
    bool is_transactions_Set() const;
    bool is_transactions_Valid() const;

    OAIOverrideAccountType getType() const;
    void setType(const OAIOverrideAccountType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    double m_force_available_balance;
    bool m_force_available_balance_isSet;
    bool m_force_available_balance_isValid;

    OAIHoldingsOverride m_holdings;
    bool m_holdings_isSet;
    bool m_holdings_isValid;

    OAIOwnerOverride m_identity;
    bool m_identity_isSet;
    bool m_identity_isValid;

    OAIIncomeOverride m_income;
    bool m_income_isSet;
    bool m_income_isValid;

    OAIInflowModel m_inflow_model;
    bool m_inflow_model_isSet;
    bool m_inflow_model_isValid;

    OAIInvestments_TransactionsOverride m_investment_transactions;
    bool m_investment_transactions_isSet;
    bool m_investment_transactions_isValid;

    OAILiabilityOverride m_liability;
    bool m_liability_isSet;
    bool m_liability_isValid;

    OAIMeta m_meta;
    bool m_meta_isSet;
    bool m_meta_isValid;

    OAINumbers m_numbers;
    bool m_numbers_isSet;
    bool m_numbers_isValid;

    double m_starting_balance;
    bool m_starting_balance_isSet;
    bool m_starting_balance_isValid;

    OAIAccountSubtype m_subtype;
    bool m_subtype_isSet;
    bool m_subtype_isValid;

    QList<OAITransactionOverride> m_transactions;
    bool m_transactions_isSet;
    bool m_transactions_isValid;

    OAIOverrideAccountType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOverrideAccounts)

#endif // OAIOverrideAccounts_H
