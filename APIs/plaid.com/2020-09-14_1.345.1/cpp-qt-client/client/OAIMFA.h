/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMFA.h
 *
 * Specifies the multi-factor authentication settings to use with this test account
 */

#ifndef OAIMFA_H
#define OAIMFA_H

#include <QJsonObject>

#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMFA : public OAIObject {
public:
    OAIMFA();
    OAIMFA(QString json);
    ~OAIMFA() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getQuestionRounds() const;
    void setQuestionRounds(const double &question_rounds);
    bool is_question_rounds_Set() const;
    bool is_question_rounds_Valid() const;

    double getQuestionsPerRound() const;
    void setQuestionsPerRound(const double &questions_per_round);
    bool is_questions_per_round_Set() const;
    bool is_questions_per_round_Valid() const;

    double getSelectionRounds() const;
    void setSelectionRounds(const double &selection_rounds);
    bool is_selection_rounds_Set() const;
    bool is_selection_rounds_Valid() const;

    double getSelectionsPerQuestion() const;
    void setSelectionsPerQuestion(const double &selections_per_question);
    bool is_selections_per_question_Set() const;
    bool is_selections_per_question_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_question_rounds;
    bool m_question_rounds_isSet;
    bool m_question_rounds_isValid;

    double m_questions_per_round;
    bool m_questions_per_round_isSet;
    bool m_questions_per_round_isValid;

    double m_selection_rounds;
    bool m_selection_rounds_isSet;
    bool m_selection_rounds_isValid;

    double m_selections_per_question;
    bool m_selections_per_question_isSet;
    bool m_selections_per_question_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMFA)

#endif // OAIMFA_H
