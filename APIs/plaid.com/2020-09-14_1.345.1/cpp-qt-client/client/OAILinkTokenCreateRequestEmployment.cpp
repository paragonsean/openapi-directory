/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkTokenCreateRequestEmployment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkTokenCreateRequestEmployment::OAILinkTokenCreateRequestEmployment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkTokenCreateRequestEmployment::OAILinkTokenCreateRequestEmployment() {
    this->initializeModel();
}

OAILinkTokenCreateRequestEmployment::~OAILinkTokenCreateRequestEmployment() {}

void OAILinkTokenCreateRequestEmployment::initializeModel() {

    m_bank_employment_isSet = false;
    m_bank_employment_isValid = false;

    m_employment_source_types_isSet = false;
    m_employment_source_types_isValid = false;
}

void OAILinkTokenCreateRequestEmployment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkTokenCreateRequestEmployment::fromJsonObject(QJsonObject json) {

    m_bank_employment_isValid = ::OpenAPI::fromJsonValue(m_bank_employment, json[QString("bank_employment")]);
    m_bank_employment_isSet = !json[QString("bank_employment")].isNull() && m_bank_employment_isValid;

    m_employment_source_types_isValid = ::OpenAPI::fromJsonValue(m_employment_source_types, json[QString("employment_source_types")]);
    m_employment_source_types_isSet = !json[QString("employment_source_types")].isNull() && m_employment_source_types_isValid;
}

QString OAILinkTokenCreateRequestEmployment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkTokenCreateRequestEmployment::asJsonObject() const {
    QJsonObject obj;
    if (m_bank_employment.isSet()) {
        obj.insert(QString("bank_employment"), ::OpenAPI::toJsonValue(m_bank_employment));
    }
    if (m_employment_source_types.size() > 0) {
        obj.insert(QString("employment_source_types"), ::OpenAPI::toJsonValue(m_employment_source_types));
    }
    return obj;
}

OAILinkTokenCreateRequestEmploymentBankIncome OAILinkTokenCreateRequestEmployment::getBankEmployment() const {
    return m_bank_employment;
}
void OAILinkTokenCreateRequestEmployment::setBankEmployment(const OAILinkTokenCreateRequestEmploymentBankIncome &bank_employment) {
    m_bank_employment = bank_employment;
    m_bank_employment_isSet = true;
}

bool OAILinkTokenCreateRequestEmployment::is_bank_employment_Set() const{
    return m_bank_employment_isSet;
}

bool OAILinkTokenCreateRequestEmployment::is_bank_employment_Valid() const{
    return m_bank_employment_isValid;
}

QList<OAIEmploymentSourceType> OAILinkTokenCreateRequestEmployment::getEmploymentSourceTypes() const {
    return m_employment_source_types;
}
void OAILinkTokenCreateRequestEmployment::setEmploymentSourceTypes(const QList<OAIEmploymentSourceType> &employment_source_types) {
    m_employment_source_types = employment_source_types;
    m_employment_source_types_isSet = true;
}

bool OAILinkTokenCreateRequestEmployment::is_employment_source_types_Set() const{
    return m_employment_source_types_isSet;
}

bool OAILinkTokenCreateRequestEmployment::is_employment_source_types_Valid() const{
    return m_employment_source_types_isValid;
}

bool OAILinkTokenCreateRequestEmployment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bank_employment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_employment_source_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkTokenCreateRequestEmployment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
