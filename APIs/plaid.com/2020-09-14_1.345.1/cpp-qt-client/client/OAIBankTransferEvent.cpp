/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBankTransferEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBankTransferEvent::OAIBankTransferEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBankTransferEvent::OAIBankTransferEvent() {
    this->initializeModel();
}

OAIBankTransferEvent::~OAIBankTransferEvent() {}

void OAIBankTransferEvent::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_bank_transfer_amount_isSet = false;
    m_bank_transfer_amount_isValid = false;

    m_bank_transfer_id_isSet = false;
    m_bank_transfer_id_isValid = false;

    m_bank_transfer_iso_currency_code_isSet = false;
    m_bank_transfer_iso_currency_code_isValid = false;

    m_bank_transfer_type_isSet = false;
    m_bank_transfer_type_isValid = false;

    m_direction_isSet = false;
    m_direction_isValid = false;

    m_event_id_isSet = false;
    m_event_id_isValid = false;

    m_event_type_isSet = false;
    m_event_type_isValid = false;

    m_failure_reason_isSet = false;
    m_failure_reason_isValid = false;

    m_origination_account_id_isSet = false;
    m_origination_account_id_isValid = false;

    m_timestamp_isSet = false;
    m_timestamp_isValid = false;
}

void OAIBankTransferEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBankTransferEvent::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_bank_transfer_amount_isValid = ::OpenAPI::fromJsonValue(m_bank_transfer_amount, json[QString("bank_transfer_amount")]);
    m_bank_transfer_amount_isSet = !json[QString("bank_transfer_amount")].isNull() && m_bank_transfer_amount_isValid;

    m_bank_transfer_id_isValid = ::OpenAPI::fromJsonValue(m_bank_transfer_id, json[QString("bank_transfer_id")]);
    m_bank_transfer_id_isSet = !json[QString("bank_transfer_id")].isNull() && m_bank_transfer_id_isValid;

    m_bank_transfer_iso_currency_code_isValid = ::OpenAPI::fromJsonValue(m_bank_transfer_iso_currency_code, json[QString("bank_transfer_iso_currency_code")]);
    m_bank_transfer_iso_currency_code_isSet = !json[QString("bank_transfer_iso_currency_code")].isNull() && m_bank_transfer_iso_currency_code_isValid;

    m_bank_transfer_type_isValid = ::OpenAPI::fromJsonValue(m_bank_transfer_type, json[QString("bank_transfer_type")]);
    m_bank_transfer_type_isSet = !json[QString("bank_transfer_type")].isNull() && m_bank_transfer_type_isValid;

    m_direction_isValid = ::OpenAPI::fromJsonValue(m_direction, json[QString("direction")]);
    m_direction_isSet = !json[QString("direction")].isNull() && m_direction_isValid;

    m_event_id_isValid = ::OpenAPI::fromJsonValue(m_event_id, json[QString("event_id")]);
    m_event_id_isSet = !json[QString("event_id")].isNull() && m_event_id_isValid;

    m_event_type_isValid = ::OpenAPI::fromJsonValue(m_event_type, json[QString("event_type")]);
    m_event_type_isSet = !json[QString("event_type")].isNull() && m_event_type_isValid;

    m_failure_reason_isValid = ::OpenAPI::fromJsonValue(m_failure_reason, json[QString("failure_reason")]);
    m_failure_reason_isSet = !json[QString("failure_reason")].isNull() && m_failure_reason_isValid;

    m_origination_account_id_isValid = ::OpenAPI::fromJsonValue(m_origination_account_id, json[QString("origination_account_id")]);
    m_origination_account_id_isSet = !json[QString("origination_account_id")].isNull() && m_origination_account_id_isValid;

    m_timestamp_isValid = ::OpenAPI::fromJsonValue(m_timestamp, json[QString("timestamp")]);
    m_timestamp_isSet = !json[QString("timestamp")].isNull() && m_timestamp_isValid;
}

QString OAIBankTransferEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBankTransferEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_bank_transfer_amount_isSet) {
        obj.insert(QString("bank_transfer_amount"), ::OpenAPI::toJsonValue(m_bank_transfer_amount));
    }
    if (m_bank_transfer_id_isSet) {
        obj.insert(QString("bank_transfer_id"), ::OpenAPI::toJsonValue(m_bank_transfer_id));
    }
    if (m_bank_transfer_iso_currency_code_isSet) {
        obj.insert(QString("bank_transfer_iso_currency_code"), ::OpenAPI::toJsonValue(m_bank_transfer_iso_currency_code));
    }
    if (m_bank_transfer_type.isSet()) {
        obj.insert(QString("bank_transfer_type"), ::OpenAPI::toJsonValue(m_bank_transfer_type));
    }
    if (m_direction.isSet()) {
        obj.insert(QString("direction"), ::OpenAPI::toJsonValue(m_direction));
    }
    if (m_event_id_isSet) {
        obj.insert(QString("event_id"), ::OpenAPI::toJsonValue(m_event_id));
    }
    if (m_event_type.isSet()) {
        obj.insert(QString("event_type"), ::OpenAPI::toJsonValue(m_event_type));
    }
    if (m_failure_reason.isSet()) {
        obj.insert(QString("failure_reason"), ::OpenAPI::toJsonValue(m_failure_reason));
    }
    if (m_origination_account_id_isSet) {
        obj.insert(QString("origination_account_id"), ::OpenAPI::toJsonValue(m_origination_account_id));
    }
    if (m_timestamp_isSet) {
        obj.insert(QString("timestamp"), ::OpenAPI::toJsonValue(m_timestamp));
    }
    return obj;
}

QString OAIBankTransferEvent::getAccountId() const {
    return m_account_id;
}
void OAIBankTransferEvent::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIBankTransferEvent::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIBankTransferEvent::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIBankTransferEvent::getBankTransferAmount() const {
    return m_bank_transfer_amount;
}
void OAIBankTransferEvent::setBankTransferAmount(const QString &bank_transfer_amount) {
    m_bank_transfer_amount = bank_transfer_amount;
    m_bank_transfer_amount_isSet = true;
}

bool OAIBankTransferEvent::is_bank_transfer_amount_Set() const{
    return m_bank_transfer_amount_isSet;
}

bool OAIBankTransferEvent::is_bank_transfer_amount_Valid() const{
    return m_bank_transfer_amount_isValid;
}

QString OAIBankTransferEvent::getBankTransferId() const {
    return m_bank_transfer_id;
}
void OAIBankTransferEvent::setBankTransferId(const QString &bank_transfer_id) {
    m_bank_transfer_id = bank_transfer_id;
    m_bank_transfer_id_isSet = true;
}

bool OAIBankTransferEvent::is_bank_transfer_id_Set() const{
    return m_bank_transfer_id_isSet;
}

bool OAIBankTransferEvent::is_bank_transfer_id_Valid() const{
    return m_bank_transfer_id_isValid;
}

QString OAIBankTransferEvent::getBankTransferIsoCurrencyCode() const {
    return m_bank_transfer_iso_currency_code;
}
void OAIBankTransferEvent::setBankTransferIsoCurrencyCode(const QString &bank_transfer_iso_currency_code) {
    m_bank_transfer_iso_currency_code = bank_transfer_iso_currency_code;
    m_bank_transfer_iso_currency_code_isSet = true;
}

bool OAIBankTransferEvent::is_bank_transfer_iso_currency_code_Set() const{
    return m_bank_transfer_iso_currency_code_isSet;
}

bool OAIBankTransferEvent::is_bank_transfer_iso_currency_code_Valid() const{
    return m_bank_transfer_iso_currency_code_isValid;
}

OAIBankTransferType OAIBankTransferEvent::getBankTransferType() const {
    return m_bank_transfer_type;
}
void OAIBankTransferEvent::setBankTransferType(const OAIBankTransferType &bank_transfer_type) {
    m_bank_transfer_type = bank_transfer_type;
    m_bank_transfer_type_isSet = true;
}

bool OAIBankTransferEvent::is_bank_transfer_type_Set() const{
    return m_bank_transfer_type_isSet;
}

bool OAIBankTransferEvent::is_bank_transfer_type_Valid() const{
    return m_bank_transfer_type_isValid;
}

OAIBankTransferDirection OAIBankTransferEvent::getDirection() const {
    return m_direction;
}
void OAIBankTransferEvent::setDirection(const OAIBankTransferDirection &direction) {
    m_direction = direction;
    m_direction_isSet = true;
}

bool OAIBankTransferEvent::is_direction_Set() const{
    return m_direction_isSet;
}

bool OAIBankTransferEvent::is_direction_Valid() const{
    return m_direction_isValid;
}

qint32 OAIBankTransferEvent::getEventId() const {
    return m_event_id;
}
void OAIBankTransferEvent::setEventId(const qint32 &event_id) {
    m_event_id = event_id;
    m_event_id_isSet = true;
}

bool OAIBankTransferEvent::is_event_id_Set() const{
    return m_event_id_isSet;
}

bool OAIBankTransferEvent::is_event_id_Valid() const{
    return m_event_id_isValid;
}

OAIBankTransferEventType OAIBankTransferEvent::getEventType() const {
    return m_event_type;
}
void OAIBankTransferEvent::setEventType(const OAIBankTransferEventType &event_type) {
    m_event_type = event_type;
    m_event_type_isSet = true;
}

bool OAIBankTransferEvent::is_event_type_Set() const{
    return m_event_type_isSet;
}

bool OAIBankTransferEvent::is_event_type_Valid() const{
    return m_event_type_isValid;
}

OAIBankTransferFailure OAIBankTransferEvent::getFailureReason() const {
    return m_failure_reason;
}
void OAIBankTransferEvent::setFailureReason(const OAIBankTransferFailure &failure_reason) {
    m_failure_reason = failure_reason;
    m_failure_reason_isSet = true;
}

bool OAIBankTransferEvent::is_failure_reason_Set() const{
    return m_failure_reason_isSet;
}

bool OAIBankTransferEvent::is_failure_reason_Valid() const{
    return m_failure_reason_isValid;
}

QString OAIBankTransferEvent::getOriginationAccountId() const {
    return m_origination_account_id;
}
void OAIBankTransferEvent::setOriginationAccountId(const QString &origination_account_id) {
    m_origination_account_id = origination_account_id;
    m_origination_account_id_isSet = true;
}

bool OAIBankTransferEvent::is_origination_account_id_Set() const{
    return m_origination_account_id_isSet;
}

bool OAIBankTransferEvent::is_origination_account_id_Valid() const{
    return m_origination_account_id_isValid;
}

QDateTime OAIBankTransferEvent::getTimestamp() const {
    return m_timestamp;
}
void OAIBankTransferEvent::setTimestamp(const QDateTime &timestamp) {
    m_timestamp = timestamp;
    m_timestamp_isSet = true;
}

bool OAIBankTransferEvent::is_timestamp_Set() const{
    return m_timestamp_isSet;
}

bool OAIBankTransferEvent::is_timestamp_Valid() const{
    return m_timestamp_isValid;
}

bool OAIBankTransferEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_transfer_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_transfer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_transfer_iso_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_transfer_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_direction.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_failure_reason.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_origination_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBankTransferEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_bank_transfer_amount_isValid && m_bank_transfer_id_isValid && m_bank_transfer_iso_currency_code_isValid && m_bank_transfer_type_isValid && m_direction_isValid && m_event_id_isValid && m_event_type_isValid && m_failure_reason_isValid && m_origination_account_id_isValid && m_timestamp_isValid && true;
}

} // namespace OpenAPI
