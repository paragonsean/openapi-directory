/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransferIntentCreateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransferIntentCreateRequest::OAITransferIntentCreateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransferIntentCreateRequest::OAITransferIntentCreateRequest() {
    this->initializeModel();
}

OAITransferIntentCreateRequest::~OAITransferIntentCreateRequest() {}

void OAITransferIntentCreateRequest::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_ach_class_isSet = false;
    m_ach_class_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_funding_account_id_isSet = false;
    m_funding_account_id_isValid = false;

    m_iso_currency_code_isSet = false;
    m_iso_currency_code_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_mode_isSet = false;
    m_mode_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_origination_account_id_isSet = false;
    m_origination_account_id_isValid = false;

    m_require_guarantee_isSet = false;
    m_require_guarantee_isValid = false;

    m_secret_isSet = false;
    m_secret_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;
}

void OAITransferIntentCreateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransferIntentCreateRequest::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_ach_class_isValid = ::OpenAPI::fromJsonValue(m_ach_class, json[QString("ach_class")]);
    m_ach_class_isSet = !json[QString("ach_class")].isNull() && m_ach_class_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("client_id")]);
    m_client_id_isSet = !json[QString("client_id")].isNull() && m_client_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_funding_account_id_isValid = ::OpenAPI::fromJsonValue(m_funding_account_id, json[QString("funding_account_id")]);
    m_funding_account_id_isSet = !json[QString("funding_account_id")].isNull() && m_funding_account_id_isValid;

    m_iso_currency_code_isValid = ::OpenAPI::fromJsonValue(m_iso_currency_code, json[QString("iso_currency_code")]);
    m_iso_currency_code_isSet = !json[QString("iso_currency_code")].isNull() && m_iso_currency_code_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_mode_isValid = ::OpenAPI::fromJsonValue(m_mode, json[QString("mode")]);
    m_mode_isSet = !json[QString("mode")].isNull() && m_mode_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_origination_account_id_isValid = ::OpenAPI::fromJsonValue(m_origination_account_id, json[QString("origination_account_id")]);
    m_origination_account_id_isSet = !json[QString("origination_account_id")].isNull() && m_origination_account_id_isValid;

    m_require_guarantee_isValid = ::OpenAPI::fromJsonValue(m_require_guarantee, json[QString("require_guarantee")]);
    m_require_guarantee_isSet = !json[QString("require_guarantee")].isNull() && m_require_guarantee_isValid;

    m_secret_isValid = ::OpenAPI::fromJsonValue(m_secret, json[QString("secret")]);
    m_secret_isSet = !json[QString("secret")].isNull() && m_secret_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;
}

QString OAITransferIntentCreateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransferIntentCreateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_ach_class.isSet()) {
        obj.insert(QString("ach_class"), ::OpenAPI::toJsonValue(m_ach_class));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_client_id_isSet) {
        obj.insert(QString("client_id"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_funding_account_id_isSet) {
        obj.insert(QString("funding_account_id"), ::OpenAPI::toJsonValue(m_funding_account_id));
    }
    if (m_iso_currency_code_isSet) {
        obj.insert(QString("iso_currency_code"), ::OpenAPI::toJsonValue(m_iso_currency_code));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_mode.isSet()) {
        obj.insert(QString("mode"), ::OpenAPI::toJsonValue(m_mode));
    }
    if (m_network.isSet()) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_origination_account_id_isSet) {
        obj.insert(QString("origination_account_id"), ::OpenAPI::toJsonValue(m_origination_account_id));
    }
    if (m_require_guarantee_isSet) {
        obj.insert(QString("require_guarantee"), ::OpenAPI::toJsonValue(m_require_guarantee));
    }
    if (m_secret_isSet) {
        obj.insert(QString("secret"), ::OpenAPI::toJsonValue(m_secret));
    }
    if (m_user.isSet()) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    return obj;
}

QString OAITransferIntentCreateRequest::getAccountId() const {
    return m_account_id;
}
void OAITransferIntentCreateRequest::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAITransferIntentCreateRequest::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAITransferIntentCreateRequest::is_account_id_Valid() const{
    return m_account_id_isValid;
}

OAIACHClass OAITransferIntentCreateRequest::getAchClass() const {
    return m_ach_class;
}
void OAITransferIntentCreateRequest::setAchClass(const OAIACHClass &ach_class) {
    m_ach_class = ach_class;
    m_ach_class_isSet = true;
}

bool OAITransferIntentCreateRequest::is_ach_class_Set() const{
    return m_ach_class_isSet;
}

bool OAITransferIntentCreateRequest::is_ach_class_Valid() const{
    return m_ach_class_isValid;
}

QString OAITransferIntentCreateRequest::getAmount() const {
    return m_amount;
}
void OAITransferIntentCreateRequest::setAmount(const QString &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAITransferIntentCreateRequest::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAITransferIntentCreateRequest::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAITransferIntentCreateRequest::getClientId() const {
    return m_client_id;
}
void OAITransferIntentCreateRequest::setClientId(const QString &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAITransferIntentCreateRequest::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAITransferIntentCreateRequest::is_client_id_Valid() const{
    return m_client_id_isValid;
}

QString OAITransferIntentCreateRequest::getDescription() const {
    return m_description;
}
void OAITransferIntentCreateRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITransferIntentCreateRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAITransferIntentCreateRequest::is_description_Valid() const{
    return m_description_isValid;
}

QString OAITransferIntentCreateRequest::getFundingAccountId() const {
    return m_funding_account_id;
}
void OAITransferIntentCreateRequest::setFundingAccountId(const QString &funding_account_id) {
    m_funding_account_id = funding_account_id;
    m_funding_account_id_isSet = true;
}

bool OAITransferIntentCreateRequest::is_funding_account_id_Set() const{
    return m_funding_account_id_isSet;
}

bool OAITransferIntentCreateRequest::is_funding_account_id_Valid() const{
    return m_funding_account_id_isValid;
}

QString OAITransferIntentCreateRequest::getIsoCurrencyCode() const {
    return m_iso_currency_code;
}
void OAITransferIntentCreateRequest::setIsoCurrencyCode(const QString &iso_currency_code) {
    m_iso_currency_code = iso_currency_code;
    m_iso_currency_code_isSet = true;
}

bool OAITransferIntentCreateRequest::is_iso_currency_code_Set() const{
    return m_iso_currency_code_isSet;
}

bool OAITransferIntentCreateRequest::is_iso_currency_code_Valid() const{
    return m_iso_currency_code_isValid;
}

QMap<QString, QString> OAITransferIntentCreateRequest::getMetadata() const {
    return m_metadata;
}
void OAITransferIntentCreateRequest::setMetadata(const QMap<QString, QString> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAITransferIntentCreateRequest::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAITransferIntentCreateRequest::is_metadata_Valid() const{
    return m_metadata_isValid;
}

OAITransferIntentCreateMode OAITransferIntentCreateRequest::getMode() const {
    return m_mode;
}
void OAITransferIntentCreateRequest::setMode(const OAITransferIntentCreateMode &mode) {
    m_mode = mode;
    m_mode_isSet = true;
}

bool OAITransferIntentCreateRequest::is_mode_Set() const{
    return m_mode_isSet;
}

bool OAITransferIntentCreateRequest::is_mode_Valid() const{
    return m_mode_isValid;
}

OAITransferIntentCreateNetwork OAITransferIntentCreateRequest::getNetwork() const {
    return m_network;
}
void OAITransferIntentCreateRequest::setNetwork(const OAITransferIntentCreateNetwork &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAITransferIntentCreateRequest::is_network_Set() const{
    return m_network_isSet;
}

bool OAITransferIntentCreateRequest::is_network_Valid() const{
    return m_network_isValid;
}

QString OAITransferIntentCreateRequest::getOriginationAccountId() const {
    return m_origination_account_id;
}
void OAITransferIntentCreateRequest::setOriginationAccountId(const QString &origination_account_id) {
    m_origination_account_id = origination_account_id;
    m_origination_account_id_isSet = true;
}

bool OAITransferIntentCreateRequest::is_origination_account_id_Set() const{
    return m_origination_account_id_isSet;
}

bool OAITransferIntentCreateRequest::is_origination_account_id_Valid() const{
    return m_origination_account_id_isValid;
}

bool OAITransferIntentCreateRequest::isRequireGuarantee() const {
    return m_require_guarantee;
}
void OAITransferIntentCreateRequest::setRequireGuarantee(const bool &require_guarantee) {
    m_require_guarantee = require_guarantee;
    m_require_guarantee_isSet = true;
}

bool OAITransferIntentCreateRequest::is_require_guarantee_Set() const{
    return m_require_guarantee_isSet;
}

bool OAITransferIntentCreateRequest::is_require_guarantee_Valid() const{
    return m_require_guarantee_isValid;
}

QString OAITransferIntentCreateRequest::getSecret() const {
    return m_secret;
}
void OAITransferIntentCreateRequest::setSecret(const QString &secret) {
    m_secret = secret;
    m_secret_isSet = true;
}

bool OAITransferIntentCreateRequest::is_secret_Set() const{
    return m_secret_isSet;
}

bool OAITransferIntentCreateRequest::is_secret_Valid() const{
    return m_secret_isValid;
}

OAITransferUserInRequest OAITransferIntentCreateRequest::getUser() const {
    return m_user;
}
void OAITransferIntentCreateRequest::setUser(const OAITransferUserInRequest &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAITransferIntentCreateRequest::is_user_Set() const{
    return m_user_isSet;
}

bool OAITransferIntentCreateRequest::is_user_Valid() const{
    return m_user_isValid;
}

bool OAITransferIntentCreateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ach_class.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_funding_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_mode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_network.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_origination_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_require_guarantee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransferIntentCreateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_description_isValid && m_mode_isValid && m_user_isValid && true;
}

} // namespace OpenAPI
