/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOwnershipType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOwnershipType::OAIOwnershipType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOwnershipType::OAIOwnershipType() {
    this->initializeModel();
}

OAIOwnershipType::~OAIOwnershipType() {}

void OAIOwnershipType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOwnershipType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOwnershipType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("individual", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOwnershipType::INDIVIDUAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("joint", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOwnershipType::JOINT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("association", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOwnershipType::ASSOCIATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("trust", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOwnershipType::TRUST;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOwnershipType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOwnershipType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOwnershipType::INDIVIDUAL:
            val = "individual";
            break;
        case eOAIOwnershipType::JOINT:
            val = "joint";
            break;
        case eOAIOwnershipType::ASSOCIATION:
            val = "association";
            break;
        case eOAIOwnershipType::TRUST:
            val = "trust";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOwnershipType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOwnershipType::eOAIOwnershipType OAIOwnershipType::getValue() const {
    return m_value;
}

void OAIOwnershipType::setValue(const OAIOwnershipType::eOAIOwnershipType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOwnershipType::isSet() const {
    
    return m_value_isSet;
}

bool OAIOwnershipType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
