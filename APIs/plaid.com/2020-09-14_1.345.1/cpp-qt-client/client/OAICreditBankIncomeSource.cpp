/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditBankIncomeSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditBankIncomeSource::OAICreditBankIncomeSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditBankIncomeSource::OAICreditBankIncomeSource() {
    this->initializeModel();
}

OAICreditBankIncomeSource::~OAICreditBankIncomeSource() {}

void OAICreditBankIncomeSource::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_historical_summary_isSet = false;
    m_historical_summary_isValid = false;

    m_income_category_isSet = false;
    m_income_category_isValid = false;

    m_income_description_isSet = false;
    m_income_description_isValid = false;

    m_income_source_id_isSet = false;
    m_income_source_id_isValid = false;

    m_pay_frequency_isSet = false;
    m_pay_frequency_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_total_amount_isSet = false;
    m_total_amount_isValid = false;

    m_transaction_count_isSet = false;
    m_transaction_count_isValid = false;
}

void OAICreditBankIncomeSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditBankIncomeSource::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("end_date")]);
    m_end_date_isSet = !json[QString("end_date")].isNull() && m_end_date_isValid;

    m_historical_summary_isValid = ::OpenAPI::fromJsonValue(m_historical_summary, json[QString("historical_summary")]);
    m_historical_summary_isSet = !json[QString("historical_summary")].isNull() && m_historical_summary_isValid;

    m_income_category_isValid = ::OpenAPI::fromJsonValue(m_income_category, json[QString("income_category")]);
    m_income_category_isSet = !json[QString("income_category")].isNull() && m_income_category_isValid;

    m_income_description_isValid = ::OpenAPI::fromJsonValue(m_income_description, json[QString("income_description")]);
    m_income_description_isSet = !json[QString("income_description")].isNull() && m_income_description_isValid;

    m_income_source_id_isValid = ::OpenAPI::fromJsonValue(m_income_source_id, json[QString("income_source_id")]);
    m_income_source_id_isSet = !json[QString("income_source_id")].isNull() && m_income_source_id_isValid;

    m_pay_frequency_isValid = ::OpenAPI::fromJsonValue(m_pay_frequency, json[QString("pay_frequency")]);
    m_pay_frequency_isSet = !json[QString("pay_frequency")].isNull() && m_pay_frequency_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("start_date")]);
    m_start_date_isSet = !json[QString("start_date")].isNull() && m_start_date_isValid;

    m_total_amount_isValid = ::OpenAPI::fromJsonValue(m_total_amount, json[QString("total_amount")]);
    m_total_amount_isSet = !json[QString("total_amount")].isNull() && m_total_amount_isValid;

    m_transaction_count_isValid = ::OpenAPI::fromJsonValue(m_transaction_count, json[QString("transaction_count")]);
    m_transaction_count_isSet = !json[QString("transaction_count")].isNull() && m_transaction_count_isValid;
}

QString OAICreditBankIncomeSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditBankIncomeSource::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("end_date"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_historical_summary.size() > 0) {
        obj.insert(QString("historical_summary"), ::OpenAPI::toJsonValue(m_historical_summary));
    }
    if (m_income_category.isSet()) {
        obj.insert(QString("income_category"), ::OpenAPI::toJsonValue(m_income_category));
    }
    if (m_income_description_isSet) {
        obj.insert(QString("income_description"), ::OpenAPI::toJsonValue(m_income_description));
    }
    if (m_income_source_id_isSet) {
        obj.insert(QString("income_source_id"), ::OpenAPI::toJsonValue(m_income_source_id));
    }
    if (m_pay_frequency.isSet()) {
        obj.insert(QString("pay_frequency"), ::OpenAPI::toJsonValue(m_pay_frequency));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("start_date"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_total_amount_isSet) {
        obj.insert(QString("total_amount"), ::OpenAPI::toJsonValue(m_total_amount));
    }
    if (m_transaction_count_isSet) {
        obj.insert(QString("transaction_count"), ::OpenAPI::toJsonValue(m_transaction_count));
    }
    return obj;
}

QString OAICreditBankIncomeSource::getAccountId() const {
    return m_account_id;
}
void OAICreditBankIncomeSource::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAICreditBankIncomeSource::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAICreditBankIncomeSource::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QDate OAICreditBankIncomeSource::getEndDate() const {
    return m_end_date;
}
void OAICreditBankIncomeSource::setEndDate(const QDate &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAICreditBankIncomeSource::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAICreditBankIncomeSource::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QList<OAICreditBankIncomeHistoricalSummary> OAICreditBankIncomeSource::getHistoricalSummary() const {
    return m_historical_summary;
}
void OAICreditBankIncomeSource::setHistoricalSummary(const QList<OAICreditBankIncomeHistoricalSummary> &historical_summary) {
    m_historical_summary = historical_summary;
    m_historical_summary_isSet = true;
}

bool OAICreditBankIncomeSource::is_historical_summary_Set() const{
    return m_historical_summary_isSet;
}

bool OAICreditBankIncomeSource::is_historical_summary_Valid() const{
    return m_historical_summary_isValid;
}

OAICreditBankIncomeCategory OAICreditBankIncomeSource::getIncomeCategory() const {
    return m_income_category;
}
void OAICreditBankIncomeSource::setIncomeCategory(const OAICreditBankIncomeCategory &income_category) {
    m_income_category = income_category;
    m_income_category_isSet = true;
}

bool OAICreditBankIncomeSource::is_income_category_Set() const{
    return m_income_category_isSet;
}

bool OAICreditBankIncomeSource::is_income_category_Valid() const{
    return m_income_category_isValid;
}

QString OAICreditBankIncomeSource::getIncomeDescription() const {
    return m_income_description;
}
void OAICreditBankIncomeSource::setIncomeDescription(const QString &income_description) {
    m_income_description = income_description;
    m_income_description_isSet = true;
}

bool OAICreditBankIncomeSource::is_income_description_Set() const{
    return m_income_description_isSet;
}

bool OAICreditBankIncomeSource::is_income_description_Valid() const{
    return m_income_description_isValid;
}

QString OAICreditBankIncomeSource::getIncomeSourceId() const {
    return m_income_source_id;
}
void OAICreditBankIncomeSource::setIncomeSourceId(const QString &income_source_id) {
    m_income_source_id = income_source_id;
    m_income_source_id_isSet = true;
}

bool OAICreditBankIncomeSource::is_income_source_id_Set() const{
    return m_income_source_id_isSet;
}

bool OAICreditBankIncomeSource::is_income_source_id_Valid() const{
    return m_income_source_id_isValid;
}

OAICreditBankIncomePayFrequency OAICreditBankIncomeSource::getPayFrequency() const {
    return m_pay_frequency;
}
void OAICreditBankIncomeSource::setPayFrequency(const OAICreditBankIncomePayFrequency &pay_frequency) {
    m_pay_frequency = pay_frequency;
    m_pay_frequency_isSet = true;
}

bool OAICreditBankIncomeSource::is_pay_frequency_Set() const{
    return m_pay_frequency_isSet;
}

bool OAICreditBankIncomeSource::is_pay_frequency_Valid() const{
    return m_pay_frequency_isValid;
}

QDate OAICreditBankIncomeSource::getStartDate() const {
    return m_start_date;
}
void OAICreditBankIncomeSource::setStartDate(const QDate &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAICreditBankIncomeSource::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAICreditBankIncomeSource::is_start_date_Valid() const{
    return m_start_date_isValid;
}

double OAICreditBankIncomeSource::getTotalAmount() const {
    return m_total_amount;
}
void OAICreditBankIncomeSource::setTotalAmount(const double &total_amount) {
    m_total_amount = total_amount;
    m_total_amount_isSet = true;
}

bool OAICreditBankIncomeSource::is_total_amount_Set() const{
    return m_total_amount_isSet;
}

bool OAICreditBankIncomeSource::is_total_amount_Valid() const{
    return m_total_amount_isValid;
}

qint32 OAICreditBankIncomeSource::getTransactionCount() const {
    return m_transaction_count;
}
void OAICreditBankIncomeSource::setTransactionCount(const qint32 &transaction_count) {
    m_transaction_count = transaction_count;
    m_transaction_count_isSet = true;
}

bool OAICreditBankIncomeSource::is_transaction_count_Set() const{
    return m_transaction_count_isSet;
}

bool OAICreditBankIncomeSource::is_transaction_count_Valid() const{
    return m_transaction_count_isValid;
}

bool OAICreditBankIncomeSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_historical_summary.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_income_category.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_income_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_income_source_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_frequency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditBankIncomeSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
