/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFDXNotificationPayloadIdType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFDXNotificationPayloadIdType::OAIFDXNotificationPayloadIdType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFDXNotificationPayloadIdType::OAIFDXNotificationPayloadIdType() {
    this->initializeModel();
}

OAIFDXNotificationPayloadIdType::~OAIFDXNotificationPayloadIdType() {}

void OAIFDXNotificationPayloadIdType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIFDXNotificationPayloadIdType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIFDXNotificationPayloadIdType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ACCOUNT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFDXNotificationPayloadIdType::ACCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CUSTOMER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFDXNotificationPayloadIdType::CUSTOMER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PARTY", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFDXNotificationPayloadIdType::PARTY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MAINTENANCE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFDXNotificationPayloadIdType::MAINTENANCE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CONSENT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIFDXNotificationPayloadIdType::CONSENT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIFDXNotificationPayloadIdType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIFDXNotificationPayloadIdType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIFDXNotificationPayloadIdType::ACCOUNT:
            val = "ACCOUNT";
            break;
        case eOAIFDXNotificationPayloadIdType::CUSTOMER:
            val = "CUSTOMER";
            break;
        case eOAIFDXNotificationPayloadIdType::PARTY:
            val = "PARTY";
            break;
        case eOAIFDXNotificationPayloadIdType::MAINTENANCE:
            val = "MAINTENANCE";
            break;
        case eOAIFDXNotificationPayloadIdType::CONSENT:
            val = "CONSENT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIFDXNotificationPayloadIdType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIFDXNotificationPayloadIdType::eOAIFDXNotificationPayloadIdType OAIFDXNotificationPayloadIdType::getValue() const {
    return m_value;
}

void OAIFDXNotificationPayloadIdType::setValue(const OAIFDXNotificationPayloadIdType::eOAIFDXNotificationPayloadIdType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIFDXNotificationPayloadIdType::isSet() const {
    
    return m_value_isSet;
}

bool OAIFDXNotificationPayloadIdType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
