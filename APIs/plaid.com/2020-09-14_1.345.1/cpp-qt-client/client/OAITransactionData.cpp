/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransactionData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransactionData::OAITransactionData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransactionData::OAITransactionData() {
    this->initializeModel();
}

OAITransactionData::~OAITransactionData() {}

void OAITransactionData::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;
}

void OAITransactionData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransactionData::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transaction_id")]);
    m_transaction_id_isSet = !json[QString("transaction_id")].isNull() && m_transaction_id_isValid;
}

QString OAITransactionData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransactionData::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transaction_id"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    return obj;
}

QString OAITransactionData::getAccountId() const {
    return m_account_id;
}
void OAITransactionData::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAITransactionData::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAITransactionData::is_account_id_Valid() const{
    return m_account_id_isValid;
}

double OAITransactionData::getAmount() const {
    return m_amount;
}
void OAITransactionData::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAITransactionData::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAITransactionData::is_amount_Valid() const{
    return m_amount_isValid;
}

QDate OAITransactionData::getDate() const {
    return m_date;
}
void OAITransactionData::setDate(const QDate &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAITransactionData::is_date_Set() const{
    return m_date_isSet;
}

bool OAITransactionData::is_date_Valid() const{
    return m_date_isValid;
}

QString OAITransactionData::getDescription() const {
    return m_description;
}
void OAITransactionData::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITransactionData::is_description_Set() const{
    return m_description_isSet;
}

bool OAITransactionData::is_description_Valid() const{
    return m_description_isValid;
}

QString OAITransactionData::getTransactionId() const {
    return m_transaction_id;
}
void OAITransactionData::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAITransactionData::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAITransactionData::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

bool OAITransactionData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransactionData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_amount_isValid && m_date_isValid && m_description_isValid && m_transaction_id_isValid && true;
}

} // namespace OpenAPI
