/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIndividualWatchlistCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIndividualWatchlistCode::OAIIndividualWatchlistCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIndividualWatchlistCode::OAIIndividualWatchlistCode() {
    this->initializeModel();
}

OAIIndividualWatchlistCode::~OAIIndividualWatchlistCode() {}

void OAIIndividualWatchlistCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIIndividualWatchlistCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIIndividualWatchlistCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AU_CON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::AU_CON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CA_CON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::CA_CON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EU_CON", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::EU_CON;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IZ_CIA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::IZ_CIA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IZ_IPL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::IZ_IPL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IZ_PEP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::IZ_PEP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IZ_UNC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::IZ_UNC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IZ_WBK", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::IZ_WBK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UK_HMC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::UK_HMC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_DPL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::US_DPL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_DTC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::US_DTC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_FBI", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::US_FBI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_FSE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::US_FSE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_ISN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::US_ISN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_MBS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::US_MBS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_PLC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::US_PLC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_SDN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::US_SDN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("US_SSI", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::US_SSI;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SG_SOF", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::SG_SOF;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TR_TWL", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::TR_TWL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TR_DFD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::TR_DFD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TR_FOR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::TR_FOR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TR_WMD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::TR_WMD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TR_CMB", Qt::CaseInsensitive) == 0) {
        m_value = eOAIIndividualWatchlistCode::TR_CMB;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIIndividualWatchlistCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIIndividualWatchlistCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIIndividualWatchlistCode::AU_CON:
            val = "AU_CON";
            break;
        case eOAIIndividualWatchlistCode::CA_CON:
            val = "CA_CON";
            break;
        case eOAIIndividualWatchlistCode::EU_CON:
            val = "EU_CON";
            break;
        case eOAIIndividualWatchlistCode::IZ_CIA:
            val = "IZ_CIA";
            break;
        case eOAIIndividualWatchlistCode::IZ_IPL:
            val = "IZ_IPL";
            break;
        case eOAIIndividualWatchlistCode::IZ_PEP:
            val = "IZ_PEP";
            break;
        case eOAIIndividualWatchlistCode::IZ_UNC:
            val = "IZ_UNC";
            break;
        case eOAIIndividualWatchlistCode::IZ_WBK:
            val = "IZ_WBK";
            break;
        case eOAIIndividualWatchlistCode::UK_HMC:
            val = "UK_HMC";
            break;
        case eOAIIndividualWatchlistCode::US_DPL:
            val = "US_DPL";
            break;
        case eOAIIndividualWatchlistCode::US_DTC:
            val = "US_DTC";
            break;
        case eOAIIndividualWatchlistCode::US_FBI:
            val = "US_FBI";
            break;
        case eOAIIndividualWatchlistCode::US_FSE:
            val = "US_FSE";
            break;
        case eOAIIndividualWatchlistCode::US_ISN:
            val = "US_ISN";
            break;
        case eOAIIndividualWatchlistCode::US_MBS:
            val = "US_MBS";
            break;
        case eOAIIndividualWatchlistCode::US_PLC:
            val = "US_PLC";
            break;
        case eOAIIndividualWatchlistCode::US_SDN:
            val = "US_SDN";
            break;
        case eOAIIndividualWatchlistCode::US_SSI:
            val = "US_SSI";
            break;
        case eOAIIndividualWatchlistCode::SG_SOF:
            val = "SG_SOF";
            break;
        case eOAIIndividualWatchlistCode::TR_TWL:
            val = "TR_TWL";
            break;
        case eOAIIndividualWatchlistCode::TR_DFD:
            val = "TR_DFD";
            break;
        case eOAIIndividualWatchlistCode::TR_FOR:
            val = "TR_FOR";
            break;
        case eOAIIndividualWatchlistCode::TR_WMD:
            val = "TR_WMD";
            break;
        case eOAIIndividualWatchlistCode::TR_CMB:
            val = "TR_CMB";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIIndividualWatchlistCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIIndividualWatchlistCode::eOAIIndividualWatchlistCode OAIIndividualWatchlistCode::getValue() const {
    return m_value;
}

void OAIIndividualWatchlistCode::setValue(const OAIIndividualWatchlistCode::eOAIIndividualWatchlistCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIIndividualWatchlistCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIIndividualWatchlistCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
