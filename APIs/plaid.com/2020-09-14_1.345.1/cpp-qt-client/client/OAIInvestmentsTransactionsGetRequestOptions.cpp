/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvestmentsTransactionsGetRequestOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvestmentsTransactionsGetRequestOptions::OAIInvestmentsTransactionsGetRequestOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvestmentsTransactionsGetRequestOptions::OAIInvestmentsTransactionsGetRequestOptions() {
    this->initializeModel();
}

OAIInvestmentsTransactionsGetRequestOptions::~OAIInvestmentsTransactionsGetRequestOptions() {}

void OAIInvestmentsTransactionsGetRequestOptions::initializeModel() {

    m_account_ids_isSet = false;
    m_account_ids_isValid = false;

    m_count_isSet = false;
    m_count_isValid = false;

    m_offset_isSet = false;
    m_offset_isValid = false;
}

void OAIInvestmentsTransactionsGetRequestOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvestmentsTransactionsGetRequestOptions::fromJsonObject(QJsonObject json) {

    m_account_ids_isValid = ::OpenAPI::fromJsonValue(m_account_ids, json[QString("account_ids")]);
    m_account_ids_isSet = !json[QString("account_ids")].isNull() && m_account_ids_isValid;

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("count")]);
    m_count_isSet = !json[QString("count")].isNull() && m_count_isValid;

    m_offset_isValid = ::OpenAPI::fromJsonValue(m_offset, json[QString("offset")]);
    m_offset_isSet = !json[QString("offset")].isNull() && m_offset_isValid;
}

QString OAIInvestmentsTransactionsGetRequestOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvestmentsTransactionsGetRequestOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_account_ids.size() > 0) {
        obj.insert(QString("account_ids"), ::OpenAPI::toJsonValue(m_account_ids));
    }
    if (m_count_isSet) {
        obj.insert(QString("count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_offset_isSet) {
        obj.insert(QString("offset"), ::OpenAPI::toJsonValue(m_offset));
    }
    return obj;
}

QList<QString> OAIInvestmentsTransactionsGetRequestOptions::getAccountIds() const {
    return m_account_ids;
}
void OAIInvestmentsTransactionsGetRequestOptions::setAccountIds(const QList<QString> &account_ids) {
    m_account_ids = account_ids;
    m_account_ids_isSet = true;
}

bool OAIInvestmentsTransactionsGetRequestOptions::is_account_ids_Set() const{
    return m_account_ids_isSet;
}

bool OAIInvestmentsTransactionsGetRequestOptions::is_account_ids_Valid() const{
    return m_account_ids_isValid;
}

qint32 OAIInvestmentsTransactionsGetRequestOptions::getCount() const {
    return m_count;
}
void OAIInvestmentsTransactionsGetRequestOptions::setCount(const qint32 &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAIInvestmentsTransactionsGetRequestOptions::is_count_Set() const{
    return m_count_isSet;
}

bool OAIInvestmentsTransactionsGetRequestOptions::is_count_Valid() const{
    return m_count_isValid;
}

qint32 OAIInvestmentsTransactionsGetRequestOptions::getOffset() const {
    return m_offset;
}
void OAIInvestmentsTransactionsGetRequestOptions::setOffset(const qint32 &offset) {
    m_offset = offset;
    m_offset_isSet = true;
}

bool OAIInvestmentsTransactionsGetRequestOptions::is_offset_Set() const{
    return m_offset_isSet;
}

bool OAIInvestmentsTransactionsGetRequestOptions::is_offset_Valid() const{
    return m_offset_isValid;
}

bool OAIInvestmentsTransactionsGetRequestOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offset_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvestmentsTransactionsGetRequestOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
