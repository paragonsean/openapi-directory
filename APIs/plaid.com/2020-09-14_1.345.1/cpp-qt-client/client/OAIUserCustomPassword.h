/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserCustomPassword.h
 *
 * Custom test accounts are configured with a JSON configuration object formulated according to the schema below. All top level fields are optional. Sending an empty object as a configuration will result in an account configured with random balances and transaction history.
 */

#ifndef OAIUserCustomPassword_H
#define OAIUserCustomPassword_H

#include <QJsonObject>

#include "OAIMFA.h"
#include "OAIOverrideAccounts.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserCustomPassword : public OAIObject {
public:
    OAIUserCustomPassword();
    OAIUserCustomPassword(QString json);
    ~OAIUserCustomPassword() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getForceError() const;
    void setForceError(const QString &force_error);
    bool is_force_error_Set() const;
    bool is_force_error_Valid() const;

    OAIMFA getMfa() const;
    void setMfa(const OAIMFA &mfa);
    bool is_mfa_Set() const;
    bool is_mfa_Valid() const;

    QList<OAIOverrideAccounts> getOverrideAccounts() const;
    void setOverrideAccounts(const QList<OAIOverrideAccounts> &override_accounts);
    bool is_override_accounts_Set() const;
    bool is_override_accounts_Valid() const;

    QString getRecaptcha() const;
    void setRecaptcha(const QString &recaptcha);
    bool is_recaptcha_Set() const;
    bool is_recaptcha_Valid() const;

    QString getSeed() const;
    void setSeed(const QString &seed);
    bool is_seed_Set() const;
    bool is_seed_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_force_error;
    bool m_force_error_isSet;
    bool m_force_error_isValid;

    OAIMFA m_mfa;
    bool m_mfa_isSet;
    bool m_mfa_isValid;

    QList<OAIOverrideAccounts> m_override_accounts;
    bool m_override_accounts_isSet;
    bool m_override_accounts_isValid;

    QString m_recaptcha;
    bool m_recaptcha_isSet;
    bool m_recaptcha_isValid;

    QString m_seed;
    bool m_seed_isSet;
    bool m_seed_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserCustomPassword)

#endif // OAIUserCustomPassword_H
