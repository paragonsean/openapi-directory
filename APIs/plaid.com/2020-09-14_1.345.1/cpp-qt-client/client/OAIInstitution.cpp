/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstitution.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstitution::OAIInstitution(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstitution::OAIInstitution() {
    this->initializeModel();
}

OAIInstitution::~OAIInstitution() {}

void OAIInstitution::initializeModel() {

    m_auth_metadata_isSet = false;
    m_auth_metadata_isValid = false;

    m_country_codes_isSet = false;
    m_country_codes_isValid = false;

    m_dtc_numbers_isSet = false;
    m_dtc_numbers_isValid = false;

    m_institution_id_isSet = false;
    m_institution_id_isValid = false;

    m_logo_isSet = false;
    m_logo_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_oauth_isSet = false;
    m_oauth_isValid = false;

    m_payment_initiation_metadata_isSet = false;
    m_payment_initiation_metadata_isValid = false;

    m_primary_color_isSet = false;
    m_primary_color_isValid = false;

    m_products_isSet = false;
    m_products_isValid = false;

    m_routing_numbers_isSet = false;
    m_routing_numbers_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIInstitution::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstitution::fromJsonObject(QJsonObject json) {

    m_auth_metadata_isValid = ::OpenAPI::fromJsonValue(m_auth_metadata, json[QString("auth_metadata")]);
    m_auth_metadata_isSet = !json[QString("auth_metadata")].isNull() && m_auth_metadata_isValid;

    m_country_codes_isValid = ::OpenAPI::fromJsonValue(m_country_codes, json[QString("country_codes")]);
    m_country_codes_isSet = !json[QString("country_codes")].isNull() && m_country_codes_isValid;

    m_dtc_numbers_isValid = ::OpenAPI::fromJsonValue(m_dtc_numbers, json[QString("dtc_numbers")]);
    m_dtc_numbers_isSet = !json[QString("dtc_numbers")].isNull() && m_dtc_numbers_isValid;

    m_institution_id_isValid = ::OpenAPI::fromJsonValue(m_institution_id, json[QString("institution_id")]);
    m_institution_id_isSet = !json[QString("institution_id")].isNull() && m_institution_id_isValid;

    m_logo_isValid = ::OpenAPI::fromJsonValue(m_logo, json[QString("logo")]);
    m_logo_isSet = !json[QString("logo")].isNull() && m_logo_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_oauth_isValid = ::OpenAPI::fromJsonValue(m_oauth, json[QString("oauth")]);
    m_oauth_isSet = !json[QString("oauth")].isNull() && m_oauth_isValid;

    m_payment_initiation_metadata_isValid = ::OpenAPI::fromJsonValue(m_payment_initiation_metadata, json[QString("payment_initiation_metadata")]);
    m_payment_initiation_metadata_isSet = !json[QString("payment_initiation_metadata")].isNull() && m_payment_initiation_metadata_isValid;

    m_primary_color_isValid = ::OpenAPI::fromJsonValue(m_primary_color, json[QString("primary_color")]);
    m_primary_color_isSet = !json[QString("primary_color")].isNull() && m_primary_color_isValid;

    m_products_isValid = ::OpenAPI::fromJsonValue(m_products, json[QString("products")]);
    m_products_isSet = !json[QString("products")].isNull() && m_products_isValid;

    m_routing_numbers_isValid = ::OpenAPI::fromJsonValue(m_routing_numbers, json[QString("routing_numbers")]);
    m_routing_numbers_isSet = !json[QString("routing_numbers")].isNull() && m_routing_numbers_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIInstitution::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstitution::asJsonObject() const {
    QJsonObject obj;
    if (m_auth_metadata.isSet()) {
        obj.insert(QString("auth_metadata"), ::OpenAPI::toJsonValue(m_auth_metadata));
    }
    if (m_country_codes.size() > 0) {
        obj.insert(QString("country_codes"), ::OpenAPI::toJsonValue(m_country_codes));
    }
    if (m_dtc_numbers.size() > 0) {
        obj.insert(QString("dtc_numbers"), ::OpenAPI::toJsonValue(m_dtc_numbers));
    }
    if (m_institution_id_isSet) {
        obj.insert(QString("institution_id"), ::OpenAPI::toJsonValue(m_institution_id));
    }
    if (m_logo_isSet) {
        obj.insert(QString("logo"), ::OpenAPI::toJsonValue(m_logo));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_oauth_isSet) {
        obj.insert(QString("oauth"), ::OpenAPI::toJsonValue(m_oauth));
    }
    if (m_payment_initiation_metadata.isSet()) {
        obj.insert(QString("payment_initiation_metadata"), ::OpenAPI::toJsonValue(m_payment_initiation_metadata));
    }
    if (m_primary_color_isSet) {
        obj.insert(QString("primary_color"), ::OpenAPI::toJsonValue(m_primary_color));
    }
    if (m_products.size() > 0) {
        obj.insert(QString("products"), ::OpenAPI::toJsonValue(m_products));
    }
    if (m_routing_numbers.size() > 0) {
        obj.insert(QString("routing_numbers"), ::OpenAPI::toJsonValue(m_routing_numbers));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

OAIAuthMetadata OAIInstitution::getAuthMetadata() const {
    return m_auth_metadata;
}
void OAIInstitution::setAuthMetadata(const OAIAuthMetadata &auth_metadata) {
    m_auth_metadata = auth_metadata;
    m_auth_metadata_isSet = true;
}

bool OAIInstitution::is_auth_metadata_Set() const{
    return m_auth_metadata_isSet;
}

bool OAIInstitution::is_auth_metadata_Valid() const{
    return m_auth_metadata_isValid;
}

QList<OAICountryCode> OAIInstitution::getCountryCodes() const {
    return m_country_codes;
}
void OAIInstitution::setCountryCodes(const QList<OAICountryCode> &country_codes) {
    m_country_codes = country_codes;
    m_country_codes_isSet = true;
}

bool OAIInstitution::is_country_codes_Set() const{
    return m_country_codes_isSet;
}

bool OAIInstitution::is_country_codes_Valid() const{
    return m_country_codes_isValid;
}

QList<QString> OAIInstitution::getDtcNumbers() const {
    return m_dtc_numbers;
}
void OAIInstitution::setDtcNumbers(const QList<QString> &dtc_numbers) {
    m_dtc_numbers = dtc_numbers;
    m_dtc_numbers_isSet = true;
}

bool OAIInstitution::is_dtc_numbers_Set() const{
    return m_dtc_numbers_isSet;
}

bool OAIInstitution::is_dtc_numbers_Valid() const{
    return m_dtc_numbers_isValid;
}

QString OAIInstitution::getInstitutionId() const {
    return m_institution_id;
}
void OAIInstitution::setInstitutionId(const QString &institution_id) {
    m_institution_id = institution_id;
    m_institution_id_isSet = true;
}

bool OAIInstitution::is_institution_id_Set() const{
    return m_institution_id_isSet;
}

bool OAIInstitution::is_institution_id_Valid() const{
    return m_institution_id_isValid;
}

QString OAIInstitution::getLogo() const {
    return m_logo;
}
void OAIInstitution::setLogo(const QString &logo) {
    m_logo = logo;
    m_logo_isSet = true;
}

bool OAIInstitution::is_logo_Set() const{
    return m_logo_isSet;
}

bool OAIInstitution::is_logo_Valid() const{
    return m_logo_isValid;
}

QString OAIInstitution::getName() const {
    return m_name;
}
void OAIInstitution::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIInstitution::is_name_Set() const{
    return m_name_isSet;
}

bool OAIInstitution::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIInstitution::isOauth() const {
    return m_oauth;
}
void OAIInstitution::setOauth(const bool &oauth) {
    m_oauth = oauth;
    m_oauth_isSet = true;
}

bool OAIInstitution::is_oauth_Set() const{
    return m_oauth_isSet;
}

bool OAIInstitution::is_oauth_Valid() const{
    return m_oauth_isValid;
}

OAIPaymentInitiationMetadata OAIInstitution::getPaymentInitiationMetadata() const {
    return m_payment_initiation_metadata;
}
void OAIInstitution::setPaymentInitiationMetadata(const OAIPaymentInitiationMetadata &payment_initiation_metadata) {
    m_payment_initiation_metadata = payment_initiation_metadata;
    m_payment_initiation_metadata_isSet = true;
}

bool OAIInstitution::is_payment_initiation_metadata_Set() const{
    return m_payment_initiation_metadata_isSet;
}

bool OAIInstitution::is_payment_initiation_metadata_Valid() const{
    return m_payment_initiation_metadata_isValid;
}

QString OAIInstitution::getPrimaryColor() const {
    return m_primary_color;
}
void OAIInstitution::setPrimaryColor(const QString &primary_color) {
    m_primary_color = primary_color;
    m_primary_color_isSet = true;
}

bool OAIInstitution::is_primary_color_Set() const{
    return m_primary_color_isSet;
}

bool OAIInstitution::is_primary_color_Valid() const{
    return m_primary_color_isValid;
}

QList<OAIProducts> OAIInstitution::getProducts() const {
    return m_products;
}
void OAIInstitution::setProducts(const QList<OAIProducts> &products) {
    m_products = products;
    m_products_isSet = true;
}

bool OAIInstitution::is_products_Set() const{
    return m_products_isSet;
}

bool OAIInstitution::is_products_Valid() const{
    return m_products_isValid;
}

QList<QString> OAIInstitution::getRoutingNumbers() const {
    return m_routing_numbers;
}
void OAIInstitution::setRoutingNumbers(const QList<QString> &routing_numbers) {
    m_routing_numbers = routing_numbers;
    m_routing_numbers_isSet = true;
}

bool OAIInstitution::is_routing_numbers_Set() const{
    return m_routing_numbers_isSet;
}

bool OAIInstitution::is_routing_numbers_Valid() const{
    return m_routing_numbers_isValid;
}

OAIInstitutionStatus OAIInstitution::getStatus() const {
    return m_status;
}
void OAIInstitution::setStatus(const OAIInstitutionStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIInstitution::is_status_Set() const{
    return m_status_isSet;
}

bool OAIInstitution::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIInstitution::getUrl() const {
    return m_url;
}
void OAIInstitution::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIInstitution::is_url_Set() const{
    return m_url_isSet;
}

bool OAIInstitution::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIInstitution::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auth_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_dtc_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_institution_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oauth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_initiation_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_color_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstitution::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_country_codes_isValid && m_institution_id_isValid && m_name_isValid && m_oauth_isValid && m_products_isValid && m_routing_numbers_isValid && true;
}

} // namespace OpenAPI
