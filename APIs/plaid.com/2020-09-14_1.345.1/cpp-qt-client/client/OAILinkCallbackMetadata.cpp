/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkCallbackMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkCallbackMetadata::OAILinkCallbackMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkCallbackMetadata::OAILinkCallbackMetadata() {
    this->initializeModel();
}

OAILinkCallbackMetadata::~OAILinkCallbackMetadata() {}

void OAILinkCallbackMetadata::initializeModel() {

    m_accounts_isSet = false;
    m_accounts_isValid = false;

    m_callback_type_isSet = false;
    m_callback_type_isValid = false;

    m_event_name_isSet = false;
    m_event_name_isValid = false;

    m_institution_isSet = false;
    m_institution_isValid = false;

    m_link_session_id_isSet = false;
    m_link_session_id_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAILinkCallbackMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkCallbackMetadata::fromJsonObject(QJsonObject json) {

    m_accounts_isValid = ::OpenAPI::fromJsonValue(m_accounts, json[QString("accounts")]);
    m_accounts_isSet = !json[QString("accounts")].isNull() && m_accounts_isValid;

    m_callback_type_isValid = ::OpenAPI::fromJsonValue(m_callback_type, json[QString("callback_type")]);
    m_callback_type_isSet = !json[QString("callback_type")].isNull() && m_callback_type_isValid;

    m_event_name_isValid = ::OpenAPI::fromJsonValue(m_event_name, json[QString("event_name")]);
    m_event_name_isSet = !json[QString("event_name")].isNull() && m_event_name_isValid;

    m_institution_isValid = ::OpenAPI::fromJsonValue(m_institution, json[QString("institution")]);
    m_institution_isSet = !json[QString("institution")].isNull() && m_institution_isValid;

    m_link_session_id_isValid = ::OpenAPI::fromJsonValue(m_link_session_id, json[QString("link_session_id")]);
    m_link_session_id_isSet = !json[QString("link_session_id")].isNull() && m_link_session_id_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("request_id")]);
    m_request_id_isSet = !json[QString("request_id")].isNull() && m_request_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAILinkCallbackMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkCallbackMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_accounts.size() > 0) {
        obj.insert(QString("accounts"), ::OpenAPI::toJsonValue(m_accounts));
    }
    if (m_callback_type.isSet()) {
        obj.insert(QString("callback_type"), ::OpenAPI::toJsonValue(m_callback_type));
    }
    if (m_event_name.isSet()) {
        obj.insert(QString("event_name"), ::OpenAPI::toJsonValue(m_event_name));
    }
    if (m_institution.isSet()) {
        obj.insert(QString("institution"), ::OpenAPI::toJsonValue(m_institution));
    }
    if (m_link_session_id_isSet) {
        obj.insert(QString("link_session_id"), ::OpenAPI::toJsonValue(m_link_session_id));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("request_id"), ::OpenAPI::toJsonValue(m_request_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QList<OAILinkDeliveryAccount> OAILinkCallbackMetadata::getAccounts() const {
    return m_accounts;
}
void OAILinkCallbackMetadata::setAccounts(const QList<OAILinkDeliveryAccount> &accounts) {
    m_accounts = accounts;
    m_accounts_isSet = true;
}

bool OAILinkCallbackMetadata::is_accounts_Set() const{
    return m_accounts_isSet;
}

bool OAILinkCallbackMetadata::is_accounts_Valid() const{
    return m_accounts_isValid;
}

OAILinkDeliveryWebhookCallbackType OAILinkCallbackMetadata::getCallbackType() const {
    return m_callback_type;
}
void OAILinkCallbackMetadata::setCallbackType(const OAILinkDeliveryWebhookCallbackType &callback_type) {
    m_callback_type = callback_type;
    m_callback_type_isSet = true;
}

bool OAILinkCallbackMetadata::is_callback_type_Set() const{
    return m_callback_type_isSet;
}

bool OAILinkCallbackMetadata::is_callback_type_Valid() const{
    return m_callback_type_isValid;
}

OAILinkEventName OAILinkCallbackMetadata::getEventName() const {
    return m_event_name;
}
void OAILinkCallbackMetadata::setEventName(const OAILinkEventName &event_name) {
    m_event_name = event_name;
    m_event_name_isSet = true;
}

bool OAILinkCallbackMetadata::is_event_name_Set() const{
    return m_event_name_isSet;
}

bool OAILinkCallbackMetadata::is_event_name_Valid() const{
    return m_event_name_isValid;
}

OAILinkDeliveryInstitution OAILinkCallbackMetadata::getInstitution() const {
    return m_institution;
}
void OAILinkCallbackMetadata::setInstitution(const OAILinkDeliveryInstitution &institution) {
    m_institution = institution;
    m_institution_isSet = true;
}

bool OAILinkCallbackMetadata::is_institution_Set() const{
    return m_institution_isSet;
}

bool OAILinkCallbackMetadata::is_institution_Valid() const{
    return m_institution_isValid;
}

QString OAILinkCallbackMetadata::getLinkSessionId() const {
    return m_link_session_id;
}
void OAILinkCallbackMetadata::setLinkSessionId(const QString &link_session_id) {
    m_link_session_id = link_session_id;
    m_link_session_id_isSet = true;
}

bool OAILinkCallbackMetadata::is_link_session_id_Set() const{
    return m_link_session_id_isSet;
}

bool OAILinkCallbackMetadata::is_link_session_id_Valid() const{
    return m_link_session_id_isValid;
}

QString OAILinkCallbackMetadata::getRequestId() const {
    return m_request_id;
}
void OAILinkCallbackMetadata::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAILinkCallbackMetadata::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAILinkCallbackMetadata::is_request_id_Valid() const{
    return m_request_id_isValid;
}

QString OAILinkCallbackMetadata::getStatus() const {
    return m_status;
}
void OAILinkCallbackMetadata::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAILinkCallbackMetadata::is_status_Set() const{
    return m_status_isSet;
}

bool OAILinkCallbackMetadata::is_status_Valid() const{
    return m_status_isValid;
}

bool OAILinkCallbackMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_callback_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_institution.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_session_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkCallbackMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
