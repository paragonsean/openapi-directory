/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRiskCheckDevice.h
 *
 * Result summary object specifying values for &#x60;device&#x60; attributes of risk check.
 */

#ifndef OAIRiskCheckDevice_H
#define OAIRiskCheckDevice_H

#include <QJsonObject>

#include "OAIProxyType.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRiskCheckDevice : public OAIObject {
public:
    OAIRiskCheckDevice();
    OAIRiskCheckDevice(QString json);
    ~OAIRiskCheckDevice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIProxyType getIpProxyType() const;
    void setIpProxyType(const OAIProxyType &ip_proxy_type);
    bool is_ip_proxy_type_Set() const;
    bool is_ip_proxy_type_Valid() const;

    qint32 getIpSpamListCount() const;
    void setIpSpamListCount(const qint32 &ip_spam_list_count);
    bool is_ip_spam_list_count_Set() const;
    bool is_ip_spam_list_count_Valid() const;

    QString getIpTimezoneOffset() const;
    void setIpTimezoneOffset(const QString &ip_timezone_offset);
    bool is_ip_timezone_offset_Set() const;
    bool is_ip_timezone_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIProxyType m_ip_proxy_type;
    bool m_ip_proxy_type_isSet;
    bool m_ip_proxy_type_isValid;

    qint32 m_ip_spam_list_count;
    bool m_ip_spam_list_count_isSet;
    bool m_ip_spam_list_count_isValid;

    QString m_ip_timezone_offset;
    bool m_ip_timezone_offset_isSet;
    bool m_ip_timezone_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRiskCheckDevice)

#endif // OAIRiskCheckDevice_H
