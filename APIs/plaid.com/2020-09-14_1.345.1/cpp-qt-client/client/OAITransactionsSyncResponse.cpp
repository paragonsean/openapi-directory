/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransactionsSyncResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransactionsSyncResponse::OAITransactionsSyncResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransactionsSyncResponse::OAITransactionsSyncResponse() {
    this->initializeModel();
}

OAITransactionsSyncResponse::~OAITransactionsSyncResponse() {}

void OAITransactionsSyncResponse::initializeModel() {

    m_added_isSet = false;
    m_added_isValid = false;

    m_has_more_isSet = false;
    m_has_more_isValid = false;

    m_modified_isSet = false;
    m_modified_isValid = false;

    m_next_cursor_isSet = false;
    m_next_cursor_isValid = false;

    m_removed_isSet = false;
    m_removed_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAITransactionsSyncResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransactionsSyncResponse::fromJsonObject(QJsonObject json) {

    m_added_isValid = ::OpenAPI::fromJsonValue(m_added, json[QString("added")]);
    m_added_isSet = !json[QString("added")].isNull() && m_added_isValid;

    m_has_more_isValid = ::OpenAPI::fromJsonValue(m_has_more, json[QString("has_more")]);
    m_has_more_isSet = !json[QString("has_more")].isNull() && m_has_more_isValid;

    m_modified_isValid = ::OpenAPI::fromJsonValue(m_modified, json[QString("modified")]);
    m_modified_isSet = !json[QString("modified")].isNull() && m_modified_isValid;

    m_next_cursor_isValid = ::OpenAPI::fromJsonValue(m_next_cursor, json[QString("next_cursor")]);
    m_next_cursor_isSet = !json[QString("next_cursor")].isNull() && m_next_cursor_isValid;

    m_removed_isValid = ::OpenAPI::fromJsonValue(m_removed, json[QString("removed")]);
    m_removed_isSet = !json[QString("removed")].isNull() && m_removed_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("request_id")]);
    m_request_id_isSet = !json[QString("request_id")].isNull() && m_request_id_isValid;
}

QString OAITransactionsSyncResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransactionsSyncResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_added.size() > 0) {
        obj.insert(QString("added"), ::OpenAPI::toJsonValue(m_added));
    }
    if (m_has_more_isSet) {
        obj.insert(QString("has_more"), ::OpenAPI::toJsonValue(m_has_more));
    }
    if (m_modified.size() > 0) {
        obj.insert(QString("modified"), ::OpenAPI::toJsonValue(m_modified));
    }
    if (m_next_cursor_isSet) {
        obj.insert(QString("next_cursor"), ::OpenAPI::toJsonValue(m_next_cursor));
    }
    if (m_removed.size() > 0) {
        obj.insert(QString("removed"), ::OpenAPI::toJsonValue(m_removed));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("request_id"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

QList<OAITransaction> OAITransactionsSyncResponse::getAdded() const {
    return m_added;
}
void OAITransactionsSyncResponse::setAdded(const QList<OAITransaction> &added) {
    m_added = added;
    m_added_isSet = true;
}

bool OAITransactionsSyncResponse::is_added_Set() const{
    return m_added_isSet;
}

bool OAITransactionsSyncResponse::is_added_Valid() const{
    return m_added_isValid;
}

bool OAITransactionsSyncResponse::isHasMore() const {
    return m_has_more;
}
void OAITransactionsSyncResponse::setHasMore(const bool &has_more) {
    m_has_more = has_more;
    m_has_more_isSet = true;
}

bool OAITransactionsSyncResponse::is_has_more_Set() const{
    return m_has_more_isSet;
}

bool OAITransactionsSyncResponse::is_has_more_Valid() const{
    return m_has_more_isValid;
}

QList<OAITransaction> OAITransactionsSyncResponse::getModified() const {
    return m_modified;
}
void OAITransactionsSyncResponse::setModified(const QList<OAITransaction> &modified) {
    m_modified = modified;
    m_modified_isSet = true;
}

bool OAITransactionsSyncResponse::is_modified_Set() const{
    return m_modified_isSet;
}

bool OAITransactionsSyncResponse::is_modified_Valid() const{
    return m_modified_isValid;
}

QString OAITransactionsSyncResponse::getNextCursor() const {
    return m_next_cursor;
}
void OAITransactionsSyncResponse::setNextCursor(const QString &next_cursor) {
    m_next_cursor = next_cursor;
    m_next_cursor_isSet = true;
}

bool OAITransactionsSyncResponse::is_next_cursor_Set() const{
    return m_next_cursor_isSet;
}

bool OAITransactionsSyncResponse::is_next_cursor_Valid() const{
    return m_next_cursor_isValid;
}

QList<OAIRemovedTransaction> OAITransactionsSyncResponse::getRemoved() const {
    return m_removed;
}
void OAITransactionsSyncResponse::setRemoved(const QList<OAIRemovedTransaction> &removed) {
    m_removed = removed;
    m_removed_isSet = true;
}

bool OAITransactionsSyncResponse::is_removed_Set() const{
    return m_removed_isSet;
}

bool OAITransactionsSyncResponse::is_removed_Valid() const{
    return m_removed_isValid;
}

QString OAITransactionsSyncResponse::getRequestId() const {
    return m_request_id;
}
void OAITransactionsSyncResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAITransactionsSyncResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAITransactionsSyncResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAITransactionsSyncResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_added.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_more_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_cursor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_removed.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransactionsSyncResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_added_isValid && m_has_more_isValid && m_modified_isValid && m_next_cursor_isValid && m_removed_isValid && m_request_id_isValid && true;
}

} // namespace OpenAPI
