/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditDocumentMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditDocumentMetadata::OAICreditDocumentMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditDocumentMetadata::OAICreditDocumentMetadata() {
    this->initializeModel();
}

OAICreditDocumentMetadata::~OAICreditDocumentMetadata() {}

void OAICreditDocumentMetadata::initializeModel() {

    m_document_type_isSet = false;
    m_document_type_isValid = false;

    m_download_url_isSet = false;
    m_download_url_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAICreditDocumentMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditDocumentMetadata::fromJsonObject(QJsonObject json) {

    m_document_type_isValid = ::OpenAPI::fromJsonValue(m_document_type, json[QString("document_type")]);
    m_document_type_isSet = !json[QString("document_type")].isNull() && m_document_type_isValid;

    m_download_url_isValid = ::OpenAPI::fromJsonValue(m_download_url, json[QString("download_url")]);
    m_download_url_isSet = !json[QString("download_url")].isNull() && m_download_url_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAICreditDocumentMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditDocumentMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_document_type_isSet) {
        obj.insert(QString("document_type"), ::OpenAPI::toJsonValue(m_document_type));
    }
    if (m_download_url_isSet) {
        obj.insert(QString("download_url"), ::OpenAPI::toJsonValue(m_download_url));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAICreditDocumentMetadata::getDocumentType() const {
    return m_document_type;
}
void OAICreditDocumentMetadata::setDocumentType(const QString &document_type) {
    m_document_type = document_type;
    m_document_type_isSet = true;
}

bool OAICreditDocumentMetadata::is_document_type_Set() const{
    return m_document_type_isSet;
}

bool OAICreditDocumentMetadata::is_document_type_Valid() const{
    return m_document_type_isValid;
}

QString OAICreditDocumentMetadata::getDownloadUrl() const {
    return m_download_url;
}
void OAICreditDocumentMetadata::setDownloadUrl(const QString &download_url) {
    m_download_url = download_url;
    m_download_url_isSet = true;
}

bool OAICreditDocumentMetadata::is_download_url_Set() const{
    return m_download_url_isSet;
}

bool OAICreditDocumentMetadata::is_download_url_Valid() const{
    return m_download_url_isValid;
}

QString OAICreditDocumentMetadata::getName() const {
    return m_name;
}
void OAICreditDocumentMetadata::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreditDocumentMetadata::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreditDocumentMetadata::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreditDocumentMetadata::getStatus() const {
    return m_status;
}
void OAICreditDocumentMetadata::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreditDocumentMetadata::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreditDocumentMetadata::is_status_Valid() const{
    return m_status_isValid;
}

bool OAICreditDocumentMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_document_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditDocumentMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_document_type_isValid && m_download_url_isValid && m_name_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
