/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClientProvidedEnrichedTransaction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClientProvidedEnrichedTransaction::OAIClientProvidedEnrichedTransaction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClientProvidedEnrichedTransaction::OAIClientProvidedEnrichedTransaction() {
    this->initializeModel();
}

OAIClientProvidedEnrichedTransaction::~OAIClientProvidedEnrichedTransaction() {}

void OAIClientProvidedEnrichedTransaction::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_direction_isSet = false;
    m_direction_isValid = false;

    m_enrichments_isSet = false;
    m_enrichments_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_iso_currency_code_isSet = false;
    m_iso_currency_code_isValid = false;
}

void OAIClientProvidedEnrichedTransaction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClientProvidedEnrichedTransaction::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_direction_isValid = ::OpenAPI::fromJsonValue(m_direction, json[QString("direction")]);
    m_direction_isSet = !json[QString("direction")].isNull() && m_direction_isValid;

    m_enrichments_isValid = ::OpenAPI::fromJsonValue(m_enrichments, json[QString("enrichments")]);
    m_enrichments_isSet = !json[QString("enrichments")].isNull() && m_enrichments_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_iso_currency_code_isValid = ::OpenAPI::fromJsonValue(m_iso_currency_code, json[QString("iso_currency_code")]);
    m_iso_currency_code_isSet = !json[QString("iso_currency_code")].isNull() && m_iso_currency_code_isValid;
}

QString OAIClientProvidedEnrichedTransaction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClientProvidedEnrichedTransaction::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_direction.isSet()) {
        obj.insert(QString("direction"), ::OpenAPI::toJsonValue(m_direction));
    }
    if (m_enrichments.isSet()) {
        obj.insert(QString("enrichments"), ::OpenAPI::toJsonValue(m_enrichments));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_iso_currency_code_isSet) {
        obj.insert(QString("iso_currency_code"), ::OpenAPI::toJsonValue(m_iso_currency_code));
    }
    return obj;
}

double OAIClientProvidedEnrichedTransaction::getAmount() const {
    return m_amount;
}
void OAIClientProvidedEnrichedTransaction::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIClientProvidedEnrichedTransaction::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIClientProvidedEnrichedTransaction::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIClientProvidedEnrichedTransaction::getDescription() const {
    return m_description;
}
void OAIClientProvidedEnrichedTransaction::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIClientProvidedEnrichedTransaction::is_description_Set() const{
    return m_description_isSet;
}

bool OAIClientProvidedEnrichedTransaction::is_description_Valid() const{
    return m_description_isValid;
}

OAIEnrichTransactionDirection OAIClientProvidedEnrichedTransaction::getDirection() const {
    return m_direction;
}
void OAIClientProvidedEnrichedTransaction::setDirection(const OAIEnrichTransactionDirection &direction) {
    m_direction = direction;
    m_direction_isSet = true;
}

bool OAIClientProvidedEnrichedTransaction::is_direction_Set() const{
    return m_direction_isSet;
}

bool OAIClientProvidedEnrichedTransaction::is_direction_Valid() const{
    return m_direction_isValid;
}

OAIEnrichments OAIClientProvidedEnrichedTransaction::getEnrichments() const {
    return m_enrichments;
}
void OAIClientProvidedEnrichedTransaction::setEnrichments(const OAIEnrichments &enrichments) {
    m_enrichments = enrichments;
    m_enrichments_isSet = true;
}

bool OAIClientProvidedEnrichedTransaction::is_enrichments_Set() const{
    return m_enrichments_isSet;
}

bool OAIClientProvidedEnrichedTransaction::is_enrichments_Valid() const{
    return m_enrichments_isValid;
}

QString OAIClientProvidedEnrichedTransaction::getId() const {
    return m_id;
}
void OAIClientProvidedEnrichedTransaction::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIClientProvidedEnrichedTransaction::is_id_Set() const{
    return m_id_isSet;
}

bool OAIClientProvidedEnrichedTransaction::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIClientProvidedEnrichedTransaction::getIsoCurrencyCode() const {
    return m_iso_currency_code;
}
void OAIClientProvidedEnrichedTransaction::setIsoCurrencyCode(const QString &iso_currency_code) {
    m_iso_currency_code = iso_currency_code;
    m_iso_currency_code_isSet = true;
}

bool OAIClientProvidedEnrichedTransaction::is_iso_currency_code_Set() const{
    return m_iso_currency_code_isSet;
}

bool OAIClientProvidedEnrichedTransaction::is_iso_currency_code_Valid() const{
    return m_iso_currency_code_isValid;
}

bool OAIClientProvidedEnrichedTransaction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_direction.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enrichments.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClientProvidedEnrichedTransaction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_description_isValid && m_enrichments_isValid && m_id_isValid && m_iso_currency_code_isValid && true;
}

} // namespace OpenAPI
