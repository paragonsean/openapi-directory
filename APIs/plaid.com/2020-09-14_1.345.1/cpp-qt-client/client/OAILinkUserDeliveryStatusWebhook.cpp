/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkUserDeliveryStatusWebhook.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkUserDeliveryStatusWebhook::OAILinkUserDeliveryStatusWebhook(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkUserDeliveryStatusWebhook::OAILinkUserDeliveryStatusWebhook() {
    this->initializeModel();
}

OAILinkUserDeliveryStatusWebhook::~OAILinkUserDeliveryStatusWebhook() {}

void OAILinkUserDeliveryStatusWebhook::initializeModel() {

    m_link_delivery_metadata_isSet = false;
    m_link_delivery_metadata_isValid = false;

    m_link_delivery_session_id_isSet = false;
    m_link_delivery_session_id_isValid = false;

    m_timestamp_isSet = false;
    m_timestamp_isValid = false;

    m_webhook_code_isSet = false;
    m_webhook_code_isValid = false;

    m_webhook_type_isSet = false;
    m_webhook_type_isValid = false;
}

void OAILinkUserDeliveryStatusWebhook::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkUserDeliveryStatusWebhook::fromJsonObject(QJsonObject json) {

    m_link_delivery_metadata_isValid = ::OpenAPI::fromJsonValue(m_link_delivery_metadata, json[QString("link_delivery_metadata")]);
    m_link_delivery_metadata_isSet = !json[QString("link_delivery_metadata")].isNull() && m_link_delivery_metadata_isValid;

    m_link_delivery_session_id_isValid = ::OpenAPI::fromJsonValue(m_link_delivery_session_id, json[QString("link_delivery_session_id")]);
    m_link_delivery_session_id_isSet = !json[QString("link_delivery_session_id")].isNull() && m_link_delivery_session_id_isValid;

    m_timestamp_isValid = ::OpenAPI::fromJsonValue(m_timestamp, json[QString("timestamp")]);
    m_timestamp_isSet = !json[QString("timestamp")].isNull() && m_timestamp_isValid;

    m_webhook_code_isValid = ::OpenAPI::fromJsonValue(m_webhook_code, json[QString("webhook_code")]);
    m_webhook_code_isSet = !json[QString("webhook_code")].isNull() && m_webhook_code_isValid;

    m_webhook_type_isValid = ::OpenAPI::fromJsonValue(m_webhook_type, json[QString("webhook_type")]);
    m_webhook_type_isSet = !json[QString("webhook_type")].isNull() && m_webhook_type_isValid;
}

QString OAILinkUserDeliveryStatusWebhook::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkUserDeliveryStatusWebhook::asJsonObject() const {
    QJsonObject obj;
    if (m_link_delivery_metadata.isSet()) {
        obj.insert(QString("link_delivery_metadata"), ::OpenAPI::toJsonValue(m_link_delivery_metadata));
    }
    if (m_link_delivery_session_id_isSet) {
        obj.insert(QString("link_delivery_session_id"), ::OpenAPI::toJsonValue(m_link_delivery_session_id));
    }
    if (m_timestamp_isSet) {
        obj.insert(QString("timestamp"), ::OpenAPI::toJsonValue(m_timestamp));
    }
    if (m_webhook_code_isSet) {
        obj.insert(QString("webhook_code"), ::OpenAPI::toJsonValue(m_webhook_code));
    }
    if (m_webhook_type_isSet) {
        obj.insert(QString("webhook_type"), ::OpenAPI::toJsonValue(m_webhook_type));
    }
    return obj;
}

OAILinkDeliveryMetadata OAILinkUserDeliveryStatusWebhook::getLinkDeliveryMetadata() const {
    return m_link_delivery_metadata;
}
void OAILinkUserDeliveryStatusWebhook::setLinkDeliveryMetadata(const OAILinkDeliveryMetadata &link_delivery_metadata) {
    m_link_delivery_metadata = link_delivery_metadata;
    m_link_delivery_metadata_isSet = true;
}

bool OAILinkUserDeliveryStatusWebhook::is_link_delivery_metadata_Set() const{
    return m_link_delivery_metadata_isSet;
}

bool OAILinkUserDeliveryStatusWebhook::is_link_delivery_metadata_Valid() const{
    return m_link_delivery_metadata_isValid;
}

QString OAILinkUserDeliveryStatusWebhook::getLinkDeliverySessionId() const {
    return m_link_delivery_session_id;
}
void OAILinkUserDeliveryStatusWebhook::setLinkDeliverySessionId(const QString &link_delivery_session_id) {
    m_link_delivery_session_id = link_delivery_session_id;
    m_link_delivery_session_id_isSet = true;
}

bool OAILinkUserDeliveryStatusWebhook::is_link_delivery_session_id_Set() const{
    return m_link_delivery_session_id_isSet;
}

bool OAILinkUserDeliveryStatusWebhook::is_link_delivery_session_id_Valid() const{
    return m_link_delivery_session_id_isValid;
}

QString OAILinkUserDeliveryStatusWebhook::getTimestamp() const {
    return m_timestamp;
}
void OAILinkUserDeliveryStatusWebhook::setTimestamp(const QString &timestamp) {
    m_timestamp = timestamp;
    m_timestamp_isSet = true;
}

bool OAILinkUserDeliveryStatusWebhook::is_timestamp_Set() const{
    return m_timestamp_isSet;
}

bool OAILinkUserDeliveryStatusWebhook::is_timestamp_Valid() const{
    return m_timestamp_isValid;
}

QString OAILinkUserDeliveryStatusWebhook::getWebhookCode() const {
    return m_webhook_code;
}
void OAILinkUserDeliveryStatusWebhook::setWebhookCode(const QString &webhook_code) {
    m_webhook_code = webhook_code;
    m_webhook_code_isSet = true;
}

bool OAILinkUserDeliveryStatusWebhook::is_webhook_code_Set() const{
    return m_webhook_code_isSet;
}

bool OAILinkUserDeliveryStatusWebhook::is_webhook_code_Valid() const{
    return m_webhook_code_isValid;
}

QString OAILinkUserDeliveryStatusWebhook::getWebhookType() const {
    return m_webhook_type;
}
void OAILinkUserDeliveryStatusWebhook::setWebhookType(const QString &webhook_type) {
    m_webhook_type = webhook_type;
    m_webhook_type_isSet = true;
}

bool OAILinkUserDeliveryStatusWebhook::is_webhook_type_Set() const{
    return m_webhook_type_isSet;
}

bool OAILinkUserDeliveryStatusWebhook::is_webhook_type_Valid() const{
    return m_webhook_type_isValid;
}

bool OAILinkUserDeliveryStatusWebhook::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_link_delivery_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_delivery_session_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkUserDeliveryStatusWebhook::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_link_delivery_metadata_isValid && m_link_delivery_session_id_isValid && m_timestamp_isValid && m_webhook_code_isValid && m_webhook_type_isValid && true;
}

} // namespace OpenAPI
