/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITaxform.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITaxform::OAITaxform(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITaxform::OAITaxform() {
    this->initializeModel();
}

OAITaxform::~OAITaxform() {}

void OAITaxform::initializeModel() {

    m_doc_id_isSet = false;
    m_doc_id_isValid = false;

    m_document_type_isSet = false;
    m_document_type_isValid = false;

    m_w2_isSet = false;
    m_w2_isValid = false;
}

void OAITaxform::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITaxform::fromJsonObject(QJsonObject json) {

    m_doc_id_isValid = ::OpenAPI::fromJsonValue(m_doc_id, json[QString("doc_id")]);
    m_doc_id_isSet = !json[QString("doc_id")].isNull() && m_doc_id_isValid;

    m_document_type_isValid = ::OpenAPI::fromJsonValue(m_document_type, json[QString("document_type")]);
    m_document_type_isSet = !json[QString("document_type")].isNull() && m_document_type_isValid;

    m_w2_isValid = ::OpenAPI::fromJsonValue(m_w2, json[QString("w2")]);
    m_w2_isSet = !json[QString("w2")].isNull() && m_w2_isValid;
}

QString OAITaxform::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITaxform::asJsonObject() const {
    QJsonObject obj;
    if (m_doc_id_isSet) {
        obj.insert(QString("doc_id"), ::OpenAPI::toJsonValue(m_doc_id));
    }
    if (m_document_type_isSet) {
        obj.insert(QString("document_type"), ::OpenAPI::toJsonValue(m_document_type));
    }
    if (m_w2.isSet()) {
        obj.insert(QString("w2"), ::OpenAPI::toJsonValue(m_w2));
    }
    return obj;
}

QString OAITaxform::getDocId() const {
    return m_doc_id;
}
void OAITaxform::setDocId(const QString &doc_id) {
    m_doc_id = doc_id;
    m_doc_id_isSet = true;
}

bool OAITaxform::is_doc_id_Set() const{
    return m_doc_id_isSet;
}

bool OAITaxform::is_doc_id_Valid() const{
    return m_doc_id_isValid;
}

QString OAITaxform::getDocumentType() const {
    return m_document_type;
}
void OAITaxform::setDocumentType(const QString &document_type) {
    m_document_type = document_type;
    m_document_type_isSet = true;
}

bool OAITaxform::is_document_type_Set() const{
    return m_document_type_isSet;
}

bool OAITaxform::is_document_type_Valid() const{
    return m_document_type_isValid;
}

OAIW2 OAITaxform::getW2() const {
    return m_w2;
}
void OAITaxform::setW2(const OAIW2 &w2) {
    m_w2 = w2;
    m_w2_isSet = true;
}

bool OAITaxform::is_w2_Set() const{
    return m_w2_isSet;
}

bool OAITaxform::is_w2_Valid() const{
    return m_w2_isValid;
}

bool OAITaxform::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_doc_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_w2.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITaxform::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_document_type_isValid && true;
}

} // namespace OpenAPI
