/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIndividualScreeningHitNames.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIndividualScreeningHitNames::OAIIndividualScreeningHitNames(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIndividualScreeningHitNames::OAIIndividualScreeningHitNames() {
    this->initializeModel();
}

OAIIndividualScreeningHitNames::~OAIIndividualScreeningHitNames() {}

void OAIIndividualScreeningHitNames::initializeModel() {

    m_full_isSet = false;
    m_full_isValid = false;

    m_is_primary_isSet = false;
    m_is_primary_isValid = false;

    m_weak_alias_determination_isSet = false;
    m_weak_alias_determination_isValid = false;
}

void OAIIndividualScreeningHitNames::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIndividualScreeningHitNames::fromJsonObject(QJsonObject json) {

    m_full_isValid = ::OpenAPI::fromJsonValue(m_full, json[QString("full")]);
    m_full_isSet = !json[QString("full")].isNull() && m_full_isValid;

    m_is_primary_isValid = ::OpenAPI::fromJsonValue(m_is_primary, json[QString("is_primary")]);
    m_is_primary_isSet = !json[QString("is_primary")].isNull() && m_is_primary_isValid;

    m_weak_alias_determination_isValid = ::OpenAPI::fromJsonValue(m_weak_alias_determination, json[QString("weak_alias_determination")]);
    m_weak_alias_determination_isSet = !json[QString("weak_alias_determination")].isNull() && m_weak_alias_determination_isValid;
}

QString OAIIndividualScreeningHitNames::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIndividualScreeningHitNames::asJsonObject() const {
    QJsonObject obj;
    if (m_full_isSet) {
        obj.insert(QString("full"), ::OpenAPI::toJsonValue(m_full));
    }
    if (m_is_primary_isSet) {
        obj.insert(QString("is_primary"), ::OpenAPI::toJsonValue(m_is_primary));
    }
    if (m_weak_alias_determination.isSet()) {
        obj.insert(QString("weak_alias_determination"), ::OpenAPI::toJsonValue(m_weak_alias_determination));
    }
    return obj;
}

QString OAIIndividualScreeningHitNames::getFull() const {
    return m_full;
}
void OAIIndividualScreeningHitNames::setFull(const QString &full) {
    m_full = full;
    m_full_isSet = true;
}

bool OAIIndividualScreeningHitNames::is_full_Set() const{
    return m_full_isSet;
}

bool OAIIndividualScreeningHitNames::is_full_Valid() const{
    return m_full_isValid;
}

bool OAIIndividualScreeningHitNames::isIsPrimary() const {
    return m_is_primary;
}
void OAIIndividualScreeningHitNames::setIsPrimary(const bool &is_primary) {
    m_is_primary = is_primary;
    m_is_primary_isSet = true;
}

bool OAIIndividualScreeningHitNames::is_is_primary_Set() const{
    return m_is_primary_isSet;
}

bool OAIIndividualScreeningHitNames::is_is_primary_Valid() const{
    return m_is_primary_isValid;
}

OAIWeakAliasDetermination OAIIndividualScreeningHitNames::getWeakAliasDetermination() const {
    return m_weak_alias_determination;
}
void OAIIndividualScreeningHitNames::setWeakAliasDetermination(const OAIWeakAliasDetermination &weak_alias_determination) {
    m_weak_alias_determination = weak_alias_determination;
    m_weak_alias_determination_isSet = true;
}

bool OAIIndividualScreeningHitNames::is_weak_alias_determination_Set() const{
    return m_weak_alias_determination_isSet;
}

bool OAIIndividualScreeningHitNames::is_weak_alias_determination_Valid() const{
    return m_weak_alias_determination_isValid;
}

bool OAIIndividualScreeningHitNames::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_full_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_primary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weak_alias_determination.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIndividualScreeningHitNames::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_full_isValid && m_is_primary_isValid && m_weak_alias_determination_isValid && true;
}

} // namespace OpenAPI
