/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProxyType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProxyType::OAIProxyType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProxyType::OAIProxyType() {
    this->initializeModel();
}

OAIProxyType::~OAIProxyType() {}

void OAIProxyType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProxyType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProxyType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("none_detected", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProxyType::NONE_DETECTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("tor", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProxyType::TOR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("vpn", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProxyType::VPN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("web_proxy", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProxyType::WEB_PROXY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("public_proxy", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProxyType::PUBLIC_PROXY;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProxyType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProxyType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProxyType::NONE_DETECTED:
            val = "none_detected";
            break;
        case eOAIProxyType::TOR:
            val = "tor";
            break;
        case eOAIProxyType::VPN:
            val = "vpn";
            break;
        case eOAIProxyType::WEB_PROXY:
            val = "web_proxy";
            break;
        case eOAIProxyType::PUBLIC_PROXY:
            val = "public_proxy";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProxyType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProxyType::eOAIProxyType OAIProxyType::getValue() const {
    return m_value;
}

void OAIProxyType::setValue(const OAIProxyType::eOAIProxyType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProxyType::isSet() const {
    
    return m_value_isSet;
}

bool OAIProxyType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
