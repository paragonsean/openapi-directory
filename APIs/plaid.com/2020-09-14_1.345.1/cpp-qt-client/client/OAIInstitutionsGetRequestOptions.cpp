/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstitutionsGetRequestOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstitutionsGetRequestOptions::OAIInstitutionsGetRequestOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstitutionsGetRequestOptions::OAIInstitutionsGetRequestOptions() {
    this->initializeModel();
}

OAIInstitutionsGetRequestOptions::~OAIInstitutionsGetRequestOptions() {}

void OAIInstitutionsGetRequestOptions::initializeModel() {

    m_include_auth_metadata_isSet = false;
    m_include_auth_metadata_isValid = false;

    m_include_optional_metadata_isSet = false;
    m_include_optional_metadata_isValid = false;

    m_include_payment_initiation_metadata_isSet = false;
    m_include_payment_initiation_metadata_isValid = false;

    m_oauth_isSet = false;
    m_oauth_isValid = false;

    m_products_isSet = false;
    m_products_isValid = false;

    m_routing_numbers_isSet = false;
    m_routing_numbers_isValid = false;
}

void OAIInstitutionsGetRequestOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstitutionsGetRequestOptions::fromJsonObject(QJsonObject json) {

    m_include_auth_metadata_isValid = ::OpenAPI::fromJsonValue(m_include_auth_metadata, json[QString("include_auth_metadata")]);
    m_include_auth_metadata_isSet = !json[QString("include_auth_metadata")].isNull() && m_include_auth_metadata_isValid;

    m_include_optional_metadata_isValid = ::OpenAPI::fromJsonValue(m_include_optional_metadata, json[QString("include_optional_metadata")]);
    m_include_optional_metadata_isSet = !json[QString("include_optional_metadata")].isNull() && m_include_optional_metadata_isValid;

    m_include_payment_initiation_metadata_isValid = ::OpenAPI::fromJsonValue(m_include_payment_initiation_metadata, json[QString("include_payment_initiation_metadata")]);
    m_include_payment_initiation_metadata_isSet = !json[QString("include_payment_initiation_metadata")].isNull() && m_include_payment_initiation_metadata_isValid;

    m_oauth_isValid = ::OpenAPI::fromJsonValue(m_oauth, json[QString("oauth")]);
    m_oauth_isSet = !json[QString("oauth")].isNull() && m_oauth_isValid;

    m_products_isValid = ::OpenAPI::fromJsonValue(m_products, json[QString("products")]);
    m_products_isSet = !json[QString("products")].isNull() && m_products_isValid;

    m_routing_numbers_isValid = ::OpenAPI::fromJsonValue(m_routing_numbers, json[QString("routing_numbers")]);
    m_routing_numbers_isSet = !json[QString("routing_numbers")].isNull() && m_routing_numbers_isValid;
}

QString OAIInstitutionsGetRequestOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstitutionsGetRequestOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_include_auth_metadata_isSet) {
        obj.insert(QString("include_auth_metadata"), ::OpenAPI::toJsonValue(m_include_auth_metadata));
    }
    if (m_include_optional_metadata_isSet) {
        obj.insert(QString("include_optional_metadata"), ::OpenAPI::toJsonValue(m_include_optional_metadata));
    }
    if (m_include_payment_initiation_metadata_isSet) {
        obj.insert(QString("include_payment_initiation_metadata"), ::OpenAPI::toJsonValue(m_include_payment_initiation_metadata));
    }
    if (m_oauth_isSet) {
        obj.insert(QString("oauth"), ::OpenAPI::toJsonValue(m_oauth));
    }
    if (m_products.size() > 0) {
        obj.insert(QString("products"), ::OpenAPI::toJsonValue(m_products));
    }
    if (m_routing_numbers.size() > 0) {
        obj.insert(QString("routing_numbers"), ::OpenAPI::toJsonValue(m_routing_numbers));
    }
    return obj;
}

bool OAIInstitutionsGetRequestOptions::isIncludeAuthMetadata() const {
    return m_include_auth_metadata;
}
void OAIInstitutionsGetRequestOptions::setIncludeAuthMetadata(const bool &include_auth_metadata) {
    m_include_auth_metadata = include_auth_metadata;
    m_include_auth_metadata_isSet = true;
}

bool OAIInstitutionsGetRequestOptions::is_include_auth_metadata_Set() const{
    return m_include_auth_metadata_isSet;
}

bool OAIInstitutionsGetRequestOptions::is_include_auth_metadata_Valid() const{
    return m_include_auth_metadata_isValid;
}

bool OAIInstitutionsGetRequestOptions::isIncludeOptionalMetadata() const {
    return m_include_optional_metadata;
}
void OAIInstitutionsGetRequestOptions::setIncludeOptionalMetadata(const bool &include_optional_metadata) {
    m_include_optional_metadata = include_optional_metadata;
    m_include_optional_metadata_isSet = true;
}

bool OAIInstitutionsGetRequestOptions::is_include_optional_metadata_Set() const{
    return m_include_optional_metadata_isSet;
}

bool OAIInstitutionsGetRequestOptions::is_include_optional_metadata_Valid() const{
    return m_include_optional_metadata_isValid;
}

bool OAIInstitutionsGetRequestOptions::isIncludePaymentInitiationMetadata() const {
    return m_include_payment_initiation_metadata;
}
void OAIInstitutionsGetRequestOptions::setIncludePaymentInitiationMetadata(const bool &include_payment_initiation_metadata) {
    m_include_payment_initiation_metadata = include_payment_initiation_metadata;
    m_include_payment_initiation_metadata_isSet = true;
}

bool OAIInstitutionsGetRequestOptions::is_include_payment_initiation_metadata_Set() const{
    return m_include_payment_initiation_metadata_isSet;
}

bool OAIInstitutionsGetRequestOptions::is_include_payment_initiation_metadata_Valid() const{
    return m_include_payment_initiation_metadata_isValid;
}

bool OAIInstitutionsGetRequestOptions::isOauth() const {
    return m_oauth;
}
void OAIInstitutionsGetRequestOptions::setOauth(const bool &oauth) {
    m_oauth = oauth;
    m_oauth_isSet = true;
}

bool OAIInstitutionsGetRequestOptions::is_oauth_Set() const{
    return m_oauth_isSet;
}

bool OAIInstitutionsGetRequestOptions::is_oauth_Valid() const{
    return m_oauth_isValid;
}

QList<OAIProducts> OAIInstitutionsGetRequestOptions::getProducts() const {
    return m_products;
}
void OAIInstitutionsGetRequestOptions::setProducts(const QList<OAIProducts> &products) {
    m_products = products;
    m_products_isSet = true;
}

bool OAIInstitutionsGetRequestOptions::is_products_Set() const{
    return m_products_isSet;
}

bool OAIInstitutionsGetRequestOptions::is_products_Valid() const{
    return m_products_isValid;
}

QList<QString> OAIInstitutionsGetRequestOptions::getRoutingNumbers() const {
    return m_routing_numbers;
}
void OAIInstitutionsGetRequestOptions::setRoutingNumbers(const QList<QString> &routing_numbers) {
    m_routing_numbers = routing_numbers;
    m_routing_numbers_isSet = true;
}

bool OAIInstitutionsGetRequestOptions::is_routing_numbers_Set() const{
    return m_routing_numbers_isSet;
}

bool OAIInstitutionsGetRequestOptions::is_routing_numbers_Valid() const{
    return m_routing_numbers_isValid;
}

bool OAIInstitutionsGetRequestOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_include_auth_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_optional_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_payment_initiation_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_oauth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstitutionsGetRequestOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
