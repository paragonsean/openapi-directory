/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplication.h
 *
 * Metadata about the application
 */

#ifndef OAIApplication_H
#define OAIApplication_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplication : public OAIObject {
public:
    OAIApplication();
    OAIApplication(QString json);
    ~OAIApplication() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationId() const;
    void setApplicationId(const QString &application_id);
    bool is_application_id_Set() const;
    bool is_application_id_Valid() const;

    QString getApplicationUrl() const;
    void setApplicationUrl(const QString &application_url);
    bool is_application_url_Set() const;
    bool is_application_url_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCompanyLegalName() const;
    void setCompanyLegalName(const QString &company_legal_name);
    bool is_company_legal_name_Set() const;
    bool is_company_legal_name_Valid() const;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QDate getJoinDate() const;
    void setJoinDate(const QDate &join_date);
    bool is_join_date_Set() const;
    bool is_join_date_Valid() const;

    QString getLogoUrl() const;
    void setLogoUrl(const QString &logo_url);
    bool is_logo_url_Set() const;
    bool is_logo_url_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    QString getReasonForAccess() const;
    void setReasonForAccess(const QString &reason_for_access);
    bool is_reason_for_access_Set() const;
    bool is_reason_for_access_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getUseCase() const;
    void setUseCase(const QString &use_case);
    bool is_use_case_Set() const;
    bool is_use_case_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_id;
    bool m_application_id_isSet;
    bool m_application_id_isValid;

    QString m_application_url;
    bool m_application_url_isSet;
    bool m_application_url_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_company_legal_name;
    bool m_company_legal_name_isSet;
    bool m_company_legal_name_isValid;

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QDate m_join_date;
    bool m_join_date_isSet;
    bool m_join_date_isValid;

    QString m_logo_url;
    bool m_logo_url_isSet;
    bool m_logo_url_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    QString m_reason_for_access;
    bool m_reason_for_access_isSet;
    bool m_reason_for_access_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_use_case;
    bool m_use_case_isSet;
    bool m_use_case_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplication)

#endif // OAIApplication_H
