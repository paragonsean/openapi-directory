/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayStubDistributionBreakdown.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayStubDistributionBreakdown::OAIPayStubDistributionBreakdown(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayStubDistributionBreakdown::OAIPayStubDistributionBreakdown() {
    this->initializeModel();
}

OAIPayStubDistributionBreakdown::~OAIPayStubDistributionBreakdown() {}

void OAIPayStubDistributionBreakdown::initializeModel() {

    m_account_name_isSet = false;
    m_account_name_isValid = false;

    m_bank_name_isSet = false;
    m_bank_name_isValid = false;

    m_current_amount_isSet = false;
    m_current_amount_isValid = false;

    m_iso_currency_code_isSet = false;
    m_iso_currency_code_isValid = false;

    m_mask_isSet = false;
    m_mask_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_unofficial_currency_code_isSet = false;
    m_unofficial_currency_code_isValid = false;
}

void OAIPayStubDistributionBreakdown::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPayStubDistributionBreakdown::fromJsonObject(QJsonObject json) {

    m_account_name_isValid = ::OpenAPI::fromJsonValue(m_account_name, json[QString("account_name")]);
    m_account_name_isSet = !json[QString("account_name")].isNull() && m_account_name_isValid;

    m_bank_name_isValid = ::OpenAPI::fromJsonValue(m_bank_name, json[QString("bank_name")]);
    m_bank_name_isSet = !json[QString("bank_name")].isNull() && m_bank_name_isValid;

    m_current_amount_isValid = ::OpenAPI::fromJsonValue(m_current_amount, json[QString("current_amount")]);
    m_current_amount_isSet = !json[QString("current_amount")].isNull() && m_current_amount_isValid;

    m_iso_currency_code_isValid = ::OpenAPI::fromJsonValue(m_iso_currency_code, json[QString("iso_currency_code")]);
    m_iso_currency_code_isSet = !json[QString("iso_currency_code")].isNull() && m_iso_currency_code_isValid;

    m_mask_isValid = ::OpenAPI::fromJsonValue(m_mask, json[QString("mask")]);
    m_mask_isSet = !json[QString("mask")].isNull() && m_mask_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_unofficial_currency_code_isValid = ::OpenAPI::fromJsonValue(m_unofficial_currency_code, json[QString("unofficial_currency_code")]);
    m_unofficial_currency_code_isSet = !json[QString("unofficial_currency_code")].isNull() && m_unofficial_currency_code_isValid;
}

QString OAIPayStubDistributionBreakdown::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPayStubDistributionBreakdown::asJsonObject() const {
    QJsonObject obj;
    if (m_account_name_isSet) {
        obj.insert(QString("account_name"), ::OpenAPI::toJsonValue(m_account_name));
    }
    if (m_bank_name_isSet) {
        obj.insert(QString("bank_name"), ::OpenAPI::toJsonValue(m_bank_name));
    }
    if (m_current_amount_isSet) {
        obj.insert(QString("current_amount"), ::OpenAPI::toJsonValue(m_current_amount));
    }
    if (m_iso_currency_code_isSet) {
        obj.insert(QString("iso_currency_code"), ::OpenAPI::toJsonValue(m_iso_currency_code));
    }
    if (m_mask_isSet) {
        obj.insert(QString("mask"), ::OpenAPI::toJsonValue(m_mask));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_unofficial_currency_code_isSet) {
        obj.insert(QString("unofficial_currency_code"), ::OpenAPI::toJsonValue(m_unofficial_currency_code));
    }
    return obj;
}

QString OAIPayStubDistributionBreakdown::getAccountName() const {
    return m_account_name;
}
void OAIPayStubDistributionBreakdown::setAccountName(const QString &account_name) {
    m_account_name = account_name;
    m_account_name_isSet = true;
}

bool OAIPayStubDistributionBreakdown::is_account_name_Set() const{
    return m_account_name_isSet;
}

bool OAIPayStubDistributionBreakdown::is_account_name_Valid() const{
    return m_account_name_isValid;
}

QString OAIPayStubDistributionBreakdown::getBankName() const {
    return m_bank_name;
}
void OAIPayStubDistributionBreakdown::setBankName(const QString &bank_name) {
    m_bank_name = bank_name;
    m_bank_name_isSet = true;
}

bool OAIPayStubDistributionBreakdown::is_bank_name_Set() const{
    return m_bank_name_isSet;
}

bool OAIPayStubDistributionBreakdown::is_bank_name_Valid() const{
    return m_bank_name_isValid;
}

double OAIPayStubDistributionBreakdown::getCurrentAmount() const {
    return m_current_amount;
}
void OAIPayStubDistributionBreakdown::setCurrentAmount(const double &current_amount) {
    m_current_amount = current_amount;
    m_current_amount_isSet = true;
}

bool OAIPayStubDistributionBreakdown::is_current_amount_Set() const{
    return m_current_amount_isSet;
}

bool OAIPayStubDistributionBreakdown::is_current_amount_Valid() const{
    return m_current_amount_isValid;
}

QString OAIPayStubDistributionBreakdown::getIsoCurrencyCode() const {
    return m_iso_currency_code;
}
void OAIPayStubDistributionBreakdown::setIsoCurrencyCode(const QString &iso_currency_code) {
    m_iso_currency_code = iso_currency_code;
    m_iso_currency_code_isSet = true;
}

bool OAIPayStubDistributionBreakdown::is_iso_currency_code_Set() const{
    return m_iso_currency_code_isSet;
}

bool OAIPayStubDistributionBreakdown::is_iso_currency_code_Valid() const{
    return m_iso_currency_code_isValid;
}

QString OAIPayStubDistributionBreakdown::getMask() const {
    return m_mask;
}
void OAIPayStubDistributionBreakdown::setMask(const QString &mask) {
    m_mask = mask;
    m_mask_isSet = true;
}

bool OAIPayStubDistributionBreakdown::is_mask_Set() const{
    return m_mask_isSet;
}

bool OAIPayStubDistributionBreakdown::is_mask_Valid() const{
    return m_mask_isValid;
}

QString OAIPayStubDistributionBreakdown::getType() const {
    return m_type;
}
void OAIPayStubDistributionBreakdown::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIPayStubDistributionBreakdown::is_type_Set() const{
    return m_type_isSet;
}

bool OAIPayStubDistributionBreakdown::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIPayStubDistributionBreakdown::getUnofficialCurrencyCode() const {
    return m_unofficial_currency_code;
}
void OAIPayStubDistributionBreakdown::setUnofficialCurrencyCode(const QString &unofficial_currency_code) {
    m_unofficial_currency_code = unofficial_currency_code;
    m_unofficial_currency_code_isSet = true;
}

bool OAIPayStubDistributionBreakdown::is_unofficial_currency_code_Set() const{
    return m_unofficial_currency_code_isSet;
}

bool OAIPayStubDistributionBreakdown::is_unofficial_currency_code_Valid() const{
    return m_unofficial_currency_code_isValid;
}

bool OAIPayStubDistributionBreakdown::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mask_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unofficial_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPayStubDistributionBreakdown::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_name_isValid && m_bank_name_isValid && m_current_amount_isValid && m_iso_currency_code_isValid && m_mask_isValid && m_type_isValid && m_unofficial_currency_code_isValid && true;
}

} // namespace OpenAPI
