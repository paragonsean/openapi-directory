/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIItemStatusInvestments.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIItemStatusInvestments::OAIItemStatusInvestments(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIItemStatusInvestments::OAIItemStatusInvestments() {
    this->initializeModel();
}

OAIItemStatusInvestments::~OAIItemStatusInvestments() {}

void OAIItemStatusInvestments::initializeModel() {

    m_last_failed_update_isSet = false;
    m_last_failed_update_isValid = false;

    m_last_successful_update_isSet = false;
    m_last_successful_update_isValid = false;
}

void OAIItemStatusInvestments::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIItemStatusInvestments::fromJsonObject(QJsonObject json) {

    m_last_failed_update_isValid = ::OpenAPI::fromJsonValue(m_last_failed_update, json[QString("last_failed_update")]);
    m_last_failed_update_isSet = !json[QString("last_failed_update")].isNull() && m_last_failed_update_isValid;

    m_last_successful_update_isValid = ::OpenAPI::fromJsonValue(m_last_successful_update, json[QString("last_successful_update")]);
    m_last_successful_update_isSet = !json[QString("last_successful_update")].isNull() && m_last_successful_update_isValid;
}

QString OAIItemStatusInvestments::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIItemStatusInvestments::asJsonObject() const {
    QJsonObject obj;
    if (m_last_failed_update_isSet) {
        obj.insert(QString("last_failed_update"), ::OpenAPI::toJsonValue(m_last_failed_update));
    }
    if (m_last_successful_update_isSet) {
        obj.insert(QString("last_successful_update"), ::OpenAPI::toJsonValue(m_last_successful_update));
    }
    return obj;
}

QDateTime OAIItemStatusInvestments::getLastFailedUpdate() const {
    return m_last_failed_update;
}
void OAIItemStatusInvestments::setLastFailedUpdate(const QDateTime &last_failed_update) {
    m_last_failed_update = last_failed_update;
    m_last_failed_update_isSet = true;
}

bool OAIItemStatusInvestments::is_last_failed_update_Set() const{
    return m_last_failed_update_isSet;
}

bool OAIItemStatusInvestments::is_last_failed_update_Valid() const{
    return m_last_failed_update_isValid;
}

QDateTime OAIItemStatusInvestments::getLastSuccessfulUpdate() const {
    return m_last_successful_update;
}
void OAIItemStatusInvestments::setLastSuccessfulUpdate(const QDateTime &last_successful_update) {
    m_last_successful_update = last_successful_update;
    m_last_successful_update_isSet = true;
}

bool OAIItemStatusInvestments::is_last_successful_update_Set() const{
    return m_last_successful_update_isSet;
}

bool OAIItemStatusInvestments::is_last_successful_update_Valid() const{
    return m_last_successful_update_isValid;
}

bool OAIItemStatusInvestments::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_failed_update_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_successful_update_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIItemStatusInvestments::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
