/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIItemStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIItemStatus::OAIItemStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIItemStatus::OAIItemStatus() {
    this->initializeModel();
}

OAIItemStatus::~OAIItemStatus() {}

void OAIItemStatus::initializeModel() {

    m_investments_isSet = false;
    m_investments_isValid = false;

    m_last_webhook_isSet = false;
    m_last_webhook_isValid = false;

    m_transactions_isSet = false;
    m_transactions_isValid = false;
}

void OAIItemStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIItemStatus::fromJsonObject(QJsonObject json) {

    m_investments_isValid = ::OpenAPI::fromJsonValue(m_investments, json[QString("investments")]);
    m_investments_isSet = !json[QString("investments")].isNull() && m_investments_isValid;

    m_last_webhook_isValid = ::OpenAPI::fromJsonValue(m_last_webhook, json[QString("last_webhook")]);
    m_last_webhook_isSet = !json[QString("last_webhook")].isNull() && m_last_webhook_isValid;

    m_transactions_isValid = ::OpenAPI::fromJsonValue(m_transactions, json[QString("transactions")]);
    m_transactions_isSet = !json[QString("transactions")].isNull() && m_transactions_isValid;
}

QString OAIItemStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIItemStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_investments.isSet()) {
        obj.insert(QString("investments"), ::OpenAPI::toJsonValue(m_investments));
    }
    if (m_last_webhook.isSet()) {
        obj.insert(QString("last_webhook"), ::OpenAPI::toJsonValue(m_last_webhook));
    }
    if (m_transactions.isSet()) {
        obj.insert(QString("transactions"), ::OpenAPI::toJsonValue(m_transactions));
    }
    return obj;
}

OAIItemStatusInvestments OAIItemStatus::getInvestments() const {
    return m_investments;
}
void OAIItemStatus::setInvestments(const OAIItemStatusInvestments &investments) {
    m_investments = investments;
    m_investments_isSet = true;
}

bool OAIItemStatus::is_investments_Set() const{
    return m_investments_isSet;
}

bool OAIItemStatus::is_investments_Valid() const{
    return m_investments_isValid;
}

OAIItemStatusLastWebhook OAIItemStatus::getLastWebhook() const {
    return m_last_webhook;
}
void OAIItemStatus::setLastWebhook(const OAIItemStatusLastWebhook &last_webhook) {
    m_last_webhook = last_webhook;
    m_last_webhook_isSet = true;
}

bool OAIItemStatus::is_last_webhook_Set() const{
    return m_last_webhook_isSet;
}

bool OAIItemStatus::is_last_webhook_Valid() const{
    return m_last_webhook_isValid;
}

OAIItemStatusTransactions OAIItemStatus::getTransactions() const {
    return m_transactions;
}
void OAIItemStatus::setTransactions(const OAIItemStatusTransactions &transactions) {
    m_transactions = transactions;
    m_transactions_isSet = true;
}

bool OAIItemStatus::is_transactions_Set() const{
    return m_transactions_isSet;
}

bool OAIItemStatus::is_transactions_Valid() const{
    return m_transactions_isValid;
}

bool OAIItemStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_investments.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_webhook.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIItemStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
