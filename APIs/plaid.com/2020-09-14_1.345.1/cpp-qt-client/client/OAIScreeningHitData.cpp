/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScreeningHitData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScreeningHitData::OAIScreeningHitData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScreeningHitData::OAIScreeningHitData() {
    this->initializeModel();
}

OAIScreeningHitData::~OAIScreeningHitData() {}

void OAIScreeningHitData::initializeModel() {

    m_dates_of_birth_isSet = false;
    m_dates_of_birth_isValid = false;

    m_documents_isSet = false;
    m_documents_isValid = false;

    m_locations_isSet = false;
    m_locations_isValid = false;

    m_names_isSet = false;
    m_names_isValid = false;
}

void OAIScreeningHitData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScreeningHitData::fromJsonObject(QJsonObject json) {

    m_dates_of_birth_isValid = ::OpenAPI::fromJsonValue(m_dates_of_birth, json[QString("dates_of_birth")]);
    m_dates_of_birth_isSet = !json[QString("dates_of_birth")].isNull() && m_dates_of_birth_isValid;

    m_documents_isValid = ::OpenAPI::fromJsonValue(m_documents, json[QString("documents")]);
    m_documents_isSet = !json[QString("documents")].isNull() && m_documents_isValid;

    m_locations_isValid = ::OpenAPI::fromJsonValue(m_locations, json[QString("locations")]);
    m_locations_isSet = !json[QString("locations")].isNull() && m_locations_isValid;

    m_names_isValid = ::OpenAPI::fromJsonValue(m_names, json[QString("names")]);
    m_names_isSet = !json[QString("names")].isNull() && m_names_isValid;
}

QString OAIScreeningHitData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScreeningHitData::asJsonObject() const {
    QJsonObject obj;
    if (m_dates_of_birth.size() > 0) {
        obj.insert(QString("dates_of_birth"), ::OpenAPI::toJsonValue(m_dates_of_birth));
    }
    if (m_documents.size() > 0) {
        obj.insert(QString("documents"), ::OpenAPI::toJsonValue(m_documents));
    }
    if (m_locations.size() > 0) {
        obj.insert(QString("locations"), ::OpenAPI::toJsonValue(m_locations));
    }
    if (m_names.size() > 0) {
        obj.insert(QString("names"), ::OpenAPI::toJsonValue(m_names));
    }
    return obj;
}

QList<OAIScreeningHitDateOfBirthItem> OAIScreeningHitData::getDatesOfBirth() const {
    return m_dates_of_birth;
}
void OAIScreeningHitData::setDatesOfBirth(const QList<OAIScreeningHitDateOfBirthItem> &dates_of_birth) {
    m_dates_of_birth = dates_of_birth;
    m_dates_of_birth_isSet = true;
}

bool OAIScreeningHitData::is_dates_of_birth_Set() const{
    return m_dates_of_birth_isSet;
}

bool OAIScreeningHitData::is_dates_of_birth_Valid() const{
    return m_dates_of_birth_isValid;
}

QList<OAIScreeningHitDocumentsItems> OAIScreeningHitData::getDocuments() const {
    return m_documents;
}
void OAIScreeningHitData::setDocuments(const QList<OAIScreeningHitDocumentsItems> &documents) {
    m_documents = documents;
    m_documents_isSet = true;
}

bool OAIScreeningHitData::is_documents_Set() const{
    return m_documents_isSet;
}

bool OAIScreeningHitData::is_documents_Valid() const{
    return m_documents_isValid;
}

QList<OAIGenericScreeningHitLocationItems> OAIScreeningHitData::getLocations() const {
    return m_locations;
}
void OAIScreeningHitData::setLocations(const QList<OAIGenericScreeningHitLocationItems> &locations) {
    m_locations = locations;
    m_locations_isSet = true;
}

bool OAIScreeningHitData::is_locations_Set() const{
    return m_locations_isSet;
}

bool OAIScreeningHitData::is_locations_Valid() const{
    return m_locations_isValid;
}

QList<OAIScreeningHitNamesItems> OAIScreeningHitData::getNames() const {
    return m_names;
}
void OAIScreeningHitData::setNames(const QList<OAIScreeningHitNamesItems> &names) {
    m_names = names;
    m_names_isSet = true;
}

bool OAIScreeningHitData::is_names_Set() const{
    return m_names_isSet;
}

bool OAIScreeningHitData::is_names_Valid() const{
    return m_names_isValid;
}

bool OAIScreeningHitData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dates_of_birth.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_documents.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_locations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScreeningHitData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
