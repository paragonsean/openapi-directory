/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExternalPaymentScheduleBase.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExternalPaymentScheduleBase::OAIExternalPaymentScheduleBase(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExternalPaymentScheduleBase::OAIExternalPaymentScheduleBase() {
    this->initializeModel();
}

OAIExternalPaymentScheduleBase::~OAIExternalPaymentScheduleBase() {}

void OAIExternalPaymentScheduleBase::initializeModel() {

    m_adjusted_start_date_isSet = false;
    m_adjusted_start_date_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_interval_isSet = false;
    m_interval_isValid = false;

    m_interval_execution_day_isSet = false;
    m_interval_execution_day_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;
}

void OAIExternalPaymentScheduleBase::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExternalPaymentScheduleBase::fromJsonObject(QJsonObject json) {

    m_adjusted_start_date_isValid = ::OpenAPI::fromJsonValue(m_adjusted_start_date, json[QString("adjusted_start_date")]);
    m_adjusted_start_date_isSet = !json[QString("adjusted_start_date")].isNull() && m_adjusted_start_date_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("end_date")]);
    m_end_date_isSet = !json[QString("end_date")].isNull() && m_end_date_isValid;

    m_interval_isValid = ::OpenAPI::fromJsonValue(m_interval, json[QString("interval")]);
    m_interval_isSet = !json[QString("interval")].isNull() && m_interval_isValid;

    m_interval_execution_day_isValid = ::OpenAPI::fromJsonValue(m_interval_execution_day, json[QString("interval_execution_day")]);
    m_interval_execution_day_isSet = !json[QString("interval_execution_day")].isNull() && m_interval_execution_day_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("start_date")]);
    m_start_date_isSet = !json[QString("start_date")].isNull() && m_start_date_isValid;
}

QString OAIExternalPaymentScheduleBase::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExternalPaymentScheduleBase::asJsonObject() const {
    QJsonObject obj;
    if (m_adjusted_start_date_isSet) {
        obj.insert(QString("adjusted_start_date"), ::OpenAPI::toJsonValue(m_adjusted_start_date));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("end_date"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_interval.isSet()) {
        obj.insert(QString("interval"), ::OpenAPI::toJsonValue(m_interval));
    }
    if (m_interval_execution_day_isSet) {
        obj.insert(QString("interval_execution_day"), ::OpenAPI::toJsonValue(m_interval_execution_day));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("start_date"), ::OpenAPI::toJsonValue(m_start_date));
    }
    return obj;
}

QDate OAIExternalPaymentScheduleBase::getAdjustedStartDate() const {
    return m_adjusted_start_date;
}
void OAIExternalPaymentScheduleBase::setAdjustedStartDate(const QDate &adjusted_start_date) {
    m_adjusted_start_date = adjusted_start_date;
    m_adjusted_start_date_isSet = true;
}

bool OAIExternalPaymentScheduleBase::is_adjusted_start_date_Set() const{
    return m_adjusted_start_date_isSet;
}

bool OAIExternalPaymentScheduleBase::is_adjusted_start_date_Valid() const{
    return m_adjusted_start_date_isValid;
}

QDate OAIExternalPaymentScheduleBase::getEndDate() const {
    return m_end_date;
}
void OAIExternalPaymentScheduleBase::setEndDate(const QDate &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIExternalPaymentScheduleBase::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIExternalPaymentScheduleBase::is_end_date_Valid() const{
    return m_end_date_isValid;
}

OAIPaymentScheduleInterval OAIExternalPaymentScheduleBase::getInterval() const {
    return m_interval;
}
void OAIExternalPaymentScheduleBase::setInterval(const OAIPaymentScheduleInterval &interval) {
    m_interval = interval;
    m_interval_isSet = true;
}

bool OAIExternalPaymentScheduleBase::is_interval_Set() const{
    return m_interval_isSet;
}

bool OAIExternalPaymentScheduleBase::is_interval_Valid() const{
    return m_interval_isValid;
}

qint32 OAIExternalPaymentScheduleBase::getIntervalExecutionDay() const {
    return m_interval_execution_day;
}
void OAIExternalPaymentScheduleBase::setIntervalExecutionDay(const qint32 &interval_execution_day) {
    m_interval_execution_day = interval_execution_day;
    m_interval_execution_day_isSet = true;
}

bool OAIExternalPaymentScheduleBase::is_interval_execution_day_Set() const{
    return m_interval_execution_day_isSet;
}

bool OAIExternalPaymentScheduleBase::is_interval_execution_day_Valid() const{
    return m_interval_execution_day_isValid;
}

QDate OAIExternalPaymentScheduleBase::getStartDate() const {
    return m_start_date;
}
void OAIExternalPaymentScheduleBase::setStartDate(const QDate &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIExternalPaymentScheduleBase::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIExternalPaymentScheduleBase::is_start_date_Valid() const{
    return m_start_date_isValid;
}

bool OAIExternalPaymentScheduleBase::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adjusted_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_interval.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_interval_execution_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExternalPaymentScheduleBase::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
