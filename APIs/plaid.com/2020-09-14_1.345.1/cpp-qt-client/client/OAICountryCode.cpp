/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICountryCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICountryCode::OAICountryCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICountryCode::OAICountryCode() {
    this->initializeModel();
}

OAICountryCode::~OAICountryCode() {}

void OAICountryCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICountryCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICountryCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("US", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::US;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GB", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::GB;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ES", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::ES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::NL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FR", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::FR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IE", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::IE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CA", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::CA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DE", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::DE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("IT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::IT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PL", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::PL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DK", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::DK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("false", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::FALSE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SE", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::SE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EE", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::EE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::LT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LV", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::LV;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PT", Qt::CaseInsensitive) == 0) {
        m_value = eOAICountryCode::PT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICountryCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICountryCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICountryCode::US:
            val = "US";
            break;
        case eOAICountryCode::GB:
            val = "GB";
            break;
        case eOAICountryCode::ES:
            val = "ES";
            break;
        case eOAICountryCode::NL:
            val = "NL";
            break;
        case eOAICountryCode::FR:
            val = "FR";
            break;
        case eOAICountryCode::IE:
            val = "IE";
            break;
        case eOAICountryCode::CA:
            val = "CA";
            break;
        case eOAICountryCode::DE:
            val = "DE";
            break;
        case eOAICountryCode::IT:
            val = "IT";
            break;
        case eOAICountryCode::PL:
            val = "PL";
            break;
        case eOAICountryCode::DK:
            val = "DK";
            break;
        case eOAICountryCode::FALSE:
            val = "false";
            break;
        case eOAICountryCode::SE:
            val = "SE";
            break;
        case eOAICountryCode::EE:
            val = "EE";
            break;
        case eOAICountryCode::LT:
            val = "LT";
            break;
        case eOAICountryCode::LV:
            val = "LV";
            break;
        case eOAICountryCode::PT:
            val = "PT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICountryCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICountryCode::eOAICountryCode OAICountryCode::getValue() const {
    return m_value;
}

void OAICountryCode::setValue(const OAICountryCode::eOAICountryCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICountryCode::isSet() const {
    
    return m_value_isSet;
}

bool OAICountryCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
