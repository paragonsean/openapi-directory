/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBankTransfersEventsUpdateWebhookForAuth.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBankTransfersEventsUpdateWebhookForAuth::OAIBankTransfersEventsUpdateWebhookForAuth(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBankTransfersEventsUpdateWebhookForAuth::OAIBankTransfersEventsUpdateWebhookForAuth() {
    this->initializeModel();
}

OAIBankTransfersEventsUpdateWebhookForAuth::~OAIBankTransfersEventsUpdateWebhookForAuth() {}

void OAIBankTransfersEventsUpdateWebhookForAuth::initializeModel() {

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_webhook_code_isSet = false;
    m_webhook_code_isValid = false;

    m_webhook_type_isSet = false;
    m_webhook_type_isValid = false;
}

void OAIBankTransfersEventsUpdateWebhookForAuth::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBankTransfersEventsUpdateWebhookForAuth::fromJsonObject(QJsonObject json) {

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("environment")]);
    m_environment_isSet = !json[QString("environment")].isNull() && m_environment_isValid;

    m_webhook_code_isValid = ::OpenAPI::fromJsonValue(m_webhook_code, json[QString("webhook_code")]);
    m_webhook_code_isSet = !json[QString("webhook_code")].isNull() && m_webhook_code_isValid;

    m_webhook_type_isValid = ::OpenAPI::fromJsonValue(m_webhook_type, json[QString("webhook_type")]);
    m_webhook_type_isSet = !json[QString("webhook_type")].isNull() && m_webhook_type_isValid;
}

QString OAIBankTransfersEventsUpdateWebhookForAuth::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBankTransfersEventsUpdateWebhookForAuth::asJsonObject() const {
    QJsonObject obj;
    if (m_environment.isSet()) {
        obj.insert(QString("environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_webhook_code_isSet) {
        obj.insert(QString("webhook_code"), ::OpenAPI::toJsonValue(m_webhook_code));
    }
    if (m_webhook_type_isSet) {
        obj.insert(QString("webhook_type"), ::OpenAPI::toJsonValue(m_webhook_type));
    }
    return obj;
}

OAIWebhookEnvironmentValues OAIBankTransfersEventsUpdateWebhookForAuth::getEnvironment() const {
    return m_environment;
}
void OAIBankTransfersEventsUpdateWebhookForAuth::setEnvironment(const OAIWebhookEnvironmentValues &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIBankTransfersEventsUpdateWebhookForAuth::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIBankTransfersEventsUpdateWebhookForAuth::is_environment_Valid() const{
    return m_environment_isValid;
}

QString OAIBankTransfersEventsUpdateWebhookForAuth::getWebhookCode() const {
    return m_webhook_code;
}
void OAIBankTransfersEventsUpdateWebhookForAuth::setWebhookCode(const QString &webhook_code) {
    m_webhook_code = webhook_code;
    m_webhook_code_isSet = true;
}

bool OAIBankTransfersEventsUpdateWebhookForAuth::is_webhook_code_Set() const{
    return m_webhook_code_isSet;
}

bool OAIBankTransfersEventsUpdateWebhookForAuth::is_webhook_code_Valid() const{
    return m_webhook_code_isValid;
}

QString OAIBankTransfersEventsUpdateWebhookForAuth::getWebhookType() const {
    return m_webhook_type;
}
void OAIBankTransfersEventsUpdateWebhookForAuth::setWebhookType(const QString &webhook_type) {
    m_webhook_type = webhook_type;
    m_webhook_type_isSet = true;
}

bool OAIBankTransfersEventsUpdateWebhookForAuth::is_webhook_type_Set() const{
    return m_webhook_type_isSet;
}

bool OAIBankTransfersEventsUpdateWebhookForAuth::is_webhook_type_Valid() const{
    return m_webhook_type_isValid;
}

bool OAIBankTransfersEventsUpdateWebhookForAuth::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_environment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_webhook_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBankTransfersEventsUpdateWebhookForAuth::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_environment_isValid && m_webhook_code_isValid && m_webhook_type_isValid && true;
}

} // namespace OpenAPI
