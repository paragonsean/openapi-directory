/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransferEvent.h
 *
 * Represents an event in the Transfers API.
 */

#ifndef OAITransferEvent_H
#define OAITransferEvent_H

#include <QJsonObject>

#include "OAITransferEventType.h"
#include "OAITransferFailure.h"
#include "OAITransferType.h"
#include <QDateTime>
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransferEvent : public OAIObject {
public:
    OAITransferEvent();
    OAITransferEvent(QString json);
    ~OAITransferEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    qint32 getEventId() const;
    void setEventId(const qint32 &event_id);
    bool is_event_id_Set() const;
    bool is_event_id_Valid() const;

    OAITransferEventType getEventType() const;
    void setEventType(const OAITransferEventType &event_type);
    bool is_event_type_Set() const;
    bool is_event_type_Valid() const;

    OAITransferFailure getFailureReason() const;
    void setFailureReason(const OAITransferFailure &failure_reason);
    bool is_failure_reason_Set() const;
    bool is_failure_reason_Valid() const;

    QString getFundingAccountId() const;
    void setFundingAccountId(const QString &funding_account_id);
    bool is_funding_account_id_Set() const;
    bool is_funding_account_id_Valid() const;

    Q_DECL_DEPRECATED QString getOriginationAccountId() const;
    Q_DECL_DEPRECATED void setOriginationAccountId(const QString &origination_account_id);
    Q_DECL_DEPRECATED bool is_origination_account_id_Set() const;
    Q_DECL_DEPRECATED bool is_origination_account_id_Valid() const;

    QString getOriginatorClientId() const;
    void setOriginatorClientId(const QString &originator_client_id);
    bool is_originator_client_id_Set() const;
    bool is_originator_client_id_Valid() const;

    QString getRefundId() const;
    void setRefundId(const QString &refund_id);
    bool is_refund_id_Set() const;
    bool is_refund_id_Valid() const;

    QString getSweepAmount() const;
    void setSweepAmount(const QString &sweep_amount);
    bool is_sweep_amount_Set() const;
    bool is_sweep_amount_Valid() const;

    QString getSweepId() const;
    void setSweepId(const QString &sweep_id);
    bool is_sweep_id_Set() const;
    bool is_sweep_id_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getTransferAmount() const;
    void setTransferAmount(const QString &transfer_amount);
    bool is_transfer_amount_Set() const;
    bool is_transfer_amount_Valid() const;

    QString getTransferId() const;
    void setTransferId(const QString &transfer_id);
    bool is_transfer_id_Set() const;
    bool is_transfer_id_Valid() const;

    OAITransferType getTransferType() const;
    void setTransferType(const OAITransferType &transfer_type);
    bool is_transfer_type_Set() const;
    bool is_transfer_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    qint32 m_event_id;
    bool m_event_id_isSet;
    bool m_event_id_isValid;

    OAITransferEventType m_event_type;
    bool m_event_type_isSet;
    bool m_event_type_isValid;

    OAITransferFailure m_failure_reason;
    bool m_failure_reason_isSet;
    bool m_failure_reason_isValid;

    QString m_funding_account_id;
    bool m_funding_account_id_isSet;
    bool m_funding_account_id_isValid;

    QString m_origination_account_id;
    bool m_origination_account_id_isSet;
    bool m_origination_account_id_isValid;

    QString m_originator_client_id;
    bool m_originator_client_id_isSet;
    bool m_originator_client_id_isValid;

    QString m_refund_id;
    bool m_refund_id_isSet;
    bool m_refund_id_isValid;

    QString m_sweep_amount;
    bool m_sweep_amount_isSet;
    bool m_sweep_amount_isValid;

    QString m_sweep_id;
    bool m_sweep_id_isSet;
    bool m_sweep_id_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_transfer_amount;
    bool m_transfer_amount_isSet;
    bool m_transfer_amount_isValid;

    QString m_transfer_id;
    bool m_transfer_id_isSet;
    bool m_transfer_id_isValid;

    OAITransferType m_transfer_type;
    bool m_transfer_type_isSet;
    bool m_transfer_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransferEvent)

#endif // OAITransferEvent_H
