/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditBankIncomeTransaction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditBankIncomeTransaction::OAICreditBankIncomeTransaction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditBankIncomeTransaction::OAICreditBankIncomeTransaction() {
    this->initializeModel();
}

OAICreditBankIncomeTransaction::~OAICreditBankIncomeTransaction() {}

void OAICreditBankIncomeTransaction::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_check_number_isSet = false;
    m_check_number_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_iso_currency_code_isSet = false;
    m_iso_currency_code_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_original_description_isSet = false;
    m_original_description_isValid = false;

    m_pending_isSet = false;
    m_pending_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;

    m_unofficial_currency_code_isSet = false;
    m_unofficial_currency_code_isValid = false;
}

void OAICreditBankIncomeTransaction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditBankIncomeTransaction::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_check_number_isValid = ::OpenAPI::fromJsonValue(m_check_number, json[QString("check_number")]);
    m_check_number_isSet = !json[QString("check_number")].isNull() && m_check_number_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_iso_currency_code_isValid = ::OpenAPI::fromJsonValue(m_iso_currency_code, json[QString("iso_currency_code")]);
    m_iso_currency_code_isSet = !json[QString("iso_currency_code")].isNull() && m_iso_currency_code_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_original_description_isValid = ::OpenAPI::fromJsonValue(m_original_description, json[QString("original_description")]);
    m_original_description_isSet = !json[QString("original_description")].isNull() && m_original_description_isValid;

    m_pending_isValid = ::OpenAPI::fromJsonValue(m_pending, json[QString("pending")]);
    m_pending_isSet = !json[QString("pending")].isNull() && m_pending_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transaction_id")]);
    m_transaction_id_isSet = !json[QString("transaction_id")].isNull() && m_transaction_id_isValid;

    m_unofficial_currency_code_isValid = ::OpenAPI::fromJsonValue(m_unofficial_currency_code, json[QString("unofficial_currency_code")]);
    m_unofficial_currency_code_isSet = !json[QString("unofficial_currency_code")].isNull() && m_unofficial_currency_code_isValid;
}

QString OAICreditBankIncomeTransaction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditBankIncomeTransaction::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_check_number_isSet) {
        obj.insert(QString("check_number"), ::OpenAPI::toJsonValue(m_check_number));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_iso_currency_code_isSet) {
        obj.insert(QString("iso_currency_code"), ::OpenAPI::toJsonValue(m_iso_currency_code));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_original_description_isSet) {
        obj.insert(QString("original_description"), ::OpenAPI::toJsonValue(m_original_description));
    }
    if (m_pending_isSet) {
        obj.insert(QString("pending"), ::OpenAPI::toJsonValue(m_pending));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transaction_id"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    if (m_unofficial_currency_code_isSet) {
        obj.insert(QString("unofficial_currency_code"), ::OpenAPI::toJsonValue(m_unofficial_currency_code));
    }
    return obj;
}

double OAICreditBankIncomeTransaction::getAmount() const {
    return m_amount;
}
void OAICreditBankIncomeTransaction::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAICreditBankIncomeTransaction::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAICreditBankIncomeTransaction::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAICreditBankIncomeTransaction::getCheckNumber() const {
    return m_check_number;
}
void OAICreditBankIncomeTransaction::setCheckNumber(const QString &check_number) {
    m_check_number = check_number;
    m_check_number_isSet = true;
}

bool OAICreditBankIncomeTransaction::is_check_number_Set() const{
    return m_check_number_isSet;
}

bool OAICreditBankIncomeTransaction::is_check_number_Valid() const{
    return m_check_number_isValid;
}

QDate OAICreditBankIncomeTransaction::getDate() const {
    return m_date;
}
void OAICreditBankIncomeTransaction::setDate(const QDate &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAICreditBankIncomeTransaction::is_date_Set() const{
    return m_date_isSet;
}

bool OAICreditBankIncomeTransaction::is_date_Valid() const{
    return m_date_isValid;
}

QString OAICreditBankIncomeTransaction::getIsoCurrencyCode() const {
    return m_iso_currency_code;
}
void OAICreditBankIncomeTransaction::setIsoCurrencyCode(const QString &iso_currency_code) {
    m_iso_currency_code = iso_currency_code;
    m_iso_currency_code_isSet = true;
}

bool OAICreditBankIncomeTransaction::is_iso_currency_code_Set() const{
    return m_iso_currency_code_isSet;
}

bool OAICreditBankIncomeTransaction::is_iso_currency_code_Valid() const{
    return m_iso_currency_code_isValid;
}

QString OAICreditBankIncomeTransaction::getName() const {
    return m_name;
}
void OAICreditBankIncomeTransaction::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreditBankIncomeTransaction::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreditBankIncomeTransaction::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICreditBankIncomeTransaction::getOriginalDescription() const {
    return m_original_description;
}
void OAICreditBankIncomeTransaction::setOriginalDescription(const QString &original_description) {
    m_original_description = original_description;
    m_original_description_isSet = true;
}

bool OAICreditBankIncomeTransaction::is_original_description_Set() const{
    return m_original_description_isSet;
}

bool OAICreditBankIncomeTransaction::is_original_description_Valid() const{
    return m_original_description_isValid;
}

bool OAICreditBankIncomeTransaction::isPending() const {
    return m_pending;
}
void OAICreditBankIncomeTransaction::setPending(const bool &pending) {
    m_pending = pending;
    m_pending_isSet = true;
}

bool OAICreditBankIncomeTransaction::is_pending_Set() const{
    return m_pending_isSet;
}

bool OAICreditBankIncomeTransaction::is_pending_Valid() const{
    return m_pending_isValid;
}

QString OAICreditBankIncomeTransaction::getTransactionId() const {
    return m_transaction_id;
}
void OAICreditBankIncomeTransaction::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAICreditBankIncomeTransaction::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAICreditBankIncomeTransaction::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

QString OAICreditBankIncomeTransaction::getUnofficialCurrencyCode() const {
    return m_unofficial_currency_code;
}
void OAICreditBankIncomeTransaction::setUnofficialCurrencyCode(const QString &unofficial_currency_code) {
    m_unofficial_currency_code = unofficial_currency_code;
    m_unofficial_currency_code_isSet = true;
}

bool OAICreditBankIncomeTransaction::is_unofficial_currency_code_Set() const{
    return m_unofficial_currency_code_isSet;
}

bool OAICreditBankIncomeTransaction::is_unofficial_currency_code_Valid() const{
    return m_unofficial_currency_code_isValid;
}

bool OAICreditBankIncomeTransaction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_check_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pending_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unofficial_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditBankIncomeTransaction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
