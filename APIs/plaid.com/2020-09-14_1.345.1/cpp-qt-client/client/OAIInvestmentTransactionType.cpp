/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvestmentTransactionType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvestmentTransactionType::OAIInvestmentTransactionType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvestmentTransactionType::OAIInvestmentTransactionType() {
    this->initializeModel();
}

OAIInvestmentTransactionType::~OAIInvestmentTransactionType() {}

void OAIInvestmentTransactionType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIInvestmentTransactionType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIInvestmentTransactionType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("buy", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvestmentTransactionType::BUY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("sell", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvestmentTransactionType::SELL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("cancel", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvestmentTransactionType::CANCEL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("cash", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvestmentTransactionType::CASH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("fee", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvestmentTransactionType::FEE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("transfer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInvestmentTransactionType::TRANSFER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIInvestmentTransactionType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIInvestmentTransactionType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIInvestmentTransactionType::BUY:
            val = "buy";
            break;
        case eOAIInvestmentTransactionType::SELL:
            val = "sell";
            break;
        case eOAIInvestmentTransactionType::CANCEL:
            val = "cancel";
            break;
        case eOAIInvestmentTransactionType::CASH:
            val = "cash";
            break;
        case eOAIInvestmentTransactionType::FEE:
            val = "fee";
            break;
        case eOAIInvestmentTransactionType::TRANSFER:
            val = "transfer";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIInvestmentTransactionType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIInvestmentTransactionType::eOAIInvestmentTransactionType OAIInvestmentTransactionType::getValue() const {
    return m_value;
}

void OAIInvestmentTransactionType::setValue(const OAIInvestmentTransactionType::eOAIInvestmentTransactionType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIInvestmentTransactionType::isSet() const {
    
    return m_value_isSet;
}

bool OAIInvestmentTransactionType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
