/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWalletTransactionExecuteRequest.h
 *
 * WalletTransactionExecuteRequest defines the request schema for &#x60;/wallet/transaction/execute&#x60;
 */

#ifndef OAIWalletTransactionExecuteRequest_H
#define OAIWalletTransactionExecuteRequest_H

#include <QJsonObject>

#include "OAIWalletTransactionAmount.h"
#include "OAIWalletTransactionCounterparty.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWalletTransactionExecuteRequest : public OAIObject {
public:
    OAIWalletTransactionExecuteRequest();
    OAIWalletTransactionExecuteRequest(QString json);
    ~OAIWalletTransactionExecuteRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIWalletTransactionAmount getAmount() const;
    void setAmount(const OAIWalletTransactionAmount &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    OAIWalletTransactionCounterparty getCounterparty() const;
    void setCounterparty(const OAIWalletTransactionCounterparty &counterparty);
    bool is_counterparty_Set() const;
    bool is_counterparty_Valid() const;

    QString getIdempotencyKey() const;
    void setIdempotencyKey(const QString &idempotency_key);
    bool is_idempotency_key_Set() const;
    bool is_idempotency_key_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QString getSecret() const;
    void setSecret(const QString &secret);
    bool is_secret_Set() const;
    bool is_secret_Valid() const;

    QString getWalletId() const;
    void setWalletId(const QString &wallet_id);
    bool is_wallet_id_Set() const;
    bool is_wallet_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIWalletTransactionAmount m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    OAIWalletTransactionCounterparty m_counterparty;
    bool m_counterparty_isSet;
    bool m_counterparty_isValid;

    QString m_idempotency_key;
    bool m_idempotency_key_isSet;
    bool m_idempotency_key_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QString m_secret;
    bool m_secret_isSet;
    bool m_secret_isValid;

    QString m_wallet_id;
    bool m_wallet_id_isSet;
    bool m_wallet_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWalletTransactionExecuteRequest)

#endif // OAIWalletTransactionExecuteRequest_H
