/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayStubPayPeriodDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayStubPayPeriodDetails::OAIPayStubPayPeriodDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayStubPayPeriodDetails::OAIPayStubPayPeriodDetails() {
    this->initializeModel();
}

OAIPayStubPayPeriodDetails::~OAIPayStubPayPeriodDetails() {}

void OAIPayStubPayPeriodDetails::initializeModel() {

    m_distribution_breakdown_isSet = false;
    m_distribution_breakdown_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_gross_earnings_isSet = false;
    m_gross_earnings_isValid = false;

    m_iso_currency_code_isSet = false;
    m_iso_currency_code_isValid = false;

    m_pay_amount_isSet = false;
    m_pay_amount_isValid = false;

    m_pay_basis_isSet = false;
    m_pay_basis_isValid = false;

    m_pay_date_isSet = false;
    m_pay_date_isValid = false;

    m_pay_frequency_isSet = false;
    m_pay_frequency_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_unofficial_currency_code_isSet = false;
    m_unofficial_currency_code_isValid = false;
}

void OAIPayStubPayPeriodDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPayStubPayPeriodDetails::fromJsonObject(QJsonObject json) {

    m_distribution_breakdown_isValid = ::OpenAPI::fromJsonValue(m_distribution_breakdown, json[QString("distribution_breakdown")]);
    m_distribution_breakdown_isSet = !json[QString("distribution_breakdown")].isNull() && m_distribution_breakdown_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("end_date")]);
    m_end_date_isSet = !json[QString("end_date")].isNull() && m_end_date_isValid;

    m_gross_earnings_isValid = ::OpenAPI::fromJsonValue(m_gross_earnings, json[QString("gross_earnings")]);
    m_gross_earnings_isSet = !json[QString("gross_earnings")].isNull() && m_gross_earnings_isValid;

    m_iso_currency_code_isValid = ::OpenAPI::fromJsonValue(m_iso_currency_code, json[QString("iso_currency_code")]);
    m_iso_currency_code_isSet = !json[QString("iso_currency_code")].isNull() && m_iso_currency_code_isValid;

    m_pay_amount_isValid = ::OpenAPI::fromJsonValue(m_pay_amount, json[QString("pay_amount")]);
    m_pay_amount_isSet = !json[QString("pay_amount")].isNull() && m_pay_amount_isValid;

    m_pay_basis_isValid = ::OpenAPI::fromJsonValue(m_pay_basis, json[QString("pay_basis")]);
    m_pay_basis_isSet = !json[QString("pay_basis")].isNull() && m_pay_basis_isValid;

    m_pay_date_isValid = ::OpenAPI::fromJsonValue(m_pay_date, json[QString("pay_date")]);
    m_pay_date_isSet = !json[QString("pay_date")].isNull() && m_pay_date_isValid;

    m_pay_frequency_isValid = ::OpenAPI::fromJsonValue(m_pay_frequency, json[QString("pay_frequency")]);
    m_pay_frequency_isSet = !json[QString("pay_frequency")].isNull() && m_pay_frequency_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("start_date")]);
    m_start_date_isSet = !json[QString("start_date")].isNull() && m_start_date_isValid;

    m_unofficial_currency_code_isValid = ::OpenAPI::fromJsonValue(m_unofficial_currency_code, json[QString("unofficial_currency_code")]);
    m_unofficial_currency_code_isSet = !json[QString("unofficial_currency_code")].isNull() && m_unofficial_currency_code_isValid;
}

QString OAIPayStubPayPeriodDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPayStubPayPeriodDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_distribution_breakdown.size() > 0) {
        obj.insert(QString("distribution_breakdown"), ::OpenAPI::toJsonValue(m_distribution_breakdown));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("end_date"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_gross_earnings_isSet) {
        obj.insert(QString("gross_earnings"), ::OpenAPI::toJsonValue(m_gross_earnings));
    }
    if (m_iso_currency_code_isSet) {
        obj.insert(QString("iso_currency_code"), ::OpenAPI::toJsonValue(m_iso_currency_code));
    }
    if (m_pay_amount_isSet) {
        obj.insert(QString("pay_amount"), ::OpenAPI::toJsonValue(m_pay_amount));
    }
    if (m_pay_basis.isSet()) {
        obj.insert(QString("pay_basis"), ::OpenAPI::toJsonValue(m_pay_basis));
    }
    if (m_pay_date_isSet) {
        obj.insert(QString("pay_date"), ::OpenAPI::toJsonValue(m_pay_date));
    }
    if (m_pay_frequency_isSet) {
        obj.insert(QString("pay_frequency"), ::OpenAPI::toJsonValue(m_pay_frequency));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("start_date"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_unofficial_currency_code_isSet) {
        obj.insert(QString("unofficial_currency_code"), ::OpenAPI::toJsonValue(m_unofficial_currency_code));
    }
    return obj;
}

QList<OAIPayStubDistributionBreakdown> OAIPayStubPayPeriodDetails::getDistributionBreakdown() const {
    return m_distribution_breakdown;
}
void OAIPayStubPayPeriodDetails::setDistributionBreakdown(const QList<OAIPayStubDistributionBreakdown> &distribution_breakdown) {
    m_distribution_breakdown = distribution_breakdown;
    m_distribution_breakdown_isSet = true;
}

bool OAIPayStubPayPeriodDetails::is_distribution_breakdown_Set() const{
    return m_distribution_breakdown_isSet;
}

bool OAIPayStubPayPeriodDetails::is_distribution_breakdown_Valid() const{
    return m_distribution_breakdown_isValid;
}

QDate OAIPayStubPayPeriodDetails::getEndDate() const {
    return m_end_date;
}
void OAIPayStubPayPeriodDetails::setEndDate(const QDate &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIPayStubPayPeriodDetails::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIPayStubPayPeriodDetails::is_end_date_Valid() const{
    return m_end_date_isValid;
}

double OAIPayStubPayPeriodDetails::getGrossEarnings() const {
    return m_gross_earnings;
}
void OAIPayStubPayPeriodDetails::setGrossEarnings(const double &gross_earnings) {
    m_gross_earnings = gross_earnings;
    m_gross_earnings_isSet = true;
}

bool OAIPayStubPayPeriodDetails::is_gross_earnings_Set() const{
    return m_gross_earnings_isSet;
}

bool OAIPayStubPayPeriodDetails::is_gross_earnings_Valid() const{
    return m_gross_earnings_isValid;
}

QString OAIPayStubPayPeriodDetails::getIsoCurrencyCode() const {
    return m_iso_currency_code;
}
void OAIPayStubPayPeriodDetails::setIsoCurrencyCode(const QString &iso_currency_code) {
    m_iso_currency_code = iso_currency_code;
    m_iso_currency_code_isSet = true;
}

bool OAIPayStubPayPeriodDetails::is_iso_currency_code_Set() const{
    return m_iso_currency_code_isSet;
}

bool OAIPayStubPayPeriodDetails::is_iso_currency_code_Valid() const{
    return m_iso_currency_code_isValid;
}

double OAIPayStubPayPeriodDetails::getPayAmount() const {
    return m_pay_amount;
}
void OAIPayStubPayPeriodDetails::setPayAmount(const double &pay_amount) {
    m_pay_amount = pay_amount;
    m_pay_amount_isSet = true;
}

bool OAIPayStubPayPeriodDetails::is_pay_amount_Set() const{
    return m_pay_amount_isSet;
}

bool OAIPayStubPayPeriodDetails::is_pay_amount_Valid() const{
    return m_pay_amount_isValid;
}

OAICreditPayStubPayBasisType OAIPayStubPayPeriodDetails::getPayBasis() const {
    return m_pay_basis;
}
void OAIPayStubPayPeriodDetails::setPayBasis(const OAICreditPayStubPayBasisType &pay_basis) {
    m_pay_basis = pay_basis;
    m_pay_basis_isSet = true;
}

bool OAIPayStubPayPeriodDetails::is_pay_basis_Set() const{
    return m_pay_basis_isSet;
}

bool OAIPayStubPayPeriodDetails::is_pay_basis_Valid() const{
    return m_pay_basis_isValid;
}

QDate OAIPayStubPayPeriodDetails::getPayDate() const {
    return m_pay_date;
}
void OAIPayStubPayPeriodDetails::setPayDate(const QDate &pay_date) {
    m_pay_date = pay_date;
    m_pay_date_isSet = true;
}

bool OAIPayStubPayPeriodDetails::is_pay_date_Set() const{
    return m_pay_date_isSet;
}

bool OAIPayStubPayPeriodDetails::is_pay_date_Valid() const{
    return m_pay_date_isValid;
}

QString OAIPayStubPayPeriodDetails::getPayFrequency() const {
    return m_pay_frequency;
}
void OAIPayStubPayPeriodDetails::setPayFrequency(const QString &pay_frequency) {
    m_pay_frequency = pay_frequency;
    m_pay_frequency_isSet = true;
}

bool OAIPayStubPayPeriodDetails::is_pay_frequency_Set() const{
    return m_pay_frequency_isSet;
}

bool OAIPayStubPayPeriodDetails::is_pay_frequency_Valid() const{
    return m_pay_frequency_isValid;
}

QDate OAIPayStubPayPeriodDetails::getStartDate() const {
    return m_start_date;
}
void OAIPayStubPayPeriodDetails::setStartDate(const QDate &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIPayStubPayPeriodDetails::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIPayStubPayPeriodDetails::is_start_date_Valid() const{
    return m_start_date_isValid;
}

QString OAIPayStubPayPeriodDetails::getUnofficialCurrencyCode() const {
    return m_unofficial_currency_code;
}
void OAIPayStubPayPeriodDetails::setUnofficialCurrencyCode(const QString &unofficial_currency_code) {
    m_unofficial_currency_code = unofficial_currency_code;
    m_unofficial_currency_code_isSet = true;
}

bool OAIPayStubPayPeriodDetails::is_unofficial_currency_code_Set() const{
    return m_unofficial_currency_code_isSet;
}

bool OAIPayStubPayPeriodDetails::is_unofficial_currency_code_Valid() const{
    return m_unofficial_currency_code_isValid;
}

bool OAIPayStubPayPeriodDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_distribution_breakdown.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_earnings_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_basis.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_frequency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unofficial_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPayStubPayPeriodDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_distribution_breakdown_isValid && m_end_date_isValid && m_gross_earnings_isValid && m_iso_currency_code_isValid && m_pay_amount_isValid && m_pay_date_isValid && m_pay_frequency_isValid && m_start_date_isValid && m_unofficial_currency_code_isValid && true;
}

} // namespace OpenAPI
