/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransferRecurringCreateResponse.h
 *
 * Defines the response schema for &#x60;/transfer/recurring/create&#x60;
 */

#ifndef OAITransferRecurringCreateResponse_H
#define OAITransferRecurringCreateResponse_H

#include <QJsonObject>

#include "OAIRecurringTransferNullable.h"
#include "OAITransferAuthorizationDecision.h"
#include "OAITransferAuthorizationDecisionRationale.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRecurringTransferNullable;

class OAITransferRecurringCreateResponse : public OAIObject {
public:
    OAITransferRecurringCreateResponse();
    OAITransferRecurringCreateResponse(QString json);
    ~OAITransferRecurringCreateResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITransferAuthorizationDecision getDecision() const;
    void setDecision(const OAITransferAuthorizationDecision &decision);
    bool is_decision_Set() const;
    bool is_decision_Valid() const;

    OAITransferAuthorizationDecisionRationale getDecisionRationale() const;
    void setDecisionRationale(const OAITransferAuthorizationDecisionRationale &decision_rationale);
    bool is_decision_rationale_Set() const;
    bool is_decision_rationale_Valid() const;

    OAIRecurringTransferNullable getRecurringTransfer() const;
    void setRecurringTransfer(const OAIRecurringTransferNullable &recurring_transfer);
    bool is_recurring_transfer_Set() const;
    bool is_recurring_transfer_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITransferAuthorizationDecision m_decision;
    bool m_decision_isSet;
    bool m_decision_isValid;

    OAITransferAuthorizationDecisionRationale m_decision_rationale;
    bool m_decision_rationale_isSet;
    bool m_decision_rationale_isValid;

    OAIRecurringTransferNullable m_recurring_transfer;
    bool m_recurring_transfer_isSet;
    bool m_recurring_transfer_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransferRecurringCreateResponse)

#endif // OAITransferRecurringCreateResponse_H
