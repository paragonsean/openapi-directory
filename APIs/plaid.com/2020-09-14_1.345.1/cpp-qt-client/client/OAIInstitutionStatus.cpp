/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstitutionStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstitutionStatus::OAIInstitutionStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstitutionStatus::OAIInstitutionStatus() {
    this->initializeModel();
}

OAIInstitutionStatus::~OAIInstitutionStatus() {}

void OAIInstitutionStatus::initializeModel() {

    m_auth_isSet = false;
    m_auth_isValid = false;

    m_health_incidents_isSet = false;
    m_health_incidents_isValid = false;

    m_identity_isSet = false;
    m_identity_isValid = false;

    m_investments_isSet = false;
    m_investments_isValid = false;

    m_investments_updates_isSet = false;
    m_investments_updates_isValid = false;

    m_item_logins_isSet = false;
    m_item_logins_isValid = false;

    m_liabilities_isSet = false;
    m_liabilities_isValid = false;

    m_liabilities_updates_isSet = false;
    m_liabilities_updates_isValid = false;

    m_transactions_updates_isSet = false;
    m_transactions_updates_isValid = false;
}

void OAIInstitutionStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstitutionStatus::fromJsonObject(QJsonObject json) {

    m_auth_isValid = ::OpenAPI::fromJsonValue(m_auth, json[QString("auth")]);
    m_auth_isSet = !json[QString("auth")].isNull() && m_auth_isValid;

    m_health_incidents_isValid = ::OpenAPI::fromJsonValue(m_health_incidents, json[QString("health_incidents")]);
    m_health_incidents_isSet = !json[QString("health_incidents")].isNull() && m_health_incidents_isValid;

    m_identity_isValid = ::OpenAPI::fromJsonValue(m_identity, json[QString("identity")]);
    m_identity_isSet = !json[QString("identity")].isNull() && m_identity_isValid;

    m_investments_isValid = ::OpenAPI::fromJsonValue(m_investments, json[QString("investments")]);
    m_investments_isSet = !json[QString("investments")].isNull() && m_investments_isValid;

    m_investments_updates_isValid = ::OpenAPI::fromJsonValue(m_investments_updates, json[QString("investments_updates")]);
    m_investments_updates_isSet = !json[QString("investments_updates")].isNull() && m_investments_updates_isValid;

    m_item_logins_isValid = ::OpenAPI::fromJsonValue(m_item_logins, json[QString("item_logins")]);
    m_item_logins_isSet = !json[QString("item_logins")].isNull() && m_item_logins_isValid;

    m_liabilities_isValid = ::OpenAPI::fromJsonValue(m_liabilities, json[QString("liabilities")]);
    m_liabilities_isSet = !json[QString("liabilities")].isNull() && m_liabilities_isValid;

    m_liabilities_updates_isValid = ::OpenAPI::fromJsonValue(m_liabilities_updates, json[QString("liabilities_updates")]);
    m_liabilities_updates_isSet = !json[QString("liabilities_updates")].isNull() && m_liabilities_updates_isValid;

    m_transactions_updates_isValid = ::OpenAPI::fromJsonValue(m_transactions_updates, json[QString("transactions_updates")]);
    m_transactions_updates_isSet = !json[QString("transactions_updates")].isNull() && m_transactions_updates_isValid;
}

QString OAIInstitutionStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstitutionStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_auth.isSet()) {
        obj.insert(QString("auth"), ::OpenAPI::toJsonValue(m_auth));
    }
    if (m_health_incidents.size() > 0) {
        obj.insert(QString("health_incidents"), ::OpenAPI::toJsonValue(m_health_incidents));
    }
    if (m_identity.isSet()) {
        obj.insert(QString("identity"), ::OpenAPI::toJsonValue(m_identity));
    }
    if (m_investments.isSet()) {
        obj.insert(QString("investments"), ::OpenAPI::toJsonValue(m_investments));
    }
    if (m_investments_updates.isSet()) {
        obj.insert(QString("investments_updates"), ::OpenAPI::toJsonValue(m_investments_updates));
    }
    if (m_item_logins.isSet()) {
        obj.insert(QString("item_logins"), ::OpenAPI::toJsonValue(m_item_logins));
    }
    if (m_liabilities.isSet()) {
        obj.insert(QString("liabilities"), ::OpenAPI::toJsonValue(m_liabilities));
    }
    if (m_liabilities_updates.isSet()) {
        obj.insert(QString("liabilities_updates"), ::OpenAPI::toJsonValue(m_liabilities_updates));
    }
    if (m_transactions_updates.isSet()) {
        obj.insert(QString("transactions_updates"), ::OpenAPI::toJsonValue(m_transactions_updates));
    }
    return obj;
}

OAIProductStatus OAIInstitutionStatus::getAuth() const {
    return m_auth;
}
void OAIInstitutionStatus::setAuth(const OAIProductStatus &auth) {
    m_auth = auth;
    m_auth_isSet = true;
}

bool OAIInstitutionStatus::is_auth_Set() const{
    return m_auth_isSet;
}

bool OAIInstitutionStatus::is_auth_Valid() const{
    return m_auth_isValid;
}

QList<OAIHealthIncident> OAIInstitutionStatus::getHealthIncidents() const {
    return m_health_incidents;
}
void OAIInstitutionStatus::setHealthIncidents(const QList<OAIHealthIncident> &health_incidents) {
    m_health_incidents = health_incidents;
    m_health_incidents_isSet = true;
}

bool OAIInstitutionStatus::is_health_incidents_Set() const{
    return m_health_incidents_isSet;
}

bool OAIInstitutionStatus::is_health_incidents_Valid() const{
    return m_health_incidents_isValid;
}

OAIProductStatus OAIInstitutionStatus::getIdentity() const {
    return m_identity;
}
void OAIInstitutionStatus::setIdentity(const OAIProductStatus &identity) {
    m_identity = identity;
    m_identity_isSet = true;
}

bool OAIInstitutionStatus::is_identity_Set() const{
    return m_identity_isSet;
}

bool OAIInstitutionStatus::is_identity_Valid() const{
    return m_identity_isValid;
}

OAIProductStatus OAIInstitutionStatus::getInvestments() const {
    return m_investments;
}
void OAIInstitutionStatus::setInvestments(const OAIProductStatus &investments) {
    m_investments = investments;
    m_investments_isSet = true;
}

bool OAIInstitutionStatus::is_investments_Set() const{
    return m_investments_isSet;
}

bool OAIInstitutionStatus::is_investments_Valid() const{
    return m_investments_isValid;
}

OAIProductStatus OAIInstitutionStatus::getInvestmentsUpdates() const {
    return m_investments_updates;
}
void OAIInstitutionStatus::setInvestmentsUpdates(const OAIProductStatus &investments_updates) {
    m_investments_updates = investments_updates;
    m_investments_updates_isSet = true;
}

bool OAIInstitutionStatus::is_investments_updates_Set() const{
    return m_investments_updates_isSet;
}

bool OAIInstitutionStatus::is_investments_updates_Valid() const{
    return m_investments_updates_isValid;
}

OAIProductStatus OAIInstitutionStatus::getItemLogins() const {
    return m_item_logins;
}
void OAIInstitutionStatus::setItemLogins(const OAIProductStatus &item_logins) {
    m_item_logins = item_logins;
    m_item_logins_isSet = true;
}

bool OAIInstitutionStatus::is_item_logins_Set() const{
    return m_item_logins_isSet;
}

bool OAIInstitutionStatus::is_item_logins_Valid() const{
    return m_item_logins_isValid;
}

OAIProductStatus OAIInstitutionStatus::getLiabilities() const {
    return m_liabilities;
}
void OAIInstitutionStatus::setLiabilities(const OAIProductStatus &liabilities) {
    m_liabilities = liabilities;
    m_liabilities_isSet = true;
}

bool OAIInstitutionStatus::is_liabilities_Set() const{
    return m_liabilities_isSet;
}

bool OAIInstitutionStatus::is_liabilities_Valid() const{
    return m_liabilities_isValid;
}

OAIProductStatus OAIInstitutionStatus::getLiabilitiesUpdates() const {
    return m_liabilities_updates;
}
void OAIInstitutionStatus::setLiabilitiesUpdates(const OAIProductStatus &liabilities_updates) {
    m_liabilities_updates = liabilities_updates;
    m_liabilities_updates_isSet = true;
}

bool OAIInstitutionStatus::is_liabilities_updates_Set() const{
    return m_liabilities_updates_isSet;
}

bool OAIInstitutionStatus::is_liabilities_updates_Valid() const{
    return m_liabilities_updates_isValid;
}

OAIProductStatus OAIInstitutionStatus::getTransactionsUpdates() const {
    return m_transactions_updates;
}
void OAIInstitutionStatus::setTransactionsUpdates(const OAIProductStatus &transactions_updates) {
    m_transactions_updates = transactions_updates;
    m_transactions_updates_isSet = true;
}

bool OAIInstitutionStatus::is_transactions_updates_Set() const{
    return m_transactions_updates_isSet;
}

bool OAIInstitutionStatus::is_transactions_updates_Valid() const{
    return m_transactions_updates_isValid;
}

bool OAIInstitutionStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auth.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_incidents.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_identity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_investments.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_investments_updates.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_logins.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_liabilities.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_liabilities_updates.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transactions_updates.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstitutionStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
