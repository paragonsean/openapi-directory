/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebhookType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebhookType::OAIWebhookType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebhookType::OAIWebhookType() {
    this->initializeModel();
}

OAIWebhookType::~OAIWebhookType() {}

void OAIWebhookType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIWebhookType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIWebhookType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("AUTH", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookType::AUTH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("HOLDINGS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookType::HOLDINGS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("INVESTMENTS_TRANSACTIONS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookType::INVESTMENTS_TRANSACTIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ITEM", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookType::ITEM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LIABILITIES", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookType::LIABILITIES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TRANSACTIONS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIWebhookType::TRANSACTIONS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIWebhookType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIWebhookType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIWebhookType::AUTH:
            val = "AUTH";
            break;
        case eOAIWebhookType::HOLDINGS:
            val = "HOLDINGS";
            break;
        case eOAIWebhookType::INVESTMENTS_TRANSACTIONS:
            val = "INVESTMENTS_TRANSACTIONS";
            break;
        case eOAIWebhookType::ITEM:
            val = "ITEM";
            break;
        case eOAIWebhookType::LIABILITIES:
            val = "LIABILITIES";
            break;
        case eOAIWebhookType::TRANSACTIONS:
            val = "TRANSACTIONS";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIWebhookType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIWebhookType::eOAIWebhookType OAIWebhookType::getValue() const {
    return m_value;
}

void OAIWebhookType::setValue(const OAIWebhookType::eOAIWebhookType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIWebhookType::isSet() const {
    
    return m_value_isSet;
}

bool OAIWebhookType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
