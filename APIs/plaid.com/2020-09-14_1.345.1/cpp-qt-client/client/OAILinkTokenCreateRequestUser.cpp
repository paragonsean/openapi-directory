/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkTokenCreateRequestUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkTokenCreateRequestUser::OAILinkTokenCreateRequestUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkTokenCreateRequestUser::OAILinkTokenCreateRequestUser() {
    this->initializeModel();
}

OAILinkTokenCreateRequestUser::~OAILinkTokenCreateRequestUser() {}

void OAILinkTokenCreateRequestUser::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_client_user_id_isSet = false;
    m_client_user_id_isValid = false;

    m_date_of_birth_isSet = false;
    m_date_of_birth_isValid = false;

    m_email_address_isSet = false;
    m_email_address_isValid = false;

    m_email_address_verified_time_isSet = false;
    m_email_address_verified_time_isValid = false;

    m_id_number_isSet = false;
    m_id_number_isValid = false;

    m_legal_name_isSet = false;
    m_legal_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_phone_number_verified_time_isSet = false;
    m_phone_number_verified_time_isValid = false;

    m_ssn_isSet = false;
    m_ssn_isValid = false;
}

void OAILinkTokenCreateRequestUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkTokenCreateRequestUser::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_client_user_id_isValid = ::OpenAPI::fromJsonValue(m_client_user_id, json[QString("client_user_id")]);
    m_client_user_id_isSet = !json[QString("client_user_id")].isNull() && m_client_user_id_isValid;

    m_date_of_birth_isValid = ::OpenAPI::fromJsonValue(m_date_of_birth, json[QString("date_of_birth")]);
    m_date_of_birth_isSet = !json[QString("date_of_birth")].isNull() && m_date_of_birth_isValid;

    m_email_address_isValid = ::OpenAPI::fromJsonValue(m_email_address, json[QString("email_address")]);
    m_email_address_isSet = !json[QString("email_address")].isNull() && m_email_address_isValid;

    m_email_address_verified_time_isValid = ::OpenAPI::fromJsonValue(m_email_address_verified_time, json[QString("email_address_verified_time")]);
    m_email_address_verified_time_isSet = !json[QString("email_address_verified_time")].isNull() && m_email_address_verified_time_isValid;

    m_id_number_isValid = ::OpenAPI::fromJsonValue(m_id_number, json[QString("id_number")]);
    m_id_number_isSet = !json[QString("id_number")].isNull() && m_id_number_isValid;

    m_legal_name_isValid = ::OpenAPI::fromJsonValue(m_legal_name, json[QString("legal_name")]);
    m_legal_name_isSet = !json[QString("legal_name")].isNull() && m_legal_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phone_number")]);
    m_phone_number_isSet = !json[QString("phone_number")].isNull() && m_phone_number_isValid;

    m_phone_number_verified_time_isValid = ::OpenAPI::fromJsonValue(m_phone_number_verified_time, json[QString("phone_number_verified_time")]);
    m_phone_number_verified_time_isSet = !json[QString("phone_number_verified_time")].isNull() && m_phone_number_verified_time_isValid;

    m_ssn_isValid = ::OpenAPI::fromJsonValue(m_ssn, json[QString("ssn")]);
    m_ssn_isSet = !json[QString("ssn")].isNull() && m_ssn_isValid;
}

QString OAILinkTokenCreateRequestUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkTokenCreateRequestUser::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_client_user_id_isSet) {
        obj.insert(QString("client_user_id"), ::OpenAPI::toJsonValue(m_client_user_id));
    }
    if (m_date_of_birth_isSet) {
        obj.insert(QString("date_of_birth"), ::OpenAPI::toJsonValue(m_date_of_birth));
    }
    if (m_email_address_isSet) {
        obj.insert(QString("email_address"), ::OpenAPI::toJsonValue(m_email_address));
    }
    if (m_email_address_verified_time_isSet) {
        obj.insert(QString("email_address_verified_time"), ::OpenAPI::toJsonValue(m_email_address_verified_time));
    }
    if (m_id_number.isSet()) {
        obj.insert(QString("id_number"), ::OpenAPI::toJsonValue(m_id_number));
    }
    if (m_legal_name_isSet) {
        obj.insert(QString("legal_name"), ::OpenAPI::toJsonValue(m_legal_name));
    }
    if (m_name.isSet()) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phone_number"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_phone_number_verified_time_isSet) {
        obj.insert(QString("phone_number_verified_time"), ::OpenAPI::toJsonValue(m_phone_number_verified_time));
    }
    if (m_ssn_isSet) {
        obj.insert(QString("ssn"), ::OpenAPI::toJsonValue(m_ssn));
    }
    return obj;
}

OAIUserAddress OAILinkTokenCreateRequestUser::getAddress() const {
    return m_address;
}
void OAILinkTokenCreateRequestUser::setAddress(const OAIUserAddress &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAILinkTokenCreateRequestUser::is_address_Set() const{
    return m_address_isSet;
}

bool OAILinkTokenCreateRequestUser::is_address_Valid() const{
    return m_address_isValid;
}

QString OAILinkTokenCreateRequestUser::getClientUserId() const {
    return m_client_user_id;
}
void OAILinkTokenCreateRequestUser::setClientUserId(const QString &client_user_id) {
    m_client_user_id = client_user_id;
    m_client_user_id_isSet = true;
}

bool OAILinkTokenCreateRequestUser::is_client_user_id_Set() const{
    return m_client_user_id_isSet;
}

bool OAILinkTokenCreateRequestUser::is_client_user_id_Valid() const{
    return m_client_user_id_isValid;
}

QDate OAILinkTokenCreateRequestUser::getDateOfBirth() const {
    return m_date_of_birth;
}
void OAILinkTokenCreateRequestUser::setDateOfBirth(const QDate &date_of_birth) {
    m_date_of_birth = date_of_birth;
    m_date_of_birth_isSet = true;
}

bool OAILinkTokenCreateRequestUser::is_date_of_birth_Set() const{
    return m_date_of_birth_isSet;
}

bool OAILinkTokenCreateRequestUser::is_date_of_birth_Valid() const{
    return m_date_of_birth_isValid;
}

QString OAILinkTokenCreateRequestUser::getEmailAddress() const {
    return m_email_address;
}
void OAILinkTokenCreateRequestUser::setEmailAddress(const QString &email_address) {
    m_email_address = email_address;
    m_email_address_isSet = true;
}

bool OAILinkTokenCreateRequestUser::is_email_address_Set() const{
    return m_email_address_isSet;
}

bool OAILinkTokenCreateRequestUser::is_email_address_Valid() const{
    return m_email_address_isValid;
}

QDateTime OAILinkTokenCreateRequestUser::getEmailAddressVerifiedTime() const {
    return m_email_address_verified_time;
}
void OAILinkTokenCreateRequestUser::setEmailAddressVerifiedTime(const QDateTime &email_address_verified_time) {
    m_email_address_verified_time = email_address_verified_time;
    m_email_address_verified_time_isSet = true;
}

bool OAILinkTokenCreateRequestUser::is_email_address_verified_time_Set() const{
    return m_email_address_verified_time_isSet;
}

bool OAILinkTokenCreateRequestUser::is_email_address_verified_time_Valid() const{
    return m_email_address_verified_time_isValid;
}

OAIUserIDNumber OAILinkTokenCreateRequestUser::getIdNumber() const {
    return m_id_number;
}
void OAILinkTokenCreateRequestUser::setIdNumber(const OAIUserIDNumber &id_number) {
    m_id_number = id_number;
    m_id_number_isSet = true;
}

bool OAILinkTokenCreateRequestUser::is_id_number_Set() const{
    return m_id_number_isSet;
}

bool OAILinkTokenCreateRequestUser::is_id_number_Valid() const{
    return m_id_number_isValid;
}

QString OAILinkTokenCreateRequestUser::getLegalName() const {
    return m_legal_name;
}
void OAILinkTokenCreateRequestUser::setLegalName(const QString &legal_name) {
    m_legal_name = legal_name;
    m_legal_name_isSet = true;
}

bool OAILinkTokenCreateRequestUser::is_legal_name_Set() const{
    return m_legal_name_isSet;
}

bool OAILinkTokenCreateRequestUser::is_legal_name_Valid() const{
    return m_legal_name_isValid;
}

OAILinkTokenCreateRequestUser_name OAILinkTokenCreateRequestUser::getName() const {
    return m_name;
}
void OAILinkTokenCreateRequestUser::setName(const OAILinkTokenCreateRequestUser_name &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILinkTokenCreateRequestUser::is_name_Set() const{
    return m_name_isSet;
}

bool OAILinkTokenCreateRequestUser::is_name_Valid() const{
    return m_name_isValid;
}

QString OAILinkTokenCreateRequestUser::getPhoneNumber() const {
    return m_phone_number;
}
void OAILinkTokenCreateRequestUser::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAILinkTokenCreateRequestUser::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAILinkTokenCreateRequestUser::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QDateTime OAILinkTokenCreateRequestUser::getPhoneNumberVerifiedTime() const {
    return m_phone_number_verified_time;
}
void OAILinkTokenCreateRequestUser::setPhoneNumberVerifiedTime(const QDateTime &phone_number_verified_time) {
    m_phone_number_verified_time = phone_number_verified_time;
    m_phone_number_verified_time_isSet = true;
}

bool OAILinkTokenCreateRequestUser::is_phone_number_verified_time_Set() const{
    return m_phone_number_verified_time_isSet;
}

bool OAILinkTokenCreateRequestUser::is_phone_number_verified_time_Valid() const{
    return m_phone_number_verified_time_isValid;
}

QString OAILinkTokenCreateRequestUser::getSsn() const {
    return m_ssn;
}
void OAILinkTokenCreateRequestUser::setSsn(const QString &ssn) {
    m_ssn = ssn;
    m_ssn_isSet = true;
}

bool OAILinkTokenCreateRequestUser::is_ssn_Set() const{
    return m_ssn_isSet;
}

bool OAILinkTokenCreateRequestUser::is_ssn_Valid() const{
    return m_ssn_isValid;
}

bool OAILinkTokenCreateRequestUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_address_verified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_legal_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_verified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkTokenCreateRequestUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_client_user_id_isValid && true;
}

} // namespace OpenAPI
