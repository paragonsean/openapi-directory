/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWatchlistScreeningIndividualReviewCreateResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWatchlistScreeningIndividualReviewCreateResponse::OAIWatchlistScreeningIndividualReviewCreateResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWatchlistScreeningIndividualReviewCreateResponse::OAIWatchlistScreeningIndividualReviewCreateResponse() {
    this->initializeModel();
}

OAIWatchlistScreeningIndividualReviewCreateResponse::~OAIWatchlistScreeningIndividualReviewCreateResponse() {}

void OAIWatchlistScreeningIndividualReviewCreateResponse::initializeModel() {

    m_audit_trail_isSet = false;
    m_audit_trail_isValid = false;

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_confirmed_hits_isSet = false;
    m_confirmed_hits_isValid = false;

    m_dismissed_hits_isSet = false;
    m_dismissed_hits_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAIWatchlistScreeningIndividualReviewCreateResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWatchlistScreeningIndividualReviewCreateResponse::fromJsonObject(QJsonObject json) {

    m_audit_trail_isValid = ::OpenAPI::fromJsonValue(m_audit_trail, json[QString("audit_trail")]);
    m_audit_trail_isSet = !json[QString("audit_trail")].isNull() && m_audit_trail_isValid;

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_confirmed_hits_isValid = ::OpenAPI::fromJsonValue(m_confirmed_hits, json[QString("confirmed_hits")]);
    m_confirmed_hits_isSet = !json[QString("confirmed_hits")].isNull() && m_confirmed_hits_isValid;

    m_dismissed_hits_isValid = ::OpenAPI::fromJsonValue(m_dismissed_hits, json[QString("dismissed_hits")]);
    m_dismissed_hits_isSet = !json[QString("dismissed_hits")].isNull() && m_dismissed_hits_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("request_id")]);
    m_request_id_isSet = !json[QString("request_id")].isNull() && m_request_id_isValid;
}

QString OAIWatchlistScreeningIndividualReviewCreateResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWatchlistScreeningIndividualReviewCreateResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_audit_trail.isSet()) {
        obj.insert(QString("audit_trail"), ::OpenAPI::toJsonValue(m_audit_trail));
    }
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_confirmed_hits.size() > 0) {
        obj.insert(QString("confirmed_hits"), ::OpenAPI::toJsonValue(m_confirmed_hits));
    }
    if (m_dismissed_hits.size() > 0) {
        obj.insert(QString("dismissed_hits"), ::OpenAPI::toJsonValue(m_dismissed_hits));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("request_id"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

OAIWatchlistScreeningAuditTrail OAIWatchlistScreeningIndividualReviewCreateResponse::getAuditTrail() const {
    return m_audit_trail;
}
void OAIWatchlistScreeningIndividualReviewCreateResponse::setAuditTrail(const OAIWatchlistScreeningAuditTrail &audit_trail) {
    m_audit_trail = audit_trail;
    m_audit_trail_isSet = true;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::is_audit_trail_Set() const{
    return m_audit_trail_isSet;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::is_audit_trail_Valid() const{
    return m_audit_trail_isValid;
}

QString OAIWatchlistScreeningIndividualReviewCreateResponse::getComment() const {
    return m_comment;
}
void OAIWatchlistScreeningIndividualReviewCreateResponse::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::is_comment_Valid() const{
    return m_comment_isValid;
}

QList<QString> OAIWatchlistScreeningIndividualReviewCreateResponse::getConfirmedHits() const {
    return m_confirmed_hits;
}
void OAIWatchlistScreeningIndividualReviewCreateResponse::setConfirmedHits(const QList<QString> &confirmed_hits) {
    m_confirmed_hits = confirmed_hits;
    m_confirmed_hits_isSet = true;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::is_confirmed_hits_Set() const{
    return m_confirmed_hits_isSet;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::is_confirmed_hits_Valid() const{
    return m_confirmed_hits_isValid;
}

QList<QString> OAIWatchlistScreeningIndividualReviewCreateResponse::getDismissedHits() const {
    return m_dismissed_hits;
}
void OAIWatchlistScreeningIndividualReviewCreateResponse::setDismissedHits(const QList<QString> &dismissed_hits) {
    m_dismissed_hits = dismissed_hits;
    m_dismissed_hits_isSet = true;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::is_dismissed_hits_Set() const{
    return m_dismissed_hits_isSet;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::is_dismissed_hits_Valid() const{
    return m_dismissed_hits_isValid;
}

QString OAIWatchlistScreeningIndividualReviewCreateResponse::getId() const {
    return m_id;
}
void OAIWatchlistScreeningIndividualReviewCreateResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIWatchlistScreeningIndividualReviewCreateResponse::getRequestId() const {
    return m_request_id;
}
void OAIWatchlistScreeningIndividualReviewCreateResponse::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audit_trail.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confirmed_hits.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_dismissed_hits.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWatchlistScreeningIndividualReviewCreateResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_audit_trail_isValid && m_comment_isValid && m_confirmed_hits_isValid && m_dismissed_hits_isValid && m_id_isValid && m_request_id_isValid && true;
}

} // namespace OpenAPI
