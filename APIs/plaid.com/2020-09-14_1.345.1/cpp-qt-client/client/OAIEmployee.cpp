/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmployee.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmployee::OAIEmployee(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmployee::OAIEmployee() {
    this->initializeModel();
}

OAIEmployee::~OAIEmployee() {}

void OAIEmployee::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_marital_status_isSet = false;
    m_marital_status_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_taxpayer_id_isSet = false;
    m_taxpayer_id_isValid = false;
}

void OAIEmployee::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmployee::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_marital_status_isValid = ::OpenAPI::fromJsonValue(m_marital_status, json[QString("marital_status")]);
    m_marital_status_isSet = !json[QString("marital_status")].isNull() && m_marital_status_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_taxpayer_id_isValid = ::OpenAPI::fromJsonValue(m_taxpayer_id, json[QString("taxpayer_id")]);
    m_taxpayer_id_isSet = !json[QString("taxpayer_id")].isNull() && m_taxpayer_id_isValid;
}

QString OAIEmployee::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmployee::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_marital_status_isSet) {
        obj.insert(QString("marital_status"), ::OpenAPI::toJsonValue(m_marital_status));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_taxpayer_id.isSet()) {
        obj.insert(QString("taxpayer_id"), ::OpenAPI::toJsonValue(m_taxpayer_id));
    }
    return obj;
}

OAIPaystubAddress OAIEmployee::getAddress() const {
    return m_address;
}
void OAIEmployee::setAddress(const OAIPaystubAddress &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIEmployee::is_address_Set() const{
    return m_address_isSet;
}

bool OAIEmployee::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIEmployee::getMaritalStatus() const {
    return m_marital_status;
}
void OAIEmployee::setMaritalStatus(const QString &marital_status) {
    m_marital_status = marital_status;
    m_marital_status_isSet = true;
}

bool OAIEmployee::is_marital_status_Set() const{
    return m_marital_status_isSet;
}

bool OAIEmployee::is_marital_status_Valid() const{
    return m_marital_status_isValid;
}

QString OAIEmployee::getName() const {
    return m_name;
}
void OAIEmployee::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIEmployee::is_name_Set() const{
    return m_name_isSet;
}

bool OAIEmployee::is_name_Valid() const{
    return m_name_isValid;
}

OAITaxpayerID OAIEmployee::getTaxpayerId() const {
    return m_taxpayer_id;
}
void OAIEmployee::setTaxpayerId(const OAITaxpayerID &taxpayer_id) {
    m_taxpayer_id = taxpayer_id;
    m_taxpayer_id_isSet = true;
}

bool OAIEmployee::is_taxpayer_id_Set() const{
    return m_taxpayer_id_isSet;
}

bool OAIEmployee::is_taxpayer_id_Valid() const{
    return m_taxpayer_id_isValid;
}

bool OAIEmployee::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_marital_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_taxpayer_id.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmployee::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
