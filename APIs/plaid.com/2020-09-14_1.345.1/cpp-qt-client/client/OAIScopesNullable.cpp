/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScopesNullable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScopesNullable::OAIScopesNullable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScopesNullable::OAIScopesNullable() {
    this->initializeModel();
}

OAIScopesNullable::~OAIScopesNullable() {}

void OAIScopesNullable::initializeModel() {

    m_accounts_isSet = false;
    m_accounts_isValid = false;

    m_new_accounts_isSet = false;
    m_new_accounts_isValid = false;

    m_product_access_isSet = false;
    m_product_access_isValid = false;
}

void OAIScopesNullable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScopesNullable::fromJsonObject(QJsonObject json) {

    m_accounts_isValid = ::OpenAPI::fromJsonValue(m_accounts, json[QString("accounts")]);
    m_accounts_isSet = !json[QString("accounts")].isNull() && m_accounts_isValid;

    m_new_accounts_isValid = ::OpenAPI::fromJsonValue(m_new_accounts, json[QString("new_accounts")]);
    m_new_accounts_isSet = !json[QString("new_accounts")].isNull() && m_new_accounts_isValid;

    m_product_access_isValid = ::OpenAPI::fromJsonValue(m_product_access, json[QString("product_access")]);
    m_product_access_isSet = !json[QString("product_access")].isNull() && m_product_access_isValid;
}

QString OAIScopesNullable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScopesNullable::asJsonObject() const {
    QJsonObject obj;
    if (m_accounts.size() > 0) {
        obj.insert(QString("accounts"), ::OpenAPI::toJsonValue(m_accounts));
    }
    if (m_new_accounts_isSet) {
        obj.insert(QString("new_accounts"), ::OpenAPI::toJsonValue(m_new_accounts));
    }
    if (m_product_access.isSet()) {
        obj.insert(QString("product_access"), ::OpenAPI::toJsonValue(m_product_access));
    }
    return obj;
}

QList<OAIAccountAccess> OAIScopesNullable::getAccounts() const {
    return m_accounts;
}
void OAIScopesNullable::setAccounts(const QList<OAIAccountAccess> &accounts) {
    m_accounts = accounts;
    m_accounts_isSet = true;
}

bool OAIScopesNullable::is_accounts_Set() const{
    return m_accounts_isSet;
}

bool OAIScopesNullable::is_accounts_Valid() const{
    return m_accounts_isValid;
}

bool OAIScopesNullable::isNewAccounts() const {
    return m_new_accounts;
}
void OAIScopesNullable::setNewAccounts(const bool &new_accounts) {
    m_new_accounts = new_accounts;
    m_new_accounts_isSet = true;
}

bool OAIScopesNullable::is_new_accounts_Set() const{
    return m_new_accounts_isSet;
}

bool OAIScopesNullable::is_new_accounts_Valid() const{
    return m_new_accounts_isValid;
}

OAIProductAccess OAIScopesNullable::getProductAccess() const {
    return m_product_access;
}
void OAIScopesNullable::setProductAccess(const OAIProductAccess &product_access) {
    m_product_access = product_access;
    m_product_access_isSet = true;
}

bool OAIScopesNullable::is_product_access_Set() const{
    return m_product_access_isSet;
}

bool OAIScopesNullable::is_product_access_Valid() const{
    return m_product_access_isValid;
}

bool OAIScopesNullable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_accounts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_access.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScopesNullable::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
