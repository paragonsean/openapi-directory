/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransactionsGetRequestOptions.h
 *
 * An optional object to be used with the request. If specified, &#x60;options&#x60; must not be &#x60;null&#x60;.
 */

#ifndef OAITransactionsGetRequestOptions_H
#define OAITransactionsGetRequestOptions_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransactionsGetRequestOptions : public OAIObject {
public:
    OAITransactionsGetRequestOptions();
    OAITransactionsGetRequestOptions(QString json);
    ~OAITransactionsGetRequestOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAccountIds() const;
    void setAccountIds(const QList<QString> &account_ids);
    bool is_account_ids_Set() const;
    bool is_account_ids_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    bool isIncludeLogoAndCounterpartyBeta() const;
    void setIncludeLogoAndCounterpartyBeta(const bool &include_logo_and_counterparty_beta);
    bool is_include_logo_and_counterparty_beta_Set() const;
    bool is_include_logo_and_counterparty_beta_Valid() const;

    bool isIncludeOriginalDescription() const;
    void setIncludeOriginalDescription(const bool &include_original_description);
    bool is_include_original_description_Set() const;
    bool is_include_original_description_Valid() const;

    bool isIncludePersonalFinanceCategory() const;
    void setIncludePersonalFinanceCategory(const bool &include_personal_finance_category);
    bool is_include_personal_finance_category_Set() const;
    bool is_include_personal_finance_category_Valid() const;

    Q_DECL_DEPRECATED bool isIncludePersonalFinanceCategoryBeta() const;
    Q_DECL_DEPRECATED void setIncludePersonalFinanceCategoryBeta(const bool &include_personal_finance_category_beta);
    Q_DECL_DEPRECATED bool is_include_personal_finance_category_beta_Set() const;
    Q_DECL_DEPRECATED bool is_include_personal_finance_category_beta_Valid() const;

    qint32 getOffset() const;
    void setOffset(const qint32 &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_account_ids;
    bool m_account_ids_isSet;
    bool m_account_ids_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    bool m_include_logo_and_counterparty_beta;
    bool m_include_logo_and_counterparty_beta_isSet;
    bool m_include_logo_and_counterparty_beta_isValid;

    bool m_include_original_description;
    bool m_include_original_description_isSet;
    bool m_include_original_description_isValid;

    bool m_include_personal_finance_category;
    bool m_include_personal_finance_category_isSet;
    bool m_include_personal_finance_category_isValid;

    bool m_include_personal_finance_category_beta;
    bool m_include_personal_finance_category_beta_isSet;
    bool m_include_personal_finance_category_beta_isValid;

    qint32 m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransactionsGetRequestOptions)

#endif // OAITransactionsGetRequestOptions_H
