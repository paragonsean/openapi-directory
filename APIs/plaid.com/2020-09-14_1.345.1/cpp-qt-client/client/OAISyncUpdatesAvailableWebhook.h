/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISyncUpdatesAvailableWebhook.h
 *
 * Fired when an Item&#39;s transactions change. This can be due to any event resulting in new changes, such as an initial 30-day transactions fetch upon the initialization of an Item with transactions, the backfill of historical transactions that occurs shortly after, or when changes are populated from a regularly-scheduled transactions update job. It is recommended to listen for the &#x60;SYNC_UPDATES_AVAILABLE&#x60; webhook when using the &#x60;/transactions/sync&#x60; endpoint. Note that when using &#x60;/transactions/sync&#x60; the older webhooks &#x60;INITIAL_UPDATE&#x60;, &#x60;HISTORICAL_UPDATE&#x60;, &#x60;DEFAULT_UPDATE&#x60;, and &#x60;TRANSACTIONS_REMOVED&#x60;, which are intended for use with &#x60;/transactions/get&#x60;, will also continue to be sent in order to maintain backwards compatibility. It is not necessary to listen for and respond to those webhooks when using &#x60;/transactions/sync&#x60;.  After receipt of this webhook, the new changes can be fetched for the Item from &#x60;/transactions/sync&#x60;.  Note that to receive this webhook for an Item, &#x60;/transactions/sync&#x60; must have been called at least once on that Item. This means that, unlike the &#x60;INITIAL_UPDATE&#x60; and &#x60;HISTORICAL_UPDATE&#x60; webhooks, it will not fire immediately upon Item creation. If &#x60;/transactions/sync&#x60; is called on an Item that was *not* initialized with Transactions, the webhook will fire twice: once the first 30 days of transactions data has been fetched, and a second time when all available historical transactions data has been fetched.  This webhook will typically not fire in the Sandbox environment, due to the lack of dynamic transactions data. To test this webhook in Sandbox, call &#x60;/sandbox/item/fire_webhook&#x60;.
 */

#ifndef OAISyncUpdatesAvailableWebhook_H
#define OAISyncUpdatesAvailableWebhook_H

#include <QJsonObject>

#include "OAIWebhookEnvironmentValues.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISyncUpdatesAvailableWebhook : public OAIObject {
public:
    OAISyncUpdatesAvailableWebhook();
    OAISyncUpdatesAvailableWebhook(QString json);
    ~OAISyncUpdatesAvailableWebhook() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIWebhookEnvironmentValues getEnvironment() const;
    void setEnvironment(const OAIWebhookEnvironmentValues &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    bool isHistoricalUpdateComplete() const;
    void setHistoricalUpdateComplete(const bool &historical_update_complete);
    bool is_historical_update_complete_Set() const;
    bool is_historical_update_complete_Valid() const;

    bool isInitialUpdateComplete() const;
    void setInitialUpdateComplete(const bool &initial_update_complete);
    bool is_initial_update_complete_Set() const;
    bool is_initial_update_complete_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QString getWebhookCode() const;
    void setWebhookCode(const QString &webhook_code);
    bool is_webhook_code_Set() const;
    bool is_webhook_code_Valid() const;

    QString getWebhookType() const;
    void setWebhookType(const QString &webhook_type);
    bool is_webhook_type_Set() const;
    bool is_webhook_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIWebhookEnvironmentValues m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    bool m_historical_update_complete;
    bool m_historical_update_complete_isSet;
    bool m_historical_update_complete_isValid;

    bool m_initial_update_complete;
    bool m_initial_update_complete_isSet;
    bool m_initial_update_complete_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QString m_webhook_code;
    bool m_webhook_code_isSet;
    bool m_webhook_code_isValid;

    QString m_webhook_type;
    bool m_webhook_type_isSet;
    bool m_webhook_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISyncUpdatesAvailableWebhook)

#endif // OAISyncUpdatesAvailableWebhook_H
