/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvestmentTransaction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvestmentTransaction::OAIInvestmentTransaction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvestmentTransaction::OAIInvestmentTransaction() {
    this->initializeModel();
}

OAIInvestmentTransaction::~OAIInvestmentTransaction() {}

void OAIInvestmentTransaction::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_cancel_transaction_id_isSet = false;
    m_cancel_transaction_id_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_fees_isSet = false;
    m_fees_isValid = false;

    m_investment_transaction_id_isSet = false;
    m_investment_transaction_id_isValid = false;

    m_iso_currency_code_isSet = false;
    m_iso_currency_code_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_security_id_isSet = false;
    m_security_id_isValid = false;

    m_subtype_isSet = false;
    m_subtype_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_unofficial_currency_code_isSet = false;
    m_unofficial_currency_code_isValid = false;
}

void OAIInvestmentTransaction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvestmentTransaction::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_cancel_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_cancel_transaction_id, json[QString("cancel_transaction_id")]);
    m_cancel_transaction_id_isSet = !json[QString("cancel_transaction_id")].isNull() && m_cancel_transaction_id_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_fees_isValid = ::OpenAPI::fromJsonValue(m_fees, json[QString("fees")]);
    m_fees_isSet = !json[QString("fees")].isNull() && m_fees_isValid;

    m_investment_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_investment_transaction_id, json[QString("investment_transaction_id")]);
    m_investment_transaction_id_isSet = !json[QString("investment_transaction_id")].isNull() && m_investment_transaction_id_isValid;

    m_iso_currency_code_isValid = ::OpenAPI::fromJsonValue(m_iso_currency_code, json[QString("iso_currency_code")]);
    m_iso_currency_code_isSet = !json[QString("iso_currency_code")].isNull() && m_iso_currency_code_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_security_id_isValid = ::OpenAPI::fromJsonValue(m_security_id, json[QString("security_id")]);
    m_security_id_isSet = !json[QString("security_id")].isNull() && m_security_id_isValid;

    m_subtype_isValid = ::OpenAPI::fromJsonValue(m_subtype, json[QString("subtype")]);
    m_subtype_isSet = !json[QString("subtype")].isNull() && m_subtype_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_unofficial_currency_code_isValid = ::OpenAPI::fromJsonValue(m_unofficial_currency_code, json[QString("unofficial_currency_code")]);
    m_unofficial_currency_code_isSet = !json[QString("unofficial_currency_code")].isNull() && m_unofficial_currency_code_isValid;
}

QString OAIInvestmentTransaction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvestmentTransaction::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_cancel_transaction_id_isSet) {
        obj.insert(QString("cancel_transaction_id"), ::OpenAPI::toJsonValue(m_cancel_transaction_id));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_fees_isSet) {
        obj.insert(QString("fees"), ::OpenAPI::toJsonValue(m_fees));
    }
    if (m_investment_transaction_id_isSet) {
        obj.insert(QString("investment_transaction_id"), ::OpenAPI::toJsonValue(m_investment_transaction_id));
    }
    if (m_iso_currency_code_isSet) {
        obj.insert(QString("iso_currency_code"), ::OpenAPI::toJsonValue(m_iso_currency_code));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_security_id_isSet) {
        obj.insert(QString("security_id"), ::OpenAPI::toJsonValue(m_security_id));
    }
    if (m_subtype.isSet()) {
        obj.insert(QString("subtype"), ::OpenAPI::toJsonValue(m_subtype));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_unofficial_currency_code_isSet) {
        obj.insert(QString("unofficial_currency_code"), ::OpenAPI::toJsonValue(m_unofficial_currency_code));
    }
    return obj;
}

QString OAIInvestmentTransaction::getAccountId() const {
    return m_account_id;
}
void OAIInvestmentTransaction::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIInvestmentTransaction::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIInvestmentTransaction::is_account_id_Valid() const{
    return m_account_id_isValid;
}

double OAIInvestmentTransaction::getAmount() const {
    return m_amount;
}
void OAIInvestmentTransaction::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIInvestmentTransaction::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIInvestmentTransaction::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIInvestmentTransaction::getCancelTransactionId() const {
    return m_cancel_transaction_id;
}
void OAIInvestmentTransaction::setCancelTransactionId(const QString &cancel_transaction_id) {
    m_cancel_transaction_id = cancel_transaction_id;
    m_cancel_transaction_id_isSet = true;
}

bool OAIInvestmentTransaction::is_cancel_transaction_id_Set() const{
    return m_cancel_transaction_id_isSet;
}

bool OAIInvestmentTransaction::is_cancel_transaction_id_Valid() const{
    return m_cancel_transaction_id_isValid;
}

QDate OAIInvestmentTransaction::getDate() const {
    return m_date;
}
void OAIInvestmentTransaction::setDate(const QDate &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIInvestmentTransaction::is_date_Set() const{
    return m_date_isSet;
}

bool OAIInvestmentTransaction::is_date_Valid() const{
    return m_date_isValid;
}

double OAIInvestmentTransaction::getFees() const {
    return m_fees;
}
void OAIInvestmentTransaction::setFees(const double &fees) {
    m_fees = fees;
    m_fees_isSet = true;
}

bool OAIInvestmentTransaction::is_fees_Set() const{
    return m_fees_isSet;
}

bool OAIInvestmentTransaction::is_fees_Valid() const{
    return m_fees_isValid;
}

QString OAIInvestmentTransaction::getInvestmentTransactionId() const {
    return m_investment_transaction_id;
}
void OAIInvestmentTransaction::setInvestmentTransactionId(const QString &investment_transaction_id) {
    m_investment_transaction_id = investment_transaction_id;
    m_investment_transaction_id_isSet = true;
}

bool OAIInvestmentTransaction::is_investment_transaction_id_Set() const{
    return m_investment_transaction_id_isSet;
}

bool OAIInvestmentTransaction::is_investment_transaction_id_Valid() const{
    return m_investment_transaction_id_isValid;
}

QString OAIInvestmentTransaction::getIsoCurrencyCode() const {
    return m_iso_currency_code;
}
void OAIInvestmentTransaction::setIsoCurrencyCode(const QString &iso_currency_code) {
    m_iso_currency_code = iso_currency_code;
    m_iso_currency_code_isSet = true;
}

bool OAIInvestmentTransaction::is_iso_currency_code_Set() const{
    return m_iso_currency_code_isSet;
}

bool OAIInvestmentTransaction::is_iso_currency_code_Valid() const{
    return m_iso_currency_code_isValid;
}

QString OAIInvestmentTransaction::getName() const {
    return m_name;
}
void OAIInvestmentTransaction::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIInvestmentTransaction::is_name_Set() const{
    return m_name_isSet;
}

bool OAIInvestmentTransaction::is_name_Valid() const{
    return m_name_isValid;
}

double OAIInvestmentTransaction::getPrice() const {
    return m_price;
}
void OAIInvestmentTransaction::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIInvestmentTransaction::is_price_Set() const{
    return m_price_isSet;
}

bool OAIInvestmentTransaction::is_price_Valid() const{
    return m_price_isValid;
}

double OAIInvestmentTransaction::getQuantity() const {
    return m_quantity;
}
void OAIInvestmentTransaction::setQuantity(const double &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIInvestmentTransaction::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIInvestmentTransaction::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QString OAIInvestmentTransaction::getSecurityId() const {
    return m_security_id;
}
void OAIInvestmentTransaction::setSecurityId(const QString &security_id) {
    m_security_id = security_id;
    m_security_id_isSet = true;
}

bool OAIInvestmentTransaction::is_security_id_Set() const{
    return m_security_id_isSet;
}

bool OAIInvestmentTransaction::is_security_id_Valid() const{
    return m_security_id_isValid;
}

OAIInvestmentTransactionSubtype OAIInvestmentTransaction::getSubtype() const {
    return m_subtype;
}
void OAIInvestmentTransaction::setSubtype(const OAIInvestmentTransactionSubtype &subtype) {
    m_subtype = subtype;
    m_subtype_isSet = true;
}

bool OAIInvestmentTransaction::is_subtype_Set() const{
    return m_subtype_isSet;
}

bool OAIInvestmentTransaction::is_subtype_Valid() const{
    return m_subtype_isValid;
}

OAIInvestmentTransactionType OAIInvestmentTransaction::getType() const {
    return m_type;
}
void OAIInvestmentTransaction::setType(const OAIInvestmentTransactionType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIInvestmentTransaction::is_type_Set() const{
    return m_type_isSet;
}

bool OAIInvestmentTransaction::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIInvestmentTransaction::getUnofficialCurrencyCode() const {
    return m_unofficial_currency_code;
}
void OAIInvestmentTransaction::setUnofficialCurrencyCode(const QString &unofficial_currency_code) {
    m_unofficial_currency_code = unofficial_currency_code;
    m_unofficial_currency_code_isSet = true;
}

bool OAIInvestmentTransaction::is_unofficial_currency_code_Set() const{
    return m_unofficial_currency_code_isSet;
}

bool OAIInvestmentTransaction::is_unofficial_currency_code_Valid() const{
    return m_unofficial_currency_code_isValid;
}

bool OAIInvestmentTransaction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancel_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fees_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_investment_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iso_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtype.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_unofficial_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvestmentTransaction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_amount_isValid && m_date_isValid && m_fees_isValid && m_investment_transaction_id_isValid && m_iso_currency_code_isValid && m_name_isValid && m_price_isValid && m_quantity_isValid && m_security_id_isValid && m_subtype_isValid && m_type_isValid && m_unofficial_currency_code_isValid && true;
}

} // namespace OpenAPI
