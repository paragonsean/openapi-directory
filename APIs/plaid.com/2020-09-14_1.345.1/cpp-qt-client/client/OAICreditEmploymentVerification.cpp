/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditEmploymentVerification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditEmploymentVerification::OAICreditEmploymentVerification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditEmploymentVerification::OAICreditEmploymentVerification() {
    this->initializeModel();
}

OAICreditEmploymentVerification::~OAICreditEmploymentVerification() {}

void OAICreditEmploymentVerification::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_employee_type_isSet = false;
    m_employee_type_isValid = false;

    m_employer_isSet = false;
    m_employer_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_last_paystub_date_isSet = false;
    m_last_paystub_date_isValid = false;

    m_platform_ids_isSet = false;
    m_platform_ids_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAICreditEmploymentVerification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditEmploymentVerification::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_employee_type_isValid = ::OpenAPI::fromJsonValue(m_employee_type, json[QString("employee_type")]);
    m_employee_type_isSet = !json[QString("employee_type")].isNull() && m_employee_type_isValid;

    m_employer_isValid = ::OpenAPI::fromJsonValue(m_employer, json[QString("employer")]);
    m_employer_isSet = !json[QString("employer")].isNull() && m_employer_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("end_date")]);
    m_end_date_isSet = !json[QString("end_date")].isNull() && m_end_date_isValid;

    m_last_paystub_date_isValid = ::OpenAPI::fromJsonValue(m_last_paystub_date, json[QString("last_paystub_date")]);
    m_last_paystub_date_isSet = !json[QString("last_paystub_date")].isNull() && m_last_paystub_date_isValid;

    m_platform_ids_isValid = ::OpenAPI::fromJsonValue(m_platform_ids, json[QString("platform_ids")]);
    m_platform_ids_isSet = !json[QString("platform_ids")].isNull() && m_platform_ids_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("start_date")]);
    m_start_date_isSet = !json[QString("start_date")].isNull() && m_start_date_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAICreditEmploymentVerification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditEmploymentVerification::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_employee_type_isSet) {
        obj.insert(QString("employee_type"), ::OpenAPI::toJsonValue(m_employee_type));
    }
    if (m_employer.isSet()) {
        obj.insert(QString("employer"), ::OpenAPI::toJsonValue(m_employer));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("end_date"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_last_paystub_date_isSet) {
        obj.insert(QString("last_paystub_date"), ::OpenAPI::toJsonValue(m_last_paystub_date));
    }
    if (m_platform_ids.isSet()) {
        obj.insert(QString("platform_ids"), ::OpenAPI::toJsonValue(m_platform_ids));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("start_date"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAICreditEmploymentVerification::getAccountId() const {
    return m_account_id;
}
void OAICreditEmploymentVerification::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAICreditEmploymentVerification::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAICreditEmploymentVerification::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAICreditEmploymentVerification::getEmployeeType() const {
    return m_employee_type;
}
void OAICreditEmploymentVerification::setEmployeeType(const QString &employee_type) {
    m_employee_type = employee_type;
    m_employee_type_isSet = true;
}

bool OAICreditEmploymentVerification::is_employee_type_Set() const{
    return m_employee_type_isSet;
}

bool OAICreditEmploymentVerification::is_employee_type_Valid() const{
    return m_employee_type_isValid;
}

OAICreditEmployerVerification OAICreditEmploymentVerification::getEmployer() const {
    return m_employer;
}
void OAICreditEmploymentVerification::setEmployer(const OAICreditEmployerVerification &employer) {
    m_employer = employer;
    m_employer_isSet = true;
}

bool OAICreditEmploymentVerification::is_employer_Set() const{
    return m_employer_isSet;
}

bool OAICreditEmploymentVerification::is_employer_Valid() const{
    return m_employer_isValid;
}

QDate OAICreditEmploymentVerification::getEndDate() const {
    return m_end_date;
}
void OAICreditEmploymentVerification::setEndDate(const QDate &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAICreditEmploymentVerification::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAICreditEmploymentVerification::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QDate OAICreditEmploymentVerification::getLastPaystubDate() const {
    return m_last_paystub_date;
}
void OAICreditEmploymentVerification::setLastPaystubDate(const QDate &last_paystub_date) {
    m_last_paystub_date = last_paystub_date;
    m_last_paystub_date_isSet = true;
}

bool OAICreditEmploymentVerification::is_last_paystub_date_Set() const{
    return m_last_paystub_date_isSet;
}

bool OAICreditEmploymentVerification::is_last_paystub_date_Valid() const{
    return m_last_paystub_date_isValid;
}

OAICreditPlatformIds OAICreditEmploymentVerification::getPlatformIds() const {
    return m_platform_ids;
}
void OAICreditEmploymentVerification::setPlatformIds(const OAICreditPlatformIds &platform_ids) {
    m_platform_ids = platform_ids;
    m_platform_ids_isSet = true;
}

bool OAICreditEmploymentVerification::is_platform_ids_Set() const{
    return m_platform_ids_isSet;
}

bool OAICreditEmploymentVerification::is_platform_ids_Valid() const{
    return m_platform_ids_isValid;
}

QDate OAICreditEmploymentVerification::getStartDate() const {
    return m_start_date;
}
void OAICreditEmploymentVerification::setStartDate(const QDate &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAICreditEmploymentVerification::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAICreditEmploymentVerification::is_start_date_Valid() const{
    return m_start_date_isValid;
}

QString OAICreditEmploymentVerification::getStatus() const {
    return m_status;
}
void OAICreditEmploymentVerification::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICreditEmploymentVerification::is_status_Set() const{
    return m_status_isSet;
}

bool OAICreditEmploymentVerification::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICreditEmploymentVerification::getTitle() const {
    return m_title;
}
void OAICreditEmploymentVerification::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAICreditEmploymentVerification::is_title_Set() const{
    return m_title_isSet;
}

bool OAICreditEmploymentVerification::is_title_Valid() const{
    return m_title_isValid;
}

bool OAICreditEmploymentVerification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_employee_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_employer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_paystub_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_platform_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditEmploymentVerification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_employee_type_isValid && m_employer_isValid && m_end_date_isValid && m_last_paystub_date_isValid && m_platform_ids_isValid && m_start_date_isValid && m_status_isValid && m_title_isValid && true;
}

} // namespace OpenAPI
