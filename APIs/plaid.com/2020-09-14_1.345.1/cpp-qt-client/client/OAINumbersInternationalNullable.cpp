/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINumbersInternationalNullable.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINumbersInternationalNullable::OAINumbersInternationalNullable(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINumbersInternationalNullable::OAINumbersInternationalNullable() {
    this->initializeModel();
}

OAINumbersInternationalNullable::~OAINumbersInternationalNullable() {}

void OAINumbersInternationalNullable::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_bic_isSet = false;
    m_bic_isValid = false;

    m_iban_isSet = false;
    m_iban_isValid = false;
}

void OAINumbersInternationalNullable::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINumbersInternationalNullable::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_bic_isValid = ::OpenAPI::fromJsonValue(m_bic, json[QString("bic")]);
    m_bic_isSet = !json[QString("bic")].isNull() && m_bic_isValid;

    m_iban_isValid = ::OpenAPI::fromJsonValue(m_iban, json[QString("iban")]);
    m_iban_isSet = !json[QString("iban")].isNull() && m_iban_isValid;
}

QString OAINumbersInternationalNullable::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINumbersInternationalNullable::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_bic_isSet) {
        obj.insert(QString("bic"), ::OpenAPI::toJsonValue(m_bic));
    }
    if (m_iban_isSet) {
        obj.insert(QString("iban"), ::OpenAPI::toJsonValue(m_iban));
    }
    return obj;
}

QString OAINumbersInternationalNullable::getAccountId() const {
    return m_account_id;
}
void OAINumbersInternationalNullable::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAINumbersInternationalNullable::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAINumbersInternationalNullable::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAINumbersInternationalNullable::getBic() const {
    return m_bic;
}
void OAINumbersInternationalNullable::setBic(const QString &bic) {
    m_bic = bic;
    m_bic_isSet = true;
}

bool OAINumbersInternationalNullable::is_bic_Set() const{
    return m_bic_isSet;
}

bool OAINumbersInternationalNullable::is_bic_Valid() const{
    return m_bic_isValid;
}

QString OAINumbersInternationalNullable::getIban() const {
    return m_iban;
}
void OAINumbersInternationalNullable::setIban(const QString &iban) {
    m_iban = iban;
    m_iban_isSet = true;
}

bool OAINumbersInternationalNullable::is_iban_Set() const{
    return m_iban_isSet;
}

bool OAINumbersInternationalNullable::is_iban_Valid() const{
    return m_iban_isValid;
}

bool OAINumbersInternationalNullable::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bic_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iban_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINumbersInternationalNullable::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_bic_isValid && m_iban_isValid && true;
}

} // namespace OpenAPI
