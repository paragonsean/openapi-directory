/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPayrollIncomeAccountData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPayrollIncomeAccountData::OAIPayrollIncomeAccountData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPayrollIncomeAccountData::OAIPayrollIncomeAccountData() {
    this->initializeModel();
}

OAIPayrollIncomeAccountData::~OAIPayrollIncomeAccountData() {}

void OAIPayrollIncomeAccountData::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_pay_frequency_isSet = false;
    m_pay_frequency_isValid = false;

    m_rate_of_pay_isSet = false;
    m_rate_of_pay_isValid = false;
}

void OAIPayrollIncomeAccountData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPayrollIncomeAccountData::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_pay_frequency_isValid = ::OpenAPI::fromJsonValue(m_pay_frequency, json[QString("pay_frequency")]);
    m_pay_frequency_isSet = !json[QString("pay_frequency")].isNull() && m_pay_frequency_isValid;

    m_rate_of_pay_isValid = ::OpenAPI::fromJsonValue(m_rate_of_pay, json[QString("rate_of_pay")]);
    m_rate_of_pay_isSet = !json[QString("rate_of_pay")].isNull() && m_rate_of_pay_isValid;
}

QString OAIPayrollIncomeAccountData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPayrollIncomeAccountData::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_pay_frequency_isSet) {
        obj.insert(QString("pay_frequency"), ::OpenAPI::toJsonValue(m_pay_frequency));
    }
    if (m_rate_of_pay.isSet()) {
        obj.insert(QString("rate_of_pay"), ::OpenAPI::toJsonValue(m_rate_of_pay));
    }
    return obj;
}

QString OAIPayrollIncomeAccountData::getAccountId() const {
    return m_account_id;
}
void OAIPayrollIncomeAccountData::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIPayrollIncomeAccountData::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIPayrollIncomeAccountData::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIPayrollIncomeAccountData::getPayFrequency() const {
    return m_pay_frequency;
}
void OAIPayrollIncomeAccountData::setPayFrequency(const QString &pay_frequency) {
    m_pay_frequency = pay_frequency;
    m_pay_frequency_isSet = true;
}

bool OAIPayrollIncomeAccountData::is_pay_frequency_Set() const{
    return m_pay_frequency_isSet;
}

bool OAIPayrollIncomeAccountData::is_pay_frequency_Valid() const{
    return m_pay_frequency_isValid;
}

OAIPayrollIncomeRateOfPay OAIPayrollIncomeAccountData::getRateOfPay() const {
    return m_rate_of_pay;
}
void OAIPayrollIncomeAccountData::setRateOfPay(const OAIPayrollIncomeRateOfPay &rate_of_pay) {
    m_rate_of_pay = rate_of_pay;
    m_rate_of_pay_isSet = true;
}

bool OAIPayrollIncomeAccountData::is_rate_of_pay_Set() const{
    return m_rate_of_pay_isSet;
}

bool OAIPayrollIncomeAccountData::is_rate_of_pay_Valid() const{
    return m_rate_of_pay_isValid;
}

bool OAIPayrollIncomeAccountData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_frequency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rate_of_pay.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPayrollIncomeAccountData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_pay_frequency_isValid && m_rate_of_pay_isValid && true;
}

} // namespace OpenAPI
