/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMatchSummaryCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMatchSummaryCode::OAIMatchSummaryCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMatchSummaryCode::OAIMatchSummaryCode() {
    this->initializeModel();
}

OAIMatchSummaryCode::~OAIMatchSummaryCode() {}

void OAIMatchSummaryCode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIMatchSummaryCode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIMatchSummaryCode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("match", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMatchSummaryCode::MATCH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("partial_match", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMatchSummaryCode::PARTIAL_MATCH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("no_match", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMatchSummaryCode::NO_MATCH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("no_data", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMatchSummaryCode::NO_DATA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("no_input", Qt::CaseInsensitive) == 0) {
        m_value = eOAIMatchSummaryCode::NO_INPUT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIMatchSummaryCode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIMatchSummaryCode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIMatchSummaryCode::MATCH:
            val = "match";
            break;
        case eOAIMatchSummaryCode::PARTIAL_MATCH:
            val = "partial_match";
            break;
        case eOAIMatchSummaryCode::NO_MATCH:
            val = "no_match";
            break;
        case eOAIMatchSummaryCode::NO_DATA:
            val = "no_data";
            break;
        case eOAIMatchSummaryCode::NO_INPUT:
            val = "no_input";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIMatchSummaryCode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIMatchSummaryCode::eOAIMatchSummaryCode OAIMatchSummaryCode::getValue() const {
    return m_value;
}

void OAIMatchSummaryCode::setValue(const OAIMatchSummaryCode::eOAIMatchSummaryCode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIMatchSummaryCode::isSet() const {
    
    return m_value_isSet;
}

bool OAIMatchSummaryCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
