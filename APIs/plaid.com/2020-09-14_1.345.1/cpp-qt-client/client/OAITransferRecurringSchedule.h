/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransferRecurringSchedule.h
 *
 * The schedule that the recurring transfer will be executed on.
 */

#ifndef OAITransferRecurringSchedule_H
#define OAITransferRecurringSchedule_H

#include <QJsonObject>

#include "OAITransferScheduleIntervalUnit.h"
#include <QDate>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransferRecurringSchedule : public OAIObject {
public:
    OAITransferRecurringSchedule();
    OAITransferRecurringSchedule(QString json);
    ~OAITransferRecurringSchedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getEndDate() const;
    void setEndDate(const QDate &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    qint32 getIntervalCount() const;
    void setIntervalCount(const qint32 &interval_count);
    bool is_interval_count_Set() const;
    bool is_interval_count_Valid() const;

    qint32 getIntervalExecutionDay() const;
    void setIntervalExecutionDay(const qint32 &interval_execution_day);
    bool is_interval_execution_day_Set() const;
    bool is_interval_execution_day_Valid() const;

    OAITransferScheduleIntervalUnit getIntervalUnit() const;
    void setIntervalUnit(const OAITransferScheduleIntervalUnit &interval_unit);
    bool is_interval_unit_Set() const;
    bool is_interval_unit_Valid() const;

    QDate getStartDate() const;
    void setStartDate(const QDate &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    qint32 m_interval_count;
    bool m_interval_count_isSet;
    bool m_interval_count_isValid;

    qint32 m_interval_execution_day;
    bool m_interval_execution_day_isSet;
    bool m_interval_execution_day_isValid;

    OAITransferScheduleIntervalUnit m_interval_unit;
    bool m_interval_unit_isSet;
    bool m_interval_unit_isValid;

    QDate m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransferRecurringSchedule)

#endif // OAITransferRecurringSchedule_H
