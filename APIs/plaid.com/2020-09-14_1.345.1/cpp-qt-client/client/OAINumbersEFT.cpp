/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINumbersEFT.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINumbersEFT::OAINumbersEFT(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINumbersEFT::OAINumbersEFT() {
    this->initializeModel();
}

OAINumbersEFT::~OAINumbersEFT() {}

void OAINumbersEFT::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_branch_isSet = false;
    m_branch_isValid = false;

    m_institution_isSet = false;
    m_institution_isValid = false;
}

void OAINumbersEFT::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINumbersEFT::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_branch_isValid = ::OpenAPI::fromJsonValue(m_branch, json[QString("branch")]);
    m_branch_isSet = !json[QString("branch")].isNull() && m_branch_isValid;

    m_institution_isValid = ::OpenAPI::fromJsonValue(m_institution, json[QString("institution")]);
    m_institution_isSet = !json[QString("institution")].isNull() && m_institution_isValid;
}

QString OAINumbersEFT::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINumbersEFT::asJsonObject() const {
    QJsonObject obj;
    if (m_account_isSet) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_branch_isSet) {
        obj.insert(QString("branch"), ::OpenAPI::toJsonValue(m_branch));
    }
    if (m_institution_isSet) {
        obj.insert(QString("institution"), ::OpenAPI::toJsonValue(m_institution));
    }
    return obj;
}

QString OAINumbersEFT::getAccount() const {
    return m_account;
}
void OAINumbersEFT::setAccount(const QString &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAINumbersEFT::is_account_Set() const{
    return m_account_isSet;
}

bool OAINumbersEFT::is_account_Valid() const{
    return m_account_isValid;
}

QString OAINumbersEFT::getAccountId() const {
    return m_account_id;
}
void OAINumbersEFT::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAINumbersEFT::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAINumbersEFT::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAINumbersEFT::getBranch() const {
    return m_branch;
}
void OAINumbersEFT::setBranch(const QString &branch) {
    m_branch = branch;
    m_branch_isSet = true;
}

bool OAINumbersEFT::is_branch_Set() const{
    return m_branch_isSet;
}

bool OAINumbersEFT::is_branch_Valid() const{
    return m_branch_isValid;
}

QString OAINumbersEFT::getInstitution() const {
    return m_institution;
}
void OAINumbersEFT::setInstitution(const QString &institution) {
    m_institution = institution;
    m_institution_isSet = true;
}

bool OAINumbersEFT::is_institution_Set() const{
    return m_institution_isSet;
}

bool OAINumbersEFT::is_institution_Valid() const{
    return m_institution_isValid;
}

bool OAINumbersEFT::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_branch_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_institution_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINumbersEFT::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_isValid && m_account_id_isValid && m_branch_isValid && m_institution_isValid && true;
}

} // namespace OpenAPI
