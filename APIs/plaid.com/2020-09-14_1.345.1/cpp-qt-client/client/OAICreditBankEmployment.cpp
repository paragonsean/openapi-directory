/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditBankEmployment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditBankEmployment::OAICreditBankEmployment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditBankEmployment::OAICreditBankEmployment() {
    this->initializeModel();
}

OAICreditBankEmployment::~OAICreditBankEmployment() {}

void OAICreditBankEmployment::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_bank_employment_id_isSet = false;
    m_bank_employment_id_isValid = false;

    m_earliest_deposit_date_isSet = false;
    m_earliest_deposit_date_isValid = false;

    m_employer_isSet = false;
    m_employer_isValid = false;

    m_latest_deposit_date_isSet = false;
    m_latest_deposit_date_isValid = false;
}

void OAICreditBankEmployment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditBankEmployment::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_bank_employment_id_isValid = ::OpenAPI::fromJsonValue(m_bank_employment_id, json[QString("bank_employment_id")]);
    m_bank_employment_id_isSet = !json[QString("bank_employment_id")].isNull() && m_bank_employment_id_isValid;

    m_earliest_deposit_date_isValid = ::OpenAPI::fromJsonValue(m_earliest_deposit_date, json[QString("earliest_deposit_date")]);
    m_earliest_deposit_date_isSet = !json[QString("earliest_deposit_date")].isNull() && m_earliest_deposit_date_isValid;

    m_employer_isValid = ::OpenAPI::fromJsonValue(m_employer, json[QString("employer")]);
    m_employer_isSet = !json[QString("employer")].isNull() && m_employer_isValid;

    m_latest_deposit_date_isValid = ::OpenAPI::fromJsonValue(m_latest_deposit_date, json[QString("latest_deposit_date")]);
    m_latest_deposit_date_isSet = !json[QString("latest_deposit_date")].isNull() && m_latest_deposit_date_isValid;
}

QString OAICreditBankEmployment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditBankEmployment::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_bank_employment_id_isSet) {
        obj.insert(QString("bank_employment_id"), ::OpenAPI::toJsonValue(m_bank_employment_id));
    }
    if (m_earliest_deposit_date_isSet) {
        obj.insert(QString("earliest_deposit_date"), ::OpenAPI::toJsonValue(m_earliest_deposit_date));
    }
    if (m_employer.isSet()) {
        obj.insert(QString("employer"), ::OpenAPI::toJsonValue(m_employer));
    }
    if (m_latest_deposit_date_isSet) {
        obj.insert(QString("latest_deposit_date"), ::OpenAPI::toJsonValue(m_latest_deposit_date));
    }
    return obj;
}

QString OAICreditBankEmployment::getAccountId() const {
    return m_account_id;
}
void OAICreditBankEmployment::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAICreditBankEmployment::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAICreditBankEmployment::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAICreditBankEmployment::getBankEmploymentId() const {
    return m_bank_employment_id;
}
void OAICreditBankEmployment::setBankEmploymentId(const QString &bank_employment_id) {
    m_bank_employment_id = bank_employment_id;
    m_bank_employment_id_isSet = true;
}

bool OAICreditBankEmployment::is_bank_employment_id_Set() const{
    return m_bank_employment_id_isSet;
}

bool OAICreditBankEmployment::is_bank_employment_id_Valid() const{
    return m_bank_employment_id_isValid;
}

QDate OAICreditBankEmployment::getEarliestDepositDate() const {
    return m_earliest_deposit_date;
}
void OAICreditBankEmployment::setEarliestDepositDate(const QDate &earliest_deposit_date) {
    m_earliest_deposit_date = earliest_deposit_date;
    m_earliest_deposit_date_isSet = true;
}

bool OAICreditBankEmployment::is_earliest_deposit_date_Set() const{
    return m_earliest_deposit_date_isSet;
}

bool OAICreditBankEmployment::is_earliest_deposit_date_Valid() const{
    return m_earliest_deposit_date_isValid;
}

OAICreditBankEmployer OAICreditBankEmployment::getEmployer() const {
    return m_employer;
}
void OAICreditBankEmployment::setEmployer(const OAICreditBankEmployer &employer) {
    m_employer = employer;
    m_employer_isSet = true;
}

bool OAICreditBankEmployment::is_employer_Set() const{
    return m_employer_isSet;
}

bool OAICreditBankEmployment::is_employer_Valid() const{
    return m_employer_isValid;
}

QDate OAICreditBankEmployment::getLatestDepositDate() const {
    return m_latest_deposit_date;
}
void OAICreditBankEmployment::setLatestDepositDate(const QDate &latest_deposit_date) {
    m_latest_deposit_date = latest_deposit_date;
    m_latest_deposit_date_isSet = true;
}

bool OAICreditBankEmployment::is_latest_deposit_date_Set() const{
    return m_latest_deposit_date_isSet;
}

bool OAICreditBankEmployment::is_latest_deposit_date_Valid() const{
    return m_latest_deposit_date_isValid;
}

bool OAICreditBankEmployment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_employment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_earliest_deposit_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_employer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_deposit_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditBankEmployment::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_bank_employment_id_isValid && m_earliest_deposit_date_isValid && m_employer_isValid && m_latest_deposit_date_isValid && true;
}

} // namespace OpenAPI
