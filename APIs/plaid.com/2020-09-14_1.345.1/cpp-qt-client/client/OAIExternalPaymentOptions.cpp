/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExternalPaymentOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExternalPaymentOptions::OAIExternalPaymentOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExternalPaymentOptions::OAIExternalPaymentOptions() {
    this->initializeModel();
}

OAIExternalPaymentOptions::~OAIExternalPaymentOptions() {}

void OAIExternalPaymentOptions::initializeModel() {

    m_bacs_isSet = false;
    m_bacs_isValid = false;

    m_iban_isSet = false;
    m_iban_isValid = false;

    m_request_refund_details_isSet = false;
    m_request_refund_details_isValid = false;

    m_scheme_isSet = false;
    m_scheme_isValid = false;
}

void OAIExternalPaymentOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExternalPaymentOptions::fromJsonObject(QJsonObject json) {

    m_bacs_isValid = ::OpenAPI::fromJsonValue(m_bacs, json[QString("bacs")]);
    m_bacs_isSet = !json[QString("bacs")].isNull() && m_bacs_isValid;

    m_iban_isValid = ::OpenAPI::fromJsonValue(m_iban, json[QString("iban")]);
    m_iban_isSet = !json[QString("iban")].isNull() && m_iban_isValid;

    m_request_refund_details_isValid = ::OpenAPI::fromJsonValue(m_request_refund_details, json[QString("request_refund_details")]);
    m_request_refund_details_isSet = !json[QString("request_refund_details")].isNull() && m_request_refund_details_isValid;

    m_scheme_isValid = ::OpenAPI::fromJsonValue(m_scheme, json[QString("scheme")]);
    m_scheme_isSet = !json[QString("scheme")].isNull() && m_scheme_isValid;
}

QString OAIExternalPaymentOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExternalPaymentOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_bacs.isSet()) {
        obj.insert(QString("bacs"), ::OpenAPI::toJsonValue(m_bacs));
    }
    if (m_iban_isSet) {
        obj.insert(QString("iban"), ::OpenAPI::toJsonValue(m_iban));
    }
    if (m_request_refund_details_isSet) {
        obj.insert(QString("request_refund_details"), ::OpenAPI::toJsonValue(m_request_refund_details));
    }
    if (m_scheme.isSet()) {
        obj.insert(QString("scheme"), ::OpenAPI::toJsonValue(m_scheme));
    }
    return obj;
}

OAIPaymentInitiationOptionalRestrictionBacs OAIExternalPaymentOptions::getBacs() const {
    return m_bacs;
}
void OAIExternalPaymentOptions::setBacs(const OAIPaymentInitiationOptionalRestrictionBacs &bacs) {
    m_bacs = bacs;
    m_bacs_isSet = true;
}

bool OAIExternalPaymentOptions::is_bacs_Set() const{
    return m_bacs_isSet;
}

bool OAIExternalPaymentOptions::is_bacs_Valid() const{
    return m_bacs_isValid;
}

QString OAIExternalPaymentOptions::getIban() const {
    return m_iban;
}
void OAIExternalPaymentOptions::setIban(const QString &iban) {
    m_iban = iban;
    m_iban_isSet = true;
}

bool OAIExternalPaymentOptions::is_iban_Set() const{
    return m_iban_isSet;
}

bool OAIExternalPaymentOptions::is_iban_Valid() const{
    return m_iban_isValid;
}

bool OAIExternalPaymentOptions::isRequestRefundDetails() const {
    return m_request_refund_details;
}
void OAIExternalPaymentOptions::setRequestRefundDetails(const bool &request_refund_details) {
    m_request_refund_details = request_refund_details;
    m_request_refund_details_isSet = true;
}

bool OAIExternalPaymentOptions::is_request_refund_details_Set() const{
    return m_request_refund_details_isSet;
}

bool OAIExternalPaymentOptions::is_request_refund_details_Valid() const{
    return m_request_refund_details_isValid;
}

OAIPaymentScheme OAIExternalPaymentOptions::getScheme() const {
    return m_scheme;
}
void OAIExternalPaymentOptions::setScheme(const OAIPaymentScheme &scheme) {
    m_scheme = scheme;
    m_scheme_isSet = true;
}

bool OAIExternalPaymentOptions::is_scheme_Set() const{
    return m_scheme_isSet;
}

bool OAIExternalPaymentOptions::is_scheme_Valid() const{
    return m_scheme_isValid;
}

bool OAIExternalPaymentOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bacs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_iban_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_refund_details_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheme.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExternalPaymentOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
