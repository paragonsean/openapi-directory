/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreditAmountWithCurrency from './CreditAmountWithCurrency';
import CreditBankIncomeTransaction from './CreditBankIncomeTransaction';

/**
 * The CreditBankIncomeHistoricalSummary model module.
 * @module model/CreditBankIncomeHistoricalSummary
 * @version 2020-09-14_1.345.1
 */
class CreditBankIncomeHistoricalSummary {
    /**
     * Constructs a new <code>CreditBankIncomeHistoricalSummary</code>.
     * The end user&#39;s monthly summary for the income source(s).
     * @alias module:model/CreditBankIncomeHistoricalSummary
     * @extends Object
     */
    constructor() { 
        
        CreditBankIncomeHistoricalSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreditBankIncomeHistoricalSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreditBankIncomeHistoricalSummary} obj Optional instance to populate.
     * @return {module:model/CreditBankIncomeHistoricalSummary} The populated <code>CreditBankIncomeHistoricalSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreditBankIncomeHistoricalSummary();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
            }
            if (data.hasOwnProperty('iso_currency_code')) {
                obj['iso_currency_code'] = ApiClient.convertToType(data['iso_currency_code'], 'String');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('total_amount')) {
                obj['total_amount'] = ApiClient.convertToType(data['total_amount'], 'Number');
            }
            if (data.hasOwnProperty('total_amounts')) {
                obj['total_amounts'] = ApiClient.convertToType(data['total_amounts'], [CreditAmountWithCurrency]);
            }
            if (data.hasOwnProperty('transactions')) {
                obj['transactions'] = ApiClient.convertToType(data['transactions'], [CreditBankIncomeTransaction]);
            }
            if (data.hasOwnProperty('unofficial_currency_code')) {
                obj['unofficial_currency_code'] = ApiClient.convertToType(data['unofficial_currency_code'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreditBankIncomeHistoricalSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreditBankIncomeHistoricalSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['iso_currency_code'] && !(typeof data['iso_currency_code'] === 'string' || data['iso_currency_code'] instanceof String)) {
            throw new Error("Expected the field `iso_currency_code` to be a primitive type in the JSON string but got " + data['iso_currency_code']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['total_amounts'])) {
            throw new Error("Expected the field `total_amounts` to be an array in the JSON data but got " + data['total_amounts']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['transactions'])) {
            throw new Error("Expected the field `transactions` to be an array in the JSON data but got " + data['transactions']);
        }
        // ensure the json data is a string
        if (data['unofficial_currency_code'] && !(typeof data['unofficial_currency_code'] === 'string' || data['unofficial_currency_code'] instanceof String)) {
            throw new Error("Expected the field `unofficial_currency_code` to be a primitive type in the JSON string but got " + data['unofficial_currency_code']);
        }

        return true;
    }


}



/**
 * The end date of the period included in this monthly summary. This date will be the last day of the month, unless the month being covered is a partial month because it is the last month included in the summary and the date range being requested does not end with the last day of the month. The date will be returned in an ISO 8601 format (YYYY-MM-DD).
 * @member {Date} end_date
 */
CreditBankIncomeHistoricalSummary.prototype['end_date'] = undefined;

/**
 * The ISO 4217 currency code of the amount or balance. Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-items-bank-income-sources-historical-summary-total-amounts) instead.
 * @member {String} iso_currency_code
 */
CreditBankIncomeHistoricalSummary.prototype['iso_currency_code'] = undefined;

/**
 * The start date of the period covered in this monthly summary. This date will be the first day of the month, unless the month being covered is a partial month because it is the first month included in the summary and the date range being requested does not begin with the first day of the month. The date will be returned in an ISO 8601 format (YYYY-MM-DD).
 * @member {Date} start_date
 */
CreditBankIncomeHistoricalSummary.prototype['start_date'] = undefined;

/**
 * Total amount of earnings for the income source(s) of the user for the month in the summary. This may return an incorrect value if the summary includes income sources in multiple currencies. Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-items-bank-income-sources-historical-summary-total-amounts) instead.
 * @member {Number} total_amount
 */
CreditBankIncomeHistoricalSummary.prototype['total_amount'] = undefined;

/**
 * Total amount of earnings for the income source(s) of the user for the month in the summary. This can contain multiple amounts, with each amount denominated in one unique currency.
 * @member {Array.<module:model/CreditAmountWithCurrency>} total_amounts
 */
CreditBankIncomeHistoricalSummary.prototype['total_amounts'] = undefined;

/**
 * @member {Array.<module:model/CreditBankIncomeTransaction>} transactions
 */
CreditBankIncomeHistoricalSummary.prototype['transactions'] = undefined;

/**
 * The unofficial currency code associated with the amount or balance. Always `null` if `iso_currency_code` is non-null. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries. Please use [`total_amounts`](https://plaid.com/docs/api/products/income/#credit-bank_income-get-response-bank-income-items-bank-income-sources-historical-summary-total-amounts) instead.
 * @member {String} unofficial_currency_code
 */
CreditBankIncomeHistoricalSummary.prototype['unofficial_currency_code'] = undefined;






export default CreditBankIncomeHistoricalSummary;

