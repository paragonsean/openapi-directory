/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IncidentUpdate model module.
 * @module model/IncidentUpdate
 * @version 2020-09-14_1.345.1
 */
class IncidentUpdate {
    /**
     * Constructs a new <code>IncidentUpdate</code>.
     * An update on the health incident
     * @alias module:model/IncidentUpdate
     * @extends Object
     */
    constructor() { 
        
        IncidentUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IncidentUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IncidentUpdate} obj Optional instance to populate.
     * @return {module:model/IncidentUpdate} The populated <code>IncidentUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IncidentUpdate();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updated_date')) {
                obj['updated_date'] = ApiClient.convertToType(data['updated_date'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IncidentUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IncidentUpdate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The content of the update.
 * @member {String} description
 */
IncidentUpdate.prototype['description'] = undefined;

/**
 * The status of the incident.
 * @member {module:model/IncidentUpdate.StatusEnum} status
 */
IncidentUpdate.prototype['status'] = undefined;

/**
 * The date when the update was published, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2020-10-30T15:26:48Z\"`.
 * @member {Date} updated_date
 */
IncidentUpdate.prototype['updated_date'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
IncidentUpdate['StatusEnum'] = {

    /**
     * value: "INVESTIGATING"
     * @const
     */
    "INVESTIGATING": "INVESTIGATING",

    /**
     * value: "IDENTIFIED"
     * @const
     */
    "IDENTIFIED": "IDENTIFIED",

    /**
     * value: "SCHEDULED"
     * @const
     */
    "SCHEDULED": "SCHEDULED",

    /**
     * value: "RESOLVED"
     * @const
     */
    "RESOLVED": "RESOLVED",

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN"
};



export default IncidentUpdate;

