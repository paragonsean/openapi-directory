/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MatchSummaryCode from './MatchSummaryCode';

/**
 * The ScreeningHitAnalysis model module.
 * @module model/ScreeningHitAnalysis
 * @version 2020-09-14_1.345.1
 */
class ScreeningHitAnalysis {
    /**
     * Constructs a new <code>ScreeningHitAnalysis</code>.
     * Analysis information describing why a screening hit matched the provided user information
     * @alias module:model/ScreeningHitAnalysis
     * @extends Object
     * @param searchTermsVersion {Number} The version of the screening's `search_terms` that were compared when the screening hit was added. screening hits are immutable once they have been reviewed. If changes are detected due to updates to the screening's `search_terms`, the associated program, or the list's source data prior to review, the screening hit will be updated to reflect those changes.
     */
    constructor(searchTermsVersion) { 
        
        ScreeningHitAnalysis.initialize(this, searchTermsVersion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, searchTermsVersion) { 
        obj['search_terms_version'] = searchTermsVersion;
    }

    /**
     * Constructs a <code>ScreeningHitAnalysis</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScreeningHitAnalysis} obj Optional instance to populate.
     * @return {module:model/ScreeningHitAnalysis} The populated <code>ScreeningHitAnalysis</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScreeningHitAnalysis();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('dates_of_birth')) {
                obj['dates_of_birth'] = MatchSummaryCode.constructFromObject(data['dates_of_birth']);
            }
            if (data.hasOwnProperty('documents')) {
                obj['documents'] = MatchSummaryCode.constructFromObject(data['documents']);
            }
            if (data.hasOwnProperty('locations')) {
                obj['locations'] = MatchSummaryCode.constructFromObject(data['locations']);
            }
            if (data.hasOwnProperty('names')) {
                obj['names'] = MatchSummaryCode.constructFromObject(data['names']);
            }
            if (data.hasOwnProperty('search_terms_version')) {
                obj['search_terms_version'] = ApiClient.convertToType(data['search_terms_version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScreeningHitAnalysis</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScreeningHitAnalysis</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ScreeningHitAnalysis.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ScreeningHitAnalysis.RequiredProperties = ["search_terms_version"];

/**
 * @member {module:model/MatchSummaryCode} dates_of_birth
 */
ScreeningHitAnalysis.prototype['dates_of_birth'] = undefined;

/**
 * @member {module:model/MatchSummaryCode} documents
 */
ScreeningHitAnalysis.prototype['documents'] = undefined;

/**
 * @member {module:model/MatchSummaryCode} locations
 */
ScreeningHitAnalysis.prototype['locations'] = undefined;

/**
 * @member {module:model/MatchSummaryCode} names
 */
ScreeningHitAnalysis.prototype['names'] = undefined;

/**
 * The version of the screening's `search_terms` that were compared when the screening hit was added. screening hits are immutable once they have been reviewed. If changes are detected due to updates to the screening's `search_terms`, the associated program, or the list's source data prior to review, the screening hit will be updated to reflect those changes.
 * @member {Number} search_terms_version
 */
ScreeningHitAnalysis.prototype['search_terms_version'] = undefined;






export default ScreeningHitAnalysis;

