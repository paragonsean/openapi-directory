/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Security model module.
 * @module model/Security
 * @version 2020-09-14_1.345.1
 */
class Security {
    /**
     * Constructs a new <code>Security</code>.
     * Contains details about a security
     * @alias module:model/Security
     * @extends Object
     * @param closePrice {Number} Price of the security at the close of the previous trading session. Null for non-public securities.  If the security is a foreign currency this field will be updated daily and will be priced in USD.  If the security is a cryptocurrency, this field will be updated multiple times a day. As crypto prices can fluctuate quickly and data may become stale sooner than other asset classes, refer to `update_datetime` with the time when the price was last updated. 
     * @param closePriceAsOf {Date} Date for which `close_price` is accurate. Always `null` if `close_price` is `null`.
     * @param cusip {String} 9-character CUSIP, an identifier assigned to North American securities. Please note that Plaid's customers must hold a license directly from CUSIP Global Services to receive CUSIP & ISIN data. This field will be null by default for new customers. For existing customers, this field will be null by default starting on Sept 15, 2023. If you would like access to this field, please contact your Plaid Account Manager or reach out to investments-vendors@plaid.com.
     * @param institutionId {String} If `institution_security_id` is present, this field indicates the Plaid `institution_id` of the institution to whom the identifier belongs.
     * @param institutionSecurityId {String} An identifier given to the security by the institution
     * @param isCashEquivalent {Boolean} Indicates that a security is a highly liquid asset and can be treated like cash.
     * @param isin {String} 12-character ISIN, a globally unique securities identifier. Please note that Plaid's customers must hold a license directly from CUSIP Global Services to receive CUSIP & ISIN data. This field will be null by default for new customers. For existing customers, this field will be null by default starting on Sept 15, 2023. If you would like access to this field, please contact your Plaid Account Manager or reach out to investments-vendors@plaid.com.
     * @param isoCurrencyCode {String} The ISO-4217 currency code of the price given. Always `null` if `unofficial_currency_code` is non-`null`.
     * @param name {String} A descriptive name for the security, suitable for display.
     * @param proxySecurityId {String} In certain cases, Plaid will provide the ID of another security whose performance resembles this security, typically when the original security has low volume, or when a private security can be modeled with a publicly traded security.
     * @param securityId {String} A unique, Plaid-specific identifier for the security, used to associate securities with holdings. Like all Plaid identifiers, the `security_id` is case sensitive. The `security_id` may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.
     * @param sedol {String} 7-character SEDOL, an identifier assigned to securities in the UK.
     * @param tickerSymbol {String} The securityâ€™s trading symbol for publicly traded securities, and otherwise a short identifier if available.
     * @param type {String} The security type of the holding. Valid security types are:  `cash`: Cash, currency, and money market funds  `cryptocurrency`: Digital or virtual currencies  `derivative`: Options, warrants, and other derivative instruments  `equity`: Domestic and foreign equities  `etf`: Multi-asset exchange-traded investment funds  `fixed income`: Bonds and certificates of deposit (CDs)  `loan`: Loans and loan receivables  `mutual fund`: Open- and closed-end vehicles pooling funds of multiple investors  `other`: Unknown or other investment types
     * @param unofficialCurrencyCode {String} The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.  See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
     */
    constructor(closePrice, closePriceAsOf, cusip, institutionId, institutionSecurityId, isCashEquivalent, isin, isoCurrencyCode, name, proxySecurityId, securityId, sedol, tickerSymbol, type, unofficialCurrencyCode) { 
        
        Security.initialize(this, closePrice, closePriceAsOf, cusip, institutionId, institutionSecurityId, isCashEquivalent, isin, isoCurrencyCode, name, proxySecurityId, securityId, sedol, tickerSymbol, type, unofficialCurrencyCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, closePrice, closePriceAsOf, cusip, institutionId, institutionSecurityId, isCashEquivalent, isin, isoCurrencyCode, name, proxySecurityId, securityId, sedol, tickerSymbol, type, unofficialCurrencyCode) { 
        obj['close_price'] = closePrice;
        obj['close_price_as_of'] = closePriceAsOf;
        obj['cusip'] = cusip;
        obj['institution_id'] = institutionId;
        obj['institution_security_id'] = institutionSecurityId;
        obj['is_cash_equivalent'] = isCashEquivalent;
        obj['isin'] = isin;
        obj['iso_currency_code'] = isoCurrencyCode;
        obj['name'] = name;
        obj['proxy_security_id'] = proxySecurityId;
        obj['security_id'] = securityId;
        obj['sedol'] = sedol;
        obj['ticker_symbol'] = tickerSymbol;
        obj['type'] = type;
        obj['unofficial_currency_code'] = unofficialCurrencyCode;
    }

    /**
     * Constructs a <code>Security</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Security} obj Optional instance to populate.
     * @return {module:model/Security} The populated <code>Security</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Security();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('close_price')) {
                obj['close_price'] = ApiClient.convertToType(data['close_price'], 'Number');
            }
            if (data.hasOwnProperty('close_price_as_of')) {
                obj['close_price_as_of'] = ApiClient.convertToType(data['close_price_as_of'], 'Date');
            }
            if (data.hasOwnProperty('cusip')) {
                obj['cusip'] = ApiClient.convertToType(data['cusip'], 'String');
            }
            if (data.hasOwnProperty('institution_id')) {
                obj['institution_id'] = ApiClient.convertToType(data['institution_id'], 'String');
            }
            if (data.hasOwnProperty('institution_security_id')) {
                obj['institution_security_id'] = ApiClient.convertToType(data['institution_security_id'], 'String');
            }
            if (data.hasOwnProperty('is_cash_equivalent')) {
                obj['is_cash_equivalent'] = ApiClient.convertToType(data['is_cash_equivalent'], 'Boolean');
            }
            if (data.hasOwnProperty('isin')) {
                obj['isin'] = ApiClient.convertToType(data['isin'], 'String');
            }
            if (data.hasOwnProperty('iso_currency_code')) {
                obj['iso_currency_code'] = ApiClient.convertToType(data['iso_currency_code'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('proxy_security_id')) {
                obj['proxy_security_id'] = ApiClient.convertToType(data['proxy_security_id'], 'String');
            }
            if (data.hasOwnProperty('security_id')) {
                obj['security_id'] = ApiClient.convertToType(data['security_id'], 'String');
            }
            if (data.hasOwnProperty('sedol')) {
                obj['sedol'] = ApiClient.convertToType(data['sedol'], 'String');
            }
            if (data.hasOwnProperty('ticker_symbol')) {
                obj['ticker_symbol'] = ApiClient.convertToType(data['ticker_symbol'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('unofficial_currency_code')) {
                obj['unofficial_currency_code'] = ApiClient.convertToType(data['unofficial_currency_code'], 'String');
            }
            if (data.hasOwnProperty('update_datetime')) {
                obj['update_datetime'] = ApiClient.convertToType(data['update_datetime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Security</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Security</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Security.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['cusip'] && !(typeof data['cusip'] === 'string' || data['cusip'] instanceof String)) {
            throw new Error("Expected the field `cusip` to be a primitive type in the JSON string but got " + data['cusip']);
        }
        // ensure the json data is a string
        if (data['institution_id'] && !(typeof data['institution_id'] === 'string' || data['institution_id'] instanceof String)) {
            throw new Error("Expected the field `institution_id` to be a primitive type in the JSON string but got " + data['institution_id']);
        }
        // ensure the json data is a string
        if (data['institution_security_id'] && !(typeof data['institution_security_id'] === 'string' || data['institution_security_id'] instanceof String)) {
            throw new Error("Expected the field `institution_security_id` to be a primitive type in the JSON string but got " + data['institution_security_id']);
        }
        // ensure the json data is a string
        if (data['isin'] && !(typeof data['isin'] === 'string' || data['isin'] instanceof String)) {
            throw new Error("Expected the field `isin` to be a primitive type in the JSON string but got " + data['isin']);
        }
        // ensure the json data is a string
        if (data['iso_currency_code'] && !(typeof data['iso_currency_code'] === 'string' || data['iso_currency_code'] instanceof String)) {
            throw new Error("Expected the field `iso_currency_code` to be a primitive type in the JSON string but got " + data['iso_currency_code']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['proxy_security_id'] && !(typeof data['proxy_security_id'] === 'string' || data['proxy_security_id'] instanceof String)) {
            throw new Error("Expected the field `proxy_security_id` to be a primitive type in the JSON string but got " + data['proxy_security_id']);
        }
        // ensure the json data is a string
        if (data['security_id'] && !(typeof data['security_id'] === 'string' || data['security_id'] instanceof String)) {
            throw new Error("Expected the field `security_id` to be a primitive type in the JSON string but got " + data['security_id']);
        }
        // ensure the json data is a string
        if (data['sedol'] && !(typeof data['sedol'] === 'string' || data['sedol'] instanceof String)) {
            throw new Error("Expected the field `sedol` to be a primitive type in the JSON string but got " + data['sedol']);
        }
        // ensure the json data is a string
        if (data['ticker_symbol'] && !(typeof data['ticker_symbol'] === 'string' || data['ticker_symbol'] instanceof String)) {
            throw new Error("Expected the field `ticker_symbol` to be a primitive type in the JSON string but got " + data['ticker_symbol']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['unofficial_currency_code'] && !(typeof data['unofficial_currency_code'] === 'string' || data['unofficial_currency_code'] instanceof String)) {
            throw new Error("Expected the field `unofficial_currency_code` to be a primitive type in the JSON string but got " + data['unofficial_currency_code']);
        }

        return true;
    }


}

Security.RequiredProperties = ["close_price", "close_price_as_of", "cusip", "institution_id", "institution_security_id", "is_cash_equivalent", "isin", "iso_currency_code", "name", "proxy_security_id", "security_id", "sedol", "ticker_symbol", "type", "unofficial_currency_code"];

/**
 * Price of the security at the close of the previous trading session. Null for non-public securities.  If the security is a foreign currency this field will be updated daily and will be priced in USD.  If the security is a cryptocurrency, this field will be updated multiple times a day. As crypto prices can fluctuate quickly and data may become stale sooner than other asset classes, refer to `update_datetime` with the time when the price was last updated. 
 * @member {Number} close_price
 */
Security.prototype['close_price'] = undefined;

/**
 * Date for which `close_price` is accurate. Always `null` if `close_price` is `null`.
 * @member {Date} close_price_as_of
 */
Security.prototype['close_price_as_of'] = undefined;

/**
 * 9-character CUSIP, an identifier assigned to North American securities. Please note that Plaid's customers must hold a license directly from CUSIP Global Services to receive CUSIP & ISIN data. This field will be null by default for new customers. For existing customers, this field will be null by default starting on Sept 15, 2023. If you would like access to this field, please contact your Plaid Account Manager or reach out to investments-vendors@plaid.com.
 * @member {String} cusip
 */
Security.prototype['cusip'] = undefined;

/**
 * If `institution_security_id` is present, this field indicates the Plaid `institution_id` of the institution to whom the identifier belongs.
 * @member {String} institution_id
 */
Security.prototype['institution_id'] = undefined;

/**
 * An identifier given to the security by the institution
 * @member {String} institution_security_id
 */
Security.prototype['institution_security_id'] = undefined;

/**
 * Indicates that a security is a highly liquid asset and can be treated like cash.
 * @member {Boolean} is_cash_equivalent
 */
Security.prototype['is_cash_equivalent'] = undefined;

/**
 * 12-character ISIN, a globally unique securities identifier. Please note that Plaid's customers must hold a license directly from CUSIP Global Services to receive CUSIP & ISIN data. This field will be null by default for new customers. For existing customers, this field will be null by default starting on Sept 15, 2023. If you would like access to this field, please contact your Plaid Account Manager or reach out to investments-vendors@plaid.com.
 * @member {String} isin
 */
Security.prototype['isin'] = undefined;

/**
 * The ISO-4217 currency code of the price given. Always `null` if `unofficial_currency_code` is non-`null`.
 * @member {String} iso_currency_code
 */
Security.prototype['iso_currency_code'] = undefined;

/**
 * A descriptive name for the security, suitable for display.
 * @member {String} name
 */
Security.prototype['name'] = undefined;

/**
 * In certain cases, Plaid will provide the ID of another security whose performance resembles this security, typically when the original security has low volume, or when a private security can be modeled with a publicly traded security.
 * @member {String} proxy_security_id
 */
Security.prototype['proxy_security_id'] = undefined;

/**
 * A unique, Plaid-specific identifier for the security, used to associate securities with holdings. Like all Plaid identifiers, the `security_id` is case sensitive. The `security_id` may change if inherent details of the security change due to a corporate action, for example, in the event of a ticker symbol change or CUSIP change.
 * @member {String} security_id
 */
Security.prototype['security_id'] = undefined;

/**
 * 7-character SEDOL, an identifier assigned to securities in the UK.
 * @member {String} sedol
 */
Security.prototype['sedol'] = undefined;

/**
 * The securityâ€™s trading symbol for publicly traded securities, and otherwise a short identifier if available.
 * @member {String} ticker_symbol
 */
Security.prototype['ticker_symbol'] = undefined;

/**
 * The security type of the holding. Valid security types are:  `cash`: Cash, currency, and money market funds  `cryptocurrency`: Digital or virtual currencies  `derivative`: Options, warrants, and other derivative instruments  `equity`: Domestic and foreign equities  `etf`: Multi-asset exchange-traded investment funds  `fixed income`: Bonds and certificates of deposit (CDs)  `loan`: Loans and loan receivables  `mutual fund`: Open- and closed-end vehicles pooling funds of multiple investors  `other`: Unknown or other investment types
 * @member {String} type
 */
Security.prototype['type'] = undefined;

/**
 * The unofficial currency code associated with the security. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.  See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
 * @member {String} unofficial_currency_code
 */
Security.prototype['unofficial_currency_code'] = undefined;

/**
 * Date and time at which `close_price` is accurate, in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ). Always `null` if `close_price` is `null`.
 * @member {Date} update_datetime
 */
Security.prototype['update_datetime'] = undefined;






export default Security;

