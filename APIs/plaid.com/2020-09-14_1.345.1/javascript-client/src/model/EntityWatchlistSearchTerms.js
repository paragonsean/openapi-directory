/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EntityWatchlistSearchTerms model module.
 * @module model/EntityWatchlistSearchTerms
 * @version 2020-09-14_1.345.1
 */
class EntityWatchlistSearchTerms {
    /**
     * Constructs a new <code>EntityWatchlistSearchTerms</code>.
     * Search inputs for creating an entity watchlist screening
     * @alias module:model/EntityWatchlistSearchTerms
     * @param entityWatchlistProgramId {String} ID of the associated entity program.
     * @param legalName {String} The name of the organization being screened.
     */
    constructor(entityWatchlistProgramId, legalName) { 
        
        EntityWatchlistSearchTerms.initialize(this, entityWatchlistProgramId, legalName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, entityWatchlistProgramId, legalName) { 
        obj['entity_watchlist_program_id'] = entityWatchlistProgramId;
        obj['legal_name'] = legalName;
    }

    /**
     * Constructs a <code>EntityWatchlistSearchTerms</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntityWatchlistSearchTerms} obj Optional instance to populate.
     * @return {module:model/EntityWatchlistSearchTerms} The populated <code>EntityWatchlistSearchTerms</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntityWatchlistSearchTerms();

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('document_number')) {
                obj['document_number'] = ApiClient.convertToType(data['document_number'], 'String');
            }
            if (data.hasOwnProperty('email_address')) {
                obj['email_address'] = ApiClient.convertToType(data['email_address'], 'String');
            }
            if (data.hasOwnProperty('entity_watchlist_program_id')) {
                obj['entity_watchlist_program_id'] = ApiClient.convertToType(data['entity_watchlist_program_id'], 'String');
            }
            if (data.hasOwnProperty('legal_name')) {
                obj['legal_name'] = ApiClient.convertToType(data['legal_name'], 'String');
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EntityWatchlistSearchTerms</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EntityWatchlistSearchTerms</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EntityWatchlistSearchTerms.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['document_number'] && !(typeof data['document_number'] === 'string' || data['document_number'] instanceof String)) {
            throw new Error("Expected the field `document_number` to be a primitive type in the JSON string but got " + data['document_number']);
        }
        // ensure the json data is a string
        if (data['email_address'] && !(typeof data['email_address'] === 'string' || data['email_address'] instanceof String)) {
            throw new Error("Expected the field `email_address` to be a primitive type in the JSON string but got " + data['email_address']);
        }
        // ensure the json data is a string
        if (data['entity_watchlist_program_id'] && !(typeof data['entity_watchlist_program_id'] === 'string' || data['entity_watchlist_program_id'] instanceof String)) {
            throw new Error("Expected the field `entity_watchlist_program_id` to be a primitive type in the JSON string but got " + data['entity_watchlist_program_id']);
        }
        // ensure the json data is a string
        if (data['legal_name'] && !(typeof data['legal_name'] === 'string' || data['legal_name'] instanceof String)) {
            throw new Error("Expected the field `legal_name` to be a primitive type in the JSON string but got " + data['legal_name']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

EntityWatchlistSearchTerms.RequiredProperties = ["entity_watchlist_program_id", "legal_name"];

/**
 * Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
 * @member {String} country
 */
EntityWatchlistSearchTerms.prototype['country'] = undefined;

/**
 * The numeric or alphanumeric identifier associated with this document.
 * @member {String} document_number
 */
EntityWatchlistSearchTerms.prototype['document_number'] = undefined;

/**
 * A valid email address.
 * @member {String} email_address
 */
EntityWatchlistSearchTerms.prototype['email_address'] = undefined;

/**
 * ID of the associated entity program.
 * @member {String} entity_watchlist_program_id
 */
EntityWatchlistSearchTerms.prototype['entity_watchlist_program_id'] = undefined;

/**
 * The name of the organization being screened.
 * @member {String} legal_name
 */
EntityWatchlistSearchTerms.prototype['legal_name'] = undefined;

/**
 * A phone number in E.164 format.
 * @member {String} phone_number
 */
EntityWatchlistSearchTerms.prototype['phone_number'] = undefined;

/**
 * An 'http' or 'https' URL (must begin with either of those).
 * @member {String} url
 */
EntityWatchlistSearchTerms.prototype['url'] = undefined;






export default EntityWatchlistSearchTerms;

