/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NameMatchScore model module.
 * @module model/NameMatchScore
 * @version 2020-09-14_1.345.1
 */
class NameMatchScore {
    /**
     * Constructs a new <code>NameMatchScore</code>.
     * Score found by matching name provided by the API with the name on the account at the financial institution. If the account contains multiple owners, the maximum match score is filled.
     * @alias module:model/NameMatchScore
     * @extends Object
     */
    constructor() { 
        
        NameMatchScore.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NameMatchScore</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NameMatchScore} obj Optional instance to populate.
     * @return {module:model/NameMatchScore} The populated <code>NameMatchScore</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NameMatchScore();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('is_business_name_detected')) {
                obj['is_business_name_detected'] = ApiClient.convertToType(data['is_business_name_detected'], 'Boolean');
            }
            if (data.hasOwnProperty('is_first_name_or_last_name_match')) {
                obj['is_first_name_or_last_name_match'] = ApiClient.convertToType(data['is_first_name_or_last_name_match'], 'Boolean');
            }
            if (data.hasOwnProperty('is_nickname_match')) {
                obj['is_nickname_match'] = ApiClient.convertToType(data['is_nickname_match'], 'Boolean');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NameMatchScore</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NameMatchScore</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Is `true` if the name on either of the names that was matched for the score contained strings indicative of a business name, such as \"CORP\", \"LLC\", \"INC\", or \"LTD\". A `true` result generally indicates the entity is a business. However, a `false` result does not mean the entity is not a business, as some businesses do not use these strings in the names used for their financial institution accounts.
 * @member {Boolean} is_business_name_detected
 */
NameMatchScore.prototype['is_business_name_detected'] = undefined;

/**
 * first or last name completely matched, likely a family member
 * @member {Boolean} is_first_name_or_last_name_match
 */
NameMatchScore.prototype['is_first_name_or_last_name_match'] = undefined;

/**
 * nickname matched, example Jennifer and Jenn.
 * @member {Boolean} is_nickname_match
 */
NameMatchScore.prototype['is_nickname_match'] = undefined;

/**
 * Represents the match score for name. 100 is a perfect score, 85-99 means a strong match, 50-84 is a partial match, less than 50 is a weak match and 0 is a complete mismatch. If the name is missing from either the API or financial institution, this is empty.
 * @member {Number} score
 */
NameMatchScore.prototype['score'] = undefined;






export default NameMatchScore;

