/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PersonalFinanceCategory model module.
 * @module model/PersonalFinanceCategory
 * @version 2020-09-14_1.345.1
 */
class PersonalFinanceCategory {
    /**
     * Constructs a new <code>PersonalFinanceCategory</code>.
     * Information describing the intent of the transaction. Most relevant for personal finance use cases, but not limited to such use cases.  See the [&#x60;taxonomy csv file&#x60;](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories.
     * @alias module:model/PersonalFinanceCategory
     * @extends Object
     * @param detailed {String} A granular category conveying the transaction's intent. This field can also be used as a unique identifier for the category.
     * @param primary {String} A high level category that communicates the broad category of the transaction.
     */
    constructor(detailed, primary) { 
        
        PersonalFinanceCategory.initialize(this, detailed, primary);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, detailed, primary) { 
        obj['detailed'] = detailed;
        obj['primary'] = primary;
    }

    /**
     * Constructs a <code>PersonalFinanceCategory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PersonalFinanceCategory} obj Optional instance to populate.
     * @return {module:model/PersonalFinanceCategory} The populated <code>PersonalFinanceCategory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PersonalFinanceCategory();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('detailed')) {
                obj['detailed'] = ApiClient.convertToType(data['detailed'], 'String');
            }
            if (data.hasOwnProperty('primary')) {
                obj['primary'] = ApiClient.convertToType(data['primary'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PersonalFinanceCategory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PersonalFinanceCategory</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PersonalFinanceCategory.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['detailed'] && !(typeof data['detailed'] === 'string' || data['detailed'] instanceof String)) {
            throw new Error("Expected the field `detailed` to be a primitive type in the JSON string but got " + data['detailed']);
        }
        // ensure the json data is a string
        if (data['primary'] && !(typeof data['primary'] === 'string' || data['primary'] instanceof String)) {
            throw new Error("Expected the field `primary` to be a primitive type in the JSON string but got " + data['primary']);
        }

        return true;
    }


}

PersonalFinanceCategory.RequiredProperties = ["detailed", "primary"];

/**
 * A granular category conveying the transaction's intent. This field can also be used as a unique identifier for the category.
 * @member {String} detailed
 */
PersonalFinanceCategory.prototype['detailed'] = undefined;

/**
 * A high level category that communicates the broad category of the transaction.
 * @member {String} primary
 */
PersonalFinanceCategory.prototype['primary'] = undefined;






export default PersonalFinanceCategory;

