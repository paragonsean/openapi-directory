/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GenericScreeningHitLocationItems from './GenericScreeningHitLocationItems';
import ScreeningHitDateOfBirthItem from './ScreeningHitDateOfBirthItem';
import ScreeningHitDocumentsItems from './ScreeningHitDocumentsItems';
import ScreeningHitNamesItems from './ScreeningHitNamesItems';

/**
 * The ScreeningHitData model module.
 * @module model/ScreeningHitData
 * @version 2020-09-14_1.345.1
 */
class ScreeningHitData {
    /**
     * Constructs a new <code>ScreeningHitData</code>.
     * Information associated with the watchlist hit
     * @alias module:model/ScreeningHitData
     * @extends Object
     */
    constructor() { 
        
        ScreeningHitData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScreeningHitData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScreeningHitData} obj Optional instance to populate.
     * @return {module:model/ScreeningHitData} The populated <code>ScreeningHitData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScreeningHitData();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('dates_of_birth')) {
                obj['dates_of_birth'] = ApiClient.convertToType(data['dates_of_birth'], [ScreeningHitDateOfBirthItem]);
            }
            if (data.hasOwnProperty('documents')) {
                obj['documents'] = ApiClient.convertToType(data['documents'], [ScreeningHitDocumentsItems]);
            }
            if (data.hasOwnProperty('locations')) {
                obj['locations'] = ApiClient.convertToType(data['locations'], [GenericScreeningHitLocationItems]);
            }
            if (data.hasOwnProperty('names')) {
                obj['names'] = ApiClient.convertToType(data['names'], [ScreeningHitNamesItems]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScreeningHitData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScreeningHitData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['dates_of_birth'])) {
            throw new Error("Expected the field `dates_of_birth` to be an array in the JSON data but got " + data['dates_of_birth']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['documents'])) {
            throw new Error("Expected the field `documents` to be an array in the JSON data but got " + data['documents']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['locations'])) {
            throw new Error("Expected the field `locations` to be an array in the JSON data but got " + data['locations']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['names'])) {
            throw new Error("Expected the field `names` to be an array in the JSON data but got " + data['names']);
        }

        return true;
    }


}



/**
 * Dates of birth associated with the watchlist hit
 * @member {Array.<module:model/ScreeningHitDateOfBirthItem>} dates_of_birth
 */
ScreeningHitData.prototype['dates_of_birth'] = undefined;

/**
 * Documents associated with the watchlist hit
 * @member {Array.<module:model/ScreeningHitDocumentsItems>} documents
 */
ScreeningHitData.prototype['documents'] = undefined;

/**
 * Locations associated with the watchlist hit
 * @member {Array.<module:model/GenericScreeningHitLocationItems>} locations
 */
ScreeningHitData.prototype['locations'] = undefined;

/**
 * Names associated with the watchlist hit
 * @member {Array.<module:model/ScreeningHitNamesItems>} names
 */
ScreeningHitData.prototype['names'] = undefined;






export default ScreeningHitData;

