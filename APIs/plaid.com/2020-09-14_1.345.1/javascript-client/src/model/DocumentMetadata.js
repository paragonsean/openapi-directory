/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DocType from './DocType';

/**
 * The DocumentMetadata model module.
 * @module model/DocumentMetadata
 * @version 2020-09-14_1.345.1
 */
class DocumentMetadata {
    /**
     * Constructs a new <code>DocumentMetadata</code>.
     * An object representing metadata from the end user&#39;s uploaded document.
     * @alias module:model/DocumentMetadata
     * @extends Object
     */
    constructor() { 
        
        DocumentMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DocumentMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DocumentMetadata} obj Optional instance to populate.
     * @return {module:model/DocumentMetadata} The populated <code>DocumentMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DocumentMetadata();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('doc_id')) {
                obj['doc_id'] = ApiClient.convertToType(data['doc_id'], 'String');
            }
            if (data.hasOwnProperty('doc_type')) {
                obj['doc_type'] = DocType.constructFromObject(data['doc_type']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DocumentMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DocumentMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['doc_id'] && !(typeof data['doc_id'] === 'string' || data['doc_id'] instanceof String)) {
            throw new Error("Expected the field `doc_id` to be a primitive type in the JSON string but got " + data['doc_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * An identifier of the document that is also present in the paystub response.
 * @member {String} doc_id
 */
DocumentMetadata.prototype['doc_id'] = undefined;

/**
 * @member {module:model/DocType} doc_type
 */
DocumentMetadata.prototype['doc_type'] = undefined;

/**
 * The name of the document.
 * @member {String} name
 */
DocumentMetadata.prototype['name'] = undefined;

/**
 * The processing status of the document.  `PROCESSING_COMPLETE`: The document was successfully processed.  `DOCUMENT_ERROR`: The document could not be processed. Possible causes include: The document was an unacceptable document type such as an offer letter or bank statement, the document image was cropped or blurry, or the document was corrupted.  `UNKNOWN` or `null`: An internal error occured. If this happens repeatedly, contact support or your Plaid account manager.
 * @member {String} status
 */
DocumentMetadata.prototype['status'] = undefined;






export default DocumentMetadata;

