/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IncidentUpdate from './IncidentUpdate';

/**
 * The HealthIncident model module.
 * @module model/HealthIncident
 * @version 2020-09-14_1.345.1
 */
class HealthIncident {
    /**
     * Constructs a new <code>HealthIncident</code>.
     * A status health incident
     * @alias module:model/HealthIncident
     * @extends Object
     * @param incidentUpdates {Array.<module:model/IncidentUpdate>} Updates on the health incident.
     * @param startDate {Date} The start date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2020-10-30T15:26:48Z\"`.
     * @param title {String} The title of the incident
     */
    constructor(incidentUpdates, startDate, title) { 
        
        HealthIncident.initialize(this, incidentUpdates, startDate, title);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, incidentUpdates, startDate, title) { 
        obj['incident_updates'] = incidentUpdates;
        obj['start_date'] = startDate;
        obj['title'] = title;
    }

    /**
     * Constructs a <code>HealthIncident</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HealthIncident} obj Optional instance to populate.
     * @return {module:model/HealthIncident} The populated <code>HealthIncident</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HealthIncident();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
            }
            if (data.hasOwnProperty('incident_updates')) {
                obj['incident_updates'] = ApiClient.convertToType(data['incident_updates'], [IncidentUpdate]);
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HealthIncident</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HealthIncident</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HealthIncident.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['incident_updates'])) {
            throw new Error("Expected the field `incident_updates` to be an array in the JSON data but got " + data['incident_updates']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

HealthIncident.RequiredProperties = ["incident_updates", "start_date", "title"];

/**
 * The end date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2020-10-30T15:26:48Z\"`.
 * @member {Date} end_date
 */
HealthIncident.prototype['end_date'] = undefined;

/**
 * Updates on the health incident.
 * @member {Array.<module:model/IncidentUpdate>} incident_updates
 */
HealthIncident.prototype['incident_updates'] = undefined;

/**
 * The start date of the incident, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2020-10-30T15:26:48Z\"`.
 * @member {Date} start_date
 */
HealthIncident.prototype['start_date'] = undefined;

/**
 * The title of the incident
 * @member {String} title
 */
HealthIncident.prototype['title'] = undefined;






export default HealthIncident;

