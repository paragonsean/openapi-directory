/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreditBankEmployer from './CreditBankEmployer';

/**
 * The CreditBankEmployment model module.
 * @module model/CreditBankEmployment
 * @version 2020-09-14_1.345.1
 */
class CreditBankEmployment {
    /**
     * Constructs a new <code>CreditBankEmployment</code>.
     * Detailed information for the bank employment.
     * @alias module:model/CreditBankEmployment
     * @param accountId {String} Plaid's unique identifier for the account.
     * @param bankEmploymentId {String} A unique identifier for the bank employment.
     * @param earliestDepositDate {Date} The date of the earliest deposit from this employer from within the period of the days requested.
     * @param employer {module:model/CreditBankEmployer} 
     * @param latestDepositDate {Date} The date of the most recent deposit from this employer.
     */
    constructor(accountId, bankEmploymentId, earliestDepositDate, employer, latestDepositDate) { 
        
        CreditBankEmployment.initialize(this, accountId, bankEmploymentId, earliestDepositDate, employer, latestDepositDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountId, bankEmploymentId, earliestDepositDate, employer, latestDepositDate) { 
        obj['account_id'] = accountId;
        obj['bank_employment_id'] = bankEmploymentId;
        obj['earliest_deposit_date'] = earliestDepositDate;
        obj['employer'] = employer;
        obj['latest_deposit_date'] = latestDepositDate;
    }

    /**
     * Constructs a <code>CreditBankEmployment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreditBankEmployment} obj Optional instance to populate.
     * @return {module:model/CreditBankEmployment} The populated <code>CreditBankEmployment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreditBankEmployment();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('bank_employment_id')) {
                obj['bank_employment_id'] = ApiClient.convertToType(data['bank_employment_id'], 'String');
            }
            if (data.hasOwnProperty('earliest_deposit_date')) {
                obj['earliest_deposit_date'] = ApiClient.convertToType(data['earliest_deposit_date'], 'Date');
            }
            if (data.hasOwnProperty('employer')) {
                obj['employer'] = CreditBankEmployer.constructFromObject(data['employer']);
            }
            if (data.hasOwnProperty('latest_deposit_date')) {
                obj['latest_deposit_date'] = ApiClient.convertToType(data['latest_deposit_date'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreditBankEmployment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreditBankEmployment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreditBankEmployment.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        // ensure the json data is a string
        if (data['bank_employment_id'] && !(typeof data['bank_employment_id'] === 'string' || data['bank_employment_id'] instanceof String)) {
            throw new Error("Expected the field `bank_employment_id` to be a primitive type in the JSON string but got " + data['bank_employment_id']);
        }
        // validate the optional field `employer`
        if (data['employer']) { // data not null
          CreditBankEmployer.validateJSON(data['employer']);
        }

        return true;
    }


}

CreditBankEmployment.RequiredProperties = ["account_id", "bank_employment_id", "earliest_deposit_date", "employer", "latest_deposit_date"];

/**
 * Plaid's unique identifier for the account.
 * @member {String} account_id
 */
CreditBankEmployment.prototype['account_id'] = undefined;

/**
 * A unique identifier for the bank employment.
 * @member {String} bank_employment_id
 */
CreditBankEmployment.prototype['bank_employment_id'] = undefined;

/**
 * The date of the earliest deposit from this employer from within the period of the days requested.
 * @member {Date} earliest_deposit_date
 */
CreditBankEmployment.prototype['earliest_deposit_date'] = undefined;

/**
 * @member {module:model/CreditBankEmployer} employer
 */
CreditBankEmployment.prototype['employer'] = undefined;

/**
 * The date of the most recent deposit from this employer.
 * @member {Date} latest_deposit_date
 */
CreditBankEmployment.prototype['latest_deposit_date'] = undefined;






export default CreditBankEmployment;

