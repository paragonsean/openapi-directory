/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LoanIdentifierType from './LoanIdentifierType';

/**
 * The LoanIdentifier model module.
 * @module model/LoanIdentifier
 * @version 2020-09-14_1.345.1
 */
class LoanIdentifier {
    /**
     * Constructs a new <code>LoanIdentifier</code>.
     * The information used to identify this loan by various parties to the transaction or other organizations.
     * @alias module:model/LoanIdentifier
     * @extends Object
     * @param loanIdentifier {String} The value of the identifier for the specified type.
     * @param loanIdentifierType {module:model/LoanIdentifierType} 
     */
    constructor(loanIdentifier, loanIdentifierType) { 
        
        LoanIdentifier.initialize(this, loanIdentifier, loanIdentifierType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, loanIdentifier, loanIdentifierType) { 
        obj['LoanIdentifier'] = loanIdentifier;
        obj['LoanIdentifierType'] = loanIdentifierType;
    }

    /**
     * Constructs a <code>LoanIdentifier</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoanIdentifier} obj Optional instance to populate.
     * @return {module:model/LoanIdentifier} The populated <code>LoanIdentifier</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoanIdentifier();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('LoanIdentifier')) {
                obj['LoanIdentifier'] = ApiClient.convertToType(data['LoanIdentifier'], 'String');
            }
            if (data.hasOwnProperty('LoanIdentifierType')) {
                obj['LoanIdentifierType'] = LoanIdentifierType.constructFromObject(data['LoanIdentifierType']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoanIdentifier</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoanIdentifier</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LoanIdentifier.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['LoanIdentifier'] && !(typeof data['LoanIdentifier'] === 'string' || data['LoanIdentifier'] instanceof String)) {
            throw new Error("Expected the field `LoanIdentifier` to be a primitive type in the JSON string but got " + data['LoanIdentifier']);
        }

        return true;
    }


}

LoanIdentifier.RequiredProperties = ["LoanIdentifier", "LoanIdentifierType"];

/**
 * The value of the identifier for the specified type.
 * @member {String} LoanIdentifier
 */
LoanIdentifier.prototype['LoanIdentifier'] = undefined;

/**
 * @member {module:model/LoanIdentifierType} LoanIdentifierType
 */
LoanIdentifier.prototype['LoanIdentifierType'] = undefined;






export default LoanIdentifier;

