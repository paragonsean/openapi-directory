/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentAmount from './PaymentAmount';
import PaymentAmountCurrency from './PaymentAmountCurrency';

/**
 * The PaymentConsentPeriodicAmountAmount model module.
 * @module model/PaymentConsentPeriodicAmountAmount
 * @version 2020-09-14_1.345.1
 */
class PaymentConsentPeriodicAmountAmount {
    /**
     * Constructs a new <code>PaymentConsentPeriodicAmountAmount</code>.
     * Maximum cumulative amount for all payments in the specified interval.
     * @alias module:model/PaymentConsentPeriodicAmountAmount
     * @implements module:model/PaymentAmount
     * @param currency {module:model/PaymentAmountCurrency} 
     * @param value {Number} The amount of the payment. Must contain at most two digits of precision e.g. `1.23`. Minimum accepted value is `1`.
     */
    constructor(currency, value) { 
        PaymentAmount.initialize(this, currency, value);
        PaymentConsentPeriodicAmountAmount.initialize(this, currency, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currency, value) { 
        obj['currency'] = currency;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>PaymentConsentPeriodicAmountAmount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentConsentPeriodicAmountAmount} obj Optional instance to populate.
     * @return {module:model/PaymentConsentPeriodicAmountAmount} The populated <code>PaymentConsentPeriodicAmountAmount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentConsentPeriodicAmountAmount();
            PaymentAmount.constructFromObject(data, obj);

            if (data.hasOwnProperty('currency')) {
                obj['currency'] = PaymentAmountCurrency.constructFromObject(data['currency']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentConsentPeriodicAmountAmount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentConsentPeriodicAmountAmount</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaymentConsentPeriodicAmountAmount.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

PaymentConsentPeriodicAmountAmount.RequiredProperties = ["currency", "value"];

/**
 * @member {module:model/PaymentAmountCurrency} currency
 */
PaymentConsentPeriodicAmountAmount.prototype['currency'] = undefined;

/**
 * The amount of the payment. Must contain at most two digits of precision e.g. `1.23`. Minimum accepted value is `1`.
 * @member {Number} value
 */
PaymentConsentPeriodicAmountAmount.prototype['value'] = undefined;


// Implement PaymentAmount interface:
/**
 * @member {module:model/PaymentAmountCurrency} currency
 */
PaymentAmount.prototype['currency'] = undefined;
/**
 * The amount of the payment. Must contain at most two digits of precision e.g. `1.23`. Minimum accepted value is `1`.
 * @member {Number} value
 */
PaymentAmount.prototype['value'] = undefined;




export default PaymentConsentPeriodicAmountAmount;

