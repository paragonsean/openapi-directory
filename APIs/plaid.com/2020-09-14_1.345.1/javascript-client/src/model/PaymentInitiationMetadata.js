/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentInitiationStandingOrderMetadata from './PaymentInitiationStandingOrderMetadata';

/**
 * The PaymentInitiationMetadata model module.
 * @module model/PaymentInitiationMetadata
 * @version 2020-09-14_1.345.1
 */
class PaymentInitiationMetadata {
    /**
     * Constructs a new <code>PaymentInitiationMetadata</code>.
     * Metadata that captures what specific payment configurations an institution supports when making Payment Initiation requests.
     * @alias module:model/PaymentInitiationMetadata
     * @extends Object
     * @param maximumPaymentAmount {Object.<String, String>} A mapping of currency to maximum payment amount (denominated in the smallest unit of currency) supported by the institution.  Example: `{\"GBP\": \"10000\"}` 
     * @param standingOrderMetadata {module:model/PaymentInitiationStandingOrderMetadata} 
     * @param supportsInternationalPayments {Boolean} Indicates whether the institution supports payments from a different country.
     * @param supportsRefundDetails {Boolean} Indicates whether the institution supports returning refund details when initiating a payment.
     * @param supportsSepaInstant {Boolean} Indicates whether the institution supports SEPA Instant payments.
     */
    constructor(maximumPaymentAmount, standingOrderMetadata, supportsInternationalPayments, supportsRefundDetails, supportsSepaInstant) { 
        
        PaymentInitiationMetadata.initialize(this, maximumPaymentAmount, standingOrderMetadata, supportsInternationalPayments, supportsRefundDetails, supportsSepaInstant);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, maximumPaymentAmount, standingOrderMetadata, supportsInternationalPayments, supportsRefundDetails, supportsSepaInstant) { 
        obj['maximum_payment_amount'] = maximumPaymentAmount;
        obj['standing_order_metadata'] = standingOrderMetadata;
        obj['supports_international_payments'] = supportsInternationalPayments;
        obj['supports_refund_details'] = supportsRefundDetails;
        obj['supports_sepa_instant'] = supportsSepaInstant;
    }

    /**
     * Constructs a <code>PaymentInitiationMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentInitiationMetadata} obj Optional instance to populate.
     * @return {module:model/PaymentInitiationMetadata} The populated <code>PaymentInitiationMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentInitiationMetadata();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('maximum_payment_amount')) {
                obj['maximum_payment_amount'] = ApiClient.convertToType(data['maximum_payment_amount'], {'String': 'String'});
            }
            if (data.hasOwnProperty('standing_order_metadata')) {
                obj['standing_order_metadata'] = PaymentInitiationStandingOrderMetadata.constructFromObject(data['standing_order_metadata']);
            }
            if (data.hasOwnProperty('supports_international_payments')) {
                obj['supports_international_payments'] = ApiClient.convertToType(data['supports_international_payments'], 'Boolean');
            }
            if (data.hasOwnProperty('supports_refund_details')) {
                obj['supports_refund_details'] = ApiClient.convertToType(data['supports_refund_details'], 'Boolean');
            }
            if (data.hasOwnProperty('supports_sepa_instant')) {
                obj['supports_sepa_instant'] = ApiClient.convertToType(data['supports_sepa_instant'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentInitiationMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentInitiationMetadata</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaymentInitiationMetadata.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

PaymentInitiationMetadata.RequiredProperties = ["maximum_payment_amount", "standing_order_metadata", "supports_international_payments", "supports_refund_details", "supports_sepa_instant"];

/**
 * A mapping of currency to maximum payment amount (denominated in the smallest unit of currency) supported by the institution.  Example: `{\"GBP\": \"10000\"}` 
 * @member {Object.<String, String>} maximum_payment_amount
 */
PaymentInitiationMetadata.prototype['maximum_payment_amount'] = undefined;

/**
 * @member {module:model/PaymentInitiationStandingOrderMetadata} standing_order_metadata
 */
PaymentInitiationMetadata.prototype['standing_order_metadata'] = undefined;

/**
 * Indicates whether the institution supports payments from a different country.
 * @member {Boolean} supports_international_payments
 */
PaymentInitiationMetadata.prototype['supports_international_payments'] = undefined;

/**
 * Indicates whether the institution supports returning refund details when initiating a payment.
 * @member {Boolean} supports_refund_details
 */
PaymentInitiationMetadata.prototype['supports_refund_details'] = undefined;

/**
 * Indicates whether the institution supports SEPA Instant payments.
 * @member {Boolean} supports_sepa_instant
 */
PaymentInitiationMetadata.prototype['supports_sepa_instant'] = undefined;






export default PaymentInitiationMetadata;

