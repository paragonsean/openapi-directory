/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetTransactionCategoryType from './AssetTransactionCategoryType';
import AssetTransactionType from './AssetTransactionType';

/**
 * The AssetTransactionDetail model module.
 * @module model/AssetTransactionDetail
 * @version 2020-09-14_1.345.1
 */
class AssetTransactionDetail {
    /**
     * Constructs a new <code>AssetTransactionDetail</code>.
     * Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
     * @alias module:model/AssetTransactionDetail
     * @extends Object
     * @param assetTransactionAmount {Number} Asset Transaction Amount.
     * @param assetTransactionCategoryType {module:model/AssetTransactionCategoryType} 
     * @param assetTransactionDate {Date} Asset Transaction Date.
     * @param assetTransactionPaidByName {String} Populate with who did the transaction.
     * @param assetTransactionPostDate {Date} Asset Transaction Post Date.
     * @param assetTransactionType {module:model/AssetTransactionType} 
     * @param assetTransactionTypeAdditionalDescription {String} FI Provided - examples are atm, cash, check, credit, debit, deposit, directDebit, directDeposit, dividend, fee, interest, other, payment, pointOfSale, repeatPayment, serviceCharge, transfer.
     * @param assetTransactionUniqueIdentifier {String} A vendor created unique Identifier.
     * @param financialInstitutionTransactionIdentifier {String} FI provided Transaction Identifier.
     */
    constructor(assetTransactionAmount, assetTransactionCategoryType, assetTransactionDate, assetTransactionPaidByName, assetTransactionPostDate, assetTransactionType, assetTransactionTypeAdditionalDescription, assetTransactionUniqueIdentifier, financialInstitutionTransactionIdentifier) { 
        
        AssetTransactionDetail.initialize(this, assetTransactionAmount, assetTransactionCategoryType, assetTransactionDate, assetTransactionPaidByName, assetTransactionPostDate, assetTransactionType, assetTransactionTypeAdditionalDescription, assetTransactionUniqueIdentifier, financialInstitutionTransactionIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, assetTransactionAmount, assetTransactionCategoryType, assetTransactionDate, assetTransactionPaidByName, assetTransactionPostDate, assetTransactionType, assetTransactionTypeAdditionalDescription, assetTransactionUniqueIdentifier, financialInstitutionTransactionIdentifier) { 
        obj['AssetTransactionAmount'] = assetTransactionAmount;
        obj['AssetTransactionCategoryType'] = assetTransactionCategoryType;
        obj['AssetTransactionDate'] = assetTransactionDate;
        obj['AssetTransactionPaidByName'] = assetTransactionPaidByName;
        obj['AssetTransactionPostDate'] = assetTransactionPostDate;
        obj['AssetTransactionType'] = assetTransactionType;
        obj['AssetTransactionTypeAdditionalDescription'] = assetTransactionTypeAdditionalDescription;
        obj['AssetTransactionUniqueIdentifier'] = assetTransactionUniqueIdentifier;
        obj['FinancialInstitutionTransactionIdentifier'] = financialInstitutionTransactionIdentifier;
    }

    /**
     * Constructs a <code>AssetTransactionDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetTransactionDetail} obj Optional instance to populate.
     * @return {module:model/AssetTransactionDetail} The populated <code>AssetTransactionDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetTransactionDetail();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('AssetTransactionAmount')) {
                obj['AssetTransactionAmount'] = ApiClient.convertToType(data['AssetTransactionAmount'], 'Number');
            }
            if (data.hasOwnProperty('AssetTransactionCategoryType')) {
                obj['AssetTransactionCategoryType'] = AssetTransactionCategoryType.constructFromObject(data['AssetTransactionCategoryType']);
            }
            if (data.hasOwnProperty('AssetTransactionDate')) {
                obj['AssetTransactionDate'] = ApiClient.convertToType(data['AssetTransactionDate'], 'Date');
            }
            if (data.hasOwnProperty('AssetTransactionPaidByName')) {
                obj['AssetTransactionPaidByName'] = ApiClient.convertToType(data['AssetTransactionPaidByName'], 'String');
            }
            if (data.hasOwnProperty('AssetTransactionPostDate')) {
                obj['AssetTransactionPostDate'] = ApiClient.convertToType(data['AssetTransactionPostDate'], 'Date');
            }
            if (data.hasOwnProperty('AssetTransactionType')) {
                obj['AssetTransactionType'] = AssetTransactionType.constructFromObject(data['AssetTransactionType']);
            }
            if (data.hasOwnProperty('AssetTransactionTypeAdditionalDescription')) {
                obj['AssetTransactionTypeAdditionalDescription'] = ApiClient.convertToType(data['AssetTransactionTypeAdditionalDescription'], 'String');
            }
            if (data.hasOwnProperty('AssetTransactionUniqueIdentifier')) {
                obj['AssetTransactionUniqueIdentifier'] = ApiClient.convertToType(data['AssetTransactionUniqueIdentifier'], 'String');
            }
            if (data.hasOwnProperty('FinancialInstitutionTransactionIdentifier')) {
                obj['FinancialInstitutionTransactionIdentifier'] = ApiClient.convertToType(data['FinancialInstitutionTransactionIdentifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetTransactionDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetTransactionDetail</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssetTransactionDetail.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['AssetTransactionPaidByName'] && !(typeof data['AssetTransactionPaidByName'] === 'string' || data['AssetTransactionPaidByName'] instanceof String)) {
            throw new Error("Expected the field `AssetTransactionPaidByName` to be a primitive type in the JSON string but got " + data['AssetTransactionPaidByName']);
        }
        // ensure the json data is a string
        if (data['AssetTransactionTypeAdditionalDescription'] && !(typeof data['AssetTransactionTypeAdditionalDescription'] === 'string' || data['AssetTransactionTypeAdditionalDescription'] instanceof String)) {
            throw new Error("Expected the field `AssetTransactionTypeAdditionalDescription` to be a primitive type in the JSON string but got " + data['AssetTransactionTypeAdditionalDescription']);
        }
        // ensure the json data is a string
        if (data['AssetTransactionUniqueIdentifier'] && !(typeof data['AssetTransactionUniqueIdentifier'] === 'string' || data['AssetTransactionUniqueIdentifier'] instanceof String)) {
            throw new Error("Expected the field `AssetTransactionUniqueIdentifier` to be a primitive type in the JSON string but got " + data['AssetTransactionUniqueIdentifier']);
        }
        // ensure the json data is a string
        if (data['FinancialInstitutionTransactionIdentifier'] && !(typeof data['FinancialInstitutionTransactionIdentifier'] === 'string' || data['FinancialInstitutionTransactionIdentifier'] instanceof String)) {
            throw new Error("Expected the field `FinancialInstitutionTransactionIdentifier` to be a primitive type in the JSON string but got " + data['FinancialInstitutionTransactionIdentifier']);
        }

        return true;
    }


}

AssetTransactionDetail.RequiredProperties = ["AssetTransactionAmount", "AssetTransactionCategoryType", "AssetTransactionDate", "AssetTransactionPaidByName", "AssetTransactionPostDate", "AssetTransactionType", "AssetTransactionTypeAdditionalDescription", "AssetTransactionUniqueIdentifier", "FinancialInstitutionTransactionIdentifier"];

/**
 * Asset Transaction Amount.
 * @member {Number} AssetTransactionAmount
 */
AssetTransactionDetail.prototype['AssetTransactionAmount'] = undefined;

/**
 * @member {module:model/AssetTransactionCategoryType} AssetTransactionCategoryType
 */
AssetTransactionDetail.prototype['AssetTransactionCategoryType'] = undefined;

/**
 * Asset Transaction Date.
 * @member {Date} AssetTransactionDate
 */
AssetTransactionDetail.prototype['AssetTransactionDate'] = undefined;

/**
 * Populate with who did the transaction.
 * @member {String} AssetTransactionPaidByName
 */
AssetTransactionDetail.prototype['AssetTransactionPaidByName'] = undefined;

/**
 * Asset Transaction Post Date.
 * @member {Date} AssetTransactionPostDate
 */
AssetTransactionDetail.prototype['AssetTransactionPostDate'] = undefined;

/**
 * @member {module:model/AssetTransactionType} AssetTransactionType
 */
AssetTransactionDetail.prototype['AssetTransactionType'] = undefined;

/**
 * FI Provided - examples are atm, cash, check, credit, debit, deposit, directDebit, directDeposit, dividend, fee, interest, other, payment, pointOfSale, repeatPayment, serviceCharge, transfer.
 * @member {String} AssetTransactionTypeAdditionalDescription
 */
AssetTransactionDetail.prototype['AssetTransactionTypeAdditionalDescription'] = undefined;

/**
 * A vendor created unique Identifier.
 * @member {String} AssetTransactionUniqueIdentifier
 */
AssetTransactionDetail.prototype['AssetTransactionUniqueIdentifier'] = undefined;

/**
 * FI provided Transaction Identifier.
 * @member {String} FinancialInstitutionTransactionIdentifier
 */
AssetTransactionDetail.prototype['FinancialInstitutionTransactionIdentifier'] = undefined;






export default AssetTransactionDetail;

