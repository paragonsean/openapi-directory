/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IncomeBreakdown from './IncomeBreakdown';
import PayPeriodDetails from './PayPeriodDetails';
import PaystubOverrideEmployee from './PaystubOverrideEmployee';
import PaystubOverrideEmployer from './PaystubOverrideEmployer';

/**
 * The PaystubOverride model module.
 * @module model/PaystubOverride
 * @version 2020-09-14_1.345.1
 */
class PaystubOverride {
    /**
     * Constructs a new <code>PaystubOverride</code>.
     * An object representing data from a paystub.
     * @alias module:model/PaystubOverride
     */
    constructor() { 
        
        PaystubOverride.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaystubOverride</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaystubOverride} obj Optional instance to populate.
     * @return {module:model/PaystubOverride} The populated <code>PaystubOverride</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaystubOverride();

            if (data.hasOwnProperty('employee')) {
                obj['employee'] = PaystubOverrideEmployee.constructFromObject(data['employee']);
            }
            if (data.hasOwnProperty('employer')) {
                obj['employer'] = PaystubOverrideEmployer.constructFromObject(data['employer']);
            }
            if (data.hasOwnProperty('income_breakdown')) {
                obj['income_breakdown'] = ApiClient.convertToType(data['income_breakdown'], [IncomeBreakdown]);
            }
            if (data.hasOwnProperty('pay_period_details')) {
                obj['pay_period_details'] = PayPeriodDetails.constructFromObject(data['pay_period_details']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaystubOverride</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaystubOverride</code>.
     */
    static validateJSON(data) {
        // validate the optional field `employee`
        if (data['employee']) { // data not null
          PaystubOverrideEmployee.validateJSON(data['employee']);
        }
        // validate the optional field `employer`
        if (data['employer']) { // data not null
          PaystubOverrideEmployer.validateJSON(data['employer']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['income_breakdown'])) {
            throw new Error("Expected the field `income_breakdown` to be an array in the JSON data but got " + data['income_breakdown']);
        }

        return true;
    }


}



/**
 * @member {module:model/PaystubOverrideEmployee} employee
 */
PaystubOverride.prototype['employee'] = undefined;

/**
 * @member {module:model/PaystubOverrideEmployer} employer
 */
PaystubOverride.prototype['employer'] = undefined;

/**
 * @member {Array.<module:model/IncomeBreakdown>} income_breakdown
 */
PaystubOverride.prototype['income_breakdown'] = undefined;

/**
 * @member {module:model/PayPeriodDetails} pay_period_details
 */
PaystubOverride.prototype['pay_period_details'] = undefined;






export default PaystubOverride;

