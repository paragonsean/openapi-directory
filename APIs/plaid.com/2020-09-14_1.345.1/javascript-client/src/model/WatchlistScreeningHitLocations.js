/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WatchlistScreeningHitLocations model module.
 * @module model/WatchlistScreeningHitLocations
 * @version 2020-09-14_1.345.1
 */
class WatchlistScreeningHitLocations {
    /**
     * Constructs a new <code>WatchlistScreeningHitLocations</code>.
     * Location information for the associated individual watchlist hit
     * @alias module:model/WatchlistScreeningHitLocations
     * @extends Object
     * @param country {String} Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
     * @param full {String} The full location string, potentially including elements like street, city, postal codes and country codes. Note that this is not necessarily a complete or well-formatted address.
     */
    constructor(country, full) { 
        
        WatchlistScreeningHitLocations.initialize(this, country, full);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, country, full) { 
        obj['country'] = country;
        obj['full'] = full;
    }

    /**
     * Constructs a <code>WatchlistScreeningHitLocations</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WatchlistScreeningHitLocations} obj Optional instance to populate.
     * @return {module:model/WatchlistScreeningHitLocations} The populated <code>WatchlistScreeningHitLocations</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WatchlistScreeningHitLocations();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('full')) {
                obj['full'] = ApiClient.convertToType(data['full'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WatchlistScreeningHitLocations</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WatchlistScreeningHitLocations</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WatchlistScreeningHitLocations.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['full'] && !(typeof data['full'] === 'string' || data['full'] instanceof String)) {
            throw new Error("Expected the field `full` to be a primitive type in the JSON string but got " + data['full']);
        }

        return true;
    }


}

WatchlistScreeningHitLocations.RequiredProperties = ["country", "full"];

/**
 * Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
 * @member {String} country
 */
WatchlistScreeningHitLocations.prototype['country'] = undefined;

/**
 * The full location string, potentially including elements like street, city, postal codes and country codes. Note that this is not necessarily a complete or well-formatted address.
 * @member {String} full
 */
WatchlistScreeningHitLocations.prototype['full'] = undefined;






export default WatchlistScreeningHitLocations;

