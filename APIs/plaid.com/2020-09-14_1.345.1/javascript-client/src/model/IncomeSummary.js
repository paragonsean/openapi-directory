/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmployeeIncomeSummaryFieldString from './EmployeeIncomeSummaryFieldString';
import EmployerIncomeSummaryFieldString from './EmployerIncomeSummaryFieldString';
import PayFrequency from './PayFrequency';
import ProjectedIncomeSummaryFieldNumber from './ProjectedIncomeSummaryFieldNumber';
import TransactionData from './TransactionData';
import YTDGrossIncomeSummaryFieldNumber from './YTDGrossIncomeSummaryFieldNumber';
import YTDNetIncomeSummaryFieldNumber from './YTDNetIncomeSummaryFieldNumber';

/**
 * The IncomeSummary model module.
 * @module model/IncomeSummary
 * @version 2020-09-14_1.345.1
 */
class IncomeSummary {
    /**
     * Constructs a new <code>IncomeSummary</code>.
     * The verified fields from a paystub verification. All fields are provided as reported on the paystub.
     * @alias module:model/IncomeSummary
     * @extends Object
     * @param employeeName {module:model/EmployeeIncomeSummaryFieldString} 
     * @param employerName {module:model/EmployerIncomeSummaryFieldString} 
     * @param payFrequency {module:model/PayFrequency} 
     * @param projectedWage {module:model/ProjectedIncomeSummaryFieldNumber} 
     * @param verifiedTransaction {module:model/TransactionData} 
     * @param ytdGrossIncome {module:model/YTDGrossIncomeSummaryFieldNumber} 
     * @param ytdNetIncome {module:model/YTDNetIncomeSummaryFieldNumber} 
     */
    constructor(employeeName, employerName, payFrequency, projectedWage, verifiedTransaction, ytdGrossIncome, ytdNetIncome) { 
        
        IncomeSummary.initialize(this, employeeName, employerName, payFrequency, projectedWage, verifiedTransaction, ytdGrossIncome, ytdNetIncome);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, employeeName, employerName, payFrequency, projectedWage, verifiedTransaction, ytdGrossIncome, ytdNetIncome) { 
        obj['employee_name'] = employeeName;
        obj['employer_name'] = employerName;
        obj['pay_frequency'] = payFrequency;
        obj['projected_wage'] = projectedWage;
        obj['verified_transaction'] = verifiedTransaction;
        obj['ytd_gross_income'] = ytdGrossIncome;
        obj['ytd_net_income'] = ytdNetIncome;
    }

    /**
     * Constructs a <code>IncomeSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IncomeSummary} obj Optional instance to populate.
     * @return {module:model/IncomeSummary} The populated <code>IncomeSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IncomeSummary();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('employee_name')) {
                obj['employee_name'] = EmployeeIncomeSummaryFieldString.constructFromObject(data['employee_name']);
            }
            if (data.hasOwnProperty('employer_name')) {
                obj['employer_name'] = EmployerIncomeSummaryFieldString.constructFromObject(data['employer_name']);
            }
            if (data.hasOwnProperty('pay_frequency')) {
                obj['pay_frequency'] = PayFrequency.constructFromObject(data['pay_frequency']);
            }
            if (data.hasOwnProperty('projected_wage')) {
                obj['projected_wage'] = ProjectedIncomeSummaryFieldNumber.constructFromObject(data['projected_wage']);
            }
            if (data.hasOwnProperty('verified_transaction')) {
                obj['verified_transaction'] = TransactionData.constructFromObject(data['verified_transaction']);
            }
            if (data.hasOwnProperty('ytd_gross_income')) {
                obj['ytd_gross_income'] = YTDGrossIncomeSummaryFieldNumber.constructFromObject(data['ytd_gross_income']);
            }
            if (data.hasOwnProperty('ytd_net_income')) {
                obj['ytd_net_income'] = YTDNetIncomeSummaryFieldNumber.constructFromObject(data['ytd_net_income']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IncomeSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IncomeSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IncomeSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `employee_name`
        if (data['employee_name']) { // data not null
          EmployeeIncomeSummaryFieldString.validateJSON(data['employee_name']);
        }
        // validate the optional field `employer_name`
        if (data['employer_name']) { // data not null
          EmployerIncomeSummaryFieldString.validateJSON(data['employer_name']);
        }
        // validate the optional field `projected_wage`
        if (data['projected_wage']) { // data not null
          ProjectedIncomeSummaryFieldNumber.validateJSON(data['projected_wage']);
        }
        // validate the optional field `ytd_gross_income`
        if (data['ytd_gross_income']) { // data not null
          YTDGrossIncomeSummaryFieldNumber.validateJSON(data['ytd_gross_income']);
        }
        // validate the optional field `ytd_net_income`
        if (data['ytd_net_income']) { // data not null
          YTDNetIncomeSummaryFieldNumber.validateJSON(data['ytd_net_income']);
        }

        return true;
    }


}

IncomeSummary.RequiredProperties = ["employee_name", "employer_name", "pay_frequency", "projected_wage", "verified_transaction", "ytd_gross_income", "ytd_net_income"];

/**
 * @member {module:model/EmployeeIncomeSummaryFieldString} employee_name
 */
IncomeSummary.prototype['employee_name'] = undefined;

/**
 * @member {module:model/EmployerIncomeSummaryFieldString} employer_name
 */
IncomeSummary.prototype['employer_name'] = undefined;

/**
 * @member {module:model/PayFrequency} pay_frequency
 */
IncomeSummary.prototype['pay_frequency'] = undefined;

/**
 * @member {module:model/ProjectedIncomeSummaryFieldNumber} projected_wage
 */
IncomeSummary.prototype['projected_wage'] = undefined;

/**
 * @member {module:model/TransactionData} verified_transaction
 */
IncomeSummary.prototype['verified_transaction'] = undefined;

/**
 * @member {module:model/YTDGrossIncomeSummaryFieldNumber} ytd_gross_income
 */
IncomeSummary.prototype['ytd_gross_income'] = undefined;

/**
 * @member {module:model/YTDNetIncomeSummaryFieldNumber} ytd_net_income
 */
IncomeSummary.prototype['ytd_net_income'] = undefined;






export default IncomeSummary;

