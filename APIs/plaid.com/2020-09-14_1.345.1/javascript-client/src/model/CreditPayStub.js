/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreditDocumentMetadata from './CreditDocumentMetadata';
import CreditPayStubDeductions from './CreditPayStubDeductions';
import CreditPayStubEarnings from './CreditPayStubEarnings';
import CreditPayStubEmployee from './CreditPayStubEmployee';
import CreditPayStubEmployer from './CreditPayStubEmployer';
import CreditPayStubNetPay from './CreditPayStubNetPay';
import PayStubPayPeriodDetails from './PayStubPayPeriodDetails';

/**
 * The CreditPayStub model module.
 * @module model/CreditPayStub
 * @version 2020-09-14_1.345.1
 */
class CreditPayStub {
    /**
     * Constructs a new <code>CreditPayStub</code>.
     * An object representing an end user&#39;s pay stub.
     * @alias module:model/CreditPayStub
     * @extends Object
     * @param deductions {module:model/CreditPayStubDeductions} 
     * @param documentId {String} An identifier of the document referenced by the document metadata.
     * @param documentMetadata {module:model/CreditDocumentMetadata} 
     * @param earnings {module:model/CreditPayStubEarnings} 
     * @param employee {module:model/CreditPayStubEmployee} 
     * @param employer {module:model/CreditPayStubEmployer} 
     * @param netPay {module:model/CreditPayStubNetPay} 
     * @param payPeriodDetails {module:model/PayStubPayPeriodDetails} 
     */
    constructor(deductions, documentId, documentMetadata, earnings, employee, employer, netPay, payPeriodDetails) { 
        
        CreditPayStub.initialize(this, deductions, documentId, documentMetadata, earnings, employee, employer, netPay, payPeriodDetails);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, deductions, documentId, documentMetadata, earnings, employee, employer, netPay, payPeriodDetails) { 
        obj['deductions'] = deductions;
        obj['document_id'] = documentId;
        obj['document_metadata'] = documentMetadata;
        obj['earnings'] = earnings;
        obj['employee'] = employee;
        obj['employer'] = employer;
        obj['net_pay'] = netPay;
        obj['pay_period_details'] = payPeriodDetails;
    }

    /**
     * Constructs a <code>CreditPayStub</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreditPayStub} obj Optional instance to populate.
     * @return {module:model/CreditPayStub} The populated <code>CreditPayStub</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreditPayStub();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('deductions')) {
                obj['deductions'] = CreditPayStubDeductions.constructFromObject(data['deductions']);
            }
            if (data.hasOwnProperty('document_id')) {
                obj['document_id'] = ApiClient.convertToType(data['document_id'], 'String');
            }
            if (data.hasOwnProperty('document_metadata')) {
                obj['document_metadata'] = CreditDocumentMetadata.constructFromObject(data['document_metadata']);
            }
            if (data.hasOwnProperty('earnings')) {
                obj['earnings'] = CreditPayStubEarnings.constructFromObject(data['earnings']);
            }
            if (data.hasOwnProperty('employee')) {
                obj['employee'] = CreditPayStubEmployee.constructFromObject(data['employee']);
            }
            if (data.hasOwnProperty('employer')) {
                obj['employer'] = CreditPayStubEmployer.constructFromObject(data['employer']);
            }
            if (data.hasOwnProperty('net_pay')) {
                obj['net_pay'] = CreditPayStubNetPay.constructFromObject(data['net_pay']);
            }
            if (data.hasOwnProperty('pay_period_details')) {
                obj['pay_period_details'] = PayStubPayPeriodDetails.constructFromObject(data['pay_period_details']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreditPayStub</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreditPayStub</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreditPayStub.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['document_id'] && !(typeof data['document_id'] === 'string' || data['document_id'] instanceof String)) {
            throw new Error("Expected the field `document_id` to be a primitive type in the JSON string but got " + data['document_id']);
        }

        return true;
    }


}

CreditPayStub.RequiredProperties = ["deductions", "document_id", "document_metadata", "earnings", "employee", "employer", "net_pay", "pay_period_details"];

/**
 * @member {module:model/CreditPayStubDeductions} deductions
 */
CreditPayStub.prototype['deductions'] = undefined;

/**
 * An identifier of the document referenced by the document metadata.
 * @member {String} document_id
 */
CreditPayStub.prototype['document_id'] = undefined;

/**
 * @member {module:model/CreditDocumentMetadata} document_metadata
 */
CreditPayStub.prototype['document_metadata'] = undefined;

/**
 * @member {module:model/CreditPayStubEarnings} earnings
 */
CreditPayStub.prototype['earnings'] = undefined;

/**
 * @member {module:model/CreditPayStubEmployee} employee
 */
CreditPayStub.prototype['employee'] = undefined;

/**
 * @member {module:model/CreditPayStubEmployer} employer
 */
CreditPayStub.prototype['employer'] = undefined;

/**
 * @member {module:model/CreditPayStubNetPay} net_pay
 */
CreditPayStub.prototype['net_pay'] = undefined;

/**
 * @member {module:model/PayStubPayPeriodDetails} pay_period_details
 */
CreditPayStub.prototype['pay_period_details'] = undefined;






export default CreditPayStub;

