/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransactionsRuleDetails from './TransactionsRuleDetails';

/**
 * The TransactionsCategoryRule model module.
 * @module model/TransactionsCategoryRule
 * @version 2020-09-14_1.345.1
 */
class TransactionsCategoryRule {
    /**
     * Constructs a new <code>TransactionsCategoryRule</code>.
     * A representation of a transactions category rule.
     * @alias module:model/TransactionsCategoryRule
     */
    constructor() { 
        
        TransactionsCategoryRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransactionsCategoryRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionsCategoryRule} obj Optional instance to populate.
     * @return {module:model/TransactionsCategoryRule} The populated <code>TransactionsCategoryRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionsCategoryRule();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('item_id')) {
                obj['item_id'] = ApiClient.convertToType(data['item_id'], 'String');
            }
            if (data.hasOwnProperty('personal_finance_category')) {
                obj['personal_finance_category'] = ApiClient.convertToType(data['personal_finance_category'], 'String');
            }
            if (data.hasOwnProperty('rule_details')) {
                obj['rule_details'] = TransactionsRuleDetails.constructFromObject(data['rule_details']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionsCategoryRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionsCategoryRule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['item_id'] && !(typeof data['item_id'] === 'string' || data['item_id'] instanceof String)) {
            throw new Error("Expected the field `item_id` to be a primitive type in the JSON string but got " + data['item_id']);
        }
        // ensure the json data is a string
        if (data['personal_finance_category'] && !(typeof data['personal_finance_category'] === 'string' || data['personal_finance_category'] instanceof String)) {
            throw new Error("Expected the field `personal_finance_category` to be a primitive type in the JSON string but got " + data['personal_finance_category']);
        }
        // validate the optional field `rule_details`
        if (data['rule_details']) { // data not null
          TransactionsRuleDetails.validateJSON(data['rule_details']);
        }

        return true;
    }


}



/**
 * Date and time when a rule was created in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ). 
 * @member {Date} created_at
 */
TransactionsCategoryRule.prototype['created_at'] = undefined;

/**
 * A unique identifier of the rule created
 * @member {String} id
 */
TransactionsCategoryRule.prototype['id'] = undefined;

/**
 * A unique identifier of the Item the rule was created for.
 * @member {String} item_id
 */
TransactionsCategoryRule.prototype['item_id'] = undefined;

/**
 * Personal finance category unique identifier.  In the personal finance category taxonomy, this field is represented by the detailed category field. 
 * @member {String} personal_finance_category
 */
TransactionsCategoryRule.prototype['personal_finance_category'] = undefined;

/**
 * @member {module:model/TransactionsRuleDetails} rule_details
 */
TransactionsCategoryRule.prototype['rule_details'] = undefined;






export default TransactionsCategoryRule;

