/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WebhookEnvironmentValues from './WebhookEnvironmentValues';

/**
 * The SyncUpdatesAvailableWebhook model module.
 * @module model/SyncUpdatesAvailableWebhook
 * @version 2020-09-14_1.345.1
 */
class SyncUpdatesAvailableWebhook {
    /**
     * Constructs a new <code>SyncUpdatesAvailableWebhook</code>.
     * Fired when an Item&#39;s transactions change. This can be due to any event resulting in new changes, such as an initial 30-day transactions fetch upon the initialization of an Item with transactions, the backfill of historical transactions that occurs shortly after, or when changes are populated from a regularly-scheduled transactions update job. It is recommended to listen for the &#x60;SYNC_UPDATES_AVAILABLE&#x60; webhook when using the &#x60;/transactions/sync&#x60; endpoint. Note that when using &#x60;/transactions/sync&#x60; the older webhooks &#x60;INITIAL_UPDATE&#x60;, &#x60;HISTORICAL_UPDATE&#x60;, &#x60;DEFAULT_UPDATE&#x60;, and &#x60;TRANSACTIONS_REMOVED&#x60;, which are intended for use with &#x60;/transactions/get&#x60;, will also continue to be sent in order to maintain backwards compatibility. It is not necessary to listen for and respond to those webhooks when using &#x60;/transactions/sync&#x60;.  After receipt of this webhook, the new changes can be fetched for the Item from &#x60;/transactions/sync&#x60;.  Note that to receive this webhook for an Item, &#x60;/transactions/sync&#x60; must have been called at least once on that Item. This means that, unlike the &#x60;INITIAL_UPDATE&#x60; and &#x60;HISTORICAL_UPDATE&#x60; webhooks, it will not fire immediately upon Item creation. If &#x60;/transactions/sync&#x60; is called on an Item that was *not* initialized with Transactions, the webhook will fire twice: once the first 30 days of transactions data has been fetched, and a second time when all available historical transactions data has been fetched.  This webhook will typically not fire in the Sandbox environment, due to the lack of dynamic transactions data. To test this webhook in Sandbox, call &#x60;/sandbox/item/fire_webhook&#x60;.
     * @alias module:model/SyncUpdatesAvailableWebhook
     * @extends Object
     * @param environment {module:model/WebhookEnvironmentValues} 
     * @param historicalUpdateComplete {Boolean} Indicates if historical pull information is available.
     * @param initialUpdateComplete {Boolean} Indicates if initial pull information is available.
     * @param itemId {String} The `item_id` of the Item associated with this webhook, warning, or error
     * @param webhookCode {String} `SYNC_UPDATES_AVAILABLE`
     * @param webhookType {String} `TRANSACTIONS`
     */
    constructor(environment, historicalUpdateComplete, initialUpdateComplete, itemId, webhookCode, webhookType) { 
        
        SyncUpdatesAvailableWebhook.initialize(this, environment, historicalUpdateComplete, initialUpdateComplete, itemId, webhookCode, webhookType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, environment, historicalUpdateComplete, initialUpdateComplete, itemId, webhookCode, webhookType) { 
        obj['environment'] = environment;
        obj['historical_update_complete'] = historicalUpdateComplete;
        obj['initial_update_complete'] = initialUpdateComplete;
        obj['item_id'] = itemId;
        obj['webhook_code'] = webhookCode;
        obj['webhook_type'] = webhookType;
    }

    /**
     * Constructs a <code>SyncUpdatesAvailableWebhook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SyncUpdatesAvailableWebhook} obj Optional instance to populate.
     * @return {module:model/SyncUpdatesAvailableWebhook} The populated <code>SyncUpdatesAvailableWebhook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SyncUpdatesAvailableWebhook();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('environment')) {
                obj['environment'] = WebhookEnvironmentValues.constructFromObject(data['environment']);
            }
            if (data.hasOwnProperty('historical_update_complete')) {
                obj['historical_update_complete'] = ApiClient.convertToType(data['historical_update_complete'], 'Boolean');
            }
            if (data.hasOwnProperty('initial_update_complete')) {
                obj['initial_update_complete'] = ApiClient.convertToType(data['initial_update_complete'], 'Boolean');
            }
            if (data.hasOwnProperty('item_id')) {
                obj['item_id'] = ApiClient.convertToType(data['item_id'], 'String');
            }
            if (data.hasOwnProperty('webhook_code')) {
                obj['webhook_code'] = ApiClient.convertToType(data['webhook_code'], 'String');
            }
            if (data.hasOwnProperty('webhook_type')) {
                obj['webhook_type'] = ApiClient.convertToType(data['webhook_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SyncUpdatesAvailableWebhook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SyncUpdatesAvailableWebhook</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SyncUpdatesAvailableWebhook.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['item_id'] && !(typeof data['item_id'] === 'string' || data['item_id'] instanceof String)) {
            throw new Error("Expected the field `item_id` to be a primitive type in the JSON string but got " + data['item_id']);
        }
        // ensure the json data is a string
        if (data['webhook_code'] && !(typeof data['webhook_code'] === 'string' || data['webhook_code'] instanceof String)) {
            throw new Error("Expected the field `webhook_code` to be a primitive type in the JSON string but got " + data['webhook_code']);
        }
        // ensure the json data is a string
        if (data['webhook_type'] && !(typeof data['webhook_type'] === 'string' || data['webhook_type'] instanceof String)) {
            throw new Error("Expected the field `webhook_type` to be a primitive type in the JSON string but got " + data['webhook_type']);
        }

        return true;
    }


}

SyncUpdatesAvailableWebhook.RequiredProperties = ["environment", "historical_update_complete", "initial_update_complete", "item_id", "webhook_code", "webhook_type"];

/**
 * @member {module:model/WebhookEnvironmentValues} environment
 */
SyncUpdatesAvailableWebhook.prototype['environment'] = undefined;

/**
 * Indicates if historical pull information is available.
 * @member {Boolean} historical_update_complete
 */
SyncUpdatesAvailableWebhook.prototype['historical_update_complete'] = undefined;

/**
 * Indicates if initial pull information is available.
 * @member {Boolean} initial_update_complete
 */
SyncUpdatesAvailableWebhook.prototype['initial_update_complete'] = undefined;

/**
 * The `item_id` of the Item associated with this webhook, warning, or error
 * @member {String} item_id
 */
SyncUpdatesAvailableWebhook.prototype['item_id'] = undefined;

/**
 * `SYNC_UPDATES_AVAILABLE`
 * @member {String} webhook_code
 */
SyncUpdatesAvailableWebhook.prototype['webhook_code'] = undefined;

/**
 * `TRANSACTIONS`
 * @member {String} webhook_type
 */
SyncUpdatesAvailableWebhook.prototype['webhook_type'] = undefined;






export default SyncUpdatesAvailableWebhook;

