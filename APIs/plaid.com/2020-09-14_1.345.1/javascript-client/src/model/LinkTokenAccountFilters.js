/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreditFilter from './CreditFilter';
import DepositoryFilter from './DepositoryFilter';
import InvestmentFilter from './InvestmentFilter';
import LoanFilter from './LoanFilter';

/**
 * The LinkTokenAccountFilters model module.
 * @module model/LinkTokenAccountFilters
 * @version 2020-09-14_1.345.1
 */
class LinkTokenAccountFilters {
    /**
     * Constructs a new <code>LinkTokenAccountFilters</code>.
     * By default, Link will provide limited account filtering: it will only display Institutions that are compatible with all products supplied in the &#x60;products&#x60; parameter of &#x60;/link/token/create&#x60;, and, if &#x60;auth&#x60; is specified in the &#x60;products&#x60; array, will also filter out accounts other than &#x60;checking&#x60; and &#x60;savings&#x60; accounts on the Account Select pane. You can further limit the accounts shown in Link by using &#x60;account_filters&#x60; to specify the account subtypes to be shown in Link. Only the specified subtypes will be shown. This filtering applies to both the Account Select view (if enabled) and the Institution Select view. Institutions that do not support the selected subtypes will be omitted from Link. To indicate that all subtypes should be shown, use the value &#x60;\&quot;all\&quot;&#x60;. If the &#x60;account_filters&#x60; filter is used, any account type for which a filter is not specified will be entirely omitted from Link. For a full list of valid types and subtypes, see the [Account schema](https://plaid.com/docs/api/accounts#account-type-schema).  For institutions using OAuth, the filter will not affect the list of accounts shown by the bank in the OAuth window. 
     * @alias module:model/LinkTokenAccountFilters
     * @extends Object
     */
    constructor() { 
        
        LinkTokenAccountFilters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LinkTokenAccountFilters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LinkTokenAccountFilters} obj Optional instance to populate.
     * @return {module:model/LinkTokenAccountFilters} The populated <code>LinkTokenAccountFilters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LinkTokenAccountFilters();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('credit')) {
                obj['credit'] = CreditFilter.constructFromObject(data['credit']);
            }
            if (data.hasOwnProperty('depository')) {
                obj['depository'] = DepositoryFilter.constructFromObject(data['depository']);
            }
            if (data.hasOwnProperty('investment')) {
                obj['investment'] = InvestmentFilter.constructFromObject(data['investment']);
            }
            if (data.hasOwnProperty('loan')) {
                obj['loan'] = LoanFilter.constructFromObject(data['loan']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LinkTokenAccountFilters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LinkTokenAccountFilters</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {module:model/CreditFilter} credit
 */
LinkTokenAccountFilters.prototype['credit'] = undefined;

/**
 * @member {module:model/DepositoryFilter} depository
 */
LinkTokenAccountFilters.prototype['depository'] = undefined;

/**
 * @member {module:model/InvestmentFilter} investment
 */
LinkTokenAccountFilters.prototype['investment'] = undefined;

/**
 * @member {module:model/LoanFilter} loan
 */
LinkTokenAccountFilters.prototype['loan'] = undefined;






export default LinkTokenAccountFilters;

