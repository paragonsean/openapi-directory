/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PaymentMeta model module.
 * @module model/PaymentMeta
 * @version 2020-09-14_1.345.1
 */
class PaymentMeta {
    /**
     * Constructs a new <code>PaymentMeta</code>.
     * Transaction information specific to inter-bank transfers. If the transaction was not an inter-bank transfer, all fields will be &#x60;null&#x60;.  If the &#x60;transactions&#x60; object was returned by a Transactions endpoint such as &#x60;/transactions/get&#x60;, the &#x60;payment_meta&#x60; key will always appear, but no data elements are guaranteed. If the &#x60;transactions&#x60; object was returned by an Assets endpoint such as &#x60;/asset_report/get/&#x60; or &#x60;/asset_report/pdf/get&#x60;, this field will only appear in an Asset Report with Insights.
     * @alias module:model/PaymentMeta
     * @extends Object
     * @param byOrderOf {String} The party initiating a wire transfer. Will be `null` if the transaction is not a wire transfer.
     * @param payee {String} For transfers, the party that is receiving the transaction.
     * @param payer {String} For transfers, the party that is paying the transaction.
     * @param paymentMethod {String} The type of transfer, e.g. 'ACH'
     * @param paymentProcessor {String} The name of the payment processor
     * @param ppdId {String} The ACH PPD ID for the payer.
     * @param reason {String} The payer-supplied description of the transfer.
     * @param referenceNumber {String} The transaction reference number supplied by the financial institution.
     */
    constructor(byOrderOf, payee, payer, paymentMethod, paymentProcessor, ppdId, reason, referenceNumber) { 
        
        PaymentMeta.initialize(this, byOrderOf, payee, payer, paymentMethod, paymentProcessor, ppdId, reason, referenceNumber);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, byOrderOf, payee, payer, paymentMethod, paymentProcessor, ppdId, reason, referenceNumber) { 
        obj['by_order_of'] = byOrderOf;
        obj['payee'] = payee;
        obj['payer'] = payer;
        obj['payment_method'] = paymentMethod;
        obj['payment_processor'] = paymentProcessor;
        obj['ppd_id'] = ppdId;
        obj['reason'] = reason;
        obj['reference_number'] = referenceNumber;
    }

    /**
     * Constructs a <code>PaymentMeta</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentMeta} obj Optional instance to populate.
     * @return {module:model/PaymentMeta} The populated <code>PaymentMeta</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentMeta();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('by_order_of')) {
                obj['by_order_of'] = ApiClient.convertToType(data['by_order_of'], 'String');
            }
            if (data.hasOwnProperty('payee')) {
                obj['payee'] = ApiClient.convertToType(data['payee'], 'String');
            }
            if (data.hasOwnProperty('payer')) {
                obj['payer'] = ApiClient.convertToType(data['payer'], 'String');
            }
            if (data.hasOwnProperty('payment_method')) {
                obj['payment_method'] = ApiClient.convertToType(data['payment_method'], 'String');
            }
            if (data.hasOwnProperty('payment_processor')) {
                obj['payment_processor'] = ApiClient.convertToType(data['payment_processor'], 'String');
            }
            if (data.hasOwnProperty('ppd_id')) {
                obj['ppd_id'] = ApiClient.convertToType(data['ppd_id'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('reference_number')) {
                obj['reference_number'] = ApiClient.convertToType(data['reference_number'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentMeta</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentMeta</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaymentMeta.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['by_order_of'] && !(typeof data['by_order_of'] === 'string' || data['by_order_of'] instanceof String)) {
            throw new Error("Expected the field `by_order_of` to be a primitive type in the JSON string but got " + data['by_order_of']);
        }
        // ensure the json data is a string
        if (data['payee'] && !(typeof data['payee'] === 'string' || data['payee'] instanceof String)) {
            throw new Error("Expected the field `payee` to be a primitive type in the JSON string but got " + data['payee']);
        }
        // ensure the json data is a string
        if (data['payer'] && !(typeof data['payer'] === 'string' || data['payer'] instanceof String)) {
            throw new Error("Expected the field `payer` to be a primitive type in the JSON string but got " + data['payer']);
        }
        // ensure the json data is a string
        if (data['payment_method'] && !(typeof data['payment_method'] === 'string' || data['payment_method'] instanceof String)) {
            throw new Error("Expected the field `payment_method` to be a primitive type in the JSON string but got " + data['payment_method']);
        }
        // ensure the json data is a string
        if (data['payment_processor'] && !(typeof data['payment_processor'] === 'string' || data['payment_processor'] instanceof String)) {
            throw new Error("Expected the field `payment_processor` to be a primitive type in the JSON string but got " + data['payment_processor']);
        }
        // ensure the json data is a string
        if (data['ppd_id'] && !(typeof data['ppd_id'] === 'string' || data['ppd_id'] instanceof String)) {
            throw new Error("Expected the field `ppd_id` to be a primitive type in the JSON string but got " + data['ppd_id']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['reference_number'] && !(typeof data['reference_number'] === 'string' || data['reference_number'] instanceof String)) {
            throw new Error("Expected the field `reference_number` to be a primitive type in the JSON string but got " + data['reference_number']);
        }

        return true;
    }


}

PaymentMeta.RequiredProperties = ["by_order_of", "payee", "payer", "payment_method", "payment_processor", "ppd_id", "reason", "reference_number"];

/**
 * The party initiating a wire transfer. Will be `null` if the transaction is not a wire transfer.
 * @member {String} by_order_of
 */
PaymentMeta.prototype['by_order_of'] = undefined;

/**
 * For transfers, the party that is receiving the transaction.
 * @member {String} payee
 */
PaymentMeta.prototype['payee'] = undefined;

/**
 * For transfers, the party that is paying the transaction.
 * @member {String} payer
 */
PaymentMeta.prototype['payer'] = undefined;

/**
 * The type of transfer, e.g. 'ACH'
 * @member {String} payment_method
 */
PaymentMeta.prototype['payment_method'] = undefined;

/**
 * The name of the payment processor
 * @member {String} payment_processor
 */
PaymentMeta.prototype['payment_processor'] = undefined;

/**
 * The ACH PPD ID for the payer.
 * @member {String} ppd_id
 */
PaymentMeta.prototype['ppd_id'] = undefined;

/**
 * The payer-supplied description of the transfer.
 * @member {String} reason
 */
PaymentMeta.prototype['reason'] = undefined;

/**
 * The transaction reference number supplied by the financial institution.
 * @member {String} reference_number
 */
PaymentMeta.prototype['reference_number'] = undefined;






export default PaymentMeta;

