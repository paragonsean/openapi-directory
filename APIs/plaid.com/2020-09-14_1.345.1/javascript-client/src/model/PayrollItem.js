/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PayrollIncomeAccountData from './PayrollIncomeAccountData';
import PayrollIncomeObject from './PayrollIncomeObject';
import PayrollItemStatus from './PayrollItemStatus';

/**
 * The PayrollItem model module.
 * @module model/PayrollItem
 * @version 2020-09-14_1.345.1
 */
class PayrollItem {
    /**
     * Constructs a new <code>PayrollItem</code>.
     * An object containing information about the payroll item.
     * @alias module:model/PayrollItem
     * @param accounts {Array.<module:model/PayrollIncomeAccountData>} 
     * @param institutionId {String} The unique identifier of the institution associated with the Item.
     * @param institutionName {String} The name of the institution associated with the Item.
     * @param itemId {String} The `item_id` of the Item associated with this webhook, warning, or error
     * @param payrollIncome {Array.<module:model/PayrollIncomeObject>} 
     * @param status {module:model/PayrollItemStatus} 
     * @param updatedAt {Date} Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the Item was updated.
     */
    constructor(accounts, institutionId, institutionName, itemId, payrollIncome, status, updatedAt) { 
        
        PayrollItem.initialize(this, accounts, institutionId, institutionName, itemId, payrollIncome, status, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accounts, institutionId, institutionName, itemId, payrollIncome, status, updatedAt) { 
        obj['accounts'] = accounts;
        obj['institution_id'] = institutionId;
        obj['institution_name'] = institutionName;
        obj['item_id'] = itemId;
        obj['payroll_income'] = payrollIncome;
        obj['status'] = status;
        obj['updated_at'] = updatedAt;
    }

    /**
     * Constructs a <code>PayrollItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PayrollItem} obj Optional instance to populate.
     * @return {module:model/PayrollItem} The populated <code>PayrollItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PayrollItem();

            if (data.hasOwnProperty('accounts')) {
                obj['accounts'] = ApiClient.convertToType(data['accounts'], [PayrollIncomeAccountData]);
            }
            if (data.hasOwnProperty('institution_id')) {
                obj['institution_id'] = ApiClient.convertToType(data['institution_id'], 'String');
            }
            if (data.hasOwnProperty('institution_name')) {
                obj['institution_name'] = ApiClient.convertToType(data['institution_name'], 'String');
            }
            if (data.hasOwnProperty('item_id')) {
                obj['item_id'] = ApiClient.convertToType(data['item_id'], 'String');
            }
            if (data.hasOwnProperty('payroll_income')) {
                obj['payroll_income'] = ApiClient.convertToType(data['payroll_income'], [PayrollIncomeObject]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = PayrollItemStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PayrollItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PayrollItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PayrollItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['accounts'])) {
            throw new Error("Expected the field `accounts` to be an array in the JSON data but got " + data['accounts']);
        }
        // ensure the json data is a string
        if (data['institution_id'] && !(typeof data['institution_id'] === 'string' || data['institution_id'] instanceof String)) {
            throw new Error("Expected the field `institution_id` to be a primitive type in the JSON string but got " + data['institution_id']);
        }
        // ensure the json data is a string
        if (data['institution_name'] && !(typeof data['institution_name'] === 'string' || data['institution_name'] instanceof String)) {
            throw new Error("Expected the field `institution_name` to be a primitive type in the JSON string but got " + data['institution_name']);
        }
        // ensure the json data is a string
        if (data['item_id'] && !(typeof data['item_id'] === 'string' || data['item_id'] instanceof String)) {
            throw new Error("Expected the field `item_id` to be a primitive type in the JSON string but got " + data['item_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['payroll_income'])) {
            throw new Error("Expected the field `payroll_income` to be an array in the JSON data but got " + data['payroll_income']);
        }

        return true;
    }


}

PayrollItem.RequiredProperties = ["accounts", "institution_id", "institution_name", "item_id", "payroll_income", "status", "updated_at"];

/**
 * @member {Array.<module:model/PayrollIncomeAccountData>} accounts
 */
PayrollItem.prototype['accounts'] = undefined;

/**
 * The unique identifier of the institution associated with the Item.
 * @member {String} institution_id
 */
PayrollItem.prototype['institution_id'] = undefined;

/**
 * The name of the institution associated with the Item.
 * @member {String} institution_name
 */
PayrollItem.prototype['institution_name'] = undefined;

/**
 * The `item_id` of the Item associated with this webhook, warning, or error
 * @member {String} item_id
 */
PayrollItem.prototype['item_id'] = undefined;

/**
 * @member {Array.<module:model/PayrollIncomeObject>} payroll_income
 */
PayrollItem.prototype['payroll_income'] = undefined;

/**
 * @member {module:model/PayrollItemStatus} status
 */
PayrollItem.prototype['status'] = undefined;

/**
 * Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the Item was updated.
 * @member {Date} updated_at
 */
PayrollItem.prototype['updated_at'] = undefined;






export default PayrollItem;

