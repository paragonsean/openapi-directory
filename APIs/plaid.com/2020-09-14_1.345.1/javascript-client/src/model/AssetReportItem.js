/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountAssets from './AccountAssets';

/**
 * The AssetReportItem model module.
 * @module model/AssetReportItem
 * @version 2020-09-14_1.345.1
 */
class AssetReportItem {
    /**
     * Constructs a new <code>AssetReportItem</code>.
     * A representation of an Item within an Asset Report.
     * @alias module:model/AssetReportItem
     * @extends Object
     * @param accounts {Array.<module:model/AccountAssets>} Data about each of the accounts open on the Item.
     * @param dateLastUpdated {Date} The date and time when this Item’s data was last retrieved from the financial institution, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
     * @param institutionId {String} The id of the financial institution associated with the Item.
     * @param institutionName {String} The full financial institution name associated with the Item.
     * @param itemId {String} The `item_id` of the Item associated with this webhook, warning, or error
     */
    constructor(accounts, dateLastUpdated, institutionId, institutionName, itemId) { 
        
        AssetReportItem.initialize(this, accounts, dateLastUpdated, institutionId, institutionName, itemId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accounts, dateLastUpdated, institutionId, institutionName, itemId) { 
        obj['accounts'] = accounts;
        obj['date_last_updated'] = dateLastUpdated;
        obj['institution_id'] = institutionId;
        obj['institution_name'] = institutionName;
        obj['item_id'] = itemId;
    }

    /**
     * Constructs a <code>AssetReportItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetReportItem} obj Optional instance to populate.
     * @return {module:model/AssetReportItem} The populated <code>AssetReportItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetReportItem();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('accounts')) {
                obj['accounts'] = ApiClient.convertToType(data['accounts'], [AccountAssets]);
            }
            if (data.hasOwnProperty('date_last_updated')) {
                obj['date_last_updated'] = ApiClient.convertToType(data['date_last_updated'], 'Date');
            }
            if (data.hasOwnProperty('institution_id')) {
                obj['institution_id'] = ApiClient.convertToType(data['institution_id'], 'String');
            }
            if (data.hasOwnProperty('institution_name')) {
                obj['institution_name'] = ApiClient.convertToType(data['institution_name'], 'String');
            }
            if (data.hasOwnProperty('item_id')) {
                obj['item_id'] = ApiClient.convertToType(data['item_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetReportItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetReportItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssetReportItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['accounts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['accounts'])) {
                throw new Error("Expected the field `accounts` to be an array in the JSON data but got " + data['accounts']);
            }
            // validate the optional field `accounts` (array)
            for (const item of data['accounts']) {
                AccountAssets.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['institution_id'] && !(typeof data['institution_id'] === 'string' || data['institution_id'] instanceof String)) {
            throw new Error("Expected the field `institution_id` to be a primitive type in the JSON string but got " + data['institution_id']);
        }
        // ensure the json data is a string
        if (data['institution_name'] && !(typeof data['institution_name'] === 'string' || data['institution_name'] instanceof String)) {
            throw new Error("Expected the field `institution_name` to be a primitive type in the JSON string but got " + data['institution_name']);
        }
        // ensure the json data is a string
        if (data['item_id'] && !(typeof data['item_id'] === 'string' || data['item_id'] instanceof String)) {
            throw new Error("Expected the field `item_id` to be a primitive type in the JSON string but got " + data['item_id']);
        }

        return true;
    }


}

AssetReportItem.RequiredProperties = ["accounts", "date_last_updated", "institution_id", "institution_name", "item_id"];

/**
 * Data about each of the accounts open on the Item.
 * @member {Array.<module:model/AccountAssets>} accounts
 */
AssetReportItem.prototype['accounts'] = undefined;

/**
 * The date and time when this Item’s data was last retrieved from the financial institution, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} date_last_updated
 */
AssetReportItem.prototype['date_last_updated'] = undefined;

/**
 * The id of the financial institution associated with the Item.
 * @member {String} institution_id
 */
AssetReportItem.prototype['institution_id'] = undefined;

/**
 * The full financial institution name associated with the Item.
 * @member {String} institution_name
 */
AssetReportItem.prototype['institution_name'] = undefined;

/**
 * The `item_id` of the Item associated with this webhook, warning, or error
 * @member {String} item_id
 */
AssetReportItem.prototype['item_id'] = undefined;






export default AssetReportItem;

