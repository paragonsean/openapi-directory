/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreditAuditCopyTokenUpdateRequest model module.
 * @module model/CreditAuditCopyTokenUpdateRequest
 * @version 2020-09-14_1.345.1
 */
class CreditAuditCopyTokenUpdateRequest {
    /**
     * Constructs a new <code>CreditAuditCopyTokenUpdateRequest</code>.
     * CreditAuditCopyTokenUpdateRequest defines the request schema for &#x60;/credit/audit_copy_token/update&#x60;
     * @alias module:model/CreditAuditCopyTokenUpdateRequest
     * @param auditCopyToken {String} The `audit_copy_token` you would like to update.
     * @param reportTokens {Array.<String>} Array of tokens which the specified Audit Copy Token will be updated with. The types of token supported are asset report token and employment report token. There can be at most 1 of each token type in the array.
     */
    constructor(auditCopyToken, reportTokens) { 
        
        CreditAuditCopyTokenUpdateRequest.initialize(this, auditCopyToken, reportTokens);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, auditCopyToken, reportTokens) { 
        obj['audit_copy_token'] = auditCopyToken;
        obj['report_tokens'] = reportTokens;
    }

    /**
     * Constructs a <code>CreditAuditCopyTokenUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreditAuditCopyTokenUpdateRequest} obj Optional instance to populate.
     * @return {module:model/CreditAuditCopyTokenUpdateRequest} The populated <code>CreditAuditCopyTokenUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreditAuditCopyTokenUpdateRequest();

            if (data.hasOwnProperty('audit_copy_token')) {
                obj['audit_copy_token'] = ApiClient.convertToType(data['audit_copy_token'], 'String');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('report_tokens')) {
                obj['report_tokens'] = ApiClient.convertToType(data['report_tokens'], ['String']);
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreditAuditCopyTokenUpdateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreditAuditCopyTokenUpdateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreditAuditCopyTokenUpdateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['audit_copy_token'] && !(typeof data['audit_copy_token'] === 'string' || data['audit_copy_token'] instanceof String)) {
            throw new Error("Expected the field `audit_copy_token` to be a primitive type in the JSON string but got " + data['audit_copy_token']);
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['report_tokens'])) {
            throw new Error("Expected the field `report_tokens` to be an array in the JSON data but got " + data['report_tokens']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }

        return true;
    }


}

CreditAuditCopyTokenUpdateRequest.RequiredProperties = ["audit_copy_token", "report_tokens"];

/**
 * The `audit_copy_token` you would like to update.
 * @member {String} audit_copy_token
 */
CreditAuditCopyTokenUpdateRequest.prototype['audit_copy_token'] = undefined;

/**
 * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
 * @member {String} client_id
 */
CreditAuditCopyTokenUpdateRequest.prototype['client_id'] = undefined;

/**
 * Array of tokens which the specified Audit Copy Token will be updated with. The types of token supported are asset report token and employment report token. There can be at most 1 of each token type in the array.
 * @member {Array.<String>} report_tokens
 */
CreditAuditCopyTokenUpdateRequest.prototype['report_tokens'] = undefined;

/**
 * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
 * @member {String} secret
 */
CreditAuditCopyTokenUpdateRequest.prototype['secret'] = undefined;






export default CreditAuditCopyTokenUpdateRequest;

