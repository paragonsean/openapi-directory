/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SecurityOverride from './SecurityOverride';

/**
 * The HoldingsOverride model module.
 * @module model/HoldingsOverride
 * @version 2020-09-14_1.345.1
 */
class HoldingsOverride {
    /**
     * Constructs a new <code>HoldingsOverride</code>.
     * Specify the holdings on the account.
     * @alias module:model/HoldingsOverride
     * @param currency {String} Either a valid `iso_currency_code` or `unofficial_currency_code`
     * @param institutionPrice {Number} The last price given by the institution for this security
     * @param quantity {Number} The total quantity of the asset held, as reported by the financial institution.
     * @param security {module:model/SecurityOverride} 
     */
    constructor(currency, institutionPrice, quantity, security) { 
        
        HoldingsOverride.initialize(this, currency, institutionPrice, quantity, security);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currency, institutionPrice, quantity, security) { 
        obj['currency'] = currency;
        obj['institution_price'] = institutionPrice;
        obj['quantity'] = quantity;
        obj['security'] = security;
    }

    /**
     * Constructs a <code>HoldingsOverride</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HoldingsOverride} obj Optional instance to populate.
     * @return {module:model/HoldingsOverride} The populated <code>HoldingsOverride</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HoldingsOverride();

            if (data.hasOwnProperty('cost_basis')) {
                obj['cost_basis'] = ApiClient.convertToType(data['cost_basis'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('institution_price')) {
                obj['institution_price'] = ApiClient.convertToType(data['institution_price'], 'Number');
            }
            if (data.hasOwnProperty('institution_price_as_of')) {
                obj['institution_price_as_of'] = ApiClient.convertToType(data['institution_price_as_of'], 'Date');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('security')) {
                obj['security'] = SecurityOverride.constructFromObject(data['security']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HoldingsOverride</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HoldingsOverride</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HoldingsOverride.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // validate the optional field `security`
        if (data['security']) { // data not null
          SecurityOverride.validateJSON(data['security']);
        }

        return true;
    }


}

HoldingsOverride.RequiredProperties = ["currency", "institution_price", "quantity", "security"];

/**
 * The average original value of the holding. Multiple cost basis values for the same security purchased at different prices are not supported.
 * @member {Number} cost_basis
 */
HoldingsOverride.prototype['cost_basis'] = undefined;

/**
 * Either a valid `iso_currency_code` or `unofficial_currency_code`
 * @member {String} currency
 */
HoldingsOverride.prototype['currency'] = undefined;

/**
 * The last price given by the institution for this security
 * @member {Number} institution_price
 */
HoldingsOverride.prototype['institution_price'] = undefined;

/**
 * The date at which `institution_price` was current. Must be formatted as an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) date.
 * @member {Date} institution_price_as_of
 */
HoldingsOverride.prototype['institution_price_as_of'] = undefined;

/**
 * The total quantity of the asset held, as reported by the financial institution.
 * @member {Number} quantity
 */
HoldingsOverride.prototype['quantity'] = undefined;

/**
 * @member {module:model/SecurityOverride} security
 */
HoldingsOverride.prototype['security'] = undefined;






export default HoldingsOverride;

