/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreditBankIncomeItem from './CreditBankIncomeItem';
import CreditBankIncomeSummary from './CreditBankIncomeSummary';
import CreditBankIncomeWarning from './CreditBankIncomeWarning';

/**
 * The CreditBankIncome model module.
 * @module model/CreditBankIncome
 * @version 2020-09-14_1.345.1
 */
class CreditBankIncome {
    /**
     * Constructs a new <code>CreditBankIncome</code>.
     * The report of the Bank Income data for an end user.
     * @alias module:model/CreditBankIncome
     */
    constructor() { 
        
        CreditBankIncome.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreditBankIncome</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreditBankIncome} obj Optional instance to populate.
     * @return {module:model/CreditBankIncome} The populated <code>CreditBankIncome</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreditBankIncome();

            if (data.hasOwnProperty('bank_income_id')) {
                obj['bank_income_id'] = ApiClient.convertToType(data['bank_income_id'], 'String');
            }
            if (data.hasOwnProperty('bank_income_summary')) {
                obj['bank_income_summary'] = CreditBankIncomeSummary.constructFromObject(data['bank_income_summary']);
            }
            if (data.hasOwnProperty('days_requested')) {
                obj['days_requested'] = ApiClient.convertToType(data['days_requested'], 'Number');
            }
            if (data.hasOwnProperty('generated_time')) {
                obj['generated_time'] = ApiClient.convertToType(data['generated_time'], 'Date');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [CreditBankIncomeItem]);
            }
            if (data.hasOwnProperty('warnings')) {
                obj['warnings'] = ApiClient.convertToType(data['warnings'], [CreditBankIncomeWarning]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreditBankIncome</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreditBankIncome</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bank_income_id'] && !(typeof data['bank_income_id'] === 'string' || data['bank_income_id'] instanceof String)) {
            throw new Error("Expected the field `bank_income_id` to be a primitive type in the JSON string but got " + data['bank_income_id']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                CreditBankIncomeItem.validateJSON(item);
            };
        }
        if (data['warnings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['warnings'])) {
                throw new Error("Expected the field `warnings` to be an array in the JSON data but got " + data['warnings']);
            }
            // validate the optional field `warnings` (array)
            for (const item of data['warnings']) {
                CreditBankIncomeWarning.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The unique identifier associated with the Bank Income Report.
 * @member {String} bank_income_id
 */
CreditBankIncome.prototype['bank_income_id'] = undefined;

/**
 * @member {module:model/CreditBankIncomeSummary} bank_income_summary
 */
CreditBankIncome.prototype['bank_income_summary'] = undefined;

/**
 * The number of days requested by the customer for the Bank Income Report.
 * @member {Number} days_requested
 */
CreditBankIncome.prototype['days_requested'] = undefined;

/**
 * The time when the Bank Income Report was generated.
 * @member {Date} generated_time
 */
CreditBankIncome.prototype['generated_time'] = undefined;

/**
 * The list of Items in the report along with the associated metadata about the Item.
 * @member {Array.<module:model/CreditBankIncomeItem>} items
 */
CreditBankIncome.prototype['items'] = undefined;

/**
 * If data from the Bank Income report was unable to be retrieved, the warnings will contain information about the error that caused the data to be incomplete.
 * @member {Array.<module:model/CreditBankIncomeWarning>} warnings
 */
CreditBankIncome.prototype['warnings'] = undefined;






export default CreditBankIncome;

