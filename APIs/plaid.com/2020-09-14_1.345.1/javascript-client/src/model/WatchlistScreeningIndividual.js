/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WatchlistScreeningAuditTrail from './WatchlistScreeningAuditTrail';
import WatchlistScreeningSearchTerms from './WatchlistScreeningSearchTerms';
import WatchlistScreeningStatus from './WatchlistScreeningStatus';

/**
 * The WatchlistScreeningIndividual model module.
 * @module model/WatchlistScreeningIndividual
 * @version 2020-09-14_1.345.1
 */
class WatchlistScreeningIndividual {
    /**
     * Constructs a new <code>WatchlistScreeningIndividual</code>.
     * The screening object allows you to represent a customer in your system, update their profile, and search for them on various watchlists. Note: Rejected customers will not receive new hits, regardless of program configuration.
     * @alias module:model/WatchlistScreeningIndividual
     * @extends Object
     * @param assignee {String} ID of the associated user.
     * @param auditTrail {module:model/WatchlistScreeningAuditTrail} 
     * @param clientUserId {String} An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
     * @param id {String} ID of the associated screening.
     * @param searchTerms {module:model/WatchlistScreeningSearchTerms} 
     * @param status {module:model/WatchlistScreeningStatus} 
     */
    constructor(assignee, auditTrail, clientUserId, id, searchTerms, status) { 
        
        WatchlistScreeningIndividual.initialize(this, assignee, auditTrail, clientUserId, id, searchTerms, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, assignee, auditTrail, clientUserId, id, searchTerms, status) { 
        obj['assignee'] = assignee;
        obj['audit_trail'] = auditTrail;
        obj['client_user_id'] = clientUserId;
        obj['id'] = id;
        obj['search_terms'] = searchTerms;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>WatchlistScreeningIndividual</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WatchlistScreeningIndividual} obj Optional instance to populate.
     * @return {module:model/WatchlistScreeningIndividual} The populated <code>WatchlistScreeningIndividual</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WatchlistScreeningIndividual();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('assignee')) {
                obj['assignee'] = ApiClient.convertToType(data['assignee'], 'String');
            }
            if (data.hasOwnProperty('audit_trail')) {
                obj['audit_trail'] = WatchlistScreeningAuditTrail.constructFromObject(data['audit_trail']);
            }
            if (data.hasOwnProperty('client_user_id')) {
                obj['client_user_id'] = ApiClient.convertToType(data['client_user_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('search_terms')) {
                obj['search_terms'] = WatchlistScreeningSearchTerms.constructFromObject(data['search_terms']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = WatchlistScreeningStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WatchlistScreeningIndividual</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WatchlistScreeningIndividual</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WatchlistScreeningIndividual.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['assignee'] && !(typeof data['assignee'] === 'string' || data['assignee'] instanceof String)) {
            throw new Error("Expected the field `assignee` to be a primitive type in the JSON string but got " + data['assignee']);
        }
        // ensure the json data is a string
        if (data['client_user_id'] && !(typeof data['client_user_id'] === 'string' || data['client_user_id'] instanceof String)) {
            throw new Error("Expected the field `client_user_id` to be a primitive type in the JSON string but got " + data['client_user_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}

WatchlistScreeningIndividual.RequiredProperties = ["assignee", "audit_trail", "client_user_id", "id", "search_terms", "status"];

/**
 * ID of the associated user.
 * @member {String} assignee
 */
WatchlistScreeningIndividual.prototype['assignee'] = undefined;

/**
 * @member {module:model/WatchlistScreeningAuditTrail} audit_trail
 */
WatchlistScreeningIndividual.prototype['audit_trail'] = undefined;

/**
 * An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
 * @member {String} client_user_id
 */
WatchlistScreeningIndividual.prototype['client_user_id'] = undefined;

/**
 * ID of the associated screening.
 * @member {String} id
 */
WatchlistScreeningIndividual.prototype['id'] = undefined;

/**
 * @member {module:model/WatchlistScreeningSearchTerms} search_terms
 */
WatchlistScreeningIndividual.prototype['search_terms'] = undefined;

/**
 * @member {module:model/WatchlistScreeningStatus} status
 */
WatchlistScreeningIndividual.prototype['status'] = undefined;






export default WatchlistScreeningIndividual;

