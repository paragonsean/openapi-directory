/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreditPayStubPayBasisType from './CreditPayStubPayBasisType';
import PayStubDistributionBreakdown from './PayStubDistributionBreakdown';

/**
 * The PayStubPayPeriodDetails model module.
 * @module model/PayStubPayPeriodDetails
 * @version 2020-09-14_1.345.1
 */
class PayStubPayPeriodDetails {
    /**
     * Constructs a new <code>PayStubPayPeriodDetails</code>.
     * Details about the pay period.
     * @alias module:model/PayStubPayPeriodDetails
     * @extends Object
     * @param distributionBreakdown {Array.<module:model/PayStubDistributionBreakdown>} 
     * @param endDate {Date} The date on which the pay period ended, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (\"yyyy-mm-dd\").
     * @param grossEarnings {Number} Total earnings before tax/deductions.
     * @param isoCurrencyCode {String} The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
     * @param payAmount {Number} The amount of the paycheck.
     * @param payDate {Date} The date on which the pay stub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (\"yyyy-mm-dd\").
     * @param payFrequency {String} The frequency at which an individual is paid.
     * @param startDate {Date} The date on which the pay period started, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (\"yyyy-mm-dd\").
     * @param unofficialCurrencyCode {String} The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.  See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
     */
    constructor(distributionBreakdown, endDate, grossEarnings, isoCurrencyCode, payAmount, payDate, payFrequency, startDate, unofficialCurrencyCode) { 
        
        PayStubPayPeriodDetails.initialize(this, distributionBreakdown, endDate, grossEarnings, isoCurrencyCode, payAmount, payDate, payFrequency, startDate, unofficialCurrencyCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, distributionBreakdown, endDate, grossEarnings, isoCurrencyCode, payAmount, payDate, payFrequency, startDate, unofficialCurrencyCode) { 
        obj['distribution_breakdown'] = distributionBreakdown;
        obj['end_date'] = endDate;
        obj['gross_earnings'] = grossEarnings;
        obj['iso_currency_code'] = isoCurrencyCode;
        obj['pay_amount'] = payAmount;
        obj['pay_date'] = payDate;
        obj['pay_frequency'] = payFrequency;
        obj['start_date'] = startDate;
        obj['unofficial_currency_code'] = unofficialCurrencyCode;
    }

    /**
     * Constructs a <code>PayStubPayPeriodDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PayStubPayPeriodDetails} obj Optional instance to populate.
     * @return {module:model/PayStubPayPeriodDetails} The populated <code>PayStubPayPeriodDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PayStubPayPeriodDetails();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('distribution_breakdown')) {
                obj['distribution_breakdown'] = ApiClient.convertToType(data['distribution_breakdown'], [PayStubDistributionBreakdown]);
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
            }
            if (data.hasOwnProperty('gross_earnings')) {
                obj['gross_earnings'] = ApiClient.convertToType(data['gross_earnings'], 'Number');
            }
            if (data.hasOwnProperty('iso_currency_code')) {
                obj['iso_currency_code'] = ApiClient.convertToType(data['iso_currency_code'], 'String');
            }
            if (data.hasOwnProperty('pay_amount')) {
                obj['pay_amount'] = ApiClient.convertToType(data['pay_amount'], 'Number');
            }
            if (data.hasOwnProperty('pay_basis')) {
                obj['pay_basis'] = CreditPayStubPayBasisType.constructFromObject(data['pay_basis']);
            }
            if (data.hasOwnProperty('pay_date')) {
                obj['pay_date'] = ApiClient.convertToType(data['pay_date'], 'Date');
            }
            if (data.hasOwnProperty('pay_frequency')) {
                obj['pay_frequency'] = ApiClient.convertToType(data['pay_frequency'], 'String');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('unofficial_currency_code')) {
                obj['unofficial_currency_code'] = ApiClient.convertToType(data['unofficial_currency_code'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PayStubPayPeriodDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PayStubPayPeriodDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PayStubPayPeriodDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['distribution_breakdown'])) {
            throw new Error("Expected the field `distribution_breakdown` to be an array in the JSON data but got " + data['distribution_breakdown']);
        }
        // ensure the json data is a string
        if (data['iso_currency_code'] && !(typeof data['iso_currency_code'] === 'string' || data['iso_currency_code'] instanceof String)) {
            throw new Error("Expected the field `iso_currency_code` to be a primitive type in the JSON string but got " + data['iso_currency_code']);
        }
        // ensure the json data is a string
        if (data['pay_frequency'] && !(typeof data['pay_frequency'] === 'string' || data['pay_frequency'] instanceof String)) {
            throw new Error("Expected the field `pay_frequency` to be a primitive type in the JSON string but got " + data['pay_frequency']);
        }
        // ensure the json data is a string
        if (data['unofficial_currency_code'] && !(typeof data['unofficial_currency_code'] === 'string' || data['unofficial_currency_code'] instanceof String)) {
            throw new Error("Expected the field `unofficial_currency_code` to be a primitive type in the JSON string but got " + data['unofficial_currency_code']);
        }

        return true;
    }


}

PayStubPayPeriodDetails.RequiredProperties = ["distribution_breakdown", "end_date", "gross_earnings", "iso_currency_code", "pay_amount", "pay_date", "pay_frequency", "start_date", "unofficial_currency_code"];

/**
 * @member {Array.<module:model/PayStubDistributionBreakdown>} distribution_breakdown
 */
PayStubPayPeriodDetails.prototype['distribution_breakdown'] = undefined;

/**
 * The date on which the pay period ended, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (\"yyyy-mm-dd\").
 * @member {Date} end_date
 */
PayStubPayPeriodDetails.prototype['end_date'] = undefined;

/**
 * Total earnings before tax/deductions.
 * @member {Number} gross_earnings
 */
PayStubPayPeriodDetails.prototype['gross_earnings'] = undefined;

/**
 * The ISO-4217 currency code of the net pay. Always `null` if `unofficial_currency_code` is non-null.
 * @member {String} iso_currency_code
 */
PayStubPayPeriodDetails.prototype['iso_currency_code'] = undefined;

/**
 * The amount of the paycheck.
 * @member {Number} pay_amount
 */
PayStubPayPeriodDetails.prototype['pay_amount'] = undefined;

/**
 * @member {module:model/CreditPayStubPayBasisType} pay_basis
 */
PayStubPayPeriodDetails.prototype['pay_basis'] = undefined;

/**
 * The date on which the pay stub was issued, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (\"yyyy-mm-dd\").
 * @member {Date} pay_date
 */
PayStubPayPeriodDetails.prototype['pay_date'] = undefined;

/**
 * The frequency at which an individual is paid.
 * @member {String} pay_frequency
 */
PayStubPayPeriodDetails.prototype['pay_frequency'] = undefined;

/**
 * The date on which the pay period started, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (\"yyyy-mm-dd\").
 * @member {Date} start_date
 */
PayStubPayPeriodDetails.prototype['start_date'] = undefined;

/**
 * The unofficial currency code associated with the net pay. Always `null` if `iso_currency_code` is non-`null`. Unofficial currency codes are used for currencies that do not have official ISO currency codes, such as cryptocurrencies and the currencies of certain countries.  See the [currency code schema](https://plaid.com/docs/api/accounts#currency-code-schema) for a full listing of supported `iso_currency_code`s.
 * @member {String} unofficial_currency_code
 */
PayStubPayPeriodDetails.prototype['unofficial_currency_code'] = undefined;






export default PayStubPayPeriodDetails;

