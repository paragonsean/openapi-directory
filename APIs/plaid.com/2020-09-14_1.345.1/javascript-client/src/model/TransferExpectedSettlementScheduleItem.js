/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransferExpectedSettlementScheduleItem model module.
 * @module model/TransferExpectedSettlementScheduleItem
 * @version 2020-09-14_1.345.1
 */
class TransferExpectedSettlementScheduleItem {
    /**
     * Constructs a new <code>TransferExpectedSettlementScheduleItem</code>.
     * Defines an expected sweep date and amount.
     * @alias module:model/TransferExpectedSettlementScheduleItem
     * @extends Object
     * @param settledAmount {String} The accumulated amount that have been swept by `settlement_date`.
     * @param settlementDate {Date} The settlement date of a sweep for this transfer.
     */
    constructor(settledAmount, settlementDate) { 
        
        TransferExpectedSettlementScheduleItem.initialize(this, settledAmount, settlementDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, settledAmount, settlementDate) { 
        obj['settled_amount'] = settledAmount;
        obj['settlement_date'] = settlementDate;
    }

    /**
     * Constructs a <code>TransferExpectedSettlementScheduleItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransferExpectedSettlementScheduleItem} obj Optional instance to populate.
     * @return {module:model/TransferExpectedSettlementScheduleItem} The populated <code>TransferExpectedSettlementScheduleItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransferExpectedSettlementScheduleItem();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('settled_amount')) {
                obj['settled_amount'] = ApiClient.convertToType(data['settled_amount'], 'String');
            }
            if (data.hasOwnProperty('settlement_date')) {
                obj['settlement_date'] = ApiClient.convertToType(data['settlement_date'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransferExpectedSettlementScheduleItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransferExpectedSettlementScheduleItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransferExpectedSettlementScheduleItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['settled_amount'] && !(typeof data['settled_amount'] === 'string' || data['settled_amount'] instanceof String)) {
            throw new Error("Expected the field `settled_amount` to be a primitive type in the JSON string but got " + data['settled_amount']);
        }

        return true;
    }


}

TransferExpectedSettlementScheduleItem.RequiredProperties = ["settled_amount", "settlement_date"];

/**
 * The accumulated amount that have been swept by `settlement_date`.
 * @member {String} settled_amount
 */
TransferExpectedSettlementScheduleItem.prototype['settled_amount'] = undefined;

/**
 * The settlement date of a sweep for this transfer.
 * @member {Date} settlement_date
 */
TransferExpectedSettlementScheduleItem.prototype['settlement_date'] = undefined;






export default TransferExpectedSettlementScheduleItem;

