/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IncomeVerificationSourceType from './IncomeVerificationSourceType';
import LinkTokenCreateRequestIncomeVerificationBankIncome from './LinkTokenCreateRequestIncomeVerificationBankIncome';
import LinkTokenCreateRequestIncomeVerificationPayrollIncome from './LinkTokenCreateRequestIncomeVerificationPayrollIncome';
import LinkTokenCreateRequestUserStatedIncomeSource from './LinkTokenCreateRequestUserStatedIncomeSource';

/**
 * The LinkTokenCreateRequestIncomeVerification model module.
 * @module model/LinkTokenCreateRequestIncomeVerification
 * @version 2020-09-14_1.345.1
 */
class LinkTokenCreateRequestIncomeVerification {
    /**
     * Constructs a new <code>LinkTokenCreateRequestIncomeVerification</code>.
     * Specifies options for initializing Link for use with the Income product. This field is required if &#x60;income_verification&#x60; is included in the &#x60;products&#x60; array.
     * @alias module:model/LinkTokenCreateRequestIncomeVerification
     */
    constructor() { 
        
        LinkTokenCreateRequestIncomeVerification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LinkTokenCreateRequestIncomeVerification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LinkTokenCreateRequestIncomeVerification} obj Optional instance to populate.
     * @return {module:model/LinkTokenCreateRequestIncomeVerification} The populated <code>LinkTokenCreateRequestIncomeVerification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LinkTokenCreateRequestIncomeVerification();

            if (data.hasOwnProperty('access_tokens')) {
                obj['access_tokens'] = ApiClient.convertToType(data['access_tokens'], ['String']);
            }
            if (data.hasOwnProperty('asset_report_id')) {
                obj['asset_report_id'] = ApiClient.convertToType(data['asset_report_id'], 'String');
            }
            if (data.hasOwnProperty('bank_income')) {
                obj['bank_income'] = LinkTokenCreateRequestIncomeVerificationBankIncome.constructFromObject(data['bank_income']);
            }
            if (data.hasOwnProperty('income_source_types')) {
                obj['income_source_types'] = ApiClient.convertToType(data['income_source_types'], [IncomeVerificationSourceType]);
            }
            if (data.hasOwnProperty('income_verification_id')) {
                obj['income_verification_id'] = ApiClient.convertToType(data['income_verification_id'], 'String');
            }
            if (data.hasOwnProperty('payroll_income')) {
                obj['payroll_income'] = LinkTokenCreateRequestIncomeVerificationPayrollIncome.constructFromObject(data['payroll_income']);
            }
            if (data.hasOwnProperty('precheck_id')) {
                obj['precheck_id'] = ApiClient.convertToType(data['precheck_id'], 'String');
            }
            if (data.hasOwnProperty('stated_income_sources')) {
                obj['stated_income_sources'] = ApiClient.convertToType(data['stated_income_sources'], [LinkTokenCreateRequestUserStatedIncomeSource]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LinkTokenCreateRequestIncomeVerification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LinkTokenCreateRequestIncomeVerification</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['access_tokens'])) {
            throw new Error("Expected the field `access_tokens` to be an array in the JSON data but got " + data['access_tokens']);
        }
        // ensure the json data is a string
        if (data['asset_report_id'] && !(typeof data['asset_report_id'] === 'string' || data['asset_report_id'] instanceof String)) {
            throw new Error("Expected the field `asset_report_id` to be a primitive type in the JSON string but got " + data['asset_report_id']);
        }
        // validate the optional field `bank_income`
        if (data['bank_income']) { // data not null
          LinkTokenCreateRequestIncomeVerificationBankIncome.validateJSON(data['bank_income']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['income_source_types'])) {
            throw new Error("Expected the field `income_source_types` to be an array in the JSON data but got " + data['income_source_types']);
        }
        // ensure the json data is a string
        if (data['income_verification_id'] && !(typeof data['income_verification_id'] === 'string' || data['income_verification_id'] instanceof String)) {
            throw new Error("Expected the field `income_verification_id` to be a primitive type in the JSON string but got " + data['income_verification_id']);
        }
        // validate the optional field `payroll_income`
        if (data['payroll_income']) { // data not null
          LinkTokenCreateRequestIncomeVerificationPayrollIncome.validateJSON(data['payroll_income']);
        }
        // ensure the json data is a string
        if (data['precheck_id'] && !(typeof data['precheck_id'] === 'string' || data['precheck_id'] instanceof String)) {
            throw new Error("Expected the field `precheck_id` to be a primitive type in the JSON string but got " + data['precheck_id']);
        }
        if (data['stated_income_sources']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['stated_income_sources'])) {
                throw new Error("Expected the field `stated_income_sources` to be an array in the JSON data but got " + data['stated_income_sources']);
            }
            // validate the optional field `stated_income_sources` (array)
            for (const item of data['stated_income_sources']) {
                LinkTokenCreateRequestUserStatedIncomeSource.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * An array of access tokens corresponding to Items that a user has previously connected with. Data from these institutions will be cross-referenced with document data received during the Document Income flow to help verify that the uploaded documents are accurate. If the `transactions` product was not initialized for these Items during link, it will be initialized after this Link session.  This field should only be used with the `payroll` income source type.
 * @member {Array.<String>} access_tokens
 */
LinkTokenCreateRequestIncomeVerification.prototype['access_tokens'] = undefined;

/**
 * The `asset_report_id` of an asset report associated with the user, as provided by `/asset_report/create`. Providing an `asset_report_id` is optional and can be used to verify the user through a streamlined flow. If provided, the bank linking flow will be skipped.
 * @member {String} asset_report_id
 */
LinkTokenCreateRequestIncomeVerification.prototype['asset_report_id'] = undefined;

/**
 * @member {module:model/LinkTokenCreateRequestIncomeVerificationBankIncome} bank_income
 */
LinkTokenCreateRequestIncomeVerification.prototype['bank_income'] = undefined;

/**
 * The types of source income data that users will be permitted to share. Options include `bank` and `payroll`. Currently you can only specify one of these options.
 * @member {Array.<module:model/IncomeVerificationSourceType>} income_source_types
 */
LinkTokenCreateRequestIncomeVerification.prototype['income_source_types'] = undefined;

/**
 * The `income_verification_id` of the verification instance, as provided by `/income/verification/create`.
 * @member {String} income_verification_id
 */
LinkTokenCreateRequestIncomeVerification.prototype['income_verification_id'] = undefined;

/**
 * @member {module:model/LinkTokenCreateRequestIncomeVerificationPayrollIncome} payroll_income
 */
LinkTokenCreateRequestIncomeVerification.prototype['payroll_income'] = undefined;

/**
 * The ID of a precheck created with `/income/verification/precheck`. Will be used to improve conversion of the income verification flow by streamlining the Link interface presented to the end user.
 * @member {String} precheck_id
 */
LinkTokenCreateRequestIncomeVerification.prototype['precheck_id'] = undefined;

/**
 * A list of user stated income sources
 * @member {Array.<module:model/LinkTokenCreateRequestUserStatedIncomeSource>} stated_income_sources
 */
LinkTokenCreateRequestIncomeVerification.prototype['stated_income_sources'] = undefined;






export default LinkTokenCreateRequestIncomeVerification;

