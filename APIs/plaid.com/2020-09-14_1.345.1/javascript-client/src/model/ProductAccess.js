/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductAccess model module.
 * @module model/ProductAccess
 * @version 2020-09-14_1.345.1
 */
class ProductAccess {
    /**
     * Constructs a new <code>ProductAccess</code>.
     * The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed.
     * @alias module:model/ProductAccess
     * @extends Object
     */
    constructor() { 
        
        ProductAccess.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['accounts_details_transactions'] = true;
        obj['accounts_routing_number'] = true;
        obj['accounts_statements'] = true;
        obj['accounts_tax_statements'] = true;
        obj['auth'] = true;
        obj['customers_profiles'] = true;
        obj['identity'] = true;
        obj['statements'] = true;
        obj['transactions'] = true;
    }

    /**
     * Constructs a <code>ProductAccess</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductAccess} obj Optional instance to populate.
     * @return {module:model/ProductAccess} The populated <code>ProductAccess</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductAccess();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('accounts_details_transactions')) {
                obj['accounts_details_transactions'] = ApiClient.convertToType(data['accounts_details_transactions'], 'Boolean');
            }
            if (data.hasOwnProperty('accounts_routing_number')) {
                obj['accounts_routing_number'] = ApiClient.convertToType(data['accounts_routing_number'], 'Boolean');
            }
            if (data.hasOwnProperty('accounts_statements')) {
                obj['accounts_statements'] = ApiClient.convertToType(data['accounts_statements'], 'Boolean');
            }
            if (data.hasOwnProperty('accounts_tax_statements')) {
                obj['accounts_tax_statements'] = ApiClient.convertToType(data['accounts_tax_statements'], 'Boolean');
            }
            if (data.hasOwnProperty('auth')) {
                obj['auth'] = ApiClient.convertToType(data['auth'], 'Boolean');
            }
            if (data.hasOwnProperty('customers_profiles')) {
                obj['customers_profiles'] = ApiClient.convertToType(data['customers_profiles'], 'Boolean');
            }
            if (data.hasOwnProperty('identity')) {
                obj['identity'] = ApiClient.convertToType(data['identity'], 'Boolean');
            }
            if (data.hasOwnProperty('statements')) {
                obj['statements'] = ApiClient.convertToType(data['statements'], 'Boolean');
            }
            if (data.hasOwnProperty('transactions')) {
                obj['transactions'] = ApiClient.convertToType(data['transactions'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductAccess</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductAccess</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Allow access to \"accounts_details_transactions\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
 * @member {Boolean} accounts_details_transactions
 * @default true
 */
ProductAccess.prototype['accounts_details_transactions'] = true;

/**
 * Allow access to \"accounts_routing_number\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
 * @member {Boolean} accounts_routing_number
 * @default true
 */
ProductAccess.prototype['accounts_routing_number'] = true;

/**
 * Allow access to \"accounts_statements\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
 * @member {Boolean} accounts_statements
 * @default true
 */
ProductAccess.prototype['accounts_statements'] = true;

/**
 * Allow access to \"accounts_tax_statements\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
 * @member {Boolean} accounts_tax_statements
 * @default true
 */
ProductAccess.prototype['accounts_tax_statements'] = true;

/**
 * Allow access to account number details. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
 * @member {Boolean} auth
 * @default true
 */
ProductAccess.prototype['auth'] = true;

/**
 * Allow access to \"customers_profiles\". Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
 * @member {Boolean} customers_profiles
 * @default true
 */
ProductAccess.prototype['customers_profiles'] = true;

/**
 * Allow access to the Identity product (name, email, phone, address). Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
 * @member {Boolean} identity
 * @default true
 */
ProductAccess.prototype['identity'] = true;

/**
 * Allow access to statements. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
 * @member {Boolean} statements
 * @default true
 */
ProductAccess.prototype['statements'] = true;

/**
 * Allow access to transaction details. Only used by certain partners. If relevant to the partner and unset, defaults to `true`.
 * @member {Boolean} transactions
 * @default true
 */
ProductAccess.prototype['transactions'] = true;






export default ProductAccess;

