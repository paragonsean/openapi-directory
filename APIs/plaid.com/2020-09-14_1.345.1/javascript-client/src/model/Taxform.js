/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import W2 from './W2';

/**
 * The Taxform model module.
 * @module model/Taxform
 * @version 2020-09-14_1.345.1
 */
class Taxform {
    /**
     * Constructs a new <code>Taxform</code>.
     * Data about an official document used to report the user&#39;s income to the IRS.
     * @alias module:model/Taxform
     * @extends Object
     * @param documentType {String} The type of tax document. Currently, the only supported value is `w2`.
     */
    constructor(documentType) { 
        
        Taxform.initialize(this, documentType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, documentType) { 
        obj['document_type'] = documentType;
    }

    /**
     * Constructs a <code>Taxform</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Taxform} obj Optional instance to populate.
     * @return {module:model/Taxform} The populated <code>Taxform</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Taxform();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('doc_id')) {
                obj['doc_id'] = ApiClient.convertToType(data['doc_id'], 'String');
            }
            if (data.hasOwnProperty('document_type')) {
                obj['document_type'] = ApiClient.convertToType(data['document_type'], 'String');
            }
            if (data.hasOwnProperty('w2')) {
                obj['w2'] = W2.constructFromObject(data['w2']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Taxform</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Taxform</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Taxform.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['doc_id'] && !(typeof data['doc_id'] === 'string' || data['doc_id'] instanceof String)) {
            throw new Error("Expected the field `doc_id` to be a primitive type in the JSON string but got " + data['doc_id']);
        }
        // ensure the json data is a string
        if (data['document_type'] && !(typeof data['document_type'] === 'string' || data['document_type'] instanceof String)) {
            throw new Error("Expected the field `document_type` to be a primitive type in the JSON string but got " + data['document_type']);
        }

        return true;
    }


}

Taxform.RequiredProperties = ["document_type"];

/**
 * An identifier of the document referenced by the document metadata.
 * @member {String} doc_id
 */
Taxform.prototype['doc_id'] = undefined;

/**
 * The type of tax document. Currently, the only supported value is `w2`.
 * @member {String} document_type
 */
Taxform.prototype['document_type'] = undefined;

/**
 * @member {module:model/W2} w2
 */
Taxform.prototype['w2'] = undefined;






export default Taxform;

