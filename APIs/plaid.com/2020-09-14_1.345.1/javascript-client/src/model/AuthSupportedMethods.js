/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthSupportedMethods model module.
 * @module model/AuthSupportedMethods
 * @version 2020-09-14_1.345.1
 */
class AuthSupportedMethods {
    /**
     * Constructs a new <code>AuthSupportedMethods</code>.
     * Metadata specifically related to which auth methods an institution supports.
     * @alias module:model/AuthSupportedMethods
     * @extends Object
     * @param automatedMicroDeposits {Boolean} Indicates if automated microdeposits are supported.
     * @param instantAuth {Boolean} Indicates if instant auth is supported.
     * @param instantMatch {Boolean} Indicates if instant match is supported.
     */
    constructor(automatedMicroDeposits, instantAuth, instantMatch) { 
        
        AuthSupportedMethods.initialize(this, automatedMicroDeposits, instantAuth, instantMatch);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, automatedMicroDeposits, instantAuth, instantMatch) { 
        obj['automated_micro_deposits'] = automatedMicroDeposits;
        obj['instant_auth'] = instantAuth;
        obj['instant_match'] = instantMatch;
    }

    /**
     * Constructs a <code>AuthSupportedMethods</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthSupportedMethods} obj Optional instance to populate.
     * @return {module:model/AuthSupportedMethods} The populated <code>AuthSupportedMethods</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthSupportedMethods();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('automated_micro_deposits')) {
                obj['automated_micro_deposits'] = ApiClient.convertToType(data['automated_micro_deposits'], 'Boolean');
            }
            if (data.hasOwnProperty('instant_auth')) {
                obj['instant_auth'] = ApiClient.convertToType(data['instant_auth'], 'Boolean');
            }
            if (data.hasOwnProperty('instant_match')) {
                obj['instant_match'] = ApiClient.convertToType(data['instant_match'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthSupportedMethods</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthSupportedMethods</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuthSupportedMethods.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

AuthSupportedMethods.RequiredProperties = ["automated_micro_deposits", "instant_auth", "instant_match"];

/**
 * Indicates if automated microdeposits are supported.
 * @member {Boolean} automated_micro_deposits
 */
AuthSupportedMethods.prototype['automated_micro_deposits'] = undefined;

/**
 * Indicates if instant auth is supported.
 * @member {Boolean} instant_auth
 */
AuthSupportedMethods.prototype['instant_auth'] = undefined;

/**
 * Indicates if instant match is supported.
 * @member {Boolean} instant_match
 */
AuthSupportedMethods.prototype['instant_match'] = undefined;






export default AuthSupportedMethods;

