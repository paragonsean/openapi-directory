/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransferUserAddressInRequest from './TransferUserAddressInRequest';

/**
 * The TransferUserInRequest model module.
 * @module model/TransferUserInRequest
 * @version 2020-09-14_1.345.1
 */
class TransferUserInRequest {
    /**
     * Constructs a new <code>TransferUserInRequest</code>.
     * The legal name and other information for the account holder.
     * @alias module:model/TransferUserInRequest
     * @extends Object
     * @param legalName {String} The user's legal name.
     */
    constructor(legalName) { 
        
        TransferUserInRequest.initialize(this, legalName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, legalName) { 
        obj['legal_name'] = legalName;
    }

    /**
     * Constructs a <code>TransferUserInRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransferUserInRequest} obj Optional instance to populate.
     * @return {module:model/TransferUserInRequest} The populated <code>TransferUserInRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransferUserInRequest();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('address')) {
                obj['address'] = TransferUserAddressInRequest.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('email_address')) {
                obj['email_address'] = ApiClient.convertToType(data['email_address'], 'String');
            }
            if (data.hasOwnProperty('legal_name')) {
                obj['legal_name'] = ApiClient.convertToType(data['legal_name'], 'String');
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransferUserInRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransferUserInRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransferUserInRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['email_address'] && !(typeof data['email_address'] === 'string' || data['email_address'] instanceof String)) {
            throw new Error("Expected the field `email_address` to be a primitive type in the JSON string but got " + data['email_address']);
        }
        // ensure the json data is a string
        if (data['legal_name'] && !(typeof data['legal_name'] === 'string' || data['legal_name'] instanceof String)) {
            throw new Error("Expected the field `legal_name` to be a primitive type in the JSON string but got " + data['legal_name']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }

        return true;
    }


}

TransferUserInRequest.RequiredProperties = ["legal_name"];

/**
 * @member {module:model/TransferUserAddressInRequest} address
 */
TransferUserInRequest.prototype['address'] = undefined;

/**
 * The user's email address.
 * @member {String} email_address
 */
TransferUserInRequest.prototype['email_address'] = undefined;

/**
 * The user's legal name.
 * @member {String} legal_name
 */
TransferUserInRequest.prototype['legal_name'] = undefined;

/**
 * The user's phone number.
 * @member {String} phone_number
 */
TransferUserInRequest.prototype['phone_number'] = undefined;






export default TransferUserInRequest;

