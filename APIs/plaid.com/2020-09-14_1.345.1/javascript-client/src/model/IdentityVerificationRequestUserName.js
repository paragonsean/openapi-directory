/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IdentityVerificationRequestUserName model module.
 * @module model/IdentityVerificationRequestUserName
 * @version 2020-09-14_1.345.1
 */
class IdentityVerificationRequestUserName {
    /**
     * Constructs a new <code>IdentityVerificationRequestUserName</code>.
     * You can use this field to pre-populate the user&#39;s legal name; if it is provided here, they will not be prompted to enter their name in the identity verification attempt.
     * @alias module:model/IdentityVerificationRequestUserName
     * @param familyName {String} A string with at least one non-whitespace character, with a max length of 100 characters.
     * @param givenName {String} A string with at least one non-whitespace character, with a max length of 100 characters.
     */
    constructor(familyName, givenName) { 
        
        IdentityVerificationRequestUserName.initialize(this, familyName, givenName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, familyName, givenName) { 
        obj['family_name'] = familyName;
        obj['given_name'] = givenName;
    }

    /**
     * Constructs a <code>IdentityVerificationRequestUserName</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentityVerificationRequestUserName} obj Optional instance to populate.
     * @return {module:model/IdentityVerificationRequestUserName} The populated <code>IdentityVerificationRequestUserName</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentityVerificationRequestUserName();

            if (data.hasOwnProperty('family_name')) {
                obj['family_name'] = ApiClient.convertToType(data['family_name'], 'String');
            }
            if (data.hasOwnProperty('given_name')) {
                obj['given_name'] = ApiClient.convertToType(data['given_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentityVerificationRequestUserName</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentityVerificationRequestUserName</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IdentityVerificationRequestUserName.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['family_name'] && !(typeof data['family_name'] === 'string' || data['family_name'] instanceof String)) {
            throw new Error("Expected the field `family_name` to be a primitive type in the JSON string but got " + data['family_name']);
        }
        // ensure the json data is a string
        if (data['given_name'] && !(typeof data['given_name'] === 'string' || data['given_name'] instanceof String)) {
            throw new Error("Expected the field `given_name` to be a primitive type in the JSON string but got " + data['given_name']);
        }

        return true;
    }


}

IdentityVerificationRequestUserName.RequiredProperties = ["family_name", "given_name"];

/**
 * A string with at least one non-whitespace character, with a max length of 100 characters.
 * @member {String} family_name
 */
IdentityVerificationRequestUserName.prototype['family_name'] = undefined;

/**
 * A string with at least one non-whitespace character, with a max length of 100 characters.
 * @member {String} given_name
 */
IdentityVerificationRequestUserName.prototype['given_name'] = undefined;






export default IdentityVerificationRequestUserName;

