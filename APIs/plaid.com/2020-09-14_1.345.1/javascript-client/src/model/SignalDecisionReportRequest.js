/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SignalDecisionOutcome from './SignalDecisionOutcome';
import SignalPaymentMethod from './SignalPaymentMethod';

/**
 * The SignalDecisionReportRequest model module.
 * @module model/SignalDecisionReportRequest
 * @version 2020-09-14_1.345.1
 */
class SignalDecisionReportRequest {
    /**
     * Constructs a new <code>SignalDecisionReportRequest</code>.
     * SignalDecisionReportRequest defines the request schema for &#x60;/signal/decision/report&#x60;
     * @alias module:model/SignalDecisionReportRequest
     * @param clientTransactionId {String} Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`
     * @param initiated {Boolean} `true` if the ACH transaction was initiated, `false` otherwise.  This field must be returned as a boolean. If formatted incorrectly, this will result in an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error.
     */
    constructor(clientTransactionId, initiated) { 
        
        SignalDecisionReportRequest.initialize(this, clientTransactionId, initiated);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientTransactionId, initiated) { 
        obj['client_transaction_id'] = clientTransactionId;
        obj['initiated'] = initiated;
    }

    /**
     * Constructs a <code>SignalDecisionReportRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SignalDecisionReportRequest} obj Optional instance to populate.
     * @return {module:model/SignalDecisionReportRequest} The populated <code>SignalDecisionReportRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SignalDecisionReportRequest();

            if (data.hasOwnProperty('amount_instantly_available')) {
                obj['amount_instantly_available'] = ApiClient.convertToType(data['amount_instantly_available'], 'Number');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('client_transaction_id')) {
                obj['client_transaction_id'] = ApiClient.convertToType(data['client_transaction_id'], 'String');
            }
            if (data.hasOwnProperty('days_funds_on_hold')) {
                obj['days_funds_on_hold'] = ApiClient.convertToType(data['days_funds_on_hold'], 'Number');
            }
            if (data.hasOwnProperty('decision_outcome')) {
                obj['decision_outcome'] = SignalDecisionOutcome.constructFromObject(data['decision_outcome']);
            }
            if (data.hasOwnProperty('initiated')) {
                obj['initiated'] = ApiClient.convertToType(data['initiated'], 'Boolean');
            }
            if (data.hasOwnProperty('payment_method')) {
                obj['payment_method'] = SignalPaymentMethod.constructFromObject(data['payment_method']);
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SignalDecisionReportRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SignalDecisionReportRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SignalDecisionReportRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['client_transaction_id'] && !(typeof data['client_transaction_id'] === 'string' || data['client_transaction_id'] instanceof String)) {
            throw new Error("Expected the field `client_transaction_id` to be a primitive type in the JSON string but got " + data['client_transaction_id']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }

        return true;
    }


}

SignalDecisionReportRequest.RequiredProperties = ["client_transaction_id", "initiated"];

/**
 * The amount (in USD) made available to your customers instantly following the debit transaction. It could be a partial amount of the requested transaction (example: 102.05).
 * @member {Number} amount_instantly_available
 */
SignalDecisionReportRequest.prototype['amount_instantly_available'] = undefined;

/**
 * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
 * @member {String} client_id
 */
SignalDecisionReportRequest.prototype['client_id'] = undefined;

/**
 * Must be the same as the `client_transaction_id` supplied when calling `/signal/evaluate`
 * @member {String} client_transaction_id
 */
SignalDecisionReportRequest.prototype['client_transaction_id'] = undefined;

/**
 * The actual number of days (hold time) since the ACH debit transaction that you wait before making funds available to your customers. The holding time could affect the ACH return rate.  For example, use 0 if you make funds available to your customers instantly or the same day following the debit transaction, or 1 if you make funds available the next day following the debit initialization.
 * @member {Number} days_funds_on_hold
 */
SignalDecisionReportRequest.prototype['days_funds_on_hold'] = undefined;

/**
 * @member {module:model/SignalDecisionOutcome} decision_outcome
 */
SignalDecisionReportRequest.prototype['decision_outcome'] = undefined;

/**
 * `true` if the ACH transaction was initiated, `false` otherwise.  This field must be returned as a boolean. If formatted incorrectly, this will result in an [`INVALID_FIELD`](/docs/errors/invalid-request/#invalid_field) error.
 * @member {Boolean} initiated
 */
SignalDecisionReportRequest.prototype['initiated'] = undefined;

/**
 * @member {module:model/SignalPaymentMethod} payment_method
 */
SignalDecisionReportRequest.prototype['payment_method'] = undefined;

/**
 * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
 * @member {String} secret
 */
SignalDecisionReportRequest.prototype['secret'] = undefined;






export default SignalDecisionReportRequest;

