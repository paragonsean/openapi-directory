/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SecurityOverride model module.
 * @module model/SecurityOverride
 * @version 2020-09-14_1.345.1
 */
class SecurityOverride {
    /**
     * Constructs a new <code>SecurityOverride</code>.
     * Specify the security associated with the holding or investment transaction. When inputting custom security data to the Sandbox, Plaid will perform post-data-retrieval normalization and enrichment. These processes may cause the data returned by the Sandbox to be slightly different from the data you input. An ISO-4217 currency code and a security identifier (&#x60;ticker_symbol&#x60;, &#x60;cusip&#x60;, &#x60;isin&#x60;, or &#x60;sedol&#x60;) are required.
     * @alias module:model/SecurityOverride
     */
    constructor() { 
        
        SecurityOverride.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SecurityOverride</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecurityOverride} obj Optional instance to populate.
     * @return {module:model/SecurityOverride} The populated <code>SecurityOverride</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecurityOverride();

            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('cusip')) {
                obj['cusip'] = ApiClient.convertToType(data['cusip'], 'String');
            }
            if (data.hasOwnProperty('isin')) {
                obj['isin'] = ApiClient.convertToType(data['isin'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sedol')) {
                obj['sedol'] = ApiClient.convertToType(data['sedol'], 'String');
            }
            if (data.hasOwnProperty('ticker_symbol')) {
                obj['ticker_symbol'] = ApiClient.convertToType(data['ticker_symbol'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SecurityOverride</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SecurityOverride</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['cusip'] && !(typeof data['cusip'] === 'string' || data['cusip'] instanceof String)) {
            throw new Error("Expected the field `cusip` to be a primitive type in the JSON string but got " + data['cusip']);
        }
        // ensure the json data is a string
        if (data['isin'] && !(typeof data['isin'] === 'string' || data['isin'] instanceof String)) {
            throw new Error("Expected the field `isin` to be a primitive type in the JSON string but got " + data['isin']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['sedol'] && !(typeof data['sedol'] === 'string' || data['sedol'] instanceof String)) {
            throw new Error("Expected the field `sedol` to be a primitive type in the JSON string but got " + data['sedol']);
        }
        // ensure the json data is a string
        if (data['ticker_symbol'] && !(typeof data['ticker_symbol'] === 'string' || data['ticker_symbol'] instanceof String)) {
            throw new Error("Expected the field `ticker_symbol` to be a primitive type in the JSON string but got " + data['ticker_symbol']);
        }

        return true;
    }


}



/**
 * Either a valid `iso_currency_code` or `unofficial_currency_code`
 * @member {String} currency
 */
SecurityOverride.prototype['currency'] = undefined;

/**
 * 9-character CUSIP, an identifier assigned to North American securities. Please note that Plaid's customers must hold a license directly from CUSIP Global Services to receive CUSIP & ISIN data. This field will be null by default for new customers. For existing customers, this field will be null by default starting on Sept 15, 2023. If you would like access to this field, please contact your Plaid Account Manager or reach out to investments-vendors@plaid.com.
 * @member {String} cusip
 */
SecurityOverride.prototype['cusip'] = undefined;

/**
 * 12-character ISIN, a globally unique securities identifier. Please note that Plaid's customers must hold a license directly from CUSIP Global Services to receive CUSIP & ISIN data. This field will be null by default for new customers. For existing customers, this field will be null by default starting on Sept 15, 2023. If you would like access to this field, please contact your Plaid Account Manager or reach out to investments-vendors@plaid.com.
 * @member {String} isin
 */
SecurityOverride.prototype['isin'] = undefined;

/**
 * A descriptive name for the security, suitable for display.
 * @member {String} name
 */
SecurityOverride.prototype['name'] = undefined;

/**
 * 7-character SEDOL, an identifier assigned to securities in the UK.
 * @member {String} sedol
 */
SecurityOverride.prototype['sedol'] = undefined;

/**
 * The securityâ€™s trading symbol for publicly traded securities, and otherwise a short identifier if available.
 * @member {String} ticker_symbol
 */
SecurityOverride.prototype['ticker_symbol'] = undefined;






export default SecurityOverride;

