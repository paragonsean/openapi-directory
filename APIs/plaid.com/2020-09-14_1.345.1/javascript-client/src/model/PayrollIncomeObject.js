/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Credit1099 from './Credit1099';
import CreditPayStub from './CreditPayStub';
import CreditW2 from './CreditW2';

/**
 * The PayrollIncomeObject model module.
 * @module model/PayrollIncomeObject
 * @version 2020-09-14_1.345.1
 */
class PayrollIncomeObject {
    /**
     * Constructs a new <code>PayrollIncomeObject</code>.
     * An object representing payroll data.
     * @alias module:model/PayrollIncomeObject
     * @extends Object
     * @param accountId {String} ID of the payroll provider account.
     * @param form1099s {Array.<module:model/Credit1099>} Array of tax form 1099s.
     * @param payStubs {Array.<module:model/CreditPayStub>} Array of pay stubs for the user.
     * @param w2s {Array.<module:model/CreditW2>} Array of tax form W-2s.
     */
    constructor(accountId, form1099s, payStubs, w2s) { 
        
        PayrollIncomeObject.initialize(this, accountId, form1099s, payStubs, w2s);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountId, form1099s, payStubs, w2s) { 
        obj['account_id'] = accountId;
        obj['form1099s'] = form1099s;
        obj['pay_stubs'] = payStubs;
        obj['w2s'] = w2s;
    }

    /**
     * Constructs a <code>PayrollIncomeObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PayrollIncomeObject} obj Optional instance to populate.
     * @return {module:model/PayrollIncomeObject} The populated <code>PayrollIncomeObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PayrollIncomeObject();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('form1099s')) {
                obj['form1099s'] = ApiClient.convertToType(data['form1099s'], [Credit1099]);
            }
            if (data.hasOwnProperty('pay_stubs')) {
                obj['pay_stubs'] = ApiClient.convertToType(data['pay_stubs'], [CreditPayStub]);
            }
            if (data.hasOwnProperty('w2s')) {
                obj['w2s'] = ApiClient.convertToType(data['w2s'], [CreditW2]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PayrollIncomeObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PayrollIncomeObject</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PayrollIncomeObject.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['form1099s'])) {
            throw new Error("Expected the field `form1099s` to be an array in the JSON data but got " + data['form1099s']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['pay_stubs'])) {
            throw new Error("Expected the field `pay_stubs` to be an array in the JSON data but got " + data['pay_stubs']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['w2s'])) {
            throw new Error("Expected the field `w2s` to be an array in the JSON data but got " + data['w2s']);
        }

        return true;
    }


}

PayrollIncomeObject.RequiredProperties = ["account_id", "form1099s", "pay_stubs", "w2s"];

/**
 * ID of the payroll provider account.
 * @member {String} account_id
 */
PayrollIncomeObject.prototype['account_id'] = undefined;

/**
 * Array of tax form 1099s.
 * @member {Array.<module:model/Credit1099>} form1099s
 */
PayrollIncomeObject.prototype['form1099s'] = undefined;

/**
 * Array of pay stubs for the user.
 * @member {Array.<module:model/CreditPayStub>} pay_stubs
 */
PayrollIncomeObject.prototype['pay_stubs'] = undefined;

/**
 * Array of tax form W-2s.
 * @member {Array.<module:model/CreditW2>} w2s
 */
PayrollIncomeObject.prototype['w2s'] = undefined;






export default PayrollIncomeObject;

