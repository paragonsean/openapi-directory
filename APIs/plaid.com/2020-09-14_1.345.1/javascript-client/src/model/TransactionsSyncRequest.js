/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransactionsSyncRequestOptions from './TransactionsSyncRequestOptions';

/**
 * The TransactionsSyncRequest model module.
 * @module model/TransactionsSyncRequest
 * @version 2020-09-14_1.345.1
 */
class TransactionsSyncRequest {
    /**
     * Constructs a new <code>TransactionsSyncRequest</code>.
     * TransactionsSyncRequest defines the request schema for &#x60;/transactions/sync&#x60;
     * @alias module:model/TransactionsSyncRequest
     * @param accessToken {String} The access token associated with the Item data is being requested for.
     */
    constructor(accessToken) { 
        
        TransactionsSyncRequest.initialize(this, accessToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessToken) { 
        obj['access_token'] = accessToken;
        obj['count'] = 100;
    }

    /**
     * Constructs a <code>TransactionsSyncRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionsSyncRequest} obj Optional instance to populate.
     * @return {module:model/TransactionsSyncRequest} The populated <code>TransactionsSyncRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionsSyncRequest();

            if (data.hasOwnProperty('access_token')) {
                obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('cursor')) {
                obj['cursor'] = ApiClient.convertToType(data['cursor'], 'String');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = TransactionsSyncRequestOptions.constructFromObject(data['options']);
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionsSyncRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionsSyncRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransactionsSyncRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['access_token'] && !(typeof data['access_token'] === 'string' || data['access_token'] instanceof String)) {
            throw new Error("Expected the field `access_token` to be a primitive type in the JSON string but got " + data['access_token']);
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['cursor'] && !(typeof data['cursor'] === 'string' || data['cursor'] instanceof String)) {
            throw new Error("Expected the field `cursor` to be a primitive type in the JSON string but got " + data['cursor']);
        }
        // validate the optional field `options`
        if (data['options']) { // data not null
          TransactionsSyncRequestOptions.validateJSON(data['options']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }

        return true;
    }


}

TransactionsSyncRequest.RequiredProperties = ["access_token"];

/**
 * The access token associated with the Item data is being requested for.
 * @member {String} access_token
 */
TransactionsSyncRequest.prototype['access_token'] = undefined;

/**
 * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
 * @member {String} client_id
 */
TransactionsSyncRequest.prototype['client_id'] = undefined;

/**
 * The number of transaction updates to fetch.
 * @member {Number} count
 * @default 100
 */
TransactionsSyncRequest.prototype['count'] = 100;

/**
 * The cursor value represents the last update requested. Providing it will cause the response to only return changes after this update. If omitted, the entire history of updates will be returned, starting with the first-added transactions on the item. Note: The upper-bound length of this cursor is 256 characters of base64.
 * @member {String} cursor
 */
TransactionsSyncRequest.prototype['cursor'] = undefined;

/**
 * @member {module:model/TransactionsSyncRequestOptions} options
 */
TransactionsSyncRequest.prototype['options'] = undefined;

/**
 * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
 * @member {String} secret
 */
TransactionsSyncRequest.prototype['secret'] = undefined;






export default TransactionsSyncRequest;

