/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreditBankIncomeCategory from './CreditBankIncomeCategory';
import CreditBankIncomeHistoricalSummary from './CreditBankIncomeHistoricalSummary';
import CreditBankIncomePayFrequency from './CreditBankIncomePayFrequency';

/**
 * The CreditBankIncomeSource model module.
 * @module model/CreditBankIncomeSource
 * @version 2020-09-14_1.345.1
 */
class CreditBankIncomeSource {
    /**
     * Constructs a new <code>CreditBankIncomeSource</code>.
     * Detailed information for the income source.
     * @alias module:model/CreditBankIncomeSource
     */
    constructor() { 
        
        CreditBankIncomeSource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreditBankIncomeSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreditBankIncomeSource} obj Optional instance to populate.
     * @return {module:model/CreditBankIncomeSource} The populated <code>CreditBankIncomeSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreditBankIncomeSource();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
            }
            if (data.hasOwnProperty('historical_summary')) {
                obj['historical_summary'] = ApiClient.convertToType(data['historical_summary'], [CreditBankIncomeHistoricalSummary]);
            }
            if (data.hasOwnProperty('income_category')) {
                obj['income_category'] = CreditBankIncomeCategory.constructFromObject(data['income_category']);
            }
            if (data.hasOwnProperty('income_description')) {
                obj['income_description'] = ApiClient.convertToType(data['income_description'], 'String');
            }
            if (data.hasOwnProperty('income_source_id')) {
                obj['income_source_id'] = ApiClient.convertToType(data['income_source_id'], 'String');
            }
            if (data.hasOwnProperty('pay_frequency')) {
                obj['pay_frequency'] = CreditBankIncomePayFrequency.constructFromObject(data['pay_frequency']);
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('total_amount')) {
                obj['total_amount'] = ApiClient.convertToType(data['total_amount'], 'Number');
            }
            if (data.hasOwnProperty('transaction_count')) {
                obj['transaction_count'] = ApiClient.convertToType(data['transaction_count'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreditBankIncomeSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreditBankIncomeSource</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['historical_summary'])) {
            throw new Error("Expected the field `historical_summary` to be an array in the JSON data but got " + data['historical_summary']);
        }
        // ensure the json data is a string
        if (data['income_description'] && !(typeof data['income_description'] === 'string' || data['income_description'] instanceof String)) {
            throw new Error("Expected the field `income_description` to be a primitive type in the JSON string but got " + data['income_description']);
        }
        // ensure the json data is a string
        if (data['income_source_id'] && !(typeof data['income_source_id'] === 'string' || data['income_source_id'] instanceof String)) {
            throw new Error("Expected the field `income_source_id` to be a primitive type in the JSON string but got " + data['income_source_id']);
        }

        return true;
    }


}



/**
 * Plaid's unique identifier for the account.
 * @member {String} account_id
 */
CreditBankIncomeSource.prototype['account_id'] = undefined;

/**
 * Maximum of all dates within the specific income sources in the user’s bank account for days requested by the client. The date will be returned in an ISO 8601 format (YYYY-MM-DD).
 * @member {Date} end_date
 */
CreditBankIncomeSource.prototype['end_date'] = undefined;

/**
 * @member {Array.<module:model/CreditBankIncomeHistoricalSummary>} historical_summary
 */
CreditBankIncomeSource.prototype['historical_summary'] = undefined;

/**
 * @member {module:model/CreditBankIncomeCategory} income_category
 */
CreditBankIncomeSource.prototype['income_category'] = undefined;

/**
 * The most common name or original description for the underlying income transactions.
 * @member {String} income_description
 */
CreditBankIncomeSource.prototype['income_description'] = undefined;

/**
 * A unique identifier for an income source.
 * @member {String} income_source_id
 */
CreditBankIncomeSource.prototype['income_source_id'] = undefined;

/**
 * @member {module:model/CreditBankIncomePayFrequency} pay_frequency
 */
CreditBankIncomeSource.prototype['pay_frequency'] = undefined;

/**
 * Minimum of all dates within the specific income sources in the user's bank account for days requested by the client. The date will be returned in an ISO 8601 format (YYYY-MM-DD).
 * @member {Date} start_date
 */
CreditBankIncomeSource.prototype['start_date'] = undefined;

/**
 * Total amount of earnings in the user’s bank account for the specific income source for days requested by the client.
 * @member {Number} total_amount
 */
CreditBankIncomeSource.prototype['total_amount'] = undefined;

/**
 * Number of transactions for the income source within the start and end date.
 * @member {Number} transaction_count
 */
CreditBankIncomeSource.prototype['transaction_count'] = undefined;






export default CreditBankIncomeSource;

