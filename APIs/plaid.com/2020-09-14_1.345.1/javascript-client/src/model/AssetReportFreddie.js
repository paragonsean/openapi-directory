/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Loans from './Loans';
import Parties from './Parties';
import Services from './Services';

/**
 * The AssetReportFreddie model module.
 * @module model/AssetReportFreddie
 * @version 2020-09-14_1.345.1
 */
class AssetReportFreddie {
    /**
     * Constructs a new <code>AssetReportFreddie</code>.
     * An object representing an Asset Report with Freddie Mac schema.
     * @alias module:model/AssetReportFreddie
     * @extends Object
     * @param LOANS {module:model/Loans} 
     * @param PARTIES {module:model/Parties} 
     * @param SERVICES {module:model/Services} 
     */
    constructor(LOANS, PARTIES, SERVICES) { 
        
        AssetReportFreddie.initialize(this, LOANS, PARTIES, SERVICES);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, LOANS, PARTIES, SERVICES) { 
        obj['LOANS'] = LOANS;
        obj['PARTIES'] = PARTIES;
        obj['SERVICES'] = SERVICES;
    }

    /**
     * Constructs a <code>AssetReportFreddie</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetReportFreddie} obj Optional instance to populate.
     * @return {module:model/AssetReportFreddie} The populated <code>AssetReportFreddie</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetReportFreddie();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('LOANS')) {
                obj['LOANS'] = Loans.constructFromObject(data['LOANS']);
            }
            if (data.hasOwnProperty('PARTIES')) {
                obj['PARTIES'] = Parties.constructFromObject(data['PARTIES']);
            }
            if (data.hasOwnProperty('SERVICES')) {
                obj['SERVICES'] = Services.constructFromObject(data['SERVICES']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetReportFreddie</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetReportFreddie</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssetReportFreddie.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

AssetReportFreddie.RequiredProperties = ["LOANS", "PARTIES", "SERVICES"];

/**
 * @member {module:model/Loans} LOANS
 */
AssetReportFreddie.prototype['LOANS'] = undefined;

/**
 * @member {module:model/Parties} PARTIES
 */
AssetReportFreddie.prototype['PARTIES'] = undefined;

/**
 * @member {module:model/Services} SERVICES
 */
AssetReportFreddie.prototype['SERVICES'] = undefined;






export default AssetReportFreddie;

