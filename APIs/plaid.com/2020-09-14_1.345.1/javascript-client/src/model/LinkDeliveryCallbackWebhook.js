/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinkCallbackMetadata from './LinkCallbackMetadata';
import PlaidError from './PlaidError';

/**
 * The LinkDeliveryCallbackWebhook model module.
 * @module model/LinkDeliveryCallbackWebhook
 * @version 2020-09-14_1.345.1
 */
class LinkDeliveryCallbackWebhook {
    /**
     * Constructs a new <code>LinkDeliveryCallbackWebhook</code>.
     * Webhook containing metadata proxied over from Link callback e.g &#x60;onEvent&#x60;, &#x60;onExit&#x60;, &#x60;onSuccess&#x60;.
     * @alias module:model/LinkDeliveryCallbackWebhook
     * @extends Object
     * @param linkCallbackMetadata {module:model/LinkCallbackMetadata} 
     * @param linkDeliverySessionId {String} The ID of the link delivery session.
     * @param timestamp {String} Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
     * @param webhookCode {String} `LINK_CALLBACK`
     * @param webhookType {String} `LINK_DELIVERY`
     */
    constructor(linkCallbackMetadata, linkDeliverySessionId, timestamp, webhookCode, webhookType) { 
        
        LinkDeliveryCallbackWebhook.initialize(this, linkCallbackMetadata, linkDeliverySessionId, timestamp, webhookCode, webhookType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, linkCallbackMetadata, linkDeliverySessionId, timestamp, webhookCode, webhookType) { 
        obj['link_callback_metadata'] = linkCallbackMetadata;
        obj['link_delivery_session_id'] = linkDeliverySessionId;
        obj['timestamp'] = timestamp;
        obj['webhook_code'] = webhookCode;
        obj['webhook_type'] = webhookType;
    }

    /**
     * Constructs a <code>LinkDeliveryCallbackWebhook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LinkDeliveryCallbackWebhook} obj Optional instance to populate.
     * @return {module:model/LinkDeliveryCallbackWebhook} The populated <code>LinkDeliveryCallbackWebhook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LinkDeliveryCallbackWebhook();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('error')) {
                obj['error'] = PlaidError.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('link_callback_metadata')) {
                obj['link_callback_metadata'] = LinkCallbackMetadata.constructFromObject(data['link_callback_metadata']);
            }
            if (data.hasOwnProperty('link_delivery_session_id')) {
                obj['link_delivery_session_id'] = ApiClient.convertToType(data['link_delivery_session_id'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'String');
            }
            if (data.hasOwnProperty('webhook_code')) {
                obj['webhook_code'] = ApiClient.convertToType(data['webhook_code'], 'String');
            }
            if (data.hasOwnProperty('webhook_type')) {
                obj['webhook_type'] = ApiClient.convertToType(data['webhook_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LinkDeliveryCallbackWebhook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LinkDeliveryCallbackWebhook</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LinkDeliveryCallbackWebhook.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['link_delivery_session_id'] && !(typeof data['link_delivery_session_id'] === 'string' || data['link_delivery_session_id'] instanceof String)) {
            throw new Error("Expected the field `link_delivery_session_id` to be a primitive type in the JSON string but got " + data['link_delivery_session_id']);
        }
        // ensure the json data is a string
        if (data['timestamp'] && !(typeof data['timestamp'] === 'string' || data['timestamp'] instanceof String)) {
            throw new Error("Expected the field `timestamp` to be a primitive type in the JSON string but got " + data['timestamp']);
        }
        // ensure the json data is a string
        if (data['webhook_code'] && !(typeof data['webhook_code'] === 'string' || data['webhook_code'] instanceof String)) {
            throw new Error("Expected the field `webhook_code` to be a primitive type in the JSON string but got " + data['webhook_code']);
        }
        // ensure the json data is a string
        if (data['webhook_type'] && !(typeof data['webhook_type'] === 'string' || data['webhook_type'] instanceof String)) {
            throw new Error("Expected the field `webhook_type` to be a primitive type in the JSON string but got " + data['webhook_type']);
        }

        return true;
    }


}

LinkDeliveryCallbackWebhook.RequiredProperties = ["link_callback_metadata", "link_delivery_session_id", "timestamp", "webhook_code", "webhook_type"];

/**
 * @member {module:model/PlaidError} error
 */
LinkDeliveryCallbackWebhook.prototype['error'] = undefined;

/**
 * @member {module:model/LinkCallbackMetadata} link_callback_metadata
 */
LinkDeliveryCallbackWebhook.prototype['link_callback_metadata'] = undefined;

/**
 * The ID of the link delivery session.
 * @member {String} link_delivery_session_id
 */
LinkDeliveryCallbackWebhook.prototype['link_delivery_session_id'] = undefined;

/**
 * Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
 * @member {String} timestamp
 */
LinkDeliveryCallbackWebhook.prototype['timestamp'] = undefined;

/**
 * `LINK_CALLBACK`
 * @member {String} webhook_code
 */
LinkDeliveryCallbackWebhook.prototype['webhook_code'] = undefined;

/**
 * `LINK_DELIVERY`
 * @member {String} webhook_type
 */
LinkDeliveryCallbackWebhook.prototype['webhook_type'] = undefined;






export default LinkDeliveryCallbackWebhook;

