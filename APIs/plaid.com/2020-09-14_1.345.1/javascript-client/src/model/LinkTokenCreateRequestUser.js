/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinkTokenCreateRequestUserName from './LinkTokenCreateRequestUserName';
import UserAddress from './UserAddress';
import UserIDNumber from './UserIDNumber';

/**
 * The LinkTokenCreateRequestUser model module.
 * @module model/LinkTokenCreateRequestUser
 * @version 2020-09-14_1.345.1
 */
class LinkTokenCreateRequestUser {
    /**
     * Constructs a new <code>LinkTokenCreateRequestUser</code>.
     * An object specifying information about the end user who will be linking their account.
     * @alias module:model/LinkTokenCreateRequestUser
     * @param clientUserId {String} A unique ID representing the end user. Typically this will be a user ID number from your application. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`. It is currently used as a means of searching logs for the given user in the Plaid Dashboard.
     */
    constructor(clientUserId) { 
        
        LinkTokenCreateRequestUser.initialize(this, clientUserId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientUserId) { 
        obj['client_user_id'] = clientUserId;
    }

    /**
     * Constructs a <code>LinkTokenCreateRequestUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LinkTokenCreateRequestUser} obj Optional instance to populate.
     * @return {module:model/LinkTokenCreateRequestUser} The populated <code>LinkTokenCreateRequestUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LinkTokenCreateRequestUser();

            if (data.hasOwnProperty('address')) {
                obj['address'] = UserAddress.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('client_user_id')) {
                obj['client_user_id'] = ApiClient.convertToType(data['client_user_id'], 'String');
            }
            if (data.hasOwnProperty('date_of_birth')) {
                obj['date_of_birth'] = ApiClient.convertToType(data['date_of_birth'], 'Date');
            }
            if (data.hasOwnProperty('email_address')) {
                obj['email_address'] = ApiClient.convertToType(data['email_address'], 'String');
            }
            if (data.hasOwnProperty('email_address_verified_time')) {
                obj['email_address_verified_time'] = ApiClient.convertToType(data['email_address_verified_time'], 'Date');
            }
            if (data.hasOwnProperty('id_number')) {
                obj['id_number'] = UserIDNumber.constructFromObject(data['id_number']);
            }
            if (data.hasOwnProperty('legal_name')) {
                obj['legal_name'] = ApiClient.convertToType(data['legal_name'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = LinkTokenCreateRequestUserName.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('phone_number_verified_time')) {
                obj['phone_number_verified_time'] = ApiClient.convertToType(data['phone_number_verified_time'], 'Date');
            }
            if (data.hasOwnProperty('ssn')) {
                obj['ssn'] = ApiClient.convertToType(data['ssn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LinkTokenCreateRequestUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LinkTokenCreateRequestUser</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LinkTokenCreateRequestUser.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['client_user_id'] && !(typeof data['client_user_id'] === 'string' || data['client_user_id'] instanceof String)) {
            throw new Error("Expected the field `client_user_id` to be a primitive type in the JSON string but got " + data['client_user_id']);
        }
        // ensure the json data is a string
        if (data['email_address'] && !(typeof data['email_address'] === 'string' || data['email_address'] instanceof String)) {
            throw new Error("Expected the field `email_address` to be a primitive type in the JSON string but got " + data['email_address']);
        }
        // ensure the json data is a string
        if (data['legal_name'] && !(typeof data['legal_name'] === 'string' || data['legal_name'] instanceof String)) {
            throw new Error("Expected the field `legal_name` to be a primitive type in the JSON string but got " + data['legal_name']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          LinkTokenCreateRequestUserName.validateJSON(data['name']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }
        // ensure the json data is a string
        if (data['ssn'] && !(typeof data['ssn'] === 'string' || data['ssn'] instanceof String)) {
            throw new Error("Expected the field `ssn` to be a primitive type in the JSON string but got " + data['ssn']);
        }

        return true;
    }


}

LinkTokenCreateRequestUser.RequiredProperties = ["client_user_id"];

/**
 * @member {module:model/UserAddress} address
 */
LinkTokenCreateRequestUser.prototype['address'] = undefined;

/**
 * A unique ID representing the end user. Typically this will be a user ID number from your application. Personally identifiable information, such as an email address or phone number, should not be used in the `client_user_id`. It is currently used as a means of searching logs for the given user in the Plaid Dashboard.
 * @member {String} client_user_id
 */
LinkTokenCreateRequestUser.prototype['client_user_id'] = undefined;

/**
 * To be provided in the format \"yyyy-mm-dd\". Not currently used.
 * @member {Date} date_of_birth
 */
LinkTokenCreateRequestUser.prototype['date_of_birth'] = undefined;

/**
 * The user's email address. This field is optional, but required to enable the [pre-authenticated returning user flow](https://plaid.com/docs/link/returning-user/#pre-authenticated-rux).
 * @member {String} email_address
 */
LinkTokenCreateRequestUser.prototype['email_address'] = undefined;

/**
 * The date and time the email address was verified in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). This was previously an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user). This field is no longer required to enable the returning user experience.   Only pass a verification time for an email address that you have verified. If you have performed verification but donâ€™t have the time, you may supply a signal value of the start of the UNIX epoch.   Example: `2020-01-01T00:00:00Z`
 * @member {Date} email_address_verified_time
 */
LinkTokenCreateRequestUser.prototype['email_address_verified_time'] = undefined;

/**
 * @member {module:model/UserIDNumber} id_number
 */
LinkTokenCreateRequestUser.prototype['id_number'] = undefined;

/**
 * The user's full legal name, used for [micro-deposit based verification flows](https://plaid.com/docs/auth/coverage/). For a small number of customers on legacy flows, providing this field is required to enable micro-deposit-based flows. For all other customers, this field is optional, but providing the user's name in this field when using micro-deposit-based verification will enable certain risk checks and can reduce micro-deposit fraud.
 * @member {String} legal_name
 */
LinkTokenCreateRequestUser.prototype['legal_name'] = undefined;

/**
 * @member {module:model/LinkTokenCreateRequestUserName} name
 */
LinkTokenCreateRequestUser.prototype['name'] = undefined;

/**
 * The user's phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format. This field is optional, but required to enable the [returning user experience](https://plaid.com/docs/link/returning-user).
 * @member {String} phone_number
 */
LinkTokenCreateRequestUser.prototype['phone_number'] = undefined;

/**
 * The date and time the phone number was verified in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (`YYYY-MM-DDThh:mm:ssZ`). This was previously an optional field used in the [returning user experience](https://plaid.com/docs/link/returning-user). This field is no longer required to enable the returning user experience.   Only pass a verification time for a phone number that you have verified. If you have performed verification but donâ€™t have the time, you may supply a signal value of the start of the UNIX epoch.   Example: `2020-01-01T00:00:00Z` 
 * @member {Date} phone_number_verified_time
 */
LinkTokenCreateRequestUser.prototype['phone_number_verified_time'] = undefined;

/**
 * To be provided in the format \"ddd-dd-dddd\". Not currently used.
 * @member {String} ssn
 */
LinkTokenCreateRequestUser.prototype['ssn'] = undefined;






export default LinkTokenCreateRequestUser;

