/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransferConfigurationGetResponse model module.
 * @module model/TransferConfigurationGetResponse
 * @version 2020-09-14_1.345.1
 */
class TransferConfigurationGetResponse {
    /**
     * Constructs a new <code>TransferConfigurationGetResponse</code>.
     * Defines the response schema for &#x60;/transfer/configuration/get&#x60;
     * @alias module:model/TransferConfigurationGetResponse
     * @extends Object
     * @param isoCurrencyCode {String} The currency of the dollar amount, e.g. \"USD\".
     * @param maxDailyCreditAmount {String} The max limit of sum of dollar amount of credit transfers in last 24 hours (decimal string with two digits of precision e.g. \"10.00\").
     * @param maxDailyDebitAmount {String} The max limit of sum of dollar amount of debit transfers in last 24 hours (decimal string with two digits of precision e.g. \"10.00\").
     * @param maxMonthlyAmount {String} The max limit of sum of dollar amount of credit and debit transfers in one calendar month (decimal string with two digits of precision e.g. \"10.00\").
     * @param maxSingleTransferAmount {String} The max limit of dollar amount of a single transfer (decimal string with two digits of precision e.g. \"10.00\").
     * @param requestId {String} A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     */
    constructor(isoCurrencyCode, maxDailyCreditAmount, maxDailyDebitAmount, maxMonthlyAmount, maxSingleTransferAmount, requestId) { 
        
        TransferConfigurationGetResponse.initialize(this, isoCurrencyCode, maxDailyCreditAmount, maxDailyDebitAmount, maxMonthlyAmount, maxSingleTransferAmount, requestId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, isoCurrencyCode, maxDailyCreditAmount, maxDailyDebitAmount, maxMonthlyAmount, maxSingleTransferAmount, requestId) { 
        obj['iso_currency_code'] = isoCurrencyCode;
        obj['max_daily_credit_amount'] = maxDailyCreditAmount;
        obj['max_daily_debit_amount'] = maxDailyDebitAmount;
        obj['max_monthly_amount'] = maxMonthlyAmount;
        obj['max_single_transfer_amount'] = maxSingleTransferAmount;
        obj['request_id'] = requestId;
    }

    /**
     * Constructs a <code>TransferConfigurationGetResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransferConfigurationGetResponse} obj Optional instance to populate.
     * @return {module:model/TransferConfigurationGetResponse} The populated <code>TransferConfigurationGetResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransferConfigurationGetResponse();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('iso_currency_code')) {
                obj['iso_currency_code'] = ApiClient.convertToType(data['iso_currency_code'], 'String');
            }
            if (data.hasOwnProperty('max_daily_credit_amount')) {
                obj['max_daily_credit_amount'] = ApiClient.convertToType(data['max_daily_credit_amount'], 'String');
            }
            if (data.hasOwnProperty('max_daily_debit_amount')) {
                obj['max_daily_debit_amount'] = ApiClient.convertToType(data['max_daily_debit_amount'], 'String');
            }
            if (data.hasOwnProperty('max_monthly_amount')) {
                obj['max_monthly_amount'] = ApiClient.convertToType(data['max_monthly_amount'], 'String');
            }
            if (data.hasOwnProperty('max_single_transfer_amount')) {
                obj['max_single_transfer_amount'] = ApiClient.convertToType(data['max_single_transfer_amount'], 'String');
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransferConfigurationGetResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransferConfigurationGetResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransferConfigurationGetResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['iso_currency_code'] && !(typeof data['iso_currency_code'] === 'string' || data['iso_currency_code'] instanceof String)) {
            throw new Error("Expected the field `iso_currency_code` to be a primitive type in the JSON string but got " + data['iso_currency_code']);
        }
        // ensure the json data is a string
        if (data['max_daily_credit_amount'] && !(typeof data['max_daily_credit_amount'] === 'string' || data['max_daily_credit_amount'] instanceof String)) {
            throw new Error("Expected the field `max_daily_credit_amount` to be a primitive type in the JSON string but got " + data['max_daily_credit_amount']);
        }
        // ensure the json data is a string
        if (data['max_daily_debit_amount'] && !(typeof data['max_daily_debit_amount'] === 'string' || data['max_daily_debit_amount'] instanceof String)) {
            throw new Error("Expected the field `max_daily_debit_amount` to be a primitive type in the JSON string but got " + data['max_daily_debit_amount']);
        }
        // ensure the json data is a string
        if (data['max_monthly_amount'] && !(typeof data['max_monthly_amount'] === 'string' || data['max_monthly_amount'] instanceof String)) {
            throw new Error("Expected the field `max_monthly_amount` to be a primitive type in the JSON string but got " + data['max_monthly_amount']);
        }
        // ensure the json data is a string
        if (data['max_single_transfer_amount'] && !(typeof data['max_single_transfer_amount'] === 'string' || data['max_single_transfer_amount'] instanceof String)) {
            throw new Error("Expected the field `max_single_transfer_amount` to be a primitive type in the JSON string but got " + data['max_single_transfer_amount']);
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }

        return true;
    }


}

TransferConfigurationGetResponse.RequiredProperties = ["iso_currency_code", "max_daily_credit_amount", "max_daily_debit_amount", "max_monthly_amount", "max_single_transfer_amount", "request_id"];

/**
 * The currency of the dollar amount, e.g. \"USD\".
 * @member {String} iso_currency_code
 */
TransferConfigurationGetResponse.prototype['iso_currency_code'] = undefined;

/**
 * The max limit of sum of dollar amount of credit transfers in last 24 hours (decimal string with two digits of precision e.g. \"10.00\").
 * @member {String} max_daily_credit_amount
 */
TransferConfigurationGetResponse.prototype['max_daily_credit_amount'] = undefined;

/**
 * The max limit of sum of dollar amount of debit transfers in last 24 hours (decimal string with two digits of precision e.g. \"10.00\").
 * @member {String} max_daily_debit_amount
 */
TransferConfigurationGetResponse.prototype['max_daily_debit_amount'] = undefined;

/**
 * The max limit of sum of dollar amount of credit and debit transfers in one calendar month (decimal string with two digits of precision e.g. \"10.00\").
 * @member {String} max_monthly_amount
 */
TransferConfigurationGetResponse.prototype['max_monthly_amount'] = undefined;

/**
 * The max limit of dollar amount of a single transfer (decimal string with two digits of precision e.g. \"10.00\").
 * @member {String} max_single_transfer_amount
 */
TransferConfigurationGetResponse.prototype['max_single_transfer_amount'] = undefined;

/**
 * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
 * @member {String} request_id
 */
TransferConfigurationGetResponse.prototype['request_id'] = undefined;






export default TransferConfigurationGetResponse;

