/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntityScreeningHitDocumentsItems from './EntityScreeningHitDocumentsItems';
import EntityScreeningHitEmailsItems from './EntityScreeningHitEmailsItems';
import EntityScreeningHitNamesItems from './EntityScreeningHitNamesItems';
import EntityScreeningHitUrlsItems from './EntityScreeningHitUrlsItems';
import EntityScreeningHitsPhoneNumberItems from './EntityScreeningHitsPhoneNumberItems';
import GenericScreeningHitLocationItems from './GenericScreeningHitLocationItems';

/**
 * The EntityScreeningHitData model module.
 * @module model/EntityScreeningHitData
 * @version 2020-09-14_1.345.1
 */
class EntityScreeningHitData {
    /**
     * Constructs a new <code>EntityScreeningHitData</code>.
     * Information associated with the entity watchlist hit
     * @alias module:model/EntityScreeningHitData
     * @extends Object
     */
    constructor() { 
        
        EntityScreeningHitData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EntityScreeningHitData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntityScreeningHitData} obj Optional instance to populate.
     * @return {module:model/EntityScreeningHitData} The populated <code>EntityScreeningHitData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntityScreeningHitData();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('documents')) {
                obj['documents'] = ApiClient.convertToType(data['documents'], [EntityScreeningHitDocumentsItems]);
            }
            if (data.hasOwnProperty('email_addresses')) {
                obj['email_addresses'] = ApiClient.convertToType(data['email_addresses'], [EntityScreeningHitEmailsItems]);
            }
            if (data.hasOwnProperty('locations')) {
                obj['locations'] = ApiClient.convertToType(data['locations'], [GenericScreeningHitLocationItems]);
            }
            if (data.hasOwnProperty('names')) {
                obj['names'] = ApiClient.convertToType(data['names'], [EntityScreeningHitNamesItems]);
            }
            if (data.hasOwnProperty('phone_numbers')) {
                obj['phone_numbers'] = ApiClient.convertToType(data['phone_numbers'], [EntityScreeningHitsPhoneNumberItems]);
            }
            if (data.hasOwnProperty('urls')) {
                obj['urls'] = ApiClient.convertToType(data['urls'], [EntityScreeningHitUrlsItems]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EntityScreeningHitData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EntityScreeningHitData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['documents'])) {
            throw new Error("Expected the field `documents` to be an array in the JSON data but got " + data['documents']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['email_addresses'])) {
            throw new Error("Expected the field `email_addresses` to be an array in the JSON data but got " + data['email_addresses']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['locations'])) {
            throw new Error("Expected the field `locations` to be an array in the JSON data but got " + data['locations']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['names'])) {
            throw new Error("Expected the field `names` to be an array in the JSON data but got " + data['names']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['phone_numbers'])) {
            throw new Error("Expected the field `phone_numbers` to be an array in the JSON data but got " + data['phone_numbers']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['urls'])) {
            throw new Error("Expected the field `urls` to be an array in the JSON data but got " + data['urls']);
        }

        return true;
    }


}



/**
 * Documents associated with the watchlist hit
 * @member {Array.<module:model/EntityScreeningHitDocumentsItems>} documents
 */
EntityScreeningHitData.prototype['documents'] = undefined;

/**
 * Email addresses associated with the watchlist hit
 * @member {Array.<module:model/EntityScreeningHitEmailsItems>} email_addresses
 */
EntityScreeningHitData.prototype['email_addresses'] = undefined;

/**
 * Locations associated with the watchlist hit
 * @member {Array.<module:model/GenericScreeningHitLocationItems>} locations
 */
EntityScreeningHitData.prototype['locations'] = undefined;

/**
 * Names associated with the watchlist hit
 * @member {Array.<module:model/EntityScreeningHitNamesItems>} names
 */
EntityScreeningHitData.prototype['names'] = undefined;

/**
 * Phone numbers associated with the watchlist hit
 * @member {Array.<module:model/EntityScreeningHitsPhoneNumberItems>} phone_numbers
 */
EntityScreeningHitData.prototype['phone_numbers'] = undefined;

/**
 * URLs associated with the watchlist hit
 * @member {Array.<module:model/EntityScreeningHitUrlsItems>} urls
 */
EntityScreeningHitData.prototype['urls'] = undefined;






export default EntityScreeningHitData;

