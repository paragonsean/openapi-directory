/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Scopes from './Scopes';
import ScopesContext from './ScopesContext';

/**
 * The ItemApplicationScopesUpdateRequest model module.
 * @module model/ItemApplicationScopesUpdateRequest
 * @version 2020-09-14_1.345.1
 */
class ItemApplicationScopesUpdateRequest {
    /**
     * Constructs a new <code>ItemApplicationScopesUpdateRequest</code>.
     * ItemApplicationScopesUpdateRequest defines the request schema for &#x60;/item/application/scopes/update&#x60;
     * @alias module:model/ItemApplicationScopesUpdateRequest
     * @param accessToken {String} The access token associated with the Item data is being requested for.
     * @param applicationId {String} This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.
     * @param context {module:model/ScopesContext} 
     * @param scopes {module:model/Scopes} 
     */
    constructor(accessToken, applicationId, context, scopes) { 
        
        ItemApplicationScopesUpdateRequest.initialize(this, accessToken, applicationId, context, scopes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessToken, applicationId, context, scopes) { 
        obj['access_token'] = accessToken;
        obj['application_id'] = applicationId;
        obj['context'] = context;
        obj['scopes'] = scopes;
    }

    /**
     * Constructs a <code>ItemApplicationScopesUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItemApplicationScopesUpdateRequest} obj Optional instance to populate.
     * @return {module:model/ItemApplicationScopesUpdateRequest} The populated <code>ItemApplicationScopesUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ItemApplicationScopesUpdateRequest();

            if (data.hasOwnProperty('access_token')) {
                obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
            }
            if (data.hasOwnProperty('application_id')) {
                obj['application_id'] = ApiClient.convertToType(data['application_id'], 'String');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('context')) {
                obj['context'] = ScopesContext.constructFromObject(data['context']);
            }
            if (data.hasOwnProperty('scopes')) {
                obj['scopes'] = Scopes.constructFromObject(data['scopes']);
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ItemApplicationScopesUpdateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ItemApplicationScopesUpdateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ItemApplicationScopesUpdateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['access_token'] && !(typeof data['access_token'] === 'string' || data['access_token'] instanceof String)) {
            throw new Error("Expected the field `access_token` to be a primitive type in the JSON string but got " + data['access_token']);
        }
        // ensure the json data is a string
        if (data['application_id'] && !(typeof data['application_id'] === 'string' || data['application_id'] instanceof String)) {
            throw new Error("Expected the field `application_id` to be a primitive type in the JSON string but got " + data['application_id']);
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // validate the optional field `scopes`
        if (data['scopes']) { // data not null
          Scopes.validateJSON(data['scopes']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}

ItemApplicationScopesUpdateRequest.RequiredProperties = ["access_token", "application_id", "context", "scopes"];

/**
 * The access token associated with the Item data is being requested for.
 * @member {String} access_token
 */
ItemApplicationScopesUpdateRequest.prototype['access_token'] = undefined;

/**
 * This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.
 * @member {String} application_id
 */
ItemApplicationScopesUpdateRequest.prototype['application_id'] = undefined;

/**
 * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
 * @member {String} client_id
 */
ItemApplicationScopesUpdateRequest.prototype['client_id'] = undefined;

/**
 * @member {module:model/ScopesContext} context
 */
ItemApplicationScopesUpdateRequest.prototype['context'] = undefined;

/**
 * @member {module:model/Scopes} scopes
 */
ItemApplicationScopesUpdateRequest.prototype['scopes'] = undefined;

/**
 * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
 * @member {String} secret
 */
ItemApplicationScopesUpdateRequest.prototype['secret'] = undefined;

/**
 * When scopes are updated during enrollment, this field must be populated with the state sent to the partner in the OAuth Login URI. This field is required when the context is `ENROLLMENT`.
 * @member {String} state
 */
ItemApplicationScopesUpdateRequest.prototype['state'] = undefined;






export default ItemApplicationScopesUpdateRequest;

