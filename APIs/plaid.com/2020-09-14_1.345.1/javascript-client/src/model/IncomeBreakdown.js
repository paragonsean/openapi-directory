/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IncomeBreakdownType from './IncomeBreakdownType';

/**
 * The IncomeBreakdown model module.
 * @module model/IncomeBreakdown
 * @version 2020-09-14_1.345.1
 */
class IncomeBreakdown {
    /**
     * Constructs a new <code>IncomeBreakdown</code>.
     * An object representing a breakdown of the different income types on the paystub.
     * @alias module:model/IncomeBreakdown
     * @extends Object
     * @param hours {Number} The number of hours logged for this income for this pay period.
     * @param rate {Number} The hourly rate at which the income is paid.
     * @param total {Number} The total pay for this pay period.
     * @param type {module:model/IncomeBreakdownType} 
     */
    constructor(hours, rate, total, type) { 
        
        IncomeBreakdown.initialize(this, hours, rate, total, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, hours, rate, total, type) { 
        obj['hours'] = hours;
        obj['rate'] = rate;
        obj['total'] = total;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>IncomeBreakdown</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IncomeBreakdown} obj Optional instance to populate.
     * @return {module:model/IncomeBreakdown} The populated <code>IncomeBreakdown</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IncomeBreakdown();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('hours')) {
                obj['hours'] = ApiClient.convertToType(data['hours'], 'Number');
            }
            if (data.hasOwnProperty('rate')) {
                obj['rate'] = ApiClient.convertToType(data['rate'], 'Number');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = IncomeBreakdownType.constructFromObject(data['type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IncomeBreakdown</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IncomeBreakdown</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IncomeBreakdown.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

IncomeBreakdown.RequiredProperties = ["hours", "rate", "total", "type"];

/**
 * The number of hours logged for this income for this pay period.
 * @member {Number} hours
 */
IncomeBreakdown.prototype['hours'] = undefined;

/**
 * The hourly rate at which the income is paid.
 * @member {Number} rate
 */
IncomeBreakdown.prototype['rate'] = undefined;

/**
 * The total pay for this pay period.
 * @member {Number} total
 */
IncomeBreakdown.prototype['total'] = undefined;

/**
 * @member {module:model/IncomeBreakdownType} type
 */
IncomeBreakdown.prototype['type'] = undefined;






export default IncomeBreakdown;

