/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreditSessionBankEmploymentResult from './CreditSessionBankEmploymentResult';
import CreditSessionBankIncomeResult from './CreditSessionBankIncomeResult';
import CreditSessionDocumentIncomeResult from './CreditSessionDocumentIncomeResult';
import CreditSessionItemAddResult from './CreditSessionItemAddResult';
import CreditSessionPayrollIncomeResult from './CreditSessionPayrollIncomeResult';

/**
 * The CreditSessionResults model module.
 * @module model/CreditSessionResults
 * @version 2020-09-14_1.345.1
 */
class CreditSessionResults {
    /**
     * Constructs a new <code>CreditSessionResults</code>.
     * The set of results for a Link session.
     * @alias module:model/CreditSessionResults
     */
    constructor() { 
        
        CreditSessionResults.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreditSessionResults</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreditSessionResults} obj Optional instance to populate.
     * @return {module:model/CreditSessionResults} The populated <code>CreditSessionResults</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreditSessionResults();

            if (data.hasOwnProperty('bank_employment_results')) {
                obj['bank_employment_results'] = ApiClient.convertToType(data['bank_employment_results'], [CreditSessionBankEmploymentResult]);
            }
            if (data.hasOwnProperty('bank_income_results')) {
                obj['bank_income_results'] = ApiClient.convertToType(data['bank_income_results'], [CreditSessionBankIncomeResult]);
            }
            if (data.hasOwnProperty('document_income_results')) {
                obj['document_income_results'] = CreditSessionDocumentIncomeResult.constructFromObject(data['document_income_results']);
            }
            if (data.hasOwnProperty('item_add_results')) {
                obj['item_add_results'] = ApiClient.convertToType(data['item_add_results'], [CreditSessionItemAddResult]);
            }
            if (data.hasOwnProperty('payroll_income_results')) {
                obj['payroll_income_results'] = ApiClient.convertToType(data['payroll_income_results'], [CreditSessionPayrollIncomeResult]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreditSessionResults</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreditSessionResults</code>.
     */
    static validateJSON(data) {
        if (data['bank_employment_results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bank_employment_results'])) {
                throw new Error("Expected the field `bank_employment_results` to be an array in the JSON data but got " + data['bank_employment_results']);
            }
            // validate the optional field `bank_employment_results` (array)
            for (const item of data['bank_employment_results']) {
                CreditSessionBankEmploymentResult.validateJSON(item);
            };
        }
        if (data['bank_income_results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bank_income_results'])) {
                throw new Error("Expected the field `bank_income_results` to be an array in the JSON data but got " + data['bank_income_results']);
            }
            // validate the optional field `bank_income_results` (array)
            for (const item of data['bank_income_results']) {
                CreditSessionBankIncomeResult.validateJSON(item);
            };
        }
        // validate the optional field `document_income_results`
        if (data['document_income_results']) { // data not null
          CreditSessionDocumentIncomeResult.validateJSON(data['document_income_results']);
        }
        if (data['item_add_results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['item_add_results'])) {
                throw new Error("Expected the field `item_add_results` to be an array in the JSON data but got " + data['item_add_results']);
            }
            // validate the optional field `item_add_results` (array)
            for (const item of data['item_add_results']) {
                CreditSessionItemAddResult.validateJSON(item);
            };
        }
        if (data['payroll_income_results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['payroll_income_results'])) {
                throw new Error("Expected the field `payroll_income_results` to be an array in the JSON data but got " + data['payroll_income_results']);
            }
            // validate the optional field `payroll_income_results` (array)
            for (const item of data['payroll_income_results']) {
                CreditSessionPayrollIncomeResult.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The set of bank employment verifications for the Link session.
 * @member {Array.<module:model/CreditSessionBankEmploymentResult>} bank_employment_results
 */
CreditSessionResults.prototype['bank_employment_results'] = undefined;

/**
 * The set of bank income verifications for the Link session.
 * @member {Array.<module:model/CreditSessionBankIncomeResult>} bank_income_results
 */
CreditSessionResults.prototype['bank_income_results'] = undefined;

/**
 * @member {module:model/CreditSessionDocumentIncomeResult} document_income_results
 */
CreditSessionResults.prototype['document_income_results'] = undefined;

/**
 * The set of Item adds for the Link session.
 * @member {Array.<module:model/CreditSessionItemAddResult>} item_add_results
 */
CreditSessionResults.prototype['item_add_results'] = undefined;

/**
 * The set of payroll income verifications for the Link session.
 * @member {Array.<module:model/CreditSessionPayrollIncomeResult>} payroll_income_results
 */
CreditSessionResults.prototype['payroll_income_results'] = undefined;






export default CreditSessionResults;

