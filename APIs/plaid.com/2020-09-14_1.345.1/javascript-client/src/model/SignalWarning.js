/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SignalWarning model module.
 * @module model/SignalWarning
 * @version 2020-09-14_1.345.1
 */
class SignalWarning {
    /**
     * Constructs a new <code>SignalWarning</code>.
     * Conveys information about the errors causing missing or stale bank data used to construct the /signal/evaluate scores and response
     * @alias module:model/SignalWarning
     */
    constructor() { 
        
        SignalWarning.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SignalWarning</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SignalWarning} obj Optional instance to populate.
     * @return {module:model/SignalWarning} The populated <code>SignalWarning</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SignalWarning();

            if (data.hasOwnProperty('warning_code')) {
                obj['warning_code'] = ApiClient.convertToType(data['warning_code'], 'String');
            }
            if (data.hasOwnProperty('warning_message')) {
                obj['warning_message'] = ApiClient.convertToType(data['warning_message'], 'String');
            }
            if (data.hasOwnProperty('warning_type')) {
                obj['warning_type'] = ApiClient.convertToType(data['warning_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SignalWarning</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SignalWarning</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['warning_code'] && !(typeof data['warning_code'] === 'string' || data['warning_code'] instanceof String)) {
            throw new Error("Expected the field `warning_code` to be a primitive type in the JSON string but got " + data['warning_code']);
        }
        // ensure the json data is a string
        if (data['warning_message'] && !(typeof data['warning_message'] === 'string' || data['warning_message'] instanceof String)) {
            throw new Error("Expected the field `warning_message` to be a primitive type in the JSON string but got " + data['warning_message']);
        }
        // ensure the json data is a string
        if (data['warning_type'] && !(typeof data['warning_type'] === 'string' || data['warning_type'] instanceof String)) {
            throw new Error("Expected the field `warning_type` to be a primitive type in the JSON string but got " + data['warning_type']);
        }

        return true;
    }


}



/**
 * The particular warning code.
 * @member {String} warning_code
 */
SignalWarning.prototype['warning_code'] = undefined;

/**
 * A developer-friendly representation of the warning code.
 * @member {String} warning_message
 */
SignalWarning.prototype['warning_message'] = undefined;

/**
 * Broad categorization of the warning.
 * @member {String} warning_type
 */
SignalWarning.prototype['warning_type'] = undefined;






export default SignalWarning;

