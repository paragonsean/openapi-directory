/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DocumentDateOfBirthMatchCode from './DocumentDateOfBirthMatchCode';
import DocumentNameMatchCode from './DocumentNameMatchCode';
import ExpirationDate from './ExpirationDate';
import IssuingCountry from './IssuingCountry';

/**
 * The PhysicalDocumentExtractedDataAnalysis model module.
 * @module model/PhysicalDocumentExtractedDataAnalysis
 * @version 2020-09-14_1.345.1
 */
class PhysicalDocumentExtractedDataAnalysis {
    /**
     * Constructs a new <code>PhysicalDocumentExtractedDataAnalysis</code>.
     * Analysis of the data extracted from the submitted document.
     * @alias module:model/PhysicalDocumentExtractedDataAnalysis
     * @extends Object
     * @param dateOfBirth {module:model/DocumentDateOfBirthMatchCode} 
     * @param expirationDate {module:model/ExpirationDate} 
     * @param issuingCountry {module:model/IssuingCountry} 
     * @param name {module:model/DocumentNameMatchCode} 
     */
    constructor(dateOfBirth, expirationDate, issuingCountry, name) { 
        
        PhysicalDocumentExtractedDataAnalysis.initialize(this, dateOfBirth, expirationDate, issuingCountry, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dateOfBirth, expirationDate, issuingCountry, name) { 
        obj['date_of_birth'] = dateOfBirth;
        obj['expiration_date'] = expirationDate;
        obj['issuing_country'] = issuingCountry;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>PhysicalDocumentExtractedDataAnalysis</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PhysicalDocumentExtractedDataAnalysis} obj Optional instance to populate.
     * @return {module:model/PhysicalDocumentExtractedDataAnalysis} The populated <code>PhysicalDocumentExtractedDataAnalysis</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PhysicalDocumentExtractedDataAnalysis();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('date_of_birth')) {
                obj['date_of_birth'] = DocumentDateOfBirthMatchCode.constructFromObject(data['date_of_birth']);
            }
            if (data.hasOwnProperty('expiration_date')) {
                obj['expiration_date'] = ExpirationDate.constructFromObject(data['expiration_date']);
            }
            if (data.hasOwnProperty('issuing_country')) {
                obj['issuing_country'] = IssuingCountry.constructFromObject(data['issuing_country']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = DocumentNameMatchCode.constructFromObject(data['name']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PhysicalDocumentExtractedDataAnalysis</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PhysicalDocumentExtractedDataAnalysis</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PhysicalDocumentExtractedDataAnalysis.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

PhysicalDocumentExtractedDataAnalysis.RequiredProperties = ["date_of_birth", "expiration_date", "issuing_country", "name"];

/**
 * @member {module:model/DocumentDateOfBirthMatchCode} date_of_birth
 */
PhysicalDocumentExtractedDataAnalysis.prototype['date_of_birth'] = undefined;

/**
 * @member {module:model/ExpirationDate} expiration_date
 */
PhysicalDocumentExtractedDataAnalysis.prototype['expiration_date'] = undefined;

/**
 * @member {module:model/IssuingCountry} issuing_country
 */
PhysicalDocumentExtractedDataAnalysis.prototype['issuing_country'] = undefined;

/**
 * @member {module:model/DocumentNameMatchCode} name
 */
PhysicalDocumentExtractedDataAnalysis.prototype['name'] = undefined;






export default PhysicalDocumentExtractedDataAnalysis;

