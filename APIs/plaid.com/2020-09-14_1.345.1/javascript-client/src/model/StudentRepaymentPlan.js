/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StudentRepaymentPlan model module.
 * @module model/StudentRepaymentPlan
 * @version 2020-09-14_1.345.1
 */
class StudentRepaymentPlan {
    /**
     * Constructs a new <code>StudentRepaymentPlan</code>.
     * An object representing the repayment plan for the student loan
     * @alias module:model/StudentRepaymentPlan
     * @extends Object
     * @param description {String} The description of the repayment plan as provided by the servicer.
     * @param type {module:model/StudentRepaymentPlan.TypeEnum} The type of the repayment plan.
     */
    constructor(description, type) { 
        
        StudentRepaymentPlan.initialize(this, description, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description, type) { 
        obj['description'] = description;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>StudentRepaymentPlan</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StudentRepaymentPlan} obj Optional instance to populate.
     * @return {module:model/StudentRepaymentPlan} The populated <code>StudentRepaymentPlan</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StudentRepaymentPlan();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StudentRepaymentPlan</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StudentRepaymentPlan</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StudentRepaymentPlan.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

StudentRepaymentPlan.RequiredProperties = ["description", "type"];

/**
 * The description of the repayment plan as provided by the servicer.
 * @member {String} description
 */
StudentRepaymentPlan.prototype['description'] = undefined;

/**
 * The type of the repayment plan.
 * @member {module:model/StudentRepaymentPlan.TypeEnum} type
 */
StudentRepaymentPlan.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
StudentRepaymentPlan['TypeEnum'] = {

    /**
     * value: "extended graduated"
     * @const
     */
    "extended graduated": "extended graduated",

    /**
     * value: "extended standard"
     * @const
     */
    "extended standard": "extended standard",

    /**
     * value: "graduated"
     * @const
     */
    "graduated": "graduated",

    /**
     * value: "income-contingent repayment"
     * @const
     */
    "income-contingent repayment": "income-contingent repayment",

    /**
     * value: "income-based repayment"
     * @const
     */
    "income-based repayment": "income-based repayment",

    /**
     * value: "interest-only"
     * @const
     */
    "interest-only": "interest-only",

    /**
     * value: "other"
     * @const
     */
    "other": "other",

    /**
     * value: "pay as you earn"
     * @const
     */
    "pay as you earn": "pay as you earn",

    /**
     * value: "revised pay as you earn"
     * @const
     */
    "revised pay as you earn": "revised pay as you earn",

    /**
     * value: "standard"
     * @const
     */
    "standard": "standard"
};



export default StudentRepaymentPlan;

