/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Status model module.
 * @module model/Status
 * @version 2020-09-14_1.345.1
 */
class Status {
    /**
     * Constructs a new <code>Status</code>.
     * Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
     * @alias module:model/Status
     * @extends Object
     * @param statusCode {String} Satus Code.
     * @param statusDescription {String} Status Description.
     */
    constructor(statusCode, statusDescription) { 
        
        Status.initialize(this, statusCode, statusDescription);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, statusCode, statusDescription) { 
        obj['StatusCode'] = statusCode;
        obj['StatusDescription'] = statusDescription;
    }

    /**
     * Constructs a <code>Status</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Status} obj Optional instance to populate.
     * @return {module:model/Status} The populated <code>Status</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Status();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('StatusCode')) {
                obj['StatusCode'] = ApiClient.convertToType(data['StatusCode'], 'String');
            }
            if (data.hasOwnProperty('StatusDescription')) {
                obj['StatusDescription'] = ApiClient.convertToType(data['StatusDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Status</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Status</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Status.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['StatusCode'] && !(typeof data['StatusCode'] === 'string' || data['StatusCode'] instanceof String)) {
            throw new Error("Expected the field `StatusCode` to be a primitive type in the JSON string but got " + data['StatusCode']);
        }
        // ensure the json data is a string
        if (data['StatusDescription'] && !(typeof data['StatusDescription'] === 'string' || data['StatusDescription'] instanceof String)) {
            throw new Error("Expected the field `StatusDescription` to be a primitive type in the JSON string but got " + data['StatusDescription']);
        }

        return true;
    }


}

Status.RequiredProperties = ["StatusCode", "StatusDescription"];

/**
 * Satus Code.
 * @member {String} StatusCode
 */
Status.prototype['StatusCode'] = undefined;

/**
 * Status Description.
 * @member {String} StatusDescription
 */
Status.prototype['StatusDescription'] = undefined;






export default Status;

