/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IdentityVerificationRequestUserName from './IdentityVerificationRequestUserName';
import UserAddress from './UserAddress';
import UserIDNumber from './UserIDNumber';

/**
 * The IdentityVerificationRequestUser model module.
 * @module model/IdentityVerificationRequestUser
 * @version 2020-09-14_1.345.1
 */
class IdentityVerificationRequestUser {
    /**
     * Constructs a new <code>IdentityVerificationRequestUser</code>.
     * User information collected outside of Link, most likely via your own onboarding process.  Each of the following identity fields are optional:  &#x60;email_address&#x60;  &#x60;phone_number&#x60;  &#x60;date_of_birth&#x60;  &#x60;name&#x60;  &#x60;address&#x60;  &#x60;id_number&#x60;  Specifically, these fields are optional in that they can either be fully provided (satisfying every required field in their subschema) or omitted from the request entirely by not providing the key or value. Providing these fields via the API will result in Link skipping the data collection process for the associated user. All verification steps enabled in the associated Identity Verification Template will still be run. Verification steps will either be run immediately, or once the user completes the &#x60;accept_tos&#x60; step, depending on the value provided to the &#x60;gave_consent&#x60; field.
     * @alias module:model/IdentityVerificationRequestUser
     * @extends Object
     * @param clientUserId {String} An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
     */
    constructor(clientUserId) { 
        
        IdentityVerificationRequestUser.initialize(this, clientUserId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientUserId) { 
        obj['client_user_id'] = clientUserId;
    }

    /**
     * Constructs a <code>IdentityVerificationRequestUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentityVerificationRequestUser} obj Optional instance to populate.
     * @return {module:model/IdentityVerificationRequestUser} The populated <code>IdentityVerificationRequestUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentityVerificationRequestUser();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('address')) {
                obj['address'] = UserAddress.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('client_user_id')) {
                obj['client_user_id'] = ApiClient.convertToType(data['client_user_id'], 'String');
            }
            if (data.hasOwnProperty('date_of_birth')) {
                obj['date_of_birth'] = ApiClient.convertToType(data['date_of_birth'], 'Date');
            }
            if (data.hasOwnProperty('email_address')) {
                obj['email_address'] = ApiClient.convertToType(data['email_address'], 'String');
            }
            if (data.hasOwnProperty('id_number')) {
                obj['id_number'] = UserIDNumber.constructFromObject(data['id_number']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = IdentityVerificationRequestUserName.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentityVerificationRequestUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentityVerificationRequestUser</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IdentityVerificationRequestUser.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['client_user_id'] && !(typeof data['client_user_id'] === 'string' || data['client_user_id'] instanceof String)) {
            throw new Error("Expected the field `client_user_id` to be a primitive type in the JSON string but got " + data['client_user_id']);
        }
        // ensure the json data is a string
        if (data['email_address'] && !(typeof data['email_address'] === 'string' || data['email_address'] instanceof String)) {
            throw new Error("Expected the field `email_address` to be a primitive type in the JSON string but got " + data['email_address']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          IdentityVerificationRequestUserName.validateJSON(data['name']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }

        return true;
    }


}

IdentityVerificationRequestUser.RequiredProperties = ["client_user_id"];

/**
 * @member {module:model/UserAddress} address
 */
IdentityVerificationRequestUser.prototype['address'] = undefined;

/**
 * An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
 * @member {String} client_user_id
 */
IdentityVerificationRequestUser.prototype['client_user_id'] = undefined;

/**
 * A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
 * @member {Date} date_of_birth
 */
IdentityVerificationRequestUser.prototype['date_of_birth'] = undefined;

/**
 * A valid email address.
 * @member {String} email_address
 */
IdentityVerificationRequestUser.prototype['email_address'] = undefined;

/**
 * @member {module:model/UserIDNumber} id_number
 */
IdentityVerificationRequestUser.prototype['id_number'] = undefined;

/**
 * @member {module:model/IdentityVerificationRequestUserName} name
 */
IdentityVerificationRequestUser.prototype['name'] = undefined;

/**
 * A phone number in E.164 format.
 * @member {String} phone_number
 */
IdentityVerificationRequestUser.prototype['phone_number'] = undefined;






export default IdentityVerificationRequestUser;

