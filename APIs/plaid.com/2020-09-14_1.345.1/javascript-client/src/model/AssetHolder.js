/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetHolderName from './AssetHolderName';

/**
 * The AssetHolder model module.
 * @module model/AssetHolder
 * @version 2020-09-14_1.345.1
 */
class AssetHolder {
    /**
     * Constructs a new <code>AssetHolder</code>.
     * Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
     * @alias module:model/AssetHolder
     * @extends Object
     * @param NAME {module:model/AssetHolderName} 
     */
    constructor(NAME) { 
        
        AssetHolder.initialize(this, NAME);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, NAME) { 
        obj['NAME'] = NAME;
    }

    /**
     * Constructs a <code>AssetHolder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetHolder} obj Optional instance to populate.
     * @return {module:model/AssetHolder} The populated <code>AssetHolder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetHolder();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('NAME')) {
                obj['NAME'] = AssetHolderName.constructFromObject(data['NAME']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetHolder</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetHolder</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssetHolder.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

AssetHolder.RequiredProperties = ["NAME"];

/**
 * @member {module:model/AssetHolderName} NAME
 */
AssetHolder.prototype['NAME'] = undefined;






export default AssetHolder;

