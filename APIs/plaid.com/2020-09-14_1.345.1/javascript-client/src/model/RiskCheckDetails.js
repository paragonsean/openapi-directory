/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IdentityVerificationStepStatus from './IdentityVerificationStepStatus';
import RiskCheckBehavior from './RiskCheckBehavior';
import RiskCheckDevice from './RiskCheckDevice';
import RiskCheckEmail from './RiskCheckEmail';
import RiskCheckPhone from './RiskCheckPhone';

/**
 * The RiskCheckDetails model module.
 * @module model/RiskCheckDetails
 * @version 2020-09-14_1.345.1
 */
class RiskCheckDetails {
    /**
     * Constructs a new <code>RiskCheckDetails</code>.
     * Additional information for the &#x60;risk_check&#x60; step.
     * @alias module:model/RiskCheckDetails
     * @extends Object
     * @param behavior {module:model/RiskCheckBehavior} 
     * @param devices {Array.<module:model/RiskCheckDevice>} Array of result summary objects specifying values for `device` attributes of risk check.
     * @param email {module:model/RiskCheckEmail} 
     * @param phone {module:model/RiskCheckPhone} 
     * @param status {module:model/IdentityVerificationStepStatus} 
     */
    constructor(behavior, devices, email, phone, status) { 
        
        RiskCheckDetails.initialize(this, behavior, devices, email, phone, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, behavior, devices, email, phone, status) { 
        obj['behavior'] = behavior;
        obj['devices'] = devices;
        obj['email'] = email;
        obj['phone'] = phone;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>RiskCheckDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskCheckDetails} obj Optional instance to populate.
     * @return {module:model/RiskCheckDetails} The populated <code>RiskCheckDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskCheckDetails();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('behavior')) {
                obj['behavior'] = RiskCheckBehavior.constructFromObject(data['behavior']);
            }
            if (data.hasOwnProperty('devices')) {
                obj['devices'] = ApiClient.convertToType(data['devices'], [RiskCheckDevice]);
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = RiskCheckEmail.constructFromObject(data['email']);
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = RiskCheckPhone.constructFromObject(data['phone']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = IdentityVerificationStepStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RiskCheckDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RiskCheckDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RiskCheckDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['devices'])) {
            throw new Error("Expected the field `devices` to be an array in the JSON data but got " + data['devices']);
        }

        return true;
    }


}

RiskCheckDetails.RequiredProperties = ["behavior", "devices", "email", "phone", "status"];

/**
 * @member {module:model/RiskCheckBehavior} behavior
 */
RiskCheckDetails.prototype['behavior'] = undefined;

/**
 * Array of result summary objects specifying values for `device` attributes of risk check.
 * @member {Array.<module:model/RiskCheckDevice>} devices
 */
RiskCheckDetails.prototype['devices'] = undefined;

/**
 * @member {module:model/RiskCheckEmail} email
 */
RiskCheckDetails.prototype['email'] = undefined;

/**
 * @member {module:model/RiskCheckPhone} phone
 */
RiskCheckDetails.prototype['phone'] = undefined;

/**
 * @member {module:model/IdentityVerificationStepStatus} status
 */
RiskCheckDetails.prototype['status'] = undefined;






export default RiskCheckDetails;

