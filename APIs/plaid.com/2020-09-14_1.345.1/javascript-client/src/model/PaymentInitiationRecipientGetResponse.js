/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentInitiationAddress from './PaymentInitiationAddress';
import PaymentInitiationRecipient from './PaymentInitiationRecipient';
import RecipientBACSNullable from './RecipientBACSNullable';

/**
 * The PaymentInitiationRecipientGetResponse model module.
 * @module model/PaymentInitiationRecipientGetResponse
 * @version 2020-09-14_1.345.1
 */
class PaymentInitiationRecipientGetResponse {
    /**
     * Constructs a new <code>PaymentInitiationRecipientGetResponse</code>.
     * PaymentInitiationRecipientGetResponse defines the response schema for &#x60;/payment_initiation/recipient/get&#x60;
     * @alias module:model/PaymentInitiationRecipientGetResponse
     * @extends Object
     * @implements module:model/PaymentInitiationRecipient
     * @param name {String} The name of the recipient.
     * @param recipientId {String} The ID of the recipient.
     * @param requestId {String} A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     */
    constructor(name, recipientId, requestId) { 
        PaymentInitiationRecipient.initialize(this, name, recipientId);
        PaymentInitiationRecipientGetResponse.initialize(this, name, recipientId, requestId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, recipientId, requestId) { 
        obj['name'] = name;
        obj['recipient_id'] = recipientId;
        obj['request_id'] = requestId;
    }

    /**
     * Constructs a <code>PaymentInitiationRecipientGetResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentInitiationRecipientGetResponse} obj Optional instance to populate.
     * @return {module:model/PaymentInitiationRecipientGetResponse} The populated <code>PaymentInitiationRecipientGetResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentInitiationRecipientGetResponse();

            ApiClient.constructFromObject(data, obj, 'Object');
            
            PaymentInitiationRecipient.constructFromObject(data, obj);

            if (data.hasOwnProperty('address')) {
                obj['address'] = PaymentInitiationAddress.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('bacs')) {
                obj['bacs'] = RecipientBACSNullable.constructFromObject(data['bacs']);
            }
            if (data.hasOwnProperty('iban')) {
                obj['iban'] = ApiClient.convertToType(data['iban'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('recipient_id')) {
                obj['recipient_id'] = ApiClient.convertToType(data['recipient_id'], 'String');
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentInitiationRecipientGetResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentInitiationRecipientGetResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaymentInitiationRecipientGetResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `bacs`
        if (data['bacs']) { // data not null
          RecipientBACSNullable.validateJSON(data['bacs']);
        }
        // ensure the json data is a string
        if (data['iban'] && !(typeof data['iban'] === 'string' || data['iban'] instanceof String)) {
            throw new Error("Expected the field `iban` to be a primitive type in the JSON string but got " + data['iban']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['recipient_id'] && !(typeof data['recipient_id'] === 'string' || data['recipient_id'] instanceof String)) {
            throw new Error("Expected the field `recipient_id` to be a primitive type in the JSON string but got " + data['recipient_id']);
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }

        return true;
    }


}

PaymentInitiationRecipientGetResponse.RequiredProperties = ["name", "recipient_id", "request_id"];

/**
 * @member {module:model/PaymentInitiationAddress} address
 */
PaymentInitiationRecipientGetResponse.prototype['address'] = undefined;

/**
 * @member {module:model/RecipientBACSNullable} bacs
 */
PaymentInitiationRecipientGetResponse.prototype['bacs'] = undefined;

/**
 * The International Bank Account Number (IBAN) for the recipient.
 * @member {String} iban
 */
PaymentInitiationRecipientGetResponse.prototype['iban'] = undefined;

/**
 * The name of the recipient.
 * @member {String} name
 */
PaymentInitiationRecipientGetResponse.prototype['name'] = undefined;

/**
 * The ID of the recipient.
 * @member {String} recipient_id
 */
PaymentInitiationRecipientGetResponse.prototype['recipient_id'] = undefined;

/**
 * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
 * @member {String} request_id
 */
PaymentInitiationRecipientGetResponse.prototype['request_id'] = undefined;


// Implement PaymentInitiationRecipient interface:
/**
 * @member {module:model/PaymentInitiationAddress} address
 */
PaymentInitiationRecipient.prototype['address'] = undefined;
/**
 * @member {module:model/RecipientBACSNullable} bacs
 */
PaymentInitiationRecipient.prototype['bacs'] = undefined;
/**
 * The International Bank Account Number (IBAN) for the recipient.
 * @member {String} iban
 */
PaymentInitiationRecipient.prototype['iban'] = undefined;
/**
 * The name of the recipient.
 * @member {String} name
 */
PaymentInitiationRecipient.prototype['name'] = undefined;
/**
 * The ID of the recipient.
 * @member {String} recipient_id
 */
PaymentInitiationRecipient.prototype['recipient_id'] = undefined;




export default PaymentInitiationRecipientGetResponse;

