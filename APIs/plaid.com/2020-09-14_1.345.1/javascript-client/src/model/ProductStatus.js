/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductStatusBreakdown from './ProductStatusBreakdown';

/**
 * The ProductStatus model module.
 * @module model/ProductStatus
 * @version 2020-09-14_1.345.1
 */
class ProductStatus {
    /**
     * Constructs a new <code>ProductStatus</code>.
     * A representation of the status health of a request type. Auth requests, Balance requests, Identity requests, Investments requests, Liabilities requests, Transactions updates, Investments updates, Liabilities updates, and Item logins each have their own status object.
     * @alias module:model/ProductStatus
     * @extends Object
     * @param breakdown {module:model/ProductStatusBreakdown} 
     * @param lastStatusChange {Date} [ISO 8601](https://wikipedia.org/wiki/ISO_8601) formatted timestamp of the last status change for the institution. 
     * @param status {module:model/ProductStatus.StatusEnum} This field is deprecated in favor of the `breakdown` object, which provides more granular institution health data.  `HEALTHY`: the majority of requests are successful `DEGRADED`: only some requests are successful `DOWN`: all requests are failing
     */
    constructor(breakdown, lastStatusChange, status) { 
        
        ProductStatus.initialize(this, breakdown, lastStatusChange, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, breakdown, lastStatusChange, status) { 
        obj['breakdown'] = breakdown;
        obj['last_status_change'] = lastStatusChange;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>ProductStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductStatus} obj Optional instance to populate.
     * @return {module:model/ProductStatus} The populated <code>ProductStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductStatus();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('breakdown')) {
                obj['breakdown'] = ProductStatusBreakdown.constructFromObject(data['breakdown']);
            }
            if (data.hasOwnProperty('last_status_change')) {
                obj['last_status_change'] = ApiClient.convertToType(data['last_status_change'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProductStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

ProductStatus.RequiredProperties = ["breakdown", "last_status_change", "status"];

/**
 * @member {module:model/ProductStatusBreakdown} breakdown
 */
ProductStatus.prototype['breakdown'] = undefined;

/**
 * [ISO 8601](https://wikipedia.org/wiki/ISO_8601) formatted timestamp of the last status change for the institution. 
 * @member {Date} last_status_change
 */
ProductStatus.prototype['last_status_change'] = undefined;

/**
 * This field is deprecated in favor of the `breakdown` object, which provides more granular institution health data.  `HEALTHY`: the majority of requests are successful `DEGRADED`: only some requests are successful `DOWN`: all requests are failing
 * @member {module:model/ProductStatus.StatusEnum} status
 */
ProductStatus.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ProductStatus['StatusEnum'] = {

    /**
     * value: "HEALTHY"
     * @const
     */
    "HEALTHY": "HEALTHY",

    /**
     * value: "DEGRADED"
     * @const
     */
    "DEGRADED": "DEGRADED",

    /**
     * value: "DOWN"
     * @const
     */
    "DOWN": "DOWN"
};



export default ProductStatus;

