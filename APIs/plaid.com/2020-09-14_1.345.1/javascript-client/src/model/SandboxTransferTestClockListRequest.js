/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SandboxTransferTestClockListRequest model module.
 * @module model/SandboxTransferTestClockListRequest
 * @version 2020-09-14_1.345.1
 */
class SandboxTransferTestClockListRequest {
    /**
     * Constructs a new <code>SandboxTransferTestClockListRequest</code>.
     * Defines the request schema for &#x60;/sandbox/transfer/test_clock/list&#x60;
     * @alias module:model/SandboxTransferTestClockListRequest
     */
    constructor() { 
        
        SandboxTransferTestClockListRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['count'] = 25;
        obj['offset'] = 0;
    }

    /**
     * Constructs a <code>SandboxTransferTestClockListRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SandboxTransferTestClockListRequest} obj Optional instance to populate.
     * @return {module:model/SandboxTransferTestClockListRequest} The populated <code>SandboxTransferTestClockListRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SandboxTransferTestClockListRequest();

            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('end_virtual_time')) {
                obj['end_virtual_time'] = ApiClient.convertToType(data['end_virtual_time'], 'Date');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
            if (data.hasOwnProperty('start_virtual_time')) {
                obj['start_virtual_time'] = ApiClient.convertToType(data['start_virtual_time'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SandboxTransferTestClockListRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SandboxTransferTestClockListRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }

        return true;
    }


}



/**
 * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
 * @member {String} client_id
 */
SandboxTransferTestClockListRequest.prototype['client_id'] = undefined;

/**
 * The maximum number of test clocks to return.
 * @member {Number} count
 * @default 25
 */
SandboxTransferTestClockListRequest.prototype['count'] = 25;

/**
 * The end virtual timestamp of test clocks to return. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
 * @member {Date} end_virtual_time
 */
SandboxTransferTestClockListRequest.prototype['end_virtual_time'] = undefined;

/**
 * The number of test clocks to skip before returning results.
 * @member {Number} offset
 * @default 0
 */
SandboxTransferTestClockListRequest.prototype['offset'] = 0;

/**
 * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
 * @member {String} secret
 */
SandboxTransferTestClockListRequest.prototype['secret'] = undefined;

/**
 * The start virtual timestamp of test clocks to return. This should be in RFC 3339 format (i.e. `2019-12-06T22:35:49Z`)
 * @member {Date} start_virtual_time
 */
SandboxTransferTestClockListRequest.prototype['start_virtual_time'] = undefined;






export default SandboxTransferTestClockListRequest;

