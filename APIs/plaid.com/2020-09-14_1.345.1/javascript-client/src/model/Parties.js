/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Party from './Party';

/**
 * The Parties model module.
 * @module model/Parties
 * @version 2020-09-14_1.345.1
 */
class Parties {
    /**
     * Constructs a new <code>Parties</code>.
     * A collection of objects that define specific parties to a deal. This includes the direct participating parties, such as borrower and seller and the indirect parties such as the credit report provider.
     * @alias module:model/Parties
     * @extends Object
     * @param PARTY {Array.<module:model/Party>} 
     */
    constructor(PARTY) { 
        
        Parties.initialize(this, PARTY);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, PARTY) { 
        obj['PARTY'] = PARTY;
    }

    /**
     * Constructs a <code>Parties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Parties} obj Optional instance to populate.
     * @return {module:model/Parties} The populated <code>Parties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Parties();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('PARTY')) {
                obj['PARTY'] = ApiClient.convertToType(data['PARTY'], [Party]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Parties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Parties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Parties.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['PARTY'])) {
            throw new Error("Expected the field `PARTY` to be an array in the JSON data but got " + data['PARTY']);
        }

        return true;
    }


}

Parties.RequiredProperties = ["PARTY"];

/**
 * @member {Array.<module:model/Party>} PARTY
 */
Parties.prototype['PARTY'] = undefined;






export default Parties;

