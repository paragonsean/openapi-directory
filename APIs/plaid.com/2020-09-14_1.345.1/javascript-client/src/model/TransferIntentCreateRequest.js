/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ACHClass from './ACHClass';
import TransferIntentCreateMode from './TransferIntentCreateMode';
import TransferIntentCreateNetwork from './TransferIntentCreateNetwork';
import TransferUserInRequest from './TransferUserInRequest';

/**
 * The TransferIntentCreateRequest model module.
 * @module model/TransferIntentCreateRequest
 * @version 2020-09-14_1.345.1
 */
class TransferIntentCreateRequest {
    /**
     * Constructs a new <code>TransferIntentCreateRequest</code>.
     * Defines the request schema for &#x60;/transfer/intent/create&#x60;
     * @alias module:model/TransferIntentCreateRequest
     * @param amount {String} The amount of the transfer (decimal string with two digits of precision e.g. \"10.00\").
     * @param description {String} A description for the underlying transfer. Maximum of 8 characters.
     * @param mode {module:model/TransferIntentCreateMode} 
     * @param user {module:model/TransferUserInRequest} 
     */
    constructor(amount, description, mode, user) { 
        
        TransferIntentCreateRequest.initialize(this, amount, description, mode, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, description, mode, user) { 
        obj['amount'] = amount;
        obj['description'] = description;
        obj['mode'] = mode;
        obj['require_guarantee'] = false;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>TransferIntentCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransferIntentCreateRequest} obj Optional instance to populate.
     * @return {module:model/TransferIntentCreateRequest} The populated <code>TransferIntentCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransferIntentCreateRequest();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('ach_class')) {
                obj['ach_class'] = ACHClass.constructFromObject(data['ach_class']);
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'String');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('funding_account_id')) {
                obj['funding_account_id'] = ApiClient.convertToType(data['funding_account_id'], 'String');
            }
            if (data.hasOwnProperty('iso_currency_code')) {
                obj['iso_currency_code'] = ApiClient.convertToType(data['iso_currency_code'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = TransferIntentCreateMode.constructFromObject(data['mode']);
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = TransferIntentCreateNetwork.constructFromObject(data['network']);
            }
            if (data.hasOwnProperty('origination_account_id')) {
                obj['origination_account_id'] = ApiClient.convertToType(data['origination_account_id'], 'String');
            }
            if (data.hasOwnProperty('require_guarantee')) {
                obj['require_guarantee'] = ApiClient.convertToType(data['require_guarantee'], 'Boolean');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = TransferUserInRequest.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransferIntentCreateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransferIntentCreateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransferIntentCreateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        // ensure the json data is a string
        if (data['amount'] && !(typeof data['amount'] === 'string' || data['amount'] instanceof String)) {
            throw new Error("Expected the field `amount` to be a primitive type in the JSON string but got " + data['amount']);
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['funding_account_id'] && !(typeof data['funding_account_id'] === 'string' || data['funding_account_id'] instanceof String)) {
            throw new Error("Expected the field `funding_account_id` to be a primitive type in the JSON string but got " + data['funding_account_id']);
        }
        // ensure the json data is a string
        if (data['iso_currency_code'] && !(typeof data['iso_currency_code'] === 'string' || data['iso_currency_code'] instanceof String)) {
            throw new Error("Expected the field `iso_currency_code` to be a primitive type in the JSON string but got " + data['iso_currency_code']);
        }
        // ensure the json data is a string
        if (data['origination_account_id'] && !(typeof data['origination_account_id'] === 'string' || data['origination_account_id'] instanceof String)) {
            throw new Error("Expected the field `origination_account_id` to be a primitive type in the JSON string but got " + data['origination_account_id']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }

        return true;
    }


}

TransferIntentCreateRequest.RequiredProperties = ["amount", "description", "mode", "user"];

/**
 * The Plaid `account_id` corresponding to the end-user account that will be debited or credited.
 * @member {String} account_id
 */
TransferIntentCreateRequest.prototype['account_id'] = undefined;

/**
 * @member {module:model/ACHClass} ach_class
 */
TransferIntentCreateRequest.prototype['ach_class'] = undefined;

/**
 * The amount of the transfer (decimal string with two digits of precision e.g. \"10.00\").
 * @member {String} amount
 */
TransferIntentCreateRequest.prototype['amount'] = undefined;

/**
 * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
 * @member {String} client_id
 */
TransferIntentCreateRequest.prototype['client_id'] = undefined;

/**
 * A description for the underlying transfer. Maximum of 8 characters.
 * @member {String} description
 */
TransferIntentCreateRequest.prototype['description'] = undefined;

/**
 * The id of the funding account to use, available in the Plaid Dashboard. This determines which of your business checking accounts will be credited or debited. Defaults to the account configured during onboarding.
 * @member {String} funding_account_id
 */
TransferIntentCreateRequest.prototype['funding_account_id'] = undefined;

/**
 * The currency of the transfer amount, e.g. \"USD\"
 * @member {String} iso_currency_code
 */
TransferIntentCreateRequest.prototype['iso_currency_code'] = undefined;

/**
 * The Metadata object is a mapping of client-provided string fields to any string value. The following limitations apply: The JSON values must be Strings (no nested JSON objects allowed) Only ASCII characters may be used Maximum of 50 key/value pairs Maximum key length of 40 characters Maximum value length of 500 characters 
 * @member {Object.<String, String>} metadata
 */
TransferIntentCreateRequest.prototype['metadata'] = undefined;

/**
 * @member {module:model/TransferIntentCreateMode} mode
 */
TransferIntentCreateRequest.prototype['mode'] = undefined;

/**
 * @member {module:model/TransferIntentCreateNetwork} network
 */
TransferIntentCreateRequest.prototype['network'] = undefined;

/**
 * Plaid’s unique identifier for the origination account for the intent. If not provided, the default account will be used.
 * @member {String} origination_account_id
 */
TransferIntentCreateRequest.prototype['origination_account_id'] = undefined;

/**
 * When `true`, the transfer requires a `GUARANTEED` decision by Plaid to proceed (Guarantee customers only).
 * @member {Boolean} require_guarantee
 * @default false
 */
TransferIntentCreateRequest.prototype['require_guarantee'] = false;

/**
 * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
 * @member {String} secret
 */
TransferIntentCreateRequest.prototype['secret'] = undefined;

/**
 * @member {module:model/TransferUserInRequest} user
 */
TransferIntentCreateRequest.prototype['user'] = undefined;






export default TransferIntentCreateRequest;

