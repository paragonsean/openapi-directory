/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EarningsBreakdown from './EarningsBreakdown';
import EarningsTotal from './EarningsTotal';

/**
 * The Earnings model module.
 * @module model/Earnings
 * @version 2020-09-14_1.345.1
 */
class Earnings {
    /**
     * Constructs a new <code>Earnings</code>.
     * An object representing both a breakdown of earnings on a paystub and the total earnings.
     * @alias module:model/Earnings
     * @extends Object
     */
    constructor() { 
        
        Earnings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Earnings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Earnings} obj Optional instance to populate.
     * @return {module:model/Earnings} The populated <code>Earnings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Earnings();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('breakdown')) {
                obj['breakdown'] = ApiClient.convertToType(data['breakdown'], [EarningsBreakdown]);
            }
            if (data.hasOwnProperty('subtotals')) {
                obj['subtotals'] = ApiClient.convertToType(data['subtotals'], [EarningsTotal]);
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = EarningsTotal.constructFromObject(data['total']);
            }
            if (data.hasOwnProperty('totals')) {
                obj['totals'] = ApiClient.convertToType(data['totals'], [EarningsTotal]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Earnings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Earnings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['breakdown'])) {
            throw new Error("Expected the field `breakdown` to be an array in the JSON data but got " + data['breakdown']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['subtotals'])) {
            throw new Error("Expected the field `subtotals` to be an array in the JSON data but got " + data['subtotals']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['totals'])) {
            throw new Error("Expected the field `totals` to be an array in the JSON data but got " + data['totals']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/EarningsBreakdown>} breakdown
 */
Earnings.prototype['breakdown'] = undefined;

/**
 * @member {Array.<module:model/EarningsTotal>} subtotals
 */
Earnings.prototype['subtotals'] = undefined;

/**
 * @member {module:model/EarningsTotal} total
 */
Earnings.prototype['total'] = undefined;

/**
 * @member {Array.<module:model/EarningsTotal>} totals
 */
Earnings.prototype['totals'] = undefined;






export default Earnings;

