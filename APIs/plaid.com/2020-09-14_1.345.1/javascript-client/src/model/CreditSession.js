/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreditSessionError from './CreditSessionError';
import CreditSessionResults from './CreditSessionResults';

/**
 * The CreditSession model module.
 * @module model/CreditSession
 * @version 2020-09-14_1.345.1
 */
class CreditSession {
    /**
     * Constructs a new <code>CreditSession</code>.
     * Metadata and results for a Link session
     * @alias module:model/CreditSession
     */
    constructor() { 
        
        CreditSession.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreditSession</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreditSession} obj Optional instance to populate.
     * @return {module:model/CreditSession} The populated <code>CreditSession</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreditSession();

            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [CreditSessionError]);
            }
            if (data.hasOwnProperty('link_session_id')) {
                obj['link_session_id'] = ApiClient.convertToType(data['link_session_id'], 'String');
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = CreditSessionResults.constructFromObject(data['results']);
            }
            if (data.hasOwnProperty('session_start_time')) {
                obj['session_start_time'] = ApiClient.convertToType(data['session_start_time'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreditSession</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreditSession</code>.
     */
    static validateJSON(data) {
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                CreditSessionError.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['link_session_id'] && !(typeof data['link_session_id'] === 'string' || data['link_session_id'] instanceof String)) {
            throw new Error("Expected the field `link_session_id` to be a primitive type in the JSON string but got " + data['link_session_id']);
        }
        // validate the optional field `results`
        if (data['results']) { // data not null
          CreditSessionResults.validateJSON(data['results']);
        }

        return true;
    }


}



/**
 * The set of errors that occurred during the Link session.
 * @member {Array.<module:model/CreditSessionError>} errors
 */
CreditSession.prototype['errors'] = undefined;

/**
 * The unique identifier associated with the Link session. This identifier matches the `link_session_id` returned in the onSuccess/onExit callbacks.
 * @member {String} link_session_id
 */
CreditSession.prototype['link_session_id'] = undefined;

/**
 * @member {module:model/CreditSessionResults} results
 */
CreditSession.prototype['results'] = undefined;

/**
 * The time when the Link session started
 * @member {Date} session_start_time
 */
CreditSession.prototype['session_start_time'] = undefined;






export default CreditSession;

