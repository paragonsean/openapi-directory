/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FDXFiAttribute from './FDXFiAttribute';
import FDXNotificationPayloadIdType from './FDXNotificationPayloadIdType';

/**
 * The FDXNotificationPayload model module.
 * @module model/FDXNotificationPayload
 * @version 2020-09-14_1.345.1
 */
class FDXNotificationPayload {
    /**
     * Constructs a new <code>FDXNotificationPayload</code>.
     * Custom key-value pairs payload for a notification
     * @alias module:model/FDXNotificationPayload
     */
    constructor() { 
        
        FDXNotificationPayload.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FDXNotificationPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FDXNotificationPayload} obj Optional instance to populate.
     * @return {module:model/FDXNotificationPayload} The populated <code>FDXNotificationPayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FDXNotificationPayload();

            if (data.hasOwnProperty('customFields')) {
                obj['customFields'] = FDXFiAttribute.constructFromObject(data['customFields']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('idType')) {
                obj['idType'] = FDXNotificationPayloadIdType.constructFromObject(data['idType']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FDXNotificationPayload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FDXNotificationPayload</code>.
     */
    static validateJSON(data) {
        // validate the optional field `customFields`
        if (data['customFields']) { // data not null
          FDXFiAttribute.validateJSON(data['customFields']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}



/**
 * @member {module:model/FDXFiAttribute} customFields
 */
FDXNotificationPayload.prototype['customFields'] = undefined;

/**
 * ID for the origination entity related to the notification
 * @member {String} id
 */
FDXNotificationPayload.prototype['id'] = undefined;

/**
 * @member {module:model/FDXNotificationPayloadIdType} idType
 */
FDXNotificationPayload.prototype['idType'] = undefined;






export default FDXNotificationPayload;

