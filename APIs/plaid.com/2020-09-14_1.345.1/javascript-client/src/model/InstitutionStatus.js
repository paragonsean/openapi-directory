/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HealthIncident from './HealthIncident';
import ProductStatus from './ProductStatus';

/**
 * The InstitutionStatus model module.
 * @module model/InstitutionStatus
 * @version 2020-09-14_1.345.1
 */
class InstitutionStatus {
    /**
     * Constructs a new <code>InstitutionStatus</code>.
     * The status of an institution is determined by the health of its Item logins, Transactions updates, Investments updates, Liabilities updates, Auth requests, Balance requests, Identity requests, Investments requests, and Liabilities requests. A login attempt is conducted during the initial Item add in Link. If there is not enough traffic to accurately calculate an institution&#39;s status, Plaid will return null rather than potentially inaccurate data.  Institution status is accessible in the Dashboard and via the API using the &#x60;/institutions/get_by_id&#x60; endpoint with the &#x60;include_status&#x60; option set to true. Note that institution status is not available in the Sandbox environment. 
     * @alias module:model/InstitutionStatus
     * @extends Object
     */
    constructor() { 
        
        InstitutionStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstitutionStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstitutionStatus} obj Optional instance to populate.
     * @return {module:model/InstitutionStatus} The populated <code>InstitutionStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstitutionStatus();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('auth')) {
                obj['auth'] = ProductStatus.constructFromObject(data['auth']);
            }
            if (data.hasOwnProperty('health_incidents')) {
                obj['health_incidents'] = ApiClient.convertToType(data['health_incidents'], [HealthIncident]);
            }
            if (data.hasOwnProperty('identity')) {
                obj['identity'] = ProductStatus.constructFromObject(data['identity']);
            }
            if (data.hasOwnProperty('investments')) {
                obj['investments'] = ProductStatus.constructFromObject(data['investments']);
            }
            if (data.hasOwnProperty('investments_updates')) {
                obj['investments_updates'] = ProductStatus.constructFromObject(data['investments_updates']);
            }
            if (data.hasOwnProperty('item_logins')) {
                obj['item_logins'] = ProductStatus.constructFromObject(data['item_logins']);
            }
            if (data.hasOwnProperty('liabilities')) {
                obj['liabilities'] = ProductStatus.constructFromObject(data['liabilities']);
            }
            if (data.hasOwnProperty('liabilities_updates')) {
                obj['liabilities_updates'] = ProductStatus.constructFromObject(data['liabilities_updates']);
            }
            if (data.hasOwnProperty('transactions_updates')) {
                obj['transactions_updates'] = ProductStatus.constructFromObject(data['transactions_updates']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstitutionStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstitutionStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['health_incidents'])) {
            throw new Error("Expected the field `health_incidents` to be an array in the JSON data but got " + data['health_incidents']);
        }

        return true;
    }


}



/**
 * @member {module:model/ProductStatus} auth
 */
InstitutionStatus.prototype['auth'] = undefined;

/**
 * Details of recent health incidents associated with the institution.
 * @member {Array.<module:model/HealthIncident>} health_incidents
 */
InstitutionStatus.prototype['health_incidents'] = undefined;

/**
 * @member {module:model/ProductStatus} identity
 */
InstitutionStatus.prototype['identity'] = undefined;

/**
 * @member {module:model/ProductStatus} investments
 */
InstitutionStatus.prototype['investments'] = undefined;

/**
 * @member {module:model/ProductStatus} investments_updates
 */
InstitutionStatus.prototype['investments_updates'] = undefined;

/**
 * @member {module:model/ProductStatus} item_logins
 */
InstitutionStatus.prototype['item_logins'] = undefined;

/**
 * @member {module:model/ProductStatus} liabilities
 */
InstitutionStatus.prototype['liabilities'] = undefined;

/**
 * @member {module:model/ProductStatus} liabilities_updates
 */
InstitutionStatus.prototype['liabilities_updates'] = undefined;

/**
 * @member {module:model/ProductStatus} transactions_updates
 */
InstitutionStatus.prototype['transactions_updates'] = undefined;






export default InstitutionStatus;

