/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TaxpayerID model module.
 * @module model/TaxpayerID
 * @version 2020-09-14_1.345.1
 */
class TaxpayerID {
    /**
     * Constructs a new <code>TaxpayerID</code>.
     * Taxpayer ID of the individual receiving the paystub.
     * @alias module:model/TaxpayerID
     * @extends Object
     */
    constructor() { 
        
        TaxpayerID.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaxpayerID</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaxpayerID} obj Optional instance to populate.
     * @return {module:model/TaxpayerID} The populated <code>TaxpayerID</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaxpayerID();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('id_mask')) {
                obj['id_mask'] = ApiClient.convertToType(data['id_mask'], 'String');
            }
            if (data.hasOwnProperty('id_type')) {
                obj['id_type'] = ApiClient.convertToType(data['id_type'], 'String');
            }
            if (data.hasOwnProperty('last_4_digits')) {
                obj['last_4_digits'] = ApiClient.convertToType(data['last_4_digits'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaxpayerID</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaxpayerID</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id_mask'] && !(typeof data['id_mask'] === 'string' || data['id_mask'] instanceof String)) {
            throw new Error("Expected the field `id_mask` to be a primitive type in the JSON string but got " + data['id_mask']);
        }
        // ensure the json data is a string
        if (data['id_type'] && !(typeof data['id_type'] === 'string' || data['id_type'] instanceof String)) {
            throw new Error("Expected the field `id_type` to be a primitive type in the JSON string but got " + data['id_type']);
        }
        // ensure the json data is a string
        if (data['last_4_digits'] && !(typeof data['last_4_digits'] === 'string' || data['last_4_digits'] instanceof String)) {
            throw new Error("Expected the field `last_4_digits` to be a primitive type in the JSON string but got " + data['last_4_digits']);
        }

        return true;
    }


}



/**
 * ID mask; i.e. last 4 digits of the taxpayer ID
 * @member {String} id_mask
 */
TaxpayerID.prototype['id_mask'] = undefined;

/**
 * Type of ID, e.g. 'SSN'
 * @member {String} id_type
 */
TaxpayerID.prototype['id_type'] = undefined;

/**
 * Last 4 digits of unique number of ID.
 * @member {String} last_4_digits
 */
TaxpayerID.prototype['last_4_digits'] = undefined;






export default TaxpayerID;

