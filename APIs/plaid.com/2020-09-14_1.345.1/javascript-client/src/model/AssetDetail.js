/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetType from './AssetType';

/**
 * The AssetDetail model module.
 * @module model/AssetDetail
 * @version 2020-09-14_1.345.1
 */
class AssetDetail {
    /**
     * Constructs a new <code>AssetDetail</code>.
     * Details about an asset.
     * @alias module:model/AssetDetail
     * @extends Object
     * @param assetAccountIdentifier {String} A unique alphanumeric string identifying an asset.
     * @param assetAsOfDate {String} Account Report As of Date / Create Date. Format YYYY-MM-DD
     * @param assetAvailableBalanceAmount {Number} Asset Account Available Balance.
     * @param assetCurrentBalanceAmount {Number} A vendor created unique Identifier
     * @param assetDaysRequestedCount {Number} The Number of days requested made to the Financial Institution. Example When looking for 3 months of data from the FI, pass in 90 days.
     * @param assetDescription {String} A text description that further defines the Asset. This could be used to describe the shares associated with the stocks, bonds or mutual funds, retirement funds or business owned that the borrower has disclosed (named) as an asset.
     * @param assetOwnershipType {String} Ownership type of the asset account.
     * @param assetType {module:model/AssetType} 
     * @param assetTypeAdditionalDescription {String} Additional Asset Decription some examples are Investment Tax-Deferred , Loan, 401K, 403B, Checking, Money Market, Credit Card,ROTH,529,Biller,ROLLOVER,CD,Savings,Investment Taxable, IRA, Mortgage, Line Of Credit.
     * @param assetUniqueIdentifier {String} A vendor created unique Identifier.
     */
    constructor(assetAccountIdentifier, assetAsOfDate, assetAvailableBalanceAmount, assetCurrentBalanceAmount, assetDaysRequestedCount, assetDescription, assetOwnershipType, assetType, assetTypeAdditionalDescription, assetUniqueIdentifier) { 
        
        AssetDetail.initialize(this, assetAccountIdentifier, assetAsOfDate, assetAvailableBalanceAmount, assetCurrentBalanceAmount, assetDaysRequestedCount, assetDescription, assetOwnershipType, assetType, assetTypeAdditionalDescription, assetUniqueIdentifier);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, assetAccountIdentifier, assetAsOfDate, assetAvailableBalanceAmount, assetCurrentBalanceAmount, assetDaysRequestedCount, assetDescription, assetOwnershipType, assetType, assetTypeAdditionalDescription, assetUniqueIdentifier) { 
        obj['AssetAccountIdentifier'] = assetAccountIdentifier;
        obj['AssetAsOfDate'] = assetAsOfDate;
        obj['AssetAvailableBalanceAmount'] = assetAvailableBalanceAmount;
        obj['AssetCurrentBalanceAmount'] = assetCurrentBalanceAmount;
        obj['AssetDaysRequestedCount'] = assetDaysRequestedCount;
        obj['AssetDescription'] = assetDescription;
        obj['AssetOwnershipType'] = assetOwnershipType;
        obj['AssetType'] = assetType;
        obj['AssetTypeAdditionalDescription'] = assetTypeAdditionalDescription;
        obj['AssetUniqueIdentifier'] = assetUniqueIdentifier;
    }

    /**
     * Constructs a <code>AssetDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetDetail} obj Optional instance to populate.
     * @return {module:model/AssetDetail} The populated <code>AssetDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetDetail();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('AssetAccountIdentifier')) {
                obj['AssetAccountIdentifier'] = ApiClient.convertToType(data['AssetAccountIdentifier'], 'String');
            }
            if (data.hasOwnProperty('AssetAsOfDate')) {
                obj['AssetAsOfDate'] = ApiClient.convertToType(data['AssetAsOfDate'], 'String');
            }
            if (data.hasOwnProperty('AssetAvailableBalanceAmount')) {
                obj['AssetAvailableBalanceAmount'] = ApiClient.convertToType(data['AssetAvailableBalanceAmount'], 'Number');
            }
            if (data.hasOwnProperty('AssetCurrentBalanceAmount')) {
                obj['AssetCurrentBalanceAmount'] = ApiClient.convertToType(data['AssetCurrentBalanceAmount'], 'Number');
            }
            if (data.hasOwnProperty('AssetDaysRequestedCount')) {
                obj['AssetDaysRequestedCount'] = ApiClient.convertToType(data['AssetDaysRequestedCount'], 'Number');
            }
            if (data.hasOwnProperty('AssetDescription')) {
                obj['AssetDescription'] = ApiClient.convertToType(data['AssetDescription'], 'String');
            }
            if (data.hasOwnProperty('AssetOwnershipType')) {
                obj['AssetOwnershipType'] = ApiClient.convertToType(data['AssetOwnershipType'], 'String');
            }
            if (data.hasOwnProperty('AssetType')) {
                obj['AssetType'] = AssetType.constructFromObject(data['AssetType']);
            }
            if (data.hasOwnProperty('AssetTypeAdditionalDescription')) {
                obj['AssetTypeAdditionalDescription'] = ApiClient.convertToType(data['AssetTypeAdditionalDescription'], 'String');
            }
            if (data.hasOwnProperty('AssetUniqueIdentifier')) {
                obj['AssetUniqueIdentifier'] = ApiClient.convertToType(data['AssetUniqueIdentifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetDetail</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssetDetail.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['AssetAccountIdentifier'] && !(typeof data['AssetAccountIdentifier'] === 'string' || data['AssetAccountIdentifier'] instanceof String)) {
            throw new Error("Expected the field `AssetAccountIdentifier` to be a primitive type in the JSON string but got " + data['AssetAccountIdentifier']);
        }
        // ensure the json data is a string
        if (data['AssetAsOfDate'] && !(typeof data['AssetAsOfDate'] === 'string' || data['AssetAsOfDate'] instanceof String)) {
            throw new Error("Expected the field `AssetAsOfDate` to be a primitive type in the JSON string but got " + data['AssetAsOfDate']);
        }
        // ensure the json data is a string
        if (data['AssetDescription'] && !(typeof data['AssetDescription'] === 'string' || data['AssetDescription'] instanceof String)) {
            throw new Error("Expected the field `AssetDescription` to be a primitive type in the JSON string but got " + data['AssetDescription']);
        }
        // ensure the json data is a string
        if (data['AssetOwnershipType'] && !(typeof data['AssetOwnershipType'] === 'string' || data['AssetOwnershipType'] instanceof String)) {
            throw new Error("Expected the field `AssetOwnershipType` to be a primitive type in the JSON string but got " + data['AssetOwnershipType']);
        }
        // ensure the json data is a string
        if (data['AssetTypeAdditionalDescription'] && !(typeof data['AssetTypeAdditionalDescription'] === 'string' || data['AssetTypeAdditionalDescription'] instanceof String)) {
            throw new Error("Expected the field `AssetTypeAdditionalDescription` to be a primitive type in the JSON string but got " + data['AssetTypeAdditionalDescription']);
        }
        // ensure the json data is a string
        if (data['AssetUniqueIdentifier'] && !(typeof data['AssetUniqueIdentifier'] === 'string' || data['AssetUniqueIdentifier'] instanceof String)) {
            throw new Error("Expected the field `AssetUniqueIdentifier` to be a primitive type in the JSON string but got " + data['AssetUniqueIdentifier']);
        }

        return true;
    }


}

AssetDetail.RequiredProperties = ["AssetAccountIdentifier", "AssetAsOfDate", "AssetAvailableBalanceAmount", "AssetCurrentBalanceAmount", "AssetDaysRequestedCount", "AssetDescription", "AssetOwnershipType", "AssetType", "AssetTypeAdditionalDescription", "AssetUniqueIdentifier"];

/**
 * A unique alphanumeric string identifying an asset.
 * @member {String} AssetAccountIdentifier
 */
AssetDetail.prototype['AssetAccountIdentifier'] = undefined;

/**
 * Account Report As of Date / Create Date. Format YYYY-MM-DD
 * @member {String} AssetAsOfDate
 */
AssetDetail.prototype['AssetAsOfDate'] = undefined;

/**
 * Asset Account Available Balance.
 * @member {Number} AssetAvailableBalanceAmount
 */
AssetDetail.prototype['AssetAvailableBalanceAmount'] = undefined;

/**
 * A vendor created unique Identifier
 * @member {Number} AssetCurrentBalanceAmount
 */
AssetDetail.prototype['AssetCurrentBalanceAmount'] = undefined;

/**
 * The Number of days requested made to the Financial Institution. Example When looking for 3 months of data from the FI, pass in 90 days.
 * @member {Number} AssetDaysRequestedCount
 */
AssetDetail.prototype['AssetDaysRequestedCount'] = undefined;

/**
 * A text description that further defines the Asset. This could be used to describe the shares associated with the stocks, bonds or mutual funds, retirement funds or business owned that the borrower has disclosed (named) as an asset.
 * @member {String} AssetDescription
 */
AssetDetail.prototype['AssetDescription'] = undefined;

/**
 * Ownership type of the asset account.
 * @member {String} AssetOwnershipType
 */
AssetDetail.prototype['AssetOwnershipType'] = undefined;

/**
 * @member {module:model/AssetType} AssetType
 */
AssetDetail.prototype['AssetType'] = undefined;

/**
 * Additional Asset Decription some examples are Investment Tax-Deferred , Loan, 401K, 403B, Checking, Money Market, Credit Card,ROTH,529,Biller,ROLLOVER,CD,Savings,Investment Taxable, IRA, Mortgage, Line Of Credit.
 * @member {String} AssetTypeAdditionalDescription
 */
AssetDetail.prototype['AssetTypeAdditionalDescription'] = undefined;

/**
 * A vendor created unique Identifier.
 * @member {String} AssetUniqueIdentifier
 */
AssetDetail.prototype['AssetUniqueIdentifier'] = undefined;






export default AssetDetail;

