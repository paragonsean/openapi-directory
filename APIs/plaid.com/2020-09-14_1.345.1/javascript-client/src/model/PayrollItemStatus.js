/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PayrollItemStatus model module.
 * @module model/PayrollItemStatus
 * @version 2020-09-14_1.345.1
 */
class PayrollItemStatus {
    /**
     * Constructs a new <code>PayrollItemStatus</code>.
     * Details about the status of the payroll item.
     * @alias module:model/PayrollItemStatus
     * @extends Object
     */
    constructor() { 
        
        PayrollItemStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PayrollItemStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PayrollItemStatus} obj Optional instance to populate.
     * @return {module:model/PayrollItemStatus} The populated <code>PayrollItemStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PayrollItemStatus();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('processing_status')) {
                obj['processing_status'] = ApiClient.convertToType(data['processing_status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PayrollItemStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PayrollItemStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['processing_status'] && !(typeof data['processing_status'] === 'string' || data['processing_status'] instanceof String)) {
            throw new Error("Expected the field `processing_status` to be a primitive type in the JSON string but got " + data['processing_status']);
        }

        return true;
    }


}



/**
 * Denotes the processing status for the verification.  `UNKNOWN`: The processing status could not be determined.  `PROCESSING_COMPLETE`: The processing has completed and the user has approved for sharing. The data is available to be retrieved.  `PROCESSING`: The verification is still processing. The data is not available yet.  `FAILED`: The processing failed to complete successfully.  `APPROVAL_STATUS_PENDING`: The processing has completed but the user has not yet approved the sharing of the data.
 * @member {String} processing_status
 */
PayrollItemStatus.prototype['processing_status'] = undefined;






export default PayrollItemStatus;

