/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MatchSummaryCode from './MatchSummaryCode';

/**
 * The EntityScreeningHitAnalysis model module.
 * @module model/EntityScreeningHitAnalysis
 * @version 2020-09-14_1.345.1
 */
class EntityScreeningHitAnalysis {
    /**
     * Constructs a new <code>EntityScreeningHitAnalysis</code>.
     * Analysis information describing why a screening hit matched the provided entity information
     * @alias module:model/EntityScreeningHitAnalysis
     * @extends Object
     * @param searchTermsVersion {Number} The version of the entity screening's `search_terms` that were compared when the entity screening hit was added. entity screening hits are immutable once they have been reviewed. If changes are detected due to updates to the entity screening's `search_terms`, the associated entity program, or the list's source data prior to review, the entity screening hit will be updated to reflect those changes.
     */
    constructor(searchTermsVersion) { 
        
        EntityScreeningHitAnalysis.initialize(this, searchTermsVersion);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, searchTermsVersion) { 
        obj['search_terms_version'] = searchTermsVersion;
    }

    /**
     * Constructs a <code>EntityScreeningHitAnalysis</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntityScreeningHitAnalysis} obj Optional instance to populate.
     * @return {module:model/EntityScreeningHitAnalysis} The populated <code>EntityScreeningHitAnalysis</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntityScreeningHitAnalysis();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('documents')) {
                obj['documents'] = MatchSummaryCode.constructFromObject(data['documents']);
            }
            if (data.hasOwnProperty('email_addresses')) {
                obj['email_addresses'] = MatchSummaryCode.constructFromObject(data['email_addresses']);
            }
            if (data.hasOwnProperty('locations')) {
                obj['locations'] = MatchSummaryCode.constructFromObject(data['locations']);
            }
            if (data.hasOwnProperty('names')) {
                obj['names'] = MatchSummaryCode.constructFromObject(data['names']);
            }
            if (data.hasOwnProperty('phone_numbers')) {
                obj['phone_numbers'] = MatchSummaryCode.constructFromObject(data['phone_numbers']);
            }
            if (data.hasOwnProperty('search_terms_version')) {
                obj['search_terms_version'] = ApiClient.convertToType(data['search_terms_version'], 'Number');
            }
            if (data.hasOwnProperty('urls')) {
                obj['urls'] = MatchSummaryCode.constructFromObject(data['urls']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EntityScreeningHitAnalysis</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EntityScreeningHitAnalysis</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EntityScreeningHitAnalysis.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

EntityScreeningHitAnalysis.RequiredProperties = ["search_terms_version"];

/**
 * @member {module:model/MatchSummaryCode} documents
 */
EntityScreeningHitAnalysis.prototype['documents'] = undefined;

/**
 * @member {module:model/MatchSummaryCode} email_addresses
 */
EntityScreeningHitAnalysis.prototype['email_addresses'] = undefined;

/**
 * @member {module:model/MatchSummaryCode} locations
 */
EntityScreeningHitAnalysis.prototype['locations'] = undefined;

/**
 * @member {module:model/MatchSummaryCode} names
 */
EntityScreeningHitAnalysis.prototype['names'] = undefined;

/**
 * @member {module:model/MatchSummaryCode} phone_numbers
 */
EntityScreeningHitAnalysis.prototype['phone_numbers'] = undefined;

/**
 * The version of the entity screening's `search_terms` that were compared when the entity screening hit was added. entity screening hits are immutable once they have been reviewed. If changes are detected due to updates to the entity screening's `search_terms`, the associated entity program, or the list's source data prior to review, the entity screening hit will be updated to reflect those changes.
 * @member {Number} search_terms_version
 */
EntityScreeningHitAnalysis.prototype['search_terms_version'] = undefined;

/**
 * @member {module:model/MatchSummaryCode} urls
 */
EntityScreeningHitAnalysis.prototype['urls'] = undefined;






export default EntityScreeningHitAnalysis;

