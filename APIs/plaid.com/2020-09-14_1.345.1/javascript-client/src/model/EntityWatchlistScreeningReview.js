/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WatchlistScreeningAuditTrail from './WatchlistScreeningAuditTrail';

/**
 * The EntityWatchlistScreeningReview model module.
 * @module model/EntityWatchlistScreeningReview
 * @version 2020-09-14_1.345.1
 */
class EntityWatchlistScreeningReview {
    /**
     * Constructs a new <code>EntityWatchlistScreeningReview</code>.
     * A review submitted by a team member for an entity watchlist screening. A review can be either a comment on the current screening state, actions taken against hits attached to the watchlist screening, or both.
     * @alias module:model/EntityWatchlistScreeningReview
     * @extends Object
     * @param auditTrail {module:model/WatchlistScreeningAuditTrail} 
     * @param comment {String} A comment submitted by a team member as part of reviewing a watchlist screening.
     * @param confirmedHits {Array.<String>} Hits marked as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
     * @param dismissedHits {Array.<String>} Hits marked as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
     * @param id {String} ID of the associated entity review.
     */
    constructor(auditTrail, comment, confirmedHits, dismissedHits, id) { 
        
        EntityWatchlistScreeningReview.initialize(this, auditTrail, comment, confirmedHits, dismissedHits, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, auditTrail, comment, confirmedHits, dismissedHits, id) { 
        obj['audit_trail'] = auditTrail;
        obj['comment'] = comment;
        obj['confirmed_hits'] = confirmedHits;
        obj['dismissed_hits'] = dismissedHits;
        obj['id'] = id;
    }

    /**
     * Constructs a <code>EntityWatchlistScreeningReview</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntityWatchlistScreeningReview} obj Optional instance to populate.
     * @return {module:model/EntityWatchlistScreeningReview} The populated <code>EntityWatchlistScreeningReview</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntityWatchlistScreeningReview();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('audit_trail')) {
                obj['audit_trail'] = WatchlistScreeningAuditTrail.constructFromObject(data['audit_trail']);
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('confirmed_hits')) {
                obj['confirmed_hits'] = ApiClient.convertToType(data['confirmed_hits'], ['String']);
            }
            if (data.hasOwnProperty('dismissed_hits')) {
                obj['dismissed_hits'] = ApiClient.convertToType(data['dismissed_hits'], ['String']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EntityWatchlistScreeningReview</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EntityWatchlistScreeningReview</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EntityWatchlistScreeningReview.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['confirmed_hits'])) {
            throw new Error("Expected the field `confirmed_hits` to be an array in the JSON data but got " + data['confirmed_hits']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dismissed_hits'])) {
            throw new Error("Expected the field `dismissed_hits` to be an array in the JSON data but got " + data['dismissed_hits']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}

EntityWatchlistScreeningReview.RequiredProperties = ["audit_trail", "comment", "confirmed_hits", "dismissed_hits", "id"];

/**
 * @member {module:model/WatchlistScreeningAuditTrail} audit_trail
 */
EntityWatchlistScreeningReview.prototype['audit_trail'] = undefined;

/**
 * A comment submitted by a team member as part of reviewing a watchlist screening.
 * @member {String} comment
 */
EntityWatchlistScreeningReview.prototype['comment'] = undefined;

/**
 * Hits marked as a true positive after thorough manual review. These hits will never recur or be updated once dismissed. In most cases, confirmed hits indicate that the customer should be rejected.
 * @member {Array.<String>} confirmed_hits
 */
EntityWatchlistScreeningReview.prototype['confirmed_hits'] = undefined;

/**
 * Hits marked as a false positive after thorough manual review. These hits will never recur or be updated once dismissed.
 * @member {Array.<String>} dismissed_hits
 */
EntityWatchlistScreeningReview.prototype['dismissed_hits'] = undefined;

/**
 * ID of the associated entity review.
 * @member {String} id
 */
EntityWatchlistScreeningReview.prototype['id'] = undefined;






export default EntityWatchlistScreeningReview;

