/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APR model module.
 * @module model/APR
 * @version 2020-09-14_1.345.1
 */
class APR {
    /**
     * Constructs a new <code>APR</code>.
     * Information about the APR on the account.
     * @alias module:model/APR
     * @extends Object
     * @param aprPercentage {Number} Annual Percentage Rate applied. 
     * @param aprType {module:model/APR.AprTypeEnum} The type of balance to which the APR applies.
     * @param balanceSubjectToApr {Number} Amount of money that is subjected to the APR if a balance was carried beyond payment due date. How it is calculated can vary by card issuer. It is often calculated as an average daily balance.
     * @param interestChargeAmount {Number} Amount of money charged due to interest from last statement.
     */
    constructor(aprPercentage, aprType, balanceSubjectToApr, interestChargeAmount) { 
        
        APR.initialize(this, aprPercentage, aprType, balanceSubjectToApr, interestChargeAmount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, aprPercentage, aprType, balanceSubjectToApr, interestChargeAmount) { 
        obj['apr_percentage'] = aprPercentage;
        obj['apr_type'] = aprType;
        obj['balance_subject_to_apr'] = balanceSubjectToApr;
        obj['interest_charge_amount'] = interestChargeAmount;
    }

    /**
     * Constructs a <code>APR</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APR} obj Optional instance to populate.
     * @return {module:model/APR} The populated <code>APR</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APR();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('apr_percentage')) {
                obj['apr_percentage'] = ApiClient.convertToType(data['apr_percentage'], 'Number');
            }
            if (data.hasOwnProperty('apr_type')) {
                obj['apr_type'] = ApiClient.convertToType(data['apr_type'], 'String');
            }
            if (data.hasOwnProperty('balance_subject_to_apr')) {
                obj['balance_subject_to_apr'] = ApiClient.convertToType(data['balance_subject_to_apr'], 'Number');
            }
            if (data.hasOwnProperty('interest_charge_amount')) {
                obj['interest_charge_amount'] = ApiClient.convertToType(data['interest_charge_amount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>APR</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>APR</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of APR.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['apr_type'] && !(typeof data['apr_type'] === 'string' || data['apr_type'] instanceof String)) {
            throw new Error("Expected the field `apr_type` to be a primitive type in the JSON string but got " + data['apr_type']);
        }

        return true;
    }


}

APR.RequiredProperties = ["apr_percentage", "apr_type", "balance_subject_to_apr", "interest_charge_amount"];

/**
 * Annual Percentage Rate applied. 
 * @member {Number} apr_percentage
 */
APR.prototype['apr_percentage'] = undefined;

/**
 * The type of balance to which the APR applies.
 * @member {module:model/APR.AprTypeEnum} apr_type
 */
APR.prototype['apr_type'] = undefined;

/**
 * Amount of money that is subjected to the APR if a balance was carried beyond payment due date. How it is calculated can vary by card issuer. It is often calculated as an average daily balance.
 * @member {Number} balance_subject_to_apr
 */
APR.prototype['balance_subject_to_apr'] = undefined;

/**
 * Amount of money charged due to interest from last statement.
 * @member {Number} interest_charge_amount
 */
APR.prototype['interest_charge_amount'] = undefined;





/**
 * Allowed values for the <code>apr_type</code> property.
 * @enum {String}
 * @readonly
 */
APR['AprTypeEnum'] = {

    /**
     * value: "balance_transfer_apr"
     * @const
     */
    "balance_transfer_apr": "balance_transfer_apr",

    /**
     * value: "cash_apr"
     * @const
     */
    "cash_apr": "cash_apr",

    /**
     * value: "purchase_apr"
     * @const
     */
    "purchase_apr": "purchase_apr",

    /**
     * value: "special"
     * @const
     */
    "special": "special"
};



export default APR;

