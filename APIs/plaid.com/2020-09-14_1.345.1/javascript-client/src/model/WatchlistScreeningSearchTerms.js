/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WatchlistScreeningSearchTerms model module.
 * @module model/WatchlistScreeningSearchTerms
 * @version 2020-09-14_1.345.1
 */
class WatchlistScreeningSearchTerms {
    /**
     * Constructs a new <code>WatchlistScreeningSearchTerms</code>.
     * Search terms for creating an individual watchlist screening
     * @alias module:model/WatchlistScreeningSearchTerms
     * @extends Object
     * @param country {String} Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
     * @param dateOfBirth {Date} A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
     * @param documentNumber {String} The numeric or alphanumeric identifier associated with this document.
     * @param legalName {String} The legal name of the individual being screened.
     * @param version {Number} The current version of the search terms. Starts at `1` and increments with each edit to `search_terms`.
     * @param watchlistProgramId {String} ID of the associated program.
     */
    constructor(country, dateOfBirth, documentNumber, legalName, version, watchlistProgramId) { 
        
        WatchlistScreeningSearchTerms.initialize(this, country, dateOfBirth, documentNumber, legalName, version, watchlistProgramId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, country, dateOfBirth, documentNumber, legalName, version, watchlistProgramId) { 
        obj['country'] = country;
        obj['date_of_birth'] = dateOfBirth;
        obj['document_number'] = documentNumber;
        obj['legal_name'] = legalName;
        obj['version'] = version;
        obj['watchlist_program_id'] = watchlistProgramId;
    }

    /**
     * Constructs a <code>WatchlistScreeningSearchTerms</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WatchlistScreeningSearchTerms} obj Optional instance to populate.
     * @return {module:model/WatchlistScreeningSearchTerms} The populated <code>WatchlistScreeningSearchTerms</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WatchlistScreeningSearchTerms();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('date_of_birth')) {
                obj['date_of_birth'] = ApiClient.convertToType(data['date_of_birth'], 'Date');
            }
            if (data.hasOwnProperty('document_number')) {
                obj['document_number'] = ApiClient.convertToType(data['document_number'], 'String');
            }
            if (data.hasOwnProperty('legal_name')) {
                obj['legal_name'] = ApiClient.convertToType(data['legal_name'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('watchlist_program_id')) {
                obj['watchlist_program_id'] = ApiClient.convertToType(data['watchlist_program_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WatchlistScreeningSearchTerms</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WatchlistScreeningSearchTerms</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WatchlistScreeningSearchTerms.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['document_number'] && !(typeof data['document_number'] === 'string' || data['document_number'] instanceof String)) {
            throw new Error("Expected the field `document_number` to be a primitive type in the JSON string but got " + data['document_number']);
        }
        // ensure the json data is a string
        if (data['legal_name'] && !(typeof data['legal_name'] === 'string' || data['legal_name'] instanceof String)) {
            throw new Error("Expected the field `legal_name` to be a primitive type in the JSON string but got " + data['legal_name']);
        }
        // ensure the json data is a string
        if (data['watchlist_program_id'] && !(typeof data['watchlist_program_id'] === 'string' || data['watchlist_program_id'] instanceof String)) {
            throw new Error("Expected the field `watchlist_program_id` to be a primitive type in the JSON string but got " + data['watchlist_program_id']);
        }

        return true;
    }


}

WatchlistScreeningSearchTerms.RequiredProperties = ["country", "date_of_birth", "document_number", "legal_name", "version", "watchlist_program_id"];

/**
 * Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
 * @member {String} country
 */
WatchlistScreeningSearchTerms.prototype['country'] = undefined;

/**
 * A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
 * @member {Date} date_of_birth
 */
WatchlistScreeningSearchTerms.prototype['date_of_birth'] = undefined;

/**
 * The numeric or alphanumeric identifier associated with this document.
 * @member {String} document_number
 */
WatchlistScreeningSearchTerms.prototype['document_number'] = undefined;

/**
 * The legal name of the individual being screened.
 * @member {String} legal_name
 */
WatchlistScreeningSearchTerms.prototype['legal_name'] = undefined;

/**
 * The current version of the search terms. Starts at `1` and increments with each edit to `search_terms`.
 * @member {Number} version
 */
WatchlistScreeningSearchTerms.prototype['version'] = undefined;

/**
 * ID of the associated program.
 * @member {String} watchlist_program_id
 */
WatchlistScreeningSearchTerms.prototype['watchlist_program_id'] = undefined;






export default WatchlistScreeningSearchTerms;

