/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlaidError from './PlaidError';
import WebhookEnvironmentValues from './WebhookEnvironmentValues';

/**
 * The HoldingsDefaultUpdateWebhook model module.
 * @module model/HoldingsDefaultUpdateWebhook
 * @version 2020-09-14_1.345.1
 */
class HoldingsDefaultUpdateWebhook {
    /**
     * Constructs a new <code>HoldingsDefaultUpdateWebhook</code>.
     * Fired when new or updated holdings have been detected on an investment account. The webhook typically fires in response to any newly added holdings or price changes to existing holdings, most commonly after market close.
     * @alias module:model/HoldingsDefaultUpdateWebhook
     * @extends Object
     * @param environment {module:model/WebhookEnvironmentValues} 
     * @param itemId {String} The `item_id` of the Item associated with this webhook, warning, or error
     * @param newHoldings {Number} The number of new holdings reported since the last time this webhook was fired.
     * @param updatedHoldings {Number} The number of updated holdings reported since the last time this webhook was fired.
     * @param webhookCode {String} `DEFAULT_UPDATE`
     * @param webhookType {String} `HOLDINGS`
     */
    constructor(environment, itemId, newHoldings, updatedHoldings, webhookCode, webhookType) { 
        
        HoldingsDefaultUpdateWebhook.initialize(this, environment, itemId, newHoldings, updatedHoldings, webhookCode, webhookType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, environment, itemId, newHoldings, updatedHoldings, webhookCode, webhookType) { 
        obj['environment'] = environment;
        obj['item_id'] = itemId;
        obj['new_holdings'] = newHoldings;
        obj['updated_holdings'] = updatedHoldings;
        obj['webhook_code'] = webhookCode;
        obj['webhook_type'] = webhookType;
    }

    /**
     * Constructs a <code>HoldingsDefaultUpdateWebhook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HoldingsDefaultUpdateWebhook} obj Optional instance to populate.
     * @return {module:model/HoldingsDefaultUpdateWebhook} The populated <code>HoldingsDefaultUpdateWebhook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HoldingsDefaultUpdateWebhook();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('environment')) {
                obj['environment'] = WebhookEnvironmentValues.constructFromObject(data['environment']);
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = PlaidError.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('item_id')) {
                obj['item_id'] = ApiClient.convertToType(data['item_id'], 'String');
            }
            if (data.hasOwnProperty('new_holdings')) {
                obj['new_holdings'] = ApiClient.convertToType(data['new_holdings'], 'Number');
            }
            if (data.hasOwnProperty('updated_holdings')) {
                obj['updated_holdings'] = ApiClient.convertToType(data['updated_holdings'], 'Number');
            }
            if (data.hasOwnProperty('webhook_code')) {
                obj['webhook_code'] = ApiClient.convertToType(data['webhook_code'], 'String');
            }
            if (data.hasOwnProperty('webhook_type')) {
                obj['webhook_type'] = ApiClient.convertToType(data['webhook_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HoldingsDefaultUpdateWebhook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HoldingsDefaultUpdateWebhook</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HoldingsDefaultUpdateWebhook.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['item_id'] && !(typeof data['item_id'] === 'string' || data['item_id'] instanceof String)) {
            throw new Error("Expected the field `item_id` to be a primitive type in the JSON string but got " + data['item_id']);
        }
        // ensure the json data is a string
        if (data['webhook_code'] && !(typeof data['webhook_code'] === 'string' || data['webhook_code'] instanceof String)) {
            throw new Error("Expected the field `webhook_code` to be a primitive type in the JSON string but got " + data['webhook_code']);
        }
        // ensure the json data is a string
        if (data['webhook_type'] && !(typeof data['webhook_type'] === 'string' || data['webhook_type'] instanceof String)) {
            throw new Error("Expected the field `webhook_type` to be a primitive type in the JSON string but got " + data['webhook_type']);
        }

        return true;
    }


}

HoldingsDefaultUpdateWebhook.RequiredProperties = ["environment", "item_id", "new_holdings", "updated_holdings", "webhook_code", "webhook_type"];

/**
 * @member {module:model/WebhookEnvironmentValues} environment
 */
HoldingsDefaultUpdateWebhook.prototype['environment'] = undefined;

/**
 * @member {module:model/PlaidError} error
 */
HoldingsDefaultUpdateWebhook.prototype['error'] = undefined;

/**
 * The `item_id` of the Item associated with this webhook, warning, or error
 * @member {String} item_id
 */
HoldingsDefaultUpdateWebhook.prototype['item_id'] = undefined;

/**
 * The number of new holdings reported since the last time this webhook was fired.
 * @member {Number} new_holdings
 */
HoldingsDefaultUpdateWebhook.prototype['new_holdings'] = undefined;

/**
 * The number of updated holdings reported since the last time this webhook was fired.
 * @member {Number} updated_holdings
 */
HoldingsDefaultUpdateWebhook.prototype['updated_holdings'] = undefined;

/**
 * `DEFAULT_UPDATE`
 * @member {String} webhook_code
 */
HoldingsDefaultUpdateWebhook.prototype['webhook_code'] = undefined;

/**
 * `HOLDINGS`
 * @member {String} webhook_type
 */
HoldingsDefaultUpdateWebhook.prototype['webhook_type'] = undefined;






export default HoldingsDefaultUpdateWebhook;

