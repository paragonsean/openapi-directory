/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DocumentaryVerification from './DocumentaryVerification';
import IdentityVerificationStatus from './IdentityVerificationStatus';
import IdentityVerificationStepSummary from './IdentityVerificationStepSummary';
import IdentityVerificationTemplateReference from './IdentityVerificationTemplateReference';
import IdentityVerificationUserData from './IdentityVerificationUserData';
import KYCCheckDetails from './KYCCheckDetails';
import RiskCheckDetails from './RiskCheckDetails';

/**
 * The IdentityVerificationRetryResponse model module.
 * @module model/IdentityVerificationRetryResponse
 * @version 2020-09-14_1.345.1
 */
class IdentityVerificationRetryResponse {
    /**
     * Constructs a new <code>IdentityVerificationRetryResponse</code>.
     * A identity verification attempt represents a customer&#39;s attempt to verify their identity, reflecting the required steps for completing the session, the results for each step, and information collected in the process.
     * @alias module:model/IdentityVerificationRetryResponse
     * @extends Object
     * @param clientUserId {String} An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
     * @param completedAt {Date} An ISO8601 formatted timestamp.
     * @param createdAt {Date} An ISO8601 formatted timestamp.
     * @param documentaryVerification {module:model/DocumentaryVerification} 
     * @param id {String} ID of the associated Identity Verification attempt.
     * @param kycCheck {module:model/KYCCheckDetails} 
     * @param previousAttemptId {String} The ID for the Identity Verification preceding this session. This field will only be filled if the current Identity Verification is a retry of a previous attempt.
     * @param redactedAt {Date} An ISO8601 formatted timestamp.
     * @param requestId {String} A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     * @param riskCheck {module:model/RiskCheckDetails} 
     * @param shareableUrl {String} A shareable URL that can be sent directly to the user to complete verification
     * @param status {module:model/IdentityVerificationStatus} 
     * @param steps {module:model/IdentityVerificationStepSummary} 
     * @param template {module:model/IdentityVerificationTemplateReference} 
     * @param user {module:model/IdentityVerificationUserData} 
     * @param watchlistScreeningId {String} ID of the associated screening.
     */
    constructor(clientUserId, completedAt, createdAt, documentaryVerification, id, kycCheck, previousAttemptId, redactedAt, requestId, riskCheck, shareableUrl, status, steps, template, user, watchlistScreeningId) { 
        
        IdentityVerificationRetryResponse.initialize(this, clientUserId, completedAt, createdAt, documentaryVerification, id, kycCheck, previousAttemptId, redactedAt, requestId, riskCheck, shareableUrl, status, steps, template, user, watchlistScreeningId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientUserId, completedAt, createdAt, documentaryVerification, id, kycCheck, previousAttemptId, redactedAt, requestId, riskCheck, shareableUrl, status, steps, template, user, watchlistScreeningId) { 
        obj['client_user_id'] = clientUserId;
        obj['completed_at'] = completedAt;
        obj['created_at'] = createdAt;
        obj['documentary_verification'] = documentaryVerification;
        obj['id'] = id;
        obj['kyc_check'] = kycCheck;
        obj['previous_attempt_id'] = previousAttemptId;
        obj['redacted_at'] = redactedAt;
        obj['request_id'] = requestId;
        obj['risk_check'] = riskCheck;
        obj['shareable_url'] = shareableUrl;
        obj['status'] = status;
        obj['steps'] = steps;
        obj['template'] = template;
        obj['user'] = user;
        obj['watchlist_screening_id'] = watchlistScreeningId;
    }

    /**
     * Constructs a <code>IdentityVerificationRetryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentityVerificationRetryResponse} obj Optional instance to populate.
     * @return {module:model/IdentityVerificationRetryResponse} The populated <code>IdentityVerificationRetryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentityVerificationRetryResponse();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('client_user_id')) {
                obj['client_user_id'] = ApiClient.convertToType(data['client_user_id'], 'String');
            }
            if (data.hasOwnProperty('completed_at')) {
                obj['completed_at'] = ApiClient.convertToType(data['completed_at'], 'Date');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('documentary_verification')) {
                obj['documentary_verification'] = DocumentaryVerification.constructFromObject(data['documentary_verification']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kyc_check')) {
                obj['kyc_check'] = KYCCheckDetails.constructFromObject(data['kyc_check']);
            }
            if (data.hasOwnProperty('previous_attempt_id')) {
                obj['previous_attempt_id'] = ApiClient.convertToType(data['previous_attempt_id'], 'String');
            }
            if (data.hasOwnProperty('redacted_at')) {
                obj['redacted_at'] = ApiClient.convertToType(data['redacted_at'], 'Date');
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
            if (data.hasOwnProperty('risk_check')) {
                obj['risk_check'] = RiskCheckDetails.constructFromObject(data['risk_check']);
            }
            if (data.hasOwnProperty('shareable_url')) {
                obj['shareable_url'] = ApiClient.convertToType(data['shareable_url'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = IdentityVerificationStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('steps')) {
                obj['steps'] = IdentityVerificationStepSummary.constructFromObject(data['steps']);
            }
            if (data.hasOwnProperty('template')) {
                obj['template'] = IdentityVerificationTemplateReference.constructFromObject(data['template']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = IdentityVerificationUserData.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('watchlist_screening_id')) {
                obj['watchlist_screening_id'] = ApiClient.convertToType(data['watchlist_screening_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentityVerificationRetryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentityVerificationRetryResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IdentityVerificationRetryResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['client_user_id'] && !(typeof data['client_user_id'] === 'string' || data['client_user_id'] instanceof String)) {
            throw new Error("Expected the field `client_user_id` to be a primitive type in the JSON string but got " + data['client_user_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['previous_attempt_id'] && !(typeof data['previous_attempt_id'] === 'string' || data['previous_attempt_id'] instanceof String)) {
            throw new Error("Expected the field `previous_attempt_id` to be a primitive type in the JSON string but got " + data['previous_attempt_id']);
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }
        // ensure the json data is a string
        if (data['shareable_url'] && !(typeof data['shareable_url'] === 'string' || data['shareable_url'] instanceof String)) {
            throw new Error("Expected the field `shareable_url` to be a primitive type in the JSON string but got " + data['shareable_url']);
        }
        // ensure the json data is a string
        if (data['watchlist_screening_id'] && !(typeof data['watchlist_screening_id'] === 'string' || data['watchlist_screening_id'] instanceof String)) {
            throw new Error("Expected the field `watchlist_screening_id` to be a primitive type in the JSON string but got " + data['watchlist_screening_id']);
        }

        return true;
    }


}

IdentityVerificationRetryResponse.RequiredProperties = ["client_user_id", "completed_at", "created_at", "documentary_verification", "id", "kyc_check", "previous_attempt_id", "redacted_at", "request_id", "risk_check", "shareable_url", "status", "steps", "template", "user", "watchlist_screening_id"];

/**
 * An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
 * @member {String} client_user_id
 */
IdentityVerificationRetryResponse.prototype['client_user_id'] = undefined;

/**
 * An ISO8601 formatted timestamp.
 * @member {Date} completed_at
 */
IdentityVerificationRetryResponse.prototype['completed_at'] = undefined;

/**
 * An ISO8601 formatted timestamp.
 * @member {Date} created_at
 */
IdentityVerificationRetryResponse.prototype['created_at'] = undefined;

/**
 * @member {module:model/DocumentaryVerification} documentary_verification
 */
IdentityVerificationRetryResponse.prototype['documentary_verification'] = undefined;

/**
 * ID of the associated Identity Verification attempt.
 * @member {String} id
 */
IdentityVerificationRetryResponse.prototype['id'] = undefined;

/**
 * @member {module:model/KYCCheckDetails} kyc_check
 */
IdentityVerificationRetryResponse.prototype['kyc_check'] = undefined;

/**
 * The ID for the Identity Verification preceding this session. This field will only be filled if the current Identity Verification is a retry of a previous attempt.
 * @member {String} previous_attempt_id
 */
IdentityVerificationRetryResponse.prototype['previous_attempt_id'] = undefined;

/**
 * An ISO8601 formatted timestamp.
 * @member {Date} redacted_at
 */
IdentityVerificationRetryResponse.prototype['redacted_at'] = undefined;

/**
 * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
 * @member {String} request_id
 */
IdentityVerificationRetryResponse.prototype['request_id'] = undefined;

/**
 * @member {module:model/RiskCheckDetails} risk_check
 */
IdentityVerificationRetryResponse.prototype['risk_check'] = undefined;

/**
 * A shareable URL that can be sent directly to the user to complete verification
 * @member {String} shareable_url
 */
IdentityVerificationRetryResponse.prototype['shareable_url'] = undefined;

/**
 * @member {module:model/IdentityVerificationStatus} status
 */
IdentityVerificationRetryResponse.prototype['status'] = undefined;

/**
 * @member {module:model/IdentityVerificationStepSummary} steps
 */
IdentityVerificationRetryResponse.prototype['steps'] = undefined;

/**
 * @member {module:model/IdentityVerificationTemplateReference} template
 */
IdentityVerificationRetryResponse.prototype['template'] = undefined;

/**
 * @member {module:model/IdentityVerificationUserData} user
 */
IdentityVerificationRetryResponse.prototype['user'] = undefined;

/**
 * ID of the associated screening.
 * @member {String} watchlist_screening_id
 */
IdentityVerificationRetryResponse.prototype['watchlist_screening_id'] = undefined;






export default IdentityVerificationRetryResponse;

