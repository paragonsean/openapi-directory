/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressDataNullable from './AddressDataNullable';

/**
 * The Employer model module.
 * @module model/Employer
 * @version 2020-09-14_1.345.1
 */
class Employer {
    /**
     * Constructs a new <code>Employer</code>.
     * Data about the employer.
     * @alias module:model/Employer
     * @extends Object
     * @param address {module:model/AddressDataNullable} 
     * @param confidenceScore {Number} A number from 0 to 1 indicating Plaid's level of confidence in the pairing between the employer and the institution (not yet implemented).
     * @param employerId {String} Plaid's unique identifier for the employer.
     * @param name {String} The name of the employer
     */
    constructor(address, confidenceScore, employerId, name) { 
        
        Employer.initialize(this, address, confidenceScore, employerId, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address, confidenceScore, employerId, name) { 
        obj['address'] = address;
        obj['confidence_score'] = confidenceScore;
        obj['employer_id'] = employerId;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>Employer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Employer} obj Optional instance to populate.
     * @return {module:model/Employer} The populated <code>Employer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Employer();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('address')) {
                obj['address'] = AddressDataNullable.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('confidence_score')) {
                obj['confidence_score'] = ApiClient.convertToType(data['confidence_score'], 'Number');
            }
            if (data.hasOwnProperty('employer_id')) {
                obj['employer_id'] = ApiClient.convertToType(data['employer_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Employer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Employer</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Employer.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `address`
        if (data['address']) { // data not null
          AddressDataNullable.validateJSON(data['address']);
        }
        // ensure the json data is a string
        if (data['employer_id'] && !(typeof data['employer_id'] === 'string' || data['employer_id'] instanceof String)) {
            throw new Error("Expected the field `employer_id` to be a primitive type in the JSON string but got " + data['employer_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

Employer.RequiredProperties = ["address", "confidence_score", "employer_id", "name"];

/**
 * @member {module:model/AddressDataNullable} address
 */
Employer.prototype['address'] = undefined;

/**
 * A number from 0 to 1 indicating Plaid's level of confidence in the pairing between the employer and the institution (not yet implemented).
 * @member {Number} confidence_score
 */
Employer.prototype['confidence_score'] = undefined;

/**
 * Plaid's unique identifier for the employer.
 * @member {String} employer_id
 */
Employer.prototype['employer_id'] = undefined;

/**
 * The name of the employer
 * @member {String} name
 */
Employer.prototype['name'] = undefined;






export default Employer;

