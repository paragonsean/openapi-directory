/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssetReportUser model module.
 * @module model/AssetReportUser
 * @version 2020-09-14_1.345.1
 */
class AssetReportUser {
    /**
     * Constructs a new <code>AssetReportUser</code>.
     * The user object allows you to provide additional information about the user to be appended to the Asset Report. All fields are optional. The &#x60;first_name&#x60;, &#x60;last_name&#x60;, and &#x60;ssn&#x60; fields are required if you would like the Report to be eligible for Fannie Mae’s Day 1 Certainty™ program.
     * @alias module:model/AssetReportUser
     * @extends Object
     */
    constructor() { 
        
        AssetReportUser.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssetReportUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetReportUser} obj Optional instance to populate.
     * @return {module:model/AssetReportUser} The populated <code>AssetReportUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetReportUser();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('client_user_id')) {
                obj['client_user_id'] = ApiClient.convertToType(data['client_user_id'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('middle_name')) {
                obj['middle_name'] = ApiClient.convertToType(data['middle_name'], 'String');
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('ssn')) {
                obj['ssn'] = ApiClient.convertToType(data['ssn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetReportUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetReportUser</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['client_user_id'] && !(typeof data['client_user_id'] === 'string' || data['client_user_id'] instanceof String)) {
            throw new Error("Expected the field `client_user_id` to be a primitive type in the JSON string but got " + data['client_user_id']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['middle_name'] && !(typeof data['middle_name'] === 'string' || data['middle_name'] instanceof String)) {
            throw new Error("Expected the field `middle_name` to be a primitive type in the JSON string but got " + data['middle_name']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }
        // ensure the json data is a string
        if (data['ssn'] && !(typeof data['ssn'] === 'string' || data['ssn'] instanceof String)) {
            throw new Error("Expected the field `ssn` to be a primitive type in the JSON string but got " + data['ssn']);
        }

        return true;
    }


}



/**
 * An identifier you determine and submit for the user.
 * @member {String} client_user_id
 */
AssetReportUser.prototype['client_user_id'] = undefined;

/**
 * The user's email address.
 * @member {String} email
 */
AssetReportUser.prototype['email'] = undefined;

/**
 * The user's first name. Required for the Fannie Mae Day 1 Certainty™ program.
 * @member {String} first_name
 */
AssetReportUser.prototype['first_name'] = undefined;

/**
 * The user's last name.  Required for the Fannie Mae Day 1 Certainty™ program.
 * @member {String} last_name
 */
AssetReportUser.prototype['last_name'] = undefined;

/**
 * The user's middle name
 * @member {String} middle_name
 */
AssetReportUser.prototype['middle_name'] = undefined;

/**
 * The user's phone number, in E.164 format: +{countrycode}{number}. For example: \"+14151234567\". Phone numbers provided in other formats will be parsed on a best-effort basis.
 * @member {String} phone_number
 */
AssetReportUser.prototype['phone_number'] = undefined;

/**
 * The user's Social Security Number. Required for the Fannie Mae Day 1 Certainty™ program.  Format: \"ddd-dd-dddd\"
 * @member {String} ssn
 */
AssetReportUser.prototype['ssn'] = undefined;






export default AssetReportUser;

