/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WalletTransactionStatus from './WalletTransactionStatus';
import WebhookEnvironmentValues from './WebhookEnvironmentValues';

/**
 * The WalletTransactionStatusUpdateWebhook model module.
 * @module model/WalletTransactionStatusUpdateWebhook
 * @version 2020-09-14_1.345.1
 */
class WalletTransactionStatusUpdateWebhook {
    /**
     * Constructs a new <code>WalletTransactionStatusUpdateWebhook</code>.
     * Fired when the status of a wallet transaction has changed.
     * @alias module:model/WalletTransactionStatusUpdateWebhook
     * @extends Object
     * @param environment {module:model/WebhookEnvironmentValues} 
     * @param newStatus {module:model/WalletTransactionStatus} 
     * @param oldStatus {module:model/WalletTransactionStatus} 
     * @param timestamp {Date} The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2017-09-14T14:42:19.350Z\"`
     * @param transactionId {String} The `transaction_id` for the wallet transaction being updated
     * @param webhookCode {String} `WALLET_TRANSACTION_STATUS_UPDATE`
     * @param webhookType {String} `WALLET`
     */
    constructor(environment, newStatus, oldStatus, timestamp, transactionId, webhookCode, webhookType) { 
        
        WalletTransactionStatusUpdateWebhook.initialize(this, environment, newStatus, oldStatus, timestamp, transactionId, webhookCode, webhookType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, environment, newStatus, oldStatus, timestamp, transactionId, webhookCode, webhookType) { 
        obj['environment'] = environment;
        obj['new_status'] = newStatus;
        obj['old_status'] = oldStatus;
        obj['timestamp'] = timestamp;
        obj['transaction_id'] = transactionId;
        obj['webhook_code'] = webhookCode;
        obj['webhook_type'] = webhookType;
    }

    /**
     * Constructs a <code>WalletTransactionStatusUpdateWebhook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WalletTransactionStatusUpdateWebhook} obj Optional instance to populate.
     * @return {module:model/WalletTransactionStatusUpdateWebhook} The populated <code>WalletTransactionStatusUpdateWebhook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WalletTransactionStatusUpdateWebhook();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('environment')) {
                obj['environment'] = WebhookEnvironmentValues.constructFromObject(data['environment']);
            }
            if (data.hasOwnProperty('new_status')) {
                obj['new_status'] = WalletTransactionStatus.constructFromObject(data['new_status']);
            }
            if (data.hasOwnProperty('old_status')) {
                obj['old_status'] = WalletTransactionStatus.constructFromObject(data['old_status']);
            }
            if (data.hasOwnProperty('payment_id')) {
                obj['payment_id'] = ApiClient.convertToType(data['payment_id'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('wallet_id')) {
                obj['wallet_id'] = ApiClient.convertToType(data['wallet_id'], 'String');
            }
            if (data.hasOwnProperty('webhook_code')) {
                obj['webhook_code'] = ApiClient.convertToType(data['webhook_code'], 'String');
            }
            if (data.hasOwnProperty('webhook_type')) {
                obj['webhook_type'] = ApiClient.convertToType(data['webhook_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WalletTransactionStatusUpdateWebhook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WalletTransactionStatusUpdateWebhook</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WalletTransactionStatusUpdateWebhook.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['payment_id'] && !(typeof data['payment_id'] === 'string' || data['payment_id'] instanceof String)) {
            throw new Error("Expected the field `payment_id` to be a primitive type in the JSON string but got " + data['payment_id']);
        }
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }
        // ensure the json data is a string
        if (data['wallet_id'] && !(typeof data['wallet_id'] === 'string' || data['wallet_id'] instanceof String)) {
            throw new Error("Expected the field `wallet_id` to be a primitive type in the JSON string but got " + data['wallet_id']);
        }
        // ensure the json data is a string
        if (data['webhook_code'] && !(typeof data['webhook_code'] === 'string' || data['webhook_code'] instanceof String)) {
            throw new Error("Expected the field `webhook_code` to be a primitive type in the JSON string but got " + data['webhook_code']);
        }
        // ensure the json data is a string
        if (data['webhook_type'] && !(typeof data['webhook_type'] === 'string' || data['webhook_type'] instanceof String)) {
            throw new Error("Expected the field `webhook_type` to be a primitive type in the JSON string but got " + data['webhook_type']);
        }

        return true;
    }


}

WalletTransactionStatusUpdateWebhook.RequiredProperties = ["environment", "new_status", "old_status", "timestamp", "transaction_id", "webhook_code", "webhook_type"];

/**
 * @member {module:model/WebhookEnvironmentValues} environment
 */
WalletTransactionStatusUpdateWebhook.prototype['environment'] = undefined;

/**
 * @member {module:model/WalletTransactionStatus} new_status
 */
WalletTransactionStatusUpdateWebhook.prototype['new_status'] = undefined;

/**
 * @member {module:model/WalletTransactionStatus} old_status
 */
WalletTransactionStatusUpdateWebhook.prototype['old_status'] = undefined;

/**
 * The `payment_id` associated with the transaction. This will be present in case of `REFUND` and `PIS_PAY_IN`
 * @member {String} payment_id
 */
WalletTransactionStatusUpdateWebhook.prototype['payment_id'] = undefined;

/**
 * The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2017-09-14T14:42:19.350Z\"`
 * @member {Date} timestamp
 */
WalletTransactionStatusUpdateWebhook.prototype['timestamp'] = undefined;

/**
 * The `transaction_id` for the wallet transaction being updated
 * @member {String} transaction_id
 */
WalletTransactionStatusUpdateWebhook.prototype['transaction_id'] = undefined;

/**
 * The EMI (E-Money Institution) wallet that this payment is associated with. This wallet is used as an intermediary account to enable Plaid to reconcile the settlement of funds for Payment Initiation requests.
 * @member {String} wallet_id
 */
WalletTransactionStatusUpdateWebhook.prototype['wallet_id'] = undefined;

/**
 * `WALLET_TRANSACTION_STATUS_UPDATE`
 * @member {String} webhook_code
 */
WalletTransactionStatusUpdateWebhook.prototype['webhook_code'] = undefined;

/**
 * `WALLET`
 * @member {String} webhook_type
 */
WalletTransactionStatusUpdateWebhook.prototype['webhook_type'] = undefined;






export default WalletTransactionStatusUpdateWebhook;

