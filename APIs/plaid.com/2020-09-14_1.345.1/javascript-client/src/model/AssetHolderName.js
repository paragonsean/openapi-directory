/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssetHolderName model module.
 * @module model/AssetHolderName
 * @version 2020-09-14_1.345.1
 */
class AssetHolderName {
    /**
     * Constructs a new <code>AssetHolderName</code>.
     * Documentation not found in the MISMO model viewer and not provided by Freddie Mac.
     * @alias module:model/AssetHolderName
     * @extends Object
     * @param fullName {String} The unparsed name of either an individual or a legal entity.
     */
    constructor(fullName) { 
        
        AssetHolderName.initialize(this, fullName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fullName) { 
        obj['FullName'] = fullName;
    }

    /**
     * Constructs a <code>AssetHolderName</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetHolderName} obj Optional instance to populate.
     * @return {module:model/AssetHolderName} The populated <code>AssetHolderName</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetHolderName();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('FullName')) {
                obj['FullName'] = ApiClient.convertToType(data['FullName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetHolderName</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetHolderName</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AssetHolderName.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['FullName'] && !(typeof data['FullName'] === 'string' || data['FullName'] instanceof String)) {
            throw new Error("Expected the field `FullName` to be a primitive type in the JSON string but got " + data['FullName']);
        }

        return true;
    }


}

AssetHolderName.RequiredProperties = ["FullName"];

/**
 * The unparsed name of either an individual or a legal entity.
 * @member {String} FullName
 */
AssetHolderName.prototype['FullName'] = undefined;






export default AssetHolderName;

