/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RemovedTransaction from './RemovedTransaction';
import Transaction from './Transaction';

/**
 * The TransactionsSyncResponse model module.
 * @module model/TransactionsSyncResponse
 * @version 2020-09-14_1.345.1
 */
class TransactionsSyncResponse {
    /**
     * Constructs a new <code>TransactionsSyncResponse</code>.
     * TransactionsSyncResponse defines the response schema for &#x60;/transactions/sync&#x60;
     * @alias module:model/TransactionsSyncResponse
     * @extends Object
     * @param added {Array.<module:model/Transaction>} Transactions that have been added to the Item since `cursor` ordered by ascending last modified time.
     * @param hasMore {Boolean} Represents if more than requested count of transaction updates exist. If true, the additional updates can be fetched by making an additional request with `cursor` set to `next_cursor`. If `has_more` is true, it’s important to pull all available pages, to make it less likely for underlying data changes to conflict with pagination.
     * @param modified {Array.<module:model/Transaction>} Transactions that have been modified on the Item since `cursor` ordered by ascending last modified time.
     * @param nextCursor {String} Cursor used for fetching any future updates after the latest update provided in this response. The cursor obtained after all pages have been pulled (indicated by `has_more` being `false`) will be valid for at least 1 year. This cursor should be persisted for later calls. If transactions are not yet available, this will be an empty string.
     * @param removed {Array.<module:model/RemovedTransaction>} Transactions that have been removed from the Item since `cursor` ordered by ascending last modified time.
     * @param requestId {String} A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
     */
    constructor(added, hasMore, modified, nextCursor, removed, requestId) { 
        
        TransactionsSyncResponse.initialize(this, added, hasMore, modified, nextCursor, removed, requestId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, added, hasMore, modified, nextCursor, removed, requestId) { 
        obj['added'] = added;
        obj['has_more'] = hasMore;
        obj['modified'] = modified;
        obj['next_cursor'] = nextCursor;
        obj['removed'] = removed;
        obj['request_id'] = requestId;
    }

    /**
     * Constructs a <code>TransactionsSyncResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionsSyncResponse} obj Optional instance to populate.
     * @return {module:model/TransactionsSyncResponse} The populated <code>TransactionsSyncResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionsSyncResponse();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('added')) {
                obj['added'] = ApiClient.convertToType(data['added'], [Transaction]);
            }
            if (data.hasOwnProperty('has_more')) {
                obj['has_more'] = ApiClient.convertToType(data['has_more'], 'Boolean');
            }
            if (data.hasOwnProperty('modified')) {
                obj['modified'] = ApiClient.convertToType(data['modified'], [Transaction]);
            }
            if (data.hasOwnProperty('next_cursor')) {
                obj['next_cursor'] = ApiClient.convertToType(data['next_cursor'], 'String');
            }
            if (data.hasOwnProperty('removed')) {
                obj['removed'] = ApiClient.convertToType(data['removed'], [RemovedTransaction]);
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionsSyncResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionsSyncResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransactionsSyncResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['added']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['added'])) {
                throw new Error("Expected the field `added` to be an array in the JSON data but got " + data['added']);
            }
            // validate the optional field `added` (array)
            for (const item of data['added']) {
                Transaction.validateJSON(item);
            };
        }
        if (data['modified']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['modified'])) {
                throw new Error("Expected the field `modified` to be an array in the JSON data but got " + data['modified']);
            }
            // validate the optional field `modified` (array)
            for (const item of data['modified']) {
                Transaction.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['next_cursor'] && !(typeof data['next_cursor'] === 'string' || data['next_cursor'] instanceof String)) {
            throw new Error("Expected the field `next_cursor` to be a primitive type in the JSON string but got " + data['next_cursor']);
        }
        if (data['removed']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['removed'])) {
                throw new Error("Expected the field `removed` to be an array in the JSON data but got " + data['removed']);
            }
            // validate the optional field `removed` (array)
            for (const item of data['removed']) {
                RemovedTransaction.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }

        return true;
    }


}

TransactionsSyncResponse.RequiredProperties = ["added", "has_more", "modified", "next_cursor", "removed", "request_id"];

/**
 * Transactions that have been added to the Item since `cursor` ordered by ascending last modified time.
 * @member {Array.<module:model/Transaction>} added
 */
TransactionsSyncResponse.prototype['added'] = undefined;

/**
 * Represents if more than requested count of transaction updates exist. If true, the additional updates can be fetched by making an additional request with `cursor` set to `next_cursor`. If `has_more` is true, it’s important to pull all available pages, to make it less likely for underlying data changes to conflict with pagination.
 * @member {Boolean} has_more
 */
TransactionsSyncResponse.prototype['has_more'] = undefined;

/**
 * Transactions that have been modified on the Item since `cursor` ordered by ascending last modified time.
 * @member {Array.<module:model/Transaction>} modified
 */
TransactionsSyncResponse.prototype['modified'] = undefined;

/**
 * Cursor used for fetching any future updates after the latest update provided in this response. The cursor obtained after all pages have been pulled (indicated by `has_more` being `false`) will be valid for at least 1 year. This cursor should be persisted for later calls. If transactions are not yet available, this will be an empty string.
 * @member {String} next_cursor
 */
TransactionsSyncResponse.prototype['next_cursor'] = undefined;

/**
 * Transactions that have been removed from the Item since `cursor` ordered by ascending last modified time.
 * @member {Array.<module:model/RemovedTransaction>} removed
 */
TransactionsSyncResponse.prototype['removed'] = undefined;

/**
 * A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
 * @member {String} request_id
 */
TransactionsSyncResponse.prototype['request_id'] = undefined;






export default TransactionsSyncResponse;

