/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmployerVerification from './EmployerVerification';
import EmploymentVerificationStatus from './EmploymentVerificationStatus';
import PlatformIds from './PlatformIds';

/**
 * The EmploymentVerification model module.
 * @module model/EmploymentVerification
 * @version 2020-09-14_1.345.1
 */
class EmploymentVerification {
    /**
     * Constructs a new <code>EmploymentVerification</code>.
     * An object containing proof of employment data for an individual
     * @alias module:model/EmploymentVerification
     * @extends Object
     */
    constructor() { 
        
        EmploymentVerification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmploymentVerification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmploymentVerification} obj Optional instance to populate.
     * @return {module:model/EmploymentVerification} The populated <code>EmploymentVerification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmploymentVerification();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('employer')) {
                obj['employer'] = EmployerVerification.constructFromObject(data['employer']);
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'Date');
            }
            if (data.hasOwnProperty('platform_ids')) {
                obj['platform_ids'] = PlatformIds.constructFromObject(data['platform_ids']);
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = EmploymentVerificationStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmploymentVerification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmploymentVerification</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {module:model/EmployerVerification} employer
 */
EmploymentVerification.prototype['employer'] = undefined;

/**
 * End of employment, if applicable. Provided in ISO 8601 format (YYY-MM-DD).
 * @member {Date} end_date
 */
EmploymentVerification.prototype['end_date'] = undefined;

/**
 * @member {module:model/PlatformIds} platform_ids
 */
EmploymentVerification.prototype['platform_ids'] = undefined;

/**
 * Start of employment in ISO 8601 format (YYYY-MM-DD).
 * @member {Date} start_date
 */
EmploymentVerification.prototype['start_date'] = undefined;

/**
 * @member {module:model/EmploymentVerificationStatus} status
 */
EmploymentVerification.prototype['status'] = undefined;

/**
 * Current title of employee.
 * @member {String} title
 */
EmploymentVerification.prototype['title'] = undefined;






export default EmploymentVerification;

