/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentInitiationPaymentStatus from './PaymentInitiationPaymentStatus';
import PlaidError from './PlaidError';
import WebhookEnvironmentValues from './WebhookEnvironmentValues';

/**
 * The PaymentStatusUpdateWebhook model module.
 * @module model/PaymentStatusUpdateWebhook
 * @version 2020-09-14_1.345.1
 */
class PaymentStatusUpdateWebhook {
    /**
     * Constructs a new <code>PaymentStatusUpdateWebhook</code>.
     * Fired when the status of a payment has changed.
     * @alias module:model/PaymentStatusUpdateWebhook
     * @extends Object
     * @param adjustedStartDate {Date} The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). If the start date did not require adjustment, or if the payment is not a standing order, this field will be `null`.
     * @param environment {module:model/WebhookEnvironmentValues} 
     * @param newPaymentStatus {module:model/PaymentInitiationPaymentStatus} 
     * @param oldPaymentStatus {module:model/PaymentInitiationPaymentStatus} 
     * @param originalReference {String} The original value of the reference when creating the payment.
     * @param originalStartDate {Date} The original value of the `start_date` provided during the creation of a standing order. If the payment is not a standing order, this field will be `null`.
     * @param paymentId {String} The `payment_id` for the payment being updated
     * @param timestamp {Date} The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2017-09-14T14:42:19.350Z\"`
     * @param webhookCode {String} `PAYMENT_STATUS_UPDATE`
     * @param webhookType {String} `PAYMENT_INITIATION`
     */
    constructor(adjustedStartDate, environment, newPaymentStatus, oldPaymentStatus, originalReference, originalStartDate, paymentId, timestamp, webhookCode, webhookType) { 
        
        PaymentStatusUpdateWebhook.initialize(this, adjustedStartDate, environment, newPaymentStatus, oldPaymentStatus, originalReference, originalStartDate, paymentId, timestamp, webhookCode, webhookType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, adjustedStartDate, environment, newPaymentStatus, oldPaymentStatus, originalReference, originalStartDate, paymentId, timestamp, webhookCode, webhookType) { 
        obj['adjusted_start_date'] = adjustedStartDate;
        obj['environment'] = environment;
        obj['new_payment_status'] = newPaymentStatus;
        obj['old_payment_status'] = oldPaymentStatus;
        obj['original_reference'] = originalReference;
        obj['original_start_date'] = originalStartDate;
        obj['payment_id'] = paymentId;
        obj['timestamp'] = timestamp;
        obj['webhook_code'] = webhookCode;
        obj['webhook_type'] = webhookType;
    }

    /**
     * Constructs a <code>PaymentStatusUpdateWebhook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentStatusUpdateWebhook} obj Optional instance to populate.
     * @return {module:model/PaymentStatusUpdateWebhook} The populated <code>PaymentStatusUpdateWebhook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentStatusUpdateWebhook();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('adjusted_reference')) {
                obj['adjusted_reference'] = ApiClient.convertToType(data['adjusted_reference'], 'String');
            }
            if (data.hasOwnProperty('adjusted_start_date')) {
                obj['adjusted_start_date'] = ApiClient.convertToType(data['adjusted_start_date'], 'Date');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = WebhookEnvironmentValues.constructFromObject(data['environment']);
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = PlaidError.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('new_payment_status')) {
                obj['new_payment_status'] = PaymentInitiationPaymentStatus.constructFromObject(data['new_payment_status']);
            }
            if (data.hasOwnProperty('old_payment_status')) {
                obj['old_payment_status'] = PaymentInitiationPaymentStatus.constructFromObject(data['old_payment_status']);
            }
            if (data.hasOwnProperty('original_reference')) {
                obj['original_reference'] = ApiClient.convertToType(data['original_reference'], 'String');
            }
            if (data.hasOwnProperty('original_start_date')) {
                obj['original_start_date'] = ApiClient.convertToType(data['original_start_date'], 'Date');
            }
            if (data.hasOwnProperty('payment_id')) {
                obj['payment_id'] = ApiClient.convertToType(data['payment_id'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Date');
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('webhook_code')) {
                obj['webhook_code'] = ApiClient.convertToType(data['webhook_code'], 'String');
            }
            if (data.hasOwnProperty('webhook_type')) {
                obj['webhook_type'] = ApiClient.convertToType(data['webhook_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentStatusUpdateWebhook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentStatusUpdateWebhook</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaymentStatusUpdateWebhook.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['adjusted_reference'] && !(typeof data['adjusted_reference'] === 'string' || data['adjusted_reference'] instanceof String)) {
            throw new Error("Expected the field `adjusted_reference` to be a primitive type in the JSON string but got " + data['adjusted_reference']);
        }
        // ensure the json data is a string
        if (data['original_reference'] && !(typeof data['original_reference'] === 'string' || data['original_reference'] instanceof String)) {
            throw new Error("Expected the field `original_reference` to be a primitive type in the JSON string but got " + data['original_reference']);
        }
        // ensure the json data is a string
        if (data['payment_id'] && !(typeof data['payment_id'] === 'string' || data['payment_id'] instanceof String)) {
            throw new Error("Expected the field `payment_id` to be a primitive type in the JSON string but got " + data['payment_id']);
        }
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }
        // ensure the json data is a string
        if (data['webhook_code'] && !(typeof data['webhook_code'] === 'string' || data['webhook_code'] instanceof String)) {
            throw new Error("Expected the field `webhook_code` to be a primitive type in the JSON string but got " + data['webhook_code']);
        }
        // ensure the json data is a string
        if (data['webhook_type'] && !(typeof data['webhook_type'] === 'string' || data['webhook_type'] instanceof String)) {
            throw new Error("Expected the field `webhook_type` to be a primitive type in the JSON string but got " + data['webhook_type']);
        }

        return true;
    }


}

PaymentStatusUpdateWebhook.RequiredProperties = ["adjusted_start_date", "environment", "new_payment_status", "old_payment_status", "original_reference", "original_start_date", "payment_id", "timestamp", "webhook_code", "webhook_type"];

/**
 * The value of the reference sent to the bank after adjustment to pass bank validation rules.
 * @member {String} adjusted_reference
 */
PaymentStatusUpdateWebhook.prototype['adjusted_reference'] = undefined;

/**
 * The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). If the start date did not require adjustment, or if the payment is not a standing order, this field will be `null`.
 * @member {Date} adjusted_start_date
 */
PaymentStatusUpdateWebhook.prototype['adjusted_start_date'] = undefined;

/**
 * @member {module:model/WebhookEnvironmentValues} environment
 */
PaymentStatusUpdateWebhook.prototype['environment'] = undefined;

/**
 * @member {module:model/PlaidError} error
 */
PaymentStatusUpdateWebhook.prototype['error'] = undefined;

/**
 * @member {module:model/PaymentInitiationPaymentStatus} new_payment_status
 */
PaymentStatusUpdateWebhook.prototype['new_payment_status'] = undefined;

/**
 * @member {module:model/PaymentInitiationPaymentStatus} old_payment_status
 */
PaymentStatusUpdateWebhook.prototype['old_payment_status'] = undefined;

/**
 * The original value of the reference when creating the payment.
 * @member {String} original_reference
 */
PaymentStatusUpdateWebhook.prototype['original_reference'] = undefined;

/**
 * The original value of the `start_date` provided during the creation of a standing order. If the payment is not a standing order, this field will be `null`.
 * @member {Date} original_start_date
 */
PaymentStatusUpdateWebhook.prototype['original_start_date'] = undefined;

/**
 * The `payment_id` for the payment being updated
 * @member {String} payment_id
 */
PaymentStatusUpdateWebhook.prototype['payment_id'] = undefined;

/**
 * The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2017-09-14T14:42:19.350Z\"`
 * @member {Date} timestamp
 */
PaymentStatusUpdateWebhook.prototype['timestamp'] = undefined;

/**
 * The transaction ID that this payment is associated with, if any. This is present only when a payment was initiated using virtual accounts.
 * @member {String} transaction_id
 */
PaymentStatusUpdateWebhook.prototype['transaction_id'] = undefined;

/**
 * `PAYMENT_STATUS_UPDATE`
 * @member {String} webhook_code
 */
PaymentStatusUpdateWebhook.prototype['webhook_code'] = undefined;

/**
 * `PAYMENT_INITIATION`
 * @member {String} webhook_type
 */
PaymentStatusUpdateWebhook.prototype['webhook_type'] = undefined;






export default PaymentStatusUpdateWebhook;

