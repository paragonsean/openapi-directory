/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Category model module.
 * @module model/Category
 * @version 2020-09-14_1.345.1
 */
class Category {
    /**
     * Constructs a new <code>Category</code>.
     * Information describing a transaction category
     * @alias module:model/Category
     * @extends Object
     * @param categoryId {String} An identifying number for the category. `category_id` is a Plaid-specific identifier and does not necessarily correspond to merchant category codes.
     * @param group {String} `place` for physical transactions or `special` for other transactions such as bank charges.
     * @param hierarchy {Array.<String>} A hierarchical array of the categories to which this `category_id` belongs.
     */
    constructor(categoryId, group, hierarchy) { 
        
        Category.initialize(this, categoryId, group, hierarchy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, categoryId, group, hierarchy) { 
        obj['category_id'] = categoryId;
        obj['group'] = group;
        obj['hierarchy'] = hierarchy;
    }

    /**
     * Constructs a <code>Category</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Category} obj Optional instance to populate.
     * @return {module:model/Category} The populated <code>Category</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Category();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('category_id')) {
                obj['category_id'] = ApiClient.convertToType(data['category_id'], 'String');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('hierarchy')) {
                obj['hierarchy'] = ApiClient.convertToType(data['hierarchy'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Category</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Category</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Category.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['category_id'] && !(typeof data['category_id'] === 'string' || data['category_id'] instanceof String)) {
            throw new Error("Expected the field `category_id` to be a primitive type in the JSON string but got " + data['category_id']);
        }
        // ensure the json data is a string
        if (data['group'] && !(typeof data['group'] === 'string' || data['group'] instanceof String)) {
            throw new Error("Expected the field `group` to be a primitive type in the JSON string but got " + data['group']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['hierarchy'])) {
            throw new Error("Expected the field `hierarchy` to be an array in the JSON data but got " + data['hierarchy']);
        }

        return true;
    }


}

Category.RequiredProperties = ["category_id", "group", "hierarchy"];

/**
 * An identifying number for the category. `category_id` is a Plaid-specific identifier and does not necessarily correspond to merchant category codes.
 * @member {String} category_id
 */
Category.prototype['category_id'] = undefined;

/**
 * `place` for physical transactions or `special` for other transactions such as bank charges.
 * @member {String} group
 */
Category.prototype['group'] = undefined;

/**
 * A hierarchical array of the categories to which this `category_id` belongs.
 * @member {Array.<String>} hierarchy
 */
Category.prototype['hierarchy'] = undefined;






export default Category;

