/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreditCardLiability from './CreditCardLiability';
import MortgageLiability from './MortgageLiability';
import StudentLoan from './StudentLoan';

/**
 * The LiabilitiesObject model module.
 * @module model/LiabilitiesObject
 * @version 2020-09-14_1.345.1
 */
class LiabilitiesObject {
    /**
     * Constructs a new <code>LiabilitiesObject</code>.
     * An object containing liability accounts
     * @alias module:model/LiabilitiesObject
     * @extends Object
     * @param credit {Array.<module:model/CreditCardLiability>} The credit accounts returned.
     * @param mortgage {Array.<module:model/MortgageLiability>} The mortgage accounts returned.
     * @param student {Array.<module:model/StudentLoan>} The student loan accounts returned.
     */
    constructor(credit, mortgage, student) { 
        
        LiabilitiesObject.initialize(this, credit, mortgage, student);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, credit, mortgage, student) { 
        obj['credit'] = credit;
        obj['mortgage'] = mortgage;
        obj['student'] = student;
    }

    /**
     * Constructs a <code>LiabilitiesObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LiabilitiesObject} obj Optional instance to populate.
     * @return {module:model/LiabilitiesObject} The populated <code>LiabilitiesObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LiabilitiesObject();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('credit')) {
                obj['credit'] = ApiClient.convertToType(data['credit'], [CreditCardLiability]);
            }
            if (data.hasOwnProperty('mortgage')) {
                obj['mortgage'] = ApiClient.convertToType(data['mortgage'], [MortgageLiability]);
            }
            if (data.hasOwnProperty('student')) {
                obj['student'] = ApiClient.convertToType(data['student'], [StudentLoan]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LiabilitiesObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LiabilitiesObject</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LiabilitiesObject.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['credit'])) {
            throw new Error("Expected the field `credit` to be an array in the JSON data but got " + data['credit']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['mortgage'])) {
            throw new Error("Expected the field `mortgage` to be an array in the JSON data but got " + data['mortgage']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['student'])) {
            throw new Error("Expected the field `student` to be an array in the JSON data but got " + data['student']);
        }

        return true;
    }


}

LiabilitiesObject.RequiredProperties = ["credit", "mortgage", "student"];

/**
 * The credit accounts returned.
 * @member {Array.<module:model/CreditCardLiability>} credit
 */
LiabilitiesObject.prototype['credit'] = undefined;

/**
 * The mortgage accounts returned.
 * @member {Array.<module:model/MortgageLiability>} mortgage
 */
LiabilitiesObject.prototype['mortgage'] = undefined;

/**
 * The student loan accounts returned.
 * @member {Array.<module:model/StudentLoan>} student
 */
LiabilitiesObject.prototype['student'] = undefined;






export default LiabilitiesObject;

