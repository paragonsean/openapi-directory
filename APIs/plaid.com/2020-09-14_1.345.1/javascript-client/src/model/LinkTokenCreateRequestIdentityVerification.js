/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LinkTokenCreateRequestIdentityVerification model module.
 * @module model/LinkTokenCreateRequestIdentityVerification
 * @version 2020-09-14_1.345.1
 */
class LinkTokenCreateRequestIdentityVerification {
    /**
     * Constructs a new <code>LinkTokenCreateRequestIdentityVerification</code>.
     * Specifies option for initializing Link for use with the Identity Verification product.
     * @alias module:model/LinkTokenCreateRequestIdentityVerification
     * @param templateId {String} ID of the associated Identity Verification template.
     */
    constructor(templateId) { 
        
        LinkTokenCreateRequestIdentityVerification.initialize(this, templateId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, templateId) { 
        obj['gave_consent'] = false;
        obj['template_id'] = templateId;
    }

    /**
     * Constructs a <code>LinkTokenCreateRequestIdentityVerification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LinkTokenCreateRequestIdentityVerification} obj Optional instance to populate.
     * @return {module:model/LinkTokenCreateRequestIdentityVerification} The populated <code>LinkTokenCreateRequestIdentityVerification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LinkTokenCreateRequestIdentityVerification();

            if (data.hasOwnProperty('consent')) {
                obj['consent'] = ApiClient.convertToType(data['consent'], 'Boolean');
            }
            if (data.hasOwnProperty('gave_consent')) {
                obj['gave_consent'] = ApiClient.convertToType(data['gave_consent'], 'Boolean');
            }
            if (data.hasOwnProperty('template_id')) {
                obj['template_id'] = ApiClient.convertToType(data['template_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LinkTokenCreateRequestIdentityVerification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LinkTokenCreateRequestIdentityVerification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LinkTokenCreateRequestIdentityVerification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['template_id'] && !(typeof data['template_id'] === 'string' || data['template_id'] instanceof String)) {
            throw new Error("Expected the field `template_id` to be a primitive type in the JSON string but got " + data['template_id']);
        }

        return true;
    }


}

LinkTokenCreateRequestIdentityVerification.RequiredProperties = ["template_id"];

/**
 * A flag specifying whether the end user has already agreed to a privacy policy specifying that their data will be shared with Plaid for verification purposes.  If `gave_consent` is set to `true`, the `accept_tos` step will be marked as `skipped` and the end user's session will start at the next step requirement.
 * @member {Boolean} consent
 */
LinkTokenCreateRequestIdentityVerification.prototype['consent'] = undefined;

/**
 * A flag specifying whether the end user has already agreed to a privacy policy specifying that their data will be shared with Plaid for verification purposes.  If `gave_consent` is set to `true`, the `accept_tos` step will be marked as `skipped` and the end user's session will start at the next step requirement.
 * @member {Boolean} gave_consent
 * @default false
 */
LinkTokenCreateRequestIdentityVerification.prototype['gave_consent'] = false;

/**
 * ID of the associated Identity Verification template.
 * @member {String} template_id
 */
LinkTokenCreateRequestIdentityVerification.prototype['template_id'] = undefined;






export default LinkTokenCreateRequestIdentityVerification;

