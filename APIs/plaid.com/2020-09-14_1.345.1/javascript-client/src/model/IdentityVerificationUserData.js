/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IdentityVerificationResponseUserName from './IdentityVerificationResponseUserName';
import IdentityVerificationUserAddress from './IdentityVerificationUserAddress';
import UserIDNumber from './UserIDNumber';

/**
 * The IdentityVerificationUserData model module.
 * @module model/IdentityVerificationUserData
 * @version 2020-09-14_1.345.1
 */
class IdentityVerificationUserData {
    /**
     * Constructs a new <code>IdentityVerificationUserData</code>.
     * The identity data that was either collected from the user or provided via API in order to perform an identity verification.
     * @alias module:model/IdentityVerificationUserData
     * @extends Object
     * @param address {module:model/IdentityVerificationUserAddress} 
     * @param dateOfBirth {Date} A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
     * @param emailAddress {String} A valid email address.
     * @param idNumber {module:model/UserIDNumber} 
     * @param ipAddress {String} An IPv4 or IPV6 address.
     * @param name {module:model/IdentityVerificationResponseUserName} 
     */
    constructor(address, dateOfBirth, emailAddress, idNumber, ipAddress, name) { 
        
        IdentityVerificationUserData.initialize(this, address, dateOfBirth, emailAddress, idNumber, ipAddress, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address, dateOfBirth, emailAddress, idNumber, ipAddress, name) { 
        obj['address'] = address;
        obj['date_of_birth'] = dateOfBirth;
        obj['email_address'] = emailAddress;
        obj['id_number'] = idNumber;
        obj['ip_address'] = ipAddress;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>IdentityVerificationUserData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IdentityVerificationUserData} obj Optional instance to populate.
     * @return {module:model/IdentityVerificationUserData} The populated <code>IdentityVerificationUserData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IdentityVerificationUserData();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('address')) {
                obj['address'] = IdentityVerificationUserAddress.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('date_of_birth')) {
                obj['date_of_birth'] = ApiClient.convertToType(data['date_of_birth'], 'Date');
            }
            if (data.hasOwnProperty('email_address')) {
                obj['email_address'] = ApiClient.convertToType(data['email_address'], 'String');
            }
            if (data.hasOwnProperty('id_number')) {
                obj['id_number'] = UserIDNumber.constructFromObject(data['id_number']);
            }
            if (data.hasOwnProperty('ip_address')) {
                obj['ip_address'] = ApiClient.convertToType(data['ip_address'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = IdentityVerificationResponseUserName.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IdentityVerificationUserData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentityVerificationUserData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IdentityVerificationUserData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['email_address'] && !(typeof data['email_address'] === 'string' || data['email_address'] instanceof String)) {
            throw new Error("Expected the field `email_address` to be a primitive type in the JSON string but got " + data['email_address']);
        }
        // ensure the json data is a string
        if (data['ip_address'] && !(typeof data['ip_address'] === 'string' || data['ip_address'] instanceof String)) {
            throw new Error("Expected the field `ip_address` to be a primitive type in the JSON string but got " + data['ip_address']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }

        return true;
    }


}

IdentityVerificationUserData.RequiredProperties = ["address", "date_of_birth", "email_address", "id_number", "ip_address", "name"];

/**
 * @member {module:model/IdentityVerificationUserAddress} address
 */
IdentityVerificationUserData.prototype['address'] = undefined;

/**
 * A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
 * @member {Date} date_of_birth
 */
IdentityVerificationUserData.prototype['date_of_birth'] = undefined;

/**
 * A valid email address.
 * @member {String} email_address
 */
IdentityVerificationUserData.prototype['email_address'] = undefined;

/**
 * @member {module:model/UserIDNumber} id_number
 */
IdentityVerificationUserData.prototype['id_number'] = undefined;

/**
 * An IPv4 or IPV6 address.
 * @member {String} ip_address
 */
IdentityVerificationUserData.prototype['ip_address'] = undefined;

/**
 * @member {module:model/IdentityVerificationResponseUserName} name
 */
IdentityVerificationUserData.prototype['name'] = undefined;

/**
 * A phone number in E.164 format.
 * @member {String} phone_number
 */
IdentityVerificationUserData.prototype['phone_number'] = undefined;






export default IdentityVerificationUserData;

