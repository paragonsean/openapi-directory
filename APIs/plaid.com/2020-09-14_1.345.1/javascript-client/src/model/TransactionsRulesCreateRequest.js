/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransactionsRuleDetails from './TransactionsRuleDetails';

/**
 * The TransactionsRulesCreateRequest model module.
 * @module model/TransactionsRulesCreateRequest
 * @version 2020-09-14_1.345.1
 */
class TransactionsRulesCreateRequest {
    /**
     * Constructs a new <code>TransactionsRulesCreateRequest</code>.
     * TransactionsRulesCreateRequest defines the request schema for &#x60;beta/transactions/rules/v1/create&#x60;
     * @alias module:model/TransactionsRulesCreateRequest
     * @param accessToken {String} The access token associated with the Item data is being requested for.
     * @param personalFinanceCategory {String} Personal finance detailed category.  See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories. 
     * @param ruleDetails {module:model/TransactionsRuleDetails} 
     */
    constructor(accessToken, personalFinanceCategory, ruleDetails) { 
        
        TransactionsRulesCreateRequest.initialize(this, accessToken, personalFinanceCategory, ruleDetails);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessToken, personalFinanceCategory, ruleDetails) { 
        obj['access_token'] = accessToken;
        obj['personal_finance_category'] = personalFinanceCategory;
        obj['rule_details'] = ruleDetails;
    }

    /**
     * Constructs a <code>TransactionsRulesCreateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionsRulesCreateRequest} obj Optional instance to populate.
     * @return {module:model/TransactionsRulesCreateRequest} The populated <code>TransactionsRulesCreateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionsRulesCreateRequest();

            if (data.hasOwnProperty('access_token')) {
                obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('personal_finance_category')) {
                obj['personal_finance_category'] = ApiClient.convertToType(data['personal_finance_category'], 'String');
            }
            if (data.hasOwnProperty('rule_details')) {
                obj['rule_details'] = TransactionsRuleDetails.constructFromObject(data['rule_details']);
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionsRulesCreateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionsRulesCreateRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransactionsRulesCreateRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['access_token'] && !(typeof data['access_token'] === 'string' || data['access_token'] instanceof String)) {
            throw new Error("Expected the field `access_token` to be a primitive type in the JSON string but got " + data['access_token']);
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['personal_finance_category'] && !(typeof data['personal_finance_category'] === 'string' || data['personal_finance_category'] instanceof String)) {
            throw new Error("Expected the field `personal_finance_category` to be a primitive type in the JSON string but got " + data['personal_finance_category']);
        }
        // validate the optional field `rule_details`
        if (data['rule_details']) { // data not null
          TransactionsRuleDetails.validateJSON(data['rule_details']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }

        return true;
    }


}

TransactionsRulesCreateRequest.RequiredProperties = ["access_token", "personal_finance_category", "rule_details"];

/**
 * The access token associated with the Item data is being requested for.
 * @member {String} access_token
 */
TransactionsRulesCreateRequest.prototype['access_token'] = undefined;

/**
 * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
 * @member {String} client_id
 */
TransactionsRulesCreateRequest.prototype['client_id'] = undefined;

/**
 * Personal finance detailed category.  See the [`taxonomy csv file`](https://plaid.com/documents/transactions-personal-finance-category-taxonomy.csv) for a full list of personal finance categories. 
 * @member {String} personal_finance_category
 */
TransactionsRulesCreateRequest.prototype['personal_finance_category'] = undefined;

/**
 * @member {module:model/TransactionsRuleDetails} rule_details
 */
TransactionsRulesCreateRequest.prototype['rule_details'] = undefined;

/**
 * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
 * @member {String} secret
 */
TransactionsRulesCreateRequest.prototype['secret'] = undefined;






export default TransactionsRulesCreateRequest;

