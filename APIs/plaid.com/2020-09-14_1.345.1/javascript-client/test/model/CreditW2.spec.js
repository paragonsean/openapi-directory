/**
 * The Plaid API
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.345.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ThePlaidApi);
  }
}(this, function(expect, ThePlaidApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ThePlaidApi.CreditW2();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreditW2', function() {
    it('should create an instance of CreditW2', function() {
      // uncomment below and update the code to test CreditW2
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be.a(ThePlaidApi.CreditW2);
    });

    it('should have the property allocatedTips (base name: "allocated_tips")', function() {
      // uncomment below and update the code to test the property allocatedTips
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property box12 (base name: "box_12")', function() {
      // uncomment below and update the code to test the property box12
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property box9 (base name: "box_9")', function() {
      // uncomment below and update the code to test the property box9
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property dependentCareBenefits (base name: "dependent_care_benefits")', function() {
      // uncomment below and update the code to test the property dependentCareBenefits
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property documentId (base name: "document_id")', function() {
      // uncomment below and update the code to test the property documentId
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property documentMetadata (base name: "document_metadata")', function() {
      // uncomment below and update the code to test the property documentMetadata
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property employee (base name: "employee")', function() {
      // uncomment below and update the code to test the property employee
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property employer (base name: "employer")', function() {
      // uncomment below and update the code to test the property employer
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property employerIdNumber (base name: "employer_id_number")', function() {
      // uncomment below and update the code to test the property employerIdNumber
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property federalIncomeTaxWithheld (base name: "federal_income_tax_withheld")', function() {
      // uncomment below and update the code to test the property federalIncomeTaxWithheld
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property medicareTaxWithheld (base name: "medicare_tax_withheld")', function() {
      // uncomment below and update the code to test the property medicareTaxWithheld
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property medicareWagesAndTips (base name: "medicare_wages_and_tips")', function() {
      // uncomment below and update the code to test the property medicareWagesAndTips
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property nonqualifiedPlans (base name: "nonqualified_plans")', function() {
      // uncomment below and update the code to test the property nonqualifiedPlans
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property other (base name: "other")', function() {
      // uncomment below and update the code to test the property other
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property retirementPlan (base name: "retirement_plan")', function() {
      // uncomment below and update the code to test the property retirementPlan
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property socialSecurityTaxWithheld (base name: "social_security_tax_withheld")', function() {
      // uncomment below and update the code to test the property socialSecurityTaxWithheld
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property socialSecurityTips (base name: "social_security_tips")', function() {
      // uncomment below and update the code to test the property socialSecurityTips
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property socialSecurityWages (base name: "social_security_wages")', function() {
      // uncomment below and update the code to test the property socialSecurityWages
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property stateAndLocalWages (base name: "state_and_local_wages")', function() {
      // uncomment below and update the code to test the property stateAndLocalWages
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property statutoryEmployee (base name: "statutory_employee")', function() {
      // uncomment below and update the code to test the property statutoryEmployee
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property taxYear (base name: "tax_year")', function() {
      // uncomment below and update the code to test the property taxYear
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property thirdPartySickPay (base name: "third_party_sick_pay")', function() {
      // uncomment below and update the code to test the property thirdPartySickPay
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

    it('should have the property wagesTipsOtherComp (base name: "wages_tips_other_comp")', function() {
      // uncomment below and update the code to test the property wagesTipsOtherComp
      //var instance = new ThePlaidApi.CreditW2();
      //expect(instance).to.be();
    });

  });

}));
