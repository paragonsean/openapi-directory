# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.addon import Addon
from openapi_server.models.servicepack import Servicepack
from openapi_server import util


class AccountDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, addons: List[Addon]=None, id: int=None, identifier: str=None, servicepack: Servicepack=None):
        """AccountDetail - a model defined in OpenAPI

        :param addons: The addons of this AccountDetail.
        :param id: The id of this AccountDetail.
        :param identifier: The identifier of this AccountDetail.
        :param servicepack: The servicepack of this AccountDetail.
        """
        self.openapi_types = {
            'addons': List[Addon],
            'id': int,
            'identifier': str,
            'servicepack': Servicepack
        }

        self.attribute_map = {
            'addons': 'addons',
            'id': 'id',
            'identifier': 'identifier',
            'servicepack': 'servicepack'
        }

        self._addons = addons
        self._id = id
        self._identifier = identifier
        self._servicepack = servicepack

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountDetail of this AccountDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def addons(self):
        """Gets the addons of this AccountDetail.

        A list of addons applied to the account.

        :return: The addons of this AccountDetail.
        :rtype: List[Addon]
        """
        return self._addons

    @addons.setter
    def addons(self, addons):
        """Sets the addons of this AccountDetail.

        A list of addons applied to the account.

        :param addons: The addons of this AccountDetail.
        :type addons: List[Addon]
        """

        self._addons = addons

    @property
    def id(self):
        """Gets the id of this AccountDetail.

        The id of the account

        :return: The id of this AccountDetail.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AccountDetail.

        The id of the account

        :param id: The id of this AccountDetail.
        :type id: int
        """

        self._id = id

    @property
    def identifier(self):
        """Gets the identifier of this AccountDetail.

        Identifier for the account

        :return: The identifier of this AccountDetail.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this AccountDetail.

        Identifier for the account

        :param identifier: The identifier of this AccountDetail.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def servicepack(self):
        """Gets the servicepack of this AccountDetail.


        :return: The servicepack of this AccountDetail.
        :rtype: Servicepack
        """
        return self._servicepack

    @servicepack.setter
    def servicepack(self, servicepack):
        """Sets the servicepack of this AccountDetail.


        :param servicepack: The servicepack of this AccountDetail.
        :type servicepack: Servicepack
        """

        self._servicepack = servicepack
