# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.linux_ip_type import LinuxIpType
from openapi_server.models.linux_site import LinuxSite
from openapi_server import util


class LinuxHostingDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actual_size: int=None, domain_name: str=None, ftp_enabled: bool=None, ftp_username: str=None, ip: str=None, ip_type: LinuxIpType=None, max_size: int=None, max_webspace_size: int=None, mysql_database_names: List[str]=None, php_version: str=None, servicepack_id: int=None, sites: List[LinuxSite]=None, ssh_host: str=None, ssh_username: str=None, webspace_usage: int=None):
        """LinuxHostingDetail - a model defined in OpenAPI

        :param actual_size: The actual_size of this LinuxHostingDetail.
        :param domain_name: The domain_name of this LinuxHostingDetail.
        :param ftp_enabled: The ftp_enabled of this LinuxHostingDetail.
        :param ftp_username: The ftp_username of this LinuxHostingDetail.
        :param ip: The ip of this LinuxHostingDetail.
        :param ip_type: The ip_type of this LinuxHostingDetail.
        :param max_size: The max_size of this LinuxHostingDetail.
        :param max_webspace_size: The max_webspace_size of this LinuxHostingDetail.
        :param mysql_database_names: The mysql_database_names of this LinuxHostingDetail.
        :param php_version: The php_version of this LinuxHostingDetail.
        :param servicepack_id: The servicepack_id of this LinuxHostingDetail.
        :param sites: The sites of this LinuxHostingDetail.
        :param ssh_host: The ssh_host of this LinuxHostingDetail.
        :param ssh_username: The ssh_username of this LinuxHostingDetail.
        :param webspace_usage: The webspace_usage of this LinuxHostingDetail.
        """
        self.openapi_types = {
            'actual_size': int,
            'domain_name': str,
            'ftp_enabled': bool,
            'ftp_username': str,
            'ip': str,
            'ip_type': LinuxIpType,
            'max_size': int,
            'max_webspace_size': int,
            'mysql_database_names': List[str],
            'php_version': str,
            'servicepack_id': int,
            'sites': List[LinuxSite],
            'ssh_host': str,
            'ssh_username': str,
            'webspace_usage': int
        }

        self.attribute_map = {
            'actual_size': 'actual_size',
            'domain_name': 'domain_name',
            'ftp_enabled': 'ftp_enabled',
            'ftp_username': 'ftp_username',
            'ip': 'ip',
            'ip_type': 'ip_type',
            'max_size': 'max_size',
            'max_webspace_size': 'max_webspace_size',
            'mysql_database_names': 'mysql_database_names',
            'php_version': 'php_version',
            'servicepack_id': 'servicepack_id',
            'sites': 'sites',
            'ssh_host': 'ssh_host',
            'ssh_username': 'ssh_username',
            'webspace_usage': 'webspace_usage'
        }

        self._actual_size = actual_size
        self._domain_name = domain_name
        self._ftp_enabled = ftp_enabled
        self._ftp_username = ftp_username
        self._ip = ip
        self._ip_type = ip_type
        self._max_size = max_size
        self._max_webspace_size = max_webspace_size
        self._mysql_database_names = mysql_database_names
        self._php_version = php_version
        self._servicepack_id = servicepack_id
        self._sites = sites
        self._ssh_host = ssh_host
        self._ssh_username = ssh_username
        self._webspace_usage = webspace_usage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinuxHostingDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinuxHostingDetail of this LinuxHostingDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actual_size(self):
        """Gets the actual_size of this LinuxHostingDetail.

        Used webspace size in MB

        :return: The actual_size of this LinuxHostingDetail.
        :rtype: int
        """
        return self._actual_size

    @actual_size.setter
    def actual_size(self, actual_size):
        """Sets the actual_size of this LinuxHostingDetail.

        Used webspace size in MB

        :param actual_size: The actual_size of this LinuxHostingDetail.
        :type actual_size: int
        """

        self._actual_size = actual_size

    @property
    def domain_name(self):
        """Gets the domain_name of this LinuxHostingDetail.

        Domain name for the Linux hosting account.

        :return: The domain_name of this LinuxHostingDetail.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this LinuxHostingDetail.

        Domain name for the Linux hosting account.

        :param domain_name: The domain_name of this LinuxHostingDetail.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def ftp_enabled(self):
        """Gets the ftp_enabled of this LinuxHostingDetail.

        Indicates whether ftp is enabled for the hosting account.

        :return: The ftp_enabled of this LinuxHostingDetail.
        :rtype: bool
        """
        return self._ftp_enabled

    @ftp_enabled.setter
    def ftp_enabled(self, ftp_enabled):
        """Sets the ftp_enabled of this LinuxHostingDetail.

        Indicates whether ftp is enabled for the hosting account.

        :param ftp_enabled: The ftp_enabled of this LinuxHostingDetail.
        :type ftp_enabled: bool
        """

        self._ftp_enabled = ftp_enabled

    @property
    def ftp_username(self):
        """Gets the ftp_username of this LinuxHostingDetail.

        Ftp username

        :return: The ftp_username of this LinuxHostingDetail.
        :rtype: str
        """
        return self._ftp_username

    @ftp_username.setter
    def ftp_username(self, ftp_username):
        """Sets the ftp_username of this LinuxHostingDetail.

        Ftp username

        :param ftp_username: The ftp_username of this LinuxHostingDetail.
        :type ftp_username: str
        """

        self._ftp_username = ftp_username

    @property
    def ip(self):
        """Gets the ip of this LinuxHostingDetail.

        Linux hosting IP address

        :return: The ip of this LinuxHostingDetail.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this LinuxHostingDetail.

        Linux hosting IP address

        :param ip: The ip of this LinuxHostingDetail.
        :type ip: str
        """

        self._ip = ip

    @property
    def ip_type(self):
        """Gets the ip_type of this LinuxHostingDetail.


        :return: The ip_type of this LinuxHostingDetail.
        :rtype: LinuxIpType
        """
        return self._ip_type

    @ip_type.setter
    def ip_type(self, ip_type):
        """Sets the ip_type of this LinuxHostingDetail.


        :param ip_type: The ip_type of this LinuxHostingDetail.
        :type ip_type: LinuxIpType
        """

        self._ip_type = ip_type

    @property
    def max_size(self):
        """Gets the max_size of this LinuxHostingDetail.

        Maximum webspace size in MB

        :return: The max_size of this LinuxHostingDetail.
        :rtype: int
        """
        return self._max_size

    @max_size.setter
    def max_size(self, max_size):
        """Sets the max_size of this LinuxHostingDetail.

        Maximum webspace size in MB

        :param max_size: The max_size of this LinuxHostingDetail.
        :type max_size: int
        """

        self._max_size = max_size

    @property
    def max_webspace_size(self):
        """Gets the max_webspace_size of this LinuxHostingDetail.

        Maximum webspace size in MB<br />  Use max_size instead.

        :return: The max_webspace_size of this LinuxHostingDetail.
        :rtype: int
        """
        return self._max_webspace_size

    @max_webspace_size.setter
    def max_webspace_size(self, max_webspace_size):
        """Sets the max_webspace_size of this LinuxHostingDetail.

        Maximum webspace size in MB<br />  Use max_size instead.

        :param max_webspace_size: The max_webspace_size of this LinuxHostingDetail.
        :type max_webspace_size: int
        """

        self._max_webspace_size = max_webspace_size

    @property
    def mysql_database_names(self):
        """Gets the mysql_database_names of this LinuxHostingDetail.

        A list of mysql databases linked to the hosting account.<br />  Details of the database can be read using the mysql database detail.

        :return: The mysql_database_names of this LinuxHostingDetail.
        :rtype: List[str]
        """
        return self._mysql_database_names

    @mysql_database_names.setter
    def mysql_database_names(self, mysql_database_names):
        """Sets the mysql_database_names of this LinuxHostingDetail.

        A list of mysql databases linked to the hosting account.<br />  Details of the database can be read using the mysql database detail.

        :param mysql_database_names: The mysql_database_names of this LinuxHostingDetail.
        :type mysql_database_names: List[str]
        """

        self._mysql_database_names = mysql_database_names

    @property
    def php_version(self):
        """Gets the php_version of this LinuxHostingDetail.

        The active php version for the hosting account.

        :return: The php_version of this LinuxHostingDetail.
        :rtype: str
        """
        return self._php_version

    @php_version.setter
    def php_version(self, php_version):
        """Sets the php_version of this LinuxHostingDetail.

        The active php version for the hosting account.

        :param php_version: The php_version of this LinuxHostingDetail.
        :type php_version: str
        """

        self._php_version = php_version

    @property
    def servicepack_id(self):
        """Gets the servicepack_id of this LinuxHostingDetail.

        Id of Linux hosting service package.

        :return: The servicepack_id of this LinuxHostingDetail.
        :rtype: int
        """
        return self._servicepack_id

    @servicepack_id.setter
    def servicepack_id(self, servicepack_id):
        """Sets the servicepack_id of this LinuxHostingDetail.

        Id of Linux hosting service package.

        :param servicepack_id: The servicepack_id of this LinuxHostingDetail.
        :type servicepack_id: int
        """

        self._servicepack_id = servicepack_id

    @property
    def sites(self):
        """Gets the sites of this LinuxHostingDetail.

        A list of websites on the hosting account.

        :return: The sites of this LinuxHostingDetail.
        :rtype: List[LinuxSite]
        """
        return self._sites

    @sites.setter
    def sites(self, sites):
        """Sets the sites of this LinuxHostingDetail.

        A list of websites on the hosting account.

        :param sites: The sites of this LinuxHostingDetail.
        :type sites: List[LinuxSite]
        """

        self._sites = sites

    @property
    def ssh_host(self):
        """Gets the ssh_host of this LinuxHostingDetail.

        Ssh host of the linux hosting account

        :return: The ssh_host of this LinuxHostingDetail.
        :rtype: str
        """
        return self._ssh_host

    @ssh_host.setter
    def ssh_host(self, ssh_host):
        """Sets the ssh_host of this LinuxHostingDetail.

        Ssh host of the linux hosting account

        :param ssh_host: The ssh_host of this LinuxHostingDetail.
        :type ssh_host: str
        """

        self._ssh_host = ssh_host

    @property
    def ssh_username(self):
        """Gets the ssh_username of this LinuxHostingDetail.

        Ssh username

        :return: The ssh_username of this LinuxHostingDetail.
        :rtype: str
        """
        return self._ssh_username

    @ssh_username.setter
    def ssh_username(self, ssh_username):
        """Sets the ssh_username of this LinuxHostingDetail.

        Ssh username

        :param ssh_username: The ssh_username of this LinuxHostingDetail.
        :type ssh_username: str
        """

        self._ssh_username = ssh_username

    @property
    def webspace_usage(self):
        """Gets the webspace_usage of this LinuxHostingDetail.

        Used webspace size in MB<br />  Use actual_size instead.

        :return: The webspace_usage of this LinuxHostingDetail.
        :rtype: int
        """
        return self._webspace_usage

    @webspace_usage.setter
    def webspace_usage(self, webspace_usage):
        """Sets the webspace_usage of this LinuxHostingDetail.

        Used webspace size in MB<br />  Use actual_size instead.

        :param webspace_usage: The webspace_usage of this LinuxHostingDetail.
        :type webspace_usage: int
        """

        self._webspace_usage = webspace_usage
