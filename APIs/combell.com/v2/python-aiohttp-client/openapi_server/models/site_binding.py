# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SiteBinding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cert_thumbprint: str=None, host_name: str=None, ip_address: str=None, port: int=None, protocol: str=None, ssl_enabled: bool=None):
        """SiteBinding - a model defined in OpenAPI

        :param cert_thumbprint: The cert_thumbprint of this SiteBinding.
        :param host_name: The host_name of this SiteBinding.
        :param ip_address: The ip_address of this SiteBinding.
        :param port: The port of this SiteBinding.
        :param protocol: The protocol of this SiteBinding.
        :param ssl_enabled: The ssl_enabled of this SiteBinding.
        """
        self.openapi_types = {
            'cert_thumbprint': str,
            'host_name': str,
            'ip_address': str,
            'port': int,
            'protocol': str,
            'ssl_enabled': bool
        }

        self.attribute_map = {
            'cert_thumbprint': 'cert_thumbprint',
            'host_name': 'host_name',
            'ip_address': 'ip_address',
            'port': 'port',
            'protocol': 'protocol',
            'ssl_enabled': 'ssl_enabled'
        }

        self._cert_thumbprint = cert_thumbprint
        self._host_name = host_name
        self._ip_address = ip_address
        self._port = port
        self._protocol = protocol
        self._ssl_enabled = ssl_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SiteBinding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SiteBinding of this SiteBinding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cert_thumbprint(self):
        """Gets the cert_thumbprint of this SiteBinding.

        The certificate thumbprint of the site binding.

        :return: The cert_thumbprint of this SiteBinding.
        :rtype: str
        """
        return self._cert_thumbprint

    @cert_thumbprint.setter
    def cert_thumbprint(self, cert_thumbprint):
        """Sets the cert_thumbprint of this SiteBinding.

        The certificate thumbprint of the site binding.

        :param cert_thumbprint: The cert_thumbprint of this SiteBinding.
        :type cert_thumbprint: str
        """

        self._cert_thumbprint = cert_thumbprint

    @property
    def host_name(self):
        """Gets the host_name of this SiteBinding.

        The host name of the site binding.

        :return: The host_name of this SiteBinding.
        :rtype: str
        """
        return self._host_name

    @host_name.setter
    def host_name(self, host_name):
        """Sets the host_name of this SiteBinding.

        The host name of the site binding.

        :param host_name: The host_name of this SiteBinding.
        :type host_name: str
        """

        self._host_name = host_name

    @property
    def ip_address(self):
        """Gets the ip_address of this SiteBinding.

        The IP address of the site binding.

        :return: The ip_address of this SiteBinding.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this SiteBinding.

        The IP address of the site binding.

        :param ip_address: The ip_address of this SiteBinding.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def port(self):
        """Gets the port of this SiteBinding.

        The port of the site binding.

        :return: The port of this SiteBinding.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this SiteBinding.

        The port of the site binding.

        :param port: The port of this SiteBinding.
        :type port: int
        """

        self._port = port

    @property
    def protocol(self):
        """Gets the protocol of this SiteBinding.

        The protocol of the site binding.

        :return: The protocol of this SiteBinding.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this SiteBinding.

        The protocol of the site binding.

        :param protocol: The protocol of this SiteBinding.
        :type protocol: str
        """

        self._protocol = protocol

    @property
    def ssl_enabled(self):
        """Gets the ssl_enabled of this SiteBinding.

        Indicates whether ssl is enabled for the binding.

        :return: The ssl_enabled of this SiteBinding.
        :rtype: bool
        """
        return self._ssl_enabled

    @ssl_enabled.setter
    def ssl_enabled(self, ssl_enabled):
        """Sets the ssl_enabled of this SiteBinding.

        Indicates whether ssl is enabled for the binding.

        :param ssl_enabled: The ssl_enabled of this SiteBinding.
        :type ssl_enabled: bool
        """

        self._ssl_enabled = ssl_enabled
