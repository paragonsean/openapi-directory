# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.validation_error_message import ValidationErrorMessage
from openapi_server import util


class BadRequestResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, validation_errors: List[ValidationErrorMessage]=None):
        """BadRequestResponse - a model defined in OpenAPI

        :param validation_errors: The validation_errors of this BadRequestResponse.
        """
        self.openapi_types = {
            'validation_errors': List[ValidationErrorMessage]
        }

        self.attribute_map = {
            'validation_errors': 'validation_errors'
        }

        self._validation_errors = validation_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BadRequestResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BadRequestResponse of this BadRequestResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def validation_errors(self):
        """Gets the validation_errors of this BadRequestResponse.

        A list of validation errors that occurred when processing the request.

        :return: The validation_errors of this BadRequestResponse.
        :rtype: List[ValidationErrorMessage]
        """
        return self._validation_errors

    @validation_errors.setter
    def validation_errors(self, validation_errors):
        """Sets the validation_errors of this BadRequestResponse.

        A list of validation errors that occurred when processing the request.

        :param validation_errors: The validation_errors of this BadRequestResponse.
        :type validation_errors: List[ValidationErrorMessage]
        """

        self._validation_errors = validation_errors
