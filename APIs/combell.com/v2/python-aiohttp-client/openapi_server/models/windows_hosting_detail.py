# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.application_pool import ApplicationPool
from openapi_server.models.windows_ip_type import WindowsIpType
from openapi_server.models.windows_site import WindowsSite
from openapi_server import util


class WindowsHostingDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actual_size: int=None, application_pool: ApplicationPool=None, domain_name: str=None, ftp_username: str=None, ip: str=None, ip_type: WindowsIpType=None, max_size: int=None, mssql_database_names: List[str]=None, servicepack_id: int=None, sites: List[WindowsSite]=None):
        """WindowsHostingDetail - a model defined in OpenAPI

        :param actual_size: The actual_size of this WindowsHostingDetail.
        :param application_pool: The application_pool of this WindowsHostingDetail.
        :param domain_name: The domain_name of this WindowsHostingDetail.
        :param ftp_username: The ftp_username of this WindowsHostingDetail.
        :param ip: The ip of this WindowsHostingDetail.
        :param ip_type: The ip_type of this WindowsHostingDetail.
        :param max_size: The max_size of this WindowsHostingDetail.
        :param mssql_database_names: The mssql_database_names of this WindowsHostingDetail.
        :param servicepack_id: The servicepack_id of this WindowsHostingDetail.
        :param sites: The sites of this WindowsHostingDetail.
        """
        self.openapi_types = {
            'actual_size': int,
            'application_pool': ApplicationPool,
            'domain_name': str,
            'ftp_username': str,
            'ip': str,
            'ip_type': WindowsIpType,
            'max_size': int,
            'mssql_database_names': List[str],
            'servicepack_id': int,
            'sites': List[WindowsSite]
        }

        self.attribute_map = {
            'actual_size': 'actual_size',
            'application_pool': 'application_pool',
            'domain_name': 'domain_name',
            'ftp_username': 'ftp_username',
            'ip': 'ip',
            'ip_type': 'ip_type',
            'max_size': 'max_size',
            'mssql_database_names': 'mssql_database_names',
            'servicepack_id': 'servicepack_id',
            'sites': 'sites'
        }

        self._actual_size = actual_size
        self._application_pool = application_pool
        self._domain_name = domain_name
        self._ftp_username = ftp_username
        self._ip = ip
        self._ip_type = ip_type
        self._max_size = max_size
        self._mssql_database_names = mssql_database_names
        self._servicepack_id = servicepack_id
        self._sites = sites

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WindowsHostingDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WindowsHostingDetail of this WindowsHostingDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actual_size(self):
        """Gets the actual_size of this WindowsHostingDetail.

        Used webspace size in MB

        :return: The actual_size of this WindowsHostingDetail.
        :rtype: int
        """
        return self._actual_size

    @actual_size.setter
    def actual_size(self, actual_size):
        """Sets the actual_size of this WindowsHostingDetail.

        Used webspace size in MB

        :param actual_size: The actual_size of this WindowsHostingDetail.
        :type actual_size: int
        """

        self._actual_size = actual_size

    @property
    def application_pool(self):
        """Gets the application_pool of this WindowsHostingDetail.


        :return: The application_pool of this WindowsHostingDetail.
        :rtype: ApplicationPool
        """
        return self._application_pool

    @application_pool.setter
    def application_pool(self, application_pool):
        """Sets the application_pool of this WindowsHostingDetail.


        :param application_pool: The application_pool of this WindowsHostingDetail.
        :type application_pool: ApplicationPool
        """

        self._application_pool = application_pool

    @property
    def domain_name(self):
        """Gets the domain_name of this WindowsHostingDetail.

        Domain name for the Windows hosting account.

        :return: The domain_name of this WindowsHostingDetail.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this WindowsHostingDetail.

        Domain name for the Windows hosting account.

        :param domain_name: The domain_name of this WindowsHostingDetail.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def ftp_username(self):
        """Gets the ftp_username of this WindowsHostingDetail.

        Ftp username

        :return: The ftp_username of this WindowsHostingDetail.
        :rtype: str
        """
        return self._ftp_username

    @ftp_username.setter
    def ftp_username(self, ftp_username):
        """Sets the ftp_username of this WindowsHostingDetail.

        Ftp username

        :param ftp_username: The ftp_username of this WindowsHostingDetail.
        :type ftp_username: str
        """

        self._ftp_username = ftp_username

    @property
    def ip(self):
        """Gets the ip of this WindowsHostingDetail.

        Windows hosting IP address

        :return: The ip of this WindowsHostingDetail.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this WindowsHostingDetail.

        Windows hosting IP address

        :param ip: The ip of this WindowsHostingDetail.
        :type ip: str
        """

        self._ip = ip

    @property
    def ip_type(self):
        """Gets the ip_type of this WindowsHostingDetail.


        :return: The ip_type of this WindowsHostingDetail.
        :rtype: WindowsIpType
        """
        return self._ip_type

    @ip_type.setter
    def ip_type(self, ip_type):
        """Sets the ip_type of this WindowsHostingDetail.


        :param ip_type: The ip_type of this WindowsHostingDetail.
        :type ip_type: WindowsIpType
        """

        self._ip_type = ip_type

    @property
    def max_size(self):
        """Gets the max_size of this WindowsHostingDetail.

        Maximum webspace size in MB

        :return: The max_size of this WindowsHostingDetail.
        :rtype: int
        """
        return self._max_size

    @max_size.setter
    def max_size(self, max_size):
        """Sets the max_size of this WindowsHostingDetail.

        Maximum webspace size in MB

        :param max_size: The max_size of this WindowsHostingDetail.
        :type max_size: int
        """

        self._max_size = max_size

    @property
    def mssql_database_names(self):
        """Gets the mssql_database_names of this WindowsHostingDetail.

        A list of mssql databases linked to the hosting account.<br />

        :return: The mssql_database_names of this WindowsHostingDetail.
        :rtype: List[str]
        """
        return self._mssql_database_names

    @mssql_database_names.setter
    def mssql_database_names(self, mssql_database_names):
        """Sets the mssql_database_names of this WindowsHostingDetail.

        A list of mssql databases linked to the hosting account.<br />

        :param mssql_database_names: The mssql_database_names of this WindowsHostingDetail.
        :type mssql_database_names: List[str]
        """

        self._mssql_database_names = mssql_database_names

    @property
    def servicepack_id(self):
        """Gets the servicepack_id of this WindowsHostingDetail.

        Id of Windows hosting service package.

        :return: The servicepack_id of this WindowsHostingDetail.
        :rtype: int
        """
        return self._servicepack_id

    @servicepack_id.setter
    def servicepack_id(self, servicepack_id):
        """Sets the servicepack_id of this WindowsHostingDetail.

        Id of Windows hosting service package.

        :param servicepack_id: The servicepack_id of this WindowsHostingDetail.
        :type servicepack_id: int
        """

        self._servicepack_id = servicepack_id

    @property
    def sites(self):
        """Gets the sites of this WindowsHostingDetail.

        A list of websites on the hosting account.

        :return: The sites of this WindowsHostingDetail.
        :rtype: List[WindowsSite]
        """
        return self._sites

    @sites.setter
    def sites(self, sites):
        """Sets the sites of this WindowsHostingDetail.

        A list of websites on the hosting account.

        :param sites: The sites of this WindowsHostingDetail.
        :type sites: List[WindowsSite]
        """

        self._sites = sites
