# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AutoReply(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, message: str=None, subject: str=None):
        """AutoReply - a model defined in OpenAPI

        :param enabled: The enabled of this AutoReply.
        :param message: The message of this AutoReply.
        :param subject: The subject of this AutoReply.
        """
        self.openapi_types = {
            'enabled': bool,
            'message': str,
            'subject': str
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'message': 'message',
            'subject': 'subject'
        }

        self._enabled = enabled
        self._message = message
        self._subject = subject

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoReply':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoReply of this AutoReply.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this AutoReply.

        Enabled

        :return: The enabled of this AutoReply.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this AutoReply.

        Enabled

        :param enabled: The enabled of this AutoReply.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def message(self):
        """Gets the message of this AutoReply.

        Message

        :return: The message of this AutoReply.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this AutoReply.

        Message

        :param message: The message of this AutoReply.
        :type message: str
        """

        self._message = message

    @property
    def subject(self):
        """Gets the subject of this AutoReply.

        Subject

        :return: The subject of this AutoReply.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this AutoReply.

        Subject

        :param subject: The subject of this AutoReply.
        :type subject: str
        """

        self._subject = subject
