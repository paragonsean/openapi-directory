# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.additional_validation_attribute import AdditionalValidationAttribute
from openapi_server.models.ssl_certificate_type import SslCertificateType
from openapi_server.models.ssl_certificate_validation_level import SslCertificateValidationLevel
from openapi_server import util


class CreateSslCertificateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_validation_attributes: List[AdditionalValidationAttribute]=None, certificate_type: SslCertificateType=None, csr: str=None, validation_level: SslCertificateValidationLevel=None):
        """CreateSslCertificateRequest - a model defined in OpenAPI

        :param additional_validation_attributes: The additional_validation_attributes of this CreateSslCertificateRequest.
        :param certificate_type: The certificate_type of this CreateSslCertificateRequest.
        :param csr: The csr of this CreateSslCertificateRequest.
        :param validation_level: The validation_level of this CreateSslCertificateRequest.
        """
        self.openapi_types = {
            'additional_validation_attributes': List[AdditionalValidationAttribute],
            'certificate_type': SslCertificateType,
            'csr': str,
            'validation_level': SslCertificateValidationLevel
        }

        self.attribute_map = {
            'additional_validation_attributes': 'additional_validation_attributes',
            'certificate_type': 'certificate_type',
            'csr': 'csr',
            'validation_level': 'validation_level'
        }

        self._additional_validation_attributes = additional_validation_attributes
        self._certificate_type = certificate_type
        self._csr = csr
        self._validation_level = validation_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateSslCertificateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateSslCertificateRequest of this CreateSslCertificateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_validation_attributes(self):
        """Gets the additional_validation_attributes of this CreateSslCertificateRequest.

        List of additional validation attributes for the certificate when choosing organization or extended validation.  <table><tr><th>Name</th><th>Info</th><th>Required</th></tr><tr><td>Firstname</td><td>Firstname of the technical contact</td><td>Yes</td></tr><tr><td>Lastname</td><td>Lastname of the technical contact</td><td>Yes</td></tr><tr><td>Phone</td><td>Phone of the technical contact</td><td>Yes</td></tr><tr><td>EmailAddress</td><td>Email address of the technical contact</td><td>Yes</td></tr><tr><td>Street</td><td>Address street of the organization</td><td>Yes</td></tr><tr><td>Number</td><td>Address house number of the organization</td><td>Yes</td></tr><tr><td>PostalCode</td><td>Address postal code of the organization</td><td>Yes</td></tr><tr><td>VatCountryCode</td><td>VAT country code of the organization, ISO 3166-1 alpha-2 country code</td><td>Yes</td></tr><tr><td>OrganizationNumber</td><td>Business number of the organization</td><td>No</td></tr></table>

        :return: The additional_validation_attributes of this CreateSslCertificateRequest.
        :rtype: List[AdditionalValidationAttribute]
        """
        return self._additional_validation_attributes

    @additional_validation_attributes.setter
    def additional_validation_attributes(self, additional_validation_attributes):
        """Sets the additional_validation_attributes of this CreateSslCertificateRequest.

        List of additional validation attributes for the certificate when choosing organization or extended validation.  <table><tr><th>Name</th><th>Info</th><th>Required</th></tr><tr><td>Firstname</td><td>Firstname of the technical contact</td><td>Yes</td></tr><tr><td>Lastname</td><td>Lastname of the technical contact</td><td>Yes</td></tr><tr><td>Phone</td><td>Phone of the technical contact</td><td>Yes</td></tr><tr><td>EmailAddress</td><td>Email address of the technical contact</td><td>Yes</td></tr><tr><td>Street</td><td>Address street of the organization</td><td>Yes</td></tr><tr><td>Number</td><td>Address house number of the organization</td><td>Yes</td></tr><tr><td>PostalCode</td><td>Address postal code of the organization</td><td>Yes</td></tr><tr><td>VatCountryCode</td><td>VAT country code of the organization, ISO 3166-1 alpha-2 country code</td><td>Yes</td></tr><tr><td>OrganizationNumber</td><td>Business number of the organization</td><td>No</td></tr></table>

        :param additional_validation_attributes: The additional_validation_attributes of this CreateSslCertificateRequest.
        :type additional_validation_attributes: List[AdditionalValidationAttribute]
        """

        self._additional_validation_attributes = additional_validation_attributes

    @property
    def certificate_type(self):
        """Gets the certificate_type of this CreateSslCertificateRequest.


        :return: The certificate_type of this CreateSslCertificateRequest.
        :rtype: SslCertificateType
        """
        return self._certificate_type

    @certificate_type.setter
    def certificate_type(self, certificate_type):
        """Sets the certificate_type of this CreateSslCertificateRequest.


        :param certificate_type: The certificate_type of this CreateSslCertificateRequest.
        :type certificate_type: SslCertificateType
        """

        self._certificate_type = certificate_type

    @property
    def csr(self):
        """Gets the csr of this CreateSslCertificateRequest.

        The certificate signing request data.<br />  The certificate signing request subject should contain following attributes:<br /><table><tr><th>Name</th><th>Code</th><th>Format</th></tr><tr><td>CommonName</td><td>CN</td><td>Valid domain name, for example site.be, alias.site.be or *.site.be</td></tr><tr><td>Country</td><td>C</td><td>ISO 3166-1 alpha-2 country code</td></tr><tr><td>State</td><td>ST</td><td></td></tr><tr><td>Locality</td><td>L</td><td></td></tr><tr><td>Organization</td><td>O</td><td></td></tr><tr><td>EmailAddress</td><td>E</td><td>Valid email address</td></tr></table>  The certificate signing request should also contain all the additional aliases and domains (SAN's) for the certificate.

        :return: The csr of this CreateSslCertificateRequest.
        :rtype: str
        """
        return self._csr

    @csr.setter
    def csr(self, csr):
        """Sets the csr of this CreateSslCertificateRequest.

        The certificate signing request data.<br />  The certificate signing request subject should contain following attributes:<br /><table><tr><th>Name</th><th>Code</th><th>Format</th></tr><tr><td>CommonName</td><td>CN</td><td>Valid domain name, for example site.be, alias.site.be or *.site.be</td></tr><tr><td>Country</td><td>C</td><td>ISO 3166-1 alpha-2 country code</td></tr><tr><td>State</td><td>ST</td><td></td></tr><tr><td>Locality</td><td>L</td><td></td></tr><tr><td>Organization</td><td>O</td><td></td></tr><tr><td>EmailAddress</td><td>E</td><td>Valid email address</td></tr></table>  The certificate signing request should also contain all the additional aliases and domains (SAN's) for the certificate.

        :param csr: The csr of this CreateSslCertificateRequest.
        :type csr: str
        """

        self._csr = csr

    @property
    def validation_level(self):
        """Gets the validation_level of this CreateSslCertificateRequest.


        :return: The validation_level of this CreateSslCertificateRequest.
        :rtype: SslCertificateValidationLevel
        """
        return self._validation_level

    @validation_level.setter
    def validation_level(self, validation_level):
        """Sets the validation_level of this CreateSslCertificateRequest.


        :param validation_level: The validation_level of this CreateSslCertificateRequest.
        :type validation_level: SslCertificateValidationLevel
        """

        self._validation_level = validation_level
