# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddSubsiteRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str=None, path: str=None):
        """AddSubsiteRequest - a model defined in OpenAPI

        :param domain_name: The domain_name of this AddSubsiteRequest.
        :param path: The path of this AddSubsiteRequest.
        """
        self.openapi_types = {
            'domain_name': str,
            'path': str
        }

        self.attribute_map = {
            'domain_name': 'domain_name',
            'path': 'path'
        }

        self._domain_name = domain_name
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddSubsiteRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddSubsiteRequest of this AddSubsiteRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self):
        """Gets the domain_name of this AddSubsiteRequest.

        Subsite domain name (e.g. alias.be or subsite.site.be).

        :return: The domain_name of this AddSubsiteRequest.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this AddSubsiteRequest.

        Subsite domain name (e.g. alias.be or subsite.site.be).

        :param domain_name: The domain_name of this AddSubsiteRequest.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def path(self):
        """Gets the path of this AddSubsiteRequest.

        Folder location for the subsite (when empty we use /subsites/site (e.g. /subsites/subsite.site.be)<br />  The path MUST pre-exist on the server. It WILL NOT be created automatically.

        :return: The path of this AddSubsiteRequest.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this AddSubsiteRequest.

        Folder location for the subsite (when empty we use /subsites/site (e.g. /subsites/subsite.site.be)<br />  The path MUST pre-exist on the server. It WILL NOT be created automatically.

        :param path: The path of this AddSubsiteRequest.
        :type path: str
        """

        self._path = path
