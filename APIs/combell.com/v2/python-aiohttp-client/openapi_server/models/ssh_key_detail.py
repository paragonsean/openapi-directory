# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SshKeyDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fingerprint: str=None, linux_hostings: List[str]=None, public_key: str=None):
        """SshKeyDetail - a model defined in OpenAPI

        :param fingerprint: The fingerprint of this SshKeyDetail.
        :param linux_hostings: The linux_hostings of this SshKeyDetail.
        :param public_key: The public_key of this SshKeyDetail.
        """
        self.openapi_types = {
            'fingerprint': str,
            'linux_hostings': List[str],
            'public_key': str
        }

        self.attribute_map = {
            'fingerprint': 'fingerprint',
            'linux_hostings': 'linux_hostings',
            'public_key': 'public_key'
        }

        self._fingerprint = fingerprint
        self._linux_hostings = linux_hostings
        self._public_key = public_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SshKeyDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SshKeyDetail of this SshKeyDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fingerprint(self):
        """Gets the fingerprint of this SshKeyDetail.

        The fingerprint of the public key.<br />  This value is ignored for creation of new SSH keys.

        :return: The fingerprint of this SshKeyDetail.
        :rtype: str
        """
        return self._fingerprint

    @fingerprint.setter
    def fingerprint(self, fingerprint):
        """Sets the fingerprint of this SshKeyDetail.

        The fingerprint of the public key.<br />  This value is ignored for creation of new SSH keys.

        :param fingerprint: The fingerprint of this SshKeyDetail.
        :type fingerprint: str
        """

        self._fingerprint = fingerprint

    @property
    def linux_hostings(self):
        """Gets the linux_hostings of this SshKeyDetail.

        List of Linux hostings where SSH key is attached

        :return: The linux_hostings of this SshKeyDetail.
        :rtype: List[str]
        """
        return self._linux_hostings

    @linux_hostings.setter
    def linux_hostings(self, linux_hostings):
        """Sets the linux_hostings of this SshKeyDetail.

        List of Linux hostings where SSH key is attached

        :param linux_hostings: The linux_hostings of this SshKeyDetail.
        :type linux_hostings: List[str]
        """

        self._linux_hostings = linux_hostings

    @property
    def public_key(self):
        """Gets the public_key of this SshKeyDetail.

        Public key

        :return: The public_key of this SshKeyDetail.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key):
        """Sets the public_key of this SshKeyDetail.

        Public key

        :param public_key: The public_key of this SshKeyDetail.
        :type public_key: str
        """

        self._public_key = public_key
