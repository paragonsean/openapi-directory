openapi: 3.0.1
info:
  description: "# Introduction\n\nThis API allows resellers to manage their resources\
    \ in a simple, programmatic way using HTTP requests.\n\n# Conventions\n\n## Requests\n\
    \nThe API supports different methods depending on the required action.\n\n| Method\t\
    | Description\n| ---\t\t| ---\n| GET\t\t| Retrieve resources in a collection or\
    \ get a single resource.<br/>Getters will never have any effect on the queried\
    \ resources.\n| POST\t\t| Create a new resource in a collection.\n| PUT\t\t| Update\
    \ an existing resource with its new representation.\n| DELETE\t| Delete an existing\
    \ resource.\n\n## HTTP status codes\n\nThe API will reply with different HTTP\
    \ statuscodes:\n\n| StatusCode\t\t\t\t| Description\n| ---\t\t\t\t\t\t| ---\n\
    | 200 OK\t\t\t\t\t| The requests was processed and you receive data as a result.\n\
    | 201 CREATED\t\t\t\t| The resource has been created. Either the Location header\
    \ contains a link to the created resource, or links are being returned in the\
    \ response body. The applied method will be indicated in the documentation.\n\
    | 202 ACCEPTED\t\t\t\t| The request has been validated and accepted. Because we\
    \ need to do some background processing prior to returning the result, we cannot\
    \ send back a useful representation.\n| 204 NOCONTENT\t\t\t\t| The request has\
    \ been processed, but no details can be returned.\n| 400 BADREQUEST\t\t\t| Your\
    \ request is malformed.\n| 401 UNAUTHORIZED\t\t\t| You are not authorized. Follow\
    \ the instructions in the Authorization documentation.\n| 403 FORBIDDEN\t\t\t\t\
    | Access to the resource or operation is not allowed.\n| 404 NOTFOUND\t\t\t\t\
    | The resource cannot be found.\n| 410 GONE                  | The resource is\
    \ permanently no longer available.\n| 429 TOOMANYREQUESTS\t\t| The ratelimit has\
    \ been exceeded. Please refer to the documentation on rate limiting for more details.\n\
    | 500 INTERNALSERVERERROR\t| An error occurred during the processing of the request.\
    \ The error is unexpected and most likely due to a bug in the api.\n\nIn the event\
    \ of a problem, the body of the response will usually contain an errorcode and\
    \ errormessage.\nIn rare cases additional details about the error are reported.\n\
    \nErrorcodes 400-499 are considered to be client errors and indicate that there\
    \ was an issue with the request.\nWe will not take any action besides monitoring.\
    \ \n\nErrorcodes 500-599 are considered to be server errors. The errors are monitored\
    \ AND action will be taken to resolve the error.\n\n## Formatting\n\nSnake casing\
    \ is applied on resources and query parameters.\nThe API is strictly returning\
    \ JSON. No other formats are supported.\n\nDatetimes are returned in ISO-8601\
    \ format.\n\n## Pagination\n\nPagination is on by default on collections and is\
    \ controlled by specifying *skip* and *take* parameters.  \n**Skip** indicates\
    \ the number of results to skip and where to start the new take.  \n**Take** indicates\
    \ the number of records to return. The returned number of items can be smaller\
    \ than the requested take.\n\nPaged results will have headers with useful information\
    \ regarding the paging.\n\n| Header\t\t\t\t| Description\n| ---\t\t\t\t\t| ---\n\
    | X-Paging-Skipped\t\t| The number of results that have been skipped.\n| X-Paging-Take\t\
    \t\t| The number of items in the current take. The number might differ from the\
    \ requested take. It represents the actual number of items returned in the response.\n\
    | X-Paging-TotalResults | The total number of results regardless of paging.\n\n\
    ## Rate limiting\n\nThe number of requests per interval is limited. Detailed information\
    \ on the rate limiting can be found in specific headers which will be sent on\
    \ each request.\n\n| Header\t\t\t\t| Description\n| ---\t\t\t\t\t| ---\n| X-RateLimit-Limit\t\
    \t| The number of requests that can be made in a specific time interval.\n| X-RateLimit-Usage\t\
    \t| The number of requests already made in the current time interval.\n| X-RateLimit-Remaining\t\
    | The number of requests remaining until the reset.\n| X-RateLimit-Reset\t\t|\
    \ The number of seconds until the reset.<br />After the reset you are allowed\
    \ to make as many requests as specified by the X-RateLimit-Limit header.\n| Retry-After\t\
    \t\t| The number of seconds you have to wait until you can make new requests.<br\
    \ />This header is only present when the rate limit has been reached. It is identical\
    \ to X-RateLimit-Reset.\n\nWhen the ratelimit has been reached, all requests will\
    \ return with a HTTP statuscode 429 and ReasonPhrase '*Too many requests, retry\
    \ later.*'.\n\n# Authentication\n\nThe Api uses HMAC authentication.  \nHash-based\
    \ message authentication code (HMAC) is a mechanism for calculating a message\
    \ authentication code involving a hash function in combination with a secret key.\
    \  \nBoth the integrity and the authenticity of the message are verified this\
    \ way.\n\n## Steps to generate the HMAC\n\n1. Get your api key and secret from\
    \ your controlpanel.  \nIt is absolutely vital that the secret is never exposed.\
    \ Once the secret is out, anyone would be able to generate hmacs to impersonate\
    \ you.  \nIn case your secret is compromised, you can generate a new api key and\
    \ secret on your controlpanel.\n2. Construct the input value for generating the\
    \ hmac.  \nConcatenate:apikey, request method, path and querystring information,\
    \ unix timestamp, nonce and content.\n\n|\t\t\t\t\t\t\t\t\t\t| Description\n|\
    \ ---\t\t\t\t\t\t\t\t\t| ---\n| apikey\t\t\t\t\t\t\t\t| The key that is linked\
    \ to your user.\n| request method\t\t\t\t\t\t| lowercased (eg: get, post, delete,...)\n\
    | path and querystring information\t\t| urlencoding of the lowercased relative\
    \ path and querystring.<br />The path **MUST start with the api version (/v2)**.<br\
    \ />The hexadecimal codes (percent encoding) MUST be uppercased.\n| unix timestamp\t\
    \t\t\t\t\t| the unix timestamp in **seconds**.\n| nonce\t\t\t\t\t\t\t\t\t| a\t\
    unique string for each request. It should be a random string, not related to the\
    \ request. The nonce (in combination with the unix timestamp) protects you from\
    \ replay attacks in case anyone was able to intercept a request.\n| content\t\t\
    \t\t\t\t\t\t| When the request body is not empty, this should be the Base64 encoded\
    \ Md5 hash of the request body.<br />An empty body should not be encoded.\n\n\
    3. Hash the concatenated string using your api secret and the SHA-256 algorithm.\n\
    4. Base64 encode the result of the hash function. This is the hmac signature you\
    \ will need to send an authorized request.\n\n## Sending an authorized request\n\
    \nAn authorized request can be made by sending the generated HMAC in the authorization\
    \ header.  \nA correct authorizationheader uses the hmac authorization scheme\
    \ and a correctly formatted authorization parameter.\n\nCreate the authorization\
    \ parameter by concatenating:\n  * apikey\n  * colon ':'\n  * generated HMAC signature\
    \ (see above)\n  * colon ':'\n  * nonce (the one used to generate the signature)\n\
    \  * colon ':'\n  * unix timestamp (the one used to generate the signature)\n\n\
    A sample (illustrated):\n\n* The first line is the string you create to feed to\
    \ the hashing algorithm.\n* The second line is the authorization header that should\
    \ be sent in the request.\n\n![hmac authorization header illustrated](/v2/images/authentication_illustration.jpg\
    \ \"authorization header illustrated\")\n\n## IP whitelisting\n\nAccess is by\
    \ default restricted for all IP addresses. You need to explicitly whitelist an\
    \ IP or an IP range in your controlpanel.\n\n# Versioning\n\nBecause of breaking\
    \ contract changes compared to v1, we released v2 of the API.  \nV1 will still\
    \ be available, but you are strongly encouraged to migrate to the latest version.\
    \  \nNew features will only be available on v2.\n\n# Policy\n\n### Fair use policy\n\
    \nPlease respect the rate limits and do not use the api for any purposes of abuse.\
    \  \nAll requests are being monitored and logged.  \nIntentional abuse might result\
    \ in api key revocation.\n\n# Errors\n\nThe API attempts to return appropriate\
    \ HTTP status codes for every request.  \nWhen the status code indicates failure,\
    \ the API will also provide an error message in most cases.\n\nAn error message\
    \ contains a machine-parseable error code accompanied by a descriptive error text.\
    \  \nThe text for an error message might change over time, but codes will stay\
    \ the same.\n\n[An overview of error codes can be found here](/v2/documentation/errorcodes).\n\
    \n# Change log\n\n[An overview of new changes can be found here](/v2/documentation/changelog).\n\
    \n# Provisioning information\n\n## Terminology\n\n| Term\t\t\t| Definition\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t|\n| ---\t\t\t| ---\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t|\n| Servicepack\t| Defines a set of assets that belong together. An example\
    \ is a hosting package which offers Linux hosting, a domain name, a couple of\
    \ mailboxes and databases.<br/>It also limits the size of individual assets within\
    \ the same account. |\n| Account\t\t| Represents an instance of the servicepack.\
    \ It contains one or more assets. The number and size of assets is defined by\
    \ the servicepack. |\n| Asset\t\t\t| A manageable service. For example: a mysql\
    \ database, a linux hosting, a mailbox,...<br/>Some assets are created at the\
    \ moment when the account is created. Other assets can be created afterwards.\n\
    \t\n## Common provisioning scenario\n\n**Provisioning of an account with Linux\
    \ hosting with one MySql database**\n\n*Without a pre-existing account:*\n\n1.\
    \ Create a new account.<br/>Perform a POST on the accounts route and provide the\
    \ desired servicepack id and identifier (domain name).\n2. Read the Location header\
    \ from the response and perform a GET of the provided resource (a provisioning\
    \ job).\n3. When the response returns 200(OK), you should repeat the GET operation\
    \ after a certain interval (Repeat this step).<br/>\nWhen the response returns\
    \ 201(Created), you should read the response body. This will contain links to\
    \ the created resources.<br/>\nThis will usually hold only one link, but to be\
    \ futureproof, this has been designed to return a collection.\n4. The created\
    \ resource will point to an account. You now know the account's Id and can continue\
    \ with the provisioning of a MySql database on this account.\n5. Perform a POST\
    \ on the mysqldatabases route and provide the account id along with other requested\
    \ information.\n6. Read the Location header from the response and perform a GET\
    \ of the provided resource (a provisioning job).\n7. When the response returns\
    \ 200(OK), you should repeat the GET operation after a certain interval (Repeat\
    \ this step).<br/>\nWhen the response returns 201(Created), you should read the\
    \ response body. This will contain links to the created resources.<br/>\nThis\
    \ will usually hold only one link, but to be futureproof, this has been designed\
    \ to return a collection.\n8. The created resource will point to a MySql database\
    \ resource.\n\n## SSL certificate requests\n\n**Requesting an SSL certificate\
    \ causes the purchase of a paying product.**\n\n1. A certificate is created by\
    \ adding an ssl certificate request.\n2. Upon statuscode 201 you should query\
    \ for certificate completion on the resource provided in the location response\
    \ header.\n3. The resource request can respond with different statuscodes:\n<ul>\n\
    \    <li>200: the certificate request is ongoing.<br/>\nCheck the validations\
    \ collection for validation values that are not auto_validated. Those should be\
    \ set by you system.<br/>\nCall verify domain validations once all validation\
    \ values are in place. It might take some time for verification to take place.\
    \ It is not necessary to call this method more than once.</li>\n    <li>303: the\
    \ certificate request is complete; there is no more certificate request resource\
    \ available. Check the location header value to retrieve the representation of\
    \ the resulting ssl certificate.</li>\n    <li>410: the certificate request does\
    \ not exist anymore, there is no certificate created as a result of the request.</li>\n\
    </ul>"
  title: Public Api
  version: v2
  x-apisguru-categories:
  - hosting
  x-logo:
    url: https://www.combell.com/build/website/images/favicons/apple-icon-57x57.png
  x-origin:
  - format: openapi
    url: https://api.combell.com/v2/documentation/swagger-v2.json
    version: "3.0"
  x-providerName: combell.com
servers:
- url: /v2
tags:
- name: Accounts
- description: "Manage the dns records for a domain name.<p>The interface allows you\
    \ to manage following records: A, CNAME, MX, SRV, ALIAS and TXT."
  name: DNS records
- description: Manage your domains.
  name: Domains
- description: Manage your linux hostings.
  name: Linux hostings
- description: Manage your mailboxes.
  name: Mailboxes
- description: Manage your mail zones.
  name: Mail zones
- description: Manage your MySql databases.
  name: MySql databases
- name: Provisioning jobs
- name: Servicepacks
- name: SSH
- description: Create new SSL certificates. In the provisioning documentation you
    can find more info on the flow that should be followed.
  name: SSL certificate requests
- description: Manage your SSL certificates.
  name: SSL certificates
- description: Manage your windows hostings.
  name: Windows hostings
paths:
  /accounts:
    get:
      operationId: get_accounts
      parameters:
      - description: The number of items to skip in the resultset.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          description: The number of items to skip in the resultset.
          format: int32
          type: integer
        style: form
      - description: The number of items to return in the resultset. The returned
          count can be equal or less than this number.
        explode: true
        in: query
        name: take
        required: false
        schema:
          description: The number of items to return in the resultset. The returned
            count can be equal or less than this number.
          format: int32
          type: integer
        style: form
      - description: "Filters the list, returning only accounts containing the specified\
          \ asset type."
        explode: true
        in: query
        name: asset_type
        required: false
        schema:
          $ref: '#/components/schemas/AssetType'
        style: form
      - description: "Return only accounts, matching the specified identifier."
        explode: true
        in: query
        name: identifier
        required: false
        schema:
          description: "Return only accounts, matching the specified identifier."
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: Success
          headers:
            X-Paging-Skipped:
              description: The number of results that have been skipped.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-Take:
              description: The number of items in the current take. The number might
                differ from the requested take. It represents the actual number of
                items returned in the response.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-TotalResults:
              description: The total number of results regardless of paging.
              explode: false
              schema:
                type: integer
              style: simple
      summary: Overview of accounts
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
    post:
      description: The creation of an account requires some background processing.
        There is no instant feedback of the creation status.
      operationId: create_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
        description: ""
        x-body-name: body
      responses:
        "202":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
      summary: Create a new account
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
      x-codegen-request-body-name: body
  /accounts/{accountId}:
    get:
      description: ""
      operationId: get_account
      parameters:
      - description: The id of the account.
        explode: true
        in: query
        name: account_id
        required: true
        schema:
          description: The id of the account.
          format: int32
          type: integer
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetail'
          description: Success
      summary: Get a specific account
      tags:
      - Accounts
      x-openapi-router-controller: openapi_server.controllers.accounts_controller
  /dns/{domainName}/records:
    get:
      operationId: dns_domain_name_records_get
      parameters:
      - description: The domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: The domain name.
          type: string
        style: form
      - description: The number of items to skip in the resultset.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          description: The number of items to skip in the resultset.
          format: int32
          type: integer
        style: form
      - description: The number of items to return in the resultset. The returned
          count can be equal or less than this number.
        explode: true
        in: query
        name: take
        required: false
        schema:
          description: The number of items to return in the resultset. The returned
            count can be equal or less than this number.
          format: int32
          type: integer
        style: form
      - description: Filters records matching the type. Most other filters only apply
          when this filter is specified.
        explode: true
        in: query
        name: type
        required: false
        schema:
          description: Filters records matching the type. Most other filters only
            apply when this filter is specified.
          nullable: true
          type: string
        style: form
      - description: "Filters records matching the record name. This filter only applies\
          \ to lookups of A, CNAME, TXT, CAA, ALIAS and TLSA records."
        explode: true
        in: query
        name: record_name
        required: false
        schema:
          description: "Filters records matching the record name. This filter only\
            \ applies to lookups of A, CNAME, TXT, CAA, ALIAS and TLSA records."
          nullable: true
          type: string
        style: form
      - description: Filters records for the service. This filter only applies to
          lookups of SRV records.
        explode: true
        in: query
        name: service
        required: false
        schema:
          description: Filters records for the service. This filter only applies to
            lookups of SRV records.
          nullable: true
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DnsRecord'
                type: array
          description: Success
          headers:
            X-Paging-Skipped:
              description: The number of results that have been skipped.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-Take:
              description: The number of items in the current take. The number might
                differ from the requested take. It represents the actual number of
                items returned in the response.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-TotalResults:
              description: The total number of results regardless of paging.
              explode: false
              schema:
                type: integer
              style: simple
      summary: Get records
      tags:
      - DNS records
      x-openapi-router-controller: openapi_server.controllers.dns_records_controller
    post:
      operationId: dns_domain_name_records_post
      parameters:
      - description: The domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: The domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsRecord'
        description: The record to create
        x-body-name: body
      responses:
        "201":
          description: Success
          headers:
            Location:
              description: The location of the created resource.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a record
      tags:
      - DNS records
      x-openapi-router-controller: openapi_server.controllers.dns_records_controller
      x-codegen-request-body-name: body
  /dns/{domainName}/records/{recordId}:
    delete:
      operationId: dns_domain_name_records_record_id_delete
      parameters:
      - description: The domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: The domain name.
          type: string
        style: form
      - description: The id of the record.
        explode: true
        in: query
        name: record_id
        required: true
        schema:
          description: The id of the record.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: recordId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
      summary: Delete a record
      tags:
      - DNS records
      x-openapi-router-controller: openapi_server.controllers.dns_records_controller
    get:
      operationId: dns_domain_name_records_record_id_get
      parameters:
      - description: The domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: The domain name.
          type: string
        style: form
      - description: The id of the record.
        explode: true
        in: query
        name: record_id
        required: true
        schema:
          description: The id of the record.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: recordId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DnsRecord'
          description: Success
      summary: Get specific record
      tags:
      - DNS records
      x-openapi-router-controller: openapi_server.controllers.dns_records_controller
    put:
      operationId: dns_domain_name_records_record_id_put
      parameters:
      - description: The domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: The domain name.
          type: string
        style: form
      - description: The id of the record.
        explode: true
        in: query
        name: record_id
        required: true
        schema:
          description: The id of the record.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: recordId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsRecord'
        description: The record with updated values.
        x-body-name: body
      responses:
        "200":
          description: Success
      summary: Edit a record
      tags:
      - DNS records
      x-openapi-router-controller: openapi_server.controllers.dns_records_controller
      x-codegen-request-body-name: body
  /domains:
    get:
      operationId: get_domains
      parameters:
      - description: The number of items to skip in the resultset.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          description: The number of items to skip in the resultset.
          format: int32
          type: integer
        style: form
      - description: The number of items to return in the resultset. The returned
          count can be equal or less than this number.
        explode: true
        in: query
        name: take
        required: false
        schema:
          description: The number of items to return in the resultset. The returned
            count can be equal or less than this number.
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
                type: array
          description: Success
          headers:
            X-Paging-Skipped:
              description: The number of results that have been skipped.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-Take:
              description: The number of items in the current take. The number might
                differ from the requested take. It represents the actual number of
                items returned in the response.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-TotalResults:
              description: The total number of results regardless of paging.
              explode: false
              schema:
                type: integer
              style: simple
      summary: Overviews of domains
      tags:
      - Domains
      x-openapi-router-controller: openapi_server.controllers.domains_controller
  /domains/registrations:
    post:
      description: Registers an available domain.<br />Domain names with extension
        '.ca' are only available for registrants with country code 'CA'.
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDomain'
        description: ""
        x-body-name: body
      responses:
        "202":
          description: Success
      summary: Register a domain
      tags:
      - Domains
      x-openapi-router-controller: openapi_server.controllers.domains_controller
      x-codegen-request-body-name: body
  /domains/transfers:
    post:
      description: Transfers a domain with a transfer authorization code.<br />Domain
        names with extension '.ca' are only available for registrants with country
        code 'CA'.
      operationId: transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferDomain'
        description: ""
        x-body-name: body
      responses:
        "202":
          description: Success
      summary: Transfer a domain
      tags:
      - Domains
      x-openapi-router-controller: openapi_server.controllers.domains_controller
      x-codegen-request-body-name: body
  /domains/{domainName}:
    get:
      operationId: get_domain
      parameters:
      - description: The domain name
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: The domain name
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainDetail'
          description: Success
      summary: Details of a domain
      tags:
      - Domains
      x-openapi-router-controller: openapi_server.controllers.domains_controller
  /domains/{domainName}/nameservers:
    put:
      description: ""
      operationId: edit_name_servers
      parameters:
      - description: The domain name
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: The domain name
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditNameServers'
        description: ""
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Edit domain name servers
      tags:
      - Domains
      x-openapi-router-controller: openapi_server.controllers.domains_controller
      x-codegen-request-body-name: body
  /domains/{domainName}/renew:
    put:
      description: "Allowed if can_toggle_renew is true on the domain detail:<br /><ul><li>If\
        \ there are no unpaid invoices for the domain name anymore.</li><li>If the\
        \ renewal won't start within 1 month.</li></ul>\r\nAllowed if the requesting\
        \ user has the finance role."
      operationId: configure_domain
      parameters:
      - description: The domain name
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: The domain name
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditDomainWillRenewRequest'
        description: Contains the domain renew information
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Edit domain name renew state
      tags:
      - Domains
      x-openapi-router-controller: openapi_server.controllers.domains_controller
      x-codegen-request-body-name: body
  /linuxhostings:
    get:
      operationId: get_linux_hostings
      parameters:
      - description: The number of items to skip in the resultset.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          description: The number of items to skip in the resultset.
          format: int32
          type: integer
        style: form
      - description: The number of items to return in the resultset. The returned
          count can be equal or less than this number.
        explode: true
        in: query
        name: take
        required: false
        schema:
          description: The number of items to return in the resultset. The returned
            count can be equal or less than this number.
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LinuxHosting'
                type: array
          description: Success
          headers:
            X-Paging-Skipped:
              description: The number of results that have been skipped.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-Take:
              description: The number of items in the current take. The number might
                differ from the requested take. It represents the actual number of
                items returned in the response.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-TotalResults:
              description: The total number of results regardless of paging.
              explode: false
              schema:
                type: integer
              style: simple
      summary: Overview of linux hostings
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
  /linuxhostings/{domainName}:
    get:
      operationId: get_linux_hosting
      parameters:
      - description: The Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: The Linux hosting domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinuxHostingDetail'
          description: Success
      summary: Linux hosting detail
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
  /linuxhostings/{domainName}/ftp/configuration:
    put:
      operationId: configure_ftp
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtpConfiguration'
        description: ""
        x-body-name: body
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
      summary: Configure FTP
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/phpsettings/apcu:
    put:
      operationId: change_apcu
      parameters:
      - description: Linux hosting domain name
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePhpAPcuRequest'
        description: Php APcu config
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Configure PHP APCu setting
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/phpsettings/availableversions:
    get:
      operationId: get_available_php_versions
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PhpVersion'
                type: array
          description: Success
      summary: Get the available PHP versions.
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
  /linuxhostings/{domainName}/phpsettings/memorylimit:
    put:
      operationId: change_php_memory_limit
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePhpMemoryLimitRequest'
        description: Memory limit config
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Configure PHP memory limit
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/phpsettings/version:
    put:
      operationId: change_php_version
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhpVersion'
        description: The new PHP version.
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Change the Linux hosting PHP version.
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/scheduledtasks:
    get:
      description: Manage scheduled tasks which are also manageable via the control
        panel.
      operationId: get_scheduled_tasks
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScheduledTask'
                type: array
          description: Success
      summary: Overview of scheduled tasks
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
    post:
      operationId: add_scheduled_tasks
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledTask'
        description: ""
        x-body-name: body
      responses:
        "201":
          description: Success
          headers:
            Location:
              description: The location of the created resource.
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a scheduled task
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/scheduledtasks/{scheduledTaskId}:
    delete:
      operationId: delete_scheduled_task
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Id of the scheduled task.
        explode: true
        in: query
        name: scheduled_task_id
        required: true
        schema:
          description: Id of the scheduled task.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: scheduledTaskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
      summary: Delete a scheduled task
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
    get:
      operationId: get_scheduled_task
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Id of the scheduled task.
        explode: true
        in: query
        name: scheduled_task_id
        required: true
        schema:
          description: Id of the scheduled task.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: scheduledTaskId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledTask'
          description: Success
      summary: Get scheduled task detail
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
    put:
      operationId: configure_scheduled_task
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Id of the scheduled task.
        explode: true
        in: query
        name: scheduled_task_id
        required: true
        schema:
          description: Id of the scheduled task.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: scheduledTaskId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledTask'
        description: ""
        x-body-name: body
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
      summary: Configure a scheduled task
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/settings/gzipcompression:
    put:
      operationId: change_gzip_compression
      parameters:
      - description: Linux hosting domain name
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GzipConfig'
        description: Whether GZIP compression is enabled or not.
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Enable/disable GZIP compression
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/sites/{siteName}/hostheaders:
    post:
      operationId: create_host_header
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Name of the site on the linux hosting.
        explode: true
        in: query
        name: site_name
        required: true
        schema:
          description: Name of the site on the linux hosting.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: siteName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddHostHeaderRequest'
        description: Add host header request
        x-body-name: body
      responses:
        "201":
          description: Success
          headers:
            Location:
              description: The location of the created resource.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a host header
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/sites/{siteName}/http2/configuration:
    put:
      operationId: configure_http2
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: "Site name where HTTP/2 should be configured.<br />\r\nFor HTTP/2\
          \ to work correctly, the site must have ssl enabled."
        explode: true
        in: query
        name: site_name
        required: true
        schema:
          description: "Site name where HTTP/2 should be configured.<br />\r\nFor\
            \ HTTP/2 to work correctly, the site must have ssl enabled."
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: siteName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Http2Configuration'
        description: ""
        x-body-name: body
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
      summary: Configure HTTP/2
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/ssh/configuration:
    put:
      operationId: configure_ssh
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SshConfiguration'
        description: ""
        x-body-name: body
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
      summary: Configure SSH
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/ssh/keys:
    get:
      operationId: get_ssh_keys
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SshKey'
                type: array
          description: Success
      summary: Overview of SSH keys
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
    post:
      operationId: add_ssh_key
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSshKeyRequest'
        description: SSH key public key.
        x-body-name: body
      responses:
        "201":
          description: Success
          headers:
            Location:
              description: The location of the created resource.
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a SSH key
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/ssh/keys/{fingerprint}:
    delete:
      operationId: delete_ssh_key
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Fingerprint of public key.
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          description: Fingerprint of public key.
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
      summary: Delete a SSH key
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
  /linuxhostings/{domainName}/sslsettings/{hostname}/autoredirect:
    put:
      operationId: change_auto_redirect
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Specific hostname.
        explode: false
        in: path
        name: hostname
        required: true
        schema:
          description: Specific hostname.
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoRedirectConfig'
        description: Auto redirect config.
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Configure auto redirect
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/sslsettings/{hostname}/letsencrypt:
    put:
      operationId: change_lets_encrypt
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Specific hostname.
        explode: false
        in: path
        name: hostname
        required: true
        schema:
          description: Specific hostname.
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LetsEncryptConfig'
        description: Let's encrypt config.
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Configure let's encrypt
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/subsites:
    post:
      operationId: create_subsite
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSubsiteRequest'
        description: Add subsite request
        x-body-name: body
      responses:
        "201":
          description: Success
          headers:
            Location:
              description: The location of the created resource.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a subsite
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
      x-codegen-request-body-name: body
  /linuxhostings/{domainName}/subsites/{siteName}:
    delete:
      operationId: delete_subsite
      parameters:
      - description: Linux hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Linux hosting domain name.
          type: string
        style: form
      - description: Name of the site on the linux hosting.
        explode: true
        in: query
        name: site_name
        required: true
        schema:
          description: Name of the site on the linux hosting.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: siteName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
      summary: Delete a subsite
      tags:
      - Linux hostings
      x-openapi-router-controller: openapi_server.controllers.linux_hostings_controller
  /mailboxes:
    get:
      description: Currently only supports getting the mailboxes filtered by domain
        name.
      operationId: get_mailboxes
      parameters:
      - description: Obligated domain name for getting mailboxes.
        explode: true
        in: query
        name: domain_name
        required: false
        schema:
          description: Obligated domain name for getting mailboxes.
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Mailbox'
                type: array
          description: Success
      summary: Gets your mailboxes.
      tags:
      - Mailboxes
      x-openapi-router-controller: openapi_server.controllers.mailboxes_controller
    post:
      operationId: create_mailbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMailboxRequest'
        description: The add mailbox request.
        x-body-name: body
      responses:
        "201":
          description: Success
          headers:
            Location:
              description: The location of the created resource.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a new mailbox.
      tags:
      - Mailboxes
      x-openapi-router-controller: openapi_server.controllers.mailboxes_controller
      x-codegen-request-body-name: body
  /mailboxes/{mailboxName}:
    delete:
      operationId: delete_mailbox
      parameters:
      - description: Mailbox name.
        explode: true
        in: query
        name: mailbox_name
        required: true
        schema:
          description: Mailbox name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: mailboxName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
      summary: Delete a mailbox
      tags:
      - Mailboxes
      x-openapi-router-controller: openapi_server.controllers.mailboxes_controller
    get:
      operationId: get_mailbox
      parameters:
      - description: Mailbox name.
        explode: true
        in: query
        name: mailbox_name
        required: true
        schema:
          description: Mailbox name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: mailboxName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailboxDetail'
          description: Success
      summary: Get a specific mailbox
      tags:
      - Mailboxes
      x-openapi-router-controller: openapi_server.controllers.mailboxes_controller
  /mailboxes/{mailboxName}/autoforward:
    put:
      operationId: configure_mailbox_auto_forward
      parameters:
      - description: Mailbox name.
        explode: true
        in: query
        name: mailbox_name
        required: true
        schema:
          description: Mailbox name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: mailboxName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoForward'
        description: Contains the auto-forward information.
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Configure auto-forward for mailbox
      tags:
      - Mailboxes
      x-openapi-router-controller: openapi_server.controllers.mailboxes_controller
      x-codegen-request-body-name: body
  /mailboxes/{mailboxName}/autoreply:
    put:
      operationId: configure_mailbox_auto_reply
      parameters:
      - description: Mailbox name.
        explode: true
        in: query
        name: mailbox_name
        required: true
        schema:
          description: Mailbox name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: mailboxName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoReply'
        description: Contains the auto-reply information.
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Configure auto-reply for mailbox
      tags:
      - Mailboxes
      x-openapi-router-controller: openapi_server.controllers.mailboxes_controller
      x-codegen-request-body-name: body
  /mailboxes/{mailboxName}/password:
    put:
      operationId: change_mailbox_password
      parameters:
      - description: Mailbox name.
        explode: true
        in: query
        name: mailbox_name
        required: true
        schema:
          description: Mailbox name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: mailboxName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMailboxPasswordRequest'
        description: Contains the new password.
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Change password for mailbox
      tags:
      - Mailboxes
      x-openapi-router-controller: openapi_server.controllers.mailboxes_controller
      x-codegen-request-body-name: body
  /mailzones/{domainName}:
    get:
      operationId: get_mail_zone
      parameters:
      - description: Mail zone domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Mail zone domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailZone'
          description: Success
      summary: Get the mail zone.
      tags:
      - Mail zones
      x-openapi-router-controller: openapi_server.controllers.mail_zones_controller
  /mailzones/{domainName}/aliases:
    post:
      operationId: create_alias
      parameters:
      - description: Mail zone domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Mail zone domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAliasRequest'
        description: Contains the alias information.
        x-body-name: body
      responses:
        "201":
          description: Success
          headers:
            Location:
              description: The location of the created resource.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
      summary: Create a new alias
      tags:
      - Mail zones
      x-openapi-router-controller: openapi_server.controllers.mail_zones_controller
      x-codegen-request-body-name: body
  /mailzones/{domainName}/aliases/{emailAddress}:
    delete:
      operationId: delete_alias
      parameters:
      - description: Mail zone domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Mail zone domain name.
          type: string
        style: form
      - description: Alias e-mail address.
        explode: true
        in: query
        name: email_address
        required: true
        schema:
          description: Alias e-mail address.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: emailAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
      summary: Delete a alias
      tags:
      - Mail zones
      x-openapi-router-controller: openapi_server.controllers.mail_zones_controller
    put:
      operationId: configure_alias
      parameters:
      - description: Mail zone domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Mail zone domain name.
          type: string
        style: form
      - description: Alias e-mail address.
        explode: true
        in: query
        name: email_address
        required: true
        schema:
          description: Alias e-mail address.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: emailAddress
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAliasRequest'
        description: Contains the alias information.
        x-body-name: body
      responses:
        "202":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
      summary: Configure a alias
      tags:
      - Mail zones
      x-openapi-router-controller: openapi_server.controllers.mail_zones_controller
      x-codegen-request-body-name: body
  /mailzones/{domainName}/antispam:
    put:
      operationId: configure_anti_spam
      parameters:
      - description: Mail zone domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Mail zone domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAntiSpamRequest'
        description: Contains the anti-spam information.
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Configure anti-spam for mail zone
      tags:
      - Mail zones
      x-openapi-router-controller: openapi_server.controllers.mail_zones_controller
      x-codegen-request-body-name: body
  /mailzones/{domainName}/catchall:
    post:
      operationId: create_catch_all
      parameters:
      - description: Mail zone domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Mail zone domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCatchAllRequest'
        description: Contains the catch-all information.
        x-body-name: body
      responses:
        "201":
          description: Success
          headers:
            Location:
              description: The location of the created resource.
              explode: false
              schema:
                type: string
              style: simple
      summary: Create a catch-all on the mail zone
      tags:
      - Mail zones
      x-openapi-router-controller: openapi_server.controllers.mail_zones_controller
      x-codegen-request-body-name: body
  /mailzones/{domainName}/catchall/{emailAddress}:
    delete:
      operationId: delete_catch_all
      parameters:
      - description: Mail zone domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Mail zone domain name.
          type: string
        style: form
      - description: E-mail address to which all e-mails are sent to inexistent mailboxes
          or aliases.
        explode: true
        in: query
        name: email_address
        required: true
        schema:
          description: E-mail address to which all e-mails are sent to inexistent
            mailboxes or aliases.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: emailAddress
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
      summary: Delete a catch-all on the mail zone
      tags:
      - Mail zones
      x-openapi-router-controller: openapi_server.controllers.mail_zones_controller
  /mailzones/{domainName}/smtpdomains:
    post:
      operationId: create_smtp_domain
      parameters:
      - description: Mail zone domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Mail zone domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSmtpDomainRequest'
        description: Contains the smtp domain information.
        x-body-name: body
      responses:
        "201":
          description: Success
          headers:
            Location:
              description: The location of the created resource.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
      summary: Create an extra smtp domain
      tags:
      - Mail zones
      x-openapi-router-controller: openapi_server.controllers.mail_zones_controller
      x-codegen-request-body-name: body
  /mailzones/{domainName}/smtpdomains/{hostname}:
    delete:
      operationId: delete_smtp_domain
      parameters:
      - description: Mail zone domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Mail zone domain name.
          type: string
        style: form
      - description: Smtp domain name.
        explode: false
        in: path
        name: hostname
        required: true
        schema:
          description: Smtp domain name.
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
      summary: Delete an extra smtp domain
      tags:
      - Mail zones
      x-openapi-router-controller: openapi_server.controllers.mail_zones_controller
    put:
      operationId: configure_smtp_domain
      parameters:
      - description: Mail zone domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: Mail zone domain name.
          type: string
        style: form
      - description: Smtp domain name.
        explode: false
        in: path
        name: hostname
        required: true
        schema:
          description: Smtp domain name.
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSmtpDomainRequest'
        description: Contains the smtp domain information.
        x-body-name: body
      responses:
        "202":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
      summary: Configure an extra smtp domain
      tags:
      - Mail zones
      x-openapi-router-controller: openapi_server.controllers.mail_zones_controller
      x-codegen-request-body-name: body
  /mysqldatabases:
    get:
      operationId: get_my_sql_databases
      parameters:
      - description: The number of items to skip in the resultset.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          description: The number of items to skip in the resultset.
          format: int32
          type: integer
        style: form
      - description: The number of items to return in the resultset. The returned
          count can be equal or less than this number.
        explode: true
        in: query
        name: take
        required: false
        schema:
          description: The number of items to return in the resultset. The returned
            count can be equal or less than this number.
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MySqlDatabase'
                type: array
          description: Success
          headers:
            X-Paging-Skipped:
              description: The number of results that have been skipped.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-Take:
              description: The number of items in the current take. The number might
                differ from the requested take. It represents the actual number of
                items returned in the response.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-TotalResults:
              description: The total number of results regardless of paging.
              explode: false
              schema:
                type: integer
              style: simple
      summary: Overview of mysql databases
      tags:
      - MySql databases
      x-openapi-router-controller: openapi_server.controllers.my_sql_databases_controller
    post:
      operationId: create_my_sql_database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMySqlDatabase'
        description: ""
        x-body-name: body
      responses:
        "202":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
      summary: Create a new mysql database
      tags:
      - MySql databases
      x-openapi-router-controller: openapi_server.controllers.my_sql_databases_controller
      x-codegen-request-body-name: body
  /mysqldatabases/{databaseName}:
    delete:
      operationId: delete_database
      parameters:
      - description: Name of the database.
        explode: true
        in: query
        name: database_name
        required: true
        schema:
          description: Name of the database.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
      summary: Delete a mysql database
      tags:
      - MySql databases
      x-openapi-router-controller: openapi_server.controllers.my_sql_databases_controller
    get:
      operationId: get_my_sql_database
      parameters:
      - explode: true
        in: query
        name: database_name
        required: true
        schema:
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MySqlDatabase'
          description: Success
      summary: Get a specific database
      tags:
      - MySql databases
      x-openapi-router-controller: openapi_server.controllers.my_sql_databases_controller
  /mysqldatabases/{databaseName}/users:
    get:
      operationId: get_database_users
      parameters:
      - description: Name of the database.
        explode: true
        in: query
        name: database_name
        required: true
        schema:
          description: Name of the database.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MySqlUser'
                type: array
          description: Success
      summary: Overview of mysql users
      tags:
      - MySql databases
      x-openapi-router-controller: openapi_server.controllers.my_sql_databases_controller
    post:
      description: The creation of a new mysql user will result in a user with read_only
        rights.
      operationId: create_my_sql_user
      parameters:
      - description: Name of the database.
        explode: true
        in: query
        name: database_name
        required: true
        schema:
          description: Name of the database.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMySqlUser'
        description: ""
        x-body-name: body
      responses:
        "202":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: Bad Request
      summary: Create a new mysql user
      tags:
      - MySql databases
      x-openapi-router-controller: openapi_server.controllers.my_sql_databases_controller
      x-codegen-request-body-name: body
  /mysqldatabases/{databaseName}/users/{userName}:
    delete:
      description: The deletion of a mysql user is allowed for users with read_only
        rights.
      operationId: delete_database_user
      parameters:
      - description: Name of the database.
        explode: true
        in: query
        name: database_name
        required: true
        schema:
          description: Name of the database.
          type: string
        style: form
      - description: Name of the user.
        explode: true
        in: query
        name: user_name
        required: true
        schema:
          description: Name of the user.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "400":
          description: Bad Request
      summary: Delete a mysql user
      tags:
      - MySql databases
      x-openapi-router-controller: openapi_server.controllers.my_sql_databases_controller
  /mysqldatabases/{databaseName}/users/{userName}/password:
    put:
      operationId: change_database_user_password
      parameters:
      - description: Name of the database.
        explode: true
        in: query
        name: database_name
        required: true
        schema:
          description: Name of the database.
          type: string
        style: form
      - description: Name of the user.
        explode: true
        in: query
        name: user_name
        required: true
        schema:
          description: Name of the user.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPasswordRequest'
        description: Contains the new password.
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Change password for mysql user
      tags:
      - MySql databases
      x-openapi-router-controller: openapi_server.controllers.my_sql_databases_controller
      x-codegen-request-body-name: body
  /mysqldatabases/{databaseName}/users/{userName}/status:
    put:
      operationId: change_database_user_status
      parameters:
      - description: Name of the database.
        explode: true
        in: query
        name: database_name
        required: true
        schema:
          description: Name of the database.
          type: string
        style: form
      - description: Name of the user.
        explode: true
        in: query
        name: user_name
        required: true
        schema:
          description: Name of the user.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserStatusRequest'
        description: Whether the user is enabled or not.
        x-body-name: body
      responses:
        "204":
          description: Success
      summary: Enable/disable mysql user
      tags:
      - MySql databases
      x-openapi-router-controller: openapi_server.controllers.my_sql_databases_controller
      x-codegen-request-body-name: body
  /provisioningjobs/{jobId}:
    get:
      description: "Provisioning failures may occur. Contact support in the event\
        \ of a failure or wait for error resolution.<br />\r\nDo NOT retry provisioning\
        \ until the job reports finished or cancelled."
      operationId: provisioningjobs_job_id_get
      parameters:
      - explode: true
        in: query
        name: job_id
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningJobInfo'
          description: Success
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningJobCompletion'
          description: Success
          headers:
            Location:
              description: The location of the created resource.
              explode: false
              schema:
                type: string
              style: simple
      summary: Detail of a provisioning job
      tags:
      - Provisioning jobs
      x-openapi-router-controller: openapi_server.controllers.provisioning_jobs_controller
  /servicepacks:
    get:
      operationId: servicepacks
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Servicepack'
                type: array
          description: Success
      summary: Overview of service packs
      tags:
      - Servicepacks
      x-openapi-router-controller: openapi_server.controllers.servicepacks_controller
  /ssh:
    get:
      operationId: get_all_ssh_keys
      parameters:
      - description: The number of items to skip in the resultset.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          description: The number of items to skip in the resultset.
          format: int32
          type: integer
        style: form
      - description: The number of items to return in the resultset. The returned
          count can be equal or less than this number.
        explode: true
        in: query
        name: take
        required: false
        schema:
          description: The number of items to return in the resultset. The returned
            count can be equal or less than this number.
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SshKeyDetail'
                type: array
          description: Success
          headers:
            X-Paging-Skipped:
              description: The number of results that have been skipped.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-Take:
              description: The number of items in the current take. The number might
                differ from the requested take. It represents the actual number of
                items returned in the response.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-TotalResults:
              description: The total number of results regardless of paging.
              explode: false
              schema:
                type: integer
              style: simple
      summary: Overview of SSH keys
      tags:
      - SSH
      x-openapi-router-controller: openapi_server.controllers.ssh_controller
  /sslcertificaterequests:
    get:
      operationId: get_ssl_certificate_requests
      parameters:
      - description: The number of items to skip in the resultset.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          description: The number of items to skip in the resultset.
          format: int32
          type: integer
        style: form
      - description: The number of items to return in the resultset. The returned
          count can be equal or less than this number.
        explode: true
        in: query
        name: take
        required: false
        schema:
          description: The number of items to return in the resultset. The returned
            count can be equal or less than this number.
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SslCertificateRequest'
                type: array
          description: Success
          headers:
            X-Paging-Skipped:
              description: The number of results that have been skipped.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-Take:
              description: The number of items in the current take. The number might
                differ from the requested take. It represents the actual number of
                items returned in the response.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-TotalResults:
              description: The total number of results regardless of paging.
              explode: false
              schema:
                type: integer
              style: simple
      summary: Overview of SSL certificate requests
      tags:
      - SSL certificate requests
      x-openapi-router-controller: openapi_server.controllers.ssl_certificate_requests_controller
    post:
      description: "Executing this method causes the purchase of a paying product.<br\
        \ />\r\nLog on to our website to see your current (renewal) prices or contact\
        \ our Sales department.<br />\r\nPlease note that promotional pricing does\
        \ not apply for purchases made through our API."
      operationId: add_ssl_certificate_request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSslCertificateRequest'
        description: ""
        x-body-name: body
      responses:
        "201":
          description: Success
          headers:
            Location:
              description: The location of the created resource.
              explode: false
              schema:
                type: string
              style: simple
      summary: Add a SSL certificate request
      tags:
      - SSL certificate requests
      x-openapi-router-controller: openapi_server.controllers.ssl_certificate_requests_controller
      x-codegen-request-body-name: body
  /sslcertificaterequests/{id}:
    get:
      operationId: get_ssl_certificate_request
      parameters:
      - description: The id of the certificate request.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The id of the certificate request.
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCertificateRequestDetail'
          description: Success
        "303":
          description: Redirect
          headers:
            Location:
              description: The location referring to a resource that replaced the
                original resource.
              explode: false
              schema:
                type: string
              style: simple
        "410":
          description: "The resource existed in the past, but is no longer available."
      summary: Detail of a SSL certificate request
      tags:
      - SSL certificate requests
      x-openapi-router-controller: openapi_server.controllers.ssl_certificate_requests_controller
    put:
      operationId: verify_ssl_certificate_request_domain_validations
      parameters:
      - description: The id of the certificate request.
        explode: false
        in: path
        name: id
        required: true
        schema:
          description: The id of the certificate request.
          format: int32
          type: integer
        style: simple
      responses:
        "202":
          description: Success
        "303":
          description: Redirect
          headers:
            Location:
              description: The location referring to a resource that replaced the
                original resource.
              explode: false
              schema:
                type: string
              style: simple
        "410":
          description: "The resource existed in the past, but is no longer available."
      summary: Verify the SSL certificate request domain validations
      tags:
      - SSL certificate requests
      x-openapi-router-controller: openapi_server.controllers.ssl_certificate_requests_controller
  /sslcertificates:
    get:
      operationId: get_ssl_certificates
      parameters:
      - description: The number of items to skip in the resultset.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          description: The number of items to skip in the resultset.
          format: int32
          type: integer
        style: form
      - description: The number of items to return in the resultset. The returned
          count can be equal or less than this number.
        explode: true
        in: query
        name: take
        required: false
        schema:
          description: The number of items to return in the resultset. The returned
            count can be equal or less than this number.
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SslCertificate'
                type: array
          description: Success
          headers:
            X-Paging-Skipped:
              description: The number of results that have been skipped.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-Take:
              description: The number of items in the current take. The number might
                differ from the requested take. It represents the actual number of
                items returned in the response.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-TotalResults:
              description: The total number of results regardless of paging.
              explode: false
              schema:
                type: integer
              style: simple
      summary: Overview of SSL certificates
      tags:
      - SSL certificates
      x-openapi-router-controller: openapi_server.controllers.ssl_certificates_controller
  /sslcertificates/{sha1Fingerprint}:
    get:
      operationId: get_ssl_certificate
      parameters:
      - description: The SHA-1 fingerprint of the certificate.
        explode: true
        in: query
        name: sha1_fingerprint
        required: true
        schema:
          description: The SHA-1 fingerprint of the certificate.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: sha1Fingerprint
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SslCertificateDetail'
          description: Success
      summary: Detail of a SSL certificate
      tags:
      - SSL certificates
      x-openapi-router-controller: openapi_server.controllers.ssl_certificates_controller
  /sslcertificates/{sha1Fingerprint}/download:
    get:
      description: Returns the certifcate as binary data with the content-type and
        the filename information in the response headers.
      operationId: download_certificate
      parameters:
      - description: The SHA-1 fingerprint of the certificate.
        explode: true
        in: query
        name: sha1_fingerprint
        required: true
        schema:
          description: The SHA-1 fingerprint of the certificate.
          type: string
        style: form
      - description: "The file format of the returned file stream:\r\n<ul><li>PFX:\
          \ Also known as PKCS #12, is a single, password protected certificate archive\
          \ that contains the entire certificate chain plus the matching private key.</li></ul>"
        explode: true
        in: query
        name: file_format
        required: true
        schema:
          $ref: '#/components/schemas/SslCertificateFileFormat'
        style: form
      - description: The password used to protect the certificate file.<br />
        explode: true
        in: query
        name: password
        required: true
        schema:
          description: The password used to protect the certificate file.<br />
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: sha1Fingerprint
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          description: Invalid file_format or invalid password
      summary: Download a SSL certificate
      tags:
      - SSL certificates
      x-openapi-router-controller: openapi_server.controllers.ssl_certificates_controller
  /windowshostings:
    get:
      operationId: get_windows_hostings
      parameters:
      - description: The number of items to skip in the resultset.
        explode: true
        in: query
        name: skip
        required: false
        schema:
          description: The number of items to skip in the resultset.
          format: int32
          type: integer
        style: form
      - description: The number of items to return in the resultset. The returned
          count can be equal or less than this number.
        explode: true
        in: query
        name: take
        required: false
        schema:
          description: The number of items to return in the resultset. The returned
            count can be equal or less than this number.
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WindowsHosting'
                type: array
          description: Success
          headers:
            X-Paging-Skipped:
              description: The number of results that have been skipped.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-Take:
              description: The number of items in the current take. The number might
                differ from the requested take. It represents the actual number of
                items returned in the response.
              explode: false
              schema:
                type: integer
              style: simple
            X-Paging-TotalResults:
              description: The total number of results regardless of paging.
              explode: false
              schema:
                type: integer
              style: simple
      summary: Overview of windows hostings
      tags:
      - Windows hostings
      x-openapi-router-controller: openapi_server.controllers.windows_hostings_controller
  /windowshostings/{domainName}:
    get:
      operationId: get_windows_hosting
      parameters:
      - description: The Windows hosting domain name.
        explode: true
        in: query
        name: domain_name
        required: true
        schema:
          description: The Windows hosting domain name.
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WindowsHostingDetail'
          description: Success
      summary: Windows hosting detail
      tags:
      - Windows hostings
      x-openapi-router-controller: openapi_server.controllers.windows_hostings_controller
components:
  schemas:
    Account:
      additionalProperties: false
      example:
        identifier: identifier
        servicepack_id: 6
        id: 0
      properties:
        id:
          description: The id of the account
          format: int32
          title: id
          type: integer
        identifier:
          description: Identifier for the account
          title: identifier
          type: string
        servicepack_id:
          description: The servicepack id that defines the account.
          format: int32
          title: servicepack_id
          type: integer
      title: Account
      type: object
    AccountDetail:
      additionalProperties: false
      description: A detailed representation of an account.
      example:
        identifier: identifier
        addons:
        - name: name
          id: 0
        - name: name
          id: 0
        servicepack:
          name: name
          id: 1
        id: 6
      properties:
        addons:
          description: A list of addons applied to the account.
          items:
            $ref: '#/components/schemas/Addon'
          title: addons
          type: array
        id:
          description: The id of the account
          format: int32
          title: id
          type: integer
        identifier:
          description: Identifier for the account
          title: identifier
          type: string
        servicepack:
          $ref: '#/components/schemas/Servicepack'
      title: AccountDetail
      type: object
    AddHostHeaderRequest:
      additionalProperties: false
      example:
        domain_name: domain_name
      properties:
        domain_name:
          description: Host header domain name (e.g. alias.be or alias.site.be).
          title: domain_name
          type: string
      title: AddHostHeaderRequest
      type: object
    AddSshKeyRequest:
      additionalProperties: false
      example:
        public_key: public_key
      properties:
        public_key:
          description: Public key
          title: public_key
          type: string
      title: AddSshKeyRequest
      type: object
    AddSubsiteRequest:
      additionalProperties: false
      example:
        path: path
        domain_name: domain_name
      properties:
        domain_name:
          description: Subsite domain name (e.g. alias.be or subsite.site.be).
          title: domain_name
          type: string
        path:
          description: "Folder location for the subsite (when empty we use /subsites/site\
            \ (e.g. /subsites/subsite.site.be)<br />\r\nThe path MUST pre-exist on\
            \ the server. It WILL NOT be created automatically."
          title: path
          type: string
      title: AddSubsiteRequest
      type: object
    AdditionalValidationAttribute:
      additionalProperties: false
      example:
        name: name
        value: value
      properties:
        name:
          description: Additional validation attribute field name.
          title: name
          type: string
        value:
          description: Additional validation attribute field value.
          title: value
          type: string
      title: AdditionalValidationAttribute
      type: object
    Addon:
      additionalProperties: false
      description: Addon information
      example:
        name: name
        id: 0
      properties:
        id:
          description: The id of the addon
          format: int32
          title: id
          type: integer
        name:
          description: The name of the addon
          title: name
          type: string
      title: Addon
      type: object
    Alias:
      additionalProperties: false
      example:
        email_address: email_address
        destinations:
        - destinations
        - destinations
      properties:
        destinations:
          description: The alias destination e-mail addresses
          items:
            type: string
          title: destinations
          type: array
        email_address:
          description: The alias e-mail address
          title: email_address
          type: string
      title: Alias
      type: object
    AntiSpam:
      additionalProperties: false
      example:
        allowed_types:
        - none
        - none
        type: null
      properties:
        allowed_types:
          description: Allowed types of anti-spam scanning for this mail zone
          items:
            $ref: '#/components/schemas/AntiSpamTypes'
          title: allowed_types
          type: array
        type:
          $ref: '#/components/schemas/AntiSpamTypes'
      title: AntiSpam
      type: object
    AntiSpamTypes:
      description: Types of anti-spam scanning
      enum:
      - none
      - advanced
      - basic
      title: AntiSpamTypes
      type: string
    ApplicationPool:
      additionalProperties: false
      description: The application pool for the hosting account.
      example:
        installed_net_core_runtimes:
        - installed_net_core_runtimes
        - installed_net_core_runtimes
        pipeline_mode: pipeline_mode
        runtime: runtime
      properties:
        installed_net_core_runtimes:
          description: The installed .NET Core runtimes for the hosting account.
          items:
            type: string
          title: installed_net_core_runtimes
          type: array
        pipeline_mode:
          description: The active pipeline mode for the hosting account.
          title: pipeline_mode
          type: string
        runtime:
          description: The active runtime for the hosting account.
          title: runtime
          type: string
      title: ApplicationPool
      type: object
    AssetType:
      description: Asset types
      enum:
      - domain
      - linux_hosting
      - mysql
      - dns
      - mailbox
      - windows_hosting
      title: AssetType
      type: string
    AutoForward:
      additionalProperties: false
      example:
        email_addresses:
        - email_addresses
        - email_addresses
        copy_to_myself: true
        enabled: true
      properties:
        copy_to_myself:
          description: Copy to myself
          title: copy_to_myself
          type: boolean
        email_addresses:
          description: E-mail addresses to which e-mails are forwarded
          items:
            type: string
          title: email_addresses
          type: array
        enabled:
          description: Enabled
          title: enabled
          type: boolean
      title: AutoForward
      type: object
    AutoRedirectConfig:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          description: Enabled
          title: enabled
          type: boolean
      title: AutoRedirectConfig
      type: object
    AutoReply:
      additionalProperties: false
      example:
        subject: subject
        message: message
        enabled: true
      properties:
        enabled:
          description: Enabled
          title: enabled
          type: boolean
        message:
          description: Message
          title: message
          type: string
        subject:
          description: Subject
          title: subject
          type: string
      title: AutoReply
      type: object
    BadRequestResponse:
      additionalProperties: false
      example:
        validation_errors:
        - error_text: error_text
          error_code: error_code
        - error_text: error_text
          error_code: error_code
      properties:
        validation_errors:
          description: A list of validation errors that occurred when processing the
            request.
          items:
            $ref: '#/components/schemas/ValidationErrorMessage'
          title: validation_errors
          type: array
      title: BadRequestResponse
      type: object
    CatchAll:
      additionalProperties: false
      example:
        email_addresses:
        - email_addresses
        - email_addresses
      properties:
        email_addresses:
          description: E-mail addresses to which all e-mails are sent to inexistent
            mailboxes or aliases
          items:
            type: string
          title: email_addresses
          type: array
      title: CatchAll
      type: object
    CompletionEstimation:
      additionalProperties: false
      example:
        estimate: 2000-01-23T04:56:07.000+00:00
      properties:
        estimate:
          description: "The estimated time when the job should be finished.<br />\r\
            \nUnexpected delays can always occur.<br />\r\nThe value is subject to\
            \ change during the provisioning."
          format: date-time
          title: estimate
          type: string
      title: CompletionEstimation
      type: object
    CreateAccount:
      additionalProperties: false
      example:
        ftp_password: ftp_password
        identifier: identifier
        servicepack_id: 0
      properties:
        ftp_password:
          description: "Ftp password for the account.<br />\r\nApplies only if the\
            \ servicepack contains hosting.<br />\r\nPasswords have to adhere to following\
            \ rules:<br /><ul><li>Between 8-20 characters.</li><li>Must be a mix of\
            \ letters and digits.</li><li>Must contain at least one digit (0-9).</li><li>Must\
            \ contain at least one letter (a-z).</li><li>Cannot contain spaces.</li><li>Cannot\
            \ contain characters: * € $ & + } { ' \" \\ </li></ul>"
          title: ftp_password
          type: string
        identifier:
          description: "An identifier for the account.<br />\r\nShould be a domain\
            \ name for hosting accounts."
          title: identifier
          type: string
        servicepack_id:
          description: The servicepack id that defines the account.
          format: int32
          title: servicepack_id
          type: integer
      title: CreateAccount
      type: object
    CreateAliasRequest:
      additionalProperties: false
      example:
        email_address: email_address
        destinations:
        - destinations
        - destinations
      properties:
        destinations:
          description: The alias destination e-mail addresses
          items:
            type: string
          title: destinations
          type: array
        email_address:
          description: The alias e-mail
          title: email_address
          type: string
      title: CreateAliasRequest
      type: object
    CreateCatchAllRequest:
      additionalProperties: false
      example:
        email_address: email_address
      properties:
        email_address:
          description: E-mail address to which all e-mails are sent to inexistent
            mailboxes or aliases
          title: email_address
          type: string
      title: CreateCatchAllRequest
      type: object
    CreateMailboxRequest:
      additionalProperties: false
      example:
        password: password
        account_id: 0
        email_address: email_address
      properties:
        account_id:
          description: Mail zone account id
          format: int32
          title: account_id
          type: integer
        email_address:
          description: E-mail address
          title: email_address
          type: string
        password:
          description: "The password for the mailbox.<br />\r\nPasswords have to adhere\
            \ to following rules:<br /><ul><li>Between 8-20 characters.</li><li>Must\
            \ be a mix of letters and digits.</li><li>Must contain at least one digit\
            \ (0-9).</li><li>Must contain at least one letter (a-z).</li><li>Cannot\
            \ contain spaces.</li><li>Cannot contain characters: * € $ & + } { ' \"\
            \ \\ </li></ul>"
          title: password
          type: string
      title: CreateMailboxRequest
      type: object
    CreateMySqlDatabase:
      additionalProperties: false
      example:
        password: password
        account_id: 0
        database_name: database_name
      properties:
        account_id:
          description: The id of the account on which to create the database.
          format: int32
          title: account_id
          type: integer
        database_name:
          description: "The name for the database. This will be prefixed during provisioning.\r\
            \nThe provided name during creation will be different from the provisioned\
            \ database name."
          title: database_name
          type: string
        password:
          description: "The password for the database user.<br />\r\nPasswords have\
            \ to adhere to following rules:<br /><ul><li>Between 8-20 characters.</li><li>Must\
            \ be a mix of letters and digits.</li><li>Must contain at least one digit\
            \ (0-9).</li><li>Must contain at least one letter (a-z).</li><li>Cannot\
            \ contain spaces.</li><li>Cannot contain characters: * € $ & + } { ' \"\
            \ \\ </li></ul>"
          title: password
          type: string
      title: CreateMySqlDatabase
      type: object
    CreateMySqlUser:
      additionalProperties: false
      example:
        password: password
        name: name
      properties:
        name:
          description: "User name<br />\r\nUser names have to adhere to following\
            \ rules:<br /><ul><li>Between 2-14 characters.</li><li>Must be a mix of\
            \ letters and/or digits.</li><li>Must be lower cased.</li><li>Cannot contain\
            \ spaces.</li></ul>"
          title: name
          type: string
        password:
          description: "The password for the database user.<br />\r\nPasswords have\
            \ to adhere to following rules:<br /><ul><li>Between 8-20 characters.</li><li>Must\
            \ be a mix of letters and digits.</li><li>Must contain at least one digit\
            \ (0-9).</li><li>Must contain at least one letter (a-z).</li><li>Cannot\
            \ contain spaces.</li><li>Cannot contain characters: * € $ & + } { ' \"\
            \ \\ </li></ul>"
          title: password
          type: string
      title: CreateMySqlUser
      type: object
    CreateSmtpDomainRequest:
      additionalProperties: false
      example:
        hostname: hostname
      properties:
        hostname:
          description: The smtp domain name
          title: hostname
          type: string
      title: CreateSmtpDomainRequest
      type: object
    CreateSslCertificateRequest:
      additionalProperties: false
      example:
        additional_validation_attributes:
        - name: name
          value: value
        - name: name
          value: value
        csr: csr
        certificate_type: standard
        validation_level: domain_validated
      properties:
        additional_validation_attributes:
          description: "List of additional validation attributes for the certificate\
            \ when choosing organization or extended validation.\r\n<table><tr><th>Name</th><th>Info</th><th>Required</th></tr><tr><td>Firstname</td><td>Firstname\
            \ of the technical contact</td><td>Yes</td></tr><tr><td>Lastname</td><td>Lastname\
            \ of the technical contact</td><td>Yes</td></tr><tr><td>Phone</td><td>Phone\
            \ of the technical contact</td><td>Yes</td></tr><tr><td>EmailAddress</td><td>Email\
            \ address of the technical contact</td><td>Yes</td></tr><tr><td>Street</td><td>Address\
            \ street of the organization</td><td>Yes</td></tr><tr><td>Number</td><td>Address\
            \ house number of the organization</td><td>Yes</td></tr><tr><td>PostalCode</td><td>Address\
            \ postal code of the organization</td><td>Yes</td></tr><tr><td>VatCountryCode</td><td>VAT\
            \ country code of the organization, ISO 3166-1 alpha-2 country code</td><td>Yes</td></tr><tr><td>OrganizationNumber</td><td>Business\
            \ number of the organization</td><td>No</td></tr></table>"
          items:
            $ref: '#/components/schemas/AdditionalValidationAttribute'
          title: additional_validation_attributes
          type: array
        certificate_type:
          $ref: '#/components/schemas/SslCertificateType'
        csr:
          description: "The certificate signing request data.<br />\r\nThe certificate\
            \ signing request subject should contain following attributes:<br /><table><tr><th>Name</th><th>Code</th><th>Format</th></tr><tr><td>CommonName</td><td>CN</td><td>Valid\
            \ domain name, for example site.be, alias.site.be or *.site.be</td></tr><tr><td>Country</td><td>C</td><td>ISO\
            \ 3166-1 alpha-2 country code</td></tr><tr><td>State</td><td>ST</td><td></td></tr><tr><td>Locality</td><td>L</td><td></td></tr><tr><td>Organization</td><td>O</td><td></td></tr><tr><td>EmailAddress</td><td>E</td><td>Valid\
            \ email address</td></tr></table>\r\nThe certificate signing request should\
            \ also contain all the additional aliases and domains (SAN's) for the\
            \ certificate."
          title: csr
          type: string
        validation_level:
          $ref: '#/components/schemas/SslCertificateValidationLevel'
      title: CreateSslCertificateRequest
      type: object
    DnsRecord:
      additionalProperties: false
      example:
        protocol: TCP
        port: 0
        service: service
        weight: 5
        record_name: record_name
        id: id
        priority: 6
        type: type
        ttl: 1
        content: content
        target: target
      properties:
        content:
          description: "Variable data depending on the record type.\r\n<ul><li>A:\
            \ the IPv4 address.</li><li>CNAME: canonical name of an alias.</li><li>MX:\
            \ fully qualified domain name of a mail host.</li><li>SRV: does not apply.\
            \ Data for the SRV records can be found in specific properties.</li><li>TXT:\
            \ free form text data.</li><li>CAA: format should match specific values\
            \ for flag, tag and ca: \"{flag} {tag} {ca}\".\r\n        <ul><li>The\
            \ flag. The values 128 (critical) or 0 (non-critical) are expected, with\
            \ 0 as the default.</li><li>The tag. A tag specifies which actions an\
            \ authorized CA can take in terms of issuing SSL/TLS certificates.<br\
            \ /><ul><li>The value \"issue\": explicitly authorizes a single certificate\
            \ authority to issue a certificate (any type) for the hostname.</li><li>The\
            \ value \"issuewild\": explicitly authorizes a single certificate authority\
            \ to issue a wildcard certificate (and only wildcard) for the hostname.</li><li>The\
            \ value \"iodef\": specifies a URL to which a certificate authority may\
            \ report policy violations.</li></ul></li><li>The ca. This is the domain\
            \ of the CA (Certification Authority) that has the authority to issue\
            \ certificates for the domain in question. If the value is a semicolon\
            \ (;), it means that no CA has the authority to issue a certificate for\
            \ that domain.</li></ul></li><li>ALIAS: canonical name of an alias.</li><li>TLSA:\
            \ format should match specific values for usage, selector, matching type\
            \ and data: \"{usage} {selector} {matching_type} {data}\"\r\n        <ul><li>The\
            \ usage. The first field after the TLSA text in the DNS RR, specifies\
            \ how to verify the certificate.<br /><ul><li>A value of 0 is for what\
            \ is commonly called CA constraint (and PKIX-TA). The certificate provided\
            \ when establishing TLS must be issued by the listed root-CA or one of\
            \ its intermediate CAs, with a valid certification path to a root-CA already\
            \ trusted by the application doing the verification.</li><li>A value of\
            \ 1 is for what is commonly called Service certificate constraint (and\
            \ PKIX-EE). The certificate used must match the TLSA record exactly, and\
            \ it must also pass PKIX certification path validation to a trusted root-CA.</li><li>A\
            \ value of 2 is for what is commonly called Trust Anchor Assertion (and\
            \ DANE-TA). The certificate used has a valid certification path pointing\
            \ back to the certificate mention in this record, but there is no need\
            \ for it to pass the PKIX certification path validation to a trusted root-CA.</li><li>A\
            \ value of 3 is for what is commonly called Domain issued certificate\
            \ (and DANE-EE). The services uses a self-signed certificate. It is not\
            \ signed by anyone else, and is exactly this record.</li></ul></li><li>The\
            \ selector. When connecting to the service and a certificate is received,\
            \ the selector field specifies which parts of it should be checked.<br\
            \ /><ul><li>A value of 0 means to select the entire certificate for matching.</li><li>A\
            \ value of 1 means to select just the public key for certificate matching.\
            \ Matching the public key is often sufficient, as this is likely to be\
            \ unique.</li></ul></li><li>The matching type.<br /><ul><li>A type of\
            \ 0 means the entire information selected is present in the certificate\
            \ association data.</li><li>A type of 1 means to do a SHA-256 hash of\
            \ the selected data.</li><li>A type of 2 means to do a SHA-512 hash of\
            \ the selected data.</li></ul></li><li>The actual data to be matched given\
            \ the settings of the other fields. This is a long text string of hexadecimal\
            \ data.</li></ul></li></ul>"
          title: content
          type: string
        id:
          description: "The id of the record\r\nThis value is ignored for creation\
            \ of new records."
          title: id
          type: string
        port:
          description: "The port for SRV records.<br />\r\nThe value MUST be a positive\
            \ integer.<br />\r\nEditing the value is not possible. You should add\
            \ a new SRV record and delete the existing record."
          format: int32
          title: port
          type: integer
        priority:
          default: 10
          description: "The priority for MX or SRV records.<br />\r\nA lower value\
            \ means more preferred.<br />\r\nThe value MUST be a positive integer\
            \ less or equal to 9999."
          format: int32
          title: priority
          type: integer
        protocol:
          default: TCP
          description: "Used for the creation of SRV records. Possible options: TCP,\
            \ UDP, ...<br />\r\nEditing the value is not possible. You should add\
            \ a new SRV record and delete the existing record."
          title: protocol
          type: string
        record_name:
          description: "The name of the record.<br />\r\nThis is the host name, alias\
            \ defined by the record.<br />\r\nAn empty record or '@' is equal to the\
            \ domain name.<br />\r\nApplies to A, MX, CNAME, TXT, CAA, ALIAS and TLSA\
            \ records.<br />\r\nWhen type is TLSA the recommended value format is\
            \ port number, protocol and host: _25._tcp.<br />\r\nDoes not apply for\
            \ SRV records."
          title: record_name
          type: string
        service:
          description: "The symbolic name of the desired service for SRV records.<br\
            \ />\r\nEditing the value is not possible. You should add a new SRV record\
            \ and can delete the existing record."
          title: service
          type: string
        target:
          description: "The canonical hostname of the machine providing the service\
            \ for SRV records.<br />\r\nEditing the value is not possible. You should\
            \ add a new SRV record and delete the existing record."
          title: target
          type: string
        ttl:
          default: 3600
          description: "Time to live of the record in seconds.<br />\r\nIt defines\
            \ the time frame that clients can cache the information.<br />\r\nThe\
            \ value MUST be between 60 and 86400. The default value is 3600 (= 1 hour)."
          format: int32
          title: ttl
          type: integer
        type:
          description: "The type of the record (A, MX, CNAME, SRV, TXT, CAA, ALIAS\
            \ and TLSA)."
          title: type
          type: string
        weight:
          default: 0
          description: "The weight for SRV records with the same priority.<br />\r\
            \nA higher value means more preferred."
          format: int32
          title: weight
          type: integer
      title: DnsRecord
      type: object
    Domain:
      additionalProperties: false
      example:
        domain_name: domain_name
        will_renew: true
        expiration_date: 2000-01-23T04:56:07.000+00:00
      properties:
        domain_name:
          description: The domain name
          title: domain_name
          type: string
        expiration_date:
          description: Expiration date of the domain
          format: date-time
          title: expiration_date
          type: string
        will_renew:
          description: "Indication of renewal.<br />\r\nNo value indicates that the\
            \ renewal state could not be determined at the moment."
          title: will_renew
          type: boolean
      title: Domain
      type: object
    DomainDetail:
      additionalProperties: false
      example:
        domain_name: domain_name
        will_renew: true
        name_servers:
        - ip: ip
          name: name
        - ip: ip
          name: name
        registrant:
          country_code: country_code
          language_code: language_code
          address: address
          enterprise_number: enterprise_number
          city: city
          phone: phone
          company_name: company_name
          last_name: last_name
          fax: fax
          postal_code: postal_code
          first_name: first_name
          email: email
        expiration_date: 2000-01-23T04:56:07.000+00:00
        can_toggle_renew: true
      properties:
        can_toggle_renew:
          description: Indication if the domain renew state can be changed.
          title: can_toggle_renew
          type: boolean
        domain_name:
          description: The domain name
          title: domain_name
          type: string
        expiration_date:
          description: Expiration date of the domain
          format: date-time
          title: expiration_date
          type: string
        name_servers:
          description: Nameservers of the domain
          items:
            $ref: '#/components/schemas/NameServer'
          title: name_servers
          type: array
        registrant:
          $ref: '#/components/schemas/Registrant'
        will_renew:
          description: "Indication of renewal.<br />\r\nNo value indicates that the\
            \ renewal state could not be determined at the moment."
          title: will_renew
          type: boolean
      title: DomainDetail
      type: object
    EditDomainWillRenewRequest:
      additionalProperties: false
      example:
        will_renew: true
      properties:
        will_renew:
          description: Indication of renewal.
          title: will_renew
          type: boolean
      title: EditDomainWillRenewRequest
      type: object
    EditNameServers:
      additionalProperties: false
      example:
        domain_name: domain_name
        name_servers:
        - name_servers
        - name_servers
      properties:
        domain_name:
          description: The domain name to register.
          title: domain_name
          type: string
        name_servers:
          description: List of name servers.
          items:
            type: string
          title: name_servers
          type: array
      title: EditNameServers
      type: object
    ExtraField:
      additionalProperties: false
      example:
        name: name
        value: value
      properties:
        name:
          description: Registrant extra field name.
          title: name
          type: string
        value:
          description: Registrant extra field value.
          title: value
          type: string
      title: ExtraField
      type: object
    FtpConfiguration:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          description: Enable or disable FTP.
          title: enabled
          type: boolean
      title: FtpConfiguration
      type: object
    GzipConfig:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          description: Enabled
          title: enabled
          type: boolean
      title: GzipConfig
      type: object
    HostHeader:
      additionalProperties: false
      description: A host header identifies a web domain.
      example:
        name: name
        enabled: true
      properties:
        enabled:
          description: Indicates if the host header is applied on the web server.
          title: enabled
          type: boolean
        name:
          description: The name of the host header.
          title: name
          type: string
      title: HostHeader
      type: object
    Http2Configuration:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          description: Enable or disable HTTP/2.
          title: enabled
          type: boolean
      title: Http2Configuration
      type: object
    LetsEncryptConfig:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          description: Enabled
          title: enabled
          type: boolean
      title: LetsEncryptConfig
      type: object
    LinuxHosting:
      additionalProperties: false
      example:
        domain_name: domain_name
        servicepack_id: 0
      properties:
        domain_name:
          description: Domain name for the Linux hosting account.
          title: domain_name
          type: string
        servicepack_id:
          description: Id of Linux hosting service package.
          format: int32
          title: servicepack_id
          type: integer
      title: LinuxHosting
      type: object
    LinuxHostingDetail:
      additionalProperties: false
      example:
        actual_size: 0
        ssh_username: ssh_username
        ip: ip
        servicepack_id: 5
        php_version: php_version
        ssh_host: ssh_host
        ftp_username: ftp_username
        sites:
        - path: path
          host_headers:
          - name: name
            enabled: true
          - name: name
            enabled: true
          http2_enabled: true
          ssl_enabled: true
          name: name
          https_redirect_enabled: true
        - path: path
          host_headers:
          - name: name
            enabled: true
          - name: name
            enabled: true
          http2_enabled: true
          ssl_enabled: true
          name: name
          https_redirect_enabled: true
        ip_type: dedicated
        max_webspace_size: 1
        max_size: 6
        webspace_usage: 5
        domain_name: domain_name
        ftp_enabled: true
        mysql_database_names:
        - mysql_database_names
        - mysql_database_names
      properties:
        actual_size:
          description: Used webspace size in MB
          format: int32
          title: actual_size
          type: integer
        domain_name:
          description: Domain name for the Linux hosting account.
          title: domain_name
          type: string
        ftp_enabled:
          description: Indicates whether ftp is enabled for the hosting account.
          title: ftp_enabled
          type: boolean
        ftp_username:
          description: Ftp username
          title: ftp_username
          type: string
        ip:
          description: Linux hosting IP address
          title: ip
          type: string
        ip_type:
          $ref: '#/components/schemas/LinuxIpType'
        max_size:
          description: Maximum webspace size in MB
          format: int32
          title: max_size
          type: integer
        max_webspace_size:
          deprecated: true
          description: "Maximum webspace size in MB<br />\r\nUse max_size instead."
          format: int32
          title: max_webspace_size
          type: integer
        mysql_database_names:
          description: "A list of mysql databases linked to the hosting account.<br\
            \ />\r\nDetails of the database can be read using the mysql database detail."
          items:
            type: string
          title: mysql_database_names
          type: array
        php_version:
          description: The active php version for the hosting account.
          title: php_version
          type: string
        servicepack_id:
          description: Id of Linux hosting service package.
          format: int32
          title: servicepack_id
          type: integer
        sites:
          description: A list of websites on the hosting account.
          items:
            $ref: '#/components/schemas/LinuxSite'
          title: sites
          type: array
        ssh_host:
          description: Ssh host of the linux hosting account
          title: ssh_host
          type: string
        ssh_username:
          description: Ssh username
          title: ssh_username
          type: string
        webspace_usage:
          deprecated: true
          description: "Used webspace size in MB<br />\r\nUse actual_size instead."
          format: int32
          title: webspace_usage
          type: integer
      title: LinuxHostingDetail
      type: object
    LinuxIpType:
      description: Type of the hosting IP address (dedicated or shared)
      enum:
      - dedicated
      - shared
      title: LinuxIpType
      type: string
    LinuxSite:
      additionalProperties: false
      example:
        path: path
        host_headers:
        - name: name
          enabled: true
        - name: name
          enabled: true
        http2_enabled: true
        ssl_enabled: true
        name: name
        https_redirect_enabled: true
      properties:
        host_headers:
          description: Host headers for the website.
          items:
            $ref: '#/components/schemas/HostHeader'
          title: host_headers
          type: array
        http2_enabled:
          description: Indicates whether http/2 protocol is enabled for the website.
          title: http2_enabled
          type: boolean
        https_redirect_enabled:
          description: Indicates whether automatic https redirection is enabled for
            the website.
          title: https_redirect_enabled
          type: boolean
        name:
          description: The name of the website.
          title: name
          type: string
        path:
          description: The path of the website.
          title: path
          type: string
        ssl_enabled:
          description: Indicates whether ssl is enabled for the website.
          title: ssl_enabled
          type: boolean
      title: LinuxSite
      type: object
    MailZone:
      additionalProperties: false
      example:
        aliases:
        - email_address: email_address
          destinations:
          - destinations
          - destinations
        - email_address: email_address
          destinations:
          - destinations
          - destinations
        name: name
        anti_spam:
          allowed_types:
          - none
          - none
          type: null
        available_accounts:
        - account_id: 0
          size: 6
        - account_id: 0
          size: 6
        catch_all:
          email_addresses:
          - email_addresses
          - email_addresses
        smtp_domains:
        - hostname: hostname
          enabled: true
        - hostname: hostname
          enabled: true
        enabled: true
      properties:
        aliases:
          description: "List of aliases on the mail zone<br />\r\nAn alias is an e-mail\
            \ address (alias) that automatically forwards received e-mails to another\
            \ e-mail address (destination)."
          items:
            $ref: '#/components/schemas/Alias'
          title: aliases
          type: array
        anti_spam:
          $ref: '#/components/schemas/AntiSpam'
        available_accounts:
          description: List of mail zone accounts with their mailbox size.
          items:
            $ref: '#/components/schemas/MailZoneAccount'
          title: available_accounts
          type: array
        catch_all:
          $ref: '#/components/schemas/CatchAll'
        enabled:
          description: Indicates whether the mail zone is enabled.
          title: enabled
          type: boolean
        name:
          title: name
          type: string
        smtp_domains:
          description: "List of extra smtp domains on the mail zone<br />\r\nSMTP\
            \ domain names allow you to link multiple domain names to a single e-mail\
            \ address.<br />\r\nE-mails sent to an SMTP domain will be caught by the\
            \ respective e-mail address on the main domain name."
          items:
            $ref: '#/components/schemas/SmtpDomain'
          title: smtp_domains
          type: array
      title: MailZone
      type: object
    MailZoneAccount:
      additionalProperties: false
      example:
        account_id: 0
        size: 6
      properties:
        account_id:
          description: "Mail zone account id, use this value to create a mailbox"
          format: int32
          title: account_id
          type: integer
        size:
          description: Size of mailbox(es) in MB
          format: int32
          title: size
          type: integer
      title: MailZoneAccount
      type: object
    Mailbox:
      additionalProperties: false
      example:
        actual_size: 0
        name: name
        max_size: 6
      properties:
        actual_size:
          description: Used size in MB
          format: int32
          title: actual_size
          type: integer
        max_size:
          description: Maximum size in MB
          format: int32
          title: max_size
          type: integer
        name:
          title: name
          type: string
      title: Mailbox
      type: object
    MailboxDetail:
      additionalProperties: false
      example:
        actual_size: 0
        auto_reply:
          subject: subject
          message: message
          enabled: true
        name: name
        login: login
        auto_forward:
          email_addresses:
          - email_addresses
          - email_addresses
          copy_to_myself: true
          enabled: true
        max_size: 6
      properties:
        actual_size:
          description: Used size in MB
          format: int32
          title: actual_size
          type: integer
        auto_forward:
          $ref: '#/components/schemas/AutoForward'
        auto_reply:
          $ref: '#/components/schemas/AutoReply'
        login:
          description: Login to connect with the mailbox
          title: login
          type: string
        max_size:
          description: Maximum size in MB
          format: int32
          title: max_size
          type: integer
        name:
          title: name
          type: string
      title: MailboxDetail
      type: object
    MySqlDatabase:
      additionalProperties: false
      example:
        actual_size: 6
        hostname: hostname
        account_id: 0
        user_count: 5
        name: name
        max_size: 1
      properties:
        account_id:
          description: The account id for the database.
          format: int32
          title: account_id
          type: integer
        actual_size:
          description: The actual size in MB for the database.
          format: int32
          title: actual_size
          type: integer
        hostname:
          description: Hostname
          title: hostname
          type: string
        max_size:
          description: The maximim size in MB for the database.
          format: int32
          title: max_size
          type: integer
        name:
          description: Database name
          title: name
          type: string
        user_count:
          description: The number of users.
          format: int32
          title: user_count
          type: integer
      title: MySqlDatabase
      type: object
    MySqlUser:
      additionalProperties: false
      example:
        rights: read_and_write
        name: name
        enabled: true
      properties:
        enabled:
          description: User status
          title: enabled
          type: boolean
        name:
          description: User name
          title: name
          type: string
        rights:
          $ref: '#/components/schemas/UserRights'
      title: MySqlUser
      type: object
    NameServer:
      additionalProperties: false
      example:
        ip: ip
        name: name
      properties:
        ip:
          description: Nameserver ip
          title: ip
          type: string
        name:
          description: Nameserver name
          title: name
          type: string
      title: NameServer
      type: object
    PhpVersion:
      additionalProperties: false
      example:
        version: version
      properties:
        version:
          description: Php version
          title: version
          type: string
      title: PhpVersion
      type: object
    ProvisioningJobCompletion:
      additionalProperties: false
      example:
        resource_links:
        - resource_links
        - resource_links
        id: id
      properties:
        id:
          description: The id of the job.
          title: id
          type: string
        resource_links:
          description: Links to the created resource(s).
          items:
            type: string
          title: resource_links
          type: array
      title: ProvisioningJobCompletion
      type: object
    ProvisioningJobInfo:
      additionalProperties: false
      example:
        completion:
          estimate: 2000-01-23T04:56:07.000+00:00
        id: id
        status: ongoing
      properties:
        completion:
          $ref: '#/components/schemas/CompletionEstimation'
        id:
          description: The id of the job.
          title: id
          type: string
        status:
          $ref: '#/components/schemas/ProvisioningJobStatus'
      title: ProvisioningJobInfo
      type: object
    ProvisioningJobStatus:
      description: Current job status
      enum:
      - ongoing
      - cancelled
      - failed
      - finished
      title: ProvisioningJobStatus
      type: string
    RegisterDomain:
      additionalProperties: false
      example:
        domain_name: domain_name
        name_servers:
        - name_servers
        - name_servers
        registrant:
          address: address
          enterprise_number: enterprise_number
          city: city
          last_name: last_name
          country_code: country_code
          language_code: language_code
          phone: phone
          company_name: company_name
          extra_fields:
          - name: name
            value: value
          - name: name
            value: value
          fax: fax
          postal_code: postal_code
          first_name: first_name
          email: email
      properties:
        domain_name:
          description: "The domain name to register.<br />\r\nOnly pass the domain\
            \ part and the tld.<br /><i>For abc.com, abc is the domain part, com is\
            \ the tld.</i>"
          title: domain_name
          type: string
        name_servers:
          description: "List of name servers. When empty, the registation will be\
            \ done on default name servers."
          items:
            type: string
          title: name_servers
          type: array
        registrant:
          $ref: '#/components/schemas/RegistrantInput'
      title: RegisterDomain
      type: object
    Registrant:
      additionalProperties: false
      example:
        country_code: country_code
        language_code: language_code
        address: address
        enterprise_number: enterprise_number
        city: city
        phone: phone
        company_name: company_name
        last_name: last_name
        fax: fax
        postal_code: postal_code
        first_name: first_name
        email: email
      properties:
        address:
          description: Address of the registrant.
          title: address
          type: string
        city:
          description: City of the registrant.
          title: city
          type: string
        company_name:
          description: "Company name of the registrant.<br />\r\nThe registrant is\
            \ a company if not empty, otherwise the registrant is an individual when\
            \ validating extra fields."
          title: company_name
          type: string
        country_code:
          description: "Country code of the registrant.\r\nSyntax: 'BE', 'NL, 'FR',\
            \ ..."
          title: country_code
          type: string
        email:
          description: Email of the registrant.
          title: email
          type: string
        enterprise_number:
          description: "Enterprise number of the registrant.<br />\r\nSyntax: 'BE0123456789'"
          title: enterprise_number
          type: string
        fax:
          description: "Fax of the registrant.\r\nSyntax: '+32.123456789'"
          title: fax
          type: string
        first_name:
          description: First name of the registrant.
          title: first_name
          type: string
        language_code:
          description: "Language code of the registrant.\r\nSyntax: 'nl', 'fr', 'en',\
            \ 'de', ..."
          title: language_code
          type: string
        last_name:
          description: Last name of the registrant.
          title: last_name
          type: string
        phone:
          description: "Phone of the registrant.<br />\r\nSyntax: '+32.123456789'"
          title: phone
          type: string
        postal_code:
          description: Postal code of the registrant.
          title: postal_code
          type: string
      title: Registrant
      type: object
    RegistrantInput:
      additionalProperties: false
      example:
        address: address
        enterprise_number: enterprise_number
        city: city
        last_name: last_name
        country_code: country_code
        language_code: language_code
        phone: phone
        company_name: company_name
        extra_fields:
        - name: name
          value: value
        - name: name
          value: value
        fax: fax
        postal_code: postal_code
        first_name: first_name
        email: email
      properties:
        address:
          description: Address of the registrant.
          title: address
          type: string
        city:
          description: City of the registrant.
          title: city
          type: string
        company_name:
          description: "Company name of the registrant.<br />\r\nThe registrant is\
            \ a company if not empty, otherwise the registrant is an individual when\
            \ validating extra fields."
          title: company_name
          type: string
        country_code:
          description: "Country code of the registrant.\r\nSyntax: 'BE', 'NL, 'FR',\
            \ ..."
          title: country_code
          type: string
        email:
          description: Email of the registrant.
          title: email
          type: string
        enterprise_number:
          description: "Enterprise number of the registrant.<br />\r\nSyntax: 'BE0123456789'"
          title: enterprise_number
          type: string
        extra_fields:
          description: "List of registrant extra fields for the domain name.\r\n<table><tr><th>Extension</th><th>Registrant\
            \ specifics</th><th>Required extra field(s)</th></tr><tr><td>.dk</td><td>is\
            \ a company</td><td>CompanyNumber</td></tr><tr><td>.es</td><td>is a company</td><td>CompanyNumber</td></tr><tr><td>.es</td><td>is\
            \ an individual</td><td>PassportNumber</td></tr><tr><td>.fr</td><td>is\
            \ a company</td><td>CompanyNumber</td></tr><tr><td>.it</td><td>is an individual\
            \ and has country code 'IT'</td><td>CodiceFiscal</td></tr><tr><td>.it</td><td>is\
            \ an individual and has not country code 'IT'</td><td>PassportNumber</td></tr><tr><td>.nu</td><td>is\
            \ a company</td><td>CompanyNumber</td></tr><tr><td>.nu</td><td>is an individual</td><td>PassportNumber</td></tr><tr><td>.se</td><td>is\
            \ a company</td><td>CompanyNumber</td></tr><tr><td>.se</td><td>is an individual</td><td>PassportNumber</td></tr></table>"
          items:
            $ref: '#/components/schemas/ExtraField'
          title: extra_fields
          type: array
        fax:
          description: "Fax of the registrant.\r\nSyntax: '+32.123456789'"
          title: fax
          type: string
        first_name:
          description: First name of the registrant.
          title: first_name
          type: string
        language_code:
          description: "Language code of the registrant.\r\nSyntax: 'nl', 'fr', 'en',\
            \ 'de', ..."
          title: language_code
          type: string
        last_name:
          description: Last name of the registrant.
          title: last_name
          type: string
        phone:
          description: "Phone of the registrant.<br />\r\nSyntax: '+32.123456789'"
          title: phone
          type: string
        postal_code:
          description: Postal code of the registrant.
          title: postal_code
          type: string
      title: RegistrantInput
      type: object
    ScheduledTask:
      additionalProperties: false
      example:
        cron_expression: cron_expression
        id: id
        script_location: script_location
        enabled: true
      properties:
        cron_expression:
          description: "Cron expression of scheduled task.<br />\r\n5-digit expressions\
            \ (*/5 * * * *) are required in the following sequence:<br /><ul><li>Minute\
            \ (0 - 59, also */5, */10, */15 and */30 as every 5 minutes, every 10\
            \ minutes, every quarter or every half-hour are allowed)</li><li>Hour\
            \ (0 - 23, also * as every hour is allowed)</li><li>Day of the month (1\
            \ - 31, also * as every day is allowed)</li><li>Month (1 - 12 as January\
            \ to December, also * as every month is allowed)</li><li>Day of the week\
            \ (1 - 7 as Monday to Sunday, also * as every day is allowed)</li></ul>"
          title: cron_expression
          type: string
        enabled:
          description: Enabled.
          title: enabled
          type: boolean
        id:
          description: "The id of the scheduled task.<br />\r\nThis value is ignored\
            \ for creation of new scheduled tasks."
          title: id
          type: string
        script_location:
          description: Absolute path from this linux hosting to execute.
          title: script_location
          type: string
      title: ScheduledTask
      type: object
    Servicepack:
      additionalProperties: false
      description: Servicepack information.
      example:
        name: name
        id: 1
      properties:
        id:
          description: The id of the service pack
          format: int32
          title: id
          type: integer
        name:
          description: The name of the service pack
          title: name
          type: string
      title: Servicepack
      type: object
    SiteBinding:
      additionalProperties: false
      description: A site binding identifies a web domain.
      example:
        cert_thumbprint: cert_thumbprint
        protocol: protocol
        port: 5
        ssl_enabled: true
        ip_address: ip_address
        host_name: host_name
      properties:
        cert_thumbprint:
          description: The certificate thumbprint of the site binding.
          title: cert_thumbprint
          type: string
        host_name:
          description: The host name of the site binding.
          title: host_name
          type: string
        ip_address:
          description: The IP address of the site binding.
          title: ip_address
          type: string
        port:
          description: The port of the site binding.
          format: int32
          title: port
          type: integer
        protocol:
          description: The protocol of the site binding.
          title: protocol
          type: string
        ssl_enabled:
          description: Indicates whether ssl is enabled for the binding.
          title: ssl_enabled
          type: boolean
      title: SiteBinding
      type: object
    SmtpDomain:
      additionalProperties: false
      example:
        hostname: hostname
        enabled: true
      properties:
        enabled:
          description: Enabled
          title: enabled
          type: boolean
        hostname:
          description: The smtp domain name
          title: hostname
          type: string
      title: SmtpDomain
      type: object
    SshConfiguration:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          description: Enable or disable SSH.
          title: enabled
          type: boolean
      title: SshConfiguration
      type: object
    SshKey:
      additionalProperties: false
      example:
        public_key: public_key
        fingerprint: fingerprint
      properties:
        fingerprint:
          description: "The fingerprint of the public key.<br />\r\nThis value is\
            \ ignored for creation of new SSH keys."
          title: fingerprint
          type: string
        public_key:
          description: Public key
          title: public_key
          type: string
      title: SshKey
      type: object
    SshKeyDetail:
      additionalProperties: false
      example:
        public_key: public_key
        fingerprint: fingerprint
        linux_hostings:
        - linux_hostings
        - linux_hostings
      properties:
        fingerprint:
          description: "The fingerprint of the public key.<br />\r\nThis value is\
            \ ignored for creation of new SSH keys."
          title: fingerprint
          type: string
        linux_hostings:
          description: List of Linux hostings where SSH key is attached
          items:
            type: string
          title: linux_hostings
          type: array
        public_key:
          description: Public key
          title: public_key
          type: string
      title: SshKeyDetail
      type: object
    SslCertificate:
      additionalProperties: false
      example:
        expires_after: 2000-01-23T04:56:07.000+00:00
        sha1_fingerprint: sha1_fingerprint
        common_name: common_name
        type: standard
        validation_level: domain_validated
      properties:
        common_name:
          description: The common name (e.g. domain.com) of the certificate.
          title: common_name
          type: string
        expires_after:
          description: The exact time the certificate will expire.
          format: date-time
          title: expires_after
          type: string
        sha1_fingerprint:
          description: "The SHA-1 fingerprint of the certificate.<br />\r\nThe fingerprint\
            \ is a cryptographic hash which is a short unique identification of the\
            \ certificate."
          title: sha1_fingerprint
          type: string
        type:
          $ref: '#/components/schemas/SslCertificateType'
        validation_level:
          $ref: '#/components/schemas/SslCertificateValidationLevel'
      title: SslCertificate
      type: object
    SslCertificateDetail:
      additionalProperties: false
      example:
        subject_alt_names:
        - type: dns
          value: value
        - type: dns
          value: value
        expires_after: 2000-01-23T04:56:07.000+00:00
        sha1_fingerprint: sha1_fingerprint
        common_name: common_name
        type: standard
        validation_level: domain_validated
      properties:
        common_name:
          description: The common name (e.g. domain.com) of the certificate.
          title: common_name
          type: string
        expires_after:
          description: The exact time the certificate will expire.
          format: date-time
          title: expires_after
          type: string
        sha1_fingerprint:
          description: "The SHA-1 fingerprint of the certificate.<br />\r\nThe fingerprint\
            \ is a cryptographic hash which is a short unique identification of the\
            \ certificate."
          title: sha1_fingerprint
          type: string
        subject_alt_names:
          description: The list of all supported dns names in the certificate.
          items:
            $ref: '#/components/schemas/SslSubjectAltName'
          title: subject_alt_names
          type: array
        type:
          $ref: '#/components/schemas/SslCertificateType'
        validation_level:
          $ref: '#/components/schemas/SslCertificateValidationLevel'
      title: SslCertificateDetail
      type: object
    SslCertificateFileFormat:
      description: "The file format of the returned file stream:\r\n<ul><li>PFX: Also\
        \ known as PKCS #12, is a single, password protected certificate archive that\
        \ contains the entire certificate chain plus the matching private key.</li></ul>"
      enum:
      - pfx
      title: SslCertificateFileFormat
      type: string
    SslCertificateRequest:
      additionalProperties: false
      example:
        order_code: order_code
        vendor: sectigo
        id: 0
        certificate_type: standard
        common_name: common_name
        validation_level: domain_validated
      properties:
        certificate_type:
          $ref: '#/components/schemas/SslCertificateType'
        common_name:
          description: The common name of the certificate request.
          title: common_name
          type: string
        id:
          description: The id of the certificate request.
          format: int32
          title: id
          type: integer
        order_code:
          description: The order code of the certificate request.
          title: order_code
          type: string
        validation_level:
          $ref: '#/components/schemas/SslCertificateValidationLevel'
        vendor:
          $ref: '#/components/schemas/SslCertificateVendor'
      title: SslCertificateRequest
      type: object
    SslCertificateRequestDetail:
      additionalProperties: false
      example:
        order_code: order_code
        subject_alt_names:
        - type: dns
          value: value
        - type: dns
          value: value
        vendor: sectigo
        id: 0
        validations:
        - auto_validated: true
          file_validation_content:
          - file_validation_content
          - file_validation_content
          cname_validation_name: cname_validation_name
          email_addresses:
          - email_addresses
          - email_addresses
          cname_validation_content: cname_validation_content
          type: dns
          file_validation_url_https: file_validation_url_https
          file_validation_url_http: file_validation_url_http
          dns_name: dns_name
        - auto_validated: true
          file_validation_content:
          - file_validation_content
          - file_validation_content
          cname_validation_name: cname_validation_name
          email_addresses:
          - email_addresses
          - email_addresses
          cname_validation_content: cname_validation_content
          type: dns
          file_validation_url_https: file_validation_url_https
          file_validation_url_http: file_validation_url_http
          dns_name: dns_name
        certificate_type: standard
        common_name: common_name
        validation_level: domain_validated
      properties:
        certificate_type:
          $ref: '#/components/schemas/SslCertificateType'
        common_name:
          description: The common name of the certificate request.
          title: common_name
          type: string
        id:
          description: The id of the certificate request.
          format: int32
          title: id
          type: integer
        order_code:
          description: The order code of the certificate request.
          title: order_code
          type: string
        subject_alt_names:
          description: The list of all supported domains in the certificate.
          items:
            $ref: '#/components/schemas/SslSubjectAltName'
          title: subject_alt_names
          type: array
        validation_level:
          $ref: '#/components/schemas/SslCertificateValidationLevel'
        validations:
          description: The list of dns names to be validated with the information
            related to domain verification.
          items:
            $ref: '#/components/schemas/SslCertificateRequestValidation'
          title: validations
          type: array
        vendor:
          $ref: '#/components/schemas/SslCertificateVendor'
      title: SslCertificateRequestDetail
      type: object
    SslCertificateRequestValidation:
      additionalProperties: false
      example:
        auto_validated: true
        file_validation_content:
        - file_validation_content
        - file_validation_content
        cname_validation_name: cname_validation_name
        email_addresses:
        - email_addresses
        - email_addresses
        cname_validation_content: cname_validation_content
        type: dns
        file_validation_url_https: file_validation_url_https
        file_validation_url_http: file_validation_url_http
        dns_name: dns_name
      properties:
        auto_validated:
          description: Returns true if no user interaction is required and the domain
            validation will be verified automatic.
          title: auto_validated
          type: boolean
        cname_validation_content:
          description: The value-part (Point To) of the CNAME-record that must be
            created as part of domain verification.
          title: cname_validation_content
          type: string
        cname_validation_name:
          description: The host-part (Name) of the CNAME-record that must be created
            as part of domain verification.
          title: cname_validation_name
          type: string
        dns_name:
          description: A domain name of the certificate.
          title: dns_name
          type: string
        email_addresses:
          description: An array of eligible domain verification email addresses.
          items:
            type: string
          title: email_addresses
          type: array
        file_validation_content:
          description: "The content your verification file must contain, consisting\
            \ of three lines of plain-text."
          items:
            type: string
          title: file_validation_content
          type: array
        file_validation_url_http:
          description: The URL (http format) your verification file must be uploaded
            to as part of domain verification.
          title: file_validation_url_http
          type: string
        file_validation_url_https:
          description: The URL (https format) your verification file must be uploaded
            to as part of domain verification.
          title: file_validation_url_https
          type: string
        type:
          $ref: '#/components/schemas/SslCertificateRequestValidationType'
      title: SslCertificateRequestValidation
      type: object
    SslCertificateRequestValidationType:
      description: The domain validation verification type.
      enum:
      - dns
      - file
      - email
      title: SslCertificateRequestValidationType
      type: string
    SslCertificateType:
      description: "The type of the certificate:\r\n<ul><li>Standard: Certificate\
        \ for a single domain.</li><li>Multi domain: Certificate for multiple (sub)domains\
        \ belonging to the same owner.</li><li>Wildcard: Certificate for all the subdomains.</li></ul>"
      enum:
      - standard
      - multi_domain
      - wildcard
      title: SslCertificateType
      type: string
    SslCertificateValidationLevel:
      description: "The validation level of the certificate:\r\n<ul><li>Domain validated:\
        \ Basic check of the identity of the owner of the domain name.</li><li>Organization\
        \ validated: Company details are verified and integrated in the certificate.</li><li>Extended\
        \ validated: A thorough verification of your domain name and company details.</li></ul>"
      enum:
      - domain_validated
      - organization_validated
      - extended_validated
      title: SslCertificateValidationLevel
      type: string
    SslCertificateVendor:
      description: The vendor of the certificate.
      enum:
      - sectigo
      title: SslCertificateVendor
      type: string
    SslSubjectAltName:
      additionalProperties: false
      example:
        type: dns
        value: value
      properties:
        type:
          $ref: '#/components/schemas/SslSubjectAltNameType'
        value:
          description: The value of the alt name.
          title: value
          type: string
      title: SslSubjectAltName
      type: object
    SslSubjectAltNameType:
      description: "The type of the alt name:\r\n<ul><li>Dns</li><li>Ip</li></ul>"
      enum:
      - dns
      - ip
      title: SslSubjectAltNameType
      type: string
    TransferDomain:
      additionalProperties: false
      example:
        domain_name: domain_name
        name_servers:
        - name_servers
        - name_servers
        registrant:
          address: address
          enterprise_number: enterprise_number
          city: city
          last_name: last_name
          country_code: country_code
          language_code: language_code
          phone: phone
          company_name: company_name
          extra_fields:
          - name: name
            value: value
          - name: name
            value: value
          fax: fax
          postal_code: postal_code
          first_name: first_name
          email: email
        auth_code: auth_code
      properties:
        auth_code:
          description: Authorization code which allows the transfer to execute.
          title: auth_code
          type: string
        domain_name:
          description: "The domain name to transfer.<br />\r\nOnly pass the domain\
            \ part and the tld.<br /><i>For abc.com, abc is the domain part, com is\
            \ the tld.</i>"
          title: domain_name
          type: string
        name_servers:
          description: "List of name servers. When empty, the transfer will be done\
            \ on default name servers."
          items:
            type: string
          title: name_servers
          type: array
        registrant:
          $ref: '#/components/schemas/RegistrantInput'
      title: TransferDomain
      type: object
    UpdateAliasRequest:
      additionalProperties: false
      example:
        destinations:
        - destinations
        - destinations
      properties:
        destinations:
          description: The alias destination e-mail addresses
          items:
            type: string
          title: destinations
          type: array
      title: UpdateAliasRequest
      type: object
    UpdateAntiSpamRequest:
      additionalProperties: false
      example:
        type: none
      properties:
        type:
          $ref: '#/components/schemas/AntiSpamTypes'
      title: UpdateAntiSpamRequest
      type: object
    UpdateMailboxPasswordRequest:
      additionalProperties: false
      example:
        password: password
      properties:
        password:
          description: "The password for the database user.<br />\r\nPasswords have\
            \ to adhere to following rules:<br /><ul><li>Between 8-20 characters.</li><li>Must\
            \ be a mix of letters and digits.</li><li>Must contain at least one digit\
            \ (0-9).</li><li>Must contain at least one letter (a-z).</li><li>Cannot\
            \ contain spaces.</li><li>Cannot contain characters: * € $ & + } { ' \"\
            \ \\ </li></ul>"
          title: password
          type: string
      title: UpdateMailboxPasswordRequest
      type: object
    UpdatePhpAPcuRequest:
      additionalProperties: false
      example:
        apcu_size: 0
        enabled: true
      properties:
        apcu_size:
          description: The APcu size.
          format: int32
          title: apcu_size
          type: integer
        enabled:
          description: Enables or disables APC.
          title: enabled
          type: boolean
      title: UpdatePhpAPcuRequest
      type: object
    UpdatePhpMemoryLimitRequest:
      additionalProperties: false
      example:
        memory_limit: 0
      properties:
        memory_limit:
          description: The php memory limit
          format: int32
          title: memory_limit
          type: integer
      title: UpdatePhpMemoryLimitRequest
      type: object
    UpdateSmtpDomainRequest:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          description: Enabled
          title: enabled
          type: boolean
      title: UpdateSmtpDomainRequest
      type: object
    UpdateUserPasswordRequest:
      additionalProperties: false
      example:
        password: password
      properties:
        password:
          description: "The password for the database user.<br />\r\nPasswords have\
            \ to adhere to following rules:<br /><ul><li>Between 8-20 characters.</li><li>Must\
            \ be a mix of letters and digits.</li><li>Must contain at least one digit\
            \ (0-9).</li><li>Must contain at least one letter (a-z).</li><li>Cannot\
            \ contain spaces.</li><li>Cannot contain characters: * € $ & + } { ' \"\
            \ \\ </li></ul>"
          title: password
          type: string
      title: UpdateUserPasswordRequest
      type: object
    UpdateUserStatusRequest:
      additionalProperties: false
      example:
        enabled: true
      properties:
        enabled:
          description: Enabled
          title: enabled
          type: boolean
      title: UpdateUserStatusRequest
      type: object
    UserRights:
      description: User rights
      enum:
      - read_and_write
      - read_only
      title: UserRights
      type: string
    ValidationErrorMessage:
      additionalProperties: false
      example:
        error_text: error_text
        error_code: error_code
      properties:
        error_code:
          title: error_code
          type: string
        error_text:
          title: error_text
          type: string
      title: ValidationErrorMessage
      type: object
    WindowsHosting:
      additionalProperties: false
      example:
        domain_name: domain_name
        servicepack_id: 0
      properties:
        domain_name:
          description: Domain name for the Windows hosting account.
          title: domain_name
          type: string
        servicepack_id:
          description: Id of Windows hosting service package.
          format: int32
          title: servicepack_id
          type: integer
      title: WindowsHosting
      type: object
    WindowsHostingDetail:
      additionalProperties: false
      example:
        actual_size: 0
        application_pool:
          installed_net_core_runtimes:
          - installed_net_core_runtimes
          - installed_net_core_runtimes
          pipeline_mode: pipeline_mode
          runtime: runtime
        mssql_database_names:
        - mssql_database_names
        - mssql_database_names
        domain_name: domain_name
        ip: ip
        servicepack_id: 1
        ftp_username: ftp_username
        sites:
        - path: path
          bindings:
          - cert_thumbprint: cert_thumbprint
            protocol: protocol
            port: 5
            ssl_enabled: true
            ip_address: ip_address
            host_name: host_name
          - cert_thumbprint: cert_thumbprint
            protocol: protocol
            port: 5
            ssl_enabled: true
            ip_address: ip_address
            host_name: host_name
          name: name
        - path: path
          bindings:
          - cert_thumbprint: cert_thumbprint
            protocol: protocol
            port: 5
            ssl_enabled: true
            ip_address: ip_address
            host_name: host_name
          - cert_thumbprint: cert_thumbprint
            protocol: protocol
            port: 5
            ssl_enabled: true
            ip_address: ip_address
            host_name: host_name
          name: name
        ip_type: dedicated
        max_size: 6
      properties:
        actual_size:
          description: Used webspace size in MB
          format: int32
          title: actual_size
          type: integer
        application_pool:
          $ref: '#/components/schemas/ApplicationPool'
        domain_name:
          description: Domain name for the Windows hosting account.
          title: domain_name
          type: string
        ftp_username:
          description: Ftp username
          title: ftp_username
          type: string
        ip:
          description: Windows hosting IP address
          title: ip
          type: string
        ip_type:
          $ref: '#/components/schemas/WindowsIpType'
        max_size:
          description: Maximum webspace size in MB
          format: int32
          title: max_size
          type: integer
        mssql_database_names:
          description: A list of mssql databases linked to the hosting account.<br
            />
          items:
            type: string
          title: mssql_database_names
          type: array
        servicepack_id:
          description: Id of Windows hosting service package.
          format: int32
          title: servicepack_id
          type: integer
        sites:
          description: A list of websites on the hosting account.
          items:
            $ref: '#/components/schemas/WindowsSite'
          title: sites
          type: array
      title: WindowsHostingDetail
      type: object
    WindowsIpType:
      description: Type of the hosting IP address (dedicated or shared)
      enum:
      - dedicated
      - shared
      title: WindowsIpType
      type: string
    WindowsSite:
      additionalProperties: false
      example:
        path: path
        bindings:
        - cert_thumbprint: cert_thumbprint
          protocol: protocol
          port: 5
          ssl_enabled: true
          ip_address: ip_address
          host_name: host_name
        - cert_thumbprint: cert_thumbprint
          protocol: protocol
          port: 5
          ssl_enabled: true
          ip_address: ip_address
          host_name: host_name
        name: name
      properties:
        bindings:
          description: The bindings for the website.
          items:
            $ref: '#/components/schemas/SiteBinding'
          title: bindings
          type: array
        name:
          description: The name of the website.
          title: name
          type: string
        path:
          description: The path of the website.
          title: path
          type: string
      title: WindowsSite
      type: object
