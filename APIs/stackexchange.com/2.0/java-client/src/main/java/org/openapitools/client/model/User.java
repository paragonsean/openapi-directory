/*
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AnswersInnerLastEditorBadgeCounts;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * User
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:22:23.461156-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class User {
  public static final String SERIALIZED_NAME_ABOUT_ME = "about_me";
  @SerializedName(SERIALIZED_NAME_ABOUT_ME)
  private String aboutMe;

  public static final String SERIALIZED_NAME_ACCEPT_RATE = "accept_rate";
  @SerializedName(SERIALIZED_NAME_ACCEPT_RATE)
  private Integer acceptRate;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "account_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private Integer accountId;

  public static final String SERIALIZED_NAME_AGE = "age";
  @SerializedName(SERIALIZED_NAME_AGE)
  private Integer age;

  public static final String SERIALIZED_NAME_ANSWER_COUNT = "answer_count";
  @SerializedName(SERIALIZED_NAME_ANSWER_COUNT)
  private Integer answerCount;

  public static final String SERIALIZED_NAME_BADGE_COUNTS = "badge_counts";
  @SerializedName(SERIALIZED_NAME_BADGE_COUNTS)
  private AnswersInnerLastEditorBadgeCounts badgeCounts;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private Integer creationDate;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_DOWN_VOTE_COUNT = "down_vote_count";
  @SerializedName(SERIALIZED_NAME_DOWN_VOTE_COUNT)
  private Integer downVoteCount;

  public static final String SERIALIZED_NAME_IS_EMPLOYEE = "is_employee";
  @SerializedName(SERIALIZED_NAME_IS_EMPLOYEE)
  private Boolean isEmployee;

  public static final String SERIALIZED_NAME_LAST_ACCESS_DATE = "last_access_date";
  @SerializedName(SERIALIZED_NAME_LAST_ACCESS_DATE)
  private Integer lastAccessDate;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DATE = "last_modified_date";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DATE)
  private Integer lastModifiedDate;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_PROFILE_IMAGE = "profile_image";
  @SerializedName(SERIALIZED_NAME_PROFILE_IMAGE)
  private String profileImage;

  public static final String SERIALIZED_NAME_QUESTION_COUNT = "question_count";
  @SerializedName(SERIALIZED_NAME_QUESTION_COUNT)
  private Integer questionCount;

  public static final String SERIALIZED_NAME_REPUTATION = "reputation";
  @SerializedName(SERIALIZED_NAME_REPUTATION)
  private Integer reputation;

  public static final String SERIALIZED_NAME_REPUTATION_CHANGE_DAY = "reputation_change_day";
  @SerializedName(SERIALIZED_NAME_REPUTATION_CHANGE_DAY)
  private Integer reputationChangeDay;

  public static final String SERIALIZED_NAME_REPUTATION_CHANGE_MONTH = "reputation_change_month";
  @SerializedName(SERIALIZED_NAME_REPUTATION_CHANGE_MONTH)
  private Integer reputationChangeMonth;

  public static final String SERIALIZED_NAME_REPUTATION_CHANGE_QUARTER = "reputation_change_quarter";
  @SerializedName(SERIALIZED_NAME_REPUTATION_CHANGE_QUARTER)
  private Integer reputationChangeQuarter;

  public static final String SERIALIZED_NAME_REPUTATION_CHANGE_WEEK = "reputation_change_week";
  @SerializedName(SERIALIZED_NAME_REPUTATION_CHANGE_WEEK)
  private Integer reputationChangeWeek;

  public static final String SERIALIZED_NAME_REPUTATION_CHANGE_YEAR = "reputation_change_year";
  @SerializedName(SERIALIZED_NAME_REPUTATION_CHANGE_YEAR)
  private Integer reputationChangeYear;

  public static final String SERIALIZED_NAME_TIMED_PENALTY_DATE = "timed_penalty_date";
  @SerializedName(SERIALIZED_NAME_TIMED_PENALTY_DATE)
  private Integer timedPenaltyDate;

  public static final String SERIALIZED_NAME_UP_VOTE_COUNT = "up_vote_count";
  @SerializedName(SERIALIZED_NAME_UP_VOTE_COUNT)
  private Integer upVoteCount;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_USER_TYPE = "user_type";
  @SerializedName(SERIALIZED_NAME_USER_TYPE)
  private String userType;

  public static final String SERIALIZED_NAME_VIEW_COUNT = "view_count";
  @SerializedName(SERIALIZED_NAME_VIEW_COUNT)
  private Integer viewCount;

  public static final String SERIALIZED_NAME_WEBSITE_URL = "website_url";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  private String websiteUrl;

  public User() {
  }

  public User aboutMe(String aboutMe) {
    this.aboutMe = aboutMe;
    return this;
  }

  /**
   * Get aboutMe
   * @return aboutMe
   */
  @javax.annotation.Nullable
  public String getAboutMe() {
    return aboutMe;
  }

  public void setAboutMe(String aboutMe) {
    this.aboutMe = aboutMe;
  }


  public User acceptRate(Integer acceptRate) {
    this.acceptRate = acceptRate;
    return this;
  }

  /**
   * Get acceptRate
   * @return acceptRate
   */
  @javax.annotation.Nullable
  public Integer getAcceptRate() {
    return acceptRate;
  }

  public void setAcceptRate(Integer acceptRate) {
    this.acceptRate = acceptRate;
  }


  public User accountId(Integer accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nullable
  public Integer getAccountId() {
    return accountId;
  }

  public void setAccountId(Integer accountId) {
    this.accountId = accountId;
  }


  public User age(Integer age) {
    this.age = age;
    return this;
  }

  /**
   * Get age
   * @return age
   */
  @javax.annotation.Nullable
  public Integer getAge() {
    return age;
  }

  public void setAge(Integer age) {
    this.age = age;
  }


  public User answerCount(Integer answerCount) {
    this.answerCount = answerCount;
    return this;
  }

  /**
   * Get answerCount
   * @return answerCount
   */
  @javax.annotation.Nullable
  public Integer getAnswerCount() {
    return answerCount;
  }

  public void setAnswerCount(Integer answerCount) {
    this.answerCount = answerCount;
  }


  public User badgeCounts(AnswersInnerLastEditorBadgeCounts badgeCounts) {
    this.badgeCounts = badgeCounts;
    return this;
  }

  /**
   * Get badgeCounts
   * @return badgeCounts
   */
  @javax.annotation.Nullable
  public AnswersInnerLastEditorBadgeCounts getBadgeCounts() {
    return badgeCounts;
  }

  public void setBadgeCounts(AnswersInnerLastEditorBadgeCounts badgeCounts) {
    this.badgeCounts = badgeCounts;
  }


  public User creationDate(Integer creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public Integer getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Integer creationDate) {
    this.creationDate = creationDate;
  }


  public User displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public User downVoteCount(Integer downVoteCount) {
    this.downVoteCount = downVoteCount;
    return this;
  }

  /**
   * Get downVoteCount
   * @return downVoteCount
   */
  @javax.annotation.Nullable
  public Integer getDownVoteCount() {
    return downVoteCount;
  }

  public void setDownVoteCount(Integer downVoteCount) {
    this.downVoteCount = downVoteCount;
  }


  public User isEmployee(Boolean isEmployee) {
    this.isEmployee = isEmployee;
    return this;
  }

  /**
   * Get isEmployee
   * @return isEmployee
   */
  @javax.annotation.Nullable
  public Boolean getIsEmployee() {
    return isEmployee;
  }

  public void setIsEmployee(Boolean isEmployee) {
    this.isEmployee = isEmployee;
  }


  public User lastAccessDate(Integer lastAccessDate) {
    this.lastAccessDate = lastAccessDate;
    return this;
  }

  /**
   * Get lastAccessDate
   * @return lastAccessDate
   */
  @javax.annotation.Nullable
  public Integer getLastAccessDate() {
    return lastAccessDate;
  }

  public void setLastAccessDate(Integer lastAccessDate) {
    this.lastAccessDate = lastAccessDate;
  }


  public User lastModifiedDate(Integer lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

  /**
   * Get lastModifiedDate
   * @return lastModifiedDate
   */
  @javax.annotation.Nullable
  public Integer getLastModifiedDate() {
    return lastModifiedDate;
  }

  public void setLastModifiedDate(Integer lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }


  public User link(String link) {
    this.link = link;
    return this;
  }

  /**
   * Get link
   * @return link
   */
  @javax.annotation.Nullable
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }


  public User location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public User profileImage(String profileImage) {
    this.profileImage = profileImage;
    return this;
  }

  /**
   * Get profileImage
   * @return profileImage
   */
  @javax.annotation.Nullable
  public String getProfileImage() {
    return profileImage;
  }

  public void setProfileImage(String profileImage) {
    this.profileImage = profileImage;
  }


  public User questionCount(Integer questionCount) {
    this.questionCount = questionCount;
    return this;
  }

  /**
   * Get questionCount
   * @return questionCount
   */
  @javax.annotation.Nullable
  public Integer getQuestionCount() {
    return questionCount;
  }

  public void setQuestionCount(Integer questionCount) {
    this.questionCount = questionCount;
  }


  public User reputation(Integer reputation) {
    this.reputation = reputation;
    return this;
  }

  /**
   * Get reputation
   * @return reputation
   */
  @javax.annotation.Nullable
  public Integer getReputation() {
    return reputation;
  }

  public void setReputation(Integer reputation) {
    this.reputation = reputation;
  }


  public User reputationChangeDay(Integer reputationChangeDay) {
    this.reputationChangeDay = reputationChangeDay;
    return this;
  }

  /**
   * Get reputationChangeDay
   * @return reputationChangeDay
   */
  @javax.annotation.Nullable
  public Integer getReputationChangeDay() {
    return reputationChangeDay;
  }

  public void setReputationChangeDay(Integer reputationChangeDay) {
    this.reputationChangeDay = reputationChangeDay;
  }


  public User reputationChangeMonth(Integer reputationChangeMonth) {
    this.reputationChangeMonth = reputationChangeMonth;
    return this;
  }

  /**
   * Get reputationChangeMonth
   * @return reputationChangeMonth
   */
  @javax.annotation.Nullable
  public Integer getReputationChangeMonth() {
    return reputationChangeMonth;
  }

  public void setReputationChangeMonth(Integer reputationChangeMonth) {
    this.reputationChangeMonth = reputationChangeMonth;
  }


  public User reputationChangeQuarter(Integer reputationChangeQuarter) {
    this.reputationChangeQuarter = reputationChangeQuarter;
    return this;
  }

  /**
   * Get reputationChangeQuarter
   * @return reputationChangeQuarter
   */
  @javax.annotation.Nullable
  public Integer getReputationChangeQuarter() {
    return reputationChangeQuarter;
  }

  public void setReputationChangeQuarter(Integer reputationChangeQuarter) {
    this.reputationChangeQuarter = reputationChangeQuarter;
  }


  public User reputationChangeWeek(Integer reputationChangeWeek) {
    this.reputationChangeWeek = reputationChangeWeek;
    return this;
  }

  /**
   * Get reputationChangeWeek
   * @return reputationChangeWeek
   */
  @javax.annotation.Nullable
  public Integer getReputationChangeWeek() {
    return reputationChangeWeek;
  }

  public void setReputationChangeWeek(Integer reputationChangeWeek) {
    this.reputationChangeWeek = reputationChangeWeek;
  }


  public User reputationChangeYear(Integer reputationChangeYear) {
    this.reputationChangeYear = reputationChangeYear;
    return this;
  }

  /**
   * Get reputationChangeYear
   * @return reputationChangeYear
   */
  @javax.annotation.Nullable
  public Integer getReputationChangeYear() {
    return reputationChangeYear;
  }

  public void setReputationChangeYear(Integer reputationChangeYear) {
    this.reputationChangeYear = reputationChangeYear;
  }


  public User timedPenaltyDate(Integer timedPenaltyDate) {
    this.timedPenaltyDate = timedPenaltyDate;
    return this;
  }

  /**
   * Get timedPenaltyDate
   * @return timedPenaltyDate
   */
  @javax.annotation.Nullable
  public Integer getTimedPenaltyDate() {
    return timedPenaltyDate;
  }

  public void setTimedPenaltyDate(Integer timedPenaltyDate) {
    this.timedPenaltyDate = timedPenaltyDate;
  }


  public User upVoteCount(Integer upVoteCount) {
    this.upVoteCount = upVoteCount;
    return this;
  }

  /**
   * Get upVoteCount
   * @return upVoteCount
   */
  @javax.annotation.Nullable
  public Integer getUpVoteCount() {
    return upVoteCount;
  }

  public void setUpVoteCount(Integer upVoteCount) {
    this.upVoteCount = upVoteCount;
  }


  public User userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public User userType(String userType) {
    this.userType = userType;
    return this;
  }

  /**
   * Get userType
   * @return userType
   */
  @javax.annotation.Nullable
  public String getUserType() {
    return userType;
  }

  public void setUserType(String userType) {
    this.userType = userType;
  }


  public User viewCount(Integer viewCount) {
    this.viewCount = viewCount;
    return this;
  }

  /**
   * Get viewCount
   * @return viewCount
   */
  @javax.annotation.Nullable
  public Integer getViewCount() {
    return viewCount;
  }

  public void setViewCount(Integer viewCount) {
    this.viewCount = viewCount;
  }


  public User websiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

  /**
   * Get websiteUrl
   * @return websiteUrl
   */
  @javax.annotation.Nullable
  public String getWebsiteUrl() {
    return websiteUrl;
  }

  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.aboutMe, user.aboutMe) &&
        Objects.equals(this.acceptRate, user.acceptRate) &&
        Objects.equals(this.accountId, user.accountId) &&
        Objects.equals(this.age, user.age) &&
        Objects.equals(this.answerCount, user.answerCount) &&
        Objects.equals(this.badgeCounts, user.badgeCounts) &&
        Objects.equals(this.creationDate, user.creationDate) &&
        Objects.equals(this.displayName, user.displayName) &&
        Objects.equals(this.downVoteCount, user.downVoteCount) &&
        Objects.equals(this.isEmployee, user.isEmployee) &&
        Objects.equals(this.lastAccessDate, user.lastAccessDate) &&
        Objects.equals(this.lastModifiedDate, user.lastModifiedDate) &&
        Objects.equals(this.link, user.link) &&
        Objects.equals(this.location, user.location) &&
        Objects.equals(this.profileImage, user.profileImage) &&
        Objects.equals(this.questionCount, user.questionCount) &&
        Objects.equals(this.reputation, user.reputation) &&
        Objects.equals(this.reputationChangeDay, user.reputationChangeDay) &&
        Objects.equals(this.reputationChangeMonth, user.reputationChangeMonth) &&
        Objects.equals(this.reputationChangeQuarter, user.reputationChangeQuarter) &&
        Objects.equals(this.reputationChangeWeek, user.reputationChangeWeek) &&
        Objects.equals(this.reputationChangeYear, user.reputationChangeYear) &&
        Objects.equals(this.timedPenaltyDate, user.timedPenaltyDate) &&
        Objects.equals(this.upVoteCount, user.upVoteCount) &&
        Objects.equals(this.userId, user.userId) &&
        Objects.equals(this.userType, user.userType) &&
        Objects.equals(this.viewCount, user.viewCount) &&
        Objects.equals(this.websiteUrl, user.websiteUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aboutMe, acceptRate, accountId, age, answerCount, badgeCounts, creationDate, displayName, downVoteCount, isEmployee, lastAccessDate, lastModifiedDate, link, location, profileImage, questionCount, reputation, reputationChangeDay, reputationChangeMonth, reputationChangeQuarter, reputationChangeWeek, reputationChangeYear, timedPenaltyDate, upVoteCount, userId, userType, viewCount, websiteUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    sb.append("    aboutMe: ").append(toIndentedString(aboutMe)).append("\n");
    sb.append("    acceptRate: ").append(toIndentedString(acceptRate)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    answerCount: ").append(toIndentedString(answerCount)).append("\n");
    sb.append("    badgeCounts: ").append(toIndentedString(badgeCounts)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    downVoteCount: ").append(toIndentedString(downVoteCount)).append("\n");
    sb.append("    isEmployee: ").append(toIndentedString(isEmployee)).append("\n");
    sb.append("    lastAccessDate: ").append(toIndentedString(lastAccessDate)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    profileImage: ").append(toIndentedString(profileImage)).append("\n");
    sb.append("    questionCount: ").append(toIndentedString(questionCount)).append("\n");
    sb.append("    reputation: ").append(toIndentedString(reputation)).append("\n");
    sb.append("    reputationChangeDay: ").append(toIndentedString(reputationChangeDay)).append("\n");
    sb.append("    reputationChangeMonth: ").append(toIndentedString(reputationChangeMonth)).append("\n");
    sb.append("    reputationChangeQuarter: ").append(toIndentedString(reputationChangeQuarter)).append("\n");
    sb.append("    reputationChangeWeek: ").append(toIndentedString(reputationChangeWeek)).append("\n");
    sb.append("    reputationChangeYear: ").append(toIndentedString(reputationChangeYear)).append("\n");
    sb.append("    timedPenaltyDate: ").append(toIndentedString(timedPenaltyDate)).append("\n");
    sb.append("    upVoteCount: ").append(toIndentedString(upVoteCount)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    viewCount: ").append(toIndentedString(viewCount)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("about_me");
    openapiFields.add("accept_rate");
    openapiFields.add("account_id");
    openapiFields.add("age");
    openapiFields.add("answer_count");
    openapiFields.add("badge_counts");
    openapiFields.add("creation_date");
    openapiFields.add("display_name");
    openapiFields.add("down_vote_count");
    openapiFields.add("is_employee");
    openapiFields.add("last_access_date");
    openapiFields.add("last_modified_date");
    openapiFields.add("link");
    openapiFields.add("location");
    openapiFields.add("profile_image");
    openapiFields.add("question_count");
    openapiFields.add("reputation");
    openapiFields.add("reputation_change_day");
    openapiFields.add("reputation_change_month");
    openapiFields.add("reputation_change_quarter");
    openapiFields.add("reputation_change_week");
    openapiFields.add("reputation_change_year");
    openapiFields.add("timed_penalty_date");
    openapiFields.add("up_vote_count");
    openapiFields.add("user_id");
    openapiFields.add("user_type");
    openapiFields.add("view_count");
    openapiFields.add("website_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to User
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!User.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in User is not found in the empty JSON string", User.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!User.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `User` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("about_me") != null && !jsonObj.get("about_me").isJsonNull()) && !jsonObj.get("about_me").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `about_me` to be a primitive type in the JSON string but got `%s`", jsonObj.get("about_me").toString()));
      }
      // validate the optional field `badge_counts`
      if (jsonObj.get("badge_counts") != null && !jsonObj.get("badge_counts").isJsonNull()) {
        AnswersInnerLastEditorBadgeCounts.validateJsonElement(jsonObj.get("badge_counts"));
      }
      if ((jsonObj.get("display_name") != null && !jsonObj.get("display_name").isJsonNull()) && !jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if ((jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("profile_image") != null && !jsonObj.get("profile_image").isJsonNull()) && !jsonObj.get("profile_image").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile_image` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile_image").toString()));
      }
      if ((jsonObj.get("user_type") != null && !jsonObj.get("user_type").isJsonNull()) && !jsonObj.get("user_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_type").toString()));
      }
      if ((jsonObj.get("website_url") != null && !jsonObj.get("website_url").isJsonNull()) && !jsonObj.get("website_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!User.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'User' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<User> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(User.class));

       return (TypeAdapter<T>) new TypeAdapter<User>() {
           @Override
           public void write(JsonWriter out, User value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public User read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of User given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of User
   * @throws IOException if the JSON string is invalid with respect to User
   */
  public static User fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, User.class);
  }

  /**
   * Convert an instance of User to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

