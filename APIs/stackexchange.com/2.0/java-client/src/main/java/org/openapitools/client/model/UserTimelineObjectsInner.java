/*
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserTimelineObjectsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:22:23.461156-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UserTimelineObjectsInner {
  public static final String SERIALIZED_NAME_BADGE_ID = "badge_id";
  @SerializedName(SERIALIZED_NAME_BADGE_ID)
  private Integer badgeId;

  public static final String SERIALIZED_NAME_COMMENT_ID = "comment_id";
  @SerializedName(SERIALIZED_NAME_COMMENT_ID)
  private Integer commentId;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private Integer creationDate;

  public static final String SERIALIZED_NAME_DETAIL = "detail";
  @SerializedName(SERIALIZED_NAME_DETAIL)
  private String detail;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_POST_ID = "post_id";
  @SerializedName(SERIALIZED_NAME_POST_ID)
  private Integer postId;

  public static final String SERIALIZED_NAME_POST_TYPE = "post_type";
  @SerializedName(SERIALIZED_NAME_POST_TYPE)
  private String postType;

  public static final String SERIALIZED_NAME_SUGGESTED_EDIT_ID = "suggested_edit_id";
  @SerializedName(SERIALIZED_NAME_SUGGESTED_EDIT_ID)
  private Integer suggestedEditId;

  public static final String SERIALIZED_NAME_TIMELINE_TYPE = "timeline_type";
  @SerializedName(SERIALIZED_NAME_TIMELINE_TYPE)
  private String timelineType;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public UserTimelineObjectsInner() {
  }

  public UserTimelineObjectsInner badgeId(Integer badgeId) {
    this.badgeId = badgeId;
    return this;
  }

  /**
   * Get badgeId
   * @return badgeId
   */
  @javax.annotation.Nullable
  public Integer getBadgeId() {
    return badgeId;
  }

  public void setBadgeId(Integer badgeId) {
    this.badgeId = badgeId;
  }


  public UserTimelineObjectsInner commentId(Integer commentId) {
    this.commentId = commentId;
    return this;
  }

  /**
   * Get commentId
   * @return commentId
   */
  @javax.annotation.Nullable
  public Integer getCommentId() {
    return commentId;
  }

  public void setCommentId(Integer commentId) {
    this.commentId = commentId;
  }


  public UserTimelineObjectsInner creationDate(Integer creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @javax.annotation.Nullable
  public Integer getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(Integer creationDate) {
    this.creationDate = creationDate;
  }


  public UserTimelineObjectsInner detail(String detail) {
    this.detail = detail;
    return this;
  }

  /**
   * Get detail
   * @return detail
   */
  @javax.annotation.Nullable
  public String getDetail() {
    return detail;
  }

  public void setDetail(String detail) {
    this.detail = detail;
  }


  public UserTimelineObjectsInner link(String link) {
    this.link = link;
    return this;
  }

  /**
   * Get link
   * @return link
   */
  @javax.annotation.Nullable
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }


  public UserTimelineObjectsInner postId(Integer postId) {
    this.postId = postId;
    return this;
  }

  /**
   * Get postId
   * @return postId
   */
  @javax.annotation.Nullable
  public Integer getPostId() {
    return postId;
  }

  public void setPostId(Integer postId) {
    this.postId = postId;
  }


  public UserTimelineObjectsInner postType(String postType) {
    this.postType = postType;
    return this;
  }

  /**
   * Get postType
   * @return postType
   */
  @javax.annotation.Nullable
  public String getPostType() {
    return postType;
  }

  public void setPostType(String postType) {
    this.postType = postType;
  }


  public UserTimelineObjectsInner suggestedEditId(Integer suggestedEditId) {
    this.suggestedEditId = suggestedEditId;
    return this;
  }

  /**
   * Get suggestedEditId
   * @return suggestedEditId
   */
  @javax.annotation.Nullable
  public Integer getSuggestedEditId() {
    return suggestedEditId;
  }

  public void setSuggestedEditId(Integer suggestedEditId) {
    this.suggestedEditId = suggestedEditId;
  }


  public UserTimelineObjectsInner timelineType(String timelineType) {
    this.timelineType = timelineType;
    return this;
  }

  /**
   * Get timelineType
   * @return timelineType
   */
  @javax.annotation.Nullable
  public String getTimelineType() {
    return timelineType;
  }

  public void setTimelineType(String timelineType) {
    this.timelineType = timelineType;
  }


  public UserTimelineObjectsInner title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public UserTimelineObjectsInner userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserTimelineObjectsInner userTimelineObjectsInner = (UserTimelineObjectsInner) o;
    return Objects.equals(this.badgeId, userTimelineObjectsInner.badgeId) &&
        Objects.equals(this.commentId, userTimelineObjectsInner.commentId) &&
        Objects.equals(this.creationDate, userTimelineObjectsInner.creationDate) &&
        Objects.equals(this.detail, userTimelineObjectsInner.detail) &&
        Objects.equals(this.link, userTimelineObjectsInner.link) &&
        Objects.equals(this.postId, userTimelineObjectsInner.postId) &&
        Objects.equals(this.postType, userTimelineObjectsInner.postType) &&
        Objects.equals(this.suggestedEditId, userTimelineObjectsInner.suggestedEditId) &&
        Objects.equals(this.timelineType, userTimelineObjectsInner.timelineType) &&
        Objects.equals(this.title, userTimelineObjectsInner.title) &&
        Objects.equals(this.userId, userTimelineObjectsInner.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(badgeId, commentId, creationDate, detail, link, postId, postType, suggestedEditId, timelineType, title, userId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserTimelineObjectsInner {\n");
    sb.append("    badgeId: ").append(toIndentedString(badgeId)).append("\n");
    sb.append("    commentId: ").append(toIndentedString(commentId)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    postId: ").append(toIndentedString(postId)).append("\n");
    sb.append("    postType: ").append(toIndentedString(postType)).append("\n");
    sb.append("    suggestedEditId: ").append(toIndentedString(suggestedEditId)).append("\n");
    sb.append("    timelineType: ").append(toIndentedString(timelineType)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("badge_id");
    openapiFields.add("comment_id");
    openapiFields.add("creation_date");
    openapiFields.add("detail");
    openapiFields.add("link");
    openapiFields.add("post_id");
    openapiFields.add("post_type");
    openapiFields.add("suggested_edit_id");
    openapiFields.add("timeline_type");
    openapiFields.add("title");
    openapiFields.add("user_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserTimelineObjectsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserTimelineObjectsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserTimelineObjectsInner is not found in the empty JSON string", UserTimelineObjectsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserTimelineObjectsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserTimelineObjectsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("detail") != null && !jsonObj.get("detail").isJsonNull()) && !jsonObj.get("detail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `detail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("detail").toString()));
      }
      if ((jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      if ((jsonObj.get("post_type") != null && !jsonObj.get("post_type").isJsonNull()) && !jsonObj.get("post_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `post_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("post_type").toString()));
      }
      if ((jsonObj.get("timeline_type") != null && !jsonObj.get("timeline_type").isJsonNull()) && !jsonObj.get("timeline_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeline_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeline_type").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserTimelineObjectsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserTimelineObjectsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserTimelineObjectsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserTimelineObjectsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<UserTimelineObjectsInner>() {
           @Override
           public void write(JsonWriter out, UserTimelineObjectsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserTimelineObjectsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserTimelineObjectsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserTimelineObjectsInner
   * @throws IOException if the JSON string is invalid with respect to UserTimelineObjectsInner
   */
  public static UserTimelineObjectsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserTimelineObjectsInner.class);
  }

  /**
   * Convert an instance of UserTimelineObjectsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

