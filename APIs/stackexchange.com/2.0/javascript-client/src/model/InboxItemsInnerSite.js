/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InboxItemsInnerSiteStyling from './InboxItemsInnerSiteStyling';

/**
 * The InboxItemsInnerSite model module.
 * @module model/InboxItemsInnerSite
 * @version 2.0
 */
class InboxItemsInnerSite {
    /**
     * Constructs a new <code>InboxItemsInnerSite</code>.
     * @alias module:model/InboxItemsInnerSite
     */
    constructor() { 
        
        InboxItemsInnerSite.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InboxItemsInnerSite</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InboxItemsInnerSite} obj Optional instance to populate.
     * @return {module:model/InboxItemsInnerSite} The populated <code>InboxItemsInnerSite</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InboxItemsInnerSite();

            if (data.hasOwnProperty('aliases')) {
                obj['aliases'] = ApiClient.convertToType(data['aliases'], [Object]);
            }
            if (data.hasOwnProperty('api_site_parameter')) {
                obj['api_site_parameter'] = ApiClient.convertToType(data['api_site_parameter'], 'String');
            }
            if (data.hasOwnProperty('audience')) {
                obj['audience'] = ApiClient.convertToType(data['audience'], 'String');
            }
            if (data.hasOwnProperty('closed_beta_date')) {
                obj['closed_beta_date'] = ApiClient.convertToType(data['closed_beta_date'], 'Number');
            }
            if (data.hasOwnProperty('favicon_url')) {
                obj['favicon_url'] = ApiClient.convertToType(data['favicon_url'], 'String');
            }
            if (data.hasOwnProperty('high_resolution_icon_url')) {
                obj['high_resolution_icon_url'] = ApiClient.convertToType(data['high_resolution_icon_url'], 'String');
            }
            if (data.hasOwnProperty('icon_url')) {
                obj['icon_url'] = ApiClient.convertToType(data['icon_url'], 'String');
            }
            if (data.hasOwnProperty('launch_date')) {
                obj['launch_date'] = ApiClient.convertToType(data['launch_date'], 'Number');
            }
            if (data.hasOwnProperty('logo_url')) {
                obj['logo_url'] = ApiClient.convertToType(data['logo_url'], 'String');
            }
            if (data.hasOwnProperty('markdown_extensions')) {
                obj['markdown_extensions'] = ApiClient.convertToType(data['markdown_extensions'], [Object]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('open_beta_date')) {
                obj['open_beta_date'] = ApiClient.convertToType(data['open_beta_date'], 'Number');
            }
            if (data.hasOwnProperty('related_sites')) {
                obj['related_sites'] = ApiClient.convertToType(data['related_sites'], [Object]);
            }
            if (data.hasOwnProperty('site_state')) {
                obj['site_state'] = ApiClient.convertToType(data['site_state'], 'String');
            }
            if (data.hasOwnProperty('site_type')) {
                obj['site_type'] = ApiClient.convertToType(data['site_type'], 'String');
            }
            if (data.hasOwnProperty('site_url')) {
                obj['site_url'] = ApiClient.convertToType(data['site_url'], 'String');
            }
            if (data.hasOwnProperty('styling')) {
                obj['styling'] = InboxItemsInnerSiteStyling.constructFromObject(data['styling']);
            }
            if (data.hasOwnProperty('twitter_account')) {
                obj['twitter_account'] = ApiClient.convertToType(data['twitter_account'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InboxItemsInnerSite</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InboxItemsInnerSite</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['aliases'])) {
            throw new Error("Expected the field `aliases` to be an array in the JSON data but got " + data['aliases']);
        }
        // ensure the json data is a string
        if (data['api_site_parameter'] && !(typeof data['api_site_parameter'] === 'string' || data['api_site_parameter'] instanceof String)) {
            throw new Error("Expected the field `api_site_parameter` to be a primitive type in the JSON string but got " + data['api_site_parameter']);
        }
        // ensure the json data is a string
        if (data['audience'] && !(typeof data['audience'] === 'string' || data['audience'] instanceof String)) {
            throw new Error("Expected the field `audience` to be a primitive type in the JSON string but got " + data['audience']);
        }
        // ensure the json data is a string
        if (data['favicon_url'] && !(typeof data['favicon_url'] === 'string' || data['favicon_url'] instanceof String)) {
            throw new Error("Expected the field `favicon_url` to be a primitive type in the JSON string but got " + data['favicon_url']);
        }
        // ensure the json data is a string
        if (data['high_resolution_icon_url'] && !(typeof data['high_resolution_icon_url'] === 'string' || data['high_resolution_icon_url'] instanceof String)) {
            throw new Error("Expected the field `high_resolution_icon_url` to be a primitive type in the JSON string but got " + data['high_resolution_icon_url']);
        }
        // ensure the json data is a string
        if (data['icon_url'] && !(typeof data['icon_url'] === 'string' || data['icon_url'] instanceof String)) {
            throw new Error("Expected the field `icon_url` to be a primitive type in the JSON string but got " + data['icon_url']);
        }
        // ensure the json data is a string
        if (data['logo_url'] && !(typeof data['logo_url'] === 'string' || data['logo_url'] instanceof String)) {
            throw new Error("Expected the field `logo_url` to be a primitive type in the JSON string but got " + data['logo_url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['markdown_extensions'])) {
            throw new Error("Expected the field `markdown_extensions` to be an array in the JSON data but got " + data['markdown_extensions']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['related_sites'])) {
            throw new Error("Expected the field `related_sites` to be an array in the JSON data but got " + data['related_sites']);
        }
        // ensure the json data is a string
        if (data['site_state'] && !(typeof data['site_state'] === 'string' || data['site_state'] instanceof String)) {
            throw new Error("Expected the field `site_state` to be a primitive type in the JSON string but got " + data['site_state']);
        }
        // ensure the json data is a string
        if (data['site_type'] && !(typeof data['site_type'] === 'string' || data['site_type'] instanceof String)) {
            throw new Error("Expected the field `site_type` to be a primitive type in the JSON string but got " + data['site_type']);
        }
        // ensure the json data is a string
        if (data['site_url'] && !(typeof data['site_url'] === 'string' || data['site_url'] instanceof String)) {
            throw new Error("Expected the field `site_url` to be a primitive type in the JSON string but got " + data['site_url']);
        }
        // validate the optional field `styling`
        if (data['styling']) { // data not null
          InboxItemsInnerSiteStyling.validateJSON(data['styling']);
        }
        // ensure the json data is a string
        if (data['twitter_account'] && !(typeof data['twitter_account'] === 'string' || data['twitter_account'] instanceof String)) {
            throw new Error("Expected the field `twitter_account` to be a primitive type in the JSON string but got " + data['twitter_account']);
        }

        return true;
    }


}



/**
 * @member {Array.<Object>} aliases
 */
InboxItemsInnerSite.prototype['aliases'] = undefined;

/**
 * @member {String} api_site_parameter
 */
InboxItemsInnerSite.prototype['api_site_parameter'] = undefined;

/**
 * @member {String} audience
 */
InboxItemsInnerSite.prototype['audience'] = undefined;

/**
 * @member {Number} closed_beta_date
 */
InboxItemsInnerSite.prototype['closed_beta_date'] = undefined;

/**
 * @member {String} favicon_url
 */
InboxItemsInnerSite.prototype['favicon_url'] = undefined;

/**
 * @member {String} high_resolution_icon_url
 */
InboxItemsInnerSite.prototype['high_resolution_icon_url'] = undefined;

/**
 * @member {String} icon_url
 */
InboxItemsInnerSite.prototype['icon_url'] = undefined;

/**
 * @member {Number} launch_date
 */
InboxItemsInnerSite.prototype['launch_date'] = undefined;

/**
 * @member {String} logo_url
 */
InboxItemsInnerSite.prototype['logo_url'] = undefined;

/**
 * @member {Array.<Object>} markdown_extensions
 */
InboxItemsInnerSite.prototype['markdown_extensions'] = undefined;

/**
 * @member {String} name
 */
InboxItemsInnerSite.prototype['name'] = undefined;

/**
 * @member {Number} open_beta_date
 */
InboxItemsInnerSite.prototype['open_beta_date'] = undefined;

/**
 * @member {Array.<Object>} related_sites
 */
InboxItemsInnerSite.prototype['related_sites'] = undefined;

/**
 * @member {String} site_state
 */
InboxItemsInnerSite.prototype['site_state'] = undefined;

/**
 * @member {String} site_type
 */
InboxItemsInnerSite.prototype['site_type'] = undefined;

/**
 * @member {String} site_url
 */
InboxItemsInnerSite.prototype['site_url'] = undefined;

/**
 * @member {module:model/InboxItemsInnerSiteStyling} styling
 */
InboxItemsInnerSite.prototype['styling'] = undefined;

/**
 * @member {String} twitter_account
 */
InboxItemsInnerSite.prototype['twitter_account'] = undefined;






export default InboxItemsInnerSite;

