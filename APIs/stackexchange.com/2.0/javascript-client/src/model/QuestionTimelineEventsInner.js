/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnswersInnerLastEditor from './AnswersInnerLastEditor';

/**
 * The QuestionTimelineEventsInner model module.
 * @module model/QuestionTimelineEventsInner
 * @version 2.0
 */
class QuestionTimelineEventsInner {
    /**
     * Constructs a new <code>QuestionTimelineEventsInner</code>.
     * @alias module:model/QuestionTimelineEventsInner
     */
    constructor() { 
        
        QuestionTimelineEventsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuestionTimelineEventsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuestionTimelineEventsInner} obj Optional instance to populate.
     * @return {module:model/QuestionTimelineEventsInner} The populated <code>QuestionTimelineEventsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuestionTimelineEventsInner();

            if (data.hasOwnProperty('comment_id')) {
                obj['comment_id'] = ApiClient.convertToType(data['comment_id'], 'Number');
            }
            if (data.hasOwnProperty('creation_date')) {
                obj['creation_date'] = ApiClient.convertToType(data['creation_date'], 'Number');
            }
            if (data.hasOwnProperty('down_vote_count')) {
                obj['down_vote_count'] = ApiClient.convertToType(data['down_vote_count'], 'Number');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = AnswersInnerLastEditor.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('post_id')) {
                obj['post_id'] = ApiClient.convertToType(data['post_id'], 'Number');
            }
            if (data.hasOwnProperty('question_id')) {
                obj['question_id'] = ApiClient.convertToType(data['question_id'], 'Number');
            }
            if (data.hasOwnProperty('revision_guid')) {
                obj['revision_guid'] = ApiClient.convertToType(data['revision_guid'], 'String');
            }
            if (data.hasOwnProperty('timeline_type')) {
                obj['timeline_type'] = ApiClient.convertToType(data['timeline_type'], 'String');
            }
            if (data.hasOwnProperty('up_vote_count')) {
                obj['up_vote_count'] = ApiClient.convertToType(data['up_vote_count'], 'Number');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = AnswersInnerLastEditor.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuestionTimelineEventsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuestionTimelineEventsInner</code>.
     */
    static validateJSON(data) {
        // validate the optional field `owner`
        if (data['owner']) { // data not null
          AnswersInnerLastEditor.validateJSON(data['owner']);
        }
        // ensure the json data is a string
        if (data['revision_guid'] && !(typeof data['revision_guid'] === 'string' || data['revision_guid'] instanceof String)) {
            throw new Error("Expected the field `revision_guid` to be a primitive type in the JSON string but got " + data['revision_guid']);
        }
        // ensure the json data is a string
        if (data['timeline_type'] && !(typeof data['timeline_type'] === 'string' || data['timeline_type'] instanceof String)) {
            throw new Error("Expected the field `timeline_type` to be a primitive type in the JSON string but got " + data['timeline_type']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          AnswersInnerLastEditor.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * @member {Number} comment_id
 */
QuestionTimelineEventsInner.prototype['comment_id'] = undefined;

/**
 * @member {Number} creation_date
 */
QuestionTimelineEventsInner.prototype['creation_date'] = undefined;

/**
 * @member {Number} down_vote_count
 */
QuestionTimelineEventsInner.prototype['down_vote_count'] = undefined;

/**
 * @member {module:model/AnswersInnerLastEditor} owner
 */
QuestionTimelineEventsInner.prototype['owner'] = undefined;

/**
 * @member {Number} post_id
 */
QuestionTimelineEventsInner.prototype['post_id'] = undefined;

/**
 * @member {Number} question_id
 */
QuestionTimelineEventsInner.prototype['question_id'] = undefined;

/**
 * @member {String} revision_guid
 */
QuestionTimelineEventsInner.prototype['revision_guid'] = undefined;

/**
 * @member {String} timeline_type
 */
QuestionTimelineEventsInner.prototype['timeline_type'] = undefined;

/**
 * @member {Number} up_vote_count
 */
QuestionTimelineEventsInner.prototype['up_vote_count'] = undefined;

/**
 * @member {module:model/AnswersInnerLastEditor} user
 */
QuestionTimelineEventsInner.prototype['user'] = undefined;






export default QuestionTimelineEventsInner;

