/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TagSynonymsInner model module.
 * @module model/TagSynonymsInner
 * @version 2.0
 */
class TagSynonymsInner {
    /**
     * Constructs a new <code>TagSynonymsInner</code>.
     * @alias module:model/TagSynonymsInner
     */
    constructor() { 
        
        TagSynonymsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TagSynonymsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TagSynonymsInner} obj Optional instance to populate.
     * @return {module:model/TagSynonymsInner} The populated <code>TagSynonymsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TagSynonymsInner();

            if (data.hasOwnProperty('applied_count')) {
                obj['applied_count'] = ApiClient.convertToType(data['applied_count'], 'Number');
            }
            if (data.hasOwnProperty('creation_date')) {
                obj['creation_date'] = ApiClient.convertToType(data['creation_date'], 'Number');
            }
            if (data.hasOwnProperty('from_tag')) {
                obj['from_tag'] = ApiClient.convertToType(data['from_tag'], 'String');
            }
            if (data.hasOwnProperty('last_applied_date')) {
                obj['last_applied_date'] = ApiClient.convertToType(data['last_applied_date'], 'Number');
            }
            if (data.hasOwnProperty('to_tag')) {
                obj['to_tag'] = ApiClient.convertToType(data['to_tag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TagSynonymsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TagSynonymsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['from_tag'] && !(typeof data['from_tag'] === 'string' || data['from_tag'] instanceof String)) {
            throw new Error("Expected the field `from_tag` to be a primitive type in the JSON string but got " + data['from_tag']);
        }
        // ensure the json data is a string
        if (data['to_tag'] && !(typeof data['to_tag'] === 'string' || data['to_tag'] instanceof String)) {
            throw new Error("Expected the field `to_tag` to be a primitive type in the JSON string but got " + data['to_tag']);
        }

        return true;
    }


}



/**
 * @member {Number} applied_count
 */
TagSynonymsInner.prototype['applied_count'] = undefined;

/**
 * @member {Number} creation_date
 */
TagSynonymsInner.prototype['creation_date'] = undefined;

/**
 * @member {String} from_tag
 */
TagSynonymsInner.prototype['from_tag'] = undefined;

/**
 * @member {Number} last_applied_date
 */
TagSynonymsInner.prototype['last_applied_date'] = undefined;

/**
 * @member {String} to_tag
 */
TagSynonymsInner.prototype['to_tag'] = undefined;






export default TagSynonymsInner;

