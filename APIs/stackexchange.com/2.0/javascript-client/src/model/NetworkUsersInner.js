/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnswersInnerLastEditorBadgeCounts from './AnswersInnerLastEditorBadgeCounts';

/**
 * The NetworkUsersInner model module.
 * @module model/NetworkUsersInner
 * @version 2.0
 */
class NetworkUsersInner {
    /**
     * Constructs a new <code>NetworkUsersInner</code>.
     * @alias module:model/NetworkUsersInner
     */
    constructor() { 
        
        NetworkUsersInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NetworkUsersInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkUsersInner} obj Optional instance to populate.
     * @return {module:model/NetworkUsersInner} The populated <code>NetworkUsersInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkUsersInner();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'Number');
            }
            if (data.hasOwnProperty('answer_count')) {
                obj['answer_count'] = ApiClient.convertToType(data['answer_count'], 'Number');
            }
            if (data.hasOwnProperty('badge_counts')) {
                obj['badge_counts'] = AnswersInnerLastEditorBadgeCounts.constructFromObject(data['badge_counts']);
            }
            if (data.hasOwnProperty('creation_date')) {
                obj['creation_date'] = ApiClient.convertToType(data['creation_date'], 'Number');
            }
            if (data.hasOwnProperty('last_access_date')) {
                obj['last_access_date'] = ApiClient.convertToType(data['last_access_date'], 'Number');
            }
            if (data.hasOwnProperty('question_count')) {
                obj['question_count'] = ApiClient.convertToType(data['question_count'], 'Number');
            }
            if (data.hasOwnProperty('reputation')) {
                obj['reputation'] = ApiClient.convertToType(data['reputation'], 'Number');
            }
            if (data.hasOwnProperty('site_name')) {
                obj['site_name'] = ApiClient.convertToType(data['site_name'], 'String');
            }
            if (data.hasOwnProperty('site_url')) {
                obj['site_url'] = ApiClient.convertToType(data['site_url'], 'String');
            }
            if (data.hasOwnProperty('top_answers')) {
                obj['top_answers'] = ApiClient.convertToType(data['top_answers'], [Object]);
            }
            if (data.hasOwnProperty('top_questions')) {
                obj['top_questions'] = ApiClient.convertToType(data['top_questions'], [Object]);
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('user_type')) {
                obj['user_type'] = ApiClient.convertToType(data['user_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkUsersInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkUsersInner</code>.
     */
    static validateJSON(data) {
        // validate the optional field `badge_counts`
        if (data['badge_counts']) { // data not null
          AnswersInnerLastEditorBadgeCounts.validateJSON(data['badge_counts']);
        }
        // ensure the json data is a string
        if (data['site_name'] && !(typeof data['site_name'] === 'string' || data['site_name'] instanceof String)) {
            throw new Error("Expected the field `site_name` to be a primitive type in the JSON string but got " + data['site_name']);
        }
        // ensure the json data is a string
        if (data['site_url'] && !(typeof data['site_url'] === 'string' || data['site_url'] instanceof String)) {
            throw new Error("Expected the field `site_url` to be a primitive type in the JSON string but got " + data['site_url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['top_answers'])) {
            throw new Error("Expected the field `top_answers` to be an array in the JSON data but got " + data['top_answers']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['top_questions'])) {
            throw new Error("Expected the field `top_questions` to be an array in the JSON data but got " + data['top_questions']);
        }
        // ensure the json data is a string
        if (data['user_type'] && !(typeof data['user_type'] === 'string' || data['user_type'] instanceof String)) {
            throw new Error("Expected the field `user_type` to be a primitive type in the JSON string but got " + data['user_type']);
        }

        return true;
    }


}



/**
 * @member {Number} account_id
 */
NetworkUsersInner.prototype['account_id'] = undefined;

/**
 * @member {Number} answer_count
 */
NetworkUsersInner.prototype['answer_count'] = undefined;

/**
 * @member {module:model/AnswersInnerLastEditorBadgeCounts} badge_counts
 */
NetworkUsersInner.prototype['badge_counts'] = undefined;

/**
 * @member {Number} creation_date
 */
NetworkUsersInner.prototype['creation_date'] = undefined;

/**
 * @member {Number} last_access_date
 */
NetworkUsersInner.prototype['last_access_date'] = undefined;

/**
 * @member {Number} question_count
 */
NetworkUsersInner.prototype['question_count'] = undefined;

/**
 * @member {Number} reputation
 */
NetworkUsersInner.prototype['reputation'] = undefined;

/**
 * @member {String} site_name
 */
NetworkUsersInner.prototype['site_name'] = undefined;

/**
 * @member {String} site_url
 */
NetworkUsersInner.prototype['site_url'] = undefined;

/**
 * @member {Array.<Object>} top_answers
 */
NetworkUsersInner.prototype['top_answers'] = undefined;

/**
 * @member {Array.<Object>} top_questions
 */
NetworkUsersInner.prototype['top_questions'] = undefined;

/**
 * @member {Number} user_id
 */
NetworkUsersInner.prototype['user_id'] = undefined;

/**
 * @member {String} user_type
 */
NetworkUsersInner.prototype['user_type'] = undefined;






export default NetworkUsersInner;

