/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnswersInnerLastEditor from './AnswersInnerLastEditor';

/**
 * The CreatedComment model module.
 * @module model/CreatedComment
 * @version 2.0
 */
class CreatedComment {
    /**
     * Constructs a new <code>CreatedComment</code>.
     * @alias module:model/CreatedComment
     */
    constructor() { 
        
        CreatedComment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreatedComment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreatedComment} obj Optional instance to populate.
     * @return {module:model/CreatedComment} The populated <code>CreatedComment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreatedComment();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('body_markdown')) {
                obj['body_markdown'] = ApiClient.convertToType(data['body_markdown'], 'String');
            }
            if (data.hasOwnProperty('can_flag')) {
                obj['can_flag'] = ApiClient.convertToType(data['can_flag'], 'Boolean');
            }
            if (data.hasOwnProperty('comment_id')) {
                obj['comment_id'] = ApiClient.convertToType(data['comment_id'], 'Number');
            }
            if (data.hasOwnProperty('creation_date')) {
                obj['creation_date'] = ApiClient.convertToType(data['creation_date'], 'Number');
            }
            if (data.hasOwnProperty('edited')) {
                obj['edited'] = ApiClient.convertToType(data['edited'], 'Boolean');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = AnswersInnerLastEditor.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('post_id')) {
                obj['post_id'] = ApiClient.convertToType(data['post_id'], 'Number');
            }
            if (data.hasOwnProperty('post_type')) {
                obj['post_type'] = ApiClient.convertToType(data['post_type'], 'String');
            }
            if (data.hasOwnProperty('reply_to_user')) {
                obj['reply_to_user'] = AnswersInnerLastEditor.constructFromObject(data['reply_to_user']);
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('upvoted')) {
                obj['upvoted'] = ApiClient.convertToType(data['upvoted'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreatedComment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreatedComment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['body_markdown'] && !(typeof data['body_markdown'] === 'string' || data['body_markdown'] instanceof String)) {
            throw new Error("Expected the field `body_markdown` to be a primitive type in the JSON string but got " + data['body_markdown']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // validate the optional field `owner`
        if (data['owner']) { // data not null
          AnswersInnerLastEditor.validateJSON(data['owner']);
        }
        // ensure the json data is a string
        if (data['post_type'] && !(typeof data['post_type'] === 'string' || data['post_type'] instanceof String)) {
            throw new Error("Expected the field `post_type` to be a primitive type in the JSON string but got " + data['post_type']);
        }
        // validate the optional field `reply_to_user`
        if (data['reply_to_user']) { // data not null
          AnswersInnerLastEditor.validateJSON(data['reply_to_user']);
        }

        return true;
    }


}



/**
 * @member {String} body
 */
CreatedComment.prototype['body'] = undefined;

/**
 * @member {String} body_markdown
 */
CreatedComment.prototype['body_markdown'] = undefined;

/**
 * @member {Boolean} can_flag
 */
CreatedComment.prototype['can_flag'] = undefined;

/**
 * @member {Number} comment_id
 */
CreatedComment.prototype['comment_id'] = undefined;

/**
 * @member {Number} creation_date
 */
CreatedComment.prototype['creation_date'] = undefined;

/**
 * @member {Boolean} edited
 */
CreatedComment.prototype['edited'] = undefined;

/**
 * @member {String} link
 */
CreatedComment.prototype['link'] = undefined;

/**
 * @member {module:model/AnswersInnerLastEditor} owner
 */
CreatedComment.prototype['owner'] = undefined;

/**
 * @member {Number} post_id
 */
CreatedComment.prototype['post_id'] = undefined;

/**
 * @member {String} post_type
 */
CreatedComment.prototype['post_type'] = undefined;

/**
 * @member {module:model/AnswersInnerLastEditor} reply_to_user
 */
CreatedComment.prototype['reply_to_user'] = undefined;

/**
 * @member {Number} score
 */
CreatedComment.prototype['score'] = undefined;

/**
 * @member {Boolean} upvoted
 */
CreatedComment.prototype['upvoted'] = undefined;






export default CreatedComment;

