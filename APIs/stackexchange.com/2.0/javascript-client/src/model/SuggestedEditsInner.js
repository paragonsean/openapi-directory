/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnswersInnerLastEditor from './AnswersInnerLastEditor';

/**
 * The SuggestedEditsInner model module.
 * @module model/SuggestedEditsInner
 * @version 2.0
 */
class SuggestedEditsInner {
    /**
     * Constructs a new <code>SuggestedEditsInner</code>.
     * @alias module:model/SuggestedEditsInner
     */
    constructor() { 
        
        SuggestedEditsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SuggestedEditsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SuggestedEditsInner} obj Optional instance to populate.
     * @return {module:model/SuggestedEditsInner} The populated <code>SuggestedEditsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SuggestedEditsInner();

            if (data.hasOwnProperty('approval_date')) {
                obj['approval_date'] = ApiClient.convertToType(data['approval_date'], 'Number');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('creation_date')) {
                obj['creation_date'] = ApiClient.convertToType(data['creation_date'], 'Number');
            }
            if (data.hasOwnProperty('post_id')) {
                obj['post_id'] = ApiClient.convertToType(data['post_id'], 'Number');
            }
            if (data.hasOwnProperty('post_type')) {
                obj['post_type'] = ApiClient.convertToType(data['post_type'], 'String');
            }
            if (data.hasOwnProperty('proposing_user')) {
                obj['proposing_user'] = AnswersInnerLastEditor.constructFromObject(data['proposing_user']);
            }
            if (data.hasOwnProperty('rejection_date')) {
                obj['rejection_date'] = ApiClient.convertToType(data['rejection_date'], 'Number');
            }
            if (data.hasOwnProperty('suggested_edit_id')) {
                obj['suggested_edit_id'] = ApiClient.convertToType(data['suggested_edit_id'], 'Number');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [Object]);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SuggestedEditsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SuggestedEditsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['post_type'] && !(typeof data['post_type'] === 'string' || data['post_type'] instanceof String)) {
            throw new Error("Expected the field `post_type` to be a primitive type in the JSON string but got " + data['post_type']);
        }
        // validate the optional field `proposing_user`
        if (data['proposing_user']) { // data not null
          AnswersInnerLastEditor.validateJSON(data['proposing_user']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {Number} approval_date
 */
SuggestedEditsInner.prototype['approval_date'] = undefined;

/**
 * @member {String} body
 */
SuggestedEditsInner.prototype['body'] = undefined;

/**
 * @member {String} comment
 */
SuggestedEditsInner.prototype['comment'] = undefined;

/**
 * @member {Number} creation_date
 */
SuggestedEditsInner.prototype['creation_date'] = undefined;

/**
 * @member {Number} post_id
 */
SuggestedEditsInner.prototype['post_id'] = undefined;

/**
 * @member {String} post_type
 */
SuggestedEditsInner.prototype['post_type'] = undefined;

/**
 * @member {module:model/AnswersInnerLastEditor} proposing_user
 */
SuggestedEditsInner.prototype['proposing_user'] = undefined;

/**
 * @member {Number} rejection_date
 */
SuggestedEditsInner.prototype['rejection_date'] = undefined;

/**
 * @member {Number} suggested_edit_id
 */
SuggestedEditsInner.prototype['suggested_edit_id'] = undefined;

/**
 * @member {Array.<Object>} tags
 */
SuggestedEditsInner.prototype['tags'] = undefined;

/**
 * @member {String} title
 */
SuggestedEditsInner.prototype['title'] = undefined;






export default SuggestedEditsInner;

