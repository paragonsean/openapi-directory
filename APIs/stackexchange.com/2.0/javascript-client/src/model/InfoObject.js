/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InboxItemsInnerSite from './InboxItemsInnerSite';

/**
 * The InfoObject model module.
 * @module model/InfoObject
 * @version 2.0
 */
class InfoObject {
    /**
     * Constructs a new <code>InfoObject</code>.
     * @alias module:model/InfoObject
     */
    constructor() { 
        
        InfoObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InfoObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InfoObject} obj Optional instance to populate.
     * @return {module:model/InfoObject} The populated <code>InfoObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InfoObject();

            if (data.hasOwnProperty('answers_per_minute')) {
                obj['answers_per_minute'] = ApiClient.convertToType(data['answers_per_minute'], 'Number');
            }
            if (data.hasOwnProperty('api_revision')) {
                obj['api_revision'] = ApiClient.convertToType(data['api_revision'], 'String');
            }
            if (data.hasOwnProperty('badges_per_minute')) {
                obj['badges_per_minute'] = ApiClient.convertToType(data['badges_per_minute'], 'Number');
            }
            if (data.hasOwnProperty('new_active_users')) {
                obj['new_active_users'] = ApiClient.convertToType(data['new_active_users'], 'Number');
            }
            if (data.hasOwnProperty('questions_per_minute')) {
                obj['questions_per_minute'] = ApiClient.convertToType(data['questions_per_minute'], 'Number');
            }
            if (data.hasOwnProperty('site')) {
                obj['site'] = InboxItemsInnerSite.constructFromObject(data['site']);
            }
            if (data.hasOwnProperty('total_accepted')) {
                obj['total_accepted'] = ApiClient.convertToType(data['total_accepted'], 'Number');
            }
            if (data.hasOwnProperty('total_answers')) {
                obj['total_answers'] = ApiClient.convertToType(data['total_answers'], 'Number');
            }
            if (data.hasOwnProperty('total_badges')) {
                obj['total_badges'] = ApiClient.convertToType(data['total_badges'], 'Number');
            }
            if (data.hasOwnProperty('total_comments')) {
                obj['total_comments'] = ApiClient.convertToType(data['total_comments'], 'Number');
            }
            if (data.hasOwnProperty('total_questions')) {
                obj['total_questions'] = ApiClient.convertToType(data['total_questions'], 'Number');
            }
            if (data.hasOwnProperty('total_unanswered')) {
                obj['total_unanswered'] = ApiClient.convertToType(data['total_unanswered'], 'Number');
            }
            if (data.hasOwnProperty('total_users')) {
                obj['total_users'] = ApiClient.convertToType(data['total_users'], 'Number');
            }
            if (data.hasOwnProperty('total_votes')) {
                obj['total_votes'] = ApiClient.convertToType(data['total_votes'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InfoObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InfoObject</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['api_revision'] && !(typeof data['api_revision'] === 'string' || data['api_revision'] instanceof String)) {
            throw new Error("Expected the field `api_revision` to be a primitive type in the JSON string but got " + data['api_revision']);
        }
        // validate the optional field `site`
        if (data['site']) { // data not null
          InboxItemsInnerSite.validateJSON(data['site']);
        }

        return true;
    }


}



/**
 * @member {Number} answers_per_minute
 */
InfoObject.prototype['answers_per_minute'] = undefined;

/**
 * @member {String} api_revision
 */
InfoObject.prototype['api_revision'] = undefined;

/**
 * @member {Number} badges_per_minute
 */
InfoObject.prototype['badges_per_minute'] = undefined;

/**
 * @member {Number} new_active_users
 */
InfoObject.prototype['new_active_users'] = undefined;

/**
 * @member {Number} questions_per_minute
 */
InfoObject.prototype['questions_per_minute'] = undefined;

/**
 * @member {module:model/InboxItemsInnerSite} site
 */
InfoObject.prototype['site'] = undefined;

/**
 * @member {Number} total_accepted
 */
InfoObject.prototype['total_accepted'] = undefined;

/**
 * @member {Number} total_answers
 */
InfoObject.prototype['total_answers'] = undefined;

/**
 * @member {Number} total_badges
 */
InfoObject.prototype['total_badges'] = undefined;

/**
 * @member {Number} total_comments
 */
InfoObject.prototype['total_comments'] = undefined;

/**
 * @member {Number} total_questions
 */
InfoObject.prototype['total_questions'] = undefined;

/**
 * @member {Number} total_unanswered
 */
InfoObject.prototype['total_unanswered'] = undefined;

/**
 * @member {Number} total_users
 */
InfoObject.prototype['total_users'] = undefined;

/**
 * @member {Number} total_votes
 */
InfoObject.prototype['total_votes'] = undefined;






export default InfoObject;

