/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnswersInnerLastEditor from './AnswersInnerLastEditor';

/**
 * The RevisionsInner model module.
 * @module model/RevisionsInner
 * @version 2.0
 */
class RevisionsInner {
    /**
     * Constructs a new <code>RevisionsInner</code>.
     * @alias module:model/RevisionsInner
     */
    constructor() { 
        
        RevisionsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RevisionsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RevisionsInner} obj Optional instance to populate.
     * @return {module:model/RevisionsInner} The populated <code>RevisionsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RevisionsInner();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('creation_date')) {
                obj['creation_date'] = ApiClient.convertToType(data['creation_date'], 'Number');
            }
            if (data.hasOwnProperty('is_rollback')) {
                obj['is_rollback'] = ApiClient.convertToType(data['is_rollback'], 'Boolean');
            }
            if (data.hasOwnProperty('last_body')) {
                obj['last_body'] = ApiClient.convertToType(data['last_body'], 'String');
            }
            if (data.hasOwnProperty('last_tags')) {
                obj['last_tags'] = ApiClient.convertToType(data['last_tags'], [Object]);
            }
            if (data.hasOwnProperty('last_title')) {
                obj['last_title'] = ApiClient.convertToType(data['last_title'], 'String');
            }
            if (data.hasOwnProperty('post_id')) {
                obj['post_id'] = ApiClient.convertToType(data['post_id'], 'Number');
            }
            if (data.hasOwnProperty('post_type')) {
                obj['post_type'] = ApiClient.convertToType(data['post_type'], 'String');
            }
            if (data.hasOwnProperty('revision_guid')) {
                obj['revision_guid'] = ApiClient.convertToType(data['revision_guid'], 'String');
            }
            if (data.hasOwnProperty('revision_number')) {
                obj['revision_number'] = ApiClient.convertToType(data['revision_number'], 'Number');
            }
            if (data.hasOwnProperty('revision_type')) {
                obj['revision_type'] = ApiClient.convertToType(data['revision_type'], 'String');
            }
            if (data.hasOwnProperty('set_community_wiki')) {
                obj['set_community_wiki'] = ApiClient.convertToType(data['set_community_wiki'], 'Boolean');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [Object]);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = AnswersInnerLastEditor.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RevisionsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RevisionsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['body'] && !(typeof data['body'] === 'string' || data['body'] instanceof String)) {
            throw new Error("Expected the field `body` to be a primitive type in the JSON string but got " + data['body']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['last_body'] && !(typeof data['last_body'] === 'string' || data['last_body'] instanceof String)) {
            throw new Error("Expected the field `last_body` to be a primitive type in the JSON string but got " + data['last_body']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['last_tags'])) {
            throw new Error("Expected the field `last_tags` to be an array in the JSON data but got " + data['last_tags']);
        }
        // ensure the json data is a string
        if (data['last_title'] && !(typeof data['last_title'] === 'string' || data['last_title'] instanceof String)) {
            throw new Error("Expected the field `last_title` to be a primitive type in the JSON string but got " + data['last_title']);
        }
        // ensure the json data is a string
        if (data['post_type'] && !(typeof data['post_type'] === 'string' || data['post_type'] instanceof String)) {
            throw new Error("Expected the field `post_type` to be a primitive type in the JSON string but got " + data['post_type']);
        }
        // ensure the json data is a string
        if (data['revision_guid'] && !(typeof data['revision_guid'] === 'string' || data['revision_guid'] instanceof String)) {
            throw new Error("Expected the field `revision_guid` to be a primitive type in the JSON string but got " + data['revision_guid']);
        }
        // ensure the json data is a string
        if (data['revision_type'] && !(typeof data['revision_type'] === 'string' || data['revision_type'] instanceof String)) {
            throw new Error("Expected the field `revision_type` to be a primitive type in the JSON string but got " + data['revision_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          AnswersInnerLastEditor.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * @member {String} body
 */
RevisionsInner.prototype['body'] = undefined;

/**
 * @member {String} comment
 */
RevisionsInner.prototype['comment'] = undefined;

/**
 * @member {Number} creation_date
 */
RevisionsInner.prototype['creation_date'] = undefined;

/**
 * @member {Boolean} is_rollback
 */
RevisionsInner.prototype['is_rollback'] = undefined;

/**
 * @member {String} last_body
 */
RevisionsInner.prototype['last_body'] = undefined;

/**
 * @member {Array.<Object>} last_tags
 */
RevisionsInner.prototype['last_tags'] = undefined;

/**
 * @member {String} last_title
 */
RevisionsInner.prototype['last_title'] = undefined;

/**
 * @member {Number} post_id
 */
RevisionsInner.prototype['post_id'] = undefined;

/**
 * @member {String} post_type
 */
RevisionsInner.prototype['post_type'] = undefined;

/**
 * @member {String} revision_guid
 */
RevisionsInner.prototype['revision_guid'] = undefined;

/**
 * @member {Number} revision_number
 */
RevisionsInner.prototype['revision_number'] = undefined;

/**
 * @member {String} revision_type
 */
RevisionsInner.prototype['revision_type'] = undefined;

/**
 * @member {Boolean} set_community_wiki
 */
RevisionsInner.prototype['set_community_wiki'] = undefined;

/**
 * @member {Array.<Object>} tags
 */
RevisionsInner.prototype['tags'] = undefined;

/**
 * @member {String} title
 */
RevisionsInner.prototype['title'] = undefined;

/**
 * @member {module:model/AnswersInnerLastEditor} user
 */
RevisionsInner.prototype['user'] = undefined;






export default RevisionsInner;

