/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StackExchange);
  }
}(this, function(expect, StackExchange) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StackExchange.InboxItemsInnerSite();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InboxItemsInnerSite', function() {
    it('should create an instance of InboxItemsInnerSite', function() {
      // uncomment below and update the code to test InboxItemsInnerSite
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be.a(StackExchange.InboxItemsInnerSite);
    });

    it('should have the property aliases (base name: "aliases")', function() {
      // uncomment below and update the code to test the property aliases
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property apiSiteParameter (base name: "api_site_parameter")', function() {
      // uncomment below and update the code to test the property apiSiteParameter
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property audience (base name: "audience")', function() {
      // uncomment below and update the code to test the property audience
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property closedBetaDate (base name: "closed_beta_date")', function() {
      // uncomment below and update the code to test the property closedBetaDate
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property faviconUrl (base name: "favicon_url")', function() {
      // uncomment below and update the code to test the property faviconUrl
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property highResolutionIconUrl (base name: "high_resolution_icon_url")', function() {
      // uncomment below and update the code to test the property highResolutionIconUrl
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property iconUrl (base name: "icon_url")', function() {
      // uncomment below and update the code to test the property iconUrl
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property launchDate (base name: "launch_date")', function() {
      // uncomment below and update the code to test the property launchDate
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property logoUrl (base name: "logo_url")', function() {
      // uncomment below and update the code to test the property logoUrl
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property markdownExtensions (base name: "markdown_extensions")', function() {
      // uncomment below and update the code to test the property markdownExtensions
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property openBetaDate (base name: "open_beta_date")', function() {
      // uncomment below and update the code to test the property openBetaDate
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property relatedSites (base name: "related_sites")', function() {
      // uncomment below and update the code to test the property relatedSites
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property siteState (base name: "site_state")', function() {
      // uncomment below and update the code to test the property siteState
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property siteType (base name: "site_type")', function() {
      // uncomment below and update the code to test the property siteType
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property siteUrl (base name: "site_url")', function() {
      // uncomment below and update the code to test the property siteUrl
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property styling (base name: "styling")', function() {
      // uncomment below and update the code to test the property styling
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

    it('should have the property twitterAccount (base name: "twitter_account")', function() {
      // uncomment below and update the code to test the property twitterAccount
      //var instance = new StackExchange.InboxItemsInnerSite();
      //expect(instance).to.be();
    });

  });

}));
