# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.answers_inner_last_editor import AnswersInnerLastEditor
from openapi_server import util


class TagScoreObjectsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, post_count: int=None, score: int=None, user: AnswersInnerLastEditor=None):
        """TagScoreObjectsInner - a model defined in OpenAPI

        :param post_count: The post_count of this TagScoreObjectsInner.
        :param score: The score of this TagScoreObjectsInner.
        :param user: The user of this TagScoreObjectsInner.
        """
        self.openapi_types = {
            'post_count': int,
            'score': int,
            'user': AnswersInnerLastEditor
        }

        self.attribute_map = {
            'post_count': 'post_count',
            'score': 'score',
            'user': 'user'
        }

        self._post_count = post_count
        self._score = score
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagScoreObjectsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The tag_score_objects_inner of this TagScoreObjectsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def post_count(self):
        """Gets the post_count of this TagScoreObjectsInner.


        :return: The post_count of this TagScoreObjectsInner.
        :rtype: int
        """
        return self._post_count

    @post_count.setter
    def post_count(self, post_count):
        """Sets the post_count of this TagScoreObjectsInner.


        :param post_count: The post_count of this TagScoreObjectsInner.
        :type post_count: int
        """

        self._post_count = post_count

    @property
    def score(self):
        """Gets the score of this TagScoreObjectsInner.


        :return: The score of this TagScoreObjectsInner.
        :rtype: int
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this TagScoreObjectsInner.


        :param score: The score of this TagScoreObjectsInner.
        :type score: int
        """

        self._score = score

    @property
    def user(self):
        """Gets the user of this TagScoreObjectsInner.


        :return: The user of this TagScoreObjectsInner.
        :rtype: AnswersInnerLastEditor
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this TagScoreObjectsInner.


        :param user: The user of this TagScoreObjectsInner.
        :type user: AnswersInnerLastEditor
        """

        self._user = user
