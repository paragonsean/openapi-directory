# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountMergeInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, merge_date: int=None, new_account_id: int=None, old_account_id: int=None):
        """AccountMergeInner - a model defined in OpenAPI

        :param merge_date: The merge_date of this AccountMergeInner.
        :param new_account_id: The new_account_id of this AccountMergeInner.
        :param old_account_id: The old_account_id of this AccountMergeInner.
        """
        self.openapi_types = {
            'merge_date': int,
            'new_account_id': int,
            'old_account_id': int
        }

        self.attribute_map = {
            'merge_date': 'merge_date',
            'new_account_id': 'new_account_id',
            'old_account_id': 'old_account_id'
        }

        self._merge_date = merge_date
        self._new_account_id = new_account_id
        self._old_account_id = old_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountMergeInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The account_merge_inner of this AccountMergeInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def merge_date(self):
        """Gets the merge_date of this AccountMergeInner.


        :return: The merge_date of this AccountMergeInner.
        :rtype: int
        """
        return self._merge_date

    @merge_date.setter
    def merge_date(self, merge_date):
        """Sets the merge_date of this AccountMergeInner.


        :param merge_date: The merge_date of this AccountMergeInner.
        :type merge_date: int
        """

        self._merge_date = merge_date

    @property
    def new_account_id(self):
        """Gets the new_account_id of this AccountMergeInner.


        :return: The new_account_id of this AccountMergeInner.
        :rtype: int
        """
        return self._new_account_id

    @new_account_id.setter
    def new_account_id(self, new_account_id):
        """Sets the new_account_id of this AccountMergeInner.


        :param new_account_id: The new_account_id of this AccountMergeInner.
        :type new_account_id: int
        """

        self._new_account_id = new_account_id

    @property
    def old_account_id(self):
        """Gets the old_account_id of this AccountMergeInner.


        :return: The old_account_id of this AccountMergeInner.
        :rtype: int
        """
        return self._old_account_id

    @old_account_id.setter
    def old_account_id(self, old_account_id):
        """Sets the old_account_id of this AccountMergeInner.


        :param old_account_id: The old_account_id of this AccountMergeInner.
        :type old_account_id: int
        """

        self._old_account_id = old_account_id
