# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, error_id: int=None, error_name: str=None):
        """ErrorsInner - a model defined in OpenAPI

        :param description: The description of this ErrorsInner.
        :param error_id: The error_id of this ErrorsInner.
        :param error_name: The error_name of this ErrorsInner.
        """
        self.openapi_types = {
            'description': str,
            'error_id': int,
            'error_name': str
        }

        self.attribute_map = {
            'description': 'description',
            'error_id': 'error_id',
            'error_name': 'error_name'
        }

        self._description = description
        self._error_id = error_id
        self._error_name = error_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The errors_inner of this ErrorsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ErrorsInner.


        :return: The description of this ErrorsInner.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ErrorsInner.


        :param description: The description of this ErrorsInner.
        :type description: str
        """

        self._description = description

    @property
    def error_id(self):
        """Gets the error_id of this ErrorsInner.


        :return: The error_id of this ErrorsInner.
        :rtype: int
        """
        return self._error_id

    @error_id.setter
    def error_id(self, error_id):
        """Sets the error_id of this ErrorsInner.


        :param error_id: The error_id of this ErrorsInner.
        :type error_id: int
        """

        self._error_id = error_id

    @property
    def error_name(self):
        """Gets the error_name of this ErrorsInner.


        :return: The error_name of this ErrorsInner.
        :rtype: str
        """
        return self._error_name

    @error_name.setter
    def error_name(self, error_name):
        """Sets the error_name of this ErrorsInner.


        :param error_name: The error_name of this ErrorsInner.
        :type error_name: str
        """

        self._error_name = error_name
