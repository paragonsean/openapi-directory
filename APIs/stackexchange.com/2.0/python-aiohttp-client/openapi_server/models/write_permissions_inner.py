# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WritePermissionsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, can_add: bool=None, can_delete: bool=None, can_edit: bool=None, max_daily_actions: int=None, min_seconds_between_actions: int=None, object_type: str=None, user_id: int=None):
        """WritePermissionsInner - a model defined in OpenAPI

        :param can_add: The can_add of this WritePermissionsInner.
        :param can_delete: The can_delete of this WritePermissionsInner.
        :param can_edit: The can_edit of this WritePermissionsInner.
        :param max_daily_actions: The max_daily_actions of this WritePermissionsInner.
        :param min_seconds_between_actions: The min_seconds_between_actions of this WritePermissionsInner.
        :param object_type: The object_type of this WritePermissionsInner.
        :param user_id: The user_id of this WritePermissionsInner.
        """
        self.openapi_types = {
            'can_add': bool,
            'can_delete': bool,
            'can_edit': bool,
            'max_daily_actions': int,
            'min_seconds_between_actions': int,
            'object_type': str,
            'user_id': int
        }

        self.attribute_map = {
            'can_add': 'can_add',
            'can_delete': 'can_delete',
            'can_edit': 'can_edit',
            'max_daily_actions': 'max_daily_actions',
            'min_seconds_between_actions': 'min_seconds_between_actions',
            'object_type': 'object_type',
            'user_id': 'user_id'
        }

        self._can_add = can_add
        self._can_delete = can_delete
        self._can_edit = can_edit
        self._max_daily_actions = max_daily_actions
        self._min_seconds_between_actions = min_seconds_between_actions
        self._object_type = object_type
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WritePermissionsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The write_permissions_inner of this WritePermissionsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def can_add(self):
        """Gets the can_add of this WritePermissionsInner.


        :return: The can_add of this WritePermissionsInner.
        :rtype: bool
        """
        return self._can_add

    @can_add.setter
    def can_add(self, can_add):
        """Sets the can_add of this WritePermissionsInner.


        :param can_add: The can_add of this WritePermissionsInner.
        :type can_add: bool
        """

        self._can_add = can_add

    @property
    def can_delete(self):
        """Gets the can_delete of this WritePermissionsInner.


        :return: The can_delete of this WritePermissionsInner.
        :rtype: bool
        """
        return self._can_delete

    @can_delete.setter
    def can_delete(self, can_delete):
        """Sets the can_delete of this WritePermissionsInner.


        :param can_delete: The can_delete of this WritePermissionsInner.
        :type can_delete: bool
        """

        self._can_delete = can_delete

    @property
    def can_edit(self):
        """Gets the can_edit of this WritePermissionsInner.


        :return: The can_edit of this WritePermissionsInner.
        :rtype: bool
        """
        return self._can_edit

    @can_edit.setter
    def can_edit(self, can_edit):
        """Sets the can_edit of this WritePermissionsInner.


        :param can_edit: The can_edit of this WritePermissionsInner.
        :type can_edit: bool
        """

        self._can_edit = can_edit

    @property
    def max_daily_actions(self):
        """Gets the max_daily_actions of this WritePermissionsInner.


        :return: The max_daily_actions of this WritePermissionsInner.
        :rtype: int
        """
        return self._max_daily_actions

    @max_daily_actions.setter
    def max_daily_actions(self, max_daily_actions):
        """Sets the max_daily_actions of this WritePermissionsInner.


        :param max_daily_actions: The max_daily_actions of this WritePermissionsInner.
        :type max_daily_actions: int
        """

        self._max_daily_actions = max_daily_actions

    @property
    def min_seconds_between_actions(self):
        """Gets the min_seconds_between_actions of this WritePermissionsInner.


        :return: The min_seconds_between_actions of this WritePermissionsInner.
        :rtype: int
        """
        return self._min_seconds_between_actions

    @min_seconds_between_actions.setter
    def min_seconds_between_actions(self, min_seconds_between_actions):
        """Sets the min_seconds_between_actions of this WritePermissionsInner.


        :param min_seconds_between_actions: The min_seconds_between_actions of this WritePermissionsInner.
        :type min_seconds_between_actions: int
        """

        self._min_seconds_between_actions = min_seconds_between_actions

    @property
    def object_type(self):
        """Gets the object_type of this WritePermissionsInner.


        :return: The object_type of this WritePermissionsInner.
        :rtype: str
        """
        return self._object_type

    @object_type.setter
    def object_type(self, object_type):
        """Sets the object_type of this WritePermissionsInner.


        :param object_type: The object_type of this WritePermissionsInner.
        :type object_type: str
        """

        self._object_type = object_type

    @property
    def user_id(self):
        """Gets the user_id of this WritePermissionsInner.


        :return: The user_id of this WritePermissionsInner.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this WritePermissionsInner.


        :param user_id: The user_id of this WritePermissionsInner.
        :type user_id: int
        """

        self._user_id = user_id
