# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QuestionsInnerClosedDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, by_users: List[object]=None, description: str=None, on_hold: bool=None, original_questions: List[object]=None, reason: str=None):
        """QuestionsInnerClosedDetails - a model defined in OpenAPI

        :param by_users: The by_users of this QuestionsInnerClosedDetails.
        :param description: The description of this QuestionsInnerClosedDetails.
        :param on_hold: The on_hold of this QuestionsInnerClosedDetails.
        :param original_questions: The original_questions of this QuestionsInnerClosedDetails.
        :param reason: The reason of this QuestionsInnerClosedDetails.
        """
        self.openapi_types = {
            'by_users': List[object],
            'description': str,
            'on_hold': bool,
            'original_questions': List[object],
            'reason': str
        }

        self.attribute_map = {
            'by_users': 'by_users',
            'description': 'description',
            'on_hold': 'on_hold',
            'original_questions': 'original_questions',
            'reason': 'reason'
        }

        self._by_users = by_users
        self._description = description
        self._on_hold = on_hold
        self._original_questions = original_questions
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuestionsInnerClosedDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The questions_inner_closed_details of this QuestionsInnerClosedDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def by_users(self):
        """Gets the by_users of this QuestionsInnerClosedDetails.


        :return: The by_users of this QuestionsInnerClosedDetails.
        :rtype: List[object]
        """
        return self._by_users

    @by_users.setter
    def by_users(self, by_users):
        """Sets the by_users of this QuestionsInnerClosedDetails.


        :param by_users: The by_users of this QuestionsInnerClosedDetails.
        :type by_users: List[object]
        """

        self._by_users = by_users

    @property
    def description(self):
        """Gets the description of this QuestionsInnerClosedDetails.


        :return: The description of this QuestionsInnerClosedDetails.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this QuestionsInnerClosedDetails.


        :param description: The description of this QuestionsInnerClosedDetails.
        :type description: str
        """

        self._description = description

    @property
    def on_hold(self):
        """Gets the on_hold of this QuestionsInnerClosedDetails.


        :return: The on_hold of this QuestionsInnerClosedDetails.
        :rtype: bool
        """
        return self._on_hold

    @on_hold.setter
    def on_hold(self, on_hold):
        """Sets the on_hold of this QuestionsInnerClosedDetails.


        :param on_hold: The on_hold of this QuestionsInnerClosedDetails.
        :type on_hold: bool
        """

        self._on_hold = on_hold

    @property
    def original_questions(self):
        """Gets the original_questions of this QuestionsInnerClosedDetails.


        :return: The original_questions of this QuestionsInnerClosedDetails.
        :rtype: List[object]
        """
        return self._original_questions

    @original_questions.setter
    def original_questions(self, original_questions):
        """Sets the original_questions of this QuestionsInnerClosedDetails.


        :param original_questions: The original_questions of this QuestionsInnerClosedDetails.
        :type original_questions: List[object]
        """

        self._original_questions = original_questions

    @property
    def reason(self):
        """Gets the reason of this QuestionsInnerClosedDetails.


        :return: The reason of this QuestionsInnerClosedDetails.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this QuestionsInnerClosedDetails.


        :param reason: The reason of this QuestionsInnerClosedDetails.
        :type reason: str
        """

        self._reason = reason
