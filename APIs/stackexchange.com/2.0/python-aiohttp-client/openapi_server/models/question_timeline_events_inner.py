# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.answers_inner_last_editor import AnswersInnerLastEditor
from openapi_server import util


class QuestionTimelineEventsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment_id: int=None, creation_date: int=None, down_vote_count: int=None, owner: AnswersInnerLastEditor=None, post_id: int=None, question_id: int=None, revision_guid: str=None, timeline_type: str=None, up_vote_count: int=None, user: AnswersInnerLastEditor=None):
        """QuestionTimelineEventsInner - a model defined in OpenAPI

        :param comment_id: The comment_id of this QuestionTimelineEventsInner.
        :param creation_date: The creation_date of this QuestionTimelineEventsInner.
        :param down_vote_count: The down_vote_count of this QuestionTimelineEventsInner.
        :param owner: The owner of this QuestionTimelineEventsInner.
        :param post_id: The post_id of this QuestionTimelineEventsInner.
        :param question_id: The question_id of this QuestionTimelineEventsInner.
        :param revision_guid: The revision_guid of this QuestionTimelineEventsInner.
        :param timeline_type: The timeline_type of this QuestionTimelineEventsInner.
        :param up_vote_count: The up_vote_count of this QuestionTimelineEventsInner.
        :param user: The user of this QuestionTimelineEventsInner.
        """
        self.openapi_types = {
            'comment_id': int,
            'creation_date': int,
            'down_vote_count': int,
            'owner': AnswersInnerLastEditor,
            'post_id': int,
            'question_id': int,
            'revision_guid': str,
            'timeline_type': str,
            'up_vote_count': int,
            'user': AnswersInnerLastEditor
        }

        self.attribute_map = {
            'comment_id': 'comment_id',
            'creation_date': 'creation_date',
            'down_vote_count': 'down_vote_count',
            'owner': 'owner',
            'post_id': 'post_id',
            'question_id': 'question_id',
            'revision_guid': 'revision_guid',
            'timeline_type': 'timeline_type',
            'up_vote_count': 'up_vote_count',
            'user': 'user'
        }

        self._comment_id = comment_id
        self._creation_date = creation_date
        self._down_vote_count = down_vote_count
        self._owner = owner
        self._post_id = post_id
        self._question_id = question_id
        self._revision_guid = revision_guid
        self._timeline_type = timeline_type
        self._up_vote_count = up_vote_count
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuestionTimelineEventsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The question_timeline_events_inner of this QuestionTimelineEventsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment_id(self):
        """Gets the comment_id of this QuestionTimelineEventsInner.


        :return: The comment_id of this QuestionTimelineEventsInner.
        :rtype: int
        """
        return self._comment_id

    @comment_id.setter
    def comment_id(self, comment_id):
        """Sets the comment_id of this QuestionTimelineEventsInner.


        :param comment_id: The comment_id of this QuestionTimelineEventsInner.
        :type comment_id: int
        """

        self._comment_id = comment_id

    @property
    def creation_date(self):
        """Gets the creation_date of this QuestionTimelineEventsInner.


        :return: The creation_date of this QuestionTimelineEventsInner.
        :rtype: int
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this QuestionTimelineEventsInner.


        :param creation_date: The creation_date of this QuestionTimelineEventsInner.
        :type creation_date: int
        """

        self._creation_date = creation_date

    @property
    def down_vote_count(self):
        """Gets the down_vote_count of this QuestionTimelineEventsInner.


        :return: The down_vote_count of this QuestionTimelineEventsInner.
        :rtype: int
        """
        return self._down_vote_count

    @down_vote_count.setter
    def down_vote_count(self, down_vote_count):
        """Sets the down_vote_count of this QuestionTimelineEventsInner.


        :param down_vote_count: The down_vote_count of this QuestionTimelineEventsInner.
        :type down_vote_count: int
        """

        self._down_vote_count = down_vote_count

    @property
    def owner(self):
        """Gets the owner of this QuestionTimelineEventsInner.


        :return: The owner of this QuestionTimelineEventsInner.
        :rtype: AnswersInnerLastEditor
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this QuestionTimelineEventsInner.


        :param owner: The owner of this QuestionTimelineEventsInner.
        :type owner: AnswersInnerLastEditor
        """

        self._owner = owner

    @property
    def post_id(self):
        """Gets the post_id of this QuestionTimelineEventsInner.


        :return: The post_id of this QuestionTimelineEventsInner.
        :rtype: int
        """
        return self._post_id

    @post_id.setter
    def post_id(self, post_id):
        """Sets the post_id of this QuestionTimelineEventsInner.


        :param post_id: The post_id of this QuestionTimelineEventsInner.
        :type post_id: int
        """

        self._post_id = post_id

    @property
    def question_id(self):
        """Gets the question_id of this QuestionTimelineEventsInner.


        :return: The question_id of this QuestionTimelineEventsInner.
        :rtype: int
        """
        return self._question_id

    @question_id.setter
    def question_id(self, question_id):
        """Sets the question_id of this QuestionTimelineEventsInner.


        :param question_id: The question_id of this QuestionTimelineEventsInner.
        :type question_id: int
        """

        self._question_id = question_id

    @property
    def revision_guid(self):
        """Gets the revision_guid of this QuestionTimelineEventsInner.


        :return: The revision_guid of this QuestionTimelineEventsInner.
        :rtype: str
        """
        return self._revision_guid

    @revision_guid.setter
    def revision_guid(self, revision_guid):
        """Sets the revision_guid of this QuestionTimelineEventsInner.


        :param revision_guid: The revision_guid of this QuestionTimelineEventsInner.
        :type revision_guid: str
        """

        self._revision_guid = revision_guid

    @property
    def timeline_type(self):
        """Gets the timeline_type of this QuestionTimelineEventsInner.


        :return: The timeline_type of this QuestionTimelineEventsInner.
        :rtype: str
        """
        return self._timeline_type

    @timeline_type.setter
    def timeline_type(self, timeline_type):
        """Sets the timeline_type of this QuestionTimelineEventsInner.


        :param timeline_type: The timeline_type of this QuestionTimelineEventsInner.
        :type timeline_type: str
        """

        self._timeline_type = timeline_type

    @property
    def up_vote_count(self):
        """Gets the up_vote_count of this QuestionTimelineEventsInner.


        :return: The up_vote_count of this QuestionTimelineEventsInner.
        :rtype: int
        """
        return self._up_vote_count

    @up_vote_count.setter
    def up_vote_count(self, up_vote_count):
        """Sets the up_vote_count of this QuestionTimelineEventsInner.


        :param up_vote_count: The up_vote_count of this QuestionTimelineEventsInner.
        :type up_vote_count: int
        """

        self._up_vote_count = up_vote_count

    @property
    def user(self):
        """Gets the user of this QuestionTimelineEventsInner.


        :return: The user of this QuestionTimelineEventsInner.
        :rtype: AnswersInnerLastEditor
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this QuestionTimelineEventsInner.


        :param user: The user of this QuestionTimelineEventsInner.
        :type user: AnswersInnerLastEditor
        """

        self._user = user
