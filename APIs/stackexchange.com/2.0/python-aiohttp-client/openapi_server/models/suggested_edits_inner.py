# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.answers_inner_last_editor import AnswersInnerLastEditor
from openapi_server import util


class SuggestedEditsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approval_date: int=None, body: str=None, comment: str=None, creation_date: int=None, post_id: int=None, post_type: str=None, proposing_user: AnswersInnerLastEditor=None, rejection_date: int=None, suggested_edit_id: int=None, tags: List[object]=None, title: str=None):
        """SuggestedEditsInner - a model defined in OpenAPI

        :param approval_date: The approval_date of this SuggestedEditsInner.
        :param body: The body of this SuggestedEditsInner.
        :param comment: The comment of this SuggestedEditsInner.
        :param creation_date: The creation_date of this SuggestedEditsInner.
        :param post_id: The post_id of this SuggestedEditsInner.
        :param post_type: The post_type of this SuggestedEditsInner.
        :param proposing_user: The proposing_user of this SuggestedEditsInner.
        :param rejection_date: The rejection_date of this SuggestedEditsInner.
        :param suggested_edit_id: The suggested_edit_id of this SuggestedEditsInner.
        :param tags: The tags of this SuggestedEditsInner.
        :param title: The title of this SuggestedEditsInner.
        """
        self.openapi_types = {
            'approval_date': int,
            'body': str,
            'comment': str,
            'creation_date': int,
            'post_id': int,
            'post_type': str,
            'proposing_user': AnswersInnerLastEditor,
            'rejection_date': int,
            'suggested_edit_id': int,
            'tags': List[object],
            'title': str
        }

        self.attribute_map = {
            'approval_date': 'approval_date',
            'body': 'body',
            'comment': 'comment',
            'creation_date': 'creation_date',
            'post_id': 'post_id',
            'post_type': 'post_type',
            'proposing_user': 'proposing_user',
            'rejection_date': 'rejection_date',
            'suggested_edit_id': 'suggested_edit_id',
            'tags': 'tags',
            'title': 'title'
        }

        self._approval_date = approval_date
        self._body = body
        self._comment = comment
        self._creation_date = creation_date
        self._post_id = post_id
        self._post_type = post_type
        self._proposing_user = proposing_user
        self._rejection_date = rejection_date
        self._suggested_edit_id = suggested_edit_id
        self._tags = tags
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuggestedEditsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The suggested_edits_inner of this SuggestedEditsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approval_date(self):
        """Gets the approval_date of this SuggestedEditsInner.


        :return: The approval_date of this SuggestedEditsInner.
        :rtype: int
        """
        return self._approval_date

    @approval_date.setter
    def approval_date(self, approval_date):
        """Sets the approval_date of this SuggestedEditsInner.


        :param approval_date: The approval_date of this SuggestedEditsInner.
        :type approval_date: int
        """

        self._approval_date = approval_date

    @property
    def body(self):
        """Gets the body of this SuggestedEditsInner.


        :return: The body of this SuggestedEditsInner.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this SuggestedEditsInner.


        :param body: The body of this SuggestedEditsInner.
        :type body: str
        """

        self._body = body

    @property
    def comment(self):
        """Gets the comment of this SuggestedEditsInner.


        :return: The comment of this SuggestedEditsInner.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this SuggestedEditsInner.


        :param comment: The comment of this SuggestedEditsInner.
        :type comment: str
        """

        self._comment = comment

    @property
    def creation_date(self):
        """Gets the creation_date of this SuggestedEditsInner.


        :return: The creation_date of this SuggestedEditsInner.
        :rtype: int
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this SuggestedEditsInner.


        :param creation_date: The creation_date of this SuggestedEditsInner.
        :type creation_date: int
        """

        self._creation_date = creation_date

    @property
    def post_id(self):
        """Gets the post_id of this SuggestedEditsInner.


        :return: The post_id of this SuggestedEditsInner.
        :rtype: int
        """
        return self._post_id

    @post_id.setter
    def post_id(self, post_id):
        """Sets the post_id of this SuggestedEditsInner.


        :param post_id: The post_id of this SuggestedEditsInner.
        :type post_id: int
        """

        self._post_id = post_id

    @property
    def post_type(self):
        """Gets the post_type of this SuggestedEditsInner.


        :return: The post_type of this SuggestedEditsInner.
        :rtype: str
        """
        return self._post_type

    @post_type.setter
    def post_type(self, post_type):
        """Sets the post_type of this SuggestedEditsInner.


        :param post_type: The post_type of this SuggestedEditsInner.
        :type post_type: str
        """

        self._post_type = post_type

    @property
    def proposing_user(self):
        """Gets the proposing_user of this SuggestedEditsInner.


        :return: The proposing_user of this SuggestedEditsInner.
        :rtype: AnswersInnerLastEditor
        """
        return self._proposing_user

    @proposing_user.setter
    def proposing_user(self, proposing_user):
        """Sets the proposing_user of this SuggestedEditsInner.


        :param proposing_user: The proposing_user of this SuggestedEditsInner.
        :type proposing_user: AnswersInnerLastEditor
        """

        self._proposing_user = proposing_user

    @property
    def rejection_date(self):
        """Gets the rejection_date of this SuggestedEditsInner.


        :return: The rejection_date of this SuggestedEditsInner.
        :rtype: int
        """
        return self._rejection_date

    @rejection_date.setter
    def rejection_date(self, rejection_date):
        """Sets the rejection_date of this SuggestedEditsInner.


        :param rejection_date: The rejection_date of this SuggestedEditsInner.
        :type rejection_date: int
        """

        self._rejection_date = rejection_date

    @property
    def suggested_edit_id(self):
        """Gets the suggested_edit_id of this SuggestedEditsInner.


        :return: The suggested_edit_id of this SuggestedEditsInner.
        :rtype: int
        """
        return self._suggested_edit_id

    @suggested_edit_id.setter
    def suggested_edit_id(self, suggested_edit_id):
        """Sets the suggested_edit_id of this SuggestedEditsInner.


        :param suggested_edit_id: The suggested_edit_id of this SuggestedEditsInner.
        :type suggested_edit_id: int
        """

        self._suggested_edit_id = suggested_edit_id

    @property
    def tags(self):
        """Gets the tags of this SuggestedEditsInner.


        :return: The tags of this SuggestedEditsInner.
        :rtype: List[object]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this SuggestedEditsInner.


        :param tags: The tags of this SuggestedEditsInner.
        :type tags: List[object]
        """

        self._tags = tags

    @property
    def title(self):
        """Gets the title of this SuggestedEditsInner.


        :return: The title of this SuggestedEditsInner.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SuggestedEditsInner.


        :param title: The title of this SuggestedEditsInner.
        :type title: str
        """

        self._title = title
