/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInbox_items_inner.h
 *
 * 
 */

#ifndef OAIInbox_items_inner_H
#define OAIInbox_items_inner_H

#include <QJsonObject>

#include "OAIInbox_items_inner_site.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInbox_items_inner_site;

class OAIInbox_items_inner : public OAIObject {
public:
    OAIInbox_items_inner();
    OAIInbox_items_inner(QString json);
    ~OAIInbox_items_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAnswerId() const;
    void setAnswerId(const qint32 &answer_id);
    bool is_answer_id_Set() const;
    bool is_answer_id_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    qint32 getCommentId() const;
    void setCommentId(const qint32 &comment_id);
    bool is_comment_id_Set() const;
    bool is_comment_id_Valid() const;

    qint32 getCreationDate() const;
    void setCreationDate(const qint32 &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    bool isIsUnread() const;
    void setIsUnread(const bool &is_unread);
    bool is_is_unread_Set() const;
    bool is_is_unread_Valid() const;

    QString getItemType() const;
    void setItemType(const QString &item_type);
    bool is_item_type_Set() const;
    bool is_item_type_Valid() const;

    QString getLink() const;
    void setLink(const QString &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    qint32 getQuestionId() const;
    void setQuestionId(const qint32 &question_id);
    bool is_question_id_Set() const;
    bool is_question_id_Valid() const;

    OAIInbox_items_inner_site getSite() const;
    void setSite(const OAIInbox_items_inner_site &site);
    bool is_site_Set() const;
    bool is_site_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_answer_id;
    bool m_answer_id_isSet;
    bool m_answer_id_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    qint32 m_comment_id;
    bool m_comment_id_isSet;
    bool m_comment_id_isValid;

    qint32 m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    bool m_is_unread;
    bool m_is_unread_isSet;
    bool m_is_unread_isValid;

    QString m_item_type;
    bool m_item_type_isSet;
    bool m_item_type_isValid;

    QString m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    qint32 m_question_id;
    bool m_question_id_isSet;
    bool m_question_id_isValid;

    OAIInbox_items_inner_site m_site;
    bool m_site_isSet;
    bool m_site_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInbox_items_inner)

#endif // OAIInbox_items_inner_H
