/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPosts_inner.h
 *
 * 
 */

#ifndef OAIPosts_inner_H
#define OAIPosts_inner_H

#include <QJsonObject>

#include "OAIAnswers_inner_last_editor.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnswers_inner_last_editor;

class OAIPosts_inner : public OAIObject {
public:
    OAIPosts_inner();
    OAIPosts_inner(QString json);
    ~OAIPosts_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getBodyMarkdown() const;
    void setBodyMarkdown(const QString &body_markdown);
    bool is_body_markdown_Set() const;
    bool is_body_markdown_Valid() const;

    qint32 getCommentCount() const;
    void setCommentCount(const qint32 &comment_count);
    bool is_comment_count_Set() const;
    bool is_comment_count_Valid() const;

    QList<QJsonValue> getComments() const;
    void setComments(const QList<QJsonValue> &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    qint32 getCreationDate() const;
    void setCreationDate(const qint32 &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    qint32 getDownVoteCount() const;
    void setDownVoteCount(const qint32 &down_vote_count);
    bool is_down_vote_count_Set() const;
    bool is_down_vote_count_Valid() const;

    bool isDownvoted() const;
    void setDownvoted(const bool &downvoted);
    bool is_downvoted_Set() const;
    bool is_downvoted_Valid() const;

    qint32 getLastActivityDate() const;
    void setLastActivityDate(const qint32 &last_activity_date);
    bool is_last_activity_date_Set() const;
    bool is_last_activity_date_Valid() const;

    qint32 getLastEditDate() const;
    void setLastEditDate(const qint32 &last_edit_date);
    bool is_last_edit_date_Set() const;
    bool is_last_edit_date_Valid() const;

    OAIAnswers_inner_last_editor getLastEditor() const;
    void setLastEditor(const OAIAnswers_inner_last_editor &last_editor);
    bool is_last_editor_Set() const;
    bool is_last_editor_Valid() const;

    QString getLink() const;
    void setLink(const QString &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    OAIAnswers_inner_last_editor getOwner() const;
    void setOwner(const OAIAnswers_inner_last_editor &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    qint32 getPostId() const;
    void setPostId(const qint32 &post_id);
    bool is_post_id_Set() const;
    bool is_post_id_Valid() const;

    QString getPostType() const;
    void setPostType(const QString &post_type);
    bool is_post_type_Set() const;
    bool is_post_type_Valid() const;

    qint32 getScore() const;
    void setScore(const qint32 &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QString getShareLink() const;
    void setShareLink(const QString &share_link);
    bool is_share_link_Set() const;
    bool is_share_link_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    qint32 getUpVoteCount() const;
    void setUpVoteCount(const qint32 &up_vote_count);
    bool is_up_vote_count_Set() const;
    bool is_up_vote_count_Valid() const;

    bool isUpvoted() const;
    void setUpvoted(const bool &upvoted);
    bool is_upvoted_Set() const;
    bool is_upvoted_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_body_markdown;
    bool m_body_markdown_isSet;
    bool m_body_markdown_isValid;

    qint32 m_comment_count;
    bool m_comment_count_isSet;
    bool m_comment_count_isValid;

    QList<QJsonValue> m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    qint32 m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    qint32 m_down_vote_count;
    bool m_down_vote_count_isSet;
    bool m_down_vote_count_isValid;

    bool m_downvoted;
    bool m_downvoted_isSet;
    bool m_downvoted_isValid;

    qint32 m_last_activity_date;
    bool m_last_activity_date_isSet;
    bool m_last_activity_date_isValid;

    qint32 m_last_edit_date;
    bool m_last_edit_date_isSet;
    bool m_last_edit_date_isValid;

    OAIAnswers_inner_last_editor m_last_editor;
    bool m_last_editor_isSet;
    bool m_last_editor_isValid;

    QString m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    OAIAnswers_inner_last_editor m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    qint32 m_post_id;
    bool m_post_id_isSet;
    bool m_post_id_isValid;

    QString m_post_type;
    bool m_post_type_isSet;
    bool m_post_type_isValid;

    qint32 m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QString m_share_link;
    bool m_share_link_isSet;
    bool m_share_link_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    qint32 m_up_vote_count;
    bool m_up_vote_count_isSet;
    bool m_up_vote_count_isValid;

    bool m_upvoted;
    bool m_upvoted_isSet;
    bool m_upvoted_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPosts_inner)

#endif // OAIPosts_inner_H
