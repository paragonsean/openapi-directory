/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITags_inner.h
 *
 * 
 */

#ifndef OAITags_inner_H
#define OAITags_inner_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITags_inner : public OAIObject {
public:
    OAITags_inner();
    OAITags_inner(QString json);
    ~OAITags_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    bool isHasSynonyms() const;
    void setHasSynonyms(const bool &has_synonyms);
    bool is_has_synonyms_Set() const;
    bool is_has_synonyms_Valid() const;

    bool isIsModeratorOnly() const;
    void setIsModeratorOnly(const bool &is_moderator_only);
    bool is_is_moderator_only_Set() const;
    bool is_is_moderator_only_Valid() const;

    bool isIsRequired() const;
    void setIsRequired(const bool &is_required);
    bool is_is_required_Set() const;
    bool is_is_required_Valid() const;

    qint32 getLastActivityDate() const;
    void setLastActivityDate(const qint32 &last_activity_date);
    bool is_last_activity_date_Set() const;
    bool is_last_activity_date_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QJsonValue> getSynonyms() const;
    void setSynonyms(const QList<QJsonValue> &synonyms);
    bool is_synonyms_Set() const;
    bool is_synonyms_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    bool m_has_synonyms;
    bool m_has_synonyms_isSet;
    bool m_has_synonyms_isValid;

    bool m_is_moderator_only;
    bool m_is_moderator_only_isSet;
    bool m_is_moderator_only_isValid;

    bool m_is_required;
    bool m_is_required_isSet;
    bool m_is_required_isValid;

    qint32 m_last_activity_date;
    bool m_last_activity_date_isSet;
    bool m_last_activity_date_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QJsonValue> m_synonyms;
    bool m_synonyms_isSet;
    bool m_synonyms_isValid;

    qint32 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITags_inner)

#endif // OAITags_inner_H
