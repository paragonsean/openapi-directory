/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWrite_permissions_inner.h
 *
 * 
 */

#ifndef OAIWrite_permissions_inner_H
#define OAIWrite_permissions_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWrite_permissions_inner : public OAIObject {
public:
    OAIWrite_permissions_inner();
    OAIWrite_permissions_inner(QString json);
    ~OAIWrite_permissions_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanAdd() const;
    void setCanAdd(const bool &can_add);
    bool is_can_add_Set() const;
    bool is_can_add_Valid() const;

    bool isCanDelete() const;
    void setCanDelete(const bool &can_delete);
    bool is_can_delete_Set() const;
    bool is_can_delete_Valid() const;

    bool isCanEdit() const;
    void setCanEdit(const bool &can_edit);
    bool is_can_edit_Set() const;
    bool is_can_edit_Valid() const;

    qint32 getMaxDailyActions() const;
    void setMaxDailyActions(const qint32 &max_daily_actions);
    bool is_max_daily_actions_Set() const;
    bool is_max_daily_actions_Valid() const;

    qint32 getMinSecondsBetweenActions() const;
    void setMinSecondsBetweenActions(const qint32 &min_seconds_between_actions);
    bool is_min_seconds_between_actions_Set() const;
    bool is_min_seconds_between_actions_Valid() const;

    QString getObjectType() const;
    void setObjectType(const QString &object_type);
    bool is_object_type_Set() const;
    bool is_object_type_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_can_add;
    bool m_can_add_isSet;
    bool m_can_add_isValid;

    bool m_can_delete;
    bool m_can_delete_isSet;
    bool m_can_delete_isValid;

    bool m_can_edit;
    bool m_can_edit_isSet;
    bool m_can_edit_isValid;

    qint32 m_max_daily_actions;
    bool m_max_daily_actions_isSet;
    bool m_max_daily_actions_isValid;

    qint32 m_min_seconds_between_actions;
    bool m_min_seconds_between_actions_isSet;
    bool m_min_seconds_between_actions_isValid;

    QString m_object_type;
    bool m_object_type_isSet;
    bool m_object_type_isValid;

    qint32 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWrite_permissions_inner)

#endif // OAIWrite_permissions_inner_H
