/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISingle_filter.h
 *
 * 
 */

#ifndef OAISingle_filter_H
#define OAISingle_filter_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISingle_filter : public OAIObject {
public:
    OAISingle_filter();
    OAISingle_filter(QString json);
    ~OAISingle_filter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QString getFilterType() const;
    void setFilterType(const QString &filter_type);
    bool is_filter_type_Set() const;
    bool is_filter_type_Valid() const;

    QList<QJsonValue> getIncludedFields() const;
    void setIncludedFields(const QList<QJsonValue> &included_fields);
    bool is_included_fields_Set() const;
    bool is_included_fields_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QString m_filter_type;
    bool m_filter_type_isSet;
    bool m_filter_type_isValid;

    QList<QJsonValue> m_included_fields;
    bool m_included_fields_isSet;
    bool m_included_fields_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISingle_filter)

#endif // OAISingle_filter_H
