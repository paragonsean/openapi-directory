/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreated_comment.h
 *
 * 
 */

#ifndef OAICreated_comment_H
#define OAICreated_comment_H

#include <QJsonObject>

#include "OAIAnswers_inner_last_editor.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnswers_inner_last_editor;

class OAICreated_comment : public OAIObject {
public:
    OAICreated_comment();
    OAICreated_comment(QString json);
    ~OAICreated_comment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getBodyMarkdown() const;
    void setBodyMarkdown(const QString &body_markdown);
    bool is_body_markdown_Set() const;
    bool is_body_markdown_Valid() const;

    bool isCanFlag() const;
    void setCanFlag(const bool &can_flag);
    bool is_can_flag_Set() const;
    bool is_can_flag_Valid() const;

    qint32 getCommentId() const;
    void setCommentId(const qint32 &comment_id);
    bool is_comment_id_Set() const;
    bool is_comment_id_Valid() const;

    qint32 getCreationDate() const;
    void setCreationDate(const qint32 &creation_date);
    bool is_creation_date_Set() const;
    bool is_creation_date_Valid() const;

    bool isEdited() const;
    void setEdited(const bool &edited);
    bool is_edited_Set() const;
    bool is_edited_Valid() const;

    QString getLink() const;
    void setLink(const QString &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    OAIAnswers_inner_last_editor getOwner() const;
    void setOwner(const OAIAnswers_inner_last_editor &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    qint32 getPostId() const;
    void setPostId(const qint32 &post_id);
    bool is_post_id_Set() const;
    bool is_post_id_Valid() const;

    QString getPostType() const;
    void setPostType(const QString &post_type);
    bool is_post_type_Set() const;
    bool is_post_type_Valid() const;

    OAIAnswers_inner_last_editor getReplyToUser() const;
    void setReplyToUser(const OAIAnswers_inner_last_editor &reply_to_user);
    bool is_reply_to_user_Set() const;
    bool is_reply_to_user_Valid() const;

    qint32 getScore() const;
    void setScore(const qint32 &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    bool isUpvoted() const;
    void setUpvoted(const bool &upvoted);
    bool is_upvoted_Set() const;
    bool is_upvoted_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_body_markdown;
    bool m_body_markdown_isSet;
    bool m_body_markdown_isValid;

    bool m_can_flag;
    bool m_can_flag_isSet;
    bool m_can_flag_isValid;

    qint32 m_comment_id;
    bool m_comment_id_isSet;
    bool m_comment_id_isValid;

    qint32 m_creation_date;
    bool m_creation_date_isSet;
    bool m_creation_date_isValid;

    bool m_edited;
    bool m_edited_isSet;
    bool m_edited_isValid;

    QString m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    OAIAnswers_inner_last_editor m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    qint32 m_post_id;
    bool m_post_id_isSet;
    bool m_post_id_isValid;

    QString m_post_type;
    bool m_post_type_isSet;
    bool m_post_type_isValid;

    OAIAnswers_inner_last_editor m_reply_to_user;
    bool m_reply_to_user_isSet;
    bool m_reply_to_user_isValid;

    qint32 m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    bool m_upvoted;
    bool m_upvoted_isSet;
    bool m_upvoted_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreated_comment)

#endif // OAICreated_comment_H
