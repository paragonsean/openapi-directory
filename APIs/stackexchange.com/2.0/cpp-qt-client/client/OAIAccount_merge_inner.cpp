/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccount_merge_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccount_merge_inner::OAIAccount_merge_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccount_merge_inner::OAIAccount_merge_inner() {
    this->initializeModel();
}

OAIAccount_merge_inner::~OAIAccount_merge_inner() {}

void OAIAccount_merge_inner::initializeModel() {

    m_merge_date_isSet = false;
    m_merge_date_isValid = false;

    m_new_account_id_isSet = false;
    m_new_account_id_isValid = false;

    m_old_account_id_isSet = false;
    m_old_account_id_isValid = false;
}

void OAIAccount_merge_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccount_merge_inner::fromJsonObject(QJsonObject json) {

    m_merge_date_isValid = ::OpenAPI::fromJsonValue(m_merge_date, json[QString("merge_date")]);
    m_merge_date_isSet = !json[QString("merge_date")].isNull() && m_merge_date_isValid;

    m_new_account_id_isValid = ::OpenAPI::fromJsonValue(m_new_account_id, json[QString("new_account_id")]);
    m_new_account_id_isSet = !json[QString("new_account_id")].isNull() && m_new_account_id_isValid;

    m_old_account_id_isValid = ::OpenAPI::fromJsonValue(m_old_account_id, json[QString("old_account_id")]);
    m_old_account_id_isSet = !json[QString("old_account_id")].isNull() && m_old_account_id_isValid;
}

QString OAIAccount_merge_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccount_merge_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_merge_date_isSet) {
        obj.insert(QString("merge_date"), ::OpenAPI::toJsonValue(m_merge_date));
    }
    if (m_new_account_id_isSet) {
        obj.insert(QString("new_account_id"), ::OpenAPI::toJsonValue(m_new_account_id));
    }
    if (m_old_account_id_isSet) {
        obj.insert(QString("old_account_id"), ::OpenAPI::toJsonValue(m_old_account_id));
    }
    return obj;
}

qint32 OAIAccount_merge_inner::getMergeDate() const {
    return m_merge_date;
}
void OAIAccount_merge_inner::setMergeDate(const qint32 &merge_date) {
    m_merge_date = merge_date;
    m_merge_date_isSet = true;
}

bool OAIAccount_merge_inner::is_merge_date_Set() const{
    return m_merge_date_isSet;
}

bool OAIAccount_merge_inner::is_merge_date_Valid() const{
    return m_merge_date_isValid;
}

qint32 OAIAccount_merge_inner::getNewAccountId() const {
    return m_new_account_id;
}
void OAIAccount_merge_inner::setNewAccountId(const qint32 &new_account_id) {
    m_new_account_id = new_account_id;
    m_new_account_id_isSet = true;
}

bool OAIAccount_merge_inner::is_new_account_id_Set() const{
    return m_new_account_id_isSet;
}

bool OAIAccount_merge_inner::is_new_account_id_Valid() const{
    return m_new_account_id_isValid;
}

qint32 OAIAccount_merge_inner::getOldAccountId() const {
    return m_old_account_id;
}
void OAIAccount_merge_inner::setOldAccountId(const qint32 &old_account_id) {
    m_old_account_id = old_account_id;
    m_old_account_id_isSet = true;
}

bool OAIAccount_merge_inner::is_old_account_id_Set() const{
    return m_old_account_id_isSet;
}

bool OAIAccount_merge_inner::is_old_account_id_Valid() const{
    return m_old_account_id_isValid;
}

bool OAIAccount_merge_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_merge_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_old_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccount_merge_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
