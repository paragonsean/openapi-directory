/**
 * StackExchange
 * Stack Exchange is a network of 130+ Q&A communities including Stack Overflow. 
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBadges_inner.h
 *
 * 
 */

#ifndef OAIBadges_inner_H
#define OAIBadges_inner_H

#include <QJsonObject>

#include "OAIAnswers_inner_last_editor.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnswers_inner_last_editor;

class OAIBadges_inner : public OAIObject {
public:
    OAIBadges_inner();
    OAIBadges_inner(QString json);
    ~OAIBadges_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAwardCount() const;
    void setAwardCount(const qint32 &award_count);
    bool is_award_count_Set() const;
    bool is_award_count_Valid() const;

    qint32 getBadgeId() const;
    void setBadgeId(const qint32 &badge_id);
    bool is_badge_id_Set() const;
    bool is_badge_id_Valid() const;

    QString getBadgeType() const;
    void setBadgeType(const QString &badge_type);
    bool is_badge_type_Set() const;
    bool is_badge_type_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getLink() const;
    void setLink(const QString &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRank() const;
    void setRank(const QString &rank);
    bool is_rank_Set() const;
    bool is_rank_Valid() const;

    OAIAnswers_inner_last_editor getUser() const;
    void setUser(const OAIAnswers_inner_last_editor &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_award_count;
    bool m_award_count_isSet;
    bool m_award_count_isValid;

    qint32 m_badge_id;
    bool m_badge_id_isSet;
    bool m_badge_id_isValid;

    QString m_badge_type;
    bool m_badge_type_isSet;
    bool m_badge_type_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_rank;
    bool m_rank_isSet;
    bool m_rank_isValid;

    OAIAnswers_inner_last_editor m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBadges_inner)

#endif // OAIBadges_inner_H
