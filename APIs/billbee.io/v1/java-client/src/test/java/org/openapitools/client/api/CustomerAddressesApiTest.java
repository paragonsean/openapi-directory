/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
import org.openapitools.client.model.RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
import org.openapitools.client.model.RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomerAddressesApi
 */
@Disabled
public class CustomerAddressesApiTest {

    private final CustomerAddressesApi api = new CustomerAddressesApi();

    /**
     * Creates a new customer address
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerAddressesCreateTest() throws ApiException {
        BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel = null;
        RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel response = api.customerAddressesCreate(billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel);
        // TODO: test validations
    }

    /**
     * Get a list of all customer addresses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerAddressesGetAllTest() throws ApiException {
        Integer page = null;
        Integer pageSize = null;
        RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel response = api.customerAddressesGetAll(page, pageSize);
        // TODO: test validations
    }

    /**
     * Queries a single customer address by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerAddressesGetOneTest() throws ApiException {
        Long id = null;
        RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel response = api.customerAddressesGetOne(id);
        // TODO: test validations
    }

    /**
     * Updates a customer address by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerAddressesUpdateTest() throws ApiException {
        Long id = null;
        BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel = null;
        RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel response = api.customerAddressesUpdate(id, billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel);
        // TODO: test validations
    }

}
