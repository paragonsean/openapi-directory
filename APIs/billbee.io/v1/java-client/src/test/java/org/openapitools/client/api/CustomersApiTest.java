/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelCustomerApiModel;
import org.openapitools.client.model.RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
import org.openapitools.client.model.RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerApiModel;
import org.openapitools.client.model.RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListRechnungsdruckWebAppControllersApiOrder;
import org.openapitools.client.model.RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
import org.openapitools.client.model.RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel;
import org.openapitools.client.model.RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiSearchControllerSearchResultsModel;
import org.openapitools.client.model.RechnungsdruckWebAppControllersApiSearchControllerSearchModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersApi
 */
@Disabled
public class CustomersApiTest {

    private final CustomersApi api = new CustomersApi();

    /**
     * Adds a new address to a customer
     *
     * Id and  CustomerId will be ignored in model. If Id is set, the addition will be stopped.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerAddCustomerAddressTest() throws ApiException {
        Long id = null;
        BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel = null;
        RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel response = api.customerAddCustomerAddress(id, billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel);
        // TODO: test validations
    }

    /**
     * Creates a new customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerCreateTest() throws ApiException {
        BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel billbeeInterfacesBillbeeAPIModelCreateCustomerApiModel = null;
        RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel response = api.customerCreate(billbeeInterfacesBillbeeAPIModelCreateCustomerApiModel);
        // TODO: test validations
    }

    /**
     * Get a list of all customers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerGetAllTest() throws ApiException {
        Integer page = null;
        Integer pageSize = null;
        RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerApiModel response = api.customerGetAll(page, pageSize);
        // TODO: test validations
    }

    /**
     * Queries a single address from a customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerGetCustomerAddressTest() throws ApiException {
        Long id = null;
        RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel response = api.customerGetCustomerAddress(id);
        // TODO: test validations
    }

    /**
     * Queries a list of addresses from a customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerGetCustomerAddressesTest() throws ApiException {
        Long id = null;
        Integer page = null;
        Integer pageSize = null;
        RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel response = api.customerGetCustomerAddresses(id, page, pageSize);
        // TODO: test validations
    }

    /**
     * Queries a list of orders from a customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerGetCustomerOrdersTest() throws ApiException {
        Long id = null;
        Integer page = null;
        Integer pageSize = null;
        RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListRechnungsdruckWebAppControllersApiOrder response = api.customerGetCustomerOrders(id, page, pageSize);
        // TODO: test validations
    }

    /**
     * Queries a single customer by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerGetOneTest() throws ApiException {
        Long id = null;
        RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel response = api.customerGetOne(id);
        // TODO: test validations
    }

    /**
     * Updates one or more fields of an address
     *
     * Id and CustomerId cannot be changed
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerPatchAddressTest() throws ApiException {
        Long id = null;
        Object body = null;
        RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel response = api.customerPatchAddress(id, body);
        // TODO: test validations
    }

    /**
     * Updates a customer by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerUpdateTest() throws ApiException {
        Long id = null;
        BillbeeInterfacesBillbeeAPIModelCustomerApiModel billbeeInterfacesBillbeeAPIModelCustomerApiModel = null;
        RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel response = api.customerUpdate(id, billbeeInterfacesBillbeeAPIModelCustomerApiModel);
        // TODO: test validations
    }

    /**
     * Updates all fields of an address
     *
     * Id and CustomerId cannot be changed. Fields you do not send will become empty.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void customerUpdateAddressTest() throws ApiException {
        Long id = null;
        BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel = null;
        RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel response = api.customerUpdateAddress(id, billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel);
        // TODO: test validations
    }

    /**
     * Search for products, customers and orders.  Type can be \&quot;order\&quot;, \&quot;product\&quot; and / or \&quot;customer\&quot;  Term can contains lucene query syntax
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchSearch_0Test() throws ApiException {
        RechnungsdruckWebAppControllersApiSearchControllerSearchModel rechnungsdruckWebAppControllersApiSearchControllerSearchModel = null;
        RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiSearchControllerSearchResultsModel response = api.searchSearch_0(rechnungsdruckWebAppControllersApiSearchControllerSearchModel);
        // TODO: test validations
    }

}
