/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelProductImage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for BillbeeInterfacesBillbeeAPIModelSoldProduct
 */
public class BillbeeInterfacesBillbeeAPIModelSoldProductTest {
    private final BillbeeInterfacesBillbeeAPIModelSoldProduct model = new BillbeeInterfacesBillbeeAPIModelSoldProduct();

    /**
     * Model tests for BillbeeInterfacesBillbeeAPIModelSoldProduct
     */
    @Test
    public void testBillbeeInterfacesBillbeeAPIModelSoldProduct() {
        // TODO: test BillbeeInterfacesBillbeeAPIModelSoldProduct
    }

    /**
     * Test the property 'billbeeId'
     */
    @Test
    public void billbeeIdTest() {
        // TODO: test billbeeId
    }

    /**
     * Test the property 'countryOfOrigin'
     */
    @Test
    public void countryOfOriginTest() {
        // TODO: test countryOfOrigin
    }

    /**
     * Test the property 'EAN'
     */
    @Test
    public void EANTest() {
        // TODO: test EAN
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'images'
     */
    @Test
    public void imagesTest() {
        // TODO: test images
    }

    /**
     * Test the property 'isDigital'
     */
    @Test
    public void isDigitalTest() {
        // TODO: test isDigital
    }

    /**
     * Test the property 'oldId'
     */
    @Test
    public void oldIdTest() {
        // TODO: test oldId
    }

    /**
     * Test the property 'platformData'
     */
    @Test
    public void platformDataTest() {
        // TODO: test platformData
    }

    /**
     * Test the property 'SKU'
     */
    @Test
    public void SKUTest() {
        // TODO: test SKU
    }

    /**
     * Test the property 'skuOrId'
     */
    @Test
    public void skuOrIdTest() {
        // TODO: test skuOrId
    }

    /**
     * Test the property 'taRICCode'
     */
    @Test
    public void taRICCodeTest() {
        // TODO: test taRICCode
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'weight'
     */
    @Test
    public void weightTest() {
        // TODO: test weight
    }

}
