/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.time.OffsetDateTime;
import org.openapitools.client.model.RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelInvoiceApiModel;
import org.openapitools.client.model.RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiInvoice;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InvoiceApi
 */
@Disabled
public class InvoiceApiTest {

    private final InvoiceApi api = new InvoiceApi();

    /**
     * Create an invoice for an existing order. This request is extra throttled by order and api key to a maximum of 1 per 5 minutes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orderApiCreateInvoice_0Test() throws ApiException {
        Long id = null;
        Boolean includeInvoicePdf = null;
        Long templateId = null;
        Long sendToCloudId = null;
        RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiInvoice response = api.orderApiCreateInvoice_0(id, includeInvoicePdf, templateId, sendToCloudId);
        // TODO: test validations
    }

    /**
     * Get a list of all invoices optionally filtered by date. This request ist throttled to 1 per 1 minute for same page and minInvoiceDate
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orderApiGetInvoiceList_0Test() throws ApiException {
        OffsetDateTime minInvoiceDate = null;
        OffsetDateTime maxInvoiceDate = null;
        Integer page = null;
        Integer pageSize = null;
        List<Long> shopId = null;
        List<Integer> orderStateId = null;
        List<String> tag = null;
        OffsetDateTime minPayDate = null;
        OffsetDateTime maxPayDate = null;
        Boolean includePositions = null;
        Boolean excludeTags = null;
        RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelInvoiceApiModel response = api.orderApiGetInvoiceList_0(minInvoiceDate, maxInvoiceDate, page, pageSize, shopId, orderStateId, tag, minPayDate, maxPayDate, includePositions, excludeTags);
        // TODO: test validations
    }

}
