/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Data used to create a new Billbee user account
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:20.866639-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer {
  public static final String SERIALIZED_NAME_ACCEPT_TERMS = "AcceptTerms";
  @SerializedName(SERIALIZED_NAME_ACCEPT_TERMS)
  private Boolean acceptTerms;

  public static final String SERIALIZED_NAME_ADDRESS = "Address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress address;

  public static final String SERIALIZED_NAME_AFFILIATE_COUPON_CODE = "AffiliateCouponCode";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_COUPON_CODE)
  private String affiliateCouponCode;

  public static final String SERIALIZED_NAME_DEFAULT_CURRRENCY = "DefaultCurrrency";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CURRRENCY)
  private String defaultCurrrency;

  public static final String SERIALIZED_NAME_DEFAULT_VAT_INDEX = "DefaultVatIndex";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VAT_INDEX)
  private Integer defaultVatIndex;

  /**
   * Optionally specify the default vat mode of the user
   */
  @JsonAdapter(DefaultVatModeEnum.Adapter.class)
  public enum DefaultVatModeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5);

    private Integer value;

    DefaultVatModeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DefaultVatModeEnum fromValue(Integer value) {
      for (DefaultVatModeEnum b : DefaultVatModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DefaultVatModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DefaultVatModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DefaultVatModeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return DefaultVatModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      DefaultVatModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DEFAULT_VAT_MODE = "DefaultVatMode";
  @SerializedName(SERIALIZED_NAME_DEFAULT_VAT_MODE)
  private DefaultVatModeEnum defaultVatMode;

  public static final String SERIALIZED_NAME_EMAIL = "EMail";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_PASSWORD = "Password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_VAT1_RATE = "Vat1Rate";
  @SerializedName(SERIALIZED_NAME_VAT1_RATE)
  private Double vat1Rate;

  public static final String SERIALIZED_NAME_VAT2_RATE = "Vat2Rate";
  @SerializedName(SERIALIZED_NAME_VAT2_RATE)
  private Double vat2Rate;

  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer() {
  }

  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer acceptTerms(Boolean acceptTerms) {
    this.acceptTerms = acceptTerms;
    return this;
  }

  /**
   * Set to true, if the user has accepted the Billbee terms &amp;amp; conditions
   * @return acceptTerms
   */
  @javax.annotation.Nullable
  public Boolean getAcceptTerms() {
    return acceptTerms;
  }

  public void setAcceptTerms(Boolean acceptTerms) {
    this.acceptTerms = acceptTerms;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer address(RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress getAddress() {
    return address;
  }

  public void setAddress(RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress address) {
    this.address = address;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer affiliateCouponCode(String affiliateCouponCode) {
    this.affiliateCouponCode = affiliateCouponCode;
    return this;
  }

  /**
   * Specifies an billbee affiliate code to attach to the user
   * @return affiliateCouponCode
   */
  @javax.annotation.Nullable
  public String getAffiliateCouponCode() {
    return affiliateCouponCode;
  }

  public void setAffiliateCouponCode(String affiliateCouponCode) {
    this.affiliateCouponCode = affiliateCouponCode;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer defaultCurrrency(String defaultCurrrency) {
    this.defaultCurrrency = defaultCurrrency;
    return this;
  }

  /**
   * Optionally specify the default currency of the user
   * @return defaultCurrrency
   */
  @javax.annotation.Nullable
  public String getDefaultCurrrency() {
    return defaultCurrrency;
  }

  public void setDefaultCurrrency(String defaultCurrrency) {
    this.defaultCurrrency = defaultCurrrency;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer defaultVatIndex(Integer defaultVatIndex) {
    this.defaultVatIndex = defaultVatIndex;
    return this;
  }

  /**
   * Optionally specify the default vat index of the user
   * @return defaultVatIndex
   */
  @javax.annotation.Nullable
  public Integer getDefaultVatIndex() {
    return defaultVatIndex;
  }

  public void setDefaultVatIndex(Integer defaultVatIndex) {
    this.defaultVatIndex = defaultVatIndex;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer defaultVatMode(DefaultVatModeEnum defaultVatMode) {
    this.defaultVatMode = defaultVatMode;
    return this;
  }

  /**
   * Optionally specify the default vat mode of the user
   * @return defaultVatMode
   */
  @javax.annotation.Nullable
  public DefaultVatModeEnum getDefaultVatMode() {
    return defaultVatMode;
  }

  public void setDefaultVatMode(DefaultVatModeEnum defaultVatMode) {
    this.defaultVatMode = defaultVatMode;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer email(String email) {
    this.email = email;
    return this;
  }

  /**
   * The Email address of the user to create
   * @return email
   */
  @javax.annotation.Nonnull
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer password(String password) {
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer vat1Rate(Double vat1Rate) {
    this.vat1Rate = vat1Rate;
    return this;
  }

  /**
   * Optionally specify the vat1 (normal) rate of the user
   * @return vat1Rate
   */
  @javax.annotation.Nullable
  public Double getVat1Rate() {
    return vat1Rate;
  }

  public void setVat1Rate(Double vat1Rate) {
    this.vat1Rate = vat1Rate;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer vat2Rate(Double vat2Rate) {
    this.vat2Rate = vat2Rate;
    return this;
  }

  /**
   * Optionally specify the vat2 (reduced) rate of the user
   * @return vat2Rate
   */
  @javax.annotation.Nullable
  public Double getVat2Rate() {
    return vat2Rate;
  }

  public void setVat2Rate(Double vat2Rate) {
    this.vat2Rate = vat2Rate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer = (RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer) o;
    return Objects.equals(this.acceptTerms, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.acceptTerms) &&
        Objects.equals(this.address, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.address) &&
        Objects.equals(this.affiliateCouponCode, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.affiliateCouponCode) &&
        Objects.equals(this.defaultCurrrency, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.defaultCurrrency) &&
        Objects.equals(this.defaultVatIndex, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.defaultVatIndex) &&
        Objects.equals(this.defaultVatMode, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.defaultVatMode) &&
        Objects.equals(this.email, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.email) &&
        Objects.equals(this.password, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.password) &&
        Objects.equals(this.vat1Rate, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.vat1Rate) &&
        Objects.equals(this.vat2Rate, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.vat2Rate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptTerms, address, affiliateCouponCode, defaultCurrrency, defaultVatIndex, defaultVatMode, email, password, vat1Rate, vat2Rate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer {\n");
    sb.append("    acceptTerms: ").append(toIndentedString(acceptTerms)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    affiliateCouponCode: ").append(toIndentedString(affiliateCouponCode)).append("\n");
    sb.append("    defaultCurrrency: ").append(toIndentedString(defaultCurrrency)).append("\n");
    sb.append("    defaultVatIndex: ").append(toIndentedString(defaultVatIndex)).append("\n");
    sb.append("    defaultVatMode: ").append(toIndentedString(defaultVatMode)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    vat1Rate: ").append(toIndentedString(vat1Rate)).append("\n");
    sb.append("    vat2Rate: ").append(toIndentedString(vat2Rate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AcceptTerms");
    openapiFields.add("Address");
    openapiFields.add("AffiliateCouponCode");
    openapiFields.add("DefaultCurrrency");
    openapiFields.add("DefaultVatIndex");
    openapiFields.add("DefaultVatMode");
    openapiFields.add("EMail");
    openapiFields.add("Password");
    openapiFields.add("Vat1Rate");
    openapiFields.add("Vat2Rate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("EMail");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer is not found in the empty JSON string", RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Address`
      if (jsonObj.get("Address") != null && !jsonObj.get("Address").isJsonNull()) {
        RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.validateJsonElement(jsonObj.get("Address"));
      }
      if ((jsonObj.get("AffiliateCouponCode") != null && !jsonObj.get("AffiliateCouponCode").isJsonNull()) && !jsonObj.get("AffiliateCouponCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AffiliateCouponCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AffiliateCouponCode").toString()));
      }
      if ((jsonObj.get("DefaultCurrrency") != null && !jsonObj.get("DefaultCurrrency").isJsonNull()) && !jsonObj.get("DefaultCurrrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DefaultCurrrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DefaultCurrrency").toString()));
      }
      // validate the optional field `DefaultVatMode`
      if (jsonObj.get("DefaultVatMode") != null && !jsonObj.get("DefaultVatMode").isJsonNull()) {
        DefaultVatModeEnum.validateJsonElement(jsonObj.get("DefaultVatMode"));
      }
      if (!jsonObj.get("EMail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EMail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EMail").toString()));
      }
      if ((jsonObj.get("Password") != null && !jsonObj.get("Password").isJsonNull()) && !jsonObj.get("Password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Password").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.class));

       return (TypeAdapter<T>) new TypeAdapter<RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer>() {
           @Override
           public void write(JsonWriter out, RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer
   * @throws IOException if the JSON string is invalid with respect to RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer
   */
  public static RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer.class);
  }

  /**
   * Convert an instance of RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainer to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

