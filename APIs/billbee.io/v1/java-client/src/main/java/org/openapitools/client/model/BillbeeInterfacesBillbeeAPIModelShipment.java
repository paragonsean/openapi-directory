/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a single shipment.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:20.866639-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BillbeeInterfacesBillbeeAPIModelShipment {
  public static final String SERIALIZED_NAME_BILLBEE_ID = "BillbeeId";
  @SerializedName(SERIALIZED_NAME_BILLBEE_ID)
  private Long billbeeId;

  public static final String SERIALIZED_NAME_CREATED = "Created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_SHIPMENT_TYPE = "ShipmentType";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_TYPE)
  private Integer shipmentType;

  public static final String SERIALIZED_NAME_SHIPPER = "Shipper";
  @SerializedName(SERIALIZED_NAME_SHIPPER)
  private String shipper;

  public static final String SERIALIZED_NAME_SHIPPING_CARRIER = "ShippingCarrier";
  @SerializedName(SERIALIZED_NAME_SHIPPING_CARRIER)
  private Integer shippingCarrier;

  public static final String SERIALIZED_NAME_SHIPPING_ID = "ShippingId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ID)
  private String shippingId;

  public static final String SERIALIZED_NAME_SHIPPING_PROVIDER_ID = "ShippingProviderId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROVIDER_ID)
  private Long shippingProviderId;

  public static final String SERIALIZED_NAME_SHIPPING_PROVIDER_PRODUCT_ID = "ShippingProviderProductId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROVIDER_PRODUCT_ID)
  private Long shippingProviderProductId;

  public static final String SERIALIZED_NAME_TRACKING_URL = "TrackingUrl";
  @SerializedName(SERIALIZED_NAME_TRACKING_URL)
  private String trackingUrl;

  public BillbeeInterfacesBillbeeAPIModelShipment() {
  }

  public BillbeeInterfacesBillbeeAPIModelShipment billbeeId(Long billbeeId) {
    this.billbeeId = billbeeId;
    return this;
  }

  /**
   * The billbee internal id of the shipment
   * @return billbeeId
   */
  @javax.annotation.Nullable
  public Long getBillbeeId() {
    return billbeeId;
  }

  public void setBillbeeId(Long billbeeId) {
    this.billbeeId = billbeeId;
  }


  public BillbeeInterfacesBillbeeAPIModelShipment created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

  /**
   * The creation date
   * @return created
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }


  public BillbeeInterfacesBillbeeAPIModelShipment shipmentType(Integer shipmentType) {
    this.shipmentType = shipmentType;
    return this;
  }

  /**
   * Shipment Type, 0 if Shipment, 1 if Retoure
   * @return shipmentType
   */
  @javax.annotation.Nullable
  public Integer getShipmentType() {
    return shipmentType;
  }

  public void setShipmentType(Integer shipmentType) {
    this.shipmentType = shipmentType;
  }


  public BillbeeInterfacesBillbeeAPIModelShipment shipper(String shipper) {
    this.shipper = shipper;
    return this;
  }

  /**
   * The name of the shipping provider
   * @return shipper
   */
  @javax.annotation.Nullable
  public String getShipper() {
    return shipper;
  }

  public void setShipper(String shipper) {
    this.shipper = shipper;
  }


  public BillbeeInterfacesBillbeeAPIModelShipment shippingCarrier(Integer shippingCarrier) {
    this.shippingCarrier = shippingCarrier;
    return this;
  }

  /**
   * The carrier used to ship the parcel with
   * @return shippingCarrier
   */
  @javax.annotation.Nullable
  public Integer getShippingCarrier() {
    return shippingCarrier;
  }

  public void setShippingCarrier(Integer shippingCarrier) {
    this.shippingCarrier = shippingCarrier;
  }


  public BillbeeInterfacesBillbeeAPIModelShipment shippingId(String shippingId) {
    this.shippingId = shippingId;
    return this;
  }

  /**
   * The id of this shipment
   * @return shippingId
   */
  @javax.annotation.Nullable
  public String getShippingId() {
    return shippingId;
  }

  public void setShippingId(String shippingId) {
    this.shippingId = shippingId;
  }


  public BillbeeInterfacesBillbeeAPIModelShipment shippingProviderId(Long shippingProviderId) {
    this.shippingProviderId = shippingProviderId;
    return this;
  }

  /**
   * The id of the used shipping provider
   * @return shippingProviderId
   */
  @javax.annotation.Nullable
  public Long getShippingProviderId() {
    return shippingProviderId;
  }

  public void setShippingProviderId(Long shippingProviderId) {
    this.shippingProviderId = shippingProviderId;
  }


  public BillbeeInterfacesBillbeeAPIModelShipment shippingProviderProductId(Long shippingProviderProductId) {
    this.shippingProviderProductId = shippingProviderProductId;
    return this;
  }

  /**
   * The id of the used shipping provider product
   * @return shippingProviderProductId
   */
  @javax.annotation.Nullable
  public Long getShippingProviderProductId() {
    return shippingProviderProductId;
  }

  public void setShippingProviderProductId(Long shippingProviderProductId) {
    this.shippingProviderProductId = shippingProviderProductId;
  }


  public BillbeeInterfacesBillbeeAPIModelShipment trackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
    return this;
  }

  /**
   * The url to track this shipment
   * @return trackingUrl
   */
  @javax.annotation.Nullable
  public String getTrackingUrl() {
    return trackingUrl;
  }

  public void setTrackingUrl(String trackingUrl) {
    this.trackingUrl = trackingUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillbeeInterfacesBillbeeAPIModelShipment billbeeInterfacesBillbeeAPIModelShipment = (BillbeeInterfacesBillbeeAPIModelShipment) o;
    return Objects.equals(this.billbeeId, billbeeInterfacesBillbeeAPIModelShipment.billbeeId) &&
        Objects.equals(this.created, billbeeInterfacesBillbeeAPIModelShipment.created) &&
        Objects.equals(this.shipmentType, billbeeInterfacesBillbeeAPIModelShipment.shipmentType) &&
        Objects.equals(this.shipper, billbeeInterfacesBillbeeAPIModelShipment.shipper) &&
        Objects.equals(this.shippingCarrier, billbeeInterfacesBillbeeAPIModelShipment.shippingCarrier) &&
        Objects.equals(this.shippingId, billbeeInterfacesBillbeeAPIModelShipment.shippingId) &&
        Objects.equals(this.shippingProviderId, billbeeInterfacesBillbeeAPIModelShipment.shippingProviderId) &&
        Objects.equals(this.shippingProviderProductId, billbeeInterfacesBillbeeAPIModelShipment.shippingProviderProductId) &&
        Objects.equals(this.trackingUrl, billbeeInterfacesBillbeeAPIModelShipment.trackingUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billbeeId, created, shipmentType, shipper, shippingCarrier, shippingId, shippingProviderId, shippingProviderProductId, trackingUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillbeeInterfacesBillbeeAPIModelShipment {\n");
    sb.append("    billbeeId: ").append(toIndentedString(billbeeId)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    shipmentType: ").append(toIndentedString(shipmentType)).append("\n");
    sb.append("    shipper: ").append(toIndentedString(shipper)).append("\n");
    sb.append("    shippingCarrier: ").append(toIndentedString(shippingCarrier)).append("\n");
    sb.append("    shippingId: ").append(toIndentedString(shippingId)).append("\n");
    sb.append("    shippingProviderId: ").append(toIndentedString(shippingProviderId)).append("\n");
    sb.append("    shippingProviderProductId: ").append(toIndentedString(shippingProviderProductId)).append("\n");
    sb.append("    trackingUrl: ").append(toIndentedString(trackingUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BillbeeId");
    openapiFields.add("Created");
    openapiFields.add("ShipmentType");
    openapiFields.add("Shipper");
    openapiFields.add("ShippingCarrier");
    openapiFields.add("ShippingId");
    openapiFields.add("ShippingProviderId");
    openapiFields.add("ShippingProviderProductId");
    openapiFields.add("TrackingUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BillbeeInterfacesBillbeeAPIModelShipment
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BillbeeInterfacesBillbeeAPIModelShipment.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BillbeeInterfacesBillbeeAPIModelShipment is not found in the empty JSON string", BillbeeInterfacesBillbeeAPIModelShipment.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BillbeeInterfacesBillbeeAPIModelShipment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BillbeeInterfacesBillbeeAPIModelShipment` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Shipper") != null && !jsonObj.get("Shipper").isJsonNull()) && !jsonObj.get("Shipper").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Shipper` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Shipper").toString()));
      }
      if ((jsonObj.get("ShippingId") != null && !jsonObj.get("ShippingId").isJsonNull()) && !jsonObj.get("ShippingId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShippingId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShippingId").toString()));
      }
      if ((jsonObj.get("TrackingUrl") != null && !jsonObj.get("TrackingUrl").isJsonNull()) && !jsonObj.get("TrackingUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TrackingUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TrackingUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BillbeeInterfacesBillbeeAPIModelShipment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BillbeeInterfacesBillbeeAPIModelShipment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BillbeeInterfacesBillbeeAPIModelShipment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BillbeeInterfacesBillbeeAPIModelShipment.class));

       return (TypeAdapter<T>) new TypeAdapter<BillbeeInterfacesBillbeeAPIModelShipment>() {
           @Override
           public void write(JsonWriter out, BillbeeInterfacesBillbeeAPIModelShipment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BillbeeInterfacesBillbeeAPIModelShipment read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BillbeeInterfacesBillbeeAPIModelShipment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BillbeeInterfacesBillbeeAPIModelShipment
   * @throws IOException if the JSON string is invalid with respect to BillbeeInterfacesBillbeeAPIModelShipment
   */
  public static BillbeeInterfacesBillbeeAPIModelShipment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BillbeeInterfacesBillbeeAPIModelShipment.class);
  }

  /**
   * Convert an instance of BillbeeInterfacesBillbeeAPIModelShipment to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

