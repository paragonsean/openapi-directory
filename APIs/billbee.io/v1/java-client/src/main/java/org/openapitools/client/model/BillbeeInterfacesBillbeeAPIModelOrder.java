/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelCommentApiModel;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelCustomerApiModel;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelOrderItem;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelOrderUser;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelShipment;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelsOrderPayment;
import org.openapitools.client.model.BillbeeInterfacesOrderHistoryEntry;
import org.openapitools.client.model.BillbeeInterfacesShippingProductService;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A class that represents the Billbee data model of a single order
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:20.866639-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BillbeeInterfacesBillbeeAPIModelOrder {
  public static final String SERIALIZED_NAME_ACCEPT_LOSS_OF_RETURN_RIGHT = "AcceptLossOfReturnRight";
  @SerializedName(SERIALIZED_NAME_ACCEPT_LOSS_OF_RETURN_RIGHT)
  private Boolean acceptLossOfReturnRight;

  public static final String SERIALIZED_NAME_ADJUSTMENT_COST = "AdjustmentCost";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_COST)
  private Double adjustmentCost;

  public static final String SERIALIZED_NAME_ADJUSTMENT_REASON = "AdjustmentReason";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_REASON)
  private String adjustmentReason;

  public static final String SERIALIZED_NAME_API_ACCOUNT_ID = "ApiAccountId";
  @SerializedName(SERIALIZED_NAME_API_ACCOUNT_ID)
  private Long apiAccountId;

  public static final String SERIALIZED_NAME_API_ACCOUNT_NAME = "ApiAccountName";
  @SerializedName(SERIALIZED_NAME_API_ACCOUNT_NAME)
  private String apiAccountName;

  public static final String SERIALIZED_NAME_ARCHIVED_AT = "ArchivedAt";
  @SerializedName(SERIALIZED_NAME_ARCHIVED_AT)
  private OffsetDateTime archivedAt;

  public static final String SERIALIZED_NAME_BILL_BEE_ORDER_ID = "BillBeeOrderId";
  @SerializedName(SERIALIZED_NAME_BILL_BEE_ORDER_ID)
  private Long billBeeOrderId;

  public static final String SERIALIZED_NAME_BILL_BEE_PARENT_ORDER_ID = "BillBeeParentOrderId";
  @SerializedName(SERIALIZED_NAME_BILL_BEE_PARENT_ORDER_ID)
  private Long billBeeParentOrderId;

  public static final String SERIALIZED_NAME_BUYER = "Buyer";
  @SerializedName(SERIALIZED_NAME_BUYER)
  private BillbeeInterfacesBillbeeAPIModelOrderUser buyer;

  public static final String SERIALIZED_NAME_COMMENTS = "Comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private List<BillbeeInterfacesBillbeeAPIModelCommentApiModel> comments = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONFIRMED_AT = "ConfirmedAt";
  @SerializedName(SERIALIZED_NAME_CONFIRMED_AT)
  private OffsetDateTime confirmedAt;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CURRENCY = "Currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_CUSTOM_INVOICE_NOTE = "CustomInvoiceNote";
  @SerializedName(SERIALIZED_NAME_CUSTOM_INVOICE_NOTE)
  private String customInvoiceNote;

  public static final String SERIALIZED_NAME_CUSTOMER = "Customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  private BillbeeInterfacesBillbeeAPIModelCustomerApiModel customer;

  public static final String SERIALIZED_NAME_CUSTOMER_NUMBER = "CustomerNumber";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NUMBER)
  private String customerNumber;

  public static final String SERIALIZED_NAME_CUSTOMER_VAT_ID = "CustomerVatId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_VAT_ID)
  private String customerVatId;

  public static final String SERIALIZED_NAME_DELIVERY_SOURCE_COUNTRY_CODE = "DeliverySourceCountryCode";
  @SerializedName(SERIALIZED_NAME_DELIVERY_SOURCE_COUNTRY_CODE)
  private String deliverySourceCountryCode;

  public static final String SERIALIZED_NAME_DISTRIBUTION_CENTER = "DistributionCenter";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTION_CENTER)
  private String distributionCenter;

  public static final String SERIALIZED_NAME_HISTORY = "History";
  @SerializedName(SERIALIZED_NAME_HISTORY)
  private List<BillbeeInterfacesOrderHistoryEntry> history = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INVOICE_ADDRESS = "InvoiceAddress";
  @SerializedName(SERIALIZED_NAME_INVOICE_ADDRESS)
  private BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel invoiceAddress;

  public static final String SERIALIZED_NAME_INVOICE_DATE = "InvoiceDate";
  @SerializedName(SERIALIZED_NAME_INVOICE_DATE)
  private OffsetDateTime invoiceDate;

  public static final String SERIALIZED_NAME_INVOICE_NUMBER = "InvoiceNumber";
  @SerializedName(SERIALIZED_NAME_INVOICE_NUMBER)
  private Integer invoiceNumber;

  public static final String SERIALIZED_NAME_INVOICE_NUMBER_POSTFIX = "InvoiceNumberPostfix";
  @SerializedName(SERIALIZED_NAME_INVOICE_NUMBER_POSTFIX)
  private String invoiceNumberPostfix;

  public static final String SERIALIZED_NAME_INVOICE_NUMBER_PREFIX = "InvoiceNumberPrefix";
  @SerializedName(SERIALIZED_NAME_INVOICE_NUMBER_PREFIX)
  private String invoiceNumberPrefix;

  public static final String SERIALIZED_NAME_IS_CANCELATION_FOR = "IsCancelationFor";
  @SerializedName(SERIALIZED_NAME_IS_CANCELATION_FOR)
  private String isCancelationFor;

  public static final String SERIALIZED_NAME_IS_FROM_BILLBEE_API = "IsFromBillbeeApi";
  @SerializedName(SERIALIZED_NAME_IS_FROM_BILLBEE_API)
  private Boolean isFromBillbeeApi;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "LanguageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_AT = "LastModifiedAt";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_AT)
  private OffsetDateTime lastModifiedAt;

  public static final String SERIALIZED_NAME_MERCHANT_VAT_ID = "MerchantVatId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_VAT_ID)
  private String merchantVatId;

  public static final String SERIALIZED_NAME_ORDER_ITEMS = "OrderItems";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEMS)
  private List<BillbeeInterfacesBillbeeAPIModelOrderItem> orderItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "OrderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_PAID_AMOUNT = "PaidAmount";
  @SerializedName(SERIALIZED_NAME_PAID_AMOUNT)
  private Double paidAmount;

  public static final String SERIALIZED_NAME_PAYED_AT = "PayedAt";
  @SerializedName(SERIALIZED_NAME_PAYED_AT)
  private OffsetDateTime payedAt;

  public static final String SERIALIZED_NAME_PAYMENT_INSTRUCTION = "PaymentInstruction";
  @SerializedName(SERIALIZED_NAME_PAYMENT_INSTRUCTION)
  private String paymentInstruction;

  /**
   * The payment method
   */
  @JsonAdapter(PaymentMethodEnum.Adapter.class)
  public enum PaymentMethodEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_6(6),
    
    NUMBER_19(19),
    
    NUMBER_20(20),
    
    NUMBER_21(21),
    
    NUMBER_22(22),
    
    NUMBER_23(23),
    
    NUMBER_24(24),
    
    NUMBER_25(25),
    
    NUMBER_26(26),
    
    NUMBER_27(27),
    
    NUMBER_28(28),
    
    NUMBER_29(29),
    
    NUMBER_30(30),
    
    NUMBER_31(31),
    
    NUMBER_32(32),
    
    NUMBER_33(33),
    
    NUMBER_34(34),
    
    NUMBER_35(35),
    
    NUMBER_36(36),
    
    NUMBER_37(37),
    
    NUMBER_38(38),
    
    NUMBER_39(39),
    
    NUMBER_40(40),
    
    NUMBER_41(41),
    
    NUMBER_42(42),
    
    NUMBER_43(43),
    
    NUMBER_44(44),
    
    NUMBER_45(45),
    
    NUMBER_46(46),
    
    NUMBER_47(47),
    
    NUMBER_48(48),
    
    NUMBER_49(49),
    
    NUMBER_50(50),
    
    NUMBER_51(51),
    
    NUMBER_52(52),
    
    NUMBER_53(53),
    
    NUMBER_54(54),
    
    NUMBER_55(55),
    
    NUMBER_56(56),
    
    NUMBER_57(57),
    
    NUMBER_58(58),
    
    NUMBER_59(59),
    
    NUMBER_60(60),
    
    NUMBER_61(61),
    
    NUMBER_62(62),
    
    NUMBER_63(63),
    
    NUMBER_64(64),
    
    NUMBER_65(65),
    
    NUMBER_66(66),
    
    NUMBER_67(67),
    
    NUMBER_68(68),
    
    NUMBER_69(69),
    
    NUMBER_70(70),
    
    NUMBER_71(71),
    
    NUMBER_72(72),
    
    NUMBER_73(73),
    
    NUMBER_74(74),
    
    NUMBER_75(75),
    
    NUMBER_76(76),
    
    NUMBER_77(77),
    
    NUMBER_78(78),
    
    NUMBER_79(79),
    
    NUMBER_80(80),
    
    NUMBER_81(81),
    
    NUMBER_82(82),
    
    NUMBER_83(83),
    
    NUMBER_84(84),
    
    NUMBER_85(85),
    
    NUMBER_86(86),
    
    NUMBER_87(87),
    
    NUMBER_88(88),
    
    NUMBER_89(89),
    
    NUMBER_90(90),
    
    NUMBER_91(91),
    
    NUMBER_92(92),
    
    NUMBER_93(93),
    
    NUMBER_94(94),
    
    NUMBER_95(95),
    
    NUMBER_96(96),
    
    NUMBER_97(97),
    
    NUMBER_98(98),
    
    NUMBER_99(99),
    
    NUMBER_100(100),
    
    NUMBER_101(101),
    
    NUMBER_102(102),
    
    NUMBER_103(103),
    
    NUMBER_104(104),
    
    NUMBER_105(105),
    
    NUMBER_106(106),
    
    NUMBER_107(107),
    
    NUMBER_108(108),
    
    NUMBER_109(109),
    
    NUMBER_110(110),
    
    NUMBER_111(111),
    
    NUMBER_112(112),
    
    NUMBER_113(113),
    
    NUMBER_114(114),
    
    NUMBER_115(115),
    
    NUMBER_116(116),
    
    NUMBER_117(117),
    
    NUMBER_118(118),
    
    NUMBER_119(119),
    
    NUMBER_120(120),
    
    NUMBER_121(121),
    
    NUMBER_122(122),
    
    NUMBER_123(123),
    
    NUMBER_124(124),
    
    NUMBER_125(125),
    
    NUMBER_126(126),
    
    NUMBER_127(127),
    
    NUMBER_128(128),
    
    NUMBER_129(129),
    
    NUMBER_130(130),
    
    NUMBER_131(131),
    
    NUMBER_132(132),
    
    NUMBER_133(133),
    
    NUMBER_134(134),
    
    NUMBER_135(135),
    
    NUMBER_136(136),
    
    NUMBER_137(137),
    
    NUMBER_138(138);

    private Integer value;

    PaymentMethodEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PaymentMethodEnum fromValue(Integer value) {
      for (PaymentMethodEnum b : PaymentMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PaymentMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PaymentMethodEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return PaymentMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      PaymentMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PAYMENT_METHOD = "PaymentMethod";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD)
  private PaymentMethodEnum paymentMethod;

  public static final String SERIALIZED_NAME_PAYMENT_REFERENCE = "PaymentReference";
  @SerializedName(SERIALIZED_NAME_PAYMENT_REFERENCE)
  private String paymentReference;

  public static final String SERIALIZED_NAME_PAYMENT_TRANSACTION_ID = "PaymentTransactionId";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TRANSACTION_ID)
  private String paymentTransactionId;

  public static final String SERIALIZED_NAME_PAYMENTS = "Payments";
  @SerializedName(SERIALIZED_NAME_PAYMENTS)
  private List<BillbeeInterfacesBillbeeAPIModelsOrderPayment> payments = new ArrayList<>();

  public static final String SERIALIZED_NAME_REBATE_DIFFERENCE = "RebateDifference";
  @SerializedName(SERIALIZED_NAME_REBATE_DIFFERENCE)
  private Double rebateDifference;

  public static final String SERIALIZED_NAME_RESTORED_AT = "RestoredAt";
  @SerializedName(SERIALIZED_NAME_RESTORED_AT)
  private OffsetDateTime restoredAt;

  public static final String SERIALIZED_NAME_SELLER = "Seller";
  @SerializedName(SERIALIZED_NAME_SELLER)
  private BillbeeInterfacesBillbeeAPIModelOrderUser seller;

  public static final String SERIALIZED_NAME_SELLER_COMMENT = "SellerComment";
  @SerializedName(SERIALIZED_NAME_SELLER_COMMENT)
  private String sellerComment;

  public static final String SERIALIZED_NAME_SHIP_WEIGHT_KG = "ShipWeightKg";
  @SerializedName(SERIALIZED_NAME_SHIP_WEIGHT_KG)
  private Double shipWeightKg;

  public static final String SERIALIZED_NAME_SHIPPED_AT = "ShippedAt";
  @SerializedName(SERIALIZED_NAME_SHIPPED_AT)
  private OffsetDateTime shippedAt;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS = "ShippingAddress";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS)
  private BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel shippingAddress;

  public static final String SERIALIZED_NAME_SHIPPING_COST = "ShippingCost";
  @SerializedName(SERIALIZED_NAME_SHIPPING_COST)
  private Double shippingCost;

  public static final String SERIALIZED_NAME_SHIPPING_IDS = "ShippingIds";
  @SerializedName(SERIALIZED_NAME_SHIPPING_IDS)
  private List<BillbeeInterfacesBillbeeAPIModelShipment> shippingIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHIPPING_PROFILE_ID = "ShippingProfileId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROFILE_ID)
  private String shippingProfileId;

  public static final String SERIALIZED_NAME_SHIPPING_PROFILE_NAME = "ShippingProfileName";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROFILE_NAME)
  private String shippingProfileName;

  public static final String SERIALIZED_NAME_SHIPPING_PROVIDER_ID = "ShippingProviderId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROVIDER_ID)
  private Long shippingProviderId;

  public static final String SERIALIZED_NAME_SHIPPING_PROVIDER_NAME = "ShippingProviderName";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROVIDER_NAME)
  private String shippingProviderName;

  public static final String SERIALIZED_NAME_SHIPPING_PROVIDER_PRODUCT_ID = "ShippingProviderProductId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROVIDER_PRODUCT_ID)
  private Long shippingProviderProductId;

  public static final String SERIALIZED_NAME_SHIPPING_PROVIDER_PRODUCT_NAME = "ShippingProviderProductName";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROVIDER_PRODUCT_NAME)
  private String shippingProviderProductName;

  public static final String SERIALIZED_NAME_SHIPPING_SERVICES = "ShippingServices";
  @SerializedName(SERIALIZED_NAME_SHIPPING_SERVICES)
  private List<BillbeeInterfacesShippingProductService> shippingServices = new ArrayList<>();

  /**
   * The current state of the order
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_7(7),
    
    NUMBER_8(8),
    
    NUMBER_9(9),
    
    NUMBER_10(10),
    
    NUMBER_11(11),
    
    NUMBER_12(12),
    
    NUMBER_13(13),
    
    NUMBER_14(14),
    
    NUMBER_15(15),
    
    NUMBER_16(16);

    private Integer value;

    StateEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(Integer value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_TAGS = "Tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAX_RATE1 = "TaxRate1";
  @SerializedName(SERIALIZED_NAME_TAX_RATE1)
  private Double taxRate1;

  public static final String SERIALIZED_NAME_TAX_RATE2 = "TaxRate2";
  @SerializedName(SERIALIZED_NAME_TAX_RATE2)
  private Double taxRate2;

  public static final String SERIALIZED_NAME_TOTAL_COST = "TotalCost";
  @SerializedName(SERIALIZED_NAME_TOTAL_COST)
  private Double totalCost;

  public static final String SERIALIZED_NAME_UPDATED_AT = "UpdatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_VAT_ID = "VatId";
  @SerializedName(SERIALIZED_NAME_VAT_ID)
  private String vatId;

  /**
   * The vat mode of the order
   */
  @JsonAdapter(VatModeEnum.Adapter.class)
  public enum VatModeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5);

    private Integer value;

    VatModeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VatModeEnum fromValue(Integer value) {
      for (VatModeEnum b : VatModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VatModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VatModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VatModeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return VatModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      VatModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_VAT_MODE = "VatMode";
  @SerializedName(SERIALIZED_NAME_VAT_MODE)
  private VatModeEnum vatMode;

  public BillbeeInterfacesBillbeeAPIModelOrder() {
  }

  public BillbeeInterfacesBillbeeAPIModelOrder(
     Double rebateDifference
  ) {
    this();
    this.rebateDifference = rebateDifference;
  }

  public BillbeeInterfacesBillbeeAPIModelOrder acceptLossOfReturnRight(Boolean acceptLossOfReturnRight) {
    this.acceptLossOfReturnRight = acceptLossOfReturnRight;
    return this;
  }

  /**
   * Customer accepts loss due to withdrawal
   * @return acceptLossOfReturnRight
   */
  @javax.annotation.Nullable
  public Boolean getAcceptLossOfReturnRight() {
    return acceptLossOfReturnRight;
  }

  public void setAcceptLossOfReturnRight(Boolean acceptLossOfReturnRight) {
    this.acceptLossOfReturnRight = acceptLossOfReturnRight;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder adjustmentCost(Double adjustmentCost) {
    this.adjustmentCost = adjustmentCost;
    return this;
  }

  /**
   * Get adjustmentCost
   * @return adjustmentCost
   */
  @javax.annotation.Nullable
  public Double getAdjustmentCost() {
    return adjustmentCost;
  }

  public void setAdjustmentCost(Double adjustmentCost) {
    this.adjustmentCost = adjustmentCost;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder adjustmentReason(String adjustmentReason) {
    this.adjustmentReason = adjustmentReason;
    return this;
  }

  /**
   * Get adjustmentReason
   * @return adjustmentReason
   */
  @javax.annotation.Nullable
  public String getAdjustmentReason() {
    return adjustmentReason;
  }

  public void setAdjustmentReason(String adjustmentReason) {
    this.adjustmentReason = adjustmentReason;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder apiAccountId(Long apiAccountId) {
    this.apiAccountId = apiAccountId;
    return this;
  }

  /**
   * Id of the account, this order belongs to
   * @return apiAccountId
   */
  @javax.annotation.Nullable
  public Long getApiAccountId() {
    return apiAccountId;
  }

  public void setApiAccountId(Long apiAccountId) {
    this.apiAccountId = apiAccountId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder apiAccountName(String apiAccountName) {
    this.apiAccountName = apiAccountName;
    return this;
  }

  /**
   * The name of the account, this order belongs to. Will be ignored on order creation.
   * @return apiAccountName
   */
  @javax.annotation.Nullable
  public String getApiAccountName() {
    return apiAccountName;
  }

  public void setApiAccountName(String apiAccountName) {
    this.apiAccountName = apiAccountName;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder archivedAt(OffsetDateTime archivedAt) {
    this.archivedAt = archivedAt;
    return this;
  }

  /**
   * If set, the order was already archived at the given date. Further modification is disabled.
   * @return archivedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getArchivedAt() {
    return archivedAt;
  }

  public void setArchivedAt(OffsetDateTime archivedAt) {
    this.archivedAt = archivedAt;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder billBeeOrderId(Long billBeeOrderId) {
    this.billBeeOrderId = billBeeOrderId;
    return this;
  }

  /**
   * The Order.Id from the Billbee database
   * @return billBeeOrderId
   */
  @javax.annotation.Nullable
  public Long getBillBeeOrderId() {
    return billBeeOrderId;
  }

  public void setBillBeeOrderId(Long billBeeOrderId) {
    this.billBeeOrderId = billBeeOrderId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder billBeeParentOrderId(Long billBeeParentOrderId) {
    this.billBeeParentOrderId = billBeeParentOrderId;
    return this;
  }

  /**
   * The Id of the parent order in the Billbee database
   * @return billBeeParentOrderId
   */
  @javax.annotation.Nullable
  public Long getBillBeeParentOrderId() {
    return billBeeParentOrderId;
  }

  public void setBillBeeParentOrderId(Long billBeeParentOrderId) {
    this.billBeeParentOrderId = billBeeParentOrderId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder buyer(BillbeeInterfacesBillbeeAPIModelOrderUser buyer) {
    this.buyer = buyer;
    return this;
  }

  /**
   * Get buyer
   * @return buyer
   */
  @javax.annotation.Nullable
  public BillbeeInterfacesBillbeeAPIModelOrderUser getBuyer() {
    return buyer;
  }

  public void setBuyer(BillbeeInterfacesBillbeeAPIModelOrderUser buyer) {
    this.buyer = buyer;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder comments(List<BillbeeInterfacesBillbeeAPIModelCommentApiModel> comments) {
    this.comments = comments;
    return this;
  }

  public BillbeeInterfacesBillbeeAPIModelOrder addCommentsItem(BillbeeInterfacesBillbeeAPIModelCommentApiModel commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<>();
    }
    this.comments.add(commentsItem);
    return this;
  }

  /**
   * All messages / comments of the order
   * @return comments
   */
  @javax.annotation.Nullable
  public List<BillbeeInterfacesBillbeeAPIModelCommentApiModel> getComments() {
    return comments;
  }

  public void setComments(List<BillbeeInterfacesBillbeeAPIModelCommentApiModel> comments) {
    this.comments = comments;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder confirmedAt(OffsetDateTime confirmedAt) {
    this.confirmedAt = confirmedAt;
    return this;
  }

  /**
   * The date on which the order was confirmed
   * @return confirmedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getConfirmedAt() {
    return confirmedAt;
  }

  public void setConfirmedAt(OffsetDateTime confirmedAt) {
    this.confirmedAt = confirmedAt;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * The date on which the order was created
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * The three letter currency code.
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder customInvoiceNote(String customInvoiceNote) {
    this.customInvoiceNote = customInvoiceNote;
    return this;
  }

  /**
   * An optional multiline text which is printed on the invoice
   * @return customInvoiceNote
   */
  @javax.annotation.Nullable
  public String getCustomInvoiceNote() {
    return customInvoiceNote;
  }

  public void setCustomInvoiceNote(String customInvoiceNote) {
    this.customInvoiceNote = customInvoiceNote;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder customer(BillbeeInterfacesBillbeeAPIModelCustomerApiModel customer) {
    this.customer = customer;
    return this;
  }

  /**
   * Get customer
   * @return customer
   */
  @javax.annotation.Nullable
  public BillbeeInterfacesBillbeeAPIModelCustomerApiModel getCustomer() {
    return customer;
  }

  public void setCustomer(BillbeeInterfacesBillbeeAPIModelCustomerApiModel customer) {
    this.customer = customer;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder customerNumber(String customerNumber) {
    this.customerNumber = customerNumber;
    return this;
  }

  /**
   * The customer number (not to be confused with the id of the customer)
   * @return customerNumber
   */
  @javax.annotation.Nullable
  public String getCustomerNumber() {
    return customerNumber;
  }

  public void setCustomerNumber(String customerNumber) {
    this.customerNumber = customerNumber;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder customerVatId(String customerVatId) {
    this.customerVatId = customerVatId;
    return this;
  }

  /**
   * The vat-id, that was given by the customer to fulfill this order
   * @return customerVatId
   */
  @javax.annotation.Nullable
  public String getCustomerVatId() {
    return customerVatId;
  }

  public void setCustomerVatId(String customerVatId) {
    this.customerVatId = customerVatId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder deliverySourceCountryCode(String deliverySourceCountryCode) {
    this.deliverySourceCountryCode = deliverySourceCountryCode;
    return this;
  }

  /**
   * An optional Country ISO2 Code of the country where order is shipped from (FBA)
   * @return deliverySourceCountryCode
   */
  @javax.annotation.Nullable
  public String getDeliverySourceCountryCode() {
    return deliverySourceCountryCode;
  }

  public void setDeliverySourceCountryCode(String deliverySourceCountryCode) {
    this.deliverySourceCountryCode = deliverySourceCountryCode;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder distributionCenter(String distributionCenter) {
    this.distributionCenter = distributionCenter;
    return this;
  }

  /**
   * An optional code for the distribution center delivering this order
   * @return distributionCenter
   */
  @javax.annotation.Nullable
  public String getDistributionCenter() {
    return distributionCenter;
  }

  public void setDistributionCenter(String distributionCenter) {
    this.distributionCenter = distributionCenter;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder history(List<BillbeeInterfacesOrderHistoryEntry> history) {
    this.history = history;
    return this;
  }

  public BillbeeInterfacesBillbeeAPIModelOrder addHistoryItem(BillbeeInterfacesOrderHistoryEntry historyItem) {
    if (this.history == null) {
      this.history = new ArrayList<>();
    }
    this.history.add(historyItem);
    return this;
  }

  /**
   * Get history
   * @return history
   */
  @javax.annotation.Nullable
  public List<BillbeeInterfacesOrderHistoryEntry> getHistory() {
    return history;
  }

  public void setHistory(List<BillbeeInterfacesOrderHistoryEntry> history) {
    this.history = history;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Id of the order in the external system (marketplace)
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder invoiceAddress(BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel invoiceAddress) {
    this.invoiceAddress = invoiceAddress;
    return this;
  }

  /**
   * Get invoiceAddress
   * @return invoiceAddress
   */
  @javax.annotation.Nullable
  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel getInvoiceAddress() {
    return invoiceAddress;
  }

  public void setInvoiceAddress(BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel invoiceAddress) {
    this.invoiceAddress = invoiceAddress;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder invoiceDate(OffsetDateTime invoiceDate) {
    this.invoiceDate = invoiceDate;
    return this;
  }

  /**
   * The date on which the invoice was created
   * @return invoiceDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getInvoiceDate() {
    return invoiceDate;
  }

  public void setInvoiceDate(OffsetDateTime invoiceDate) {
    this.invoiceDate = invoiceDate;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder invoiceNumber(Integer invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
    return this;
  }

  /**
   * The invoice number
   * @return invoiceNumber
   */
  @javax.annotation.Nullable
  public Integer getInvoiceNumber() {
    return invoiceNumber;
  }

  public void setInvoiceNumber(Integer invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder invoiceNumberPostfix(String invoiceNumberPostfix) {
    this.invoiceNumberPostfix = invoiceNumberPostfix;
    return this;
  }

  /**
   * The postfix of the invoice number
   * @return invoiceNumberPostfix
   */
  @javax.annotation.Nullable
  public String getInvoiceNumberPostfix() {
    return invoiceNumberPostfix;
  }

  public void setInvoiceNumberPostfix(String invoiceNumberPostfix) {
    this.invoiceNumberPostfix = invoiceNumberPostfix;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder invoiceNumberPrefix(String invoiceNumberPrefix) {
    this.invoiceNumberPrefix = invoiceNumberPrefix;
    return this;
  }

  /**
   * The prefix of the invoice number
   * @return invoiceNumberPrefix
   */
  @javax.annotation.Nullable
  public String getInvoiceNumberPrefix() {
    return invoiceNumberPrefix;
  }

  public void setInvoiceNumberPrefix(String invoiceNumberPrefix) {
    this.invoiceNumberPrefix = invoiceNumberPrefix;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder isCancelationFor(String isCancelationFor) {
    this.isCancelationFor = isCancelationFor;
    return this;
  }

  /**
   * An optional Order Id (externalid) for an order if this is a cancel order (shopify only at the moment)
   * @return isCancelationFor
   */
  @javax.annotation.Nullable
  public String getIsCancelationFor() {
    return isCancelationFor;
  }

  public void setIsCancelationFor(String isCancelationFor) {
    this.isCancelationFor = isCancelationFor;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder isFromBillbeeApi(Boolean isFromBillbeeApi) {
    this.isFromBillbeeApi = isFromBillbeeApi;
    return this;
  }

  /**
   * Indicates whether the order was created through the Billbee-Api or not.
   * @return isFromBillbeeApi
   */
  @javax.annotation.Nullable
  public Boolean getIsFromBillbeeApi() {
    return isFromBillbeeApi;
  }

  public void setIsFromBillbeeApi(Boolean isFromBillbeeApi) {
    this.isFromBillbeeApi = isFromBillbeeApi;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * The two-letter language code of the customer
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder lastModifiedAt(OffsetDateTime lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
    return this;
  }

  /**
   * Date of the last update, the order got
   * @return lastModifiedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedAt() {
    return lastModifiedAt;
  }

  public void setLastModifiedAt(OffsetDateTime lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder merchantVatId(String merchantVatId) {
    this.merchantVatId = merchantVatId;
    return this;
  }

  /**
   * The vat-id, that should be displayed on the invoice and other order documents
   * @return merchantVatId
   */
  @javax.annotation.Nullable
  public String getMerchantVatId() {
    return merchantVatId;
  }

  public void setMerchantVatId(String merchantVatId) {
    this.merchantVatId = merchantVatId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder orderItems(List<BillbeeInterfacesBillbeeAPIModelOrderItem> orderItems) {
    this.orderItems = orderItems;
    return this;
  }

  public BillbeeInterfacesBillbeeAPIModelOrder addOrderItemsItem(BillbeeInterfacesBillbeeAPIModelOrderItem orderItemsItem) {
    if (this.orderItems == null) {
      this.orderItems = new ArrayList<>();
    }
    this.orderItems.add(orderItemsItem);
    return this;
  }

  /**
   * The list of items purchased like shirt, pant, toys etc
   * @return orderItems
   */
  @javax.annotation.Nullable
  public List<BillbeeInterfacesBillbeeAPIModelOrderItem> getOrderItems() {
    return orderItems;
  }

  public void setOrderItems(List<BillbeeInterfacesBillbeeAPIModelOrderItem> orderItems) {
    this.orderItems = orderItems;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder orderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
    return this;
  }

  /**
   * Order number of the order in the external system (marketplace)
   * @return orderNumber
   */
  @javax.annotation.Nullable
  public String getOrderNumber() {
    return orderNumber;
  }

  public void setOrderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder paidAmount(Double paidAmount) {
    this.paidAmount = paidAmount;
    return this;
  }

  /**
   * Get paidAmount
   * @return paidAmount
   */
  @javax.annotation.Nullable
  public Double getPaidAmount() {
    return paidAmount;
  }

  public void setPaidAmount(Double paidAmount) {
    this.paidAmount = paidAmount;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder payedAt(OffsetDateTime payedAt) {
    this.payedAt = payedAt;
    return this;
  }

  /**
   * The date on which the order was paid
   * @return payedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPayedAt() {
    return payedAt;
  }

  public void setPayedAt(OffsetDateTime payedAt) {
    this.payedAt = payedAt;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder paymentInstruction(String paymentInstruction) {
    this.paymentInstruction = paymentInstruction;
    return this;
  }

  /**
   * A textfield optionaly filled with a payment instruction text for printout on the invoice (z.B. Ebay Kauf auf Rechnung)
   * @return paymentInstruction
   */
  @javax.annotation.Nullable
  public String getPaymentInstruction() {
    return paymentInstruction;
  }

  public void setPaymentInstruction(String paymentInstruction) {
    this.paymentInstruction = paymentInstruction;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder paymentMethod(PaymentMethodEnum paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

  /**
   * The payment method
   * @return paymentMethod
   */
  @javax.annotation.Nullable
  public PaymentMethodEnum getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(PaymentMethodEnum paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder paymentReference(String paymentReference) {
    this.paymentReference = paymentReference;
    return this;
  }

  /**
   * A payment reference. Should not be used any more. Please use &#39;Payments&#39; instead.
   * @return paymentReference
   */
  @javax.annotation.Nullable
  public String getPaymentReference() {
    return paymentReference;
  }

  public void setPaymentReference(String paymentReference) {
    this.paymentReference = paymentReference;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder paymentTransactionId(String paymentTransactionId) {
    this.paymentTransactionId = paymentTransactionId;
    return this;
  }

  /**
   * The id of the payment transaction. For example the transaction id of PayPal payment. Should not be used any more. Please use &#39;Payments&#39; instead.
   * @return paymentTransactionId
   */
  @javax.annotation.Nullable
  public String getPaymentTransactionId() {
    return paymentTransactionId;
  }

  public void setPaymentTransactionId(String paymentTransactionId) {
    this.paymentTransactionId = paymentTransactionId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder payments(List<BillbeeInterfacesBillbeeAPIModelsOrderPayment> payments) {
    this.payments = payments;
    return this;
  }

  public BillbeeInterfacesBillbeeAPIModelOrder addPaymentsItem(BillbeeInterfacesBillbeeAPIModelsOrderPayment paymentsItem) {
    if (this.payments == null) {
      this.payments = new ArrayList<>();
    }
    this.payments.add(paymentsItem);
    return this;
  }

  /**
   * Get payments
   * @return payments
   */
  @javax.annotation.Nullable
  public List<BillbeeInterfacesBillbeeAPIModelsOrderPayment> getPayments() {
    return payments;
  }

  public void setPayments(List<BillbeeInterfacesBillbeeAPIModelsOrderPayment> payments) {
    this.payments = payments;
  }


  /**
   * Get rebateDifference
   * @return rebateDifference
   */
  @javax.annotation.Nullable
  public Double getRebateDifference() {
    return rebateDifference;
  }



  public BillbeeInterfacesBillbeeAPIModelOrder restoredAt(OffsetDateTime restoredAt) {
    this.restoredAt = restoredAt;
    return this;
  }

  /**
   * If set, the order was restored from the archive at the given date.
   * @return restoredAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getRestoredAt() {
    return restoredAt;
  }

  public void setRestoredAt(OffsetDateTime restoredAt) {
    this.restoredAt = restoredAt;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder seller(BillbeeInterfacesBillbeeAPIModelOrderUser seller) {
    this.seller = seller;
    return this;
  }

  /**
   * Get seller
   * @return seller
   */
  @javax.annotation.Nullable
  public BillbeeInterfacesBillbeeAPIModelOrderUser getSeller() {
    return seller;
  }

  public void setSeller(BillbeeInterfacesBillbeeAPIModelOrderUser seller) {
    this.seller = seller;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder sellerComment(String sellerComment) {
    this.sellerComment = sellerComment;
    return this;
  }

  /**
   * An internal seller comment
   * @return sellerComment
   */
  @javax.annotation.Nullable
  public String getSellerComment() {
    return sellerComment;
  }

  public void setSellerComment(String sellerComment) {
    this.sellerComment = sellerComment;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder shipWeightKg(Double shipWeightKg) {
    this.shipWeightKg = shipWeightKg;
    return this;
  }

  /**
   * The total weight of the shipment(s)
   * @return shipWeightKg
   */
  @javax.annotation.Nullable
  public Double getShipWeightKg() {
    return shipWeightKg;
  }

  public void setShipWeightKg(Double shipWeightKg) {
    this.shipWeightKg = shipWeightKg;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder shippedAt(OffsetDateTime shippedAt) {
    this.shippedAt = shippedAt;
    return this;
  }

  /**
   * The date on which the order was shipped
   * @return shippedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getShippedAt() {
    return shippedAt;
  }

  public void setShippedAt(OffsetDateTime shippedAt) {
    this.shippedAt = shippedAt;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder shippingAddress(BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

  /**
   * Get shippingAddress
   * @return shippingAddress
   */
  @javax.annotation.Nullable
  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel getShippingAddress() {
    return shippingAddress;
  }

  public void setShippingAddress(BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel shippingAddress) {
    this.shippingAddress = shippingAddress;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder shippingCost(Double shippingCost) {
    this.shippingCost = shippingCost;
    return this;
  }

  /**
   * The shipping cost
   * @return shippingCost
   */
  @javax.annotation.Nullable
  public Double getShippingCost() {
    return shippingCost;
  }

  public void setShippingCost(Double shippingCost) {
    this.shippingCost = shippingCost;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder shippingIds(List<BillbeeInterfacesBillbeeAPIModelShipment> shippingIds) {
    this.shippingIds = shippingIds;
    return this;
  }

  public BillbeeInterfacesBillbeeAPIModelOrder addShippingIdsItem(BillbeeInterfacesBillbeeAPIModelShipment shippingIdsItem) {
    if (this.shippingIds == null) {
      this.shippingIds = new ArrayList<>();
    }
    this.shippingIds.add(shippingIdsItem);
    return this;
  }

  /**
   * The shipments of the order
   * @return shippingIds
   */
  @javax.annotation.Nullable
  public List<BillbeeInterfacesBillbeeAPIModelShipment> getShippingIds() {
    return shippingIds;
  }

  public void setShippingIds(List<BillbeeInterfacesBillbeeAPIModelShipment> shippingIds) {
    this.shippingIds = shippingIds;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder shippingProfileId(String shippingProfileId) {
    this.shippingProfileId = shippingProfileId;
    return this;
  }

  /**
   * Internal Id for the shipping profile for that order
   * @return shippingProfileId
   */
  @javax.annotation.Nullable
  public String getShippingProfileId() {
    return shippingProfileId;
  }

  public void setShippingProfileId(String shippingProfileId) {
    this.shippingProfileId = shippingProfileId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder shippingProfileName(String shippingProfileName) {
    this.shippingProfileName = shippingProfileName;
    return this;
  }

  /**
   * Display Name of Shipping profile, if available
   * @return shippingProfileName
   */
  @javax.annotation.Nullable
  public String getShippingProfileName() {
    return shippingProfileName;
  }

  public void setShippingProfileName(String shippingProfileName) {
    this.shippingProfileName = shippingProfileName;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder shippingProviderId(Long shippingProviderId) {
    this.shippingProviderId = shippingProviderId;
    return this;
  }

  /**
   * Internal Id for the used shipping provider
   * @return shippingProviderId
   */
  @javax.annotation.Nullable
  public Long getShippingProviderId() {
    return shippingProviderId;
  }

  public void setShippingProviderId(Long shippingProviderId) {
    this.shippingProviderId = shippingProviderId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder shippingProviderName(String shippingProviderName) {
    this.shippingProviderName = shippingProviderName;
    return this;
  }

  /**
   * The Name for of used shipping provider
   * @return shippingProviderName
   */
  @javax.annotation.Nullable
  public String getShippingProviderName() {
    return shippingProviderName;
  }

  public void setShippingProviderName(String shippingProviderName) {
    this.shippingProviderName = shippingProviderName;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder shippingProviderProductId(Long shippingProviderProductId) {
    this.shippingProviderProductId = shippingProviderProductId;
    return this;
  }

  /**
   * Internal Id for the used shipping product
   * @return shippingProviderProductId
   */
  @javax.annotation.Nullable
  public Long getShippingProviderProductId() {
    return shippingProviderProductId;
  }

  public void setShippingProviderProductId(Long shippingProviderProductId) {
    this.shippingProviderProductId = shippingProviderProductId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder shippingProviderProductName(String shippingProviderProductName) {
    this.shippingProviderProductName = shippingProviderProductName;
    return this;
  }

  /**
   * The Name of the used shipping product
   * @return shippingProviderProductName
   */
  @javax.annotation.Nullable
  public String getShippingProviderProductName() {
    return shippingProviderProductName;
  }

  public void setShippingProviderProductName(String shippingProviderProductName) {
    this.shippingProviderProductName = shippingProviderProductName;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder shippingServices(List<BillbeeInterfacesShippingProductService> shippingServices) {
    this.shippingServices = shippingServices;
    return this;
  }

  public BillbeeInterfacesBillbeeAPIModelOrder addShippingServicesItem(BillbeeInterfacesShippingProductService shippingServicesItem) {
    if (this.shippingServices == null) {
      this.shippingServices = new ArrayList<>();
    }
    this.shippingServices.add(shippingServicesItem);
    return this;
  }

  /**
   * Additional services for the shipment
   * @return shippingServices
   */
  @javax.annotation.Nullable
  public List<BillbeeInterfacesShippingProductService> getShippingServices() {
    return shippingServices;
  }

  public void setShippingServices(List<BillbeeInterfacesShippingProductService> shippingServices) {
    this.shippingServices = shippingServices;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * The current state of the order
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public BillbeeInterfacesBillbeeAPIModelOrder addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * The Tags of the order
   * @return tags
   */
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder taxRate1(Double taxRate1) {
    this.taxRate1 = taxRate1;
    return this;
  }

  /**
   * The regular tax rate
   * @return taxRate1
   */
  @javax.annotation.Nullable
  public Double getTaxRate1() {
    return taxRate1;
  }

  public void setTaxRate1(Double taxRate1) {
    this.taxRate1 = taxRate1;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder taxRate2(Double taxRate2) {
    this.taxRate2 = taxRate2;
    return this;
  }

  /**
   * The reduced tax rate
   * @return taxRate2
   */
  @javax.annotation.Nullable
  public Double getTaxRate2() {
    return taxRate2;
  }

  public void setTaxRate2(Double taxRate2) {
    this.taxRate2 = taxRate2;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder totalCost(Double totalCost) {
    this.totalCost = totalCost;
    return this;
  }

  /**
   * The total cost excluding shipping cost
   * @return totalCost
   */
  @javax.annotation.Nullable
  public Double getTotalCost() {
    return totalCost;
  }

  public void setTotalCost(Double totalCost) {
    this.totalCost = totalCost;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * The date on which the order was last updated
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder vatId(String vatId) {
    this.vatId = vatId;
    return this;
  }

  /**
   * The customers vat id
   * @return vatId
   */
  @javax.annotation.Nullable
  public String getVatId() {
    return vatId;
  }

  public void setVatId(String vatId) {
    this.vatId = vatId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrder vatMode(VatModeEnum vatMode) {
    this.vatMode = vatMode;
    return this;
  }

  /**
   * The vat mode of the order
   * @return vatMode
   */
  @javax.annotation.Nullable
  public VatModeEnum getVatMode() {
    return vatMode;
  }

  public void setVatMode(VatModeEnum vatMode) {
    this.vatMode = vatMode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillbeeInterfacesBillbeeAPIModelOrder billbeeInterfacesBillbeeAPIModelOrder = (BillbeeInterfacesBillbeeAPIModelOrder) o;
    return Objects.equals(this.acceptLossOfReturnRight, billbeeInterfacesBillbeeAPIModelOrder.acceptLossOfReturnRight) &&
        Objects.equals(this.adjustmentCost, billbeeInterfacesBillbeeAPIModelOrder.adjustmentCost) &&
        Objects.equals(this.adjustmentReason, billbeeInterfacesBillbeeAPIModelOrder.adjustmentReason) &&
        Objects.equals(this.apiAccountId, billbeeInterfacesBillbeeAPIModelOrder.apiAccountId) &&
        Objects.equals(this.apiAccountName, billbeeInterfacesBillbeeAPIModelOrder.apiAccountName) &&
        Objects.equals(this.archivedAt, billbeeInterfacesBillbeeAPIModelOrder.archivedAt) &&
        Objects.equals(this.billBeeOrderId, billbeeInterfacesBillbeeAPIModelOrder.billBeeOrderId) &&
        Objects.equals(this.billBeeParentOrderId, billbeeInterfacesBillbeeAPIModelOrder.billBeeParentOrderId) &&
        Objects.equals(this.buyer, billbeeInterfacesBillbeeAPIModelOrder.buyer) &&
        Objects.equals(this.comments, billbeeInterfacesBillbeeAPIModelOrder.comments) &&
        Objects.equals(this.confirmedAt, billbeeInterfacesBillbeeAPIModelOrder.confirmedAt) &&
        Objects.equals(this.createdAt, billbeeInterfacesBillbeeAPIModelOrder.createdAt) &&
        Objects.equals(this.currency, billbeeInterfacesBillbeeAPIModelOrder.currency) &&
        Objects.equals(this.customInvoiceNote, billbeeInterfacesBillbeeAPIModelOrder.customInvoiceNote) &&
        Objects.equals(this.customer, billbeeInterfacesBillbeeAPIModelOrder.customer) &&
        Objects.equals(this.customerNumber, billbeeInterfacesBillbeeAPIModelOrder.customerNumber) &&
        Objects.equals(this.customerVatId, billbeeInterfacesBillbeeAPIModelOrder.customerVatId) &&
        Objects.equals(this.deliverySourceCountryCode, billbeeInterfacesBillbeeAPIModelOrder.deliverySourceCountryCode) &&
        Objects.equals(this.distributionCenter, billbeeInterfacesBillbeeAPIModelOrder.distributionCenter) &&
        Objects.equals(this.history, billbeeInterfacesBillbeeAPIModelOrder.history) &&
        Objects.equals(this.id, billbeeInterfacesBillbeeAPIModelOrder.id) &&
        Objects.equals(this.invoiceAddress, billbeeInterfacesBillbeeAPIModelOrder.invoiceAddress) &&
        Objects.equals(this.invoiceDate, billbeeInterfacesBillbeeAPIModelOrder.invoiceDate) &&
        Objects.equals(this.invoiceNumber, billbeeInterfacesBillbeeAPIModelOrder.invoiceNumber) &&
        Objects.equals(this.invoiceNumberPostfix, billbeeInterfacesBillbeeAPIModelOrder.invoiceNumberPostfix) &&
        Objects.equals(this.invoiceNumberPrefix, billbeeInterfacesBillbeeAPIModelOrder.invoiceNumberPrefix) &&
        Objects.equals(this.isCancelationFor, billbeeInterfacesBillbeeAPIModelOrder.isCancelationFor) &&
        Objects.equals(this.isFromBillbeeApi, billbeeInterfacesBillbeeAPIModelOrder.isFromBillbeeApi) &&
        Objects.equals(this.languageCode, billbeeInterfacesBillbeeAPIModelOrder.languageCode) &&
        Objects.equals(this.lastModifiedAt, billbeeInterfacesBillbeeAPIModelOrder.lastModifiedAt) &&
        Objects.equals(this.merchantVatId, billbeeInterfacesBillbeeAPIModelOrder.merchantVatId) &&
        Objects.equals(this.orderItems, billbeeInterfacesBillbeeAPIModelOrder.orderItems) &&
        Objects.equals(this.orderNumber, billbeeInterfacesBillbeeAPIModelOrder.orderNumber) &&
        Objects.equals(this.paidAmount, billbeeInterfacesBillbeeAPIModelOrder.paidAmount) &&
        Objects.equals(this.payedAt, billbeeInterfacesBillbeeAPIModelOrder.payedAt) &&
        Objects.equals(this.paymentInstruction, billbeeInterfacesBillbeeAPIModelOrder.paymentInstruction) &&
        Objects.equals(this.paymentMethod, billbeeInterfacesBillbeeAPIModelOrder.paymentMethod) &&
        Objects.equals(this.paymentReference, billbeeInterfacesBillbeeAPIModelOrder.paymentReference) &&
        Objects.equals(this.paymentTransactionId, billbeeInterfacesBillbeeAPIModelOrder.paymentTransactionId) &&
        Objects.equals(this.payments, billbeeInterfacesBillbeeAPIModelOrder.payments) &&
        Objects.equals(this.rebateDifference, billbeeInterfacesBillbeeAPIModelOrder.rebateDifference) &&
        Objects.equals(this.restoredAt, billbeeInterfacesBillbeeAPIModelOrder.restoredAt) &&
        Objects.equals(this.seller, billbeeInterfacesBillbeeAPIModelOrder.seller) &&
        Objects.equals(this.sellerComment, billbeeInterfacesBillbeeAPIModelOrder.sellerComment) &&
        Objects.equals(this.shipWeightKg, billbeeInterfacesBillbeeAPIModelOrder.shipWeightKg) &&
        Objects.equals(this.shippedAt, billbeeInterfacesBillbeeAPIModelOrder.shippedAt) &&
        Objects.equals(this.shippingAddress, billbeeInterfacesBillbeeAPIModelOrder.shippingAddress) &&
        Objects.equals(this.shippingCost, billbeeInterfacesBillbeeAPIModelOrder.shippingCost) &&
        Objects.equals(this.shippingIds, billbeeInterfacesBillbeeAPIModelOrder.shippingIds) &&
        Objects.equals(this.shippingProfileId, billbeeInterfacesBillbeeAPIModelOrder.shippingProfileId) &&
        Objects.equals(this.shippingProfileName, billbeeInterfacesBillbeeAPIModelOrder.shippingProfileName) &&
        Objects.equals(this.shippingProviderId, billbeeInterfacesBillbeeAPIModelOrder.shippingProviderId) &&
        Objects.equals(this.shippingProviderName, billbeeInterfacesBillbeeAPIModelOrder.shippingProviderName) &&
        Objects.equals(this.shippingProviderProductId, billbeeInterfacesBillbeeAPIModelOrder.shippingProviderProductId) &&
        Objects.equals(this.shippingProviderProductName, billbeeInterfacesBillbeeAPIModelOrder.shippingProviderProductName) &&
        Objects.equals(this.shippingServices, billbeeInterfacesBillbeeAPIModelOrder.shippingServices) &&
        Objects.equals(this.state, billbeeInterfacesBillbeeAPIModelOrder.state) &&
        Objects.equals(this.tags, billbeeInterfacesBillbeeAPIModelOrder.tags) &&
        Objects.equals(this.taxRate1, billbeeInterfacesBillbeeAPIModelOrder.taxRate1) &&
        Objects.equals(this.taxRate2, billbeeInterfacesBillbeeAPIModelOrder.taxRate2) &&
        Objects.equals(this.totalCost, billbeeInterfacesBillbeeAPIModelOrder.totalCost) &&
        Objects.equals(this.updatedAt, billbeeInterfacesBillbeeAPIModelOrder.updatedAt) &&
        Objects.equals(this.vatId, billbeeInterfacesBillbeeAPIModelOrder.vatId) &&
        Objects.equals(this.vatMode, billbeeInterfacesBillbeeAPIModelOrder.vatMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptLossOfReturnRight, adjustmentCost, adjustmentReason, apiAccountId, apiAccountName, archivedAt, billBeeOrderId, billBeeParentOrderId, buyer, comments, confirmedAt, createdAt, currency, customInvoiceNote, customer, customerNumber, customerVatId, deliverySourceCountryCode, distributionCenter, history, id, invoiceAddress, invoiceDate, invoiceNumber, invoiceNumberPostfix, invoiceNumberPrefix, isCancelationFor, isFromBillbeeApi, languageCode, lastModifiedAt, merchantVatId, orderItems, orderNumber, paidAmount, payedAt, paymentInstruction, paymentMethod, paymentReference, paymentTransactionId, payments, rebateDifference, restoredAt, seller, sellerComment, shipWeightKg, shippedAt, shippingAddress, shippingCost, shippingIds, shippingProfileId, shippingProfileName, shippingProviderId, shippingProviderName, shippingProviderProductId, shippingProviderProductName, shippingServices, state, tags, taxRate1, taxRate2, totalCost, updatedAt, vatId, vatMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillbeeInterfacesBillbeeAPIModelOrder {\n");
    sb.append("    acceptLossOfReturnRight: ").append(toIndentedString(acceptLossOfReturnRight)).append("\n");
    sb.append("    adjustmentCost: ").append(toIndentedString(adjustmentCost)).append("\n");
    sb.append("    adjustmentReason: ").append(toIndentedString(adjustmentReason)).append("\n");
    sb.append("    apiAccountId: ").append(toIndentedString(apiAccountId)).append("\n");
    sb.append("    apiAccountName: ").append(toIndentedString(apiAccountName)).append("\n");
    sb.append("    archivedAt: ").append(toIndentedString(archivedAt)).append("\n");
    sb.append("    billBeeOrderId: ").append(toIndentedString(billBeeOrderId)).append("\n");
    sb.append("    billBeeParentOrderId: ").append(toIndentedString(billBeeParentOrderId)).append("\n");
    sb.append("    buyer: ").append(toIndentedString(buyer)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    confirmedAt: ").append(toIndentedString(confirmedAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    customInvoiceNote: ").append(toIndentedString(customInvoiceNote)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    customerNumber: ").append(toIndentedString(customerNumber)).append("\n");
    sb.append("    customerVatId: ").append(toIndentedString(customerVatId)).append("\n");
    sb.append("    deliverySourceCountryCode: ").append(toIndentedString(deliverySourceCountryCode)).append("\n");
    sb.append("    distributionCenter: ").append(toIndentedString(distributionCenter)).append("\n");
    sb.append("    history: ").append(toIndentedString(history)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    invoiceAddress: ").append(toIndentedString(invoiceAddress)).append("\n");
    sb.append("    invoiceDate: ").append(toIndentedString(invoiceDate)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    invoiceNumberPostfix: ").append(toIndentedString(invoiceNumberPostfix)).append("\n");
    sb.append("    invoiceNumberPrefix: ").append(toIndentedString(invoiceNumberPrefix)).append("\n");
    sb.append("    isCancelationFor: ").append(toIndentedString(isCancelationFor)).append("\n");
    sb.append("    isFromBillbeeApi: ").append(toIndentedString(isFromBillbeeApi)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    lastModifiedAt: ").append(toIndentedString(lastModifiedAt)).append("\n");
    sb.append("    merchantVatId: ").append(toIndentedString(merchantVatId)).append("\n");
    sb.append("    orderItems: ").append(toIndentedString(orderItems)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    paidAmount: ").append(toIndentedString(paidAmount)).append("\n");
    sb.append("    payedAt: ").append(toIndentedString(payedAt)).append("\n");
    sb.append("    paymentInstruction: ").append(toIndentedString(paymentInstruction)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    paymentReference: ").append(toIndentedString(paymentReference)).append("\n");
    sb.append("    paymentTransactionId: ").append(toIndentedString(paymentTransactionId)).append("\n");
    sb.append("    payments: ").append(toIndentedString(payments)).append("\n");
    sb.append("    rebateDifference: ").append(toIndentedString(rebateDifference)).append("\n");
    sb.append("    restoredAt: ").append(toIndentedString(restoredAt)).append("\n");
    sb.append("    seller: ").append(toIndentedString(seller)).append("\n");
    sb.append("    sellerComment: ").append(toIndentedString(sellerComment)).append("\n");
    sb.append("    shipWeightKg: ").append(toIndentedString(shipWeightKg)).append("\n");
    sb.append("    shippedAt: ").append(toIndentedString(shippedAt)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    shippingCost: ").append(toIndentedString(shippingCost)).append("\n");
    sb.append("    shippingIds: ").append(toIndentedString(shippingIds)).append("\n");
    sb.append("    shippingProfileId: ").append(toIndentedString(shippingProfileId)).append("\n");
    sb.append("    shippingProfileName: ").append(toIndentedString(shippingProfileName)).append("\n");
    sb.append("    shippingProviderId: ").append(toIndentedString(shippingProviderId)).append("\n");
    sb.append("    shippingProviderName: ").append(toIndentedString(shippingProviderName)).append("\n");
    sb.append("    shippingProviderProductId: ").append(toIndentedString(shippingProviderProductId)).append("\n");
    sb.append("    shippingProviderProductName: ").append(toIndentedString(shippingProviderProductName)).append("\n");
    sb.append("    shippingServices: ").append(toIndentedString(shippingServices)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    taxRate1: ").append(toIndentedString(taxRate1)).append("\n");
    sb.append("    taxRate2: ").append(toIndentedString(taxRate2)).append("\n");
    sb.append("    totalCost: ").append(toIndentedString(totalCost)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    vatId: ").append(toIndentedString(vatId)).append("\n");
    sb.append("    vatMode: ").append(toIndentedString(vatMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AcceptLossOfReturnRight");
    openapiFields.add("AdjustmentCost");
    openapiFields.add("AdjustmentReason");
    openapiFields.add("ApiAccountId");
    openapiFields.add("ApiAccountName");
    openapiFields.add("ArchivedAt");
    openapiFields.add("BillBeeOrderId");
    openapiFields.add("BillBeeParentOrderId");
    openapiFields.add("Buyer");
    openapiFields.add("Comments");
    openapiFields.add("ConfirmedAt");
    openapiFields.add("CreatedAt");
    openapiFields.add("Currency");
    openapiFields.add("CustomInvoiceNote");
    openapiFields.add("Customer");
    openapiFields.add("CustomerNumber");
    openapiFields.add("CustomerVatId");
    openapiFields.add("DeliverySourceCountryCode");
    openapiFields.add("DistributionCenter");
    openapiFields.add("History");
    openapiFields.add("Id");
    openapiFields.add("InvoiceAddress");
    openapiFields.add("InvoiceDate");
    openapiFields.add("InvoiceNumber");
    openapiFields.add("InvoiceNumberPostfix");
    openapiFields.add("InvoiceNumberPrefix");
    openapiFields.add("IsCancelationFor");
    openapiFields.add("IsFromBillbeeApi");
    openapiFields.add("LanguageCode");
    openapiFields.add("LastModifiedAt");
    openapiFields.add("MerchantVatId");
    openapiFields.add("OrderItems");
    openapiFields.add("OrderNumber");
    openapiFields.add("PaidAmount");
    openapiFields.add("PayedAt");
    openapiFields.add("PaymentInstruction");
    openapiFields.add("PaymentMethod");
    openapiFields.add("PaymentReference");
    openapiFields.add("PaymentTransactionId");
    openapiFields.add("Payments");
    openapiFields.add("RebateDifference");
    openapiFields.add("RestoredAt");
    openapiFields.add("Seller");
    openapiFields.add("SellerComment");
    openapiFields.add("ShipWeightKg");
    openapiFields.add("ShippedAt");
    openapiFields.add("ShippingAddress");
    openapiFields.add("ShippingCost");
    openapiFields.add("ShippingIds");
    openapiFields.add("ShippingProfileId");
    openapiFields.add("ShippingProfileName");
    openapiFields.add("ShippingProviderId");
    openapiFields.add("ShippingProviderName");
    openapiFields.add("ShippingProviderProductId");
    openapiFields.add("ShippingProviderProductName");
    openapiFields.add("ShippingServices");
    openapiFields.add("State");
    openapiFields.add("Tags");
    openapiFields.add("TaxRate1");
    openapiFields.add("TaxRate2");
    openapiFields.add("TotalCost");
    openapiFields.add("UpdatedAt");
    openapiFields.add("VatId");
    openapiFields.add("VatMode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BillbeeInterfacesBillbeeAPIModelOrder
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BillbeeInterfacesBillbeeAPIModelOrder.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BillbeeInterfacesBillbeeAPIModelOrder is not found in the empty JSON string", BillbeeInterfacesBillbeeAPIModelOrder.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BillbeeInterfacesBillbeeAPIModelOrder.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BillbeeInterfacesBillbeeAPIModelOrder` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AdjustmentReason") != null && !jsonObj.get("AdjustmentReason").isJsonNull()) && !jsonObj.get("AdjustmentReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AdjustmentReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AdjustmentReason").toString()));
      }
      if ((jsonObj.get("ApiAccountName") != null && !jsonObj.get("ApiAccountName").isJsonNull()) && !jsonObj.get("ApiAccountName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ApiAccountName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ApiAccountName").toString()));
      }
      // validate the optional field `Buyer`
      if (jsonObj.get("Buyer") != null && !jsonObj.get("Buyer").isJsonNull()) {
        BillbeeInterfacesBillbeeAPIModelOrderUser.validateJsonElement(jsonObj.get("Buyer"));
      }
      if (jsonObj.get("Comments") != null && !jsonObj.get("Comments").isJsonNull()) {
        JsonArray jsonArraycomments = jsonObj.getAsJsonArray("Comments");
        if (jsonArraycomments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Comments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Comments` to be an array in the JSON string but got `%s`", jsonObj.get("Comments").toString()));
          }

          // validate the optional field `Comments` (array)
          for (int i = 0; i < jsonArraycomments.size(); i++) {
            BillbeeInterfacesBillbeeAPIModelCommentApiModel.validateJsonElement(jsonArraycomments.get(i));
          };
        }
      }
      if ((jsonObj.get("Currency") != null && !jsonObj.get("Currency").isJsonNull()) && !jsonObj.get("Currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Currency").toString()));
      }
      if ((jsonObj.get("CustomInvoiceNote") != null && !jsonObj.get("CustomInvoiceNote").isJsonNull()) && !jsonObj.get("CustomInvoiceNote").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CustomInvoiceNote` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CustomInvoiceNote").toString()));
      }
      // validate the optional field `Customer`
      if (jsonObj.get("Customer") != null && !jsonObj.get("Customer").isJsonNull()) {
        BillbeeInterfacesBillbeeAPIModelCustomerApiModel.validateJsonElement(jsonObj.get("Customer"));
      }
      if ((jsonObj.get("CustomerNumber") != null && !jsonObj.get("CustomerNumber").isJsonNull()) && !jsonObj.get("CustomerNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CustomerNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CustomerNumber").toString()));
      }
      if ((jsonObj.get("CustomerVatId") != null && !jsonObj.get("CustomerVatId").isJsonNull()) && !jsonObj.get("CustomerVatId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CustomerVatId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CustomerVatId").toString()));
      }
      if ((jsonObj.get("DeliverySourceCountryCode") != null && !jsonObj.get("DeliverySourceCountryCode").isJsonNull()) && !jsonObj.get("DeliverySourceCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DeliverySourceCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DeliverySourceCountryCode").toString()));
      }
      if ((jsonObj.get("DistributionCenter") != null && !jsonObj.get("DistributionCenter").isJsonNull()) && !jsonObj.get("DistributionCenter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DistributionCenter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DistributionCenter").toString()));
      }
      if (jsonObj.get("History") != null && !jsonObj.get("History").isJsonNull()) {
        JsonArray jsonArrayhistory = jsonObj.getAsJsonArray("History");
        if (jsonArrayhistory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("History").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `History` to be an array in the JSON string but got `%s`", jsonObj.get("History").toString()));
          }

          // validate the optional field `History` (array)
          for (int i = 0; i < jsonArrayhistory.size(); i++) {
            BillbeeInterfacesOrderHistoryEntry.validateJsonElement(jsonArrayhistory.get(i));
          };
        }
      }
      if ((jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      // validate the optional field `InvoiceAddress`
      if (jsonObj.get("InvoiceAddress") != null && !jsonObj.get("InvoiceAddress").isJsonNull()) {
        BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.validateJsonElement(jsonObj.get("InvoiceAddress"));
      }
      if ((jsonObj.get("InvoiceNumberPostfix") != null && !jsonObj.get("InvoiceNumberPostfix").isJsonNull()) && !jsonObj.get("InvoiceNumberPostfix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InvoiceNumberPostfix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InvoiceNumberPostfix").toString()));
      }
      if ((jsonObj.get("InvoiceNumberPrefix") != null && !jsonObj.get("InvoiceNumberPrefix").isJsonNull()) && !jsonObj.get("InvoiceNumberPrefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InvoiceNumberPrefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InvoiceNumberPrefix").toString()));
      }
      if ((jsonObj.get("IsCancelationFor") != null && !jsonObj.get("IsCancelationFor").isJsonNull()) && !jsonObj.get("IsCancelationFor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IsCancelationFor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IsCancelationFor").toString()));
      }
      if ((jsonObj.get("LanguageCode") != null && !jsonObj.get("LanguageCode").isJsonNull()) && !jsonObj.get("LanguageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LanguageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LanguageCode").toString()));
      }
      if ((jsonObj.get("MerchantVatId") != null && !jsonObj.get("MerchantVatId").isJsonNull()) && !jsonObj.get("MerchantVatId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MerchantVatId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MerchantVatId").toString()));
      }
      if (jsonObj.get("OrderItems") != null && !jsonObj.get("OrderItems").isJsonNull()) {
        JsonArray jsonArrayorderItems = jsonObj.getAsJsonArray("OrderItems");
        if (jsonArrayorderItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("OrderItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `OrderItems` to be an array in the JSON string but got `%s`", jsonObj.get("OrderItems").toString()));
          }

          // validate the optional field `OrderItems` (array)
          for (int i = 0; i < jsonArrayorderItems.size(); i++) {
            BillbeeInterfacesBillbeeAPIModelOrderItem.validateJsonElement(jsonArrayorderItems.get(i));
          };
        }
      }
      if ((jsonObj.get("OrderNumber") != null && !jsonObj.get("OrderNumber").isJsonNull()) && !jsonObj.get("OrderNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OrderNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OrderNumber").toString()));
      }
      if ((jsonObj.get("PaymentInstruction") != null && !jsonObj.get("PaymentInstruction").isJsonNull()) && !jsonObj.get("PaymentInstruction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PaymentInstruction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PaymentInstruction").toString()));
      }
      // validate the optional field `PaymentMethod`
      if (jsonObj.get("PaymentMethod") != null && !jsonObj.get("PaymentMethod").isJsonNull()) {
        PaymentMethodEnum.validateJsonElement(jsonObj.get("PaymentMethod"));
      }
      if ((jsonObj.get("PaymentReference") != null && !jsonObj.get("PaymentReference").isJsonNull()) && !jsonObj.get("PaymentReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PaymentReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PaymentReference").toString()));
      }
      if ((jsonObj.get("PaymentTransactionId") != null && !jsonObj.get("PaymentTransactionId").isJsonNull()) && !jsonObj.get("PaymentTransactionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PaymentTransactionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PaymentTransactionId").toString()));
      }
      if (jsonObj.get("Payments") != null && !jsonObj.get("Payments").isJsonNull()) {
        JsonArray jsonArraypayments = jsonObj.getAsJsonArray("Payments");
        if (jsonArraypayments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Payments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Payments` to be an array in the JSON string but got `%s`", jsonObj.get("Payments").toString()));
          }

          // validate the optional field `Payments` (array)
          for (int i = 0; i < jsonArraypayments.size(); i++) {
            BillbeeInterfacesBillbeeAPIModelsOrderPayment.validateJsonElement(jsonArraypayments.get(i));
          };
        }
      }
      // validate the optional field `Seller`
      if (jsonObj.get("Seller") != null && !jsonObj.get("Seller").isJsonNull()) {
        BillbeeInterfacesBillbeeAPIModelOrderUser.validateJsonElement(jsonObj.get("Seller"));
      }
      if ((jsonObj.get("SellerComment") != null && !jsonObj.get("SellerComment").isJsonNull()) && !jsonObj.get("SellerComment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SellerComment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SellerComment").toString()));
      }
      // validate the optional field `ShippingAddress`
      if (jsonObj.get("ShippingAddress") != null && !jsonObj.get("ShippingAddress").isJsonNull()) {
        BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.validateJsonElement(jsonObj.get("ShippingAddress"));
      }
      if (jsonObj.get("ShippingIds") != null && !jsonObj.get("ShippingIds").isJsonNull()) {
        JsonArray jsonArrayshippingIds = jsonObj.getAsJsonArray("ShippingIds");
        if (jsonArrayshippingIds != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ShippingIds").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ShippingIds` to be an array in the JSON string but got `%s`", jsonObj.get("ShippingIds").toString()));
          }

          // validate the optional field `ShippingIds` (array)
          for (int i = 0; i < jsonArrayshippingIds.size(); i++) {
            BillbeeInterfacesBillbeeAPIModelShipment.validateJsonElement(jsonArrayshippingIds.get(i));
          };
        }
      }
      if ((jsonObj.get("ShippingProfileId") != null && !jsonObj.get("ShippingProfileId").isJsonNull()) && !jsonObj.get("ShippingProfileId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShippingProfileId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShippingProfileId").toString()));
      }
      if ((jsonObj.get("ShippingProfileName") != null && !jsonObj.get("ShippingProfileName").isJsonNull()) && !jsonObj.get("ShippingProfileName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShippingProfileName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShippingProfileName").toString()));
      }
      if ((jsonObj.get("ShippingProviderName") != null && !jsonObj.get("ShippingProviderName").isJsonNull()) && !jsonObj.get("ShippingProviderName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShippingProviderName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShippingProviderName").toString()));
      }
      if ((jsonObj.get("ShippingProviderProductName") != null && !jsonObj.get("ShippingProviderProductName").isJsonNull()) && !jsonObj.get("ShippingProviderProductName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShippingProviderProductName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShippingProviderProductName").toString()));
      }
      if (jsonObj.get("ShippingServices") != null && !jsonObj.get("ShippingServices").isJsonNull()) {
        JsonArray jsonArrayshippingServices = jsonObj.getAsJsonArray("ShippingServices");
        if (jsonArrayshippingServices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ShippingServices").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ShippingServices` to be an array in the JSON string but got `%s`", jsonObj.get("ShippingServices").toString()));
          }

          // validate the optional field `ShippingServices` (array)
          for (int i = 0; i < jsonArrayshippingServices.size(); i++) {
            BillbeeInterfacesShippingProductService.validateJsonElement(jsonArrayshippingServices.get(i));
          };
        }
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("State"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("Tags") != null && !jsonObj.get("Tags").isJsonNull() && !jsonObj.get("Tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `Tags` to be an array in the JSON string but got `%s`", jsonObj.get("Tags").toString()));
      }
      if ((jsonObj.get("VatId") != null && !jsonObj.get("VatId").isJsonNull()) && !jsonObj.get("VatId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `VatId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("VatId").toString()));
      }
      // validate the optional field `VatMode`
      if (jsonObj.get("VatMode") != null && !jsonObj.get("VatMode").isJsonNull()) {
        VatModeEnum.validateJsonElement(jsonObj.get("VatMode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BillbeeInterfacesBillbeeAPIModelOrder.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BillbeeInterfacesBillbeeAPIModelOrder' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BillbeeInterfacesBillbeeAPIModelOrder> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BillbeeInterfacesBillbeeAPIModelOrder.class));

       return (TypeAdapter<T>) new TypeAdapter<BillbeeInterfacesBillbeeAPIModelOrder>() {
           @Override
           public void write(JsonWriter out, BillbeeInterfacesBillbeeAPIModelOrder value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BillbeeInterfacesBillbeeAPIModelOrder read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BillbeeInterfacesBillbeeAPIModelOrder given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BillbeeInterfacesBillbeeAPIModelOrder
   * @throws IOException if the JSON string is invalid with respect to BillbeeInterfacesBillbeeAPIModelOrder
   */
  public static BillbeeInterfacesBillbeeAPIModelOrder fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BillbeeInterfacesBillbeeAPIModelOrder.class);
  }

  /**
   * Convert an instance of BillbeeInterfacesBillbeeAPIModelOrder to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

