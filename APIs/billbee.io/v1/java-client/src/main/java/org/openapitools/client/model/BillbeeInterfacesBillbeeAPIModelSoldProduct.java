/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelProductImage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BillbeeInterfacesBillbeeAPIModelSoldProduct
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:20.866639-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BillbeeInterfacesBillbeeAPIModelSoldProduct {
  public static final String SERIALIZED_NAME_BILLBEE_ID = "BillbeeId";
  @SerializedName(SERIALIZED_NAME_BILLBEE_ID)
  private Long billbeeId;

  public static final String SERIALIZED_NAME_COUNTRY_OF_ORIGIN = "CountryOfOrigin";
  @SerializedName(SERIALIZED_NAME_COUNTRY_OF_ORIGIN)
  private String countryOfOrigin;

  public static final String SERIALIZED_NAME_E_A_N = "EAN";
  @SerializedName(SERIALIZED_NAME_E_A_N)
  private String EAN;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IMAGES = "Images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<BillbeeInterfacesBillbeeAPIModelProductImage> images = new ArrayList<>();

  public static final String SERIALIZED_NAME_IS_DIGITAL = "IsDigital";
  @SerializedName(SERIALIZED_NAME_IS_DIGITAL)
  private Boolean isDigital;

  public static final String SERIALIZED_NAME_OLD_ID = "OldId";
  @SerializedName(SERIALIZED_NAME_OLD_ID)
  private String oldId;

  public static final String SERIALIZED_NAME_PLATFORM_DATA = "PlatformData";
  @SerializedName(SERIALIZED_NAME_PLATFORM_DATA)
  private String platformData;

  public static final String SERIALIZED_NAME_S_K_U = "SKU";
  @SerializedName(SERIALIZED_NAME_S_K_U)
  private String SKU;

  public static final String SERIALIZED_NAME_SKU_OR_ID = "SkuOrId";
  @SerializedName(SERIALIZED_NAME_SKU_OR_ID)
  private String skuOrId;

  public static final String SERIALIZED_NAME_TA_R_I_C_CODE = "TARICCode";
  @SerializedName(SERIALIZED_NAME_TA_R_I_C_CODE)
  private String taRICCode;

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Integer type;

  public static final String SERIALIZED_NAME_WEIGHT = "Weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Integer weight;

  public BillbeeInterfacesBillbeeAPIModelSoldProduct() {
  }

  public BillbeeInterfacesBillbeeAPIModelSoldProduct(
     String skuOrId
  ) {
    this();
    this.skuOrId = skuOrId;
  }

  public BillbeeInterfacesBillbeeAPIModelSoldProduct billbeeId(Long billbeeId) {
    this.billbeeId = billbeeId;
    return this;
  }

  /**
   * The Billbee internal id of the linked product
   * @return billbeeId
   */
  @javax.annotation.Nullable
  public Long getBillbeeId() {
    return billbeeId;
  }

  public void setBillbeeId(Long billbeeId) {
    this.billbeeId = billbeeId;
  }


  public BillbeeInterfacesBillbeeAPIModelSoldProduct countryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
    return this;
  }

  /**
   * The country where this article was made
   * @return countryOfOrigin
   */
  @javax.annotation.Nullable
  public String getCountryOfOrigin() {
    return countryOfOrigin;
  }

  public void setCountryOfOrigin(String countryOfOrigin) {
    this.countryOfOrigin = countryOfOrigin;
  }


  public BillbeeInterfacesBillbeeAPIModelSoldProduct EAN(String EAN) {
    this.EAN = EAN;
    return this;
  }

  /**
   * The EAN / GTIN of this product
   * @return EAN
   */
  @javax.annotation.Nullable
  public String getEAN() {
    return EAN;
  }

  public void setEAN(String EAN) {
    this.EAN = EAN;
  }


  public BillbeeInterfacesBillbeeAPIModelSoldProduct id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The id of this product in the external system
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public BillbeeInterfacesBillbeeAPIModelSoldProduct images(List<BillbeeInterfacesBillbeeAPIModelProductImage> images) {
    this.images = images;
    return this;
  }

  public BillbeeInterfacesBillbeeAPIModelSoldProduct addImagesItem(BillbeeInterfacesBillbeeAPIModelProductImage imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

  /**
   * The images of this product
   * @return images
   */
  @javax.annotation.Nullable
  public List<BillbeeInterfacesBillbeeAPIModelProductImage> getImages() {
    return images;
  }

  public void setImages(List<BillbeeInterfacesBillbeeAPIModelProductImage> images) {
    this.images = images;
  }


  public BillbeeInterfacesBillbeeAPIModelSoldProduct isDigital(Boolean isDigital) {
    this.isDigital = isDigital;
    return this;
  }

  /**
   * True if the product is a digital good (download etc.), false if not
   * @return isDigital
   */
  @javax.annotation.Nullable
  public Boolean getIsDigital() {
    return isDigital;
  }

  public void setIsDigital(Boolean isDigital) {
    this.isDigital = isDigital;
  }


  public BillbeeInterfacesBillbeeAPIModelSoldProduct oldId(String oldId) {
    this.oldId = oldId;
    return this;
  }

  /**
   * This is for migration scenarios when the internal id of a product changes  I.E. Etsy when switching to the new inventory management, the ids for variants will change.
   * @return oldId
   */
  @javax.annotation.Nullable
  public String getOldId() {
    return oldId;
  }

  public void setOldId(String oldId) {
    this.oldId = oldId;
  }


  public BillbeeInterfacesBillbeeAPIModelSoldProduct platformData(String platformData) {
    this.platformData = platformData;
    return this;
  }

  /**
   * Optional platform specific Data as serialized JSON Object for the product
   * @return platformData
   */
  @javax.annotation.Nullable
  public String getPlatformData() {
    return platformData;
  }

  public void setPlatformData(String platformData) {
    this.platformData = platformData;
  }


  public BillbeeInterfacesBillbeeAPIModelSoldProduct SKU(String SKU) {
    this.SKU = SKU;
    return this;
  }

  /**
   * The SKU of this product
   * @return SKU
   */
  @javax.annotation.Nullable
  public String getSKU() {
    return SKU;
  }

  public void setSKU(String SKU) {
    this.SKU = SKU;
  }


  /**
   * The SKU of this product or the id if the SKU is empty
   * @return skuOrId
   */
  @javax.annotation.Nullable
  public String getSkuOrId() {
    return skuOrId;
  }



  public BillbeeInterfacesBillbeeAPIModelSoldProduct taRICCode(String taRICCode) {
    this.taRICCode = taRICCode;
    return this;
  }

  /**
   * The TARIC code
   * @return taRICCode
   */
  @javax.annotation.Nullable
  public String getTaRICCode() {
    return taRICCode;
  }

  public void setTaRICCode(String taRICCode) {
    this.taRICCode = taRICCode;
  }


  public BillbeeInterfacesBillbeeAPIModelSoldProduct title(String title) {
    this.title = title;
    return this;
  }

  /**
   * The name of this product
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public BillbeeInterfacesBillbeeAPIModelSoldProduct type(Integer type) {
    this.type = type;
    return this;
  }

  /**
   * Indicates whether the article is 1 &#x3D; normal or 2 &#x3D; BOM
   * @return type
   */
  @javax.annotation.Nullable
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }


  public BillbeeInterfacesBillbeeAPIModelSoldProduct weight(Integer weight) {
    this.weight = weight;
    return this;
  }

  /**
   * Weight of one item in gram
   * @return weight
   */
  @javax.annotation.Nullable
  public Integer getWeight() {
    return weight;
  }

  public void setWeight(Integer weight) {
    this.weight = weight;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillbeeInterfacesBillbeeAPIModelSoldProduct billbeeInterfacesBillbeeAPIModelSoldProduct = (BillbeeInterfacesBillbeeAPIModelSoldProduct) o;
    return Objects.equals(this.billbeeId, billbeeInterfacesBillbeeAPIModelSoldProduct.billbeeId) &&
        Objects.equals(this.countryOfOrigin, billbeeInterfacesBillbeeAPIModelSoldProduct.countryOfOrigin) &&
        Objects.equals(this.EAN, billbeeInterfacesBillbeeAPIModelSoldProduct.EAN) &&
        Objects.equals(this.id, billbeeInterfacesBillbeeAPIModelSoldProduct.id) &&
        Objects.equals(this.images, billbeeInterfacesBillbeeAPIModelSoldProduct.images) &&
        Objects.equals(this.isDigital, billbeeInterfacesBillbeeAPIModelSoldProduct.isDigital) &&
        Objects.equals(this.oldId, billbeeInterfacesBillbeeAPIModelSoldProduct.oldId) &&
        Objects.equals(this.platformData, billbeeInterfacesBillbeeAPIModelSoldProduct.platformData) &&
        Objects.equals(this.SKU, billbeeInterfacesBillbeeAPIModelSoldProduct.SKU) &&
        Objects.equals(this.skuOrId, billbeeInterfacesBillbeeAPIModelSoldProduct.skuOrId) &&
        Objects.equals(this.taRICCode, billbeeInterfacesBillbeeAPIModelSoldProduct.taRICCode) &&
        Objects.equals(this.title, billbeeInterfacesBillbeeAPIModelSoldProduct.title) &&
        Objects.equals(this.type, billbeeInterfacesBillbeeAPIModelSoldProduct.type) &&
        Objects.equals(this.weight, billbeeInterfacesBillbeeAPIModelSoldProduct.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billbeeId, countryOfOrigin, EAN, id, images, isDigital, oldId, platformData, SKU, skuOrId, taRICCode, title, type, weight);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillbeeInterfacesBillbeeAPIModelSoldProduct {\n");
    sb.append("    billbeeId: ").append(toIndentedString(billbeeId)).append("\n");
    sb.append("    countryOfOrigin: ").append(toIndentedString(countryOfOrigin)).append("\n");
    sb.append("    EAN: ").append(toIndentedString(EAN)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    isDigital: ").append(toIndentedString(isDigital)).append("\n");
    sb.append("    oldId: ").append(toIndentedString(oldId)).append("\n");
    sb.append("    platformData: ").append(toIndentedString(platformData)).append("\n");
    sb.append("    SKU: ").append(toIndentedString(SKU)).append("\n");
    sb.append("    skuOrId: ").append(toIndentedString(skuOrId)).append("\n");
    sb.append("    taRICCode: ").append(toIndentedString(taRICCode)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BillbeeId");
    openapiFields.add("CountryOfOrigin");
    openapiFields.add("EAN");
    openapiFields.add("Id");
    openapiFields.add("Images");
    openapiFields.add("IsDigital");
    openapiFields.add("OldId");
    openapiFields.add("PlatformData");
    openapiFields.add("SKU");
    openapiFields.add("SkuOrId");
    openapiFields.add("TARICCode");
    openapiFields.add("Title");
    openapiFields.add("Type");
    openapiFields.add("Weight");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BillbeeInterfacesBillbeeAPIModelSoldProduct
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BillbeeInterfacesBillbeeAPIModelSoldProduct.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BillbeeInterfacesBillbeeAPIModelSoldProduct is not found in the empty JSON string", BillbeeInterfacesBillbeeAPIModelSoldProduct.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BillbeeInterfacesBillbeeAPIModelSoldProduct.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BillbeeInterfacesBillbeeAPIModelSoldProduct` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("CountryOfOrigin") != null && !jsonObj.get("CountryOfOrigin").isJsonNull()) && !jsonObj.get("CountryOfOrigin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CountryOfOrigin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CountryOfOrigin").toString()));
      }
      if ((jsonObj.get("EAN") != null && !jsonObj.get("EAN").isJsonNull()) && !jsonObj.get("EAN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EAN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EAN").toString()));
      }
      if ((jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      if (jsonObj.get("Images") != null && !jsonObj.get("Images").isJsonNull()) {
        JsonArray jsonArrayimages = jsonObj.getAsJsonArray("Images");
        if (jsonArrayimages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Images").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Images` to be an array in the JSON string but got `%s`", jsonObj.get("Images").toString()));
          }

          // validate the optional field `Images` (array)
          for (int i = 0; i < jsonArrayimages.size(); i++) {
            BillbeeInterfacesBillbeeAPIModelProductImage.validateJsonElement(jsonArrayimages.get(i));
          };
        }
      }
      if ((jsonObj.get("OldId") != null && !jsonObj.get("OldId").isJsonNull()) && !jsonObj.get("OldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OldId").toString()));
      }
      if ((jsonObj.get("PlatformData") != null && !jsonObj.get("PlatformData").isJsonNull()) && !jsonObj.get("PlatformData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PlatformData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PlatformData").toString()));
      }
      if ((jsonObj.get("SKU") != null && !jsonObj.get("SKU").isJsonNull()) && !jsonObj.get("SKU").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SKU` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SKU").toString()));
      }
      if ((jsonObj.get("SkuOrId") != null && !jsonObj.get("SkuOrId").isJsonNull()) && !jsonObj.get("SkuOrId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SkuOrId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SkuOrId").toString()));
      }
      if ((jsonObj.get("TARICCode") != null && !jsonObj.get("TARICCode").isJsonNull()) && !jsonObj.get("TARICCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TARICCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TARICCode").toString()));
      }
      if ((jsonObj.get("Title") != null && !jsonObj.get("Title").isJsonNull()) && !jsonObj.get("Title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BillbeeInterfacesBillbeeAPIModelSoldProduct.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BillbeeInterfacesBillbeeAPIModelSoldProduct' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BillbeeInterfacesBillbeeAPIModelSoldProduct> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BillbeeInterfacesBillbeeAPIModelSoldProduct.class));

       return (TypeAdapter<T>) new TypeAdapter<BillbeeInterfacesBillbeeAPIModelSoldProduct>() {
           @Override
           public void write(JsonWriter out, BillbeeInterfacesBillbeeAPIModelSoldProduct value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BillbeeInterfacesBillbeeAPIModelSoldProduct read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BillbeeInterfacesBillbeeAPIModelSoldProduct given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BillbeeInterfacesBillbeeAPIModelSoldProduct
   * @throws IOException if the JSON string is invalid with respect to BillbeeInterfacesBillbeeAPIModelSoldProduct
   */
  public static BillbeeInterfacesBillbeeAPIModelSoldProduct fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BillbeeInterfacesBillbeeAPIModelSoldProduct.class);
  }

  /**
   * Convert an instance of BillbeeInterfacesBillbeeAPIModelSoldProduct to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

