/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelOrderItemAttribute;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelSoldProduct;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BillbeeInterfacesBillbeeAPIModelOrderItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:20.866639-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BillbeeInterfacesBillbeeAPIModelOrderItem {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "Attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<BillbeeInterfacesBillbeeAPIModelOrderItemAttribute> attributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_BILLBEE_ID = "BillbeeId";
  @SerializedName(SERIALIZED_NAME_BILLBEE_ID)
  private Long billbeeId;

  public static final String SERIALIZED_NAME_DISCOUNT = "Discount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT)
  private Double discount;

  public static final String SERIALIZED_NAME_DONT_ADJUST_STOCK = "DontAdjustStock";
  @SerializedName(SERIALIZED_NAME_DONT_ADJUST_STOCK)
  private Boolean dontAdjustStock;

  public static final String SERIALIZED_NAME_GET_PRICE_FROM_ARTICLE_IF_ANY = "GetPriceFromArticleIfAny";
  @SerializedName(SERIALIZED_NAME_GET_PRICE_FROM_ARTICLE_IF_ANY)
  private Boolean getPriceFromArticleIfAny;

  public static final String SERIALIZED_NAME_INVOICE_S_K_U = "InvoiceSKU";
  @SerializedName(SERIALIZED_NAME_INVOICE_S_K_U)
  private String invoiceSKU;

  public static final String SERIALIZED_NAME_IS_COUPON = "IsCoupon";
  @SerializedName(SERIALIZED_NAME_IS_COUPON)
  private Boolean isCoupon;

  public static final String SERIALIZED_NAME_PRODUCT = "Product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private BillbeeInterfacesBillbeeAPIModelSoldProduct product;

  public static final String SERIALIZED_NAME_QUANTITY = "Quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Double quantity;

  public static final String SERIALIZED_NAME_SERIAL_NUMBER = "SerialNumber";
  @SerializedName(SERIALIZED_NAME_SERIAL_NUMBER)
  private String serialNumber;

  public static final String SERIALIZED_NAME_SHIPPING_PROFILE_ID = "ShippingProfileId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROFILE_ID)
  private String shippingProfileId;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "TaxAmount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  private Double taxAmount;

  public static final String SERIALIZED_NAME_TAX_INDEX = "TaxIndex";
  @SerializedName(SERIALIZED_NAME_TAX_INDEX)
  private Integer taxIndex;

  public static final String SERIALIZED_NAME_TOTAL_PRICE = "TotalPrice";
  @SerializedName(SERIALIZED_NAME_TOTAL_PRICE)
  private Double totalPrice;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "TransactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_UNREBATED_TOTAL_PRICE = "UnrebatedTotalPrice";
  @SerializedName(SERIALIZED_NAME_UNREBATED_TOTAL_PRICE)
  private Double unrebatedTotalPrice;

  public BillbeeInterfacesBillbeeAPIModelOrderItem() {
  }

  public BillbeeInterfacesBillbeeAPIModelOrderItem attributes(List<BillbeeInterfacesBillbeeAPIModelOrderItemAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public BillbeeInterfacesBillbeeAPIModelOrderItem addAttributesItem(BillbeeInterfacesBillbeeAPIModelOrderItemAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

  /**
   * A list of product attributes for this position
   * @return attributes
   */
  @javax.annotation.Nullable
  public List<BillbeeInterfacesBillbeeAPIModelOrderItemAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<BillbeeInterfacesBillbeeAPIModelOrderItemAttribute> attributes) {
    this.attributes = attributes;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem billbeeId(Long billbeeId) {
    this.billbeeId = billbeeId;
    return this;
  }

  /**
   * The billbee id of this item
   * @return billbeeId
   */
  @javax.annotation.Nullable
  public Long getBillbeeId() {
    return billbeeId;
  }

  public void setBillbeeId(Long billbeeId) {
    this.billbeeId = billbeeId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem discount(Double discount) {
    this.discount = discount;
    return this;
  }

  /**
   * Sets the discount in percent
   * @return discount
   */
  @javax.annotation.Nullable
  public Double getDiscount() {
    return discount;
  }

  public void setDiscount(Double discount) {
    this.discount = discount;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem dontAdjustStock(Boolean dontAdjustStock) {
    this.dontAdjustStock = dontAdjustStock;
    return this;
  }

  /**
   * If true, the import of this order won&#39;t adjust the stock level at billbee.
   * @return dontAdjustStock
   */
  @javax.annotation.Nullable
  public Boolean getDontAdjustStock() {
    return dontAdjustStock;
  }

  public void setDontAdjustStock(Boolean dontAdjustStock) {
    this.dontAdjustStock = dontAdjustStock;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem getPriceFromArticleIfAny(Boolean getPriceFromArticleIfAny) {
    this.getPriceFromArticleIfAny = getPriceFromArticleIfAny;
    return this;
  }

  /**
   * If true, the price will be overwritten by the known article price in billbee if available
   * @return getPriceFromArticleIfAny
   */
  @javax.annotation.Nullable
  public Boolean getGetPriceFromArticleIfAny() {
    return getPriceFromArticleIfAny;
  }

  public void setGetPriceFromArticleIfAny(Boolean getPriceFromArticleIfAny) {
    this.getPriceFromArticleIfAny = getPriceFromArticleIfAny;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem invoiceSKU(String invoiceSKU) {
    this.invoiceSKU = invoiceSKU;
    return this;
  }

  /**
   * Contains the SKU from OrderDetail (if available) or from Product
   * @return invoiceSKU
   */
  @javax.annotation.Nullable
  public String getInvoiceSKU() {
    return invoiceSKU;
  }

  public void setInvoiceSKU(String invoiceSKU) {
    this.invoiceSKU = invoiceSKU;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem isCoupon(Boolean isCoupon) {
    this.isCoupon = isCoupon;
    return this;
  }

  /**
   * Determines if it is a coupon, which is interpreted as tax-free payment
   * @return isCoupon
   */
  @javax.annotation.Nullable
  public Boolean getIsCoupon() {
    return isCoupon;
  }

  public void setIsCoupon(Boolean isCoupon) {
    this.isCoupon = isCoupon;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem product(BillbeeInterfacesBillbeeAPIModelSoldProduct product) {
    this.product = product;
    return this;
  }

  /**
   * Get product
   * @return product
   */
  @javax.annotation.Nullable
  public BillbeeInterfacesBillbeeAPIModelSoldProduct getProduct() {
    return product;
  }

  public void setProduct(BillbeeInterfacesBillbeeAPIModelSoldProduct product) {
    this.product = product;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * The sold quantity
   * @return quantity
   */
  @javax.annotation.Nullable
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

  /**
   * Contains the used serial number
   * @return serialNumber
   */
  @javax.annotation.Nullable
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem shippingProfileId(String shippingProfileId) {
    this.shippingProfileId = shippingProfileId;
    return this;
  }

  /**
   * Determines if it is a coupon, which is interpreted as tax-free payment
   * @return shippingProfileId
   */
  @javax.annotation.Nullable
  public String getShippingProfileId() {
    return shippingProfileId;
  }

  public void setShippingProfileId(String shippingProfileId) {
    this.shippingProfileId = shippingProfileId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem taxAmount(Double taxAmount) {
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * The tax amount in the total price
   * @return taxAmount
   */
  @javax.annotation.Nullable
  public Double getTaxAmount() {
    return taxAmount;
  }

  public void setTaxAmount(Double taxAmount) {
    this.taxAmount = taxAmount;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem taxIndex(Integer taxIndex) {
    this.taxIndex = taxIndex;
    return this;
  }

  /**
   * The tax index.
   * @return taxIndex
   */
  @javax.annotation.Nullable
  public Integer getTaxIndex() {
    return taxIndex;
  }

  public void setTaxIndex(Integer taxIndex) {
    this.taxIndex = taxIndex;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem totalPrice(Double totalPrice) {
    this.totalPrice = totalPrice;
    return this;
  }

  /**
   * The total price (unit price * quantity)
   * @return totalPrice
   */
  @javax.annotation.Nullable
  public Double getTotalPrice() {
    return totalPrice;
  }

  public void setTotalPrice(Double totalPrice) {
    this.totalPrice = totalPrice;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Id of the individual transaction. Only required by Ebay to detect aggregated orders
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderItem unrebatedTotalPrice(Double unrebatedTotalPrice) {
    this.unrebatedTotalPrice = unrebatedTotalPrice;
    return this;
  }

  /**
   * Is just used for the billbee api
   * @return unrebatedTotalPrice
   */
  @javax.annotation.Nullable
  public Double getUnrebatedTotalPrice() {
    return unrebatedTotalPrice;
  }

  public void setUnrebatedTotalPrice(Double unrebatedTotalPrice) {
    this.unrebatedTotalPrice = unrebatedTotalPrice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillbeeInterfacesBillbeeAPIModelOrderItem billbeeInterfacesBillbeeAPIModelOrderItem = (BillbeeInterfacesBillbeeAPIModelOrderItem) o;
    return Objects.equals(this.attributes, billbeeInterfacesBillbeeAPIModelOrderItem.attributes) &&
        Objects.equals(this.billbeeId, billbeeInterfacesBillbeeAPIModelOrderItem.billbeeId) &&
        Objects.equals(this.discount, billbeeInterfacesBillbeeAPIModelOrderItem.discount) &&
        Objects.equals(this.dontAdjustStock, billbeeInterfacesBillbeeAPIModelOrderItem.dontAdjustStock) &&
        Objects.equals(this.getPriceFromArticleIfAny, billbeeInterfacesBillbeeAPIModelOrderItem.getPriceFromArticleIfAny) &&
        Objects.equals(this.invoiceSKU, billbeeInterfacesBillbeeAPIModelOrderItem.invoiceSKU) &&
        Objects.equals(this.isCoupon, billbeeInterfacesBillbeeAPIModelOrderItem.isCoupon) &&
        Objects.equals(this.product, billbeeInterfacesBillbeeAPIModelOrderItem.product) &&
        Objects.equals(this.quantity, billbeeInterfacesBillbeeAPIModelOrderItem.quantity) &&
        Objects.equals(this.serialNumber, billbeeInterfacesBillbeeAPIModelOrderItem.serialNumber) &&
        Objects.equals(this.shippingProfileId, billbeeInterfacesBillbeeAPIModelOrderItem.shippingProfileId) &&
        Objects.equals(this.taxAmount, billbeeInterfacesBillbeeAPIModelOrderItem.taxAmount) &&
        Objects.equals(this.taxIndex, billbeeInterfacesBillbeeAPIModelOrderItem.taxIndex) &&
        Objects.equals(this.totalPrice, billbeeInterfacesBillbeeAPIModelOrderItem.totalPrice) &&
        Objects.equals(this.transactionId, billbeeInterfacesBillbeeAPIModelOrderItem.transactionId) &&
        Objects.equals(this.unrebatedTotalPrice, billbeeInterfacesBillbeeAPIModelOrderItem.unrebatedTotalPrice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, billbeeId, discount, dontAdjustStock, getPriceFromArticleIfAny, invoiceSKU, isCoupon, product, quantity, serialNumber, shippingProfileId, taxAmount, taxIndex, totalPrice, transactionId, unrebatedTotalPrice);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillbeeInterfacesBillbeeAPIModelOrderItem {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    billbeeId: ").append(toIndentedString(billbeeId)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    dontAdjustStock: ").append(toIndentedString(dontAdjustStock)).append("\n");
    sb.append("    getPriceFromArticleIfAny: ").append(toIndentedString(getPriceFromArticleIfAny)).append("\n");
    sb.append("    invoiceSKU: ").append(toIndentedString(invoiceSKU)).append("\n");
    sb.append("    isCoupon: ").append(toIndentedString(isCoupon)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    shippingProfileId: ").append(toIndentedString(shippingProfileId)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    taxIndex: ").append(toIndentedString(taxIndex)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    unrebatedTotalPrice: ").append(toIndentedString(unrebatedTotalPrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Attributes");
    openapiFields.add("BillbeeId");
    openapiFields.add("Discount");
    openapiFields.add("DontAdjustStock");
    openapiFields.add("GetPriceFromArticleIfAny");
    openapiFields.add("InvoiceSKU");
    openapiFields.add("IsCoupon");
    openapiFields.add("Product");
    openapiFields.add("Quantity");
    openapiFields.add("SerialNumber");
    openapiFields.add("ShippingProfileId");
    openapiFields.add("TaxAmount");
    openapiFields.add("TaxIndex");
    openapiFields.add("TotalPrice");
    openapiFields.add("TransactionId");
    openapiFields.add("UnrebatedTotalPrice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BillbeeInterfacesBillbeeAPIModelOrderItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BillbeeInterfacesBillbeeAPIModelOrderItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BillbeeInterfacesBillbeeAPIModelOrderItem is not found in the empty JSON string", BillbeeInterfacesBillbeeAPIModelOrderItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BillbeeInterfacesBillbeeAPIModelOrderItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BillbeeInterfacesBillbeeAPIModelOrderItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("Attributes") != null && !jsonObj.get("Attributes").isJsonNull()) {
        JsonArray jsonArrayattributes = jsonObj.getAsJsonArray("Attributes");
        if (jsonArrayattributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Attributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Attributes` to be an array in the JSON string but got `%s`", jsonObj.get("Attributes").toString()));
          }

          // validate the optional field `Attributes` (array)
          for (int i = 0; i < jsonArrayattributes.size(); i++) {
            BillbeeInterfacesBillbeeAPIModelOrderItemAttribute.validateJsonElement(jsonArrayattributes.get(i));
          };
        }
      }
      if ((jsonObj.get("InvoiceSKU") != null && !jsonObj.get("InvoiceSKU").isJsonNull()) && !jsonObj.get("InvoiceSKU").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InvoiceSKU` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InvoiceSKU").toString()));
      }
      // validate the optional field `Product`
      if (jsonObj.get("Product") != null && !jsonObj.get("Product").isJsonNull()) {
        BillbeeInterfacesBillbeeAPIModelSoldProduct.validateJsonElement(jsonObj.get("Product"));
      }
      if ((jsonObj.get("SerialNumber") != null && !jsonObj.get("SerialNumber").isJsonNull()) && !jsonObj.get("SerialNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SerialNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SerialNumber").toString()));
      }
      if ((jsonObj.get("ShippingProfileId") != null && !jsonObj.get("ShippingProfileId").isJsonNull()) && !jsonObj.get("ShippingProfileId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShippingProfileId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShippingProfileId").toString()));
      }
      if ((jsonObj.get("TransactionId") != null && !jsonObj.get("TransactionId").isJsonNull()) && !jsonObj.get("TransactionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TransactionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TransactionId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BillbeeInterfacesBillbeeAPIModelOrderItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BillbeeInterfacesBillbeeAPIModelOrderItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BillbeeInterfacesBillbeeAPIModelOrderItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BillbeeInterfacesBillbeeAPIModelOrderItem.class));

       return (TypeAdapter<T>) new TypeAdapter<BillbeeInterfacesBillbeeAPIModelOrderItem>() {
           @Override
           public void write(JsonWriter out, BillbeeInterfacesBillbeeAPIModelOrderItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BillbeeInterfacesBillbeeAPIModelOrderItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BillbeeInterfacesBillbeeAPIModelOrderItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BillbeeInterfacesBillbeeAPIModelOrderItem
   * @throws IOException if the JSON string is invalid with respect to BillbeeInterfacesBillbeeAPIModelOrderItem
   */
  public static BillbeeInterfacesBillbeeAPIModelOrderItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BillbeeInterfacesBillbeeAPIModelOrderItem.class);
  }

  /**
   * Convert an instance of BillbeeInterfacesBillbeeAPIModelOrderItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

