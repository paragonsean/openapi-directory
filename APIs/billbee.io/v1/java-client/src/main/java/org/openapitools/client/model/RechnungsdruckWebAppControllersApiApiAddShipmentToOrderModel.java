/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Data of the shipment to be created
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:20.866639-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel {
  public static final String SERIALIZED_NAME_CARRIER_ID = "CarrierId";
  @SerializedName(SERIALIZED_NAME_CARRIER_ID)
  private Integer carrierId;

  public static final String SERIALIZED_NAME_COMMENT = "Comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_ORDER_ID = "OrderId";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_SHIPMENT_TYPE = "ShipmentType";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_TYPE)
  private Integer shipmentType;

  public static final String SERIALIZED_NAME_SHIPPING_ID = "ShippingId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ID)
  private String shippingId;

  public static final String SERIALIZED_NAME_SHIPPING_PROVIDER_ID = "ShippingProviderId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROVIDER_ID)
  private Long shippingProviderId;

  public static final String SERIALIZED_NAME_SHIPPING_PROVIDER_PRODUCT_ID = "ShippingProviderProductId";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROVIDER_PRODUCT_ID)
  private Long shippingProviderProductId;

  public RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel() {
  }

  public RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel carrierId(Integer carrierId) {
    this.carrierId = carrierId;
    return this;
  }

  /**
   * Optional the id of a shipping carrier that should be assigend to the shipment  Will override the carrier from the shipment product.  Please use the integer value from this Enumeration:  {Billbee.Interfaces.Shipping.Enums.ShippingCarrier}
   * @return carrierId
   */
  @javax.annotation.Nullable
  public Integer getCarrierId() {
    return carrierId;
  }

  public void setCarrierId(Integer carrierId) {
    this.carrierId = carrierId;
  }


  public RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Optional a text stored with the shipment
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Optional a differing order number of the shipment if available
   * @return orderId
   */
  @javax.annotation.Nullable
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel shipmentType(Integer shipmentType) {
    this.shipmentType = shipmentType;
    return this;
  }

  /**
   * 0 if Shipment, 1 if Retoure  {Billbee.Interfaces.Shipping.Enums.ShipmentTypeEnum}
   * @return shipmentType
   */
  @javax.annotation.Nullable
  public Integer getShipmentType() {
    return shipmentType;
  }

  public void setShipmentType(Integer shipmentType) {
    this.shipmentType = shipmentType;
  }


  public RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel shippingId(String shippingId) {
    this.shippingId = shippingId;
    return this;
  }

  /**
   * The id of the shipment (Sendungsnummer/trackingid)
   * @return shippingId
   */
  @javax.annotation.Nullable
  public String getShippingId() {
    return shippingId;
  }

  public void setShippingId(String shippingId) {
    this.shippingId = shippingId;
  }


  public RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel shippingProviderId(Long shippingProviderId) {
    this.shippingProviderId = shippingProviderId;
    return this;
  }

  /**
   * Optional the id of a shipping provider existing in the billbee account that should be assigned to the shipment
   * @return shippingProviderId
   */
  @javax.annotation.Nullable
  public Long getShippingProviderId() {
    return shippingProviderId;
  }

  public void setShippingProviderId(Long shippingProviderId) {
    this.shippingProviderId = shippingProviderId;
  }


  public RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel shippingProviderProductId(Long shippingProviderProductId) {
    this.shippingProviderProductId = shippingProviderProductId;
    return this;
  }

  /**
   * Optional the id of a shipping provider product that should be assigend to the shipment
   * @return shippingProviderProductId
   */
  @javax.annotation.Nullable
  public Long getShippingProviderProductId() {
    return shippingProviderProductId;
  }

  public void setShippingProviderProductId(Long shippingProviderProductId) {
    this.shippingProviderProductId = shippingProviderProductId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel rechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel = (RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel) o;
    return Objects.equals(this.carrierId, rechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.carrierId) &&
        Objects.equals(this.comment, rechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.comment) &&
        Objects.equals(this.orderId, rechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.orderId) &&
        Objects.equals(this.shipmentType, rechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.shipmentType) &&
        Objects.equals(this.shippingId, rechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.shippingId) &&
        Objects.equals(this.shippingProviderId, rechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.shippingProviderId) &&
        Objects.equals(this.shippingProviderProductId, rechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.shippingProviderProductId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(carrierId, comment, orderId, shipmentType, shippingId, shippingProviderId, shippingProviderProductId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel {\n");
    sb.append("    carrierId: ").append(toIndentedString(carrierId)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    shipmentType: ").append(toIndentedString(shipmentType)).append("\n");
    sb.append("    shippingId: ").append(toIndentedString(shippingId)).append("\n");
    sb.append("    shippingProviderId: ").append(toIndentedString(shippingProviderId)).append("\n");
    sb.append("    shippingProviderProductId: ").append(toIndentedString(shippingProviderProductId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CarrierId");
    openapiFields.add("Comment");
    openapiFields.add("OrderId");
    openapiFields.add("ShipmentType");
    openapiFields.add("ShippingId");
    openapiFields.add("ShippingProviderId");
    openapiFields.add("ShippingProviderProductId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel is not found in the empty JSON string", RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Comment") != null && !jsonObj.get("Comment").isJsonNull()) && !jsonObj.get("Comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Comment").toString()));
      }
      if ((jsonObj.get("OrderId") != null && !jsonObj.get("OrderId").isJsonNull()) && !jsonObj.get("OrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OrderId").toString()));
      }
      if ((jsonObj.get("ShippingId") != null && !jsonObj.get("ShippingId").isJsonNull()) && !jsonObj.get("ShippingId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShippingId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShippingId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.class));

       return (TypeAdapter<T>) new TypeAdapter<RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel>() {
           @Override
           public void write(JsonWriter out, RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel
   * @throws IOException if the JSON string is invalid with respect to RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel
   */
  public static RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.class);
  }

  /**
   * Convert an instance of RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

