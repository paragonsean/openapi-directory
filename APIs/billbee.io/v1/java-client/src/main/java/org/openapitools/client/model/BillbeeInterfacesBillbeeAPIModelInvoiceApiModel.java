/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelAdditionalFeeApiModel;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel;
import org.openapitools.client.model.BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BillbeeInterfacesBillbeeAPIModelInvoiceApiModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:20.866639-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BillbeeInterfacesBillbeeAPIModelInvoiceApiModel {
  public static final String SERIALIZED_NAME_ADDITIONAL_FEES = "AdditionalFees";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_FEES)
  private List<BillbeeInterfacesBillbeeAPIModelAdditionalFeeApiModel> additionalFees = new ArrayList<>();

  public static final String SERIALIZED_NAME_BILLBEE_ID = "BillbeeId";
  @SerializedName(SERIALIZED_NAME_BILLBEE_ID)
  private Long billbeeId;

  public static final String SERIALIZED_NAME_COMPANY = "Company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private String company;

  public static final String SERIALIZED_NAME_CURRENCY = "Currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_CUSTOMER_NUMBER = "CustomerNumber";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NUMBER)
  private Integer customerNumber;

  public static final String SERIALIZED_NAME_CUSTOMER_VAT_ID = "CustomerVatId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_VAT_ID)
  private String customerVatId;

  public static final String SERIALIZED_NAME_DEBTOR_NUMBER = "DebtorNumber";
  @SerializedName(SERIALIZED_NAME_DEBTOR_NUMBER)
  private Integer debtorNumber;

  public static final String SERIALIZED_NAME_EMAIL = "Email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "FirstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_INVOICE_DATE = "InvoiceDate";
  @SerializedName(SERIALIZED_NAME_INVOICE_DATE)
  private OffsetDateTime invoiceDate;

  public static final String SERIALIZED_NAME_INVOICE_NUMBER = "InvoiceNumber";
  @SerializedName(SERIALIZED_NAME_INVOICE_NUMBER)
  private String invoiceNumber;

  public static final String SERIALIZED_NAME_LAST_NAME = "LastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_MERCHANT_VAT_ID = "MerchantVatId";
  @SerializedName(SERIALIZED_NAME_MERCHANT_VAT_ID)
  private String merchantVatId;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "OrderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private String orderNumber;

  public static final String SERIALIZED_NAME_PAY_DATE = "PayDate";
  @SerializedName(SERIALIZED_NAME_PAY_DATE)
  private OffsetDateTime payDate;

  public static final String SERIALIZED_NAME_PAYMENT_TYPE_ID = "PaymentTypeId";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TYPE_ID)
  private Integer paymentTypeId;

  public static final String SERIALIZED_NAME_POSITIONS = "Positions";
  @SerializedName(SERIALIZED_NAME_POSITIONS)
  private List<BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel> positions = new ArrayList<>();

  public static final String SERIALIZED_NAME_SALUTATION = "Salutation";
  @SerializedName(SERIALIZED_NAME_SALUTATION)
  private String salutation;

  public static final String SERIALIZED_NAME_SHIPPING_COUNTRY = "ShippingCountry";
  @SerializedName(SERIALIZED_NAME_SHIPPING_COUNTRY)
  private String shippingCountry;

  public static final String SERIALIZED_NAME_SHOP_NAME = "ShopName";
  @SerializedName(SERIALIZED_NAME_SHOP_NAME)
  private String shopName;

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_TOTAL_GROSS = "TotalGross";
  @SerializedName(SERIALIZED_NAME_TOTAL_GROSS)
  private Double totalGross;

  public static final String SERIALIZED_NAME_TOTAL_NET = "TotalNet";
  @SerializedName(SERIALIZED_NAME_TOTAL_NET)
  private Double totalNet;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "TransactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_VAT_FLAGS = "VatFlags";
  @SerializedName(SERIALIZED_NAME_VAT_FLAGS)
  private BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags vatFlags;

  /**
   * Gets or Sets vatMode
   */
  @JsonAdapter(VatModeEnum.Adapter.class)
  public enum VatModeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5);

    private Integer value;

    VatModeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VatModeEnum fromValue(Integer value) {
      for (VatModeEnum b : VatModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VatModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VatModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VatModeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return VatModeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      VatModeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_VAT_MODE = "VatMode";
  @SerializedName(SERIALIZED_NAME_VAT_MODE)
  private VatModeEnum vatMode;

  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel() {
  }

  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel additionalFees(List<BillbeeInterfacesBillbeeAPIModelAdditionalFeeApiModel> additionalFees) {
    this.additionalFees = additionalFees;
    return this;
  }

  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel addAdditionalFeesItem(BillbeeInterfacesBillbeeAPIModelAdditionalFeeApiModel additionalFeesItem) {
    if (this.additionalFees == null) {
      this.additionalFees = new ArrayList<>();
    }
    this.additionalFees.add(additionalFeesItem);
    return this;
  }

  /**
   * Get additionalFees
   * @return additionalFees
   */
  @javax.annotation.Nullable
  public List<BillbeeInterfacesBillbeeAPIModelAdditionalFeeApiModel> getAdditionalFees() {
    return additionalFees;
  }

  public void setAdditionalFees(List<BillbeeInterfacesBillbeeAPIModelAdditionalFeeApiModel> additionalFees) {
    this.additionalFees = additionalFees;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel billbeeId(Long billbeeId) {
    this.billbeeId = billbeeId;
    return this;
  }

  /**
   * Get billbeeId
   * @return billbeeId
   */
  @javax.annotation.Nullable
  public Long getBillbeeId() {
    return billbeeId;
  }

  public void setBillbeeId(Long billbeeId) {
    this.billbeeId = billbeeId;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel company(String company) {
    this.company = company;
    return this;
  }

  /**
   * Get company
   * @return company
   */
  @javax.annotation.Nullable
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel customerNumber(Integer customerNumber) {
    this.customerNumber = customerNumber;
    return this;
  }

  /**
   * Get customerNumber
   * @return customerNumber
   */
  @javax.annotation.Nullable
  public Integer getCustomerNumber() {
    return customerNumber;
  }

  public void setCustomerNumber(Integer customerNumber) {
    this.customerNumber = customerNumber;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel customerVatId(String customerVatId) {
    this.customerVatId = customerVatId;
    return this;
  }

  /**
   * The vat-id, that was given by the customer to fulfill this order
   * @return customerVatId
   */
  @javax.annotation.Nullable
  public String getCustomerVatId() {
    return customerVatId;
  }

  public void setCustomerVatId(String customerVatId) {
    this.customerVatId = customerVatId;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel debtorNumber(Integer debtorNumber) {
    this.debtorNumber = debtorNumber;
    return this;
  }

  /**
   * Get debtorNumber
   * @return debtorNumber
   */
  @javax.annotation.Nullable
  public Integer getDebtorNumber() {
    return debtorNumber;
  }

  public void setDebtorNumber(Integer debtorNumber) {
    this.debtorNumber = debtorNumber;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel invoiceDate(OffsetDateTime invoiceDate) {
    this.invoiceDate = invoiceDate;
    return this;
  }

  /**
   * Get invoiceDate
   * @return invoiceDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getInvoiceDate() {
    return invoiceDate;
  }

  public void setInvoiceDate(OffsetDateTime invoiceDate) {
    this.invoiceDate = invoiceDate;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel invoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
    return this;
  }

  /**
   * Get invoiceNumber
   * @return invoiceNumber
   */
  @javax.annotation.Nullable
  public String getInvoiceNumber() {
    return invoiceNumber;
  }

  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel merchantVatId(String merchantVatId) {
    this.merchantVatId = merchantVatId;
    return this;
  }

  /**
   * The vat-id, that should be displayed on the invoice and other order documents
   * @return merchantVatId
   */
  @javax.annotation.Nullable
  public String getMerchantVatId() {
    return merchantVatId;
  }

  public void setMerchantVatId(String merchantVatId) {
    this.merchantVatId = merchantVatId;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel orderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
    return this;
  }

  /**
   * Get orderNumber
   * @return orderNumber
   */
  @javax.annotation.Nullable
  public String getOrderNumber() {
    return orderNumber;
  }

  public void setOrderNumber(String orderNumber) {
    this.orderNumber = orderNumber;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel payDate(OffsetDateTime payDate) {
    this.payDate = payDate;
    return this;
  }

  /**
   * Get payDate
   * @return payDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPayDate() {
    return payDate;
  }

  public void setPayDate(OffsetDateTime payDate) {
    this.payDate = payDate;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel paymentTypeId(Integer paymentTypeId) {
    this.paymentTypeId = paymentTypeId;
    return this;
  }

  /**
   * Get paymentTypeId
   * @return paymentTypeId
   */
  @javax.annotation.Nullable
  public Integer getPaymentTypeId() {
    return paymentTypeId;
  }

  public void setPaymentTypeId(Integer paymentTypeId) {
    this.paymentTypeId = paymentTypeId;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel positions(List<BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel> positions) {
    this.positions = positions;
    return this;
  }

  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel addPositionsItem(BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel positionsItem) {
    if (this.positions == null) {
      this.positions = new ArrayList<>();
    }
    this.positions.add(positionsItem);
    return this;
  }

  /**
   * Get positions
   * @return positions
   */
  @javax.annotation.Nullable
  public List<BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel> getPositions() {
    return positions;
  }

  public void setPositions(List<BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel> positions) {
    this.positions = positions;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel salutation(String salutation) {
    this.salutation = salutation;
    return this;
  }

  /**
   * Get salutation
   * @return salutation
   */
  @javax.annotation.Nullable
  public String getSalutation() {
    return salutation;
  }

  public void setSalutation(String salutation) {
    this.salutation = salutation;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel shippingCountry(String shippingCountry) {
    this.shippingCountry = shippingCountry;
    return this;
  }

  /**
   * two letters for CountryCode Identification
   * @return shippingCountry
   */
  @javax.annotation.Nullable
  public String getShippingCountry() {
    return shippingCountry;
  }

  public void setShippingCountry(String shippingCountry) {
    this.shippingCountry = shippingCountry;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel shopName(String shopName) {
    this.shopName = shopName;
    return this;
  }

  /**
   * Get shopName
   * @return shopName
   */
  @javax.annotation.Nullable
  public String getShopName() {
    return shopName;
  }

  public void setShopName(String shopName) {
    this.shopName = shopName;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel totalGross(Double totalGross) {
    this.totalGross = totalGross;
    return this;
  }

  /**
   * Get totalGross
   * @return totalGross
   */
  @javax.annotation.Nullable
  public Double getTotalGross() {
    return totalGross;
  }

  public void setTotalGross(Double totalGross) {
    this.totalGross = totalGross;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel totalNet(Double totalNet) {
    this.totalNet = totalNet;
    return this;
  }

  /**
   * Get totalNet
   * @return totalNet
   */
  @javax.annotation.Nullable
  public Double getTotalNet() {
    return totalNet;
  }

  public void setTotalNet(Double totalNet) {
    this.totalNet = totalNet;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel vatFlags(BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags vatFlags) {
    this.vatFlags = vatFlags;
    return this;
  }

  /**
   * Get vatFlags
   * @return vatFlags
   */
  @javax.annotation.Nullable
  public BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags getVatFlags() {
    return vatFlags;
  }

  public void setVatFlags(BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags vatFlags) {
    this.vatFlags = vatFlags;
  }


  public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel vatMode(VatModeEnum vatMode) {
    this.vatMode = vatMode;
    return this;
  }

  /**
   * Get vatMode
   * @return vatMode
   */
  @javax.annotation.Nullable
  public VatModeEnum getVatMode() {
    return vatMode;
  }

  public void setVatMode(VatModeEnum vatMode) {
    this.vatMode = vatMode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillbeeInterfacesBillbeeAPIModelInvoiceApiModel billbeeInterfacesBillbeeAPIModelInvoiceApiModel = (BillbeeInterfacesBillbeeAPIModelInvoiceApiModel) o;
    return Objects.equals(this.additionalFees, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.additionalFees) &&
        Objects.equals(this.billbeeId, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.billbeeId) &&
        Objects.equals(this.company, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.company) &&
        Objects.equals(this.currency, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.currency) &&
        Objects.equals(this.customerNumber, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.customerNumber) &&
        Objects.equals(this.customerVatId, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.customerVatId) &&
        Objects.equals(this.debtorNumber, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.debtorNumber) &&
        Objects.equals(this.email, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.email) &&
        Objects.equals(this.firstName, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.firstName) &&
        Objects.equals(this.invoiceDate, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.invoiceDate) &&
        Objects.equals(this.invoiceNumber, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.invoiceNumber) &&
        Objects.equals(this.lastName, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.lastName) &&
        Objects.equals(this.merchantVatId, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.merchantVatId) &&
        Objects.equals(this.orderNumber, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.orderNumber) &&
        Objects.equals(this.payDate, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.payDate) &&
        Objects.equals(this.paymentTypeId, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.paymentTypeId) &&
        Objects.equals(this.positions, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.positions) &&
        Objects.equals(this.salutation, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.salutation) &&
        Objects.equals(this.shippingCountry, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.shippingCountry) &&
        Objects.equals(this.shopName, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.shopName) &&
        Objects.equals(this.title, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.title) &&
        Objects.equals(this.totalGross, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.totalGross) &&
        Objects.equals(this.totalNet, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.totalNet) &&
        Objects.equals(this.transactionId, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.transactionId) &&
        Objects.equals(this.type, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.type) &&
        Objects.equals(this.vatFlags, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.vatFlags) &&
        Objects.equals(this.vatMode, billbeeInterfacesBillbeeAPIModelInvoiceApiModel.vatMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalFees, billbeeId, company, currency, customerNumber, customerVatId, debtorNumber, email, firstName, invoiceDate, invoiceNumber, lastName, merchantVatId, orderNumber, payDate, paymentTypeId, positions, salutation, shippingCountry, shopName, title, totalGross, totalNet, transactionId, type, vatFlags, vatMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillbeeInterfacesBillbeeAPIModelInvoiceApiModel {\n");
    sb.append("    additionalFees: ").append(toIndentedString(additionalFees)).append("\n");
    sb.append("    billbeeId: ").append(toIndentedString(billbeeId)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    customerNumber: ").append(toIndentedString(customerNumber)).append("\n");
    sb.append("    customerVatId: ").append(toIndentedString(customerVatId)).append("\n");
    sb.append("    debtorNumber: ").append(toIndentedString(debtorNumber)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    invoiceDate: ").append(toIndentedString(invoiceDate)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    merchantVatId: ").append(toIndentedString(merchantVatId)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    payDate: ").append(toIndentedString(payDate)).append("\n");
    sb.append("    paymentTypeId: ").append(toIndentedString(paymentTypeId)).append("\n");
    sb.append("    positions: ").append(toIndentedString(positions)).append("\n");
    sb.append("    salutation: ").append(toIndentedString(salutation)).append("\n");
    sb.append("    shippingCountry: ").append(toIndentedString(shippingCountry)).append("\n");
    sb.append("    shopName: ").append(toIndentedString(shopName)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    totalGross: ").append(toIndentedString(totalGross)).append("\n");
    sb.append("    totalNet: ").append(toIndentedString(totalNet)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vatFlags: ").append(toIndentedString(vatFlags)).append("\n");
    sb.append("    vatMode: ").append(toIndentedString(vatMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AdditionalFees");
    openapiFields.add("BillbeeId");
    openapiFields.add("Company");
    openapiFields.add("Currency");
    openapiFields.add("CustomerNumber");
    openapiFields.add("CustomerVatId");
    openapiFields.add("DebtorNumber");
    openapiFields.add("Email");
    openapiFields.add("FirstName");
    openapiFields.add("InvoiceDate");
    openapiFields.add("InvoiceNumber");
    openapiFields.add("LastName");
    openapiFields.add("MerchantVatId");
    openapiFields.add("OrderNumber");
    openapiFields.add("PayDate");
    openapiFields.add("PaymentTypeId");
    openapiFields.add("Positions");
    openapiFields.add("Salutation");
    openapiFields.add("ShippingCountry");
    openapiFields.add("ShopName");
    openapiFields.add("Title");
    openapiFields.add("TotalGross");
    openapiFields.add("TotalNet");
    openapiFields.add("TransactionId");
    openapiFields.add("Type");
    openapiFields.add("VatFlags");
    openapiFields.add("VatMode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BillbeeInterfacesBillbeeAPIModelInvoiceApiModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BillbeeInterfacesBillbeeAPIModelInvoiceApiModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BillbeeInterfacesBillbeeAPIModelInvoiceApiModel is not found in the empty JSON string", BillbeeInterfacesBillbeeAPIModelInvoiceApiModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BillbeeInterfacesBillbeeAPIModelInvoiceApiModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BillbeeInterfacesBillbeeAPIModelInvoiceApiModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("AdditionalFees") != null && !jsonObj.get("AdditionalFees").isJsonNull()) {
        JsonArray jsonArrayadditionalFees = jsonObj.getAsJsonArray("AdditionalFees");
        if (jsonArrayadditionalFees != null) {
          // ensure the json data is an array
          if (!jsonObj.get("AdditionalFees").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `AdditionalFees` to be an array in the JSON string but got `%s`", jsonObj.get("AdditionalFees").toString()));
          }

          // validate the optional field `AdditionalFees` (array)
          for (int i = 0; i < jsonArrayadditionalFees.size(); i++) {
            BillbeeInterfacesBillbeeAPIModelAdditionalFeeApiModel.validateJsonElement(jsonArrayadditionalFees.get(i));
          };
        }
      }
      if ((jsonObj.get("Company") != null && !jsonObj.get("Company").isJsonNull()) && !jsonObj.get("Company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Company").toString()));
      }
      if ((jsonObj.get("Currency") != null && !jsonObj.get("Currency").isJsonNull()) && !jsonObj.get("Currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Currency").toString()));
      }
      if ((jsonObj.get("CustomerVatId") != null && !jsonObj.get("CustomerVatId").isJsonNull()) && !jsonObj.get("CustomerVatId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CustomerVatId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CustomerVatId").toString()));
      }
      if ((jsonObj.get("Email") != null && !jsonObj.get("Email").isJsonNull()) && !jsonObj.get("Email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Email").toString()));
      }
      if ((jsonObj.get("FirstName") != null && !jsonObj.get("FirstName").isJsonNull()) && !jsonObj.get("FirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FirstName").toString()));
      }
      if ((jsonObj.get("InvoiceNumber") != null && !jsonObj.get("InvoiceNumber").isJsonNull()) && !jsonObj.get("InvoiceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InvoiceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InvoiceNumber").toString()));
      }
      if ((jsonObj.get("LastName") != null && !jsonObj.get("LastName").isJsonNull()) && !jsonObj.get("LastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LastName").toString()));
      }
      if ((jsonObj.get("MerchantVatId") != null && !jsonObj.get("MerchantVatId").isJsonNull()) && !jsonObj.get("MerchantVatId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MerchantVatId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MerchantVatId").toString()));
      }
      if ((jsonObj.get("OrderNumber") != null && !jsonObj.get("OrderNumber").isJsonNull()) && !jsonObj.get("OrderNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OrderNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OrderNumber").toString()));
      }
      if (jsonObj.get("Positions") != null && !jsonObj.get("Positions").isJsonNull()) {
        JsonArray jsonArraypositions = jsonObj.getAsJsonArray("Positions");
        if (jsonArraypositions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Positions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Positions` to be an array in the JSON string but got `%s`", jsonObj.get("Positions").toString()));
          }

          // validate the optional field `Positions` (array)
          for (int i = 0; i < jsonArraypositions.size(); i++) {
            BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel.validateJsonElement(jsonArraypositions.get(i));
          };
        }
      }
      if ((jsonObj.get("Salutation") != null && !jsonObj.get("Salutation").isJsonNull()) && !jsonObj.get("Salutation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Salutation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Salutation").toString()));
      }
      if ((jsonObj.get("ShippingCountry") != null && !jsonObj.get("ShippingCountry").isJsonNull()) && !jsonObj.get("ShippingCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShippingCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShippingCountry").toString()));
      }
      if ((jsonObj.get("ShopName") != null && !jsonObj.get("ShopName").isJsonNull()) && !jsonObj.get("ShopName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShopName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShopName").toString()));
      }
      if ((jsonObj.get("Title") != null && !jsonObj.get("Title").isJsonNull()) && !jsonObj.get("Title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Title").toString()));
      }
      if ((jsonObj.get("TransactionId") != null && !jsonObj.get("TransactionId").isJsonNull()) && !jsonObj.get("TransactionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TransactionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TransactionId").toString()));
      }
      if ((jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) && !jsonObj.get("Type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Type").toString()));
      }
      // validate the optional field `VatFlags`
      if (jsonObj.get("VatFlags") != null && !jsonObj.get("VatFlags").isJsonNull()) {
        BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.validateJsonElement(jsonObj.get("VatFlags"));
      }
      // validate the optional field `VatMode`
      if (jsonObj.get("VatMode") != null && !jsonObj.get("VatMode").isJsonNull()) {
        VatModeEnum.validateJsonElement(jsonObj.get("VatMode"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BillbeeInterfacesBillbeeAPIModelInvoiceApiModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BillbeeInterfacesBillbeeAPIModelInvoiceApiModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BillbeeInterfacesBillbeeAPIModelInvoiceApiModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BillbeeInterfacesBillbeeAPIModelInvoiceApiModel.class));

       return (TypeAdapter<T>) new TypeAdapter<BillbeeInterfacesBillbeeAPIModelInvoiceApiModel>() {
           @Override
           public void write(JsonWriter out, BillbeeInterfacesBillbeeAPIModelInvoiceApiModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BillbeeInterfacesBillbeeAPIModelInvoiceApiModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BillbeeInterfacesBillbeeAPIModelInvoiceApiModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BillbeeInterfacesBillbeeAPIModelInvoiceApiModel
   * @throws IOException if the JSON string is invalid with respect to BillbeeInterfacesBillbeeAPIModelInvoiceApiModel
   */
  public static BillbeeInterfacesBillbeeAPIModelInvoiceApiModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BillbeeInterfacesBillbeeAPIModelInvoiceApiModel.class);
  }

  /**
   * Convert an instance of BillbeeInterfacesBillbeeAPIModelInvoiceApiModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

