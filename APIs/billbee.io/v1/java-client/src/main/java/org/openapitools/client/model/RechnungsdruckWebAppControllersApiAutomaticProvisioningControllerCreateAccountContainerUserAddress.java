/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the invoice address of a Billbee user
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:20.866639-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress {
  public static final String SERIALIZED_NAME_ADDRESS1 = "Address1";
  @SerializedName(SERIALIZED_NAME_ADDRESS1)
  private String address1;

  public static final String SERIALIZED_NAME_ADDRESS2 = "Address2";
  @SerializedName(SERIALIZED_NAME_ADDRESS2)
  private String address2;

  public static final String SERIALIZED_NAME_CITY = "City";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COMPANY = "Company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private String company;

  public static final String SERIALIZED_NAME_COUNTRY = "Country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_VAT_ID = "VatId";
  @SerializedName(SERIALIZED_NAME_VAT_ID)
  private String vatId;

  public static final String SERIALIZED_NAME_ZIP = "Zip";
  @SerializedName(SERIALIZED_NAME_ZIP)
  private String zip;

  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress() {
  }

  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress address1(String address1) {
    this.address1 = address1;
    return this;
  }

  /**
   * Get address1
   * @return address1
   */
  @javax.annotation.Nullable
  public String getAddress1() {
    return address1;
  }

  public void setAddress1(String address1) {
    this.address1 = address1;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress address2(String address2) {
    this.address2 = address2;
    return this;
  }

  /**
   * Get address2
   * @return address2
   */
  @javax.annotation.Nullable
  public String getAddress2() {
    return address2;
  }

  public void setAddress2(String address2) {
    this.address2 = address2;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress city(String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress company(String company) {
    this.company = company;
    return this;
  }

  /**
   * Get company
   * @return company
   */
  @javax.annotation.Nullable
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress country(String country) {
    this.country = country;
    return this;
  }

  /**
   * The ISO2 country code of the users country
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress vatId(String vatId) {
    this.vatId = vatId;
    return this;
  }

  /**
   * Get vatId
   * @return vatId
   */
  @javax.annotation.Nullable
  public String getVatId() {
    return vatId;
  }

  public void setVatId(String vatId) {
    this.vatId = vatId;
  }


  public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress zip(String zip) {
    this.zip = zip;
    return this;
  }

  /**
   * Get zip
   * @return zip
   */
  @javax.annotation.Nullable
  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress = (RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress) o;
    return Objects.equals(this.address1, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.address1) &&
        Objects.equals(this.address2, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.address2) &&
        Objects.equals(this.city, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.city) &&
        Objects.equals(this.company, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.company) &&
        Objects.equals(this.country, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.country) &&
        Objects.equals(this.name, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.name) &&
        Objects.equals(this.vatId, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.vatId) &&
        Objects.equals(this.zip, rechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.zip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address1, address2, city, company, country, name, vatId, zip);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress {\n");
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    vatId: ").append(toIndentedString(vatId)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Address1");
    openapiFields.add("Address2");
    openapiFields.add("City");
    openapiFields.add("Company");
    openapiFields.add("Country");
    openapiFields.add("Name");
    openapiFields.add("VatId");
    openapiFields.add("Zip");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress is not found in the empty JSON string", RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Address1") != null && !jsonObj.get("Address1").isJsonNull()) && !jsonObj.get("Address1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Address1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Address1").toString()));
      }
      if ((jsonObj.get("Address2") != null && !jsonObj.get("Address2").isJsonNull()) && !jsonObj.get("Address2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Address2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Address2").toString()));
      }
      if ((jsonObj.get("City") != null && !jsonObj.get("City").isJsonNull()) && !jsonObj.get("City").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `City` to be a primitive type in the JSON string but got `%s`", jsonObj.get("City").toString()));
      }
      if ((jsonObj.get("Company") != null && !jsonObj.get("Company").isJsonNull()) && !jsonObj.get("Company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Company").toString()));
      }
      if ((jsonObj.get("Country") != null && !jsonObj.get("Country").isJsonNull()) && !jsonObj.get("Country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Country").toString()));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("VatId") != null && !jsonObj.get("VatId").isJsonNull()) && !jsonObj.get("VatId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `VatId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("VatId").toString()));
      }
      if ((jsonObj.get("Zip") != null && !jsonObj.get("Zip").isJsonNull()) && !jsonObj.get("Zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Zip").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.class));

       return (TypeAdapter<T>) new TypeAdapter<RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress>() {
           @Override
           public void write(JsonWriter out, RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress
   * @throws IOException if the JSON string is invalid with respect to RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress
   */
  public static RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.class);
  }

  /**
   * Convert an instance of RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

