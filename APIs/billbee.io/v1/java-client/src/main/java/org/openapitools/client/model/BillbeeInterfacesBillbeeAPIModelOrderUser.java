/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BillbeeInterfacesBillbeeAPIModelOrderUser
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:20.866639-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BillbeeInterfacesBillbeeAPIModelOrderUser {
  public static final String SERIALIZED_NAME_BILLBEE_SHOP_ID = "BillbeeShopId";
  @SerializedName(SERIALIZED_NAME_BILLBEE_SHOP_ID)
  private Long billbeeShopId;

  public static final String SERIALIZED_NAME_BILLBEE_SHOP_NAME = "BillbeeShopName";
  @SerializedName(SERIALIZED_NAME_BILLBEE_SHOP_NAME)
  private String billbeeShopName;

  public static final String SERIALIZED_NAME_EMAIL = "Email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "FirstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_FULL_NAME = "FullName";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LAST_NAME = "LastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_NICK = "Nick";
  @SerializedName(SERIALIZED_NAME_NICK)
  private String nick;

  public static final String SERIALIZED_NAME_PLATFORM = "Platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private String platform;

  public BillbeeInterfacesBillbeeAPIModelOrderUser() {
  }

  public BillbeeInterfacesBillbeeAPIModelOrderUser(
     String fullName
  ) {
    this();
    this.fullName = fullName;
  }

  public BillbeeInterfacesBillbeeAPIModelOrderUser billbeeShopId(Long billbeeShopId) {
    this.billbeeShopId = billbeeShopId;
    return this;
  }

  /**
   * The Billbee internal id of the shop connection
   * @return billbeeShopId
   */
  @javax.annotation.Nullable
  public Long getBillbeeShopId() {
    return billbeeShopId;
  }

  public void setBillbeeShopId(Long billbeeShopId) {
    this.billbeeShopId = billbeeShopId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderUser billbeeShopName(String billbeeShopName) {
    this.billbeeShopName = billbeeShopName;
    return this;
  }

  /**
   * The name of shop connection in Billbee
   * @return billbeeShopName
   */
  @javax.annotation.Nullable
  public String getBillbeeShopName() {
    return billbeeShopName;
  }

  public void setBillbeeShopName(String billbeeShopName) {
    this.billbeeShopName = billbeeShopName;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderUser email(String email) {
    this.email = email;
    return this;
  }

  /**
   * The email address of this customer
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderUser firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * The first name of this customer
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  /**
   * The full name (\&quot;firstname lastname\&quot;) of this customer
   * @return fullName
   */
  @javax.annotation.Nullable
  public String getFullName() {
    return fullName;
  }



  public BillbeeInterfacesBillbeeAPIModelOrderUser id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The Billbee internal id of this customer
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderUser lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * The last name of this customer
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderUser nick(String nick) {
    this.nick = nick;
    return this;
  }

  /**
   * The nick name (if available) from the original system
   * @return nick
   */
  @javax.annotation.Nullable
  public String getNick() {
    return nick;
  }

  public void setNick(String nick) {
    this.nick = nick;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderUser platform(String platform) {
    this.platform = platform;
    return this;
  }

  /**
   * The name of the platform from which this customer originated
   * @return platform
   */
  @javax.annotation.Nullable
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillbeeInterfacesBillbeeAPIModelOrderUser billbeeInterfacesBillbeeAPIModelOrderUser = (BillbeeInterfacesBillbeeAPIModelOrderUser) o;
    return Objects.equals(this.billbeeShopId, billbeeInterfacesBillbeeAPIModelOrderUser.billbeeShopId) &&
        Objects.equals(this.billbeeShopName, billbeeInterfacesBillbeeAPIModelOrderUser.billbeeShopName) &&
        Objects.equals(this.email, billbeeInterfacesBillbeeAPIModelOrderUser.email) &&
        Objects.equals(this.firstName, billbeeInterfacesBillbeeAPIModelOrderUser.firstName) &&
        Objects.equals(this.fullName, billbeeInterfacesBillbeeAPIModelOrderUser.fullName) &&
        Objects.equals(this.id, billbeeInterfacesBillbeeAPIModelOrderUser.id) &&
        Objects.equals(this.lastName, billbeeInterfacesBillbeeAPIModelOrderUser.lastName) &&
        Objects.equals(this.nick, billbeeInterfacesBillbeeAPIModelOrderUser.nick) &&
        Objects.equals(this.platform, billbeeInterfacesBillbeeAPIModelOrderUser.platform);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billbeeShopId, billbeeShopName, email, firstName, fullName, id, lastName, nick, platform);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillbeeInterfacesBillbeeAPIModelOrderUser {\n");
    sb.append("    billbeeShopId: ").append(toIndentedString(billbeeShopId)).append("\n");
    sb.append("    billbeeShopName: ").append(toIndentedString(billbeeShopName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    nick: ").append(toIndentedString(nick)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BillbeeShopId");
    openapiFields.add("BillbeeShopName");
    openapiFields.add("Email");
    openapiFields.add("FirstName");
    openapiFields.add("FullName");
    openapiFields.add("Id");
    openapiFields.add("LastName");
    openapiFields.add("Nick");
    openapiFields.add("Platform");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BillbeeInterfacesBillbeeAPIModelOrderUser
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BillbeeInterfacesBillbeeAPIModelOrderUser.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BillbeeInterfacesBillbeeAPIModelOrderUser is not found in the empty JSON string", BillbeeInterfacesBillbeeAPIModelOrderUser.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BillbeeInterfacesBillbeeAPIModelOrderUser.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BillbeeInterfacesBillbeeAPIModelOrderUser` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("BillbeeShopName") != null && !jsonObj.get("BillbeeShopName").isJsonNull()) && !jsonObj.get("BillbeeShopName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BillbeeShopName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BillbeeShopName").toString()));
      }
      if ((jsonObj.get("Email") != null && !jsonObj.get("Email").isJsonNull()) && !jsonObj.get("Email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Email").toString()));
      }
      if ((jsonObj.get("FirstName") != null && !jsonObj.get("FirstName").isJsonNull()) && !jsonObj.get("FirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FirstName").toString()));
      }
      if ((jsonObj.get("FullName") != null && !jsonObj.get("FullName").isJsonNull()) && !jsonObj.get("FullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FullName").toString()));
      }
      if ((jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      if ((jsonObj.get("LastName") != null && !jsonObj.get("LastName").isJsonNull()) && !jsonObj.get("LastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LastName").toString()));
      }
      if ((jsonObj.get("Nick") != null && !jsonObj.get("Nick").isJsonNull()) && !jsonObj.get("Nick").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Nick` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Nick").toString()));
      }
      if ((jsonObj.get("Platform") != null && !jsonObj.get("Platform").isJsonNull()) && !jsonObj.get("Platform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Platform").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BillbeeInterfacesBillbeeAPIModelOrderUser.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BillbeeInterfacesBillbeeAPIModelOrderUser' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BillbeeInterfacesBillbeeAPIModelOrderUser> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BillbeeInterfacesBillbeeAPIModelOrderUser.class));

       return (TypeAdapter<T>) new TypeAdapter<BillbeeInterfacesBillbeeAPIModelOrderUser>() {
           @Override
           public void write(JsonWriter out, BillbeeInterfacesBillbeeAPIModelOrderUser value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BillbeeInterfacesBillbeeAPIModelOrderUser read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BillbeeInterfacesBillbeeAPIModelOrderUser given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BillbeeInterfacesBillbeeAPIModelOrderUser
   * @throws IOException if the JSON string is invalid with respect to BillbeeInterfacesBillbeeAPIModelOrderUser
   */
  public static BillbeeInterfacesBillbeeAPIModelOrderUser fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BillbeeInterfacesBillbeeAPIModelOrderUser.class);
  }

  /**
   * Convert an instance of BillbeeInterfacesBillbeeAPIModelOrderUser to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

