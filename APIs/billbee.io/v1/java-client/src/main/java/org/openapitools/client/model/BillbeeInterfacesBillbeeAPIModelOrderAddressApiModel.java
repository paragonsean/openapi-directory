/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:20.866639-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel {
  public static final String SERIALIZED_NAME_BILLBEE_ID = "BillbeeId";
  @SerializedName(SERIALIZED_NAME_BILLBEE_ID)
  private Long billbeeId;

  public static final String SERIALIZED_NAME_CITY = "City";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COMPANY = "Company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private String company;

  public static final String SERIALIZED_NAME_COUNTRY = "Country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_COUNTRY_I_S_O2 = "CountryISO2";
  @SerializedName(SERIALIZED_NAME_COUNTRY_I_S_O2)
  private String countryISO2;

  public static final String SERIALIZED_NAME_EMAIL = "Email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "FirstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_HOUSE_NUMBER = "HouseNumber";
  @SerializedName(SERIALIZED_NAME_HOUSE_NUMBER)
  private String houseNumber;

  public static final String SERIALIZED_NAME_LAST_NAME = "LastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LINE2 = "Line2";
  @SerializedName(SERIALIZED_NAME_LINE2)
  private String line2;

  public static final String SERIALIZED_NAME_NAME_ADDITION = "NameAddition";
  @SerializedName(SERIALIZED_NAME_NAME_ADDITION)
  private String nameAddition;

  public static final String SERIALIZED_NAME_PHONE = "Phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_STREET = "Street";
  @SerializedName(SERIALIZED_NAME_STREET)
  private String street;

  public static final String SERIALIZED_NAME_ZIP = "Zip";
  @SerializedName(SERIALIZED_NAME_ZIP)
  private String zip;

  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel() {
  }

  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel billbeeId(Long billbeeId) {
    this.billbeeId = billbeeId;
    return this;
  }

  /**
   * Get billbeeId
   * @return billbeeId
   */
  @javax.annotation.Nullable
  public Long getBillbeeId() {
    return billbeeId;
  }

  public void setBillbeeId(Long billbeeId) {
    this.billbeeId = billbeeId;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel city(String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel company(String company) {
    this.company = company;
    return this;
  }

  /**
   * Get company
   * @return company
   */
  @javax.annotation.Nullable
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel country(String country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel countryISO2(String countryISO2) {
    this.countryISO2 = countryISO2;
    return this;
  }

  /**
   * Get countryISO2
   * @return countryISO2
   */
  @javax.annotation.Nullable
  public String getCountryISO2() {
    return countryISO2;
  }

  public void setCountryISO2(String countryISO2) {
    this.countryISO2 = countryISO2;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel houseNumber(String houseNumber) {
    this.houseNumber = houseNumber;
    return this;
  }

  /**
   * Get houseNumber
   * @return houseNumber
   */
  @javax.annotation.Nullable
  public String getHouseNumber() {
    return houseNumber;
  }

  public void setHouseNumber(String houseNumber) {
    this.houseNumber = houseNumber;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel line2(String line2) {
    this.line2 = line2;
    return this;
  }

  /**
   * Get line2
   * @return line2
   */
  @javax.annotation.Nullable
  public String getLine2() {
    return line2;
  }

  public void setLine2(String line2) {
    this.line2 = line2;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel nameAddition(String nameAddition) {
    this.nameAddition = nameAddition;
    return this;
  }

  /**
   * Get nameAddition
   * @return nameAddition
   */
  @javax.annotation.Nullable
  public String getNameAddition() {
    return nameAddition;
  }

  public void setNameAddition(String nameAddition) {
    this.nameAddition = nameAddition;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel street(String street) {
    this.street = street;
    return this;
  }

  /**
   * Get street
   * @return street
   */
  @javax.annotation.Nullable
  public String getStreet() {
    return street;
  }

  public void setStreet(String street) {
    this.street = street;
  }


  public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel zip(String zip) {
    this.zip = zip;
    return this;
  }

  /**
   * Get zip
   * @return zip
   */
  @javax.annotation.Nullable
  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel billbeeInterfacesBillbeeAPIModelOrderAddressApiModel = (BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel) o;
    return Objects.equals(this.billbeeId, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.billbeeId) &&
        Objects.equals(this.city, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.city) &&
        Objects.equals(this.company, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.company) &&
        Objects.equals(this.country, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.country) &&
        Objects.equals(this.countryISO2, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.countryISO2) &&
        Objects.equals(this.email, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.email) &&
        Objects.equals(this.firstName, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.firstName) &&
        Objects.equals(this.houseNumber, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.houseNumber) &&
        Objects.equals(this.lastName, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.lastName) &&
        Objects.equals(this.line2, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.line2) &&
        Objects.equals(this.nameAddition, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.nameAddition) &&
        Objects.equals(this.phone, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.phone) &&
        Objects.equals(this.state, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.state) &&
        Objects.equals(this.street, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.street) &&
        Objects.equals(this.zip, billbeeInterfacesBillbeeAPIModelOrderAddressApiModel.zip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billbeeId, city, company, country, countryISO2, email, firstName, houseNumber, lastName, line2, nameAddition, phone, state, street, zip);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel {\n");
    sb.append("    billbeeId: ").append(toIndentedString(billbeeId)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    countryISO2: ").append(toIndentedString(countryISO2)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    houseNumber: ").append(toIndentedString(houseNumber)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    line2: ").append(toIndentedString(line2)).append("\n");
    sb.append("    nameAddition: ").append(toIndentedString(nameAddition)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BillbeeId");
    openapiFields.add("City");
    openapiFields.add("Company");
    openapiFields.add("Country");
    openapiFields.add("CountryISO2");
    openapiFields.add("Email");
    openapiFields.add("FirstName");
    openapiFields.add("HouseNumber");
    openapiFields.add("LastName");
    openapiFields.add("Line2");
    openapiFields.add("NameAddition");
    openapiFields.add("Phone");
    openapiFields.add("State");
    openapiFields.add("Street");
    openapiFields.add("Zip");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel is not found in the empty JSON string", BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("City") != null && !jsonObj.get("City").isJsonNull()) && !jsonObj.get("City").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `City` to be a primitive type in the JSON string but got `%s`", jsonObj.get("City").toString()));
      }
      if ((jsonObj.get("Company") != null && !jsonObj.get("Company").isJsonNull()) && !jsonObj.get("Company").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Company` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Company").toString()));
      }
      if ((jsonObj.get("Country") != null && !jsonObj.get("Country").isJsonNull()) && !jsonObj.get("Country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Country").toString()));
      }
      if ((jsonObj.get("CountryISO2") != null && !jsonObj.get("CountryISO2").isJsonNull()) && !jsonObj.get("CountryISO2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CountryISO2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CountryISO2").toString()));
      }
      if ((jsonObj.get("Email") != null && !jsonObj.get("Email").isJsonNull()) && !jsonObj.get("Email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Email").toString()));
      }
      if ((jsonObj.get("FirstName") != null && !jsonObj.get("FirstName").isJsonNull()) && !jsonObj.get("FirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FirstName").toString()));
      }
      if ((jsonObj.get("HouseNumber") != null && !jsonObj.get("HouseNumber").isJsonNull()) && !jsonObj.get("HouseNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `HouseNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("HouseNumber").toString()));
      }
      if ((jsonObj.get("LastName") != null && !jsonObj.get("LastName").isJsonNull()) && !jsonObj.get("LastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LastName").toString()));
      }
      if ((jsonObj.get("Line2") != null && !jsonObj.get("Line2").isJsonNull()) && !jsonObj.get("Line2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Line2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Line2").toString()));
      }
      if ((jsonObj.get("NameAddition") != null && !jsonObj.get("NameAddition").isJsonNull()) && !jsonObj.get("NameAddition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NameAddition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NameAddition").toString()));
      }
      if ((jsonObj.get("Phone") != null && !jsonObj.get("Phone").isJsonNull()) && !jsonObj.get("Phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Phone").toString()));
      }
      if ((jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) && !jsonObj.get("State").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `State` to be a primitive type in the JSON string but got `%s`", jsonObj.get("State").toString()));
      }
      if ((jsonObj.get("Street") != null && !jsonObj.get("Street").isJsonNull()) && !jsonObj.get("Street").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Street` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Street").toString()));
      }
      if ((jsonObj.get("Zip") != null && !jsonObj.get("Zip").isJsonNull()) && !jsonObj.get("Zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Zip").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.class));

       return (TypeAdapter<T>) new TypeAdapter<BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel>() {
           @Override
           public void write(JsonWriter out, BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel
   * @throws IOException if the JSON string is invalid with respect to BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel
   */
  public static BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.class);
  }

  /**
   * Convert an instance of BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

