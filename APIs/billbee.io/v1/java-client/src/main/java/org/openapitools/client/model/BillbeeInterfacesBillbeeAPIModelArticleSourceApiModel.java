/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:20.866639-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel {
  public static final String SERIALIZED_NAME_API_ACCOUNT_ID = "ApiAccountId";
  @SerializedName(SERIALIZED_NAME_API_ACCOUNT_ID)
  private Long apiAccountId;

  public static final String SERIALIZED_NAME_API_ACCOUNT_NAME = "ApiAccountName";
  @SerializedName(SERIALIZED_NAME_API_ACCOUNT_NAME)
  private String apiAccountName;

  public static final String SERIALIZED_NAME_CUSTOM = "Custom";
  @SerializedName(SERIALIZED_NAME_CUSTOM)
  private Object custom;

  public static final String SERIALIZED_NAME_EXPORT_FACTOR = "ExportFactor";
  @SerializedName(SERIALIZED_NAME_EXPORT_FACTOR)
  private Double exportFactor;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_SOURCE = "Source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_SOURCE_ID = "SourceId";
  @SerializedName(SERIALIZED_NAME_SOURCE_ID)
  private String sourceId;

  public static final String SERIALIZED_NAME_STOCK_SYNC_INACTIVE = "StockSyncInactive";
  @SerializedName(SERIALIZED_NAME_STOCK_SYNC_INACTIVE)
  private Boolean stockSyncInactive;

  public static final String SERIALIZED_NAME_STOCK_SYNC_MAX = "StockSyncMax";
  @SerializedName(SERIALIZED_NAME_STOCK_SYNC_MAX)
  private Double stockSyncMax;

  public static final String SERIALIZED_NAME_STOCK_SYNC_MIN = "StockSyncMin";
  @SerializedName(SERIALIZED_NAME_STOCK_SYNC_MIN)
  private Double stockSyncMin;

  public static final String SERIALIZED_NAME_UNITS_PER_ITEM = "UnitsPerItem";
  @SerializedName(SERIALIZED_NAME_UNITS_PER_ITEM)
  private Double unitsPerItem;

  public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel() {
  }

  public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel apiAccountId(Long apiAccountId) {
    this.apiAccountId = apiAccountId;
    return this;
  }

  /**
   * Get apiAccountId
   * @return apiAccountId
   */
  @javax.annotation.Nullable
  public Long getApiAccountId() {
    return apiAccountId;
  }

  public void setApiAccountId(Long apiAccountId) {
    this.apiAccountId = apiAccountId;
  }


  public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel apiAccountName(String apiAccountName) {
    this.apiAccountName = apiAccountName;
    return this;
  }

  /**
   * Get apiAccountName
   * @return apiAccountName
   */
  @javax.annotation.Nullable
  public String getApiAccountName() {
    return apiAccountName;
  }

  public void setApiAccountName(String apiAccountName) {
    this.apiAccountName = apiAccountName;
  }


  public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel custom(Object custom) {
    this.custom = custom;
    return this;
  }

  /**
   * Get custom
   * @return custom
   */
  @javax.annotation.Nullable
  public Object getCustom() {
    return custom;
  }

  public void setCustom(Object custom) {
    this.custom = custom;
  }


  public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel exportFactor(Double exportFactor) {
    this.exportFactor = exportFactor;
    return this;
  }

  /**
   * Get exportFactor
   * @return exportFactor
   */
  @javax.annotation.Nullable
  public Double getExportFactor() {
    return exportFactor;
  }

  public void setExportFactor(Double exportFactor) {
    this.exportFactor = exportFactor;
  }


  public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel source(String source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nonnull
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }


  public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel sourceId(String sourceId) {
    this.sourceId = sourceId;
    return this;
  }

  /**
   * Get sourceId
   * @return sourceId
   */
  @javax.annotation.Nonnull
  public String getSourceId() {
    return sourceId;
  }

  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel stockSyncInactive(Boolean stockSyncInactive) {
    this.stockSyncInactive = stockSyncInactive;
    return this;
  }

  /**
   * Get stockSyncInactive
   * @return stockSyncInactive
   */
  @javax.annotation.Nullable
  public Boolean getStockSyncInactive() {
    return stockSyncInactive;
  }

  public void setStockSyncInactive(Boolean stockSyncInactive) {
    this.stockSyncInactive = stockSyncInactive;
  }


  public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel stockSyncMax(Double stockSyncMax) {
    this.stockSyncMax = stockSyncMax;
    return this;
  }

  /**
   * Get stockSyncMax
   * @return stockSyncMax
   */
  @javax.annotation.Nullable
  public Double getStockSyncMax() {
    return stockSyncMax;
  }

  public void setStockSyncMax(Double stockSyncMax) {
    this.stockSyncMax = stockSyncMax;
  }


  public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel stockSyncMin(Double stockSyncMin) {
    this.stockSyncMin = stockSyncMin;
    return this;
  }

  /**
   * Get stockSyncMin
   * @return stockSyncMin
   */
  @javax.annotation.Nullable
  public Double getStockSyncMin() {
    return stockSyncMin;
  }

  public void setStockSyncMin(Double stockSyncMin) {
    this.stockSyncMin = stockSyncMin;
  }


  public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel unitsPerItem(Double unitsPerItem) {
    this.unitsPerItem = unitsPerItem;
    return this;
  }

  /**
   * Get unitsPerItem
   * @return unitsPerItem
   */
  @javax.annotation.Nullable
  public Double getUnitsPerItem() {
    return unitsPerItem;
  }

  public void setUnitsPerItem(Double unitsPerItem) {
    this.unitsPerItem = unitsPerItem;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel billbeeInterfacesBillbeeAPIModelArticleSourceApiModel = (BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel) o;
    return Objects.equals(this.apiAccountId, billbeeInterfacesBillbeeAPIModelArticleSourceApiModel.apiAccountId) &&
        Objects.equals(this.apiAccountName, billbeeInterfacesBillbeeAPIModelArticleSourceApiModel.apiAccountName) &&
        Objects.equals(this.custom, billbeeInterfacesBillbeeAPIModelArticleSourceApiModel.custom) &&
        Objects.equals(this.exportFactor, billbeeInterfacesBillbeeAPIModelArticleSourceApiModel.exportFactor) &&
        Objects.equals(this.id, billbeeInterfacesBillbeeAPIModelArticleSourceApiModel.id) &&
        Objects.equals(this.source, billbeeInterfacesBillbeeAPIModelArticleSourceApiModel.source) &&
        Objects.equals(this.sourceId, billbeeInterfacesBillbeeAPIModelArticleSourceApiModel.sourceId) &&
        Objects.equals(this.stockSyncInactive, billbeeInterfacesBillbeeAPIModelArticleSourceApiModel.stockSyncInactive) &&
        Objects.equals(this.stockSyncMax, billbeeInterfacesBillbeeAPIModelArticleSourceApiModel.stockSyncMax) &&
        Objects.equals(this.stockSyncMin, billbeeInterfacesBillbeeAPIModelArticleSourceApiModel.stockSyncMin) &&
        Objects.equals(this.unitsPerItem, billbeeInterfacesBillbeeAPIModelArticleSourceApiModel.unitsPerItem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiAccountId, apiAccountName, custom, exportFactor, id, source, sourceId, stockSyncInactive, stockSyncMax, stockSyncMin, unitsPerItem);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel {\n");
    sb.append("    apiAccountId: ").append(toIndentedString(apiAccountId)).append("\n");
    sb.append("    apiAccountName: ").append(toIndentedString(apiAccountName)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    exportFactor: ").append(toIndentedString(exportFactor)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    stockSyncInactive: ").append(toIndentedString(stockSyncInactive)).append("\n");
    sb.append("    stockSyncMax: ").append(toIndentedString(stockSyncMax)).append("\n");
    sb.append("    stockSyncMin: ").append(toIndentedString(stockSyncMin)).append("\n");
    sb.append("    unitsPerItem: ").append(toIndentedString(unitsPerItem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApiAccountId");
    openapiFields.add("ApiAccountName");
    openapiFields.add("Custom");
    openapiFields.add("ExportFactor");
    openapiFields.add("Id");
    openapiFields.add("Source");
    openapiFields.add("SourceId");
    openapiFields.add("StockSyncInactive");
    openapiFields.add("StockSyncMax");
    openapiFields.add("StockSyncMin");
    openapiFields.add("UnitsPerItem");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Source");
    openapiRequiredFields.add("SourceId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel is not found in the empty JSON string", BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ApiAccountName") != null && !jsonObj.get("ApiAccountName").isJsonNull()) && !jsonObj.get("ApiAccountName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ApiAccountName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ApiAccountName").toString()));
      }
      if (!jsonObj.get("Source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Source").toString()));
      }
      if (!jsonObj.get("SourceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SourceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SourceId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.class));

       return (TypeAdapter<T>) new TypeAdapter<BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel>() {
           @Override
           public void write(JsonWriter out, BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel
   * @throws IOException if the JSON string is invalid with respect to BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel
   */
  public static BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.class);
  }

  /**
   * Convert an instance of BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

