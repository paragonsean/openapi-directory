/*
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BillbeeInterfacesBillbeeAPIModelShipmentAddressApiModel;
import org.openapitools.client.model.BillbeeInterfacesShippingProductService;
import org.openapitools.client.model.BillbeeInterfacesShippingShipmentDataDimensions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:54:20.866639-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel {
  public static final String SERIALIZED_NAME_CLIENT_REFERENCE = "ClientReference";
  @SerializedName(SERIALIZED_NAME_CLIENT_REFERENCE)
  private String clientReference;

  public static final String SERIALIZED_NAME_CONTENT = "Content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content;

  public static final String SERIALIZED_NAME_CUSTOMER_NUMBER = "CustomerNumber";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NUMBER)
  private String customerNumber;

  public static final String SERIALIZED_NAME_DIMENSION = "Dimension";
  @SerializedName(SERIALIZED_NAME_DIMENSION)
  private BillbeeInterfacesShippingShipmentDataDimensions dimension;

  public static final String SERIALIZED_NAME_ORDER_CURRENCY_CODE = "OrderCurrencyCode";
  @SerializedName(SERIALIZED_NAME_ORDER_CURRENCY_CODE)
  private String orderCurrencyCode;

  public static final String SERIALIZED_NAME_ORDER_SUM = "OrderSum";
  @SerializedName(SERIALIZED_NAME_ORDER_SUM)
  private Double orderSum;

  public static final String SERIALIZED_NAME_PRINTER_ID_FOR_EXPORT_DOCS = "PrinterIdForExportDocs";
  @SerializedName(SERIALIZED_NAME_PRINTER_ID_FOR_EXPORT_DOCS)
  private Long printerIdForExportDocs;

  public static final String SERIALIZED_NAME_PRINTER_NAME = "PrinterName";
  @SerializedName(SERIALIZED_NAME_PRINTER_NAME)
  private String printerName;

  public static final String SERIALIZED_NAME_PRODUCT_CODE = "ProductCode";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CODE)
  private String productCode;

  public static final String SERIALIZED_NAME_PROVIDER_NAME = "ProviderName";
  @SerializedName(SERIALIZED_NAME_PROVIDER_NAME)
  private String providerName;

  public static final String SERIALIZED_NAME_RECEIVER_ADDRESS = "ReceiverAddress";
  @SerializedName(SERIALIZED_NAME_RECEIVER_ADDRESS)
  private BillbeeInterfacesBillbeeAPIModelShipmentAddressApiModel receiverAddress;

  public static final String SERIALIZED_NAME_SERVICES = "Services";
  @SerializedName(SERIALIZED_NAME_SERVICES)
  private List<BillbeeInterfacesShippingProductService> services = new ArrayList<>();

  public static final String SERIALIZED_NAME_SHIP_DATE = "ShipDate";
  @SerializedName(SERIALIZED_NAME_SHIP_DATE)
  private OffsetDateTime shipDate;

  public static final String SERIALIZED_NAME_TOTAL_NET = "TotalNet";
  @SerializedName(SERIALIZED_NAME_TOTAL_NET)
  private Double totalNet;

  public static final String SERIALIZED_NAME_WEIGHT_IN_GRAM = "WeightInGram";
  @SerializedName(SERIALIZED_NAME_WEIGHT_IN_GRAM)
  private Double weightInGram;

  /**
   * Gets or Sets shippingCarrier
   */
  @JsonAdapter(ShippingCarrierEnum.Adapter.class)
  public enum ShippingCarrierEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_7(7),
    
    NUMBER_8(8),
    
    NUMBER_9(9),
    
    NUMBER_10(10),
    
    NUMBER_11(11),
    
    NUMBER_12(12),
    
    NUMBER_13(13),
    
    NUMBER_14(14),
    
    NUMBER_15(15),
    
    NUMBER_16(16),
    
    NUMBER_17(17),
    
    NUMBER_18(18);

    private Integer value;

    ShippingCarrierEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ShippingCarrierEnum fromValue(Integer value) {
      for (ShippingCarrierEnum b : ShippingCarrierEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ShippingCarrierEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ShippingCarrierEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ShippingCarrierEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return ShippingCarrierEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      Integer value = jsonElement.getAsInt();
      ShippingCarrierEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SHIPPING_CARRIER = "shippingCarrier";
  @SerializedName(SERIALIZED_NAME_SHIPPING_CARRIER)
  private ShippingCarrierEnum shippingCarrier;

  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel() {
  }

  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel clientReference(String clientReference) {
    this.clientReference = clientReference;
    return this;
  }

  /**
   * Optional specify a text to be included on the label. Not possible with all carriers
   * @return clientReference
   */
  @javax.annotation.Nullable
  public String getClientReference() {
    return clientReference;
  }

  public void setClientReference(String clientReference) {
    this.clientReference = clientReference;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel content(String content) {
    this.content = content;
    return this;
  }

  /**
   * Optional specify a text describing the content of the shipment. Used for export shipments
   * @return content
   */
  @javax.annotation.Nullable
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel customerNumber(String customerNumber) {
    this.customerNumber = customerNumber;
    return this;
  }

  /**
   * Not used anymore
   * @return customerNumber
   */
  @javax.annotation.Nullable
  public String getCustomerNumber() {
    return customerNumber;
  }

  public void setCustomerNumber(String customerNumber) {
    this.customerNumber = customerNumber;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel dimension(BillbeeInterfacesShippingShipmentDataDimensions dimension) {
    this.dimension = dimension;
    return this;
  }

  /**
   * Get dimension
   * @return dimension
   */
  @javax.annotation.Nullable
  public BillbeeInterfacesShippingShipmentDataDimensions getDimension() {
    return dimension;
  }

  public void setDimension(BillbeeInterfacesShippingShipmentDataDimensions dimension) {
    this.dimension = dimension;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel orderCurrencyCode(String orderCurrencyCode) {
    this.orderCurrencyCode = orderCurrencyCode;
    return this;
  }

  /**
   * The Currency if the ordersum
   * @return orderCurrencyCode
   */
  @javax.annotation.Nullable
  public String getOrderCurrencyCode() {
    return orderCurrencyCode;
  }

  public void setOrderCurrencyCode(String orderCurrencyCode) {
    this.orderCurrencyCode = orderCurrencyCode;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel orderSum(Double orderSum) {
    this.orderSum = orderSum;
    return this;
  }

  /**
   * The value of the shipments content
   * @return orderSum
   */
  @javax.annotation.Nullable
  public Double getOrderSum() {
    return orderSum;
  }

  public void setOrderSum(Double orderSum) {
    this.orderSum = orderSum;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel printerIdForExportDocs(Long printerIdForExportDocs) {
    this.printerIdForExportDocs = printerIdForExportDocs;
    return this;
  }

  /**
   * The id of a connected Cloudprinter to sent the export docs to
   * @return printerIdForExportDocs
   */
  @javax.annotation.Nullable
  public Long getPrinterIdForExportDocs() {
    return printerIdForExportDocs;
  }

  public void setPrinterIdForExportDocs(Long printerIdForExportDocs) {
    this.printerIdForExportDocs = printerIdForExportDocs;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel printerName(String printerName) {
    this.printerName = printerName;
    return this;
  }

  /**
   * The name of a connected Cloudprinter to sent the label to
   * @return printerName
   */
  @javax.annotation.Nullable
  public String getPrinterName() {
    return printerName;
  }

  public void setPrinterName(String printerName) {
    this.printerName = printerName;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel productCode(String productCode) {
    this.productCode = productCode;
    return this;
  }

  /**
   * The productcode to be used when creating the shipment. Values depends on the carrier used
   * @return productCode
   */
  @javax.annotation.Nullable
  public String getProductCode() {
    return productCode;
  }

  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel providerName(String providerName) {
    this.providerName = providerName;
    return this;
  }

  /**
   * The name of the provider as specified in the billbee account
   * @return providerName
   */
  @javax.annotation.Nullable
  public String getProviderName() {
    return providerName;
  }

  public void setProviderName(String providerName) {
    this.providerName = providerName;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel receiverAddress(BillbeeInterfacesBillbeeAPIModelShipmentAddressApiModel receiverAddress) {
    this.receiverAddress = receiverAddress;
    return this;
  }

  /**
   * Get receiverAddress
   * @return receiverAddress
   */
  @javax.annotation.Nullable
  public BillbeeInterfacesBillbeeAPIModelShipmentAddressApiModel getReceiverAddress() {
    return receiverAddress;
  }

  public void setReceiverAddress(BillbeeInterfacesBillbeeAPIModelShipmentAddressApiModel receiverAddress) {
    this.receiverAddress = receiverAddress;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel services(List<BillbeeInterfacesShippingProductService> services) {
    this.services = services;
    return this;
  }

  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel addServicesItem(BillbeeInterfacesShippingProductService servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<>();
    }
    this.services.add(servicesItem);
    return this;
  }

  /**
   * A list of services to be used when creating the shipment
   * @return services
   */
  @javax.annotation.Nullable
  public List<BillbeeInterfacesShippingProductService> getServices() {
    return services;
  }

  public void setServices(List<BillbeeInterfacesShippingProductService> services) {
    this.services = services;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel shipDate(OffsetDateTime shipDate) {
    this.shipDate = shipDate;
    return this;
  }

  /**
   * Optional overwrite the shipdate to be transferred to the carrier
   * @return shipDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getShipDate() {
    return shipDate;
  }

  public void setShipDate(OffsetDateTime shipDate) {
    this.shipDate = shipDate;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel totalNet(Double totalNet) {
    this.totalNet = totalNet;
    return this;
  }

  /**
   * The value of the shipments content (net)
   * @return totalNet
   */
  @javax.annotation.Nullable
  public Double getTotalNet() {
    return totalNet;
  }

  public void setTotalNet(Double totalNet) {
    this.totalNet = totalNet;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel weightInGram(Double weightInGram) {
    this.weightInGram = weightInGram;
    return this;
  }

  /**
   * Optional specify the weight in gram of the shipment
   * @return weightInGram
   */
  @javax.annotation.Nullable
  public Double getWeightInGram() {
    return weightInGram;
  }

  public void setWeightInGram(Double weightInGram) {
    this.weightInGram = weightInGram;
  }


  public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel shippingCarrier(ShippingCarrierEnum shippingCarrier) {
    this.shippingCarrier = shippingCarrier;
    return this;
  }

  /**
   * Get shippingCarrier
   * @return shippingCarrier
   */
  @javax.annotation.Nullable
  public ShippingCarrierEnum getShippingCarrier() {
    return shippingCarrier;
  }

  public void setShippingCarrier(ShippingCarrierEnum shippingCarrier) {
    this.shippingCarrier = shippingCarrier;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel = (BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel) o;
    return Objects.equals(this.clientReference, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.clientReference) &&
        Objects.equals(this.content, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.content) &&
        Objects.equals(this.customerNumber, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.customerNumber) &&
        Objects.equals(this.dimension, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.dimension) &&
        Objects.equals(this.orderCurrencyCode, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.orderCurrencyCode) &&
        Objects.equals(this.orderSum, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.orderSum) &&
        Objects.equals(this.printerIdForExportDocs, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.printerIdForExportDocs) &&
        Objects.equals(this.printerName, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.printerName) &&
        Objects.equals(this.productCode, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.productCode) &&
        Objects.equals(this.providerName, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.providerName) &&
        Objects.equals(this.receiverAddress, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.receiverAddress) &&
        Objects.equals(this.services, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.services) &&
        Objects.equals(this.shipDate, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.shipDate) &&
        Objects.equals(this.totalNet, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.totalNet) &&
        Objects.equals(this.weightInGram, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.weightInGram) &&
        Objects.equals(this.shippingCarrier, billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.shippingCarrier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientReference, content, customerNumber, dimension, orderCurrencyCode, orderSum, printerIdForExportDocs, printerName, productCode, providerName, receiverAddress, services, shipDate, totalNet, weightInGram, shippingCarrier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel {\n");
    sb.append("    clientReference: ").append(toIndentedString(clientReference)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    customerNumber: ").append(toIndentedString(customerNumber)).append("\n");
    sb.append("    dimension: ").append(toIndentedString(dimension)).append("\n");
    sb.append("    orderCurrencyCode: ").append(toIndentedString(orderCurrencyCode)).append("\n");
    sb.append("    orderSum: ").append(toIndentedString(orderSum)).append("\n");
    sb.append("    printerIdForExportDocs: ").append(toIndentedString(printerIdForExportDocs)).append("\n");
    sb.append("    printerName: ").append(toIndentedString(printerName)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    providerName: ").append(toIndentedString(providerName)).append("\n");
    sb.append("    receiverAddress: ").append(toIndentedString(receiverAddress)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    shipDate: ").append(toIndentedString(shipDate)).append("\n");
    sb.append("    totalNet: ").append(toIndentedString(totalNet)).append("\n");
    sb.append("    weightInGram: ").append(toIndentedString(weightInGram)).append("\n");
    sb.append("    shippingCarrier: ").append(toIndentedString(shippingCarrier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClientReference");
    openapiFields.add("Content");
    openapiFields.add("CustomerNumber");
    openapiFields.add("Dimension");
    openapiFields.add("OrderCurrencyCode");
    openapiFields.add("OrderSum");
    openapiFields.add("PrinterIdForExportDocs");
    openapiFields.add("PrinterName");
    openapiFields.add("ProductCode");
    openapiFields.add("ProviderName");
    openapiFields.add("ReceiverAddress");
    openapiFields.add("Services");
    openapiFields.add("ShipDate");
    openapiFields.add("TotalNet");
    openapiFields.add("WeightInGram");
    openapiFields.add("shippingCarrier");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel is not found in the empty JSON string", BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ClientReference") != null && !jsonObj.get("ClientReference").isJsonNull()) && !jsonObj.get("ClientReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClientReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClientReference").toString()));
      }
      if ((jsonObj.get("Content") != null && !jsonObj.get("Content").isJsonNull()) && !jsonObj.get("Content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Content").toString()));
      }
      if ((jsonObj.get("CustomerNumber") != null && !jsonObj.get("CustomerNumber").isJsonNull()) && !jsonObj.get("CustomerNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CustomerNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CustomerNumber").toString()));
      }
      // validate the optional field `Dimension`
      if (jsonObj.get("Dimension") != null && !jsonObj.get("Dimension").isJsonNull()) {
        BillbeeInterfacesShippingShipmentDataDimensions.validateJsonElement(jsonObj.get("Dimension"));
      }
      if ((jsonObj.get("OrderCurrencyCode") != null && !jsonObj.get("OrderCurrencyCode").isJsonNull()) && !jsonObj.get("OrderCurrencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OrderCurrencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OrderCurrencyCode").toString()));
      }
      if ((jsonObj.get("PrinterName") != null && !jsonObj.get("PrinterName").isJsonNull()) && !jsonObj.get("PrinterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PrinterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PrinterName").toString()));
      }
      if ((jsonObj.get("ProductCode") != null && !jsonObj.get("ProductCode").isJsonNull()) && !jsonObj.get("ProductCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProductCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProductCode").toString()));
      }
      if ((jsonObj.get("ProviderName") != null && !jsonObj.get("ProviderName").isJsonNull()) && !jsonObj.get("ProviderName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProviderName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProviderName").toString()));
      }
      // validate the optional field `ReceiverAddress`
      if (jsonObj.get("ReceiverAddress") != null && !jsonObj.get("ReceiverAddress").isJsonNull()) {
        BillbeeInterfacesBillbeeAPIModelShipmentAddressApiModel.validateJsonElement(jsonObj.get("ReceiverAddress"));
      }
      if (jsonObj.get("Services") != null && !jsonObj.get("Services").isJsonNull()) {
        JsonArray jsonArrayservices = jsonObj.getAsJsonArray("Services");
        if (jsonArrayservices != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Services").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Services` to be an array in the JSON string but got `%s`", jsonObj.get("Services").toString()));
          }

          // validate the optional field `Services` (array)
          for (int i = 0; i < jsonArrayservices.size(); i++) {
            BillbeeInterfacesShippingProductService.validateJsonElement(jsonArrayservices.get(i));
          };
        }
      }
      // validate the optional field `shippingCarrier`
      if (jsonObj.get("shippingCarrier") != null && !jsonObj.get("shippingCarrier").isJsonNull()) {
        ShippingCarrierEnum.validateJsonElement(jsonObj.get("shippingCarrier"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.class));

       return (TypeAdapter<T>) new TypeAdapter<BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel>() {
           @Override
           public void write(JsonWriter out, BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel
   * @throws IOException if the JSON string is invalid with respect to BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel
   */
  public static BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel.class);
  }

  /**
   * Convert an instance of BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

