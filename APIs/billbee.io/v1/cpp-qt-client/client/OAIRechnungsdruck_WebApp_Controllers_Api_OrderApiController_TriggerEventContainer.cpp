/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer() {
    this->initializeModel();
}

OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::~OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer() {}

void OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::initializeModel() {

    m_delay_in_minutes_isSet = false;
    m_delay_in_minutes_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::fromJsonObject(QJsonObject json) {

    m_delay_in_minutes_isValid = ::OpenAPI::fromJsonValue(m_delay_in_minutes, json[QString("DelayInMinutes")]);
    m_delay_in_minutes_isSet = !json[QString("DelayInMinutes")].isNull() && m_delay_in_minutes_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::asJsonObject() const {
    QJsonObject obj;
    if (m_delay_in_minutes_isSet) {
        obj.insert(QString("DelayInMinutes"), ::OpenAPI::toJsonValue(m_delay_in_minutes));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

qint32 OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::getDelayInMinutes() const {
    return m_delay_in_minutes;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::setDelayInMinutes(const qint32 &delay_in_minutes) {
    m_delay_in_minutes = delay_in_minutes;
    m_delay_in_minutes_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::is_delay_in_minutes_Set() const{
    return m_delay_in_minutes_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::is_delay_in_minutes_Valid() const{
    return m_delay_in_minutes_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::getName() const {
    return m_name;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_delay_in_minutes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_TriggerEventContainer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
