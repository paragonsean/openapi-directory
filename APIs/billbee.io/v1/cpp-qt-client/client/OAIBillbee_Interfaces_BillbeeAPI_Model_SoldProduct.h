/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBillbee_Interfaces_BillbeeAPI_Model_SoldProduct.h
 *
 * 
 */

#ifndef OAIBillbee_Interfaces_BillbeeAPI_Model_SoldProduct_H
#define OAIBillbee_Interfaces_BillbeeAPI_Model_SoldProduct_H

#include <QJsonObject>

#include "OAIBillbee_Interfaces_BillbeeAPI_Model_ProductImage.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBillbee_Interfaces_BillbeeAPI_Model_ProductImage;

class OAIBillbee_Interfaces_BillbeeAPI_Model_SoldProduct : public OAIObject {
public:
    OAIBillbee_Interfaces_BillbeeAPI_Model_SoldProduct();
    OAIBillbee_Interfaces_BillbeeAPI_Model_SoldProduct(QString json);
    ~OAIBillbee_Interfaces_BillbeeAPI_Model_SoldProduct() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getBillbeeId() const;
    void setBillbeeId(const qint64 &billbee_id);
    bool is_billbee_id_Set() const;
    bool is_billbee_id_Valid() const;

    QString getCountryOfOrigin() const;
    void setCountryOfOrigin(const QString &country_of_origin);
    bool is_country_of_origin_Set() const;
    bool is_country_of_origin_Valid() const;

    QString getEan() const;
    void setEan(const QString &ean);
    bool is_ean_Set() const;
    bool is_ean_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIBillbee_Interfaces_BillbeeAPI_Model_ProductImage> getImages() const;
    void setImages(const QList<OAIBillbee_Interfaces_BillbeeAPI_Model_ProductImage> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    bool isIsDigital() const;
    void setIsDigital(const bool &is_digital);
    bool is_is_digital_Set() const;
    bool is_is_digital_Valid() const;

    QString getOldId() const;
    void setOldId(const QString &old_id);
    bool is_old_id_Set() const;
    bool is_old_id_Valid() const;

    QString getPlatformData() const;
    void setPlatformData(const QString &platform_data);
    bool is_platform_data_Set() const;
    bool is_platform_data_Valid() const;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    QString getSkuOrId() const;
    void setSkuOrId(const QString &sku_or_id);
    bool is_sku_or_id_Set() const;
    bool is_sku_or_id_Valid() const;

    QString getTaricCode() const;
    void setTaricCode(const QString &taric_code);
    bool is_taric_code_Set() const;
    bool is_taric_code_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    qint32 getType() const;
    void setType(const qint32 &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getWeight() const;
    void setWeight(const qint32 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_billbee_id;
    bool m_billbee_id_isSet;
    bool m_billbee_id_isValid;

    QString m_country_of_origin;
    bool m_country_of_origin_isSet;
    bool m_country_of_origin_isValid;

    QString m_ean;
    bool m_ean_isSet;
    bool m_ean_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIBillbee_Interfaces_BillbeeAPI_Model_ProductImage> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    bool m_is_digital;
    bool m_is_digital_isSet;
    bool m_is_digital_isValid;

    QString m_old_id;
    bool m_old_id_isSet;
    bool m_old_id_isValid;

    QString m_platform_data;
    bool m_platform_data_isSet;
    bool m_platform_data_isValid;

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    QString m_sku_or_id;
    bool m_sku_or_id_isSet;
    bool m_sku_or_id_isValid;

    QString m_taric_code;
    bool m_taric_code_isSet;
    bool m_taric_code_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    qint32 m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBillbee_Interfaces_BillbeeAPI_Model_SoldProduct)

#endif // OAIBillbee_Interfaces_BillbeeAPI_Model_SoldProduct_H
