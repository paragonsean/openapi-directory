/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel() {
    this->initializeModel();
}

OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::~OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel() {}

void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::initializeModel() {

    m_basic_attributes_isSet = false;
    m_basic_attributes_isValid = false;

    m_bill_of_material_isSet = false;
    m_bill_of_material_isValid = false;

    m_category1_isSet = false;
    m_category1_isValid = false;

    m_category2_isSet = false;
    m_category2_isValid = false;

    m_category3_isSet = false;
    m_category3_isValid = false;

    m_condition_isSet = false;
    m_condition_isValid = false;

    m_cost_price_isSet = false;
    m_cost_price_isValid = false;

    m_country_of_origin_isSet = false;
    m_country_of_origin_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;

    m_delivery_time_isSet = false;
    m_delivery_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_ean_isSet = false;
    m_ean_isValid = false;

    m_export_description_isSet = false;
    m_export_description_isValid = false;

    m_export_description_multi_language_isSet = false;
    m_export_description_multi_language_isValid = false;

    m_height_cm_isSet = false;
    m_height_cm_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_images_isSet = false;
    m_images_isValid = false;

    m_invoice_text_isSet = false;
    m_invoice_text_isValid = false;

    m_is_customizable_isSet = false;
    m_is_customizable_isValid = false;

    m_is_deactivated_isSet = false;
    m_is_deactivated_isValid = false;

    m_is_digital_isSet = false;
    m_is_digital_isValid = false;

    m_length_cm_isSet = false;
    m_length_cm_isValid = false;

    m_low_stock_isSet = false;
    m_low_stock_isValid = false;

    m_manufacturer_isSet = false;
    m_manufacturer_isValid = false;

    m_materials_isSet = false;
    m_materials_isValid = false;

    m_occasion_isSet = false;
    m_occasion_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_recipient_isSet = false;
    m_recipient_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_shipping_product_id_isSet = false;
    m_shipping_product_id_isValid = false;

    m_short_description_isSet = false;
    m_short_description_isValid = false;

    m_sold_amount_isSet = false;
    m_sold_amount_isValid = false;

    m_sold_amount_last30_days_isSet = false;
    m_sold_amount_last30_days_isValid = false;

    m_sold_sum_gross_isSet = false;
    m_sold_sum_gross_isValid = false;

    m_sold_sum_gross_last30_days_isSet = false;
    m_sold_sum_gross_last30_days_isValid = false;

    m_sold_sum_net_isSet = false;
    m_sold_sum_net_isValid = false;

    m_sold_sum_net_last30_days_isSet = false;
    m_sold_sum_net_last30_days_isValid = false;

    m_sources_isSet = false;
    m_sources_isValid = false;

    m_stock_code_isSet = false;
    m_stock_code_isValid = false;

    m_stock_current_isSet = false;
    m_stock_current_isValid = false;

    m_stock_desired_isSet = false;
    m_stock_desired_isValid = false;

    m_stock_reduce_items_per_sale_isSet = false;
    m_stock_reduce_items_per_sale_isValid = false;

    m_stock_warning_isSet = false;
    m_stock_warning_isValid = false;

    m_stocks_isSet = false;
    m_stocks_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;

    m_taric_number_isSet = false;
    m_taric_number_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_unit_isSet = false;
    m_unit_isValid = false;

    m_units_per_item_isSet = false;
    m_units_per_item_isValid = false;

    m_vat1_rate_isSet = false;
    m_vat1_rate_isValid = false;

    m_vat2_rate_isSet = false;
    m_vat2_rate_isValid = false;

    m_vat_index_isSet = false;
    m_vat_index_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;

    m_weight_net_isSet = false;
    m_weight_net_isValid = false;

    m_width_cm_isSet = false;
    m_width_cm_isValid = false;
}

void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::fromJsonObject(QJsonObject json) {

    m_basic_attributes_isValid = ::OpenAPI::fromJsonValue(m_basic_attributes, json[QString("BasicAttributes")]);
    m_basic_attributes_isSet = !json[QString("BasicAttributes")].isNull() && m_basic_attributes_isValid;

    m_bill_of_material_isValid = ::OpenAPI::fromJsonValue(m_bill_of_material, json[QString("BillOfMaterial")]);
    m_bill_of_material_isSet = !json[QString("BillOfMaterial")].isNull() && m_bill_of_material_isValid;

    m_category1_isValid = ::OpenAPI::fromJsonValue(m_category1, json[QString("Category1")]);
    m_category1_isSet = !json[QString("Category1")].isNull() && m_category1_isValid;

    m_category2_isValid = ::OpenAPI::fromJsonValue(m_category2, json[QString("Category2")]);
    m_category2_isSet = !json[QString("Category2")].isNull() && m_category2_isValid;

    m_category3_isValid = ::OpenAPI::fromJsonValue(m_category3, json[QString("Category3")]);
    m_category3_isSet = !json[QString("Category3")].isNull() && m_category3_isValid;

    m_condition_isValid = ::OpenAPI::fromJsonValue(m_condition, json[QString("Condition")]);
    m_condition_isSet = !json[QString("Condition")].isNull() && m_condition_isValid;

    m_cost_price_isValid = ::OpenAPI::fromJsonValue(m_cost_price, json[QString("CostPrice")]);
    m_cost_price_isSet = !json[QString("CostPrice")].isNull() && m_cost_price_isValid;

    m_country_of_origin_isValid = ::OpenAPI::fromJsonValue(m_country_of_origin, json[QString("CountryOfOrigin")]);
    m_country_of_origin_isSet = !json[QString("CountryOfOrigin")].isNull() && m_country_of_origin_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("CustomFields")]);
    m_custom_fields_isSet = !json[QString("CustomFields")].isNull() && m_custom_fields_isValid;

    m_delivery_time_isValid = ::OpenAPI::fromJsonValue(m_delivery_time, json[QString("DeliveryTime")]);
    m_delivery_time_isSet = !json[QString("DeliveryTime")].isNull() && m_delivery_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_ean_isValid = ::OpenAPI::fromJsonValue(m_ean, json[QString("EAN")]);
    m_ean_isSet = !json[QString("EAN")].isNull() && m_ean_isValid;

    m_export_description_isValid = ::OpenAPI::fromJsonValue(m_export_description, json[QString("ExportDescription")]);
    m_export_description_isSet = !json[QString("ExportDescription")].isNull() && m_export_description_isValid;

    m_export_description_multi_language_isValid = ::OpenAPI::fromJsonValue(m_export_description_multi_language, json[QString("ExportDescriptionMultiLanguage")]);
    m_export_description_multi_language_isSet = !json[QString("ExportDescriptionMultiLanguage")].isNull() && m_export_description_multi_language_isValid;

    m_height_cm_isValid = ::OpenAPI::fromJsonValue(m_height_cm, json[QString("HeightCm")]);
    m_height_cm_isSet = !json[QString("HeightCm")].isNull() && m_height_cm_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_images_isValid = ::OpenAPI::fromJsonValue(m_images, json[QString("Images")]);
    m_images_isSet = !json[QString("Images")].isNull() && m_images_isValid;

    m_invoice_text_isValid = ::OpenAPI::fromJsonValue(m_invoice_text, json[QString("InvoiceText")]);
    m_invoice_text_isSet = !json[QString("InvoiceText")].isNull() && m_invoice_text_isValid;

    m_is_customizable_isValid = ::OpenAPI::fromJsonValue(m_is_customizable, json[QString("IsCustomizable")]);
    m_is_customizable_isSet = !json[QString("IsCustomizable")].isNull() && m_is_customizable_isValid;

    m_is_deactivated_isValid = ::OpenAPI::fromJsonValue(m_is_deactivated, json[QString("IsDeactivated")]);
    m_is_deactivated_isSet = !json[QString("IsDeactivated")].isNull() && m_is_deactivated_isValid;

    m_is_digital_isValid = ::OpenAPI::fromJsonValue(m_is_digital, json[QString("IsDigital")]);
    m_is_digital_isSet = !json[QString("IsDigital")].isNull() && m_is_digital_isValid;

    m_length_cm_isValid = ::OpenAPI::fromJsonValue(m_length_cm, json[QString("LengthCm")]);
    m_length_cm_isSet = !json[QString("LengthCm")].isNull() && m_length_cm_isValid;

    m_low_stock_isValid = ::OpenAPI::fromJsonValue(m_low_stock, json[QString("LowStock")]);
    m_low_stock_isSet = !json[QString("LowStock")].isNull() && m_low_stock_isValid;

    m_manufacturer_isValid = ::OpenAPI::fromJsonValue(m_manufacturer, json[QString("Manufacturer")]);
    m_manufacturer_isSet = !json[QString("Manufacturer")].isNull() && m_manufacturer_isValid;

    m_materials_isValid = ::OpenAPI::fromJsonValue(m_materials, json[QString("Materials")]);
    m_materials_isSet = !json[QString("Materials")].isNull() && m_materials_isValid;

    m_occasion_isValid = ::OpenAPI::fromJsonValue(m_occasion, json[QString("Occasion")]);
    m_occasion_isSet = !json[QString("Occasion")].isNull() && m_occasion_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("Price")]);
    m_price_isSet = !json[QString("Price")].isNull() && m_price_isValid;

    m_recipient_isValid = ::OpenAPI::fromJsonValue(m_recipient, json[QString("Recipient")]);
    m_recipient_isSet = !json[QString("Recipient")].isNull() && m_recipient_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("SKU")]);
    m_sku_isSet = !json[QString("SKU")].isNull() && m_sku_isValid;

    m_shipping_product_id_isValid = ::OpenAPI::fromJsonValue(m_shipping_product_id, json[QString("ShippingProductId")]);
    m_shipping_product_id_isSet = !json[QString("ShippingProductId")].isNull() && m_shipping_product_id_isValid;

    m_short_description_isValid = ::OpenAPI::fromJsonValue(m_short_description, json[QString("ShortDescription")]);
    m_short_description_isSet = !json[QString("ShortDescription")].isNull() && m_short_description_isValid;

    m_sold_amount_isValid = ::OpenAPI::fromJsonValue(m_sold_amount, json[QString("SoldAmount")]);
    m_sold_amount_isSet = !json[QString("SoldAmount")].isNull() && m_sold_amount_isValid;

    m_sold_amount_last30_days_isValid = ::OpenAPI::fromJsonValue(m_sold_amount_last30_days, json[QString("SoldAmountLast30Days")]);
    m_sold_amount_last30_days_isSet = !json[QString("SoldAmountLast30Days")].isNull() && m_sold_amount_last30_days_isValid;

    m_sold_sum_gross_isValid = ::OpenAPI::fromJsonValue(m_sold_sum_gross, json[QString("SoldSumGross")]);
    m_sold_sum_gross_isSet = !json[QString("SoldSumGross")].isNull() && m_sold_sum_gross_isValid;

    m_sold_sum_gross_last30_days_isValid = ::OpenAPI::fromJsonValue(m_sold_sum_gross_last30_days, json[QString("SoldSumGrossLast30Days")]);
    m_sold_sum_gross_last30_days_isSet = !json[QString("SoldSumGrossLast30Days")].isNull() && m_sold_sum_gross_last30_days_isValid;

    m_sold_sum_net_isValid = ::OpenAPI::fromJsonValue(m_sold_sum_net, json[QString("SoldSumNet")]);
    m_sold_sum_net_isSet = !json[QString("SoldSumNet")].isNull() && m_sold_sum_net_isValid;

    m_sold_sum_net_last30_days_isValid = ::OpenAPI::fromJsonValue(m_sold_sum_net_last30_days, json[QString("SoldSumNetLast30Days")]);
    m_sold_sum_net_last30_days_isSet = !json[QString("SoldSumNetLast30Days")].isNull() && m_sold_sum_net_last30_days_isValid;

    m_sources_isValid = ::OpenAPI::fromJsonValue(m_sources, json[QString("Sources")]);
    m_sources_isSet = !json[QString("Sources")].isNull() && m_sources_isValid;

    m_stock_code_isValid = ::OpenAPI::fromJsonValue(m_stock_code, json[QString("StockCode")]);
    m_stock_code_isSet = !json[QString("StockCode")].isNull() && m_stock_code_isValid;

    m_stock_current_isValid = ::OpenAPI::fromJsonValue(m_stock_current, json[QString("StockCurrent")]);
    m_stock_current_isSet = !json[QString("StockCurrent")].isNull() && m_stock_current_isValid;

    m_stock_desired_isValid = ::OpenAPI::fromJsonValue(m_stock_desired, json[QString("StockDesired")]);
    m_stock_desired_isSet = !json[QString("StockDesired")].isNull() && m_stock_desired_isValid;

    m_stock_reduce_items_per_sale_isValid = ::OpenAPI::fromJsonValue(m_stock_reduce_items_per_sale, json[QString("StockReduceItemsPerSale")]);
    m_stock_reduce_items_per_sale_isSet = !json[QString("StockReduceItemsPerSale")].isNull() && m_stock_reduce_items_per_sale_isValid;

    m_stock_warning_isValid = ::OpenAPI::fromJsonValue(m_stock_warning, json[QString("StockWarning")]);
    m_stock_warning_isSet = !json[QString("StockWarning")].isNull() && m_stock_warning_isValid;

    m_stocks_isValid = ::OpenAPI::fromJsonValue(m_stocks, json[QString("Stocks")]);
    m_stocks_isSet = !json[QString("Stocks")].isNull() && m_stocks_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("Tags")]);
    m_tags_isSet = !json[QString("Tags")].isNull() && m_tags_isValid;

    m_taric_number_isValid = ::OpenAPI::fromJsonValue(m_taric_number, json[QString("TaricNumber")]);
    m_taric_number_isSet = !json[QString("TaricNumber")].isNull() && m_taric_number_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_unit_isValid = ::OpenAPI::fromJsonValue(m_unit, json[QString("Unit")]);
    m_unit_isSet = !json[QString("Unit")].isNull() && m_unit_isValid;

    m_units_per_item_isValid = ::OpenAPI::fromJsonValue(m_units_per_item, json[QString("UnitsPerItem")]);
    m_units_per_item_isSet = !json[QString("UnitsPerItem")].isNull() && m_units_per_item_isValid;

    m_vat1_rate_isValid = ::OpenAPI::fromJsonValue(m_vat1_rate, json[QString("Vat1Rate")]);
    m_vat1_rate_isSet = !json[QString("Vat1Rate")].isNull() && m_vat1_rate_isValid;

    m_vat2_rate_isValid = ::OpenAPI::fromJsonValue(m_vat2_rate, json[QString("Vat2Rate")]);
    m_vat2_rate_isSet = !json[QString("Vat2Rate")].isNull() && m_vat2_rate_isValid;

    m_vat_index_isValid = ::OpenAPI::fromJsonValue(m_vat_index, json[QString("VatIndex")]);
    m_vat_index_isSet = !json[QString("VatIndex")].isNull() && m_vat_index_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("Weight")]);
    m_weight_isSet = !json[QString("Weight")].isNull() && m_weight_isValid;

    m_weight_net_isValid = ::OpenAPI::fromJsonValue(m_weight_net, json[QString("WeightNet")]);
    m_weight_net_isSet = !json[QString("WeightNet")].isNull() && m_weight_net_isValid;

    m_width_cm_isValid = ::OpenAPI::fromJsonValue(m_width_cm, json[QString("WidthCm")]);
    m_width_cm_isSet = !json[QString("WidthCm")].isNull() && m_width_cm_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::asJsonObject() const {
    QJsonObject obj;
    if (m_basic_attributes.size() > 0) {
        obj.insert(QString("BasicAttributes"), ::OpenAPI::toJsonValue(m_basic_attributes));
    }
    if (m_bill_of_material.size() > 0) {
        obj.insert(QString("BillOfMaterial"), ::OpenAPI::toJsonValue(m_bill_of_material));
    }
    if (m_category1.isSet()) {
        obj.insert(QString("Category1"), ::OpenAPI::toJsonValue(m_category1));
    }
    if (m_category2.isSet()) {
        obj.insert(QString("Category2"), ::OpenAPI::toJsonValue(m_category2));
    }
    if (m_category3.isSet()) {
        obj.insert(QString("Category3"), ::OpenAPI::toJsonValue(m_category3));
    }
    if (m_condition_isSet) {
        obj.insert(QString("Condition"), ::OpenAPI::toJsonValue(m_condition));
    }
    if (m_cost_price_isSet) {
        obj.insert(QString("CostPrice"), ::OpenAPI::toJsonValue(m_cost_price));
    }
    if (m_country_of_origin_isSet) {
        obj.insert(QString("CountryOfOrigin"), ::OpenAPI::toJsonValue(m_country_of_origin));
    }
    if (m_custom_fields.size() > 0) {
        obj.insert(QString("CustomFields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    if (m_delivery_time_isSet) {
        obj.insert(QString("DeliveryTime"), ::OpenAPI::toJsonValue(m_delivery_time));
    }
    if (m_description.size() > 0) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_ean_isSet) {
        obj.insert(QString("EAN"), ::OpenAPI::toJsonValue(m_ean));
    }
    if (m_export_description_isSet) {
        obj.insert(QString("ExportDescription"), ::OpenAPI::toJsonValue(m_export_description));
    }
    if (m_export_description_multi_language.size() > 0) {
        obj.insert(QString("ExportDescriptionMultiLanguage"), ::OpenAPI::toJsonValue(m_export_description_multi_language));
    }
    if (m_height_cm_isSet) {
        obj.insert(QString("HeightCm"), ::OpenAPI::toJsonValue(m_height_cm));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_images.size() > 0) {
        obj.insert(QString("Images"), ::OpenAPI::toJsonValue(m_images));
    }
    if (m_invoice_text.size() > 0) {
        obj.insert(QString("InvoiceText"), ::OpenAPI::toJsonValue(m_invoice_text));
    }
    if (m_is_customizable_isSet) {
        obj.insert(QString("IsCustomizable"), ::OpenAPI::toJsonValue(m_is_customizable));
    }
    if (m_is_deactivated_isSet) {
        obj.insert(QString("IsDeactivated"), ::OpenAPI::toJsonValue(m_is_deactivated));
    }
    if (m_is_digital_isSet) {
        obj.insert(QString("IsDigital"), ::OpenAPI::toJsonValue(m_is_digital));
    }
    if (m_length_cm_isSet) {
        obj.insert(QString("LengthCm"), ::OpenAPI::toJsonValue(m_length_cm));
    }
    if (m_low_stock_isSet) {
        obj.insert(QString("LowStock"), ::OpenAPI::toJsonValue(m_low_stock));
    }
    if (m_manufacturer_isSet) {
        obj.insert(QString("Manufacturer"), ::OpenAPI::toJsonValue(m_manufacturer));
    }
    if (m_materials.size() > 0) {
        obj.insert(QString("Materials"), ::OpenAPI::toJsonValue(m_materials));
    }
    if (m_occasion_isSet) {
        obj.insert(QString("Occasion"), ::OpenAPI::toJsonValue(m_occasion));
    }
    if (m_price_isSet) {
        obj.insert(QString("Price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_recipient_isSet) {
        obj.insert(QString("Recipient"), ::OpenAPI::toJsonValue(m_recipient));
    }
    if (m_sku_isSet) {
        obj.insert(QString("SKU"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_shipping_product_id_isSet) {
        obj.insert(QString("ShippingProductId"), ::OpenAPI::toJsonValue(m_shipping_product_id));
    }
    if (m_short_description.size() > 0) {
        obj.insert(QString("ShortDescription"), ::OpenAPI::toJsonValue(m_short_description));
    }
    if (m_sold_amount_isSet) {
        obj.insert(QString("SoldAmount"), ::OpenAPI::toJsonValue(m_sold_amount));
    }
    if (m_sold_amount_last30_days_isSet) {
        obj.insert(QString("SoldAmountLast30Days"), ::OpenAPI::toJsonValue(m_sold_amount_last30_days));
    }
    if (m_sold_sum_gross_isSet) {
        obj.insert(QString("SoldSumGross"), ::OpenAPI::toJsonValue(m_sold_sum_gross));
    }
    if (m_sold_sum_gross_last30_days_isSet) {
        obj.insert(QString("SoldSumGrossLast30Days"), ::OpenAPI::toJsonValue(m_sold_sum_gross_last30_days));
    }
    if (m_sold_sum_net_isSet) {
        obj.insert(QString("SoldSumNet"), ::OpenAPI::toJsonValue(m_sold_sum_net));
    }
    if (m_sold_sum_net_last30_days_isSet) {
        obj.insert(QString("SoldSumNetLast30Days"), ::OpenAPI::toJsonValue(m_sold_sum_net_last30_days));
    }
    if (m_sources.size() > 0) {
        obj.insert(QString("Sources"), ::OpenAPI::toJsonValue(m_sources));
    }
    if (m_stock_code_isSet) {
        obj.insert(QString("StockCode"), ::OpenAPI::toJsonValue(m_stock_code));
    }
    if (m_stock_current_isSet) {
        obj.insert(QString("StockCurrent"), ::OpenAPI::toJsonValue(m_stock_current));
    }
    if (m_stock_desired_isSet) {
        obj.insert(QString("StockDesired"), ::OpenAPI::toJsonValue(m_stock_desired));
    }
    if (m_stock_reduce_items_per_sale_isSet) {
        obj.insert(QString("StockReduceItemsPerSale"), ::OpenAPI::toJsonValue(m_stock_reduce_items_per_sale));
    }
    if (m_stock_warning_isSet) {
        obj.insert(QString("StockWarning"), ::OpenAPI::toJsonValue(m_stock_warning));
    }
    if (m_stocks.size() > 0) {
        obj.insert(QString("Stocks"), ::OpenAPI::toJsonValue(m_stocks));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("Tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    if (m_taric_number_isSet) {
        obj.insert(QString("TaricNumber"), ::OpenAPI::toJsonValue(m_taric_number));
    }
    if (m_title.size() > 0) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_type_isSet) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_unit_isSet) {
        obj.insert(QString("Unit"), ::OpenAPI::toJsonValue(m_unit));
    }
    if (m_units_per_item_isSet) {
        obj.insert(QString("UnitsPerItem"), ::OpenAPI::toJsonValue(m_units_per_item));
    }
    if (m_vat1_rate_isSet) {
        obj.insert(QString("Vat1Rate"), ::OpenAPI::toJsonValue(m_vat1_rate));
    }
    if (m_vat2_rate_isSet) {
        obj.insert(QString("Vat2Rate"), ::OpenAPI::toJsonValue(m_vat2_rate));
    }
    if (m_vat_index_isSet) {
        obj.insert(QString("VatIndex"), ::OpenAPI::toJsonValue(m_vat_index));
    }
    if (m_weight_isSet) {
        obj.insert(QString("Weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    if (m_weight_net_isSet) {
        obj.insert(QString("WeightNet"), ::OpenAPI::toJsonValue(m_weight_net));
    }
    if (m_width_cm_isSet) {
        obj.insert(QString("WidthCm"), ::OpenAPI::toJsonValue(m_width_cm));
    }
    return obj;
}

QList<OAIBillbee_Interfaces_Order_MultiLanguageString> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getBasicAttributes() const {
    return m_basic_attributes;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setBasicAttributes(const QList<OAIBillbee_Interfaces_Order_MultiLanguageString> &basic_attributes) {
    m_basic_attributes = basic_attributes;
    m_basic_attributes_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_basic_attributes_Set() const{
    return m_basic_attributes_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_basic_attributes_Valid() const{
    return m_basic_attributes_isValid;
}

QList<OAIBillbee_Interfaces_BillbeeAPI_Model_BomSubArticleApiModel> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getBillOfMaterial() const {
    return m_bill_of_material;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setBillOfMaterial(const QList<OAIBillbee_Interfaces_BillbeeAPI_Model_BomSubArticleApiModel> &bill_of_material) {
    m_bill_of_material = bill_of_material;
    m_bill_of_material_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_bill_of_material_Set() const{
    return m_bill_of_material_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_bill_of_material_Valid() const{
    return m_bill_of_material_isValid;
}

OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleCategoryApiModel OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getCategory1() const {
    return m_category1;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setCategory1(const OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleCategoryApiModel &category1) {
    m_category1 = category1;
    m_category1_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_category1_Set() const{
    return m_category1_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_category1_Valid() const{
    return m_category1_isValid;
}

OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleCategoryApiModel OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getCategory2() const {
    return m_category2;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setCategory2(const OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleCategoryApiModel &category2) {
    m_category2 = category2;
    m_category2_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_category2_Set() const{
    return m_category2_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_category2_Valid() const{
    return m_category2_isValid;
}

OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleCategoryApiModel OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getCategory3() const {
    return m_category3;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setCategory3(const OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleCategoryApiModel &category3) {
    m_category3 = category3;
    m_category3_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_category3_Set() const{
    return m_category3_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_category3_Valid() const{
    return m_category3_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getCondition() const {
    return m_condition;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setCondition(const qint32 &condition) {
    m_condition = condition;
    m_condition_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_condition_Set() const{
    return m_condition_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_condition_Valid() const{
    return m_condition_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getCostPrice() const {
    return m_cost_price;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setCostPrice(const double &cost_price) {
    m_cost_price = cost_price;
    m_cost_price_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_cost_price_Set() const{
    return m_cost_price_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_cost_price_Valid() const{
    return m_cost_price_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getCountryOfOrigin() const {
    return m_country_of_origin;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setCountryOfOrigin(const QString &country_of_origin) {
    m_country_of_origin = country_of_origin;
    m_country_of_origin_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_country_of_origin_Set() const{
    return m_country_of_origin_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_country_of_origin_Valid() const{
    return m_country_of_origin_isValid;
}

QList<OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiCustomFieldValueModel> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getCustomFields() const {
    return m_custom_fields;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setCustomFields(const QList<OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiCustomFieldValueModel> &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getDeliveryTime() const {
    return m_delivery_time;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setDeliveryTime(const qint32 &delivery_time) {
    m_delivery_time = delivery_time;
    m_delivery_time_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_delivery_time_Set() const{
    return m_delivery_time_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_delivery_time_Valid() const{
    return m_delivery_time_isValid;
}

QList<OAIBillbee_Interfaces_Order_MultiLanguageString> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getDescription() const {
    return m_description;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setDescription(const QList<OAIBillbee_Interfaces_Order_MultiLanguageString> &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_description_Set() const{
    return m_description_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getEan() const {
    return m_ean;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setEan(const QString &ean) {
    m_ean = ean;
    m_ean_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_ean_Set() const{
    return m_ean_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_ean_Valid() const{
    return m_ean_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getExportDescription() const {
    return m_export_description;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setExportDescription(const QString &export_description) {
    m_export_description = export_description;
    m_export_description_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_export_description_Set() const{
    return m_export_description_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_export_description_Valid() const{
    return m_export_description_isValid;
}

QList<OAIBillbee_Interfaces_Order_MultiLanguageString> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getExportDescriptionMultiLanguage() const {
    return m_export_description_multi_language;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setExportDescriptionMultiLanguage(const QList<OAIBillbee_Interfaces_Order_MultiLanguageString> &export_description_multi_language) {
    m_export_description_multi_language = export_description_multi_language;
    m_export_description_multi_language_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_export_description_multi_language_Set() const{
    return m_export_description_multi_language_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_export_description_multi_language_Valid() const{
    return m_export_description_multi_language_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getHeightCm() const {
    return m_height_cm;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setHeightCm(const double &height_cm) {
    m_height_cm = height_cm;
    m_height_cm_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_height_cm_Set() const{
    return m_height_cm_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_height_cm_Valid() const{
    return m_height_cm_isValid;
}

qint64 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getId() const {
    return m_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getImages() const {
    return m_images;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setImages(const QList<OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel> &images) {
    m_images = images;
    m_images_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_images_Set() const{
    return m_images_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_images_Valid() const{
    return m_images_isValid;
}

QList<OAIBillbee_Interfaces_Order_MultiLanguageString> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getInvoiceText() const {
    return m_invoice_text;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setInvoiceText(const QList<OAIBillbee_Interfaces_Order_MultiLanguageString> &invoice_text) {
    m_invoice_text = invoice_text;
    m_invoice_text_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_invoice_text_Set() const{
    return m_invoice_text_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_invoice_text_Valid() const{
    return m_invoice_text_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::isIsCustomizable() const {
    return m_is_customizable;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setIsCustomizable(const bool &is_customizable) {
    m_is_customizable = is_customizable;
    m_is_customizable_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_is_customizable_Set() const{
    return m_is_customizable_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_is_customizable_Valid() const{
    return m_is_customizable_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::isIsDeactivated() const {
    return m_is_deactivated;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setIsDeactivated(const bool &is_deactivated) {
    m_is_deactivated = is_deactivated;
    m_is_deactivated_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_is_deactivated_Set() const{
    return m_is_deactivated_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_is_deactivated_Valid() const{
    return m_is_deactivated_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::isIsDigital() const {
    return m_is_digital;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setIsDigital(const bool &is_digital) {
    m_is_digital = is_digital;
    m_is_digital_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_is_digital_Set() const{
    return m_is_digital_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_is_digital_Valid() const{
    return m_is_digital_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getLengthCm() const {
    return m_length_cm;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setLengthCm(const double &length_cm) {
    m_length_cm = length_cm;
    m_length_cm_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_length_cm_Set() const{
    return m_length_cm_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_length_cm_Valid() const{
    return m_length_cm_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::isLowStock() const {
    return m_low_stock;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setLowStock(const bool &low_stock) {
    m_low_stock = low_stock;
    m_low_stock_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_low_stock_Set() const{
    return m_low_stock_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_low_stock_Valid() const{
    return m_low_stock_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getManufacturer() const {
    return m_manufacturer;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setManufacturer(const QString &manufacturer) {
    m_manufacturer = manufacturer;
    m_manufacturer_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_manufacturer_Set() const{
    return m_manufacturer_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_manufacturer_Valid() const{
    return m_manufacturer_isValid;
}

QList<OAIBillbee_Interfaces_Order_MultiLanguageString> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getMaterials() const {
    return m_materials;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setMaterials(const QList<OAIBillbee_Interfaces_Order_MultiLanguageString> &materials) {
    m_materials = materials;
    m_materials_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_materials_Set() const{
    return m_materials_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_materials_Valid() const{
    return m_materials_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getOccasion() const {
    return m_occasion;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setOccasion(const qint32 &occasion) {
    m_occasion = occasion;
    m_occasion_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_occasion_Set() const{
    return m_occasion_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_occasion_Valid() const{
    return m_occasion_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getPrice() const {
    return m_price;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_price_Set() const{
    return m_price_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_price_Valid() const{
    return m_price_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getRecipient() const {
    return m_recipient;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setRecipient(const qint32 &recipient) {
    m_recipient = recipient;
    m_recipient_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_recipient_Set() const{
    return m_recipient_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_recipient_Valid() const{
    return m_recipient_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getSku() const {
    return m_sku;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sku_Valid() const{
    return m_sku_isValid;
}

qint64 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getShippingProductId() const {
    return m_shipping_product_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setShippingProductId(const qint64 &shipping_product_id) {
    m_shipping_product_id = shipping_product_id;
    m_shipping_product_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_shipping_product_id_Set() const{
    return m_shipping_product_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_shipping_product_id_Valid() const{
    return m_shipping_product_id_isValid;
}

QList<OAIBillbee_Interfaces_Order_MultiLanguageString> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getShortDescription() const {
    return m_short_description;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setShortDescription(const QList<OAIBillbee_Interfaces_Order_MultiLanguageString> &short_description) {
    m_short_description = short_description;
    m_short_description_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_short_description_Set() const{
    return m_short_description_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_short_description_Valid() const{
    return m_short_description_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getSoldAmount() const {
    return m_sold_amount;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setSoldAmount(const double &sold_amount) {
    m_sold_amount = sold_amount;
    m_sold_amount_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sold_amount_Set() const{
    return m_sold_amount_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sold_amount_Valid() const{
    return m_sold_amount_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getSoldAmountLast30Days() const {
    return m_sold_amount_last30_days;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setSoldAmountLast30Days(const double &sold_amount_last30_days) {
    m_sold_amount_last30_days = sold_amount_last30_days;
    m_sold_amount_last30_days_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sold_amount_last30_days_Set() const{
    return m_sold_amount_last30_days_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sold_amount_last30_days_Valid() const{
    return m_sold_amount_last30_days_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getSoldSumGross() const {
    return m_sold_sum_gross;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setSoldSumGross(const double &sold_sum_gross) {
    m_sold_sum_gross = sold_sum_gross;
    m_sold_sum_gross_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sold_sum_gross_Set() const{
    return m_sold_sum_gross_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sold_sum_gross_Valid() const{
    return m_sold_sum_gross_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getSoldSumGrossLast30Days() const {
    return m_sold_sum_gross_last30_days;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setSoldSumGrossLast30Days(const double &sold_sum_gross_last30_days) {
    m_sold_sum_gross_last30_days = sold_sum_gross_last30_days;
    m_sold_sum_gross_last30_days_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sold_sum_gross_last30_days_Set() const{
    return m_sold_sum_gross_last30_days_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sold_sum_gross_last30_days_Valid() const{
    return m_sold_sum_gross_last30_days_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getSoldSumNet() const {
    return m_sold_sum_net;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setSoldSumNet(const double &sold_sum_net) {
    m_sold_sum_net = sold_sum_net;
    m_sold_sum_net_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sold_sum_net_Set() const{
    return m_sold_sum_net_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sold_sum_net_Valid() const{
    return m_sold_sum_net_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getSoldSumNetLast30Days() const {
    return m_sold_sum_net_last30_days;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setSoldSumNetLast30Days(const double &sold_sum_net_last30_days) {
    m_sold_sum_net_last30_days = sold_sum_net_last30_days;
    m_sold_sum_net_last30_days_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sold_sum_net_last30_days_Set() const{
    return m_sold_sum_net_last30_days_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sold_sum_net_last30_days_Valid() const{
    return m_sold_sum_net_last30_days_isValid;
}

QList<OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getSources() const {
    return m_sources;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setSources(const QList<OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel> &sources) {
    m_sources = sources;
    m_sources_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sources_Set() const{
    return m_sources_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_sources_Valid() const{
    return m_sources_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getStockCode() const {
    return m_stock_code;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setStockCode(const QString &stock_code) {
    m_stock_code = stock_code;
    m_stock_code_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_stock_code_Set() const{
    return m_stock_code_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_stock_code_Valid() const{
    return m_stock_code_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getStockCurrent() const {
    return m_stock_current;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setStockCurrent(const double &stock_current) {
    m_stock_current = stock_current;
    m_stock_current_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_stock_current_Set() const{
    return m_stock_current_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_stock_current_Valid() const{
    return m_stock_current_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getStockDesired() const {
    return m_stock_desired;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setStockDesired(const double &stock_desired) {
    m_stock_desired = stock_desired;
    m_stock_desired_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_stock_desired_Set() const{
    return m_stock_desired_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_stock_desired_Valid() const{
    return m_stock_desired_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getStockReduceItemsPerSale() const {
    return m_stock_reduce_items_per_sale;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setStockReduceItemsPerSale(const double &stock_reduce_items_per_sale) {
    m_stock_reduce_items_per_sale = stock_reduce_items_per_sale;
    m_stock_reduce_items_per_sale_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_stock_reduce_items_per_sale_Set() const{
    return m_stock_reduce_items_per_sale_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_stock_reduce_items_per_sale_Valid() const{
    return m_stock_reduce_items_per_sale_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getStockWarning() const {
    return m_stock_warning;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setStockWarning(const double &stock_warning) {
    m_stock_warning = stock_warning;
    m_stock_warning_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_stock_warning_Set() const{
    return m_stock_warning_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_stock_warning_Valid() const{
    return m_stock_warning_isValid;
}

QList<OAIBillbee_Interfaces_BillbeeAPI_Model_StockArticleApiModel> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getStocks() const {
    return m_stocks;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setStocks(const QList<OAIBillbee_Interfaces_BillbeeAPI_Model_StockArticleApiModel> &stocks) {
    m_stocks = stocks;
    m_stocks_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_stocks_Set() const{
    return m_stocks_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_stocks_Valid() const{
    return m_stocks_isValid;
}

QList<OAIBillbee_Interfaces_Order_MultiLanguageString> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getTags() const {
    return m_tags;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setTags(const QList<OAIBillbee_Interfaces_Order_MultiLanguageString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_tags_Valid() const{
    return m_tags_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getTaricNumber() const {
    return m_taric_number;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setTaricNumber(const QString &taric_number) {
    m_taric_number = taric_number;
    m_taric_number_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_taric_number_Set() const{
    return m_taric_number_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_taric_number_Valid() const{
    return m_taric_number_isValid;
}

QList<OAIBillbee_Interfaces_Order_MultiLanguageString> OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getTitle() const {
    return m_title;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setTitle(const QList<OAIBillbee_Interfaces_Order_MultiLanguageString> &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_title_Set() const{
    return m_title_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_title_Valid() const{
    return m_title_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getType() const {
    return m_type;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setType(const qint32 &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_type_Set() const{
    return m_type_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_type_Valid() const{
    return m_type_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getUnit() const {
    return m_unit;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setUnit(const qint32 &unit) {
    m_unit = unit;
    m_unit_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_unit_Set() const{
    return m_unit_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_unit_Valid() const{
    return m_unit_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getUnitsPerItem() const {
    return m_units_per_item;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setUnitsPerItem(const double &units_per_item) {
    m_units_per_item = units_per_item;
    m_units_per_item_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_units_per_item_Set() const{
    return m_units_per_item_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_units_per_item_Valid() const{
    return m_units_per_item_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getVat1Rate() const {
    return m_vat1_rate;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setVat1Rate(const double &vat1_rate) {
    m_vat1_rate = vat1_rate;
    m_vat1_rate_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_vat1_rate_Set() const{
    return m_vat1_rate_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_vat1_rate_Valid() const{
    return m_vat1_rate_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getVat2Rate() const {
    return m_vat2_rate;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setVat2Rate(const double &vat2_rate) {
    m_vat2_rate = vat2_rate;
    m_vat2_rate_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_vat2_rate_Set() const{
    return m_vat2_rate_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_vat2_rate_Valid() const{
    return m_vat2_rate_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getVatIndex() const {
    return m_vat_index;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setVatIndex(const qint32 &vat_index) {
    m_vat_index = vat_index;
    m_vat_index_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_vat_index_Set() const{
    return m_vat_index_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_vat_index_Valid() const{
    return m_vat_index_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getWeight() const {
    return m_weight;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setWeight(const qint32 &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_weight_Valid() const{
    return m_weight_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getWeightNet() const {
    return m_weight_net;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setWeightNet(const qint32 &weight_net) {
    m_weight_net = weight_net;
    m_weight_net_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_weight_net_Set() const{
    return m_weight_net_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_weight_net_Valid() const{
    return m_weight_net_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::getWidthCm() const {
    return m_width_cm;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::setWidthCm(const double &width_cm) {
    m_width_cm = width_cm;
    m_width_cm_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_width_cm_Set() const{
    return m_width_cm_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::is_width_cm_Valid() const{
    return m_width_cm_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_basic_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_of_material.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_category1.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_category2.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_category3.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cost_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_of_origin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ean_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_description_multi_language.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_height_cm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_images.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_text.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_customizable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_deactivated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_digital_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_length_cm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_low_stock_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manufacturer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_materials.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_occasion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_description.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sold_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sold_amount_last30_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sold_sum_gross_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sold_sum_gross_last30_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sold_sum_net_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sold_sum_net_last30_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_stock_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stock_current_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stock_desired_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stock_reduce_items_per_sale_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stock_warning_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stocks.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_taric_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_units_per_item_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat1_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat2_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_net_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_width_cm_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_is_customizable_isValid && m_is_digital_isValid && m_price_isValid && m_type_isValid && m_vat1_rate_isValid && m_vat2_rate_isValid && m_vat_index_isValid && true;
}

} // namespace OpenAPI
