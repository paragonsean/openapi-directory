/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel.h
 *
 * 
 */

#ifndef OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel_H
#define OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel : public OAIObject {
public:
    OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel();
    OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel(QString json);
    ~OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutosubtractReservedAmount() const;
    void setAutosubtractReservedAmount(const bool &autosubtract_reserved_amount);
    bool is_autosubtract_reserved_amount_Set() const;
    bool is_autosubtract_reserved_amount_Valid() const;

    qint64 getBillbeeId() const;
    void setBillbeeId(const qint64 &billbee_id);
    bool is_billbee_id_Set() const;
    bool is_billbee_id_Valid() const;

    double getDeltaQuantity() const;
    void setDeltaQuantity(const double &delta_quantity);
    bool is_delta_quantity_Set() const;
    bool is_delta_quantity_Valid() const;

    bool isForceSendStockToShops() const;
    void setForceSendStockToShops(const bool &force_send_stock_to_shops);
    bool is_force_send_stock_to_shops_Set() const;
    bool is_force_send_stock_to_shops_Valid() const;

    double getNewQuantity() const;
    void setNewQuantity(const double &new_quantity);
    bool is_new_quantity_Set() const;
    bool is_new_quantity_Valid() const;

    double getOldQuantity() const;
    void setOldQuantity(const double &old_quantity);
    bool is_old_quantity_Set() const;
    bool is_old_quantity_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    qint64 getStockId() const;
    void setStockId(const qint64 &stock_id);
    bool is_stock_id_Set() const;
    bool is_stock_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_autosubtract_reserved_amount;
    bool m_autosubtract_reserved_amount_isSet;
    bool m_autosubtract_reserved_amount_isValid;

    qint64 m_billbee_id;
    bool m_billbee_id_isSet;
    bool m_billbee_id_isValid;

    double m_delta_quantity;
    bool m_delta_quantity_isSet;
    bool m_delta_quantity_isValid;

    bool m_force_send_stock_to_shops;
    bool m_force_send_stock_to_shops_isSet;
    bool m_force_send_stock_to_shops_isValid;

    double m_new_quantity;
    bool m_new_quantity_isSet;
    bool m_new_quantity_isValid;

    double m_old_quantity;
    bool m_old_quantity_isSet;
    bool m_old_quantity_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    qint64 m_stock_id;
    bool m_stock_id_isSet;
    bool m_stock_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel)

#endif // OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel_H
