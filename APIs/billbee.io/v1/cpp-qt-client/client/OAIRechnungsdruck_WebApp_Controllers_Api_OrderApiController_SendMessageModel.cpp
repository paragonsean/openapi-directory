/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel() {
    this->initializeModel();
}

OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::~OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel() {}

void OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::initializeModel() {

    m_alternative_mail_isSet = false;
    m_alternative_mail_isValid = false;

    m_body_isSet = false;
    m_body_isValid = false;

    m_send_mode_isSet = false;
    m_send_mode_isValid = false;

    m_subject_isSet = false;
    m_subject_isValid = false;
}

void OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::fromJsonObject(QJsonObject json) {

    m_alternative_mail_isValid = ::OpenAPI::fromJsonValue(m_alternative_mail, json[QString("AlternativeMail")]);
    m_alternative_mail_isSet = !json[QString("AlternativeMail")].isNull() && m_alternative_mail_isValid;

    m_body_isValid = ::OpenAPI::fromJsonValue(m_body, json[QString("Body")]);
    m_body_isSet = !json[QString("Body")].isNull() && m_body_isValid;

    m_send_mode_isValid = ::OpenAPI::fromJsonValue(m_send_mode, json[QString("SendMode")]);
    m_send_mode_isSet = !json[QString("SendMode")].isNull() && m_send_mode_isValid;

    m_subject_isValid = ::OpenAPI::fromJsonValue(m_subject, json[QString("Subject")]);
    m_subject_isSet = !json[QString("Subject")].isNull() && m_subject_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::asJsonObject() const {
    QJsonObject obj;
    if (m_alternative_mail_isSet) {
        obj.insert(QString("AlternativeMail"), ::OpenAPI::toJsonValue(m_alternative_mail));
    }
    if (m_body.size() > 0) {
        obj.insert(QString("Body"), ::OpenAPI::toJsonValue(m_body));
    }
    if (m_send_mode_isSet) {
        obj.insert(QString("SendMode"), ::OpenAPI::toJsonValue(m_send_mode));
    }
    if (m_subject.size() > 0) {
        obj.insert(QString("Subject"), ::OpenAPI::toJsonValue(m_subject));
    }
    return obj;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::getAlternativeMail() const {
    return m_alternative_mail;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::setAlternativeMail(const QString &alternative_mail) {
    m_alternative_mail = alternative_mail;
    m_alternative_mail_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::is_alternative_mail_Set() const{
    return m_alternative_mail_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::is_alternative_mail_Valid() const{
    return m_alternative_mail_isValid;
}

QList<OAIBillbee_Interfaces_Order_MultiLanguageString> OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::getBody() const {
    return m_body;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::setBody(const QList<OAIBillbee_Interfaces_Order_MultiLanguageString> &body) {
    m_body = body;
    m_body_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::is_body_Set() const{
    return m_body_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::is_body_Valid() const{
    return m_body_isValid;
}

qint32 OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::getSendMode() const {
    return m_send_mode;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::setSendMode(const qint32 &send_mode) {
    m_send_mode = send_mode;
    m_send_mode_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::is_send_mode_Set() const{
    return m_send_mode_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::is_send_mode_Valid() const{
    return m_send_mode_isValid;
}

QList<OAIBillbee_Interfaces_Order_MultiLanguageString> OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::getSubject() const {
    return m_subject;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::setSubject(const QList<OAIBillbee_Interfaces_Order_MultiLanguageString> &subject) {
    m_subject = subject;
    m_subject_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::is_subject_Set() const{
    return m_subject_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::is_subject_Valid() const{
    return m_subject_isValid;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alternative_mail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_body.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
