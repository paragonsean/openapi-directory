/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment.h
 *
 * 
 */

#ifndef OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment_H
#define OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment : public OAIObject {
public:
    OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment();
    OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment(QString json);
    ~OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getBillbeeId() const;
    void setBillbeeId(const qint64 &billbee_id);
    bool is_billbee_id_Set() const;
    bool is_billbee_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDateTime getPayDate() const;
    void setPayDate(const QDateTime &pay_date);
    bool is_pay_date_Set() const;
    bool is_pay_date_Valid() const;

    double getPayValue() const;
    void setPayValue(const double &pay_value);
    bool is_pay_value_Set() const;
    bool is_pay_value_Valid() const;

    qint32 getPaymentType() const;
    void setPaymentType(const qint32 &payment_type);
    bool is_payment_type_Set() const;
    bool is_payment_type_Valid() const;

    QString getPurpose() const;
    void setPurpose(const QString &purpose);
    bool is_purpose_Set() const;
    bool is_purpose_Valid() const;

    QString getSourceTechnology() const;
    void setSourceTechnology(const QString &source_technology);
    bool is_source_technology_Set() const;
    bool is_source_technology_Valid() const;

    QString getSourceText() const;
    void setSourceText(const QString &source_text);
    bool is_source_text_Set() const;
    bool is_source_text_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_billbee_id;
    bool m_billbee_id_isSet;
    bool m_billbee_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDateTime m_pay_date;
    bool m_pay_date_isSet;
    bool m_pay_date_isValid;

    double m_pay_value;
    bool m_pay_value_isSet;
    bool m_pay_value_isValid;

    qint32 m_payment_type;
    bool m_payment_type_isSet;
    bool m_payment_type_isValid;

    QString m_purpose;
    bool m_purpose_isSet;
    bool m_purpose_isValid;

    QString m_source_technology;
    bool m_source_technology_isSet;
    bool m_source_technology_isValid;

    QString m_source_text;
    bool m_source_text_isSet;
    bool m_source_text_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment)

#endif // OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment_H
