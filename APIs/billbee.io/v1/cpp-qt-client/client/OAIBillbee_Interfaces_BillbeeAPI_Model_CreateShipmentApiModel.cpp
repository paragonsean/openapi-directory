/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel() {
    this->initializeModel();
}

OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::~OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel() {}

void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::initializeModel() {

    m_client_reference_isSet = false;
    m_client_reference_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_customer_number_isSet = false;
    m_customer_number_isValid = false;

    m_dimension_isSet = false;
    m_dimension_isValid = false;

    m_order_currency_code_isSet = false;
    m_order_currency_code_isValid = false;

    m_order_sum_isSet = false;
    m_order_sum_isValid = false;

    m_printer_id_for_export_docs_isSet = false;
    m_printer_id_for_export_docs_isValid = false;

    m_printer_name_isSet = false;
    m_printer_name_isValid = false;

    m_product_code_isSet = false;
    m_product_code_isValid = false;

    m_provider_name_isSet = false;
    m_provider_name_isValid = false;

    m_receiver_address_isSet = false;
    m_receiver_address_isValid = false;

    m_services_isSet = false;
    m_services_isValid = false;

    m_ship_date_isSet = false;
    m_ship_date_isValid = false;

    m_total_net_isSet = false;
    m_total_net_isValid = false;

    m_weight_in_gram_isSet = false;
    m_weight_in_gram_isValid = false;

    m_shipping_carrier_isSet = false;
    m_shipping_carrier_isValid = false;
}

void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::fromJsonObject(QJsonObject json) {

    m_client_reference_isValid = ::OpenAPI::fromJsonValue(m_client_reference, json[QString("ClientReference")]);
    m_client_reference_isSet = !json[QString("ClientReference")].isNull() && m_client_reference_isValid;

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("Content")]);
    m_content_isSet = !json[QString("Content")].isNull() && m_content_isValid;

    m_customer_number_isValid = ::OpenAPI::fromJsonValue(m_customer_number, json[QString("CustomerNumber")]);
    m_customer_number_isSet = !json[QString("CustomerNumber")].isNull() && m_customer_number_isValid;

    m_dimension_isValid = ::OpenAPI::fromJsonValue(m_dimension, json[QString("Dimension")]);
    m_dimension_isSet = !json[QString("Dimension")].isNull() && m_dimension_isValid;

    m_order_currency_code_isValid = ::OpenAPI::fromJsonValue(m_order_currency_code, json[QString("OrderCurrencyCode")]);
    m_order_currency_code_isSet = !json[QString("OrderCurrencyCode")].isNull() && m_order_currency_code_isValid;

    m_order_sum_isValid = ::OpenAPI::fromJsonValue(m_order_sum, json[QString("OrderSum")]);
    m_order_sum_isSet = !json[QString("OrderSum")].isNull() && m_order_sum_isValid;

    m_printer_id_for_export_docs_isValid = ::OpenAPI::fromJsonValue(m_printer_id_for_export_docs, json[QString("PrinterIdForExportDocs")]);
    m_printer_id_for_export_docs_isSet = !json[QString("PrinterIdForExportDocs")].isNull() && m_printer_id_for_export_docs_isValid;

    m_printer_name_isValid = ::OpenAPI::fromJsonValue(m_printer_name, json[QString("PrinterName")]);
    m_printer_name_isSet = !json[QString("PrinterName")].isNull() && m_printer_name_isValid;

    m_product_code_isValid = ::OpenAPI::fromJsonValue(m_product_code, json[QString("ProductCode")]);
    m_product_code_isSet = !json[QString("ProductCode")].isNull() && m_product_code_isValid;

    m_provider_name_isValid = ::OpenAPI::fromJsonValue(m_provider_name, json[QString("ProviderName")]);
    m_provider_name_isSet = !json[QString("ProviderName")].isNull() && m_provider_name_isValid;

    m_receiver_address_isValid = ::OpenAPI::fromJsonValue(m_receiver_address, json[QString("ReceiverAddress")]);
    m_receiver_address_isSet = !json[QString("ReceiverAddress")].isNull() && m_receiver_address_isValid;

    m_services_isValid = ::OpenAPI::fromJsonValue(m_services, json[QString("Services")]);
    m_services_isSet = !json[QString("Services")].isNull() && m_services_isValid;

    m_ship_date_isValid = ::OpenAPI::fromJsonValue(m_ship_date, json[QString("ShipDate")]);
    m_ship_date_isSet = !json[QString("ShipDate")].isNull() && m_ship_date_isValid;

    m_total_net_isValid = ::OpenAPI::fromJsonValue(m_total_net, json[QString("TotalNet")]);
    m_total_net_isSet = !json[QString("TotalNet")].isNull() && m_total_net_isValid;

    m_weight_in_gram_isValid = ::OpenAPI::fromJsonValue(m_weight_in_gram, json[QString("WeightInGram")]);
    m_weight_in_gram_isSet = !json[QString("WeightInGram")].isNull() && m_weight_in_gram_isValid;

    m_shipping_carrier_isValid = ::OpenAPI::fromJsonValue(m_shipping_carrier, json[QString("shippingCarrier")]);
    m_shipping_carrier_isSet = !json[QString("shippingCarrier")].isNull() && m_shipping_carrier_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::asJsonObject() const {
    QJsonObject obj;
    if (m_client_reference_isSet) {
        obj.insert(QString("ClientReference"), ::OpenAPI::toJsonValue(m_client_reference));
    }
    if (m_content_isSet) {
        obj.insert(QString("Content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_customer_number_isSet) {
        obj.insert(QString("CustomerNumber"), ::OpenAPI::toJsonValue(m_customer_number));
    }
    if (m_dimension.isSet()) {
        obj.insert(QString("Dimension"), ::OpenAPI::toJsonValue(m_dimension));
    }
    if (m_order_currency_code_isSet) {
        obj.insert(QString("OrderCurrencyCode"), ::OpenAPI::toJsonValue(m_order_currency_code));
    }
    if (m_order_sum_isSet) {
        obj.insert(QString("OrderSum"), ::OpenAPI::toJsonValue(m_order_sum));
    }
    if (m_printer_id_for_export_docs_isSet) {
        obj.insert(QString("PrinterIdForExportDocs"), ::OpenAPI::toJsonValue(m_printer_id_for_export_docs));
    }
    if (m_printer_name_isSet) {
        obj.insert(QString("PrinterName"), ::OpenAPI::toJsonValue(m_printer_name));
    }
    if (m_product_code_isSet) {
        obj.insert(QString("ProductCode"), ::OpenAPI::toJsonValue(m_product_code));
    }
    if (m_provider_name_isSet) {
        obj.insert(QString("ProviderName"), ::OpenAPI::toJsonValue(m_provider_name));
    }
    if (m_receiver_address.isSet()) {
        obj.insert(QString("ReceiverAddress"), ::OpenAPI::toJsonValue(m_receiver_address));
    }
    if (m_services.size() > 0) {
        obj.insert(QString("Services"), ::OpenAPI::toJsonValue(m_services));
    }
    if (m_ship_date_isSet) {
        obj.insert(QString("ShipDate"), ::OpenAPI::toJsonValue(m_ship_date));
    }
    if (m_total_net_isSet) {
        obj.insert(QString("TotalNet"), ::OpenAPI::toJsonValue(m_total_net));
    }
    if (m_weight_in_gram_isSet) {
        obj.insert(QString("WeightInGram"), ::OpenAPI::toJsonValue(m_weight_in_gram));
    }
    if (m_shipping_carrier_isSet) {
        obj.insert(QString("shippingCarrier"), ::OpenAPI::toJsonValue(m_shipping_carrier));
    }
    return obj;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getClientReference() const {
    return m_client_reference;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setClientReference(const QString &client_reference) {
    m_client_reference = client_reference;
    m_client_reference_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_client_reference_Set() const{
    return m_client_reference_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_client_reference_Valid() const{
    return m_client_reference_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getContent() const {
    return m_content;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_content_Set() const{
    return m_content_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_content_Valid() const{
    return m_content_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getCustomerNumber() const {
    return m_customer_number;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setCustomerNumber(const QString &customer_number) {
    m_customer_number = customer_number;
    m_customer_number_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_customer_number_Set() const{
    return m_customer_number_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_customer_number_Valid() const{
    return m_customer_number_isValid;
}

OAIBillbee_Interfaces_Shipping_ShipmentData_Dimensions OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getDimension() const {
    return m_dimension;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setDimension(const OAIBillbee_Interfaces_Shipping_ShipmentData_Dimensions &dimension) {
    m_dimension = dimension;
    m_dimension_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_dimension_Set() const{
    return m_dimension_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_dimension_Valid() const{
    return m_dimension_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getOrderCurrencyCode() const {
    return m_order_currency_code;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setOrderCurrencyCode(const QString &order_currency_code) {
    m_order_currency_code = order_currency_code;
    m_order_currency_code_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_order_currency_code_Set() const{
    return m_order_currency_code_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_order_currency_code_Valid() const{
    return m_order_currency_code_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getOrderSum() const {
    return m_order_sum;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setOrderSum(const double &order_sum) {
    m_order_sum = order_sum;
    m_order_sum_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_order_sum_Set() const{
    return m_order_sum_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_order_sum_Valid() const{
    return m_order_sum_isValid;
}

qint64 OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getPrinterIdForExportDocs() const {
    return m_printer_id_for_export_docs;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setPrinterIdForExportDocs(const qint64 &printer_id_for_export_docs) {
    m_printer_id_for_export_docs = printer_id_for_export_docs;
    m_printer_id_for_export_docs_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_printer_id_for_export_docs_Set() const{
    return m_printer_id_for_export_docs_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_printer_id_for_export_docs_Valid() const{
    return m_printer_id_for_export_docs_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getPrinterName() const {
    return m_printer_name;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setPrinterName(const QString &printer_name) {
    m_printer_name = printer_name;
    m_printer_name_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_printer_name_Set() const{
    return m_printer_name_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_printer_name_Valid() const{
    return m_printer_name_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getProductCode() const {
    return m_product_code;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setProductCode(const QString &product_code) {
    m_product_code = product_code;
    m_product_code_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_product_code_Set() const{
    return m_product_code_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_product_code_Valid() const{
    return m_product_code_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getProviderName() const {
    return m_provider_name;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setProviderName(const QString &provider_name) {
    m_provider_name = provider_name;
    m_provider_name_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_provider_name_Set() const{
    return m_provider_name_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_provider_name_Valid() const{
    return m_provider_name_isValid;
}

OAIBillbee_Interfaces_BillbeeAPI_Model_ShipmentAddressApiModel OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getReceiverAddress() const {
    return m_receiver_address;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setReceiverAddress(const OAIBillbee_Interfaces_BillbeeAPI_Model_ShipmentAddressApiModel &receiver_address) {
    m_receiver_address = receiver_address;
    m_receiver_address_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_receiver_address_Set() const{
    return m_receiver_address_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_receiver_address_Valid() const{
    return m_receiver_address_isValid;
}

QList<OAIBillbee_Interfaces_Shipping_ProductService> OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getServices() const {
    return m_services;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setServices(const QList<OAIBillbee_Interfaces_Shipping_ProductService> &services) {
    m_services = services;
    m_services_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_services_Set() const{
    return m_services_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_services_Valid() const{
    return m_services_isValid;
}

QDateTime OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getShipDate() const {
    return m_ship_date;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setShipDate(const QDateTime &ship_date) {
    m_ship_date = ship_date;
    m_ship_date_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_ship_date_Set() const{
    return m_ship_date_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_ship_date_Valid() const{
    return m_ship_date_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getTotalNet() const {
    return m_total_net;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setTotalNet(const double &total_net) {
    m_total_net = total_net;
    m_total_net_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_total_net_Set() const{
    return m_total_net_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_total_net_Valid() const{
    return m_total_net_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getWeightInGram() const {
    return m_weight_in_gram;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setWeightInGram(const double &weight_in_gram) {
    m_weight_in_gram = weight_in_gram;
    m_weight_in_gram_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_weight_in_gram_Set() const{
    return m_weight_in_gram_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_weight_in_gram_Valid() const{
    return m_weight_in_gram_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::getShippingCarrier() const {
    return m_shipping_carrier;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::setShippingCarrier(const qint32 &shipping_carrier) {
    m_shipping_carrier = shipping_carrier;
    m_shipping_carrier_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_shipping_carrier_Set() const{
    return m_shipping_carrier_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::is_shipping_carrier_Valid() const{
    return m_shipping_carrier_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimension.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_sum_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_printer_id_for_export_docs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_printer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_services.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_net_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_in_gram_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_carrier_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
