/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabelResult.h
 *
 * 
 */

#ifndef OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabelResult_H
#define OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabelResult_H

#include <QJsonObject>

#include <QByteArray>
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabelResult : public OAIObject {
public:
    OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabelResult();
    OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabelResult(QString json);
    ~OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabelResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCarrier() const;
    void setCarrier(const QString &carrier);
    bool is_carrier_Set() const;
    bool is_carrier_Valid() const;

    QByteArray getExportDocsPdf() const;
    void setExportDocsPdf(const QByteArray &export_docs_pdf);
    bool is_export_docs_pdf_Set() const;
    bool is_export_docs_pdf_Valid() const;

    QByteArray getLabelDataPdf() const;
    void setLabelDataPdf(const QByteArray &label_data_pdf);
    bool is_label_data_pdf_Set() const;
    bool is_label_data_pdf_Valid() const;

    qint64 getOrderId() const;
    void setOrderId(const qint64 &order_id);
    bool is_order_id_Set() const;
    bool is_order_id_Valid() const;

    QString getOrderReference() const;
    void setOrderReference(const QString &order_reference);
    bool is_order_reference_Set() const;
    bool is_order_reference_Valid() const;

    QDateTime getShippingDate() const;
    void setShippingDate(const QDateTime &shipping_date);
    bool is_shipping_date_Set() const;
    bool is_shipping_date_Valid() const;

    QString getShippingId() const;
    void setShippingId(const QString &shipping_id);
    bool is_shipping_id_Set() const;
    bool is_shipping_id_Valid() const;

    QString getTrackingUrl() const;
    void setTrackingUrl(const QString &tracking_url);
    bool is_tracking_url_Set() const;
    bool is_tracking_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_carrier;
    bool m_carrier_isSet;
    bool m_carrier_isValid;

    QByteArray m_export_docs_pdf;
    bool m_export_docs_pdf_isSet;
    bool m_export_docs_pdf_isValid;

    QByteArray m_label_data_pdf;
    bool m_label_data_pdf_isSet;
    bool m_label_data_pdf_isValid;

    qint64 m_order_id;
    bool m_order_id_isSet;
    bool m_order_id_isValid;

    QString m_order_reference;
    bool m_order_reference_isSet;
    bool m_order_reference_isValid;

    QDateTime m_shipping_date;
    bool m_shipping_date_isSet;
    bool m_shipping_date_isValid;

    QString m_shipping_id;
    bool m_shipping_id_isSet;
    bool m_shipping_id_isValid;

    QString m_tracking_url;
    bool m_tracking_url_isSet;
    bool m_tracking_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabelResult)

#endif // OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabelResult_H
