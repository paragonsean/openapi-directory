/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment() {
    this->initializeModel();
}

OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::~OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment() {}

void OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::initializeModel() {

    m_billbee_id_isSet = false;
    m_billbee_id_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_shipment_type_isSet = false;
    m_shipment_type_isValid = false;

    m_shipper_isSet = false;
    m_shipper_isValid = false;

    m_shipping_carrier_isSet = false;
    m_shipping_carrier_isValid = false;

    m_shipping_id_isSet = false;
    m_shipping_id_isValid = false;

    m_shipping_provider_id_isSet = false;
    m_shipping_provider_id_isValid = false;

    m_shipping_provider_product_id_isSet = false;
    m_shipping_provider_product_id_isValid = false;

    m_tracking_url_isSet = false;
    m_tracking_url_isValid = false;
}

void OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::fromJsonObject(QJsonObject json) {

    m_billbee_id_isValid = ::OpenAPI::fromJsonValue(m_billbee_id, json[QString("BillbeeId")]);
    m_billbee_id_isSet = !json[QString("BillbeeId")].isNull() && m_billbee_id_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("Created")]);
    m_created_isSet = !json[QString("Created")].isNull() && m_created_isValid;

    m_shipment_type_isValid = ::OpenAPI::fromJsonValue(m_shipment_type, json[QString("ShipmentType")]);
    m_shipment_type_isSet = !json[QString("ShipmentType")].isNull() && m_shipment_type_isValid;

    m_shipper_isValid = ::OpenAPI::fromJsonValue(m_shipper, json[QString("Shipper")]);
    m_shipper_isSet = !json[QString("Shipper")].isNull() && m_shipper_isValid;

    m_shipping_carrier_isValid = ::OpenAPI::fromJsonValue(m_shipping_carrier, json[QString("ShippingCarrier")]);
    m_shipping_carrier_isSet = !json[QString("ShippingCarrier")].isNull() && m_shipping_carrier_isValid;

    m_shipping_id_isValid = ::OpenAPI::fromJsonValue(m_shipping_id, json[QString("ShippingId")]);
    m_shipping_id_isSet = !json[QString("ShippingId")].isNull() && m_shipping_id_isValid;

    m_shipping_provider_id_isValid = ::OpenAPI::fromJsonValue(m_shipping_provider_id, json[QString("ShippingProviderId")]);
    m_shipping_provider_id_isSet = !json[QString("ShippingProviderId")].isNull() && m_shipping_provider_id_isValid;

    m_shipping_provider_product_id_isValid = ::OpenAPI::fromJsonValue(m_shipping_provider_product_id, json[QString("ShippingProviderProductId")]);
    m_shipping_provider_product_id_isSet = !json[QString("ShippingProviderProductId")].isNull() && m_shipping_provider_product_id_isValid;

    m_tracking_url_isValid = ::OpenAPI::fromJsonValue(m_tracking_url, json[QString("TrackingUrl")]);
    m_tracking_url_isSet = !json[QString("TrackingUrl")].isNull() && m_tracking_url_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::asJsonObject() const {
    QJsonObject obj;
    if (m_billbee_id_isSet) {
        obj.insert(QString("BillbeeId"), ::OpenAPI::toJsonValue(m_billbee_id));
    }
    if (m_created_isSet) {
        obj.insert(QString("Created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_shipment_type_isSet) {
        obj.insert(QString("ShipmentType"), ::OpenAPI::toJsonValue(m_shipment_type));
    }
    if (m_shipper_isSet) {
        obj.insert(QString("Shipper"), ::OpenAPI::toJsonValue(m_shipper));
    }
    if (m_shipping_carrier_isSet) {
        obj.insert(QString("ShippingCarrier"), ::OpenAPI::toJsonValue(m_shipping_carrier));
    }
    if (m_shipping_id_isSet) {
        obj.insert(QString("ShippingId"), ::OpenAPI::toJsonValue(m_shipping_id));
    }
    if (m_shipping_provider_id_isSet) {
        obj.insert(QString("ShippingProviderId"), ::OpenAPI::toJsonValue(m_shipping_provider_id));
    }
    if (m_shipping_provider_product_id_isSet) {
        obj.insert(QString("ShippingProviderProductId"), ::OpenAPI::toJsonValue(m_shipping_provider_product_id));
    }
    if (m_tracking_url_isSet) {
        obj.insert(QString("TrackingUrl"), ::OpenAPI::toJsonValue(m_tracking_url));
    }
    return obj;
}

qint64 OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::getBillbeeId() const {
    return m_billbee_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::setBillbeeId(const qint64 &billbee_id) {
    m_billbee_id = billbee_id;
    m_billbee_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_billbee_id_Set() const{
    return m_billbee_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_billbee_id_Valid() const{
    return m_billbee_id_isValid;
}

QDateTime OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::getCreated() const {
    return m_created;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::setCreated(const QDateTime &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_created_Set() const{
    return m_created_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_created_Valid() const{
    return m_created_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::getShipmentType() const {
    return m_shipment_type;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::setShipmentType(const qint32 &shipment_type) {
    m_shipment_type = shipment_type;
    m_shipment_type_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_shipment_type_Set() const{
    return m_shipment_type_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_shipment_type_Valid() const{
    return m_shipment_type_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::getShipper() const {
    return m_shipper;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::setShipper(const QString &shipper) {
    m_shipper = shipper;
    m_shipper_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_shipper_Set() const{
    return m_shipper_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_shipper_Valid() const{
    return m_shipper_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::getShippingCarrier() const {
    return m_shipping_carrier;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::setShippingCarrier(const qint32 &shipping_carrier) {
    m_shipping_carrier = shipping_carrier;
    m_shipping_carrier_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_shipping_carrier_Set() const{
    return m_shipping_carrier_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_shipping_carrier_Valid() const{
    return m_shipping_carrier_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::getShippingId() const {
    return m_shipping_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::setShippingId(const QString &shipping_id) {
    m_shipping_id = shipping_id;
    m_shipping_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_shipping_id_Set() const{
    return m_shipping_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_shipping_id_Valid() const{
    return m_shipping_id_isValid;
}

qint64 OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::getShippingProviderId() const {
    return m_shipping_provider_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::setShippingProviderId(const qint64 &shipping_provider_id) {
    m_shipping_provider_id = shipping_provider_id;
    m_shipping_provider_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_shipping_provider_id_Set() const{
    return m_shipping_provider_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_shipping_provider_id_Valid() const{
    return m_shipping_provider_id_isValid;
}

qint64 OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::getShippingProviderProductId() const {
    return m_shipping_provider_product_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::setShippingProviderProductId(const qint64 &shipping_provider_product_id) {
    m_shipping_provider_product_id = shipping_provider_product_id;
    m_shipping_provider_product_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_shipping_provider_product_id_Set() const{
    return m_shipping_provider_product_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_shipping_provider_product_id_Valid() const{
    return m_shipping_provider_product_id_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::getTrackingUrl() const {
    return m_tracking_url;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::setTrackingUrl(const QString &tracking_url) {
    m_tracking_url = tracking_url;
    m_tracking_url_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_tracking_url_Set() const{
    return m_tracking_url_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::is_tracking_url_Valid() const{
    return m_tracking_url_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billbee_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipper_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_carrier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_provider_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_provider_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_Shipment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
