/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel.h
 *
 * 
 */

#ifndef OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel_H
#define OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel_H

#include <QJsonObject>

#include "OAIBillbee_Interfaces_BillbeeAPI_Model_ShipmentAddressApiModel.h"
#include "OAIBillbee_Interfaces_Shipping_ProductService.h"
#include "OAIBillbee_Interfaces_Shipping_ShipmentData_Dimensions.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBillbee_Interfaces_Shipping_ShipmentData_Dimensions;
class OAIBillbee_Interfaces_BillbeeAPI_Model_ShipmentAddressApiModel;
class OAIBillbee_Interfaces_Shipping_ProductService;

class OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel : public OAIObject {
public:
    OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel();
    OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel(QString json);
    ~OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientReference() const;
    void setClientReference(const QString &client_reference);
    bool is_client_reference_Set() const;
    bool is_client_reference_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QString getCustomerNumber() const;
    void setCustomerNumber(const QString &customer_number);
    bool is_customer_number_Set() const;
    bool is_customer_number_Valid() const;

    OAIBillbee_Interfaces_Shipping_ShipmentData_Dimensions getDimension() const;
    void setDimension(const OAIBillbee_Interfaces_Shipping_ShipmentData_Dimensions &dimension);
    bool is_dimension_Set() const;
    bool is_dimension_Valid() const;

    QString getOrderCurrencyCode() const;
    void setOrderCurrencyCode(const QString &order_currency_code);
    bool is_order_currency_code_Set() const;
    bool is_order_currency_code_Valid() const;

    double getOrderSum() const;
    void setOrderSum(const double &order_sum);
    bool is_order_sum_Set() const;
    bool is_order_sum_Valid() const;

    qint64 getPrinterIdForExportDocs() const;
    void setPrinterIdForExportDocs(const qint64 &printer_id_for_export_docs);
    bool is_printer_id_for_export_docs_Set() const;
    bool is_printer_id_for_export_docs_Valid() const;

    QString getPrinterName() const;
    void setPrinterName(const QString &printer_name);
    bool is_printer_name_Set() const;
    bool is_printer_name_Valid() const;

    QString getProductCode() const;
    void setProductCode(const QString &product_code);
    bool is_product_code_Set() const;
    bool is_product_code_Valid() const;

    QString getProviderName() const;
    void setProviderName(const QString &provider_name);
    bool is_provider_name_Set() const;
    bool is_provider_name_Valid() const;

    OAIBillbee_Interfaces_BillbeeAPI_Model_ShipmentAddressApiModel getReceiverAddress() const;
    void setReceiverAddress(const OAIBillbee_Interfaces_BillbeeAPI_Model_ShipmentAddressApiModel &receiver_address);
    bool is_receiver_address_Set() const;
    bool is_receiver_address_Valid() const;

    QList<OAIBillbee_Interfaces_Shipping_ProductService> getServices() const;
    void setServices(const QList<OAIBillbee_Interfaces_Shipping_ProductService> &services);
    bool is_services_Set() const;
    bool is_services_Valid() const;

    QDateTime getShipDate() const;
    void setShipDate(const QDateTime &ship_date);
    bool is_ship_date_Set() const;
    bool is_ship_date_Valid() const;

    double getTotalNet() const;
    void setTotalNet(const double &total_net);
    bool is_total_net_Set() const;
    bool is_total_net_Valid() const;

    double getWeightInGram() const;
    void setWeightInGram(const double &weight_in_gram);
    bool is_weight_in_gram_Set() const;
    bool is_weight_in_gram_Valid() const;

    qint32 getShippingCarrier() const;
    void setShippingCarrier(const qint32 &shipping_carrier);
    bool is_shipping_carrier_Set() const;
    bool is_shipping_carrier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_reference;
    bool m_client_reference_isSet;
    bool m_client_reference_isValid;

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QString m_customer_number;
    bool m_customer_number_isSet;
    bool m_customer_number_isValid;

    OAIBillbee_Interfaces_Shipping_ShipmentData_Dimensions m_dimension;
    bool m_dimension_isSet;
    bool m_dimension_isValid;

    QString m_order_currency_code;
    bool m_order_currency_code_isSet;
    bool m_order_currency_code_isValid;

    double m_order_sum;
    bool m_order_sum_isSet;
    bool m_order_sum_isValid;

    qint64 m_printer_id_for_export_docs;
    bool m_printer_id_for_export_docs_isSet;
    bool m_printer_id_for_export_docs_isValid;

    QString m_printer_name;
    bool m_printer_name_isSet;
    bool m_printer_name_isValid;

    QString m_product_code;
    bool m_product_code_isSet;
    bool m_product_code_isValid;

    QString m_provider_name;
    bool m_provider_name_isSet;
    bool m_provider_name_isValid;

    OAIBillbee_Interfaces_BillbeeAPI_Model_ShipmentAddressApiModel m_receiver_address;
    bool m_receiver_address_isSet;
    bool m_receiver_address_isValid;

    QList<OAIBillbee_Interfaces_Shipping_ProductService> m_services;
    bool m_services_isSet;
    bool m_services_isValid;

    QDateTime m_ship_date;
    bool m_ship_date_isSet;
    bool m_ship_date_isValid;

    double m_total_net;
    bool m_total_net_isSet;
    bool m_total_net_isValid;

    double m_weight_in_gram;
    bool m_weight_in_gram_isSet;
    bool m_weight_in_gram_isValid;

    qint32 m_shipping_carrier;
    bool m_shipping_carrier_isSet;
    bool m_shipping_carrier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel)

#endif // OAIBillbee_Interfaces_BillbeeAPI_Model_CreateShipmentApiModel_H
