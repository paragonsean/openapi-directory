/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_() {
    this->initializeModel();
}

OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::~OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_() {}

void OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::initializeModel() {

    m_page_isSet = false;
    m_page_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_total_pages_isSet = false;
    m_total_pages_isValid = false;

    m_total_rows_isSet = false;
    m_total_rows_isValid = false;
}

void OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::fromJsonObject(QJsonObject json) {

    m_page_isValid = ::OpenAPI::fromJsonValue(m_page, json[QString("Page")]);
    m_page_isSet = !json[QString("Page")].isNull() && m_page_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("PageSize")]);
    m_page_size_isSet = !json[QString("PageSize")].isNull() && m_page_size_isValid;

    m_total_pages_isValid = ::OpenAPI::fromJsonValue(m_total_pages, json[QString("TotalPages")]);
    m_total_pages_isSet = !json[QString("TotalPages")].isNull() && m_total_pages_isValid;

    m_total_rows_isValid = ::OpenAPI::fromJsonValue(m_total_rows, json[QString("TotalRows")]);
    m_total_rows_isSet = !json[QString("TotalRows")].isNull() && m_total_rows_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::asJsonObject() const {
    QJsonObject obj;
    if (m_page_isSet) {
        obj.insert(QString("Page"), ::OpenAPI::toJsonValue(m_page));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("PageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_total_pages_isSet) {
        obj.insert(QString("TotalPages"), ::OpenAPI::toJsonValue(m_total_pages));
    }
    if (m_total_rows_isSet) {
        obj.insert(QString("TotalRows"), ::OpenAPI::toJsonValue(m_total_rows));
    }
    return obj;
}

qint32 OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::getPage() const {
    return m_page;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::setPage(const qint32 &page) {
    m_page = page;
    m_page_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::is_page_Set() const{
    return m_page_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::is_page_Valid() const{
    return m_page_isValid;
}

qint32 OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::getPageSize() const {
    return m_page_size;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::is_page_size_Valid() const{
    return m_page_size_isValid;
}

qint32 OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::getTotalPages() const {
    return m_total_pages;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::setTotalPages(const qint32 &total_pages) {
    m_total_pages = total_pages;
    m_total_pages_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::is_total_pages_Set() const{
    return m_total_pages_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::is_total_pages_Valid() const{
    return m_total_pages_isValid;
}

qint32 OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::getTotalRows() const {
    return m_total_rows;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::setTotalRows(const qint32 &total_rows) {
    m_total_rows = total_rows;
    m_total_rows_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::is_total_rows_Set() const{
    return m_total_rows_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::is_total_rows_Valid() const{
    return m_total_rows_isValid;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_pages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_rows_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_PagingInformation_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_CustomerApiModel_::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
