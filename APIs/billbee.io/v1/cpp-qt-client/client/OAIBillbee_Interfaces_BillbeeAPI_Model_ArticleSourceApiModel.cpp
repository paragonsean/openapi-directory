/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel() {
    this->initializeModel();
}

OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::~OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel() {}

void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::initializeModel() {

    m_api_account_id_isSet = false;
    m_api_account_id_isValid = false;

    m_api_account_name_isSet = false;
    m_api_account_name_isValid = false;

    m_custom_isSet = false;
    m_custom_isValid = false;

    m_export_factor_isSet = false;
    m_export_factor_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_source_id_isSet = false;
    m_source_id_isValid = false;

    m_stock_sync_inactive_isSet = false;
    m_stock_sync_inactive_isValid = false;

    m_stock_sync_max_isSet = false;
    m_stock_sync_max_isValid = false;

    m_stock_sync_min_isSet = false;
    m_stock_sync_min_isValid = false;

    m_units_per_item_isSet = false;
    m_units_per_item_isValid = false;
}

void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::fromJsonObject(QJsonObject json) {

    m_api_account_id_isValid = ::OpenAPI::fromJsonValue(m_api_account_id, json[QString("ApiAccountId")]);
    m_api_account_id_isSet = !json[QString("ApiAccountId")].isNull() && m_api_account_id_isValid;

    m_api_account_name_isValid = ::OpenAPI::fromJsonValue(m_api_account_name, json[QString("ApiAccountName")]);
    m_api_account_name_isSet = !json[QString("ApiAccountName")].isNull() && m_api_account_name_isValid;

    m_custom_isValid = ::OpenAPI::fromJsonValue(m_custom, json[QString("Custom")]);
    m_custom_isSet = !json[QString("Custom")].isNull() && m_custom_isValid;

    m_export_factor_isValid = ::OpenAPI::fromJsonValue(m_export_factor, json[QString("ExportFactor")]);
    m_export_factor_isSet = !json[QString("ExportFactor")].isNull() && m_export_factor_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("Source")]);
    m_source_isSet = !json[QString("Source")].isNull() && m_source_isValid;

    m_source_id_isValid = ::OpenAPI::fromJsonValue(m_source_id, json[QString("SourceId")]);
    m_source_id_isSet = !json[QString("SourceId")].isNull() && m_source_id_isValid;

    m_stock_sync_inactive_isValid = ::OpenAPI::fromJsonValue(m_stock_sync_inactive, json[QString("StockSyncInactive")]);
    m_stock_sync_inactive_isSet = !json[QString("StockSyncInactive")].isNull() && m_stock_sync_inactive_isValid;

    m_stock_sync_max_isValid = ::OpenAPI::fromJsonValue(m_stock_sync_max, json[QString("StockSyncMax")]);
    m_stock_sync_max_isSet = !json[QString("StockSyncMax")].isNull() && m_stock_sync_max_isValid;

    m_stock_sync_min_isValid = ::OpenAPI::fromJsonValue(m_stock_sync_min, json[QString("StockSyncMin")]);
    m_stock_sync_min_isSet = !json[QString("StockSyncMin")].isNull() && m_stock_sync_min_isValid;

    m_units_per_item_isValid = ::OpenAPI::fromJsonValue(m_units_per_item, json[QString("UnitsPerItem")]);
    m_units_per_item_isSet = !json[QString("UnitsPerItem")].isNull() && m_units_per_item_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::asJsonObject() const {
    QJsonObject obj;
    if (m_api_account_id_isSet) {
        obj.insert(QString("ApiAccountId"), ::OpenAPI::toJsonValue(m_api_account_id));
    }
    if (m_api_account_name_isSet) {
        obj.insert(QString("ApiAccountName"), ::OpenAPI::toJsonValue(m_api_account_name));
    }
    if (m_custom_isSet) {
        obj.insert(QString("Custom"), ::OpenAPI::toJsonValue(m_custom));
    }
    if (m_export_factor_isSet) {
        obj.insert(QString("ExportFactor"), ::OpenAPI::toJsonValue(m_export_factor));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_source_isSet) {
        obj.insert(QString("Source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_source_id_isSet) {
        obj.insert(QString("SourceId"), ::OpenAPI::toJsonValue(m_source_id));
    }
    if (m_stock_sync_inactive_isSet) {
        obj.insert(QString("StockSyncInactive"), ::OpenAPI::toJsonValue(m_stock_sync_inactive));
    }
    if (m_stock_sync_max_isSet) {
        obj.insert(QString("StockSyncMax"), ::OpenAPI::toJsonValue(m_stock_sync_max));
    }
    if (m_stock_sync_min_isSet) {
        obj.insert(QString("StockSyncMin"), ::OpenAPI::toJsonValue(m_stock_sync_min));
    }
    if (m_units_per_item_isSet) {
        obj.insert(QString("UnitsPerItem"), ::OpenAPI::toJsonValue(m_units_per_item));
    }
    return obj;
}

qint64 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::getApiAccountId() const {
    return m_api_account_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::setApiAccountId(const qint64 &api_account_id) {
    m_api_account_id = api_account_id;
    m_api_account_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_api_account_id_Set() const{
    return m_api_account_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_api_account_id_Valid() const{
    return m_api_account_id_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::getApiAccountName() const {
    return m_api_account_name;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::setApiAccountName(const QString &api_account_name) {
    m_api_account_name = api_account_name;
    m_api_account_name_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_api_account_name_Set() const{
    return m_api_account_name_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_api_account_name_Valid() const{
    return m_api_account_name_isValid;
}

OAIObject OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::getCustom() const {
    return m_custom;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::setCustom(const OAIObject &custom) {
    m_custom = custom;
    m_custom_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_custom_Set() const{
    return m_custom_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_custom_Valid() const{
    return m_custom_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::getExportFactor() const {
    return m_export_factor;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::setExportFactor(const double &export_factor) {
    m_export_factor = export_factor;
    m_export_factor_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_export_factor_Set() const{
    return m_export_factor_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_export_factor_Valid() const{
    return m_export_factor_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::getId() const {
    return m_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::getSource() const {
    return m_source;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_source_Set() const{
    return m_source_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::getSourceId() const {
    return m_source_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::setSourceId(const QString &source_id) {
    m_source_id = source_id;
    m_source_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_source_id_Set() const{
    return m_source_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_source_id_Valid() const{
    return m_source_id_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::isStockSyncInactive() const {
    return m_stock_sync_inactive;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::setStockSyncInactive(const bool &stock_sync_inactive) {
    m_stock_sync_inactive = stock_sync_inactive;
    m_stock_sync_inactive_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_stock_sync_inactive_Set() const{
    return m_stock_sync_inactive_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_stock_sync_inactive_Valid() const{
    return m_stock_sync_inactive_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::getStockSyncMax() const {
    return m_stock_sync_max;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::setStockSyncMax(const double &stock_sync_max) {
    m_stock_sync_max = stock_sync_max;
    m_stock_sync_max_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_stock_sync_max_Set() const{
    return m_stock_sync_max_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_stock_sync_max_Valid() const{
    return m_stock_sync_max_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::getStockSyncMin() const {
    return m_stock_sync_min;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::setStockSyncMin(const double &stock_sync_min) {
    m_stock_sync_min = stock_sync_min;
    m_stock_sync_min_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_stock_sync_min_Set() const{
    return m_stock_sync_min_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_stock_sync_min_Valid() const{
    return m_stock_sync_min_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::getUnitsPerItem() const {
    return m_units_per_item;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::setUnitsPerItem(const double &units_per_item) {
    m_units_per_item = units_per_item;
    m_units_per_item_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_units_per_item_Set() const{
    return m_units_per_item_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::is_units_per_item_Valid() const{
    return m_units_per_item_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_account_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_factor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stock_sync_inactive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stock_sync_max_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stock_sync_min_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_units_per_item_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_source_isValid && m_source_id_isValid && true;
}

} // namespace OpenAPI
