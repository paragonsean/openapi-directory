/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer.h
 *
 * Data used to create a new Billbee user account
 */

#ifndef OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_H
#define OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_H

#include <QJsonObject>

#include "OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress;

class OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer : public OAIObject {
public:
    OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer();
    OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer(QString json);
    ~OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAcceptTerms() const;
    void setAcceptTerms(const bool &accept_terms);
    bool is_accept_terms_Set() const;
    bool is_accept_terms_Valid() const;

    OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress getAddress() const;
    void setAddress(const OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getAffiliateCouponCode() const;
    void setAffiliateCouponCode(const QString &affiliate_coupon_code);
    bool is_affiliate_coupon_code_Set() const;
    bool is_affiliate_coupon_code_Valid() const;

    QString getDefaultCurrrency() const;
    void setDefaultCurrrency(const QString &default_currrency);
    bool is_default_currrency_Set() const;
    bool is_default_currrency_Valid() const;

    qint32 getDefaultVatIndex() const;
    void setDefaultVatIndex(const qint32 &default_vat_index);
    bool is_default_vat_index_Set() const;
    bool is_default_vat_index_Valid() const;

    qint32 getDefaultVatMode() const;
    void setDefaultVatMode(const qint32 &default_vat_mode);
    bool is_default_vat_mode_Set() const;
    bool is_default_vat_mode_Valid() const;

    QString getEMail() const;
    void setEMail(const QString &e_mail);
    bool is_e_mail_Set() const;
    bool is_e_mail_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    double getVat1Rate() const;
    void setVat1Rate(const double &vat1_rate);
    bool is_vat1_rate_Set() const;
    bool is_vat1_rate_Valid() const;

    double getVat2Rate() const;
    void setVat2Rate(const double &vat2_rate);
    bool is_vat2_rate_Set() const;
    bool is_vat2_rate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_accept_terms;
    bool m_accept_terms_isSet;
    bool m_accept_terms_isValid;

    OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_affiliate_coupon_code;
    bool m_affiliate_coupon_code_isSet;
    bool m_affiliate_coupon_code_isValid;

    QString m_default_currrency;
    bool m_default_currrency_isSet;
    bool m_default_currrency_isValid;

    qint32 m_default_vat_index;
    bool m_default_vat_index_isSet;
    bool m_default_vat_index_isValid;

    qint32 m_default_vat_mode;
    bool m_default_vat_mode_isSet;
    bool m_default_vat_mode_isValid;

    QString m_e_mail;
    bool m_e_mail_isSet;
    bool m_e_mail_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    double m_vat1_rate;
    bool m_vat1_rate_isSet;
    bool m_vat1_rate_isValid;

    double m_vat2_rate;
    bool m_vat2_rate_isSet;
    bool m_vat2_rate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer)

#endif // OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_H
