/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel() {
    this->initializeModel();
}

OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::~OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel() {}

void OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::initializeModel() {

    m_change_state_to_send_isSet = false;
    m_change_state_to_send_isValid = false;

    m_client_reference_isSet = false;
    m_client_reference_isValid = false;

    m_dimension_isSet = false;
    m_dimension_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_printer_name_isSet = false;
    m_printer_name_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_provider_id_isSet = false;
    m_provider_id_isValid = false;

    m_ship_date_isSet = false;
    m_ship_date_isValid = false;

    m_weight_in_gram_isSet = false;
    m_weight_in_gram_isValid = false;
}

void OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::fromJsonObject(QJsonObject json) {

    m_change_state_to_send_isValid = ::OpenAPI::fromJsonValue(m_change_state_to_send, json[QString("ChangeStateToSend")]);
    m_change_state_to_send_isSet = !json[QString("ChangeStateToSend")].isNull() && m_change_state_to_send_isValid;

    m_client_reference_isValid = ::OpenAPI::fromJsonValue(m_client_reference, json[QString("ClientReference")]);
    m_client_reference_isSet = !json[QString("ClientReference")].isNull() && m_client_reference_isValid;

    m_dimension_isValid = ::OpenAPI::fromJsonValue(m_dimension, json[QString("Dimension")]);
    m_dimension_isSet = !json[QString("Dimension")].isNull() && m_dimension_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("OrderId")]);
    m_order_id_isSet = !json[QString("OrderId")].isNull() && m_order_id_isValid;

    m_printer_name_isValid = ::OpenAPI::fromJsonValue(m_printer_name, json[QString("PrinterName")]);
    m_printer_name_isSet = !json[QString("PrinterName")].isNull() && m_printer_name_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("ProductId")]);
    m_product_id_isSet = !json[QString("ProductId")].isNull() && m_product_id_isValid;

    m_provider_id_isValid = ::OpenAPI::fromJsonValue(m_provider_id, json[QString("ProviderId")]);
    m_provider_id_isSet = !json[QString("ProviderId")].isNull() && m_provider_id_isValid;

    m_ship_date_isValid = ::OpenAPI::fromJsonValue(m_ship_date, json[QString("ShipDate")]);
    m_ship_date_isSet = !json[QString("ShipDate")].isNull() && m_ship_date_isValid;

    m_weight_in_gram_isValid = ::OpenAPI::fromJsonValue(m_weight_in_gram, json[QString("WeightInGram")]);
    m_weight_in_gram_isSet = !json[QString("WeightInGram")].isNull() && m_weight_in_gram_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::asJsonObject() const {
    QJsonObject obj;
    if (m_change_state_to_send_isSet) {
        obj.insert(QString("ChangeStateToSend"), ::OpenAPI::toJsonValue(m_change_state_to_send));
    }
    if (m_client_reference_isSet) {
        obj.insert(QString("ClientReference"), ::OpenAPI::toJsonValue(m_client_reference));
    }
    if (m_dimension.isSet()) {
        obj.insert(QString("Dimension"), ::OpenAPI::toJsonValue(m_dimension));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("OrderId"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_printer_name_isSet) {
        obj.insert(QString("PrinterName"), ::OpenAPI::toJsonValue(m_printer_name));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("ProductId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_provider_id_isSet) {
        obj.insert(QString("ProviderId"), ::OpenAPI::toJsonValue(m_provider_id));
    }
    if (m_ship_date_isSet) {
        obj.insert(QString("ShipDate"), ::OpenAPI::toJsonValue(m_ship_date));
    }
    if (m_weight_in_gram_isSet) {
        obj.insert(QString("WeightInGram"), ::OpenAPI::toJsonValue(m_weight_in_gram));
    }
    return obj;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::isChangeStateToSend() const {
    return m_change_state_to_send;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::setChangeStateToSend(const bool &change_state_to_send) {
    m_change_state_to_send = change_state_to_send;
    m_change_state_to_send_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_change_state_to_send_Set() const{
    return m_change_state_to_send_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_change_state_to_send_Valid() const{
    return m_change_state_to_send_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::getClientReference() const {
    return m_client_reference;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::setClientReference(const QString &client_reference) {
    m_client_reference = client_reference;
    m_client_reference_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_client_reference_Set() const{
    return m_client_reference_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_client_reference_Valid() const{
    return m_client_reference_isValid;
}

OAIBillbee_Interfaces_Shipping_ShipmentData_Dimensions OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::getDimension() const {
    return m_dimension;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::setDimension(const OAIBillbee_Interfaces_Shipping_ShipmentData_Dimensions &dimension) {
    m_dimension = dimension;
    m_dimension_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_dimension_Set() const{
    return m_dimension_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_dimension_Valid() const{
    return m_dimension_isValid;
}

qint64 OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::getOrderId() const {
    return m_order_id;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::setOrderId(const qint64 &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::getPrinterName() const {
    return m_printer_name;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::setPrinterName(const QString &printer_name) {
    m_printer_name = printer_name;
    m_printer_name_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_printer_name_Set() const{
    return m_printer_name_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_printer_name_Valid() const{
    return m_printer_name_isValid;
}

qint64 OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::getProductId() const {
    return m_product_id;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::setProductId(const qint64 &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_product_id_Valid() const{
    return m_product_id_isValid;
}

qint64 OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::getProviderId() const {
    return m_provider_id;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::setProviderId(const qint64 &provider_id) {
    m_provider_id = provider_id;
    m_provider_id_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_provider_id_Set() const{
    return m_provider_id_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_provider_id_Valid() const{
    return m_provider_id_isValid;
}

QDateTime OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::getShipDate() const {
    return m_ship_date;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::setShipDate(const QDateTime &ship_date) {
    m_ship_date = ship_date;
    m_ship_date_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_ship_date_Set() const{
    return m_ship_date_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_ship_date_Valid() const{
    return m_ship_date_isValid;
}

qint32 OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::getWeightInGram() const {
    return m_weight_in_gram;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::setWeightInGram(const qint32 &weight_in_gram) {
    m_weight_in_gram = weight_in_gram;
    m_weight_in_gram_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_weight_in_gram_Set() const{
    return m_weight_in_gram_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::is_weight_in_gram_Valid() const{
    return m_weight_in_gram_isValid;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_state_to_send_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimension.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_printer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provider_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_in_gram_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_ShipmentWithLabel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
