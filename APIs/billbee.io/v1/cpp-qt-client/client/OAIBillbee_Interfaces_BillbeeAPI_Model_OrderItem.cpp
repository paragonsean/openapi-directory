/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem() {
    this->initializeModel();
}

OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::~OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem() {}

void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_billbee_id_isSet = false;
    m_billbee_id_isValid = false;

    m_discount_isSet = false;
    m_discount_isValid = false;

    m_dont_adjust_stock_isSet = false;
    m_dont_adjust_stock_isValid = false;

    m_get_price_from_article_if_any_isSet = false;
    m_get_price_from_article_if_any_isValid = false;

    m_invoice_sku_isSet = false;
    m_invoice_sku_isValid = false;

    m_is_coupon_isSet = false;
    m_is_coupon_isValid = false;

    m_product_isSet = false;
    m_product_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_serial_number_isSet = false;
    m_serial_number_isValid = false;

    m_shipping_profile_id_isSet = false;
    m_shipping_profile_id_isValid = false;

    m_tax_amount_isSet = false;
    m_tax_amount_isValid = false;

    m_tax_index_isSet = false;
    m_tax_index_isValid = false;

    m_total_price_isSet = false;
    m_total_price_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;

    m_unrebated_total_price_isSet = false;
    m_unrebated_total_price_isValid = false;
}

void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("Attributes")]);
    m_attributes_isSet = !json[QString("Attributes")].isNull() && m_attributes_isValid;

    m_billbee_id_isValid = ::OpenAPI::fromJsonValue(m_billbee_id, json[QString("BillbeeId")]);
    m_billbee_id_isSet = !json[QString("BillbeeId")].isNull() && m_billbee_id_isValid;

    m_discount_isValid = ::OpenAPI::fromJsonValue(m_discount, json[QString("Discount")]);
    m_discount_isSet = !json[QString("Discount")].isNull() && m_discount_isValid;

    m_dont_adjust_stock_isValid = ::OpenAPI::fromJsonValue(m_dont_adjust_stock, json[QString("DontAdjustStock")]);
    m_dont_adjust_stock_isSet = !json[QString("DontAdjustStock")].isNull() && m_dont_adjust_stock_isValid;

    m_get_price_from_article_if_any_isValid = ::OpenAPI::fromJsonValue(m_get_price_from_article_if_any, json[QString("GetPriceFromArticleIfAny")]);
    m_get_price_from_article_if_any_isSet = !json[QString("GetPriceFromArticleIfAny")].isNull() && m_get_price_from_article_if_any_isValid;

    m_invoice_sku_isValid = ::OpenAPI::fromJsonValue(m_invoice_sku, json[QString("InvoiceSKU")]);
    m_invoice_sku_isSet = !json[QString("InvoiceSKU")].isNull() && m_invoice_sku_isValid;

    m_is_coupon_isValid = ::OpenAPI::fromJsonValue(m_is_coupon, json[QString("IsCoupon")]);
    m_is_coupon_isSet = !json[QString("IsCoupon")].isNull() && m_is_coupon_isValid;

    m_product_isValid = ::OpenAPI::fromJsonValue(m_product, json[QString("Product")]);
    m_product_isSet = !json[QString("Product")].isNull() && m_product_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("Quantity")]);
    m_quantity_isSet = !json[QString("Quantity")].isNull() && m_quantity_isValid;

    m_serial_number_isValid = ::OpenAPI::fromJsonValue(m_serial_number, json[QString("SerialNumber")]);
    m_serial_number_isSet = !json[QString("SerialNumber")].isNull() && m_serial_number_isValid;

    m_shipping_profile_id_isValid = ::OpenAPI::fromJsonValue(m_shipping_profile_id, json[QString("ShippingProfileId")]);
    m_shipping_profile_id_isSet = !json[QString("ShippingProfileId")].isNull() && m_shipping_profile_id_isValid;

    m_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_tax_amount, json[QString("TaxAmount")]);
    m_tax_amount_isSet = !json[QString("TaxAmount")].isNull() && m_tax_amount_isValid;

    m_tax_index_isValid = ::OpenAPI::fromJsonValue(m_tax_index, json[QString("TaxIndex")]);
    m_tax_index_isSet = !json[QString("TaxIndex")].isNull() && m_tax_index_isValid;

    m_total_price_isValid = ::OpenAPI::fromJsonValue(m_total_price, json[QString("TotalPrice")]);
    m_total_price_isSet = !json[QString("TotalPrice")].isNull() && m_total_price_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("TransactionId")]);
    m_transaction_id_isSet = !json[QString("TransactionId")].isNull() && m_transaction_id_isValid;

    m_unrebated_total_price_isValid = ::OpenAPI::fromJsonValue(m_unrebated_total_price, json[QString("UnrebatedTotalPrice")]);
    m_unrebated_total_price_isSet = !json[QString("UnrebatedTotalPrice")].isNull() && m_unrebated_total_price_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.size() > 0) {
        obj.insert(QString("Attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_billbee_id_isSet) {
        obj.insert(QString("BillbeeId"), ::OpenAPI::toJsonValue(m_billbee_id));
    }
    if (m_discount_isSet) {
        obj.insert(QString("Discount"), ::OpenAPI::toJsonValue(m_discount));
    }
    if (m_dont_adjust_stock_isSet) {
        obj.insert(QString("DontAdjustStock"), ::OpenAPI::toJsonValue(m_dont_adjust_stock));
    }
    if (m_get_price_from_article_if_any_isSet) {
        obj.insert(QString("GetPriceFromArticleIfAny"), ::OpenAPI::toJsonValue(m_get_price_from_article_if_any));
    }
    if (m_invoice_sku_isSet) {
        obj.insert(QString("InvoiceSKU"), ::OpenAPI::toJsonValue(m_invoice_sku));
    }
    if (m_is_coupon_isSet) {
        obj.insert(QString("IsCoupon"), ::OpenAPI::toJsonValue(m_is_coupon));
    }
    if (m_product.isSet()) {
        obj.insert(QString("Product"), ::OpenAPI::toJsonValue(m_product));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("Quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_serial_number_isSet) {
        obj.insert(QString("SerialNumber"), ::OpenAPI::toJsonValue(m_serial_number));
    }
    if (m_shipping_profile_id_isSet) {
        obj.insert(QString("ShippingProfileId"), ::OpenAPI::toJsonValue(m_shipping_profile_id));
    }
    if (m_tax_amount_isSet) {
        obj.insert(QString("TaxAmount"), ::OpenAPI::toJsonValue(m_tax_amount));
    }
    if (m_tax_index_isSet) {
        obj.insert(QString("TaxIndex"), ::OpenAPI::toJsonValue(m_tax_index));
    }
    if (m_total_price_isSet) {
        obj.insert(QString("TotalPrice"), ::OpenAPI::toJsonValue(m_total_price));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("TransactionId"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    if (m_unrebated_total_price_isSet) {
        obj.insert(QString("UnrebatedTotalPrice"), ::OpenAPI::toJsonValue(m_unrebated_total_price));
    }
    return obj;
}

QList<OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItemAttribute> OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getAttributes() const {
    return m_attributes;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setAttributes(const QList<OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItemAttribute> &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_attributes_Valid() const{
    return m_attributes_isValid;
}

qint64 OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getBillbeeId() const {
    return m_billbee_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setBillbeeId(const qint64 &billbee_id) {
    m_billbee_id = billbee_id;
    m_billbee_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_billbee_id_Set() const{
    return m_billbee_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_billbee_id_Valid() const{
    return m_billbee_id_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getDiscount() const {
    return m_discount;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setDiscount(const double &discount) {
    m_discount = discount;
    m_discount_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_discount_Set() const{
    return m_discount_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_discount_Valid() const{
    return m_discount_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::isDontAdjustStock() const {
    return m_dont_adjust_stock;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setDontAdjustStock(const bool &dont_adjust_stock) {
    m_dont_adjust_stock = dont_adjust_stock;
    m_dont_adjust_stock_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_dont_adjust_stock_Set() const{
    return m_dont_adjust_stock_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_dont_adjust_stock_Valid() const{
    return m_dont_adjust_stock_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::isGetPriceFromArticleIfAny() const {
    return m_get_price_from_article_if_any;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setGetPriceFromArticleIfAny(const bool &get_price_from_article_if_any) {
    m_get_price_from_article_if_any = get_price_from_article_if_any;
    m_get_price_from_article_if_any_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_get_price_from_article_if_any_Set() const{
    return m_get_price_from_article_if_any_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_get_price_from_article_if_any_Valid() const{
    return m_get_price_from_article_if_any_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getInvoiceSku() const {
    return m_invoice_sku;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setInvoiceSku(const QString &invoice_sku) {
    m_invoice_sku = invoice_sku;
    m_invoice_sku_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_invoice_sku_Set() const{
    return m_invoice_sku_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_invoice_sku_Valid() const{
    return m_invoice_sku_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::isIsCoupon() const {
    return m_is_coupon;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setIsCoupon(const bool &is_coupon) {
    m_is_coupon = is_coupon;
    m_is_coupon_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_is_coupon_Set() const{
    return m_is_coupon_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_is_coupon_Valid() const{
    return m_is_coupon_isValid;
}

OAIBillbee_Interfaces_BillbeeAPI_Model_SoldProduct OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getProduct() const {
    return m_product;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setProduct(const OAIBillbee_Interfaces_BillbeeAPI_Model_SoldProduct &product) {
    m_product = product;
    m_product_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_product_Set() const{
    return m_product_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_product_Valid() const{
    return m_product_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getQuantity() const {
    return m_quantity;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setQuantity(const double &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getSerialNumber() const {
    return m_serial_number;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setSerialNumber(const QString &serial_number) {
    m_serial_number = serial_number;
    m_serial_number_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_serial_number_Set() const{
    return m_serial_number_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_serial_number_Valid() const{
    return m_serial_number_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getShippingProfileId() const {
    return m_shipping_profile_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setShippingProfileId(const QString &shipping_profile_id) {
    m_shipping_profile_id = shipping_profile_id;
    m_shipping_profile_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_shipping_profile_id_Set() const{
    return m_shipping_profile_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_shipping_profile_id_Valid() const{
    return m_shipping_profile_id_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getTaxAmount() const {
    return m_tax_amount;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setTaxAmount(const double &tax_amount) {
    m_tax_amount = tax_amount;
    m_tax_amount_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_tax_amount_Set() const{
    return m_tax_amount_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_tax_amount_Valid() const{
    return m_tax_amount_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getTaxIndex() const {
    return m_tax_index;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setTaxIndex(const qint32 &tax_index) {
    m_tax_index = tax_index;
    m_tax_index_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_tax_index_Set() const{
    return m_tax_index_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_tax_index_Valid() const{
    return m_tax_index_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getTotalPrice() const {
    return m_total_price;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setTotalPrice(const double &total_price) {
    m_total_price = total_price;
    m_total_price_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_total_price_Set() const{
    return m_total_price_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_total_price_Valid() const{
    return m_total_price_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getTransactionId() const {
    return m_transaction_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::getUnrebatedTotalPrice() const {
    return m_unrebated_total_price;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::setUnrebatedTotalPrice(const double &unrebated_total_price) {
    m_unrebated_total_price = unrebated_total_price;
    m_unrebated_total_price_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_unrebated_total_price_Set() const{
    return m_unrebated_total_price_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::is_unrebated_total_price_Valid() const{
    return m_unrebated_total_price_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_billbee_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dont_adjust_stock_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_get_price_from_article_if_any_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_coupon_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_serial_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unrebated_total_price_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_OrderItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
