/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel() {
    this->initializeModel();
}

OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::~OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel() {}

void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_article_billbee_id_isSet = false;
    m_article_billbee_id_isValid = false;

    m_billbee_id_isSet = false;
    m_billbee_id_isValid = false;

    m_gross_value_isSet = false;
    m_gross_value_isValid = false;

    m_net_value_isSet = false;
    m_net_value_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;

    m_rebate_percent_isSet = false;
    m_rebate_percent_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_total_gross_value_isSet = false;
    m_total_gross_value_isValid = false;

    m_total_net_value_isSet = false;
    m_total_net_value_isValid = false;

    m_total_vat_amount_isSet = false;
    m_total_vat_amount_isValid = false;

    m_vat_rate_isSet = false;
    m_vat_rate_isValid = false;
}

void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("Amount")]);
    m_amount_isSet = !json[QString("Amount")].isNull() && m_amount_isValid;

    m_article_billbee_id_isValid = ::OpenAPI::fromJsonValue(m_article_billbee_id, json[QString("ArticleBillbeeId")]);
    m_article_billbee_id_isSet = !json[QString("ArticleBillbeeId")].isNull() && m_article_billbee_id_isValid;

    m_billbee_id_isValid = ::OpenAPI::fromJsonValue(m_billbee_id, json[QString("BillbeeId")]);
    m_billbee_id_isSet = !json[QString("BillbeeId")].isNull() && m_billbee_id_isValid;

    m_gross_value_isValid = ::OpenAPI::fromJsonValue(m_gross_value, json[QString("GrossValue")]);
    m_gross_value_isSet = !json[QString("GrossValue")].isNull() && m_gross_value_isValid;

    m_net_value_isValid = ::OpenAPI::fromJsonValue(m_net_value, json[QString("NetValue")]);
    m_net_value_isSet = !json[QString("NetValue")].isNull() && m_net_value_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("Position")]);
    m_position_isSet = !json[QString("Position")].isNull() && m_position_isValid;

    m_rebate_percent_isValid = ::OpenAPI::fromJsonValue(m_rebate_percent, json[QString("RebatePercent")]);
    m_rebate_percent_isSet = !json[QString("RebatePercent")].isNull() && m_rebate_percent_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("Sku")]);
    m_sku_isSet = !json[QString("Sku")].isNull() && m_sku_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("Title")]);
    m_title_isSet = !json[QString("Title")].isNull() && m_title_isValid;

    m_total_gross_value_isValid = ::OpenAPI::fromJsonValue(m_total_gross_value, json[QString("TotalGrossValue")]);
    m_total_gross_value_isSet = !json[QString("TotalGrossValue")].isNull() && m_total_gross_value_isValid;

    m_total_net_value_isValid = ::OpenAPI::fromJsonValue(m_total_net_value, json[QString("TotalNetValue")]);
    m_total_net_value_isSet = !json[QString("TotalNetValue")].isNull() && m_total_net_value_isValid;

    m_total_vat_amount_isValid = ::OpenAPI::fromJsonValue(m_total_vat_amount, json[QString("TotalVatAmount")]);
    m_total_vat_amount_isSet = !json[QString("TotalVatAmount")].isNull() && m_total_vat_amount_isValid;

    m_vat_rate_isValid = ::OpenAPI::fromJsonValue(m_vat_rate, json[QString("VatRate")]);
    m_vat_rate_isSet = !json[QString("VatRate")].isNull() && m_vat_rate_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("Amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_article_billbee_id_isSet) {
        obj.insert(QString("ArticleBillbeeId"), ::OpenAPI::toJsonValue(m_article_billbee_id));
    }
    if (m_billbee_id_isSet) {
        obj.insert(QString("BillbeeId"), ::OpenAPI::toJsonValue(m_billbee_id));
    }
    if (m_gross_value_isSet) {
        obj.insert(QString("GrossValue"), ::OpenAPI::toJsonValue(m_gross_value));
    }
    if (m_net_value_isSet) {
        obj.insert(QString("NetValue"), ::OpenAPI::toJsonValue(m_net_value));
    }
    if (m_position_isSet) {
        obj.insert(QString("Position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_rebate_percent_isSet) {
        obj.insert(QString("RebatePercent"), ::OpenAPI::toJsonValue(m_rebate_percent));
    }
    if (m_sku_isSet) {
        obj.insert(QString("Sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    if (m_title_isSet) {
        obj.insert(QString("Title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_total_gross_value_isSet) {
        obj.insert(QString("TotalGrossValue"), ::OpenAPI::toJsonValue(m_total_gross_value));
    }
    if (m_total_net_value_isSet) {
        obj.insert(QString("TotalNetValue"), ::OpenAPI::toJsonValue(m_total_net_value));
    }
    if (m_total_vat_amount_isSet) {
        obj.insert(QString("TotalVatAmount"), ::OpenAPI::toJsonValue(m_total_vat_amount));
    }
    if (m_vat_rate_isSet) {
        obj.insert(QString("VatRate"), ::OpenAPI::toJsonValue(m_vat_rate));
    }
    return obj;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getAmount() const {
    return m_amount;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_amount_Valid() const{
    return m_amount_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getArticleBillbeeId() const {
    return m_article_billbee_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setArticleBillbeeId(const qint32 &article_billbee_id) {
    m_article_billbee_id = article_billbee_id;
    m_article_billbee_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_article_billbee_id_Set() const{
    return m_article_billbee_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_article_billbee_id_Valid() const{
    return m_article_billbee_id_isValid;
}

qint64 OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getBillbeeId() const {
    return m_billbee_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setBillbeeId(const qint64 &billbee_id) {
    m_billbee_id = billbee_id;
    m_billbee_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_billbee_id_Set() const{
    return m_billbee_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_billbee_id_Valid() const{
    return m_billbee_id_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getGrossValue() const {
    return m_gross_value;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setGrossValue(const double &gross_value) {
    m_gross_value = gross_value;
    m_gross_value_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_gross_value_Set() const{
    return m_gross_value_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_gross_value_Valid() const{
    return m_gross_value_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getNetValue() const {
    return m_net_value;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setNetValue(const double &net_value) {
    m_net_value = net_value;
    m_net_value_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_net_value_Set() const{
    return m_net_value_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_net_value_Valid() const{
    return m_net_value_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getPosition() const {
    return m_position;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setPosition(const qint32 &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_position_Set() const{
    return m_position_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_position_Valid() const{
    return m_position_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getRebatePercent() const {
    return m_rebate_percent;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setRebatePercent(const double &rebate_percent) {
    m_rebate_percent = rebate_percent;
    m_rebate_percent_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_rebate_percent_Set() const{
    return m_rebate_percent_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_rebate_percent_Valid() const{
    return m_rebate_percent_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getSku() const {
    return m_sku;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_sku_Valid() const{
    return m_sku_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getTitle() const {
    return m_title;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_title_Set() const{
    return m_title_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_title_Valid() const{
    return m_title_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getTotalGrossValue() const {
    return m_total_gross_value;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setTotalGrossValue(const double &total_gross_value) {
    m_total_gross_value = total_gross_value;
    m_total_gross_value_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_total_gross_value_Set() const{
    return m_total_gross_value_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_total_gross_value_Valid() const{
    return m_total_gross_value_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getTotalNetValue() const {
    return m_total_net_value;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setTotalNetValue(const double &total_net_value) {
    m_total_net_value = total_net_value;
    m_total_net_value_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_total_net_value_Set() const{
    return m_total_net_value_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_total_net_value_Valid() const{
    return m_total_net_value_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getTotalVatAmount() const {
    return m_total_vat_amount;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setTotalVatAmount(const double &total_vat_amount) {
    m_total_vat_amount = total_vat_amount;
    m_total_vat_amount_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_total_vat_amount_Set() const{
    return m_total_vat_amount_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_total_vat_amount_Valid() const{
    return m_total_vat_amount_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::getVatRate() const {
    return m_vat_rate;
}
void OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::setVatRate(const double &vat_rate) {
    m_vat_rate = vat_rate;
    m_vat_rate_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_vat_rate_Set() const{
    return m_vat_rate_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::is_vat_rate_Valid() const{
    return m_vat_rate_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_article_billbee_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billbee_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rebate_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_gross_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_net_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_vat_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_rate_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Model_InvoiceApiPositionApiModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
