/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment() {
    this->initializeModel();
}

OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::~OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment() {}

void OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::initializeModel() {

    m_billbee_id_isSet = false;
    m_billbee_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pay_date_isSet = false;
    m_pay_date_isValid = false;

    m_pay_value_isSet = false;
    m_pay_value_isValid = false;

    m_payment_type_isSet = false;
    m_payment_type_isValid = false;

    m_purpose_isSet = false;
    m_purpose_isValid = false;

    m_source_technology_isSet = false;
    m_source_technology_isValid = false;

    m_source_text_isSet = false;
    m_source_text_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;
}

void OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::fromJsonObject(QJsonObject json) {

    m_billbee_id_isValid = ::OpenAPI::fromJsonValue(m_billbee_id, json[QString("BillbeeId")]);
    m_billbee_id_isSet = !json[QString("BillbeeId")].isNull() && m_billbee_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_pay_date_isValid = ::OpenAPI::fromJsonValue(m_pay_date, json[QString("PayDate")]);
    m_pay_date_isSet = !json[QString("PayDate")].isNull() && m_pay_date_isValid;

    m_pay_value_isValid = ::OpenAPI::fromJsonValue(m_pay_value, json[QString("PayValue")]);
    m_pay_value_isSet = !json[QString("PayValue")].isNull() && m_pay_value_isValid;

    m_payment_type_isValid = ::OpenAPI::fromJsonValue(m_payment_type, json[QString("PaymentType")]);
    m_payment_type_isSet = !json[QString("PaymentType")].isNull() && m_payment_type_isValid;

    m_purpose_isValid = ::OpenAPI::fromJsonValue(m_purpose, json[QString("Purpose")]);
    m_purpose_isSet = !json[QString("Purpose")].isNull() && m_purpose_isValid;

    m_source_technology_isValid = ::OpenAPI::fromJsonValue(m_source_technology, json[QString("SourceTechnology")]);
    m_source_technology_isSet = !json[QString("SourceTechnology")].isNull() && m_source_technology_isValid;

    m_source_text_isValid = ::OpenAPI::fromJsonValue(m_source_text, json[QString("SourceText")]);
    m_source_text_isSet = !json[QString("SourceText")].isNull() && m_source_text_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("TransactionId")]);
    m_transaction_id_isSet = !json[QString("TransactionId")].isNull() && m_transaction_id_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::asJsonObject() const {
    QJsonObject obj;
    if (m_billbee_id_isSet) {
        obj.insert(QString("BillbeeId"), ::OpenAPI::toJsonValue(m_billbee_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pay_date_isSet) {
        obj.insert(QString("PayDate"), ::OpenAPI::toJsonValue(m_pay_date));
    }
    if (m_pay_value_isSet) {
        obj.insert(QString("PayValue"), ::OpenAPI::toJsonValue(m_pay_value));
    }
    if (m_payment_type_isSet) {
        obj.insert(QString("PaymentType"), ::OpenAPI::toJsonValue(m_payment_type));
    }
    if (m_purpose_isSet) {
        obj.insert(QString("Purpose"), ::OpenAPI::toJsonValue(m_purpose));
    }
    if (m_source_technology_isSet) {
        obj.insert(QString("SourceTechnology"), ::OpenAPI::toJsonValue(m_source_technology));
    }
    if (m_source_text_isSet) {
        obj.insert(QString("SourceText"), ::OpenAPI::toJsonValue(m_source_text));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("TransactionId"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    return obj;
}

qint64 OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::getBillbeeId() const {
    return m_billbee_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::setBillbeeId(const qint64 &billbee_id) {
    m_billbee_id = billbee_id;
    m_billbee_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_billbee_id_Set() const{
    return m_billbee_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_billbee_id_Valid() const{
    return m_billbee_id_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::getName() const {
    return m_name;
}
void OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_name_Valid() const{
    return m_name_isValid;
}

QDateTime OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::getPayDate() const {
    return m_pay_date;
}
void OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::setPayDate(const QDateTime &pay_date) {
    m_pay_date = pay_date;
    m_pay_date_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_pay_date_Set() const{
    return m_pay_date_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_pay_date_Valid() const{
    return m_pay_date_isValid;
}

double OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::getPayValue() const {
    return m_pay_value;
}
void OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::setPayValue(const double &pay_value) {
    m_pay_value = pay_value;
    m_pay_value_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_pay_value_Set() const{
    return m_pay_value_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_pay_value_Valid() const{
    return m_pay_value_isValid;
}

qint32 OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::getPaymentType() const {
    return m_payment_type;
}
void OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::setPaymentType(const qint32 &payment_type) {
    m_payment_type = payment_type;
    m_payment_type_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_payment_type_Set() const{
    return m_payment_type_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_payment_type_Valid() const{
    return m_payment_type_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::getPurpose() const {
    return m_purpose;
}
void OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::setPurpose(const QString &purpose) {
    m_purpose = purpose;
    m_purpose_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_purpose_Set() const{
    return m_purpose_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_purpose_Valid() const{
    return m_purpose_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::getSourceTechnology() const {
    return m_source_technology;
}
void OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::setSourceTechnology(const QString &source_technology) {
    m_source_technology = source_technology;
    m_source_technology_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_source_technology_Set() const{
    return m_source_technology_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_source_technology_Valid() const{
    return m_source_technology_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::getSourceText() const {
    return m_source_text;
}
void OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::setSourceText(const QString &source_text) {
    m_source_text = source_text;
    m_source_text_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_source_text_Set() const{
    return m_source_text_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_source_text_Valid() const{
    return m_source_text_isValid;
}

QString OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::getTransactionId() const {
    return m_transaction_id;
}
void OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_billbee_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purpose_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_technology_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillbee_Interfaces_BillbeeAPI_Models_OrderPayment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
