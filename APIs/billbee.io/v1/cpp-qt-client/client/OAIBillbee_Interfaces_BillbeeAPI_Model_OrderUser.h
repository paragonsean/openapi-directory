/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBillbee_Interfaces_BillbeeAPI_Model_OrderUser.h
 *
 * 
 */

#ifndef OAIBillbee_Interfaces_BillbeeAPI_Model_OrderUser_H
#define OAIBillbee_Interfaces_BillbeeAPI_Model_OrderUser_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBillbee_Interfaces_BillbeeAPI_Model_OrderUser : public OAIObject {
public:
    OAIBillbee_Interfaces_BillbeeAPI_Model_OrderUser();
    OAIBillbee_Interfaces_BillbeeAPI_Model_OrderUser(QString json);
    ~OAIBillbee_Interfaces_BillbeeAPI_Model_OrderUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getBillbeeShopId() const;
    void setBillbeeShopId(const qint64 &billbee_shop_id);
    bool is_billbee_shop_id_Set() const;
    bool is_billbee_shop_id_Valid() const;

    QString getBillbeeShopName() const;
    void setBillbeeShopName(const QString &billbee_shop_name);
    bool is_billbee_shop_name_Set() const;
    bool is_billbee_shop_name_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getFullName() const;
    void setFullName(const QString &full_name);
    bool is_full_name_Set() const;
    bool is_full_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    QString getNick() const;
    void setNick(const QString &nick);
    bool is_nick_Set() const;
    bool is_nick_Valid() const;

    QString getPlatform() const;
    void setPlatform(const QString &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_billbee_shop_id;
    bool m_billbee_shop_id_isSet;
    bool m_billbee_shop_id_isValid;

    QString m_billbee_shop_name;
    bool m_billbee_shop_name_isSet;
    bool m_billbee_shop_name_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_full_name;
    bool m_full_name_isSet;
    bool m_full_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    QString m_nick;
    bool m_nick_isSet;
    bool m_nick_isValid;

    QString m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBillbee_Interfaces_BillbeeAPI_Model_OrderUser)

#endif // OAIBillbee_Interfaces_BillbeeAPI_Model_OrderUser_H
