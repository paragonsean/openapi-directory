/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress() {
    this->initializeModel();
}

OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::~OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress() {}

void OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::initializeModel() {

    m_address1_isSet = false;
    m_address1_isValid = false;

    m_address2_isSet = false;
    m_address2_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_company_isSet = false;
    m_company_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_vat_id_isSet = false;
    m_vat_id_isValid = false;

    m_zip_isSet = false;
    m_zip_isValid = false;
}

void OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::fromJsonObject(QJsonObject json) {

    m_address1_isValid = ::OpenAPI::fromJsonValue(m_address1, json[QString("Address1")]);
    m_address1_isSet = !json[QString("Address1")].isNull() && m_address1_isValid;

    m_address2_isValid = ::OpenAPI::fromJsonValue(m_address2, json[QString("Address2")]);
    m_address2_isSet = !json[QString("Address2")].isNull() && m_address2_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("City")]);
    m_city_isSet = !json[QString("City")].isNull() && m_city_isValid;

    m_company_isValid = ::OpenAPI::fromJsonValue(m_company, json[QString("Company")]);
    m_company_isSet = !json[QString("Company")].isNull() && m_company_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("Country")]);
    m_country_isSet = !json[QString("Country")].isNull() && m_country_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_vat_id_isValid = ::OpenAPI::fromJsonValue(m_vat_id, json[QString("VatId")]);
    m_vat_id_isSet = !json[QString("VatId")].isNull() && m_vat_id_isValid;

    m_zip_isValid = ::OpenAPI::fromJsonValue(m_zip, json[QString("Zip")]);
    m_zip_isSet = !json[QString("Zip")].isNull() && m_zip_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::asJsonObject() const {
    QJsonObject obj;
    if (m_address1_isSet) {
        obj.insert(QString("Address1"), ::OpenAPI::toJsonValue(m_address1));
    }
    if (m_address2_isSet) {
        obj.insert(QString("Address2"), ::OpenAPI::toJsonValue(m_address2));
    }
    if (m_city_isSet) {
        obj.insert(QString("City"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_company_isSet) {
        obj.insert(QString("Company"), ::OpenAPI::toJsonValue(m_company));
    }
    if (m_country_isSet) {
        obj.insert(QString("Country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_vat_id_isSet) {
        obj.insert(QString("VatId"), ::OpenAPI::toJsonValue(m_vat_id));
    }
    if (m_zip_isSet) {
        obj.insert(QString("Zip"), ::OpenAPI::toJsonValue(m_zip));
    }
    return obj;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::getAddress1() const {
    return m_address1;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::setAddress1(const QString &address1) {
    m_address1 = address1;
    m_address1_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_address1_Set() const{
    return m_address1_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_address1_Valid() const{
    return m_address1_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::getAddress2() const {
    return m_address2;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::setAddress2(const QString &address2) {
    m_address2 = address2;
    m_address2_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_address2_Set() const{
    return m_address2_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_address2_Valid() const{
    return m_address2_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::getCity() const {
    return m_city;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_city_Set() const{
    return m_city_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::getCompany() const {
    return m_company;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::setCompany(const QString &company) {
    m_company = company;
    m_company_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_company_Set() const{
    return m_company_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_company_Valid() const{
    return m_company_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::getCountry() const {
    return m_country;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_country_Set() const{
    return m_country_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::getName() const {
    return m_name;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::getVatId() const {
    return m_vat_id;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::setVatId(const QString &vat_id) {
    m_vat_id = vat_id;
    m_vat_id_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_vat_id_Set() const{
    return m_vat_id_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_vat_id_Valid() const{
    return m_vat_id_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::getZip() const {
    return m_zip;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::setZip(const QString &zip) {
    m_zip = zip;
    m_zip_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_zip_Set() const{
    return m_zip_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::is_zip_Valid() const{
    return m_zip_isValid;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zip_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_AutomaticProvisioningController_CreateAccountContainer_UserAddress::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
