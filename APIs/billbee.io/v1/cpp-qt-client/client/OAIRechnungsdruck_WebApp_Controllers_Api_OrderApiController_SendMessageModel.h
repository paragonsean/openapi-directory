/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel.h
 *
 * 
 */

#ifndef OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel_H
#define OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel_H

#include <QJsonObject>

#include "OAIBillbee_Interfaces_Order_MultiLanguageString.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBillbee_Interfaces_Order_MultiLanguageString;

class OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel : public OAIObject {
public:
    OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel();
    OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel(QString json);
    ~OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlternativeMail() const;
    void setAlternativeMail(const QString &alternative_mail);
    bool is_alternative_mail_Set() const;
    bool is_alternative_mail_Valid() const;

    QList<OAIBillbee_Interfaces_Order_MultiLanguageString> getBody() const;
    void setBody(const QList<OAIBillbee_Interfaces_Order_MultiLanguageString> &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    qint32 getSendMode() const;
    void setSendMode(const qint32 &send_mode);
    bool is_send_mode_Set() const;
    bool is_send_mode_Valid() const;

    QList<OAIBillbee_Interfaces_Order_MultiLanguageString> getSubject() const;
    void setSubject(const QList<OAIBillbee_Interfaces_Order_MultiLanguageString> &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alternative_mail;
    bool m_alternative_mail_isSet;
    bool m_alternative_mail_isValid;

    QList<OAIBillbee_Interfaces_Order_MultiLanguageString> m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    qint32 m_send_mode;
    bool m_send_mode_isSet;
    bool m_send_mode_isValid;

    QList<OAIBillbee_Interfaces_Order_MultiLanguageString> m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel)

#endif // OAIRechnungsdruck_WebApp_Controllers_Api_OrderApiController_SendMessageModel_H
