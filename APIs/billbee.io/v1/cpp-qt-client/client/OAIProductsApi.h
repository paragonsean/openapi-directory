/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIProductsApi_H
#define OAI_OAIProductsApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel.h"
#include "OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel.h"
#include "OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel.h"
#include "OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockCodeApiModel.h"
#include "OAIObject.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiCustomFieldDefinitionModel_.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiModel_.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiCustomFieldDefinitionModel_.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiModel_.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_DeletedImagesModel_.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_GetReservedAmountResponseData_.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockCodeResponseData_.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockResponseData_.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Rechnungsdruck_WebApp_Controllers_Api_SearchController_SearchResultsModel_.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_StockResponseData_.h"
#include "OAIRechnungsdruck_WebApp_Controllers_Api_SearchController_SearchModel.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIProductsApi : public QObject {
    Q_OBJECT

public:
    OAIProductsApi(const int timeOut = 0);
    ~OAIProductsApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  oai_billbee_interfaces_billbee_api_model_article_api_model OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel [required]
    */
    virtual void articleCreateArticle(const OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleApiModel &oai_billbee_interfaces_billbee_api_model_article_api_model);

    /**
    * @param[in]  id qint64 [required]
    */
    virtual void articleDeleteArticle(const qint64 &id);

    /**
    * @param[in]  image_id qint64 [required]
    */
    virtual void articleDeleteImage(const qint64 &image_id);

    /**
    * @param[in]  product_id qint64 [required]
    * @param[in]  image_id qint64 [required]
    */
    virtual void articleDeleteImageFromProduct(const qint64 &product_id, const qint64 &image_id);

    /**
    * @param[in]  request_body QList<qint64> [required]
    */
    virtual void articleDeleteImages(const QList<qint64> &request_body);

    /**
    * @param[in]  id QString [required]
    * @param[in]  lookup_by QString [optional]
    */
    virtual void articleGetArticle(const QString &id, const ::OpenAPI::OptionalParam<QString> &lookup_by = ::OpenAPI::OptionalParam<QString>());


    virtual void articleGetCategory();

    /**
    * @param[in]  id qint64 [required]
    */
    virtual void articleGetCustomField(const qint64 &id);

    /**
    * @param[in]  page qint32 [optional]
    * @param[in]  page_size qint32 [optional]
    */
    virtual void articleGetCustomFields(const ::OpenAPI::OptionalParam<qint32> &page = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &page_size = ::OpenAPI::OptionalParam<qint32>());

    /**
    * @param[in]  image_id qint64 [required]
    */
    virtual void articleGetImage(const qint64 &image_id);

    /**
    * @param[in]  product_id qint64 [required]
    * @param[in]  image_id qint64 [required]
    */
    virtual void articleGetImageFromProduct(const qint64 &product_id, const qint64 &image_id);

    /**
    * @param[in]  product_id qint64 [required]
    */
    virtual void articleGetImages(const qint64 &product_id);

    /**
    * @param[in]  page qint32 [optional]
    * @param[in]  page_size qint32 [optional]
    * @param[in]  min_created_at QDateTime [optional]
    * @param[in]  minimum_bill_bee_article_id qint64 [optional]
    * @param[in]  maximum_bill_bee_article_id qint64 [optional]
    */
    virtual void articleGetList(const ::OpenAPI::OptionalParam<qint32> &page = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &page_size = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QDateTime> &min_created_at = ::OpenAPI::OptionalParam<QDateTime>(), const ::OpenAPI::OptionalParam<qint64> &minimum_bill_bee_article_id = ::OpenAPI::OptionalParam<qint64>(), const ::OpenAPI::OptionalParam<qint64> &maximum_bill_bee_article_id = ::OpenAPI::OptionalParam<qint64>());


    virtual void articleGetPatchableFields();

    /**
    * @param[in]  id QString [required]
    * @param[in]  lookup_by QString [optional]
    * @param[in]  stock_id qint64 [optional]
    */
    virtual void articleGetReservedAmount(const QString &id, const ::OpenAPI::OptionalParam<QString> &lookup_by = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint64> &stock_id = ::OpenAPI::OptionalParam<qint64>());


    virtual void articleGetStocks();

    /**
    * @param[in]  id qint64 [required]
    * @param[in]  body OAIObject [required]
    */
    virtual void articlePatchArticle(const qint64 &id, const OAIObject &body);

    /**
    * @param[in]  product_id qint64 [required]
    * @param[in]  image_id qint64 [required]
    * @param[in]  oai_billbee_interfaces_billbee_api_model_article_image_relation_api_model OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel [required]
    */
    virtual void articlePutImage(const qint64 &product_id, const qint64 &image_id, const OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel &oai_billbee_interfaces_billbee_api_model_article_image_relation_api_model);

    /**
    * @param[in]  product_id qint64 [required]
    * @param[in]  oai_billbee_interfaces_billbee_api_model_article_image_relation_api_model QList<OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel> [required]
    * @param[in]  replace bool [optional]
    */
    virtual void articlePutImages(const qint64 &product_id, const QList<OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel> &oai_billbee_interfaces_billbee_api_model_article_image_relation_api_model, const ::OpenAPI::OptionalParam<bool> &replace = ::OpenAPI::OptionalParam<bool>());

    /**
    * @param[in]  oai_billbee_interfaces_billbee_api_model_update_stock_api_model OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel [required]
    */
    virtual void articleUpdateStock(const OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel &oai_billbee_interfaces_billbee_api_model_update_stock_api_model);

    /**
    * @param[in]  oai_billbee_interfaces_billbee_api_model_update_stock_code_api_model OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockCodeApiModel [required]
    */
    virtual void articleUpdateStockCode(const OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockCodeApiModel &oai_billbee_interfaces_billbee_api_model_update_stock_code_api_model);

    /**
    * @param[in]  oai_billbee_interfaces_billbee_api_model_update_stock_api_model QList<OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel> [required]
    */
    virtual void articleUpdateStockMultiple(const QList<OAIBillbee_Interfaces_BillbeeAPI_Model_UpdateStockApiModel> &oai_billbee_interfaces_billbee_api_model_update_stock_api_model);

    /**
    * @param[in]  oai_rechnungsdruck_web_app_controllers_api_search_controller_search_model OAIRechnungsdruck_WebApp_Controllers_Api_SearchController_SearchModel [required]
    */
    virtual void searchSearch(const OAIRechnungsdruck_WebApp_Controllers_Api_SearchController_SearchModel &oai_rechnungsdruck_web_app_controllers_api_search_controller_search_model);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void articleCreateArticleCallback(OAIHttpRequestWorker *worker);
    void articleDeleteArticleCallback(OAIHttpRequestWorker *worker);
    void articleDeleteImageCallback(OAIHttpRequestWorker *worker);
    void articleDeleteImageFromProductCallback(OAIHttpRequestWorker *worker);
    void articleDeleteImagesCallback(OAIHttpRequestWorker *worker);
    void articleGetArticleCallback(OAIHttpRequestWorker *worker);
    void articleGetCategoryCallback(OAIHttpRequestWorker *worker);
    void articleGetCustomFieldCallback(OAIHttpRequestWorker *worker);
    void articleGetCustomFieldsCallback(OAIHttpRequestWorker *worker);
    void articleGetImageCallback(OAIHttpRequestWorker *worker);
    void articleGetImageFromProductCallback(OAIHttpRequestWorker *worker);
    void articleGetImagesCallback(OAIHttpRequestWorker *worker);
    void articleGetListCallback(OAIHttpRequestWorker *worker);
    void articleGetPatchableFieldsCallback(OAIHttpRequestWorker *worker);
    void articleGetReservedAmountCallback(OAIHttpRequestWorker *worker);
    void articleGetStocksCallback(OAIHttpRequestWorker *worker);
    void articlePatchArticleCallback(OAIHttpRequestWorker *worker);
    void articlePutImageCallback(OAIHttpRequestWorker *worker);
    void articlePutImagesCallback(OAIHttpRequestWorker *worker);
    void articleUpdateStockCallback(OAIHttpRequestWorker *worker);
    void articleUpdateStockCodeCallback(OAIHttpRequestWorker *worker);
    void articleUpdateStockMultipleCallback(OAIHttpRequestWorker *worker);
    void searchSearchCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void articleCreateArticleSignal(OAIObject summary);
    void articleDeleteArticleSignal(OAIObject summary);
    void articleDeleteImageSignal(OAIObject summary);
    void articleDeleteImageFromProductSignal(OAIObject summary);
    void articleDeleteImagesSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_DeletedImagesModel_ summary);
    void articleGetArticleSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiModel_ summary);
    void articleGetCategorySignal(OAIObject summary);
    void articleGetCustomFieldSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiCustomFieldDefinitionModel_ summary);
    void articleGetCustomFieldsSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiCustomFieldDefinitionModel_ summary);
    void articleGetImageSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary);
    void articleGetImageFromProductSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary);
    void articleGetImagesSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary);
    void articleGetListSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiModel_ summary);
    void articleGetPatchableFieldsSignal(OAIObject summary);
    void articleGetReservedAmountSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_GetReservedAmountResponseData_ summary);
    void articleGetStocksSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_StockResponseData_ summary);
    void articlePatchArticleSignal(OAIObject summary);
    void articlePutImageSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary);
    void articlePutImagesSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary);
    void articleUpdateStockSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockResponseData_ summary);
    void articleUpdateStockCodeSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockCodeResponseData_ summary);
    void articleUpdateStockMultipleSignal(QList<OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockResponseData_> summary);
    void searchSearchSignal(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Rechnungsdruck_WebApp_Controllers_Api_SearchController_SearchResultsModel_ summary);


    void articleCreateArticleSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void articleDeleteArticleSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void articleDeleteImageSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void articleDeleteImageFromProductSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void articleDeleteImagesSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_DeletedImagesModel_ summary);
    void articleGetArticleSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiModel_ summary);
    void articleGetCategorySignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void articleGetCustomFieldSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiCustomFieldDefinitionModel_ summary);
    void articleGetCustomFieldsSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiCustomFieldDefinitionModel_ summary);
    void articleGetImageSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary);
    void articleGetImageFromProductSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary);
    void articleGetImagesSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary);
    void articleGetListSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiModel_ summary);
    void articleGetPatchableFieldsSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void articleGetReservedAmountSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_GetReservedAmountResponseData_ summary);
    void articleGetStocksSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_StockResponseData_ summary);
    void articlePatchArticleSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void articlePutImageSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary);
    void articlePutImagesSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary);
    void articleUpdateStockSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockResponseData_ summary);
    void articleUpdateStockCodeSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockCodeResponseData_ summary);
    void articleUpdateStockMultipleSignalFull(OAIHttpRequestWorker *worker, QList<OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockResponseData_> summary);
    void searchSearchSignalFull(OAIHttpRequestWorker *worker, OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Rechnungsdruck_WebApp_Controllers_Api_SearchController_SearchResultsModel_ summary);

    Q_DECL_DEPRECATED_X("Use articleCreateArticleSignalError() instead")
    void articleCreateArticleSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleCreateArticleSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleDeleteArticleSignalError() instead")
    void articleDeleteArticleSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleDeleteArticleSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleDeleteImageSignalError() instead")
    void articleDeleteImageSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleDeleteImageSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleDeleteImageFromProductSignalError() instead")
    void articleDeleteImageFromProductSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleDeleteImageFromProductSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleDeleteImagesSignalError() instead")
    void articleDeleteImagesSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_DeletedImagesModel_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleDeleteImagesSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_DeletedImagesModel_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetArticleSignalError() instead")
    void articleGetArticleSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiModel_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetArticleSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiModel_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetCategorySignalError() instead")
    void articleGetCategorySignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetCategorySignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetCustomFieldSignalError() instead")
    void articleGetCustomFieldSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiCustomFieldDefinitionModel_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetCustomFieldSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiCustomFieldDefinitionModel_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetCustomFieldsSignalError() instead")
    void articleGetCustomFieldsSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiCustomFieldDefinitionModel_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetCustomFieldsSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiCustomFieldDefinitionModel_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetImageSignalError() instead")
    void articleGetImageSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetImageSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetImageFromProductSignalError() instead")
    void articleGetImageFromProductSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetImageFromProductSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetImagesSignalError() instead")
    void articleGetImagesSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetImagesSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetListSignalError() instead")
    void articleGetListSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiModel_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetListSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiPagedResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_ArticleApiModel_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetPatchableFieldsSignalError() instead")
    void articleGetPatchableFieldsSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetPatchableFieldsSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetReservedAmountSignalError() instead")
    void articleGetReservedAmountSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_GetReservedAmountResponseData_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetReservedAmountSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_GetReservedAmountResponseData_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetStocksSignalError() instead")
    void articleGetStocksSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_StockResponseData_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetStocksSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_System_Collections_Generic_List_Billbee_Interfaces_BillbeeAPI_Model_StockResponseData_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articlePatchArticleSignalError() instead")
    void articlePatchArticleSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articlePatchArticleSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articlePutImageSignalError() instead")
    void articlePutImageSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articlePutImageSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articlePutImagesSignalError() instead")
    void articlePutImagesSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articlePutImagesSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_ArticleImageRelationApiModel_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleUpdateStockSignalError() instead")
    void articleUpdateStockSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockResponseData_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleUpdateStockSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockResponseData_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleUpdateStockCodeSignalError() instead")
    void articleUpdateStockCodeSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockCodeResponseData_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleUpdateStockCodeSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockCodeResponseData_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleUpdateStockMultipleSignalError() instead")
    void articleUpdateStockMultipleSignalE(QList<OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockResponseData_> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void articleUpdateStockMultipleSignalError(QList<OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Billbee_Interfaces_BillbeeAPI_Model_UpdateStockResponseData_> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchSearchSignalError() instead")
    void searchSearchSignalE(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Rechnungsdruck_WebApp_Controllers_Api_SearchController_SearchResultsModel_ summary, QNetworkReply::NetworkError error_type, QString error_str);
    void searchSearchSignalError(OAIRechnungsdruck_WebApp_Controllers_Api_ApiResult_Rechnungsdruck_WebApp_Controllers_Api_SearchController_SearchResultsModel_ summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use articleCreateArticleSignalErrorFull() instead")
    void articleCreateArticleSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleCreateArticleSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleDeleteArticleSignalErrorFull() instead")
    void articleDeleteArticleSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleDeleteArticleSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleDeleteImageSignalErrorFull() instead")
    void articleDeleteImageSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleDeleteImageSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleDeleteImageFromProductSignalErrorFull() instead")
    void articleDeleteImageFromProductSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleDeleteImageFromProductSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleDeleteImagesSignalErrorFull() instead")
    void articleDeleteImagesSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleDeleteImagesSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetArticleSignalErrorFull() instead")
    void articleGetArticleSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetArticleSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetCategorySignalErrorFull() instead")
    void articleGetCategorySignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetCategorySignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetCustomFieldSignalErrorFull() instead")
    void articleGetCustomFieldSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetCustomFieldSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetCustomFieldsSignalErrorFull() instead")
    void articleGetCustomFieldsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetCustomFieldsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetImageSignalErrorFull() instead")
    void articleGetImageSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetImageSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetImageFromProductSignalErrorFull() instead")
    void articleGetImageFromProductSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetImageFromProductSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetImagesSignalErrorFull() instead")
    void articleGetImagesSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetImagesSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetListSignalErrorFull() instead")
    void articleGetListSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetListSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetPatchableFieldsSignalErrorFull() instead")
    void articleGetPatchableFieldsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetPatchableFieldsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetReservedAmountSignalErrorFull() instead")
    void articleGetReservedAmountSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetReservedAmountSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleGetStocksSignalErrorFull() instead")
    void articleGetStocksSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleGetStocksSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articlePatchArticleSignalErrorFull() instead")
    void articlePatchArticleSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articlePatchArticleSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articlePutImageSignalErrorFull() instead")
    void articlePutImageSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articlePutImageSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articlePutImagesSignalErrorFull() instead")
    void articlePutImagesSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articlePutImagesSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleUpdateStockSignalErrorFull() instead")
    void articleUpdateStockSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleUpdateStockSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleUpdateStockCodeSignalErrorFull() instead")
    void articleUpdateStockCodeSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleUpdateStockCodeSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use articleUpdateStockMultipleSignalErrorFull() instead")
    void articleUpdateStockMultipleSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void articleUpdateStockMultipleSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchSearchSignalErrorFull() instead")
    void searchSearchSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void searchSearchSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
