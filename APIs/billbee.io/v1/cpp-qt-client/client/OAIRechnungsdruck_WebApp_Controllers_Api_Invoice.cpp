/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRechnungsdruck_WebApp_Controllers_Api_Invoice.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::OAIRechnungsdruck_WebApp_Controllers_Api_Invoice(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::OAIRechnungsdruck_WebApp_Controllers_Api_Invoice() {
    this->initializeModel();
}

OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::~OAIRechnungsdruck_WebApp_Controllers_Api_Invoice() {}

void OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::initializeModel() {

    m_invoice_date_isSet = false;
    m_invoice_date_isValid = false;

    m_invoice_number_isSet = false;
    m_invoice_number_isValid = false;

    m_order_number_isSet = false;
    m_order_number_isValid = false;

    m_pdf_data_isSet = false;
    m_pdf_data_isValid = false;

    m_pdf_download_url_isSet = false;
    m_pdf_download_url_isValid = false;

    m_total_gross_isSet = false;
    m_total_gross_isValid = false;

    m_total_net_isSet = false;
    m_total_net_isValid = false;
}

void OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::fromJsonObject(QJsonObject json) {

    m_invoice_date_isValid = ::OpenAPI::fromJsonValue(m_invoice_date, json[QString("InvoiceDate")]);
    m_invoice_date_isSet = !json[QString("InvoiceDate")].isNull() && m_invoice_date_isValid;

    m_invoice_number_isValid = ::OpenAPI::fromJsonValue(m_invoice_number, json[QString("InvoiceNumber")]);
    m_invoice_number_isSet = !json[QString("InvoiceNumber")].isNull() && m_invoice_number_isValid;

    m_order_number_isValid = ::OpenAPI::fromJsonValue(m_order_number, json[QString("OrderNumber")]);
    m_order_number_isSet = !json[QString("OrderNumber")].isNull() && m_order_number_isValid;

    m_pdf_data_isValid = ::OpenAPI::fromJsonValue(m_pdf_data, json[QString("PDFData")]);
    m_pdf_data_isSet = !json[QString("PDFData")].isNull() && m_pdf_data_isValid;

    m_pdf_download_url_isValid = ::OpenAPI::fromJsonValue(m_pdf_download_url, json[QString("PdfDownloadUrl")]);
    m_pdf_download_url_isSet = !json[QString("PdfDownloadUrl")].isNull() && m_pdf_download_url_isValid;

    m_total_gross_isValid = ::OpenAPI::fromJsonValue(m_total_gross, json[QString("TotalGross")]);
    m_total_gross_isSet = !json[QString("TotalGross")].isNull() && m_total_gross_isValid;

    m_total_net_isValid = ::OpenAPI::fromJsonValue(m_total_net, json[QString("TotalNet")]);
    m_total_net_isSet = !json[QString("TotalNet")].isNull() && m_total_net_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::asJsonObject() const {
    QJsonObject obj;
    if (m_invoice_date_isSet) {
        obj.insert(QString("InvoiceDate"), ::OpenAPI::toJsonValue(m_invoice_date));
    }
    if (m_invoice_number_isSet) {
        obj.insert(QString("InvoiceNumber"), ::OpenAPI::toJsonValue(m_invoice_number));
    }
    if (m_order_number_isSet) {
        obj.insert(QString("OrderNumber"), ::OpenAPI::toJsonValue(m_order_number));
    }
    if (m_pdf_data_isSet) {
        obj.insert(QString("PDFData"), ::OpenAPI::toJsonValue(m_pdf_data));
    }
    if (m_pdf_download_url_isSet) {
        obj.insert(QString("PdfDownloadUrl"), ::OpenAPI::toJsonValue(m_pdf_download_url));
    }
    if (m_total_gross_isSet) {
        obj.insert(QString("TotalGross"), ::OpenAPI::toJsonValue(m_total_gross));
    }
    if (m_total_net_isSet) {
        obj.insert(QString("TotalNet"), ::OpenAPI::toJsonValue(m_total_net));
    }
    return obj;
}

QDateTime OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::getInvoiceDate() const {
    return m_invoice_date;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::setInvoiceDate(const QDateTime &invoice_date) {
    m_invoice_date = invoice_date;
    m_invoice_date_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_invoice_date_Set() const{
    return m_invoice_date_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_invoice_date_Valid() const{
    return m_invoice_date_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::getInvoiceNumber() const {
    return m_invoice_number;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::setInvoiceNumber(const QString &invoice_number) {
    m_invoice_number = invoice_number;
    m_invoice_number_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_invoice_number_Set() const{
    return m_invoice_number_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_invoice_number_Valid() const{
    return m_invoice_number_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::getOrderNumber() const {
    return m_order_number;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::setOrderNumber(const QString &order_number) {
    m_order_number = order_number;
    m_order_number_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_order_number_Set() const{
    return m_order_number_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_order_number_Valid() const{
    return m_order_number_isValid;
}

QByteArray OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::getPdfData() const {
    return m_pdf_data;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::setPdfData(const QByteArray &pdf_data) {
    m_pdf_data = pdf_data;
    m_pdf_data_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_pdf_data_Set() const{
    return m_pdf_data_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_pdf_data_Valid() const{
    return m_pdf_data_isValid;
}

QString OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::getPdfDownloadUrl() const {
    return m_pdf_download_url;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::setPdfDownloadUrl(const QString &pdf_download_url) {
    m_pdf_download_url = pdf_download_url;
    m_pdf_download_url_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_pdf_download_url_Set() const{
    return m_pdf_download_url_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_pdf_download_url_Valid() const{
    return m_pdf_download_url_isValid;
}

double OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::getTotalGross() const {
    return m_total_gross;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::setTotalGross(const double &total_gross) {
    m_total_gross = total_gross;
    m_total_gross_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_total_gross_Set() const{
    return m_total_gross_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_total_gross_Valid() const{
    return m_total_gross_isValid;
}

double OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::getTotalNet() const {
    return m_total_net;
}
void OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::setTotalNet(const double &total_net) {
    m_total_net = total_net;
    m_total_net_isSet = true;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_total_net_Set() const{
    return m_total_net_isSet;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::is_total_net_Valid() const{
    return m_total_net_isValid;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_invoice_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pdf_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pdf_download_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_gross_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_net_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRechnungsdruck_WebApp_Controllers_Api_Invoice::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
