/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel.h
 *
 * 
 */

#ifndef OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel_H
#define OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel : public OAIObject {
public:
    OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel();
    OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel(QString json);
    ~OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getApiAccountId() const;
    void setApiAccountId(const qint64 &api_account_id);
    bool is_api_account_id_Set() const;
    bool is_api_account_id_Valid() const;

    QString getApiAccountName() const;
    void setApiAccountName(const QString &api_account_name);
    bool is_api_account_name_Set() const;
    bool is_api_account_name_Valid() const;

    OAIObject getCustom() const;
    void setCustom(const OAIObject &custom);
    bool is_custom_Set() const;
    bool is_custom_Valid() const;

    double getExportFactor() const;
    void setExportFactor(const double &export_factor);
    bool is_export_factor_Set() const;
    bool is_export_factor_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getSourceId() const;
    void setSourceId(const QString &source_id);
    bool is_source_id_Set() const;
    bool is_source_id_Valid() const;

    bool isStockSyncInactive() const;
    void setStockSyncInactive(const bool &stock_sync_inactive);
    bool is_stock_sync_inactive_Set() const;
    bool is_stock_sync_inactive_Valid() const;

    double getStockSyncMax() const;
    void setStockSyncMax(const double &stock_sync_max);
    bool is_stock_sync_max_Set() const;
    bool is_stock_sync_max_Valid() const;

    double getStockSyncMin() const;
    void setStockSyncMin(const double &stock_sync_min);
    bool is_stock_sync_min_Set() const;
    bool is_stock_sync_min_Valid() const;

    double getUnitsPerItem() const;
    void setUnitsPerItem(const double &units_per_item);
    bool is_units_per_item_Set() const;
    bool is_units_per_item_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_api_account_id;
    bool m_api_account_id_isSet;
    bool m_api_account_id_isValid;

    QString m_api_account_name;
    bool m_api_account_name_isSet;
    bool m_api_account_name_isValid;

    OAIObject m_custom;
    bool m_custom_isSet;
    bool m_custom_isValid;

    double m_export_factor;
    bool m_export_factor_isSet;
    bool m_export_factor_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_source_id;
    bool m_source_id_isSet;
    bool m_source_id_isValid;

    bool m_stock_sync_inactive;
    bool m_stock_sync_inactive_isSet;
    bool m_stock_sync_inactive_isValid;

    double m_stock_sync_max;
    bool m_stock_sync_max_isSet;
    bool m_stock_sync_max_isValid;

    double m_stock_sync_min;
    bool m_stock_sync_min_isSet;
    bool m_stock_sync_min_isValid;

    double m_units_per_item;
    bool m_units_per_item_isSet;
    bool m_units_per_item_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel)

#endif // OAIBillbee_Interfaces_BillbeeAPI_Model_ArticleSourceApiModel_H
