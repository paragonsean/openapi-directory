/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel from '../model/BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel';
import RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelShipment from '../model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelShipment';
import RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiShipmentWithLabelResult from '../model/RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiShipmentWithLabelResult';
import RechnungsdruckWebAppControllersApiShipmentWithLabel from '../model/RechnungsdruckWebAppControllersApiShipmentWithLabel';

/**
* Shipments service.
* @module api/ShipmentsApi
* @version v1
*/
export default class ShipmentsApi {

    /**
    * Constructs a new ShipmentsApi. 
    * @alias module:api/ShipmentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the shipmentGetList operation.
     * @callback module:api/ShipmentsApi~shipmentGetListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelShipment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of all shipments optionally filtered by date. All parameters are optional.
     * @param {Object} opts Optional parameters
     * @param {Number} [page] Specifies the page to request.
     * @param {Number} [pageSize] Specifies the pagesize. Defaults to 50, max value is 250
     * @param {Date} [createdAtMin] Specifies the oldest shipment date to include in the response
     * @param {Date} [createdAtMax] Specifies the newest shipment date to include in the response
     * @param {Number} [orderId] Get shipments for this order only.
     * @param {Number} [minimumShipmentId] Get Shipments with a shipment greater or equal than this id. New shipments have a greater id than older shipments.
     * @param {Number} [shippingProviderId] Get Shippings for the specified shipping provider only. <seealso cref=\"M:Rechnungsdruck.WebApp.Controllers.Api.ShipmentController.GetShippingproviders\" />
     * @param {module:api/ShipmentsApi~shipmentGetListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelShipment}
     */
    shipmentGetList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'pageSize': opts['pageSize'],
        'createdAtMin': opts['createdAtMin'],
        'createdAtMax': opts['createdAtMax'],
        'orderId': opts['orderId'],
        'minimumShipmentId': opts['minimumShipmentId'],
        'shippingProviderId': opts['shippingProviderId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelShipment;
      return this.apiClient.callApi(
        '/api/v1/shipment/shipments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the shipmentGetPing operation.
     * @callback module:api/ShipmentsApi~shipmentGetPingCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/ShipmentsApi~shipmentGetPingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    shipmentGetPing(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/v1/shipment/ping', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the shipmentGetShippingCarrier operation.
     * @callback module:api/ShipmentsApi~shipmentGetShippingCarrierCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Queries the currently available shipping carriers.
     * @param {module:api/ShipmentsApi~shipmentGetShippingCarrierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    shipmentGetShippingCarrier(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/v1/shipment/shippingcarriers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the shipmentGetShippingproviders operation.
     * @callback module:api/ShipmentsApi~shipmentGetShippingprovidersCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Query all defined shipping providers
     * @param {module:api/ShipmentsApi~shipmentGetShippingprovidersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    shipmentGetShippingproviders(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/v1/shipment/shippingproviders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the shipmentPostShipment operation.
     * @callback module:api/ShipmentsApi~shipmentPostShipmentCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new shipment with the selected Shippingprovider
     * @param {module:model/BillbeeInterfacesBillbeeAPIModelCreateShipmentApiModel} billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel Data to specify shipment parameters
     * @param {module:api/ShipmentsApi~shipmentPostShipmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    shipmentPostShipment(billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel, callback) {
      let postBody = billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel;
      // verify the required parameter 'billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel' is set
      if (billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel === undefined || billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel === null) {
        throw new Error("Missing the required parameter 'billbeeInterfacesBillbeeAPIModelCreateShipmentApiModel' when calling shipmentPostShipment");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'text/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/v1/shipment/shipment', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the shipmentShipWithLabel operation.
     * @callback module:api/ShipmentsApi~shipmentShipWithLabelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiShipmentWithLabelResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a shipment for an order in billbee
     * @param {module:model/RechnungsdruckWebAppControllersApiShipmentWithLabel} rechnungsdruckWebAppControllersApiShipmentWithLabel Details on the order and the shipping methods, that should be used.
     * @param {module:api/ShipmentsApi~shipmentShipWithLabelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiShipmentWithLabelResult}
     */
    shipmentShipWithLabel(rechnungsdruckWebAppControllersApiShipmentWithLabel, callback) {
      let postBody = rechnungsdruckWebAppControllersApiShipmentWithLabel;
      // verify the required parameter 'rechnungsdruckWebAppControllersApiShipmentWithLabel' is set
      if (rechnungsdruckWebAppControllersApiShipmentWithLabel === undefined || rechnungsdruckWebAppControllersApiShipmentWithLabel === null) {
        throw new Error("Missing the required parameter 'rechnungsdruckWebAppControllersApiShipmentWithLabel' when calling shipmentShipWithLabel");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiShipmentWithLabelResult;
      return this.apiClient.callApi(
        '/api/v1/shipment/shipwithlabel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
