/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelInvoiceApiModel from '../model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelInvoiceApiModel';
import RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiInvoice from '../model/RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiInvoice';

/**
* Invoice service.
* @module api/InvoiceApi
* @version v1
*/
export default class InvoiceApi {

    /**
    * Constructs a new InvoiceApi. 
    * @alias module:api/InvoiceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the orderApiCreateInvoice_0 operation.
     * @callback module:api/InvoiceApi~orderApiCreateInvoice_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiInvoice} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an invoice for an existing order. This request is extra throttled by order and api key to a maximum of 1 per 5 minutes.
     * @param {Number} id The internal billbee id of the order
     * @param {Object} opts Optional parameters
     * @param {Boolean} [includeInvoicePdf] If true, the PDF is included in the response as base64 encoded string
     * @param {Number} [templateId] You can pass the id of an invoice template to overwrite the assigned template for invoice creation
     * @param {Number} [sendToCloudId] You can pass the id of a connected cloud printer/storage to send the invoice to it
     * @param {module:api/InvoiceApi~orderApiCreateInvoice_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiInvoice}
     */
    orderApiCreateInvoice_0(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling orderApiCreateInvoice_0");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'includeInvoicePdf': opts['includeInvoicePdf'],
        'templateId': opts['templateId'],
        'sendToCloudId': opts['sendToCloudId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiInvoice;
      return this.apiClient.callApi(
        '/api/v1/orders/CreateInvoice/{id}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the orderApiGetInvoiceList_0 operation.
     * @callback module:api/InvoiceApi~orderApiGetInvoiceList_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelInvoiceApiModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of all invoices optionally filtered by date. This request ist throttled to 1 per 1 minute for same page and minInvoiceDate
     * @param {Object} opts Optional parameters
     * @param {Date} [minInvoiceDate] Specifies the oldest invoice date to include
     * @param {Date} [maxInvoiceDate] Specifies the newest invoice date to include
     * @param {Number} [page] Specifies the page to request
     * @param {Number} [pageSize] Specifies the pagesize. Defaults to 50, max value is 250
     * @param {Array.<Number>} [shopId] Specifies a list of shop ids for which invoices should be included
     * @param {Array.<Number>} [orderStateId] Specifies a list of state ids to include in the response
     * @param {Array.<String>} [tag] 
     * @param {Date} [minPayDate] 
     * @param {Date} [maxPayDate] 
     * @param {Boolean} [includePositions] 
     * @param {Boolean} [excludeTags] If true the list of tags passed to the call are used to filter orders to not include these tags
     * @param {module:api/InvoiceApi~orderApiGetInvoiceList_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelInvoiceApiModel}
     */
    orderApiGetInvoiceList_0(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'minInvoiceDate': opts['minInvoiceDate'],
        'maxInvoiceDate': opts['maxInvoiceDate'],
        'page': opts['page'],
        'pageSize': opts['pageSize'],
        'shopId': this.apiClient.buildCollectionParam(opts['shopId'], 'multi'),
        'orderStateId': this.apiClient.buildCollectionParam(opts['orderStateId'], 'multi'),
        'tag': this.apiClient.buildCollectionParam(opts['tag'], 'multi'),
        'minPayDate': opts['minPayDate'],
        'maxPayDate': opts['maxPayDate'],
        'includePositions': opts['includePositions'],
        'excludeTags': opts['excludeTags']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelInvoiceApiModel;
      return this.apiClient.callApi(
        '/api/v1/orders/invoices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
