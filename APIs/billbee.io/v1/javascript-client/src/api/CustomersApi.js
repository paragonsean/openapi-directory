/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel from '../model/BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel';
import BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel from '../model/BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel';
import BillbeeInterfacesBillbeeAPIModelCustomerApiModel from '../model/BillbeeInterfacesBillbeeAPIModelCustomerApiModel';
import RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel from '../model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel';
import RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerApiModel from '../model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerApiModel';
import RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListRechnungsdruckWebAppControllersApiOrder from '../model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListRechnungsdruckWebAppControllersApiOrder';
import RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel from '../model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel';
import RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel from '../model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel';
import RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiSearchControllerSearchResultsModel from '../model/RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiSearchControllerSearchResultsModel';
import RechnungsdruckWebAppControllersApiSearchControllerSearchModel from '../model/RechnungsdruckWebAppControllersApiSearchControllerSearchModel';

/**
* Customers service.
* @module api/CustomersApi
* @version v1
*/
export default class CustomersApi {

    /**
    * Constructs a new CustomersApi. 
    * @alias module:api/CustomersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the customerAddCustomerAddress operation.
     * @callback module:api/CustomersApi~customerAddCustomerAddressCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a new address to a customer
     * Id and  CustomerId will be ignored in model. If Id is set, the addition will be stopped.
     * @param {Number} id CustomerId to attach the new address to.
     * @param {module:model/BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel} billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel Model containing the address, that should be attached.
     * @param {module:api/CustomersApi~customerAddCustomerAddressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel}
     */
    customerAddCustomerAddress(id, billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel, callback) {
      let postBody = billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling customerAddCustomerAddress");
      }
      // verify the required parameter 'billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel' is set
      if (billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel === undefined || billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel === null) {
        throw new Error("Missing the required parameter 'billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel' when calling customerAddCustomerAddress");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
      return this.apiClient.callApi(
        '/api/v1/customers/{id}/addresses', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerCreate operation.
     * @callback module:api/CustomersApi~customerCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new customer
     * @param {module:model/BillbeeInterfacesBillbeeAPIModelCreateCustomerApiModel} billbeeInterfacesBillbeeAPIModelCreateCustomerApiModel 
     * @param {module:api/CustomersApi~customerCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel}
     */
    customerCreate(billbeeInterfacesBillbeeAPIModelCreateCustomerApiModel, callback) {
      let postBody = billbeeInterfacesBillbeeAPIModelCreateCustomerApiModel;
      // verify the required parameter 'billbeeInterfacesBillbeeAPIModelCreateCustomerApiModel' is set
      if (billbeeInterfacesBillbeeAPIModelCreateCustomerApiModel === undefined || billbeeInterfacesBillbeeAPIModelCreateCustomerApiModel === null) {
        throw new Error("Missing the required parameter 'billbeeInterfacesBillbeeAPIModelCreateCustomerApiModel' when calling customerCreate");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel;
      return this.apiClient.callApi(
        '/api/v1/customers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerGetAll operation.
     * @callback module:api/CustomersApi~customerGetAllCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerApiModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of all customers
     * @param {Object} opts Optional parameters
     * @param {Number} [page] The current page to request starting with 1
     * @param {Number} [pageSize] The pagesize for the result list. Values between 1 and 250 are allowed
     * @param {module:api/CustomersApi~customerGetAllCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerApiModel}
     */
    customerGetAll(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'pageSize': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerApiModel;
      return this.apiClient.callApi(
        '/api/v1/customers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerGetCustomerAddress operation.
     * @callback module:api/CustomersApi~customerGetCustomerAddressCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Queries a single address from a customer
     * @param {Number} id The id of the address
     * @param {module:api/CustomersApi~customerGetCustomerAddressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel}
     */
    customerGetCustomerAddress(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling customerGetCustomerAddress");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
      return this.apiClient.callApi(
        '/api/v1/customers/addresses/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerGetCustomerAddresses operation.
     * @callback module:api/CustomersApi~customerGetCustomerAddressesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Queries a list of addresses from a customer
     * @param {Number} id The id of the customer
     * @param {Object} opts Optional parameters
     * @param {Number} [page] The current page to request starting with 1
     * @param {Number} [pageSize] The pagesize for the result list. Values between 1 and 250 are allowed
     * @param {module:api/CustomersApi~customerGetCustomerAddressesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel}
     */
    customerGetCustomerAddresses(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling customerGetCustomerAddresses");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'page': opts['page'],
        'pageSize': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
      return this.apiClient.callApi(
        '/api/v1/customers/{id}/addresses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerGetCustomerOrders operation.
     * @callback module:api/CustomersApi~customerGetCustomerOrdersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListRechnungsdruckWebAppControllersApiOrder} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Queries a list of orders from a customer
     * @param {Number} id The id of the customer
     * @param {Object} opts Optional parameters
     * @param {Number} [page] The current page to request starting with 1
     * @param {Number} [pageSize] The pagesize for the result list. Values between 1 and 250 are allowed
     * @param {module:api/CustomersApi~customerGetCustomerOrdersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListRechnungsdruckWebAppControllersApiOrder}
     */
    customerGetCustomerOrders(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling customerGetCustomerOrders");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'page': opts['page'],
        'pageSize': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiPagedResultSystemCollectionsGenericListRechnungsdruckWebAppControllersApiOrder;
      return this.apiClient.callApi(
        '/api/v1/customers/{id}/orders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerGetOne operation.
     * @callback module:api/CustomersApi~customerGetOneCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Queries a single customer by id
     * @param {Number} id The id of the customer to query
     * @param {module:api/CustomersApi~customerGetOneCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel}
     */
    customerGetOne(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling customerGetOne");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel;
      return this.apiClient.callApi(
        '/api/v1/customers/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerPatchAddress operation.
     * @callback module:api/CustomersApi~customerPatchAddressCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates one or more fields of an address
     * Id and CustomerId cannot be changed
     * @param {Number} id The id of the address
     * @param {Object.<String, Object>} body The address fields to be changed. Please query an address via (todo) to see all fields. Note that Id and CustomerId cannot be changed.
     * @param {module:api/CustomersApi~customerPatchAddressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel}
     */
    customerPatchAddress(id, body, callback) {
      let postBody = body;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling customerPatchAddress");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling customerPatchAddress");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'text/json'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
      return this.apiClient.callApi(
        '/api/v1/customers/addresses/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerUpdate operation.
     * @callback module:api/CustomersApi~customerUpdateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a customer by id
     * @param {Number} id The id of the customer
     * @param {module:model/BillbeeInterfacesBillbeeAPIModelCustomerApiModel} billbeeInterfacesBillbeeAPIModelCustomerApiModel 
     * @param {module:api/CustomersApi~customerUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel}
     */
    customerUpdate(id, billbeeInterfacesBillbeeAPIModelCustomerApiModel, callback) {
      let postBody = billbeeInterfacesBillbeeAPIModelCustomerApiModel;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling customerUpdate");
      }
      // verify the required parameter 'billbeeInterfacesBillbeeAPIModelCustomerApiModel' is set
      if (billbeeInterfacesBillbeeAPIModelCustomerApiModel === undefined || billbeeInterfacesBillbeeAPIModelCustomerApiModel === null) {
        throw new Error("Missing the required parameter 'billbeeInterfacesBillbeeAPIModelCustomerApiModel' when calling customerUpdate");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerApiModel;
      return this.apiClient.callApi(
        '/api/v1/customers/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the customerUpdateAddress operation.
     * @callback module:api/CustomersApi~customerUpdateAddressCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates all fields of an address
     * Id and CustomerId cannot be changed. Fields you do not send will become empty.
     * @param {Number} id The id of the address
     * @param {module:model/BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel} billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel The updated address. Please query an address via (todo) to see all fields. Note that Id and CustomerId cannot be changed.
     * @param {module:api/CustomersApi~customerUpdateAddressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel}
     */
    customerUpdateAddress(id, billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel, callback) {
      let postBody = billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling customerUpdateAddress");
      }
      // verify the required parameter 'billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel' is set
      if (billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel === undefined || billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel === null) {
        throw new Error("Missing the required parameter 'billbeeInterfacesBillbeeAPIModelCustomerAddressApiModel' when calling customerUpdateAddress");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiResultBillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;
      return this.apiClient.callApi(
        '/api/v1/customers/addresses/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchSearch_0 operation.
     * @callback module:api/CustomersApi~searchSearch_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiSearchControllerSearchResultsModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search for products, customers and orders.  Type can be \"order\", \"product\" and / or \"customer\"  Term can contains lucene query syntax
     * @param {module:model/RechnungsdruckWebAppControllersApiSearchControllerSearchModel} rechnungsdruckWebAppControllersApiSearchControllerSearchModel 
     * @param {module:api/CustomersApi~searchSearch_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiSearchControllerSearchResultsModel}
     */
    searchSearch_0(rechnungsdruckWebAppControllersApiSearchControllerSearchModel, callback) {
      let postBody = rechnungsdruckWebAppControllersApiSearchControllerSearchModel;
      // verify the required parameter 'rechnungsdruckWebAppControllersApiSearchControllerSearchModel' is set
      if (rechnungsdruckWebAppControllersApiSearchControllerSearchModel === undefined || rechnungsdruckWebAppControllersApiSearchControllerSearchModel === null) {
        throw new Error("Missing the required parameter 'rechnungsdruckWebAppControllersApiSearchControllerSearchModel' when calling searchSearch_0");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = RechnungsdruckWebAppControllersApiApiResultRechnungsdruckWebAppControllersApiSearchControllerSearchResultsModel;
      return this.apiClient.callApi(
        '/api/v1/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
