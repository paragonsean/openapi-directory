/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* DeliveryNote service.
* @module api/DeliveryNoteApi
* @version v1
*/
export default class DeliveryNoteApi {

    /**
    * Constructs a new DeliveryNoteApi. 
    * @alias module:api/DeliveryNoteApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the orderApiCreateDeliveryNote_0 operation.
     * @callback module:api/DeliveryNoteApi~orderApiCreateDeliveryNote_0Callback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an delivery note for an existing order. This request is extra throttled by order and api key to a maximum of 1 per 5 minutes.
     * @param {Number} id The internal billbee id of the order
     * @param {Object} opts Optional parameters
     * @param {Boolean} [includePdf] If true, the PDF is included in the response as base64 encoded string
     * @param {Number} [sendToCloudId] Optionally specify the id of a billbee connected cloud device to send the pdf to
     * @param {module:api/DeliveryNoteApi~orderApiCreateDeliveryNote_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    orderApiCreateDeliveryNote_0(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling orderApiCreateDeliveryNote_0");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'includePdf': opts['includePdf'],
        'sendToCloudId': opts['sendToCloudId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/v1/orders/CreateDeliveryNote/{id}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
