/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel model module.
 * @module model/RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel
 * @version v1
 */
class RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel {
    /**
     * Constructs a new <code>RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel</code>.
     * Data of the shipment to be created
     * @alias module:model/RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel
     */
    constructor() { 
        
        RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel} obj Optional instance to populate.
     * @return {module:model/RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel} The populated <code>RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel();

            if (data.hasOwnProperty('CarrierId')) {
                obj['CarrierId'] = ApiClient.convertToType(data['CarrierId'], 'Number');
            }
            if (data.hasOwnProperty('Comment')) {
                obj['Comment'] = ApiClient.convertToType(data['Comment'], 'String');
            }
            if (data.hasOwnProperty('OrderId')) {
                obj['OrderId'] = ApiClient.convertToType(data['OrderId'], 'String');
            }
            if (data.hasOwnProperty('ShipmentType')) {
                obj['ShipmentType'] = ApiClient.convertToType(data['ShipmentType'], 'Number');
            }
            if (data.hasOwnProperty('ShippingId')) {
                obj['ShippingId'] = ApiClient.convertToType(data['ShippingId'], 'String');
            }
            if (data.hasOwnProperty('ShippingProviderId')) {
                obj['ShippingProviderId'] = ApiClient.convertToType(data['ShippingProviderId'], 'Number');
            }
            if (data.hasOwnProperty('ShippingProviderProductId')) {
                obj['ShippingProviderProductId'] = ApiClient.convertToType(data['ShippingProviderProductId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Comment'] && !(typeof data['Comment'] === 'string' || data['Comment'] instanceof String)) {
            throw new Error("Expected the field `Comment` to be a primitive type in the JSON string but got " + data['Comment']);
        }
        // ensure the json data is a string
        if (data['OrderId'] && !(typeof data['OrderId'] === 'string' || data['OrderId'] instanceof String)) {
            throw new Error("Expected the field `OrderId` to be a primitive type in the JSON string but got " + data['OrderId']);
        }
        // ensure the json data is a string
        if (data['ShippingId'] && !(typeof data['ShippingId'] === 'string' || data['ShippingId'] instanceof String)) {
            throw new Error("Expected the field `ShippingId` to be a primitive type in the JSON string but got " + data['ShippingId']);
        }

        return true;
    }


}



/**
 * Optional the id of a shipping carrier that should be assigend to the shipment  Will override the carrier from the shipment product.  Please use the integer value from this Enumeration:  {Billbee.Interfaces.Shipping.Enums.ShippingCarrier}
 * @member {Number} CarrierId
 */
RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.prototype['CarrierId'] = undefined;

/**
 * Optional a text stored with the shipment
 * @member {String} Comment
 */
RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.prototype['Comment'] = undefined;

/**
 * Optional a differing order number of the shipment if available
 * @member {String} OrderId
 */
RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.prototype['OrderId'] = undefined;

/**
 * 0 if Shipment, 1 if Retoure  {Billbee.Interfaces.Shipping.Enums.ShipmentTypeEnum}
 * @member {Number} ShipmentType
 */
RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.prototype['ShipmentType'] = undefined;

/**
 * The id of the shipment (Sendungsnummer/trackingid)
 * @member {String} ShippingId
 */
RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.prototype['ShippingId'] = undefined;

/**
 * Optional the id of a shipping provider existing in the billbee account that should be assigned to the shipment
 * @member {Number} ShippingProviderId
 */
RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.prototype['ShippingProviderId'] = undefined;

/**
 * Optional the id of a shipping provider product that should be assigend to the shipment
 * @member {Number} ShippingProviderProductId
 */
RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.prototype['ShippingProviderProductId'] = undefined;






export default RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel;

