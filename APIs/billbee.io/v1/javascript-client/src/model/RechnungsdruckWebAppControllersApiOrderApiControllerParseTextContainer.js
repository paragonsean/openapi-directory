/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer model module.
 * @module model/RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer
 * @version v1
 */
class RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer {
    /**
     * Constructs a new <code>RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer</code>.
     * @alias module:model/RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer
     */
    constructor() { 
        
        RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer} obj Optional instance to populate.
     * @return {module:model/RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer} The populated <code>RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer();

            if (data.hasOwnProperty('IsHtml')) {
                obj['IsHtml'] = ApiClient.convertToType(data['IsHtml'], 'Boolean');
            }
            if (data.hasOwnProperty('Language')) {
                obj['Language'] = ApiClient.convertToType(data['Language'], 'String');
            }
            if (data.hasOwnProperty('TextToParse')) {
                obj['TextToParse'] = ApiClient.convertToType(data['TextToParse'], 'String');
            }
            if (data.hasOwnProperty('Trim')) {
                obj['Trim'] = ApiClient.convertToType(data['Trim'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Language'] && !(typeof data['Language'] === 'string' || data['Language'] instanceof String)) {
            throw new Error("Expected the field `Language` to be a primitive type in the JSON string but got " + data['Language']);
        }
        // ensure the json data is a string
        if (data['TextToParse'] && !(typeof data['TextToParse'] === 'string' || data['TextToParse'] instanceof String)) {
            throw new Error("Expected the field `TextToParse` to be a primitive type in the JSON string but got " + data['TextToParse']);
        }

        return true;
    }


}



/**
 * If true, the string will be handled as html.
 * @member {Boolean} IsHtml
 */
RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.prototype['IsHtml'] = undefined;

/**
 * The ISO 639-1 code of the target language. Using default if not set.
 * @member {String} Language
 */
RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.prototype['Language'] = undefined;

/**
 * The text to parse and replace the placeholders in.
 * @member {String} TextToParse
 */
RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.prototype['TextToParse'] = undefined;

/**
 * If true, then the placeholder values are trimmed after usage.
 * @member {Boolean} Trim
 */
RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.prototype['Trim'] = undefined;






export default RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer;

