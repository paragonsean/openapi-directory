/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel model module.
 * @module model/BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel
 * @version v1
 */
class BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel {
    /**
     * Constructs a new <code>BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel</code>.
     * @alias module:model/BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel
     */
    constructor() { 
        
        BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel} obj Optional instance to populate.
     * @return {module:model/BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel} The populated <code>BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel();

            if (data.hasOwnProperty('BillbeeId')) {
                obj['BillbeeId'] = ApiClient.convertToType(data['BillbeeId'], 'Number');
            }
            if (data.hasOwnProperty('City')) {
                obj['City'] = ApiClient.convertToType(data['City'], 'String');
            }
            if (data.hasOwnProperty('Company')) {
                obj['Company'] = ApiClient.convertToType(data['Company'], 'String');
            }
            if (data.hasOwnProperty('Country')) {
                obj['Country'] = ApiClient.convertToType(data['Country'], 'String');
            }
            if (data.hasOwnProperty('CountryISO2')) {
                obj['CountryISO2'] = ApiClient.convertToType(data['CountryISO2'], 'String');
            }
            if (data.hasOwnProperty('Email')) {
                obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
            }
            if (data.hasOwnProperty('FirstName')) {
                obj['FirstName'] = ApiClient.convertToType(data['FirstName'], 'String');
            }
            if (data.hasOwnProperty('HouseNumber')) {
                obj['HouseNumber'] = ApiClient.convertToType(data['HouseNumber'], 'String');
            }
            if (data.hasOwnProperty('LastName')) {
                obj['LastName'] = ApiClient.convertToType(data['LastName'], 'String');
            }
            if (data.hasOwnProperty('Line2')) {
                obj['Line2'] = ApiClient.convertToType(data['Line2'], 'String');
            }
            if (data.hasOwnProperty('NameAddition')) {
                obj['NameAddition'] = ApiClient.convertToType(data['NameAddition'], 'String');
            }
            if (data.hasOwnProperty('Phone')) {
                obj['Phone'] = ApiClient.convertToType(data['Phone'], 'String');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], 'String');
            }
            if (data.hasOwnProperty('Street')) {
                obj['Street'] = ApiClient.convertToType(data['Street'], 'String');
            }
            if (data.hasOwnProperty('Zip')) {
                obj['Zip'] = ApiClient.convertToType(data['Zip'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['City'] && !(typeof data['City'] === 'string' || data['City'] instanceof String)) {
            throw new Error("Expected the field `City` to be a primitive type in the JSON string but got " + data['City']);
        }
        // ensure the json data is a string
        if (data['Company'] && !(typeof data['Company'] === 'string' || data['Company'] instanceof String)) {
            throw new Error("Expected the field `Company` to be a primitive type in the JSON string but got " + data['Company']);
        }
        // ensure the json data is a string
        if (data['Country'] && !(typeof data['Country'] === 'string' || data['Country'] instanceof String)) {
            throw new Error("Expected the field `Country` to be a primitive type in the JSON string but got " + data['Country']);
        }
        // ensure the json data is a string
        if (data['CountryISO2'] && !(typeof data['CountryISO2'] === 'string' || data['CountryISO2'] instanceof String)) {
            throw new Error("Expected the field `CountryISO2` to be a primitive type in the JSON string but got " + data['CountryISO2']);
        }
        // ensure the json data is a string
        if (data['Email'] && !(typeof data['Email'] === 'string' || data['Email'] instanceof String)) {
            throw new Error("Expected the field `Email` to be a primitive type in the JSON string but got " + data['Email']);
        }
        // ensure the json data is a string
        if (data['FirstName'] && !(typeof data['FirstName'] === 'string' || data['FirstName'] instanceof String)) {
            throw new Error("Expected the field `FirstName` to be a primitive type in the JSON string but got " + data['FirstName']);
        }
        // ensure the json data is a string
        if (data['HouseNumber'] && !(typeof data['HouseNumber'] === 'string' || data['HouseNumber'] instanceof String)) {
            throw new Error("Expected the field `HouseNumber` to be a primitive type in the JSON string but got " + data['HouseNumber']);
        }
        // ensure the json data is a string
        if (data['LastName'] && !(typeof data['LastName'] === 'string' || data['LastName'] instanceof String)) {
            throw new Error("Expected the field `LastName` to be a primitive type in the JSON string but got " + data['LastName']);
        }
        // ensure the json data is a string
        if (data['Line2'] && !(typeof data['Line2'] === 'string' || data['Line2'] instanceof String)) {
            throw new Error("Expected the field `Line2` to be a primitive type in the JSON string but got " + data['Line2']);
        }
        // ensure the json data is a string
        if (data['NameAddition'] && !(typeof data['NameAddition'] === 'string' || data['NameAddition'] instanceof String)) {
            throw new Error("Expected the field `NameAddition` to be a primitive type in the JSON string but got " + data['NameAddition']);
        }
        // ensure the json data is a string
        if (data['Phone'] && !(typeof data['Phone'] === 'string' || data['Phone'] instanceof String)) {
            throw new Error("Expected the field `Phone` to be a primitive type in the JSON string but got " + data['Phone']);
        }
        // ensure the json data is a string
        if (data['State'] && !(typeof data['State'] === 'string' || data['State'] instanceof String)) {
            throw new Error("Expected the field `State` to be a primitive type in the JSON string but got " + data['State']);
        }
        // ensure the json data is a string
        if (data['Street'] && !(typeof data['Street'] === 'string' || data['Street'] instanceof String)) {
            throw new Error("Expected the field `Street` to be a primitive type in the JSON string but got " + data['Street']);
        }
        // ensure the json data is a string
        if (data['Zip'] && !(typeof data['Zip'] === 'string' || data['Zip'] instanceof String)) {
            throw new Error("Expected the field `Zip` to be a primitive type in the JSON string but got " + data['Zip']);
        }

        return true;
    }


}



/**
 * @member {Number} BillbeeId
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['BillbeeId'] = undefined;

/**
 * @member {String} City
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['City'] = undefined;

/**
 * @member {String} Company
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['Company'] = undefined;

/**
 * @member {String} Country
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['Country'] = undefined;

/**
 * @member {String} CountryISO2
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['CountryISO2'] = undefined;

/**
 * @member {String} Email
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['Email'] = undefined;

/**
 * @member {String} FirstName
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['FirstName'] = undefined;

/**
 * @member {String} HouseNumber
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['HouseNumber'] = undefined;

/**
 * @member {String} LastName
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['LastName'] = undefined;

/**
 * @member {String} Line2
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['Line2'] = undefined;

/**
 * @member {String} NameAddition
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['NameAddition'] = undefined;

/**
 * @member {String} Phone
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['Phone'] = undefined;

/**
 * @member {String} State
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['State'] = undefined;

/**
 * @member {String} Street
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['Street'] = undefined;

/**
 * @member {String} Zip
 */
BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.prototype['Zip'] = undefined;






export default BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel;

