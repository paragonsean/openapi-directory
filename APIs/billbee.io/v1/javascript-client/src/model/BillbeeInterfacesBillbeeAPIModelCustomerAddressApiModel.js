/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel model module.
 * @module model/BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel
 * @version v1
 */
class BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel {
    /**
     * Constructs a new <code>BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel</code>.
     * Container for passing address data
     * @alias module:model/BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel
     */
    constructor() { 
        
        BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel} obj Optional instance to populate.
     * @return {module:model/BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel} The populated <code>BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel();

            if (data.hasOwnProperty('AddressAddition')) {
                obj['AddressAddition'] = ApiClient.convertToType(data['AddressAddition'], 'String');
            }
            if (data.hasOwnProperty('AddressType')) {
                obj['AddressType'] = ApiClient.convertToType(data['AddressType'], 'Number');
            }
            if (data.hasOwnProperty('ArchivedAt')) {
                obj['ArchivedAt'] = ApiClient.convertToType(data['ArchivedAt'], 'Date');
            }
            if (data.hasOwnProperty('City')) {
                obj['City'] = ApiClient.convertToType(data['City'], 'String');
            }
            if (data.hasOwnProperty('Company')) {
                obj['Company'] = ApiClient.convertToType(data['Company'], 'String');
            }
            if (data.hasOwnProperty('CountryCode')) {
                obj['CountryCode'] = ApiClient.convertToType(data['CountryCode'], 'String');
            }
            if (data.hasOwnProperty('CustomerId')) {
                obj['CustomerId'] = ApiClient.convertToType(data['CustomerId'], 'Number');
            }
            if (data.hasOwnProperty('Email')) {
                obj['Email'] = ApiClient.convertToType(data['Email'], 'String');
            }
            if (data.hasOwnProperty('Fax')) {
                obj['Fax'] = ApiClient.convertToType(data['Fax'], 'String');
            }
            if (data.hasOwnProperty('FirstName')) {
                obj['FirstName'] = ApiClient.convertToType(data['FirstName'], 'String');
            }
            if (data.hasOwnProperty('Housenumber')) {
                obj['Housenumber'] = ApiClient.convertToType(data['Housenumber'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('LastName')) {
                obj['LastName'] = ApiClient.convertToType(data['LastName'], 'String');
            }
            if (data.hasOwnProperty('Name2')) {
                obj['Name2'] = ApiClient.convertToType(data['Name2'], 'String');
            }
            if (data.hasOwnProperty('RestoredAt')) {
                obj['RestoredAt'] = ApiClient.convertToType(data['RestoredAt'], 'Date');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], 'String');
            }
            if (data.hasOwnProperty('Street')) {
                obj['Street'] = ApiClient.convertToType(data['Street'], 'String');
            }
            if (data.hasOwnProperty('Tel1')) {
                obj['Tel1'] = ApiClient.convertToType(data['Tel1'], 'String');
            }
            if (data.hasOwnProperty('Tel2')) {
                obj['Tel2'] = ApiClient.convertToType(data['Tel2'], 'String');
            }
            if (data.hasOwnProperty('Zip')) {
                obj['Zip'] = ApiClient.convertToType(data['Zip'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AddressAddition'] && !(typeof data['AddressAddition'] === 'string' || data['AddressAddition'] instanceof String)) {
            throw new Error("Expected the field `AddressAddition` to be a primitive type in the JSON string but got " + data['AddressAddition']);
        }
        // ensure the json data is a string
        if (data['City'] && !(typeof data['City'] === 'string' || data['City'] instanceof String)) {
            throw new Error("Expected the field `City` to be a primitive type in the JSON string but got " + data['City']);
        }
        // ensure the json data is a string
        if (data['Company'] && !(typeof data['Company'] === 'string' || data['Company'] instanceof String)) {
            throw new Error("Expected the field `Company` to be a primitive type in the JSON string but got " + data['Company']);
        }
        // ensure the json data is a string
        if (data['CountryCode'] && !(typeof data['CountryCode'] === 'string' || data['CountryCode'] instanceof String)) {
            throw new Error("Expected the field `CountryCode` to be a primitive type in the JSON string but got " + data['CountryCode']);
        }
        // ensure the json data is a string
        if (data['Email'] && !(typeof data['Email'] === 'string' || data['Email'] instanceof String)) {
            throw new Error("Expected the field `Email` to be a primitive type in the JSON string but got " + data['Email']);
        }
        // ensure the json data is a string
        if (data['Fax'] && !(typeof data['Fax'] === 'string' || data['Fax'] instanceof String)) {
            throw new Error("Expected the field `Fax` to be a primitive type in the JSON string but got " + data['Fax']);
        }
        // ensure the json data is a string
        if (data['FirstName'] && !(typeof data['FirstName'] === 'string' || data['FirstName'] instanceof String)) {
            throw new Error("Expected the field `FirstName` to be a primitive type in the JSON string but got " + data['FirstName']);
        }
        // ensure the json data is a string
        if (data['Housenumber'] && !(typeof data['Housenumber'] === 'string' || data['Housenumber'] instanceof String)) {
            throw new Error("Expected the field `Housenumber` to be a primitive type in the JSON string but got " + data['Housenumber']);
        }
        // ensure the json data is a string
        if (data['LastName'] && !(typeof data['LastName'] === 'string' || data['LastName'] instanceof String)) {
            throw new Error("Expected the field `LastName` to be a primitive type in the JSON string but got " + data['LastName']);
        }
        // ensure the json data is a string
        if (data['Name2'] && !(typeof data['Name2'] === 'string' || data['Name2'] instanceof String)) {
            throw new Error("Expected the field `Name2` to be a primitive type in the JSON string but got " + data['Name2']);
        }
        // ensure the json data is a string
        if (data['State'] && !(typeof data['State'] === 'string' || data['State'] instanceof String)) {
            throw new Error("Expected the field `State` to be a primitive type in the JSON string but got " + data['State']);
        }
        // ensure the json data is a string
        if (data['Street'] && !(typeof data['Street'] === 'string' || data['Street'] instanceof String)) {
            throw new Error("Expected the field `Street` to be a primitive type in the JSON string but got " + data['Street']);
        }
        // ensure the json data is a string
        if (data['Tel1'] && !(typeof data['Tel1'] === 'string' || data['Tel1'] instanceof String)) {
            throw new Error("Expected the field `Tel1` to be a primitive type in the JSON string but got " + data['Tel1']);
        }
        // ensure the json data is a string
        if (data['Tel2'] && !(typeof data['Tel2'] === 'string' || data['Tel2'] instanceof String)) {
            throw new Error("Expected the field `Tel2` to be a primitive type in the JSON string but got " + data['Tel2']);
        }
        // ensure the json data is a string
        if (data['Zip'] && !(typeof data['Zip'] === 'string' || data['Zip'] instanceof String)) {
            throw new Error("Expected the field `Zip` to be a primitive type in the JSON string but got " + data['Zip']);
        }

        return true;
    }


}



/**
 * @member {String} AddressAddition
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['AddressAddition'] = undefined;

/**
 * The type of the address
 * @member {module:model/BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.AddressTypeEnum} AddressType
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['AddressType'] = undefined;

/**
 * If set, the customeraddress was already archived at the given date. Further modification is disabled.
 * @member {Date} ArchivedAt
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['ArchivedAt'] = undefined;

/**
 * @member {String} City
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['City'] = undefined;

/**
 * The name of the company
 * @member {String} Company
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['Company'] = undefined;

/**
 * The ISO2 code of the country
 * @member {String} CountryCode
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['CountryCode'] = undefined;

/**
 * The internal Billbee id of the customer the address belongs to
 * @member {Number} CustomerId
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['CustomerId'] = undefined;

/**
 * @member {String} Email
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['Email'] = undefined;

/**
 * @member {String} Fax
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['Fax'] = undefined;

/**
 * @member {String} FirstName
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['FirstName'] = undefined;

/**
 * @member {String} Housenumber
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['Housenumber'] = undefined;

/**
 * The internal Billbee ID of the address record. Can be null if a new address is created
 * @member {Number} Id
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['Id'] = undefined;

/**
 * @member {String} LastName
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['LastName'] = undefined;

/**
 * Optionally an additional name field
 * @member {String} Name2
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['Name2'] = undefined;

/**
 * If set, the customeraddress was restored from the archive at the given date.
 * @member {Date} RestoredAt
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['RestoredAt'] = undefined;

/**
 * @member {String} State
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['State'] = undefined;

/**
 * @member {String} Street
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['Street'] = undefined;

/**
 * @member {String} Tel1
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['Tel1'] = undefined;

/**
 * @member {String} Tel2
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['Tel2'] = undefined;

/**
 * @member {String} Zip
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel.prototype['Zip'] = undefined;





/**
 * Allowed values for the <code>AddressType</code> property.
 * @enum {Number}
 * @readonly
 */
BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel['AddressTypeEnum'] = {

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2
};



export default BillbeeInterfacesBillbeeAPIModelCustomerAddressApiModel;

