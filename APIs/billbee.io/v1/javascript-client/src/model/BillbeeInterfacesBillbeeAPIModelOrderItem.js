/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillbeeInterfacesBillbeeAPIModelOrderItemAttribute from './BillbeeInterfacesBillbeeAPIModelOrderItemAttribute';
import BillbeeInterfacesBillbeeAPIModelSoldProduct from './BillbeeInterfacesBillbeeAPIModelSoldProduct';

/**
 * The BillbeeInterfacesBillbeeAPIModelOrderItem model module.
 * @module model/BillbeeInterfacesBillbeeAPIModelOrderItem
 * @version v1
 */
class BillbeeInterfacesBillbeeAPIModelOrderItem {
    /**
     * Constructs a new <code>BillbeeInterfacesBillbeeAPIModelOrderItem</code>.
     * @alias module:model/BillbeeInterfacesBillbeeAPIModelOrderItem
     */
    constructor() { 
        
        BillbeeInterfacesBillbeeAPIModelOrderItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillbeeInterfacesBillbeeAPIModelOrderItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillbeeInterfacesBillbeeAPIModelOrderItem} obj Optional instance to populate.
     * @return {module:model/BillbeeInterfacesBillbeeAPIModelOrderItem} The populated <code>BillbeeInterfacesBillbeeAPIModelOrderItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillbeeInterfacesBillbeeAPIModelOrderItem();

            if (data.hasOwnProperty('Attributes')) {
                obj['Attributes'] = ApiClient.convertToType(data['Attributes'], [BillbeeInterfacesBillbeeAPIModelOrderItemAttribute]);
            }
            if (data.hasOwnProperty('BillbeeId')) {
                obj['BillbeeId'] = ApiClient.convertToType(data['BillbeeId'], 'Number');
            }
            if (data.hasOwnProperty('Discount')) {
                obj['Discount'] = ApiClient.convertToType(data['Discount'], 'Number');
            }
            if (data.hasOwnProperty('DontAdjustStock')) {
                obj['DontAdjustStock'] = ApiClient.convertToType(data['DontAdjustStock'], 'Boolean');
            }
            if (data.hasOwnProperty('GetPriceFromArticleIfAny')) {
                obj['GetPriceFromArticleIfAny'] = ApiClient.convertToType(data['GetPriceFromArticleIfAny'], 'Boolean');
            }
            if (data.hasOwnProperty('InvoiceSKU')) {
                obj['InvoiceSKU'] = ApiClient.convertToType(data['InvoiceSKU'], 'String');
            }
            if (data.hasOwnProperty('IsCoupon')) {
                obj['IsCoupon'] = ApiClient.convertToType(data['IsCoupon'], 'Boolean');
            }
            if (data.hasOwnProperty('Product')) {
                obj['Product'] = BillbeeInterfacesBillbeeAPIModelSoldProduct.constructFromObject(data['Product']);
            }
            if (data.hasOwnProperty('Quantity')) {
                obj['Quantity'] = ApiClient.convertToType(data['Quantity'], 'Number');
            }
            if (data.hasOwnProperty('SerialNumber')) {
                obj['SerialNumber'] = ApiClient.convertToType(data['SerialNumber'], 'String');
            }
            if (data.hasOwnProperty('ShippingProfileId')) {
                obj['ShippingProfileId'] = ApiClient.convertToType(data['ShippingProfileId'], 'String');
            }
            if (data.hasOwnProperty('TaxAmount')) {
                obj['TaxAmount'] = ApiClient.convertToType(data['TaxAmount'], 'Number');
            }
            if (data.hasOwnProperty('TaxIndex')) {
                obj['TaxIndex'] = ApiClient.convertToType(data['TaxIndex'], 'Number');
            }
            if (data.hasOwnProperty('TotalPrice')) {
                obj['TotalPrice'] = ApiClient.convertToType(data['TotalPrice'], 'Number');
            }
            if (data.hasOwnProperty('TransactionId')) {
                obj['TransactionId'] = ApiClient.convertToType(data['TransactionId'], 'String');
            }
            if (data.hasOwnProperty('UnrebatedTotalPrice')) {
                obj['UnrebatedTotalPrice'] = ApiClient.convertToType(data['UnrebatedTotalPrice'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillbeeInterfacesBillbeeAPIModelOrderItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillbeeInterfacesBillbeeAPIModelOrderItem</code>.
     */
    static validateJSON(data) {
        if (data['Attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Attributes'])) {
                throw new Error("Expected the field `Attributes` to be an array in the JSON data but got " + data['Attributes']);
            }
            // validate the optional field `Attributes` (array)
            for (const item of data['Attributes']) {
                BillbeeInterfacesBillbeeAPIModelOrderItemAttribute.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['InvoiceSKU'] && !(typeof data['InvoiceSKU'] === 'string' || data['InvoiceSKU'] instanceof String)) {
            throw new Error("Expected the field `InvoiceSKU` to be a primitive type in the JSON string but got " + data['InvoiceSKU']);
        }
        // validate the optional field `Product`
        if (data['Product']) { // data not null
          BillbeeInterfacesBillbeeAPIModelSoldProduct.validateJSON(data['Product']);
        }
        // ensure the json data is a string
        if (data['SerialNumber'] && !(typeof data['SerialNumber'] === 'string' || data['SerialNumber'] instanceof String)) {
            throw new Error("Expected the field `SerialNumber` to be a primitive type in the JSON string but got " + data['SerialNumber']);
        }
        // ensure the json data is a string
        if (data['ShippingProfileId'] && !(typeof data['ShippingProfileId'] === 'string' || data['ShippingProfileId'] instanceof String)) {
            throw new Error("Expected the field `ShippingProfileId` to be a primitive type in the JSON string but got " + data['ShippingProfileId']);
        }
        // ensure the json data is a string
        if (data['TransactionId'] && !(typeof data['TransactionId'] === 'string' || data['TransactionId'] instanceof String)) {
            throw new Error("Expected the field `TransactionId` to be a primitive type in the JSON string but got " + data['TransactionId']);
        }

        return true;
    }


}



/**
 * A list of product attributes for this position
 * @member {Array.<module:model/BillbeeInterfacesBillbeeAPIModelOrderItemAttribute>} Attributes
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['Attributes'] = undefined;

/**
 * The billbee id of this item
 * @member {Number} BillbeeId
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['BillbeeId'] = undefined;

/**
 * Sets the discount in percent
 * @member {Number} Discount
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['Discount'] = undefined;

/**
 * If true, the import of this order won't adjust the stock level at billbee.
 * @member {Boolean} DontAdjustStock
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['DontAdjustStock'] = undefined;

/**
 * If true, the price will be overwritten by the known article price in billbee if available
 * @member {Boolean} GetPriceFromArticleIfAny
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['GetPriceFromArticleIfAny'] = undefined;

/**
 * Contains the SKU from OrderDetail (if available) or from Product
 * @member {String} InvoiceSKU
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['InvoiceSKU'] = undefined;

/**
 * Determines if it is a coupon, which is interpreted as tax-free payment
 * @member {Boolean} IsCoupon
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['IsCoupon'] = undefined;

/**
 * @member {module:model/BillbeeInterfacesBillbeeAPIModelSoldProduct} Product
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['Product'] = undefined;

/**
 * The sold quantity
 * @member {Number} Quantity
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['Quantity'] = undefined;

/**
 * Contains the used serial number
 * @member {String} SerialNumber
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['SerialNumber'] = undefined;

/**
 * Determines if it is a coupon, which is interpreted as tax-free payment
 * @member {String} ShippingProfileId
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['ShippingProfileId'] = undefined;

/**
 * The tax amount in the total price
 * @member {Number} TaxAmount
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['TaxAmount'] = undefined;

/**
 * The tax index.
 * @member {Number} TaxIndex
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['TaxIndex'] = undefined;

/**
 * The total price (unit price * quantity)
 * @member {Number} TotalPrice
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['TotalPrice'] = undefined;

/**
 * Id of the individual transaction. Only required by Ebay to detect aggregated orders
 * @member {String} TransactionId
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['TransactionId'] = undefined;

/**
 * Is just used for the billbee api
 * @member {Number} UnrebatedTotalPrice
 */
BillbeeInterfacesBillbeeAPIModelOrderItem.prototype['UnrebatedTotalPrice'] = undefined;






export default BillbeeInterfacesBillbeeAPIModelOrderItem;

