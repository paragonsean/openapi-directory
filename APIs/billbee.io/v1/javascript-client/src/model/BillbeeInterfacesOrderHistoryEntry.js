/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BillbeeInterfacesOrderHistoryEntry model module.
 * @module model/BillbeeInterfacesOrderHistoryEntry
 * @version v1
 */
class BillbeeInterfacesOrderHistoryEntry {
    /**
     * Constructs a new <code>BillbeeInterfacesOrderHistoryEntry</code>.
     * @alias module:model/BillbeeInterfacesOrderHistoryEntry
     */
    constructor() { 
        
        BillbeeInterfacesOrderHistoryEntry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillbeeInterfacesOrderHistoryEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillbeeInterfacesOrderHistoryEntry} obj Optional instance to populate.
     * @return {module:model/BillbeeInterfacesOrderHistoryEntry} The populated <code>BillbeeInterfacesOrderHistoryEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillbeeInterfacesOrderHistoryEntry();

            if (data.hasOwnProperty('Created')) {
                obj['Created'] = ApiClient.convertToType(data['Created'], 'Date');
            }
            if (data.hasOwnProperty('EmployeeName')) {
                obj['EmployeeName'] = ApiClient.convertToType(data['EmployeeName'], 'String');
            }
            if (data.hasOwnProperty('EventTypeName')) {
                obj['EventTypeName'] = ApiClient.convertToType(data['EventTypeName'], 'String');
            }
            if (data.hasOwnProperty('Text')) {
                obj['Text'] = ApiClient.convertToType(data['Text'], 'String');
            }
            if (data.hasOwnProperty('TypeId')) {
                obj['TypeId'] = ApiClient.convertToType(data['TypeId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillbeeInterfacesOrderHistoryEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillbeeInterfacesOrderHistoryEntry</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['EmployeeName'] && !(typeof data['EmployeeName'] === 'string' || data['EmployeeName'] instanceof String)) {
            throw new Error("Expected the field `EmployeeName` to be a primitive type in the JSON string but got " + data['EmployeeName']);
        }
        // ensure the json data is a string
        if (data['EventTypeName'] && !(typeof data['EventTypeName'] === 'string' || data['EventTypeName'] instanceof String)) {
            throw new Error("Expected the field `EventTypeName` to be a primitive type in the JSON string but got " + data['EventTypeName']);
        }
        // ensure the json data is a string
        if (data['Text'] && !(typeof data['Text'] === 'string' || data['Text'] instanceof String)) {
            throw new Error("Expected the field `Text` to be a primitive type in the JSON string but got " + data['Text']);
        }

        return true;
    }


}



/**
 * @member {Date} Created
 */
BillbeeInterfacesOrderHistoryEntry.prototype['Created'] = undefined;

/**
 * @member {String} EmployeeName
 */
BillbeeInterfacesOrderHistoryEntry.prototype['EmployeeName'] = undefined;

/**
 * @member {String} EventTypeName
 */
BillbeeInterfacesOrderHistoryEntry.prototype['EventTypeName'] = undefined;

/**
 * @member {String} Text
 */
BillbeeInterfacesOrderHistoryEntry.prototype['Text'] = undefined;

/**
 * @member {Number} TypeId
 */
BillbeeInterfacesOrderHistoryEntry.prototype['TypeId'] = undefined;






export default BillbeeInterfacesOrderHistoryEntry;

