/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillbeeInterfacesShippingShipmentDataDimensions from './BillbeeInterfacesShippingShipmentDataDimensions';

/**
 * The RechnungsdruckWebAppControllersApiShipmentWithLabel model module.
 * @module model/RechnungsdruckWebAppControllersApiShipmentWithLabel
 * @version v1
 */
class RechnungsdruckWebAppControllersApiShipmentWithLabel {
    /**
     * Constructs a new <code>RechnungsdruckWebAppControllersApiShipmentWithLabel</code>.
     * @alias module:model/RechnungsdruckWebAppControllersApiShipmentWithLabel
     */
    constructor() { 
        
        RechnungsdruckWebAppControllersApiShipmentWithLabel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RechnungsdruckWebAppControllersApiShipmentWithLabel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RechnungsdruckWebAppControllersApiShipmentWithLabel} obj Optional instance to populate.
     * @return {module:model/RechnungsdruckWebAppControllersApiShipmentWithLabel} The populated <code>RechnungsdruckWebAppControllersApiShipmentWithLabel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RechnungsdruckWebAppControllersApiShipmentWithLabel();

            if (data.hasOwnProperty('ChangeStateToSend')) {
                obj['ChangeStateToSend'] = ApiClient.convertToType(data['ChangeStateToSend'], 'Boolean');
            }
            if (data.hasOwnProperty('ClientReference')) {
                obj['ClientReference'] = ApiClient.convertToType(data['ClientReference'], 'String');
            }
            if (data.hasOwnProperty('Dimension')) {
                obj['Dimension'] = BillbeeInterfacesShippingShipmentDataDimensions.constructFromObject(data['Dimension']);
            }
            if (data.hasOwnProperty('OrderId')) {
                obj['OrderId'] = ApiClient.convertToType(data['OrderId'], 'Number');
            }
            if (data.hasOwnProperty('PrinterName')) {
                obj['PrinterName'] = ApiClient.convertToType(data['PrinterName'], 'String');
            }
            if (data.hasOwnProperty('ProductId')) {
                obj['ProductId'] = ApiClient.convertToType(data['ProductId'], 'Number');
            }
            if (data.hasOwnProperty('ProviderId')) {
                obj['ProviderId'] = ApiClient.convertToType(data['ProviderId'], 'Number');
            }
            if (data.hasOwnProperty('ShipDate')) {
                obj['ShipDate'] = ApiClient.convertToType(data['ShipDate'], 'Date');
            }
            if (data.hasOwnProperty('WeightInGram')) {
                obj['WeightInGram'] = ApiClient.convertToType(data['WeightInGram'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RechnungsdruckWebAppControllersApiShipmentWithLabel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RechnungsdruckWebAppControllersApiShipmentWithLabel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ClientReference'] && !(typeof data['ClientReference'] === 'string' || data['ClientReference'] instanceof String)) {
            throw new Error("Expected the field `ClientReference` to be a primitive type in the JSON string but got " + data['ClientReference']);
        }
        // validate the optional field `Dimension`
        if (data['Dimension']) { // data not null
          BillbeeInterfacesShippingShipmentDataDimensions.validateJSON(data['Dimension']);
        }
        // ensure the json data is a string
        if (data['PrinterName'] && !(typeof data['PrinterName'] === 'string' || data['PrinterName'] instanceof String)) {
            throw new Error("Expected the field `PrinterName` to be a primitive type in the JSON string but got " + data['PrinterName']);
        }

        return true;
    }


}



/**
 * Optional parameter to automatically change the orderstate to sent after creating the shipment
 * @member {Boolean} ChangeStateToSend
 */
RechnungsdruckWebAppControllersApiShipmentWithLabel.prototype['ChangeStateToSend'] = undefined;

/**
 * Optional specify a reference text to be included on the label. Works not with all carriers
 * @member {String} ClientReference
 */
RechnungsdruckWebAppControllersApiShipmentWithLabel.prototype['ClientReference'] = undefined;

/**
 * @member {module:model/BillbeeInterfacesShippingShipmentDataDimensions} Dimension
 */
RechnungsdruckWebAppControllersApiShipmentWithLabel.prototype['Dimension'] = undefined;

/**
 * The Billbee internal id of the order to ship
 * @member {Number} OrderId
 */
RechnungsdruckWebAppControllersApiShipmentWithLabel.prototype['OrderId'] = undefined;

/**
 * Optional the name of a connected cloudprinter to send the label to
 * @member {String} PrinterName
 */
RechnungsdruckWebAppControllersApiShipmentWithLabel.prototype['PrinterName'] = undefined;

/**
 * the id of the shipping provider product to be used
 * @member {Number} ProductId
 */
RechnungsdruckWebAppControllersApiShipmentWithLabel.prototype['ProductId'] = undefined;

/**
 * The id of the provider. You can query all providers with the shippingproviders endpoint
 * @member {Number} ProviderId
 */
RechnungsdruckWebAppControllersApiShipmentWithLabel.prototype['ProviderId'] = undefined;

/**
 * Optional specify the shipdate to be transmitted to the carrier
 * @member {Date} ShipDate
 */
RechnungsdruckWebAppControllersApiShipmentWithLabel.prototype['ShipDate'] = undefined;

/**
 * Optional the shipments weight in gram to override the calculated weight
 * @member {Number} WeightInGram
 */
RechnungsdruckWebAppControllersApiShipmentWithLabel.prototype['WeightInGram'] = undefined;






export default RechnungsdruckWebAppControllersApiShipmentWithLabel;

