/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RechnungsdruckWebAppControllersApiOrder model module.
 * @module model/RechnungsdruckWebAppControllersApiOrder
 * @version v1
 */
class RechnungsdruckWebAppControllersApiOrder {
    /**
     * Constructs a new <code>RechnungsdruckWebAppControllersApiOrder</code>.
     * @alias module:model/RechnungsdruckWebAppControllersApiOrder
     */
    constructor() { 
        
        RechnungsdruckWebAppControllersApiOrder.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RechnungsdruckWebAppControllersApiOrder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RechnungsdruckWebAppControllersApiOrder} obj Optional instance to populate.
     * @return {module:model/RechnungsdruckWebAppControllersApiOrder} The populated <code>RechnungsdruckWebAppControllersApiOrder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RechnungsdruckWebAppControllersApiOrder();

            if (data.hasOwnProperty('CanCreateAutoInvoice')) {
                obj['CanCreateAutoInvoice'] = ApiClient.convertToType(data['CanCreateAutoInvoice'], 'Boolean');
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('ExternalId')) {
                obj['ExternalId'] = ApiClient.convertToType(data['ExternalId'], 'String');
            }
            if (data.hasOwnProperty('HasInvoice')) {
                obj['HasInvoice'] = ApiClient.convertToType(data['HasInvoice'], 'Boolean');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('InvoiceCreatedAt')) {
                obj['InvoiceCreatedAt'] = ApiClient.convertToType(data['InvoiceCreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('InvoiceDate')) {
                obj['InvoiceDate'] = ApiClient.convertToType(data['InvoiceDate'], 'Date');
            }
            if (data.hasOwnProperty('InvoiceNumber')) {
                obj['InvoiceNumber'] = ApiClient.convertToType(data['InvoiceNumber'], 'String');
            }
            if (data.hasOwnProperty('OrderStateId')) {
                obj['OrderStateId'] = ApiClient.convertToType(data['OrderStateId'], 'Number');
            }
            if (data.hasOwnProperty('OrderStateText')) {
                obj['OrderStateText'] = ApiClient.convertToType(data['OrderStateText'], 'String');
            }
            if (data.hasOwnProperty('PaidAt')) {
                obj['PaidAt'] = ApiClient.convertToType(data['PaidAt'], 'Date');
            }
            if (data.hasOwnProperty('ShippedAt')) {
                obj['ShippedAt'] = ApiClient.convertToType(data['ShippedAt'], 'Date');
            }
            if (data.hasOwnProperty('ShopName')) {
                obj['ShopName'] = ApiClient.convertToType(data['ShopName'], 'String');
            }
            if (data.hasOwnProperty('TotalGross')) {
                obj['TotalGross'] = ApiClient.convertToType(data['TotalGross'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RechnungsdruckWebAppControllersApiOrder</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RechnungsdruckWebAppControllersApiOrder</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ExternalId'] && !(typeof data['ExternalId'] === 'string' || data['ExternalId'] instanceof String)) {
            throw new Error("Expected the field `ExternalId` to be a primitive type in the JSON string but got " + data['ExternalId']);
        }
        // ensure the json data is a string
        if (data['InvoiceNumber'] && !(typeof data['InvoiceNumber'] === 'string' || data['InvoiceNumber'] instanceof String)) {
            throw new Error("Expected the field `InvoiceNumber` to be a primitive type in the JSON string but got " + data['InvoiceNumber']);
        }
        // ensure the json data is a string
        if (data['OrderStateText'] && !(typeof data['OrderStateText'] === 'string' || data['OrderStateText'] instanceof String)) {
            throw new Error("Expected the field `OrderStateText` to be a primitive type in the JSON string but got " + data['OrderStateText']);
        }
        // ensure the json data is a string
        if (data['ShopName'] && !(typeof data['ShopName'] === 'string' || data['ShopName'] instanceof String)) {
            throw new Error("Expected the field `ShopName` to be a primitive type in the JSON string but got " + data['ShopName']);
        }

        return true;
    }


}



/**
 * @member {Boolean} CanCreateAutoInvoice
 */
RechnungsdruckWebAppControllersApiOrder.prototype['CanCreateAutoInvoice'] = undefined;

/**
 * @member {Date} CreatedAt
 */
RechnungsdruckWebAppControllersApiOrder.prototype['CreatedAt'] = undefined;

/**
 * @member {String} ExternalId
 */
RechnungsdruckWebAppControllersApiOrder.prototype['ExternalId'] = undefined;

/**
 * @member {Boolean} HasInvoice
 */
RechnungsdruckWebAppControllersApiOrder.prototype['HasInvoice'] = undefined;

/**
 * @member {Number} Id
 */
RechnungsdruckWebAppControllersApiOrder.prototype['Id'] = undefined;

/**
 * @member {Date} InvoiceCreatedAt
 */
RechnungsdruckWebAppControllersApiOrder.prototype['InvoiceCreatedAt'] = undefined;

/**
 * @member {Date} InvoiceDate
 */
RechnungsdruckWebAppControllersApiOrder.prototype['InvoiceDate'] = undefined;

/**
 * @member {String} InvoiceNumber
 */
RechnungsdruckWebAppControllersApiOrder.prototype['InvoiceNumber'] = undefined;

/**
 * @member {Number} OrderStateId
 */
RechnungsdruckWebAppControllersApiOrder.prototype['OrderStateId'] = undefined;

/**
 * @member {String} OrderStateText
 */
RechnungsdruckWebAppControllersApiOrder.prototype['OrderStateText'] = undefined;

/**
 * @member {Date} PaidAt
 */
RechnungsdruckWebAppControllersApiOrder.prototype['PaidAt'] = undefined;

/**
 * @member {Date} ShippedAt
 */
RechnungsdruckWebAppControllersApiOrder.prototype['ShippedAt'] = undefined;

/**
 * @member {String} ShopName
 */
RechnungsdruckWebAppControllersApiOrder.prototype['ShopName'] = undefined;

/**
 * @member {Number} TotalGross
 */
RechnungsdruckWebAppControllersApiOrder.prototype['TotalGross'] = undefined;






export default RechnungsdruckWebAppControllersApiOrder;

