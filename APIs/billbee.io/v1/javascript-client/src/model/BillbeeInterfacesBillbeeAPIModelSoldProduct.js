/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillbeeInterfacesBillbeeAPIModelProductImage from './BillbeeInterfacesBillbeeAPIModelProductImage';

/**
 * The BillbeeInterfacesBillbeeAPIModelSoldProduct model module.
 * @module model/BillbeeInterfacesBillbeeAPIModelSoldProduct
 * @version v1
 */
class BillbeeInterfacesBillbeeAPIModelSoldProduct {
    /**
     * Constructs a new <code>BillbeeInterfacesBillbeeAPIModelSoldProduct</code>.
     * @alias module:model/BillbeeInterfacesBillbeeAPIModelSoldProduct
     */
    constructor() { 
        
        BillbeeInterfacesBillbeeAPIModelSoldProduct.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillbeeInterfacesBillbeeAPIModelSoldProduct</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillbeeInterfacesBillbeeAPIModelSoldProduct} obj Optional instance to populate.
     * @return {module:model/BillbeeInterfacesBillbeeAPIModelSoldProduct} The populated <code>BillbeeInterfacesBillbeeAPIModelSoldProduct</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillbeeInterfacesBillbeeAPIModelSoldProduct();

            if (data.hasOwnProperty('BillbeeId')) {
                obj['BillbeeId'] = ApiClient.convertToType(data['BillbeeId'], 'Number');
            }
            if (data.hasOwnProperty('CountryOfOrigin')) {
                obj['CountryOfOrigin'] = ApiClient.convertToType(data['CountryOfOrigin'], 'String');
            }
            if (data.hasOwnProperty('EAN')) {
                obj['EAN'] = ApiClient.convertToType(data['EAN'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Images')) {
                obj['Images'] = ApiClient.convertToType(data['Images'], [BillbeeInterfacesBillbeeAPIModelProductImage]);
            }
            if (data.hasOwnProperty('IsDigital')) {
                obj['IsDigital'] = ApiClient.convertToType(data['IsDigital'], 'Boolean');
            }
            if (data.hasOwnProperty('OldId')) {
                obj['OldId'] = ApiClient.convertToType(data['OldId'], 'String');
            }
            if (data.hasOwnProperty('PlatformData')) {
                obj['PlatformData'] = ApiClient.convertToType(data['PlatformData'], 'String');
            }
            if (data.hasOwnProperty('SKU')) {
                obj['SKU'] = ApiClient.convertToType(data['SKU'], 'String');
            }
            if (data.hasOwnProperty('SkuOrId')) {
                obj['SkuOrId'] = ApiClient.convertToType(data['SkuOrId'], 'String');
            }
            if (data.hasOwnProperty('TARICCode')) {
                obj['TARICCode'] = ApiClient.convertToType(data['TARICCode'], 'String');
            }
            if (data.hasOwnProperty('Title')) {
                obj['Title'] = ApiClient.convertToType(data['Title'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'Number');
            }
            if (data.hasOwnProperty('Weight')) {
                obj['Weight'] = ApiClient.convertToType(data['Weight'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillbeeInterfacesBillbeeAPIModelSoldProduct</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillbeeInterfacesBillbeeAPIModelSoldProduct</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['CountryOfOrigin'] && !(typeof data['CountryOfOrigin'] === 'string' || data['CountryOfOrigin'] instanceof String)) {
            throw new Error("Expected the field `CountryOfOrigin` to be a primitive type in the JSON string but got " + data['CountryOfOrigin']);
        }
        // ensure the json data is a string
        if (data['EAN'] && !(typeof data['EAN'] === 'string' || data['EAN'] instanceof String)) {
            throw new Error("Expected the field `EAN` to be a primitive type in the JSON string but got " + data['EAN']);
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        if (data['Images']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Images'])) {
                throw new Error("Expected the field `Images` to be an array in the JSON data but got " + data['Images']);
            }
            // validate the optional field `Images` (array)
            for (const item of data['Images']) {
                BillbeeInterfacesBillbeeAPIModelProductImage.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['OldId'] && !(typeof data['OldId'] === 'string' || data['OldId'] instanceof String)) {
            throw new Error("Expected the field `OldId` to be a primitive type in the JSON string but got " + data['OldId']);
        }
        // ensure the json data is a string
        if (data['PlatformData'] && !(typeof data['PlatformData'] === 'string' || data['PlatformData'] instanceof String)) {
            throw new Error("Expected the field `PlatformData` to be a primitive type in the JSON string but got " + data['PlatformData']);
        }
        // ensure the json data is a string
        if (data['SKU'] && !(typeof data['SKU'] === 'string' || data['SKU'] instanceof String)) {
            throw new Error("Expected the field `SKU` to be a primitive type in the JSON string but got " + data['SKU']);
        }
        // ensure the json data is a string
        if (data['SkuOrId'] && !(typeof data['SkuOrId'] === 'string' || data['SkuOrId'] instanceof String)) {
            throw new Error("Expected the field `SkuOrId` to be a primitive type in the JSON string but got " + data['SkuOrId']);
        }
        // ensure the json data is a string
        if (data['TARICCode'] && !(typeof data['TARICCode'] === 'string' || data['TARICCode'] instanceof String)) {
            throw new Error("Expected the field `TARICCode` to be a primitive type in the JSON string but got " + data['TARICCode']);
        }
        // ensure the json data is a string
        if (data['Title'] && !(typeof data['Title'] === 'string' || data['Title'] instanceof String)) {
            throw new Error("Expected the field `Title` to be a primitive type in the JSON string but got " + data['Title']);
        }

        return true;
    }


}



/**
 * The Billbee internal id of the linked product
 * @member {Number} BillbeeId
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['BillbeeId'] = undefined;

/**
 * The country where this article was made
 * @member {String} CountryOfOrigin
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['CountryOfOrigin'] = undefined;

/**
 * The EAN / GTIN of this product
 * @member {String} EAN
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['EAN'] = undefined;

/**
 * The id of this product in the external system
 * @member {String} Id
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['Id'] = undefined;

/**
 * The images of this product
 * @member {Array.<module:model/BillbeeInterfacesBillbeeAPIModelProductImage>} Images
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['Images'] = undefined;

/**
 * True if the product is a digital good (download etc.), false if not
 * @member {Boolean} IsDigital
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['IsDigital'] = undefined;

/**
 * This is for migration scenarios when the internal id of a product changes  I.E. Etsy when switching to the new inventory management, the ids for variants will change.
 * @member {String} OldId
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['OldId'] = undefined;

/**
 * Optional platform specific Data as serialized JSON Object for the product
 * @member {String} PlatformData
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['PlatformData'] = undefined;

/**
 * The SKU of this product
 * @member {String} SKU
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['SKU'] = undefined;

/**
 * The SKU of this product or the id if the SKU is empty
 * @member {String} SkuOrId
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['SkuOrId'] = undefined;

/**
 * The TARIC code
 * @member {String} TARICCode
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['TARICCode'] = undefined;

/**
 * The name of this product
 * @member {String} Title
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['Title'] = undefined;

/**
 * Indicates whether the article is 1 = normal or 2 = BOM
 * @member {Number} Type
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['Type'] = undefined;

/**
 * Weight of one item in gram
 * @member {Number} Weight
 */
BillbeeInterfacesBillbeeAPIModelSoldProduct.prototype['Weight'] = undefined;






export default BillbeeInterfacesBillbeeAPIModelSoldProduct;

