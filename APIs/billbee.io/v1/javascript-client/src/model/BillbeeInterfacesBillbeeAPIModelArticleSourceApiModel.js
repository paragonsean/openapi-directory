/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel model module.
 * @module model/BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel
 * @version v1
 */
class BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel {
    /**
     * Constructs a new <code>BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel</code>.
     * @alias module:model/BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel
     * @param source {String} 
     * @param sourceId {String} 
     */
    constructor(source, sourceId) { 
        
        BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.initialize(this, source, sourceId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, source, sourceId) { 
        obj['Source'] = source;
        obj['SourceId'] = sourceId;
    }

    /**
     * Constructs a <code>BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel} obj Optional instance to populate.
     * @return {module:model/BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel} The populated <code>BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel();

            if (data.hasOwnProperty('ApiAccountId')) {
                obj['ApiAccountId'] = ApiClient.convertToType(data['ApiAccountId'], 'Number');
            }
            if (data.hasOwnProperty('ApiAccountName')) {
                obj['ApiAccountName'] = ApiClient.convertToType(data['ApiAccountName'], 'String');
            }
            if (data.hasOwnProperty('Custom')) {
                obj['Custom'] = ApiClient.convertToType(data['Custom'], Object);
            }
            if (data.hasOwnProperty('ExportFactor')) {
                obj['ExportFactor'] = ApiClient.convertToType(data['ExportFactor'], 'Number');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('Source')) {
                obj['Source'] = ApiClient.convertToType(data['Source'], 'String');
            }
            if (data.hasOwnProperty('SourceId')) {
                obj['SourceId'] = ApiClient.convertToType(data['SourceId'], 'String');
            }
            if (data.hasOwnProperty('StockSyncInactive')) {
                obj['StockSyncInactive'] = ApiClient.convertToType(data['StockSyncInactive'], 'Boolean');
            }
            if (data.hasOwnProperty('StockSyncMax')) {
                obj['StockSyncMax'] = ApiClient.convertToType(data['StockSyncMax'], 'Number');
            }
            if (data.hasOwnProperty('StockSyncMin')) {
                obj['StockSyncMin'] = ApiClient.convertToType(data['StockSyncMin'], 'Number');
            }
            if (data.hasOwnProperty('UnitsPerItem')) {
                obj['UnitsPerItem'] = ApiClient.convertToType(data['UnitsPerItem'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ApiAccountName'] && !(typeof data['ApiAccountName'] === 'string' || data['ApiAccountName'] instanceof String)) {
            throw new Error("Expected the field `ApiAccountName` to be a primitive type in the JSON string but got " + data['ApiAccountName']);
        }
        // ensure the json data is a string
        if (data['Source'] && !(typeof data['Source'] === 'string' || data['Source'] instanceof String)) {
            throw new Error("Expected the field `Source` to be a primitive type in the JSON string but got " + data['Source']);
        }
        // ensure the json data is a string
        if (data['SourceId'] && !(typeof data['SourceId'] === 'string' || data['SourceId'] instanceof String)) {
            throw new Error("Expected the field `SourceId` to be a primitive type in the JSON string but got " + data['SourceId']);
        }

        return true;
    }


}

BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.RequiredProperties = ["Source", "SourceId"];

/**
 * @member {Number} ApiAccountId
 */
BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.prototype['ApiAccountId'] = undefined;

/**
 * @member {String} ApiAccountName
 */
BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.prototype['ApiAccountName'] = undefined;

/**
 * @member {Object} Custom
 */
BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.prototype['Custom'] = undefined;

/**
 * @member {Number} ExportFactor
 */
BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.prototype['ExportFactor'] = undefined;

/**
 * @member {Number} Id
 */
BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.prototype['Id'] = undefined;

/**
 * @member {String} Source
 */
BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.prototype['Source'] = undefined;

/**
 * @member {String} SourceId
 */
BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.prototype['SourceId'] = undefined;

/**
 * @member {Boolean} StockSyncInactive
 */
BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.prototype['StockSyncInactive'] = undefined;

/**
 * @member {Number} StockSyncMax
 */
BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.prototype['StockSyncMax'] = undefined;

/**
 * @member {Number} StockSyncMin
 */
BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.prototype['StockSyncMin'] = undefined;

/**
 * @member {Number} UnitsPerItem
 */
BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel.prototype['UnitsPerItem'] = undefined;






export default BillbeeInterfacesBillbeeAPIModelArticleSourceApiModel;

