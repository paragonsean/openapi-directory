/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress model module.
 * @module model/RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress
 * @version v1
 */
class RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress {
    /**
     * Constructs a new <code>RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress</code>.
     * Represents the invoice address of a Billbee user
     * @alias module:model/RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress
     */
    constructor() { 
        
        RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress} obj Optional instance to populate.
     * @return {module:model/RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress} The populated <code>RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress();

            if (data.hasOwnProperty('Address1')) {
                obj['Address1'] = ApiClient.convertToType(data['Address1'], 'String');
            }
            if (data.hasOwnProperty('Address2')) {
                obj['Address2'] = ApiClient.convertToType(data['Address2'], 'String');
            }
            if (data.hasOwnProperty('City')) {
                obj['City'] = ApiClient.convertToType(data['City'], 'String');
            }
            if (data.hasOwnProperty('Company')) {
                obj['Company'] = ApiClient.convertToType(data['Company'], 'String');
            }
            if (data.hasOwnProperty('Country')) {
                obj['Country'] = ApiClient.convertToType(data['Country'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('VatId')) {
                obj['VatId'] = ApiClient.convertToType(data['VatId'], 'String');
            }
            if (data.hasOwnProperty('Zip')) {
                obj['Zip'] = ApiClient.convertToType(data['Zip'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Address1'] && !(typeof data['Address1'] === 'string' || data['Address1'] instanceof String)) {
            throw new Error("Expected the field `Address1` to be a primitive type in the JSON string but got " + data['Address1']);
        }
        // ensure the json data is a string
        if (data['Address2'] && !(typeof data['Address2'] === 'string' || data['Address2'] instanceof String)) {
            throw new Error("Expected the field `Address2` to be a primitive type in the JSON string but got " + data['Address2']);
        }
        // ensure the json data is a string
        if (data['City'] && !(typeof data['City'] === 'string' || data['City'] instanceof String)) {
            throw new Error("Expected the field `City` to be a primitive type in the JSON string but got " + data['City']);
        }
        // ensure the json data is a string
        if (data['Company'] && !(typeof data['Company'] === 'string' || data['Company'] instanceof String)) {
            throw new Error("Expected the field `Company` to be a primitive type in the JSON string but got " + data['Company']);
        }
        // ensure the json data is a string
        if (data['Country'] && !(typeof data['Country'] === 'string' || data['Country'] instanceof String)) {
            throw new Error("Expected the field `Country` to be a primitive type in the JSON string but got " + data['Country']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['VatId'] && !(typeof data['VatId'] === 'string' || data['VatId'] instanceof String)) {
            throw new Error("Expected the field `VatId` to be a primitive type in the JSON string but got " + data['VatId']);
        }
        // ensure the json data is a string
        if (data['Zip'] && !(typeof data['Zip'] === 'string' || data['Zip'] instanceof String)) {
            throw new Error("Expected the field `Zip` to be a primitive type in the JSON string but got " + data['Zip']);
        }

        return true;
    }


}



/**
 * @member {String} Address1
 */
RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.prototype['Address1'] = undefined;

/**
 * @member {String} Address2
 */
RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.prototype['Address2'] = undefined;

/**
 * @member {String} City
 */
RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.prototype['City'] = undefined;

/**
 * @member {String} Company
 */
RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.prototype['Company'] = undefined;

/**
 * The ISO2 country code of the users country
 * @member {String} Country
 */
RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.prototype['Country'] = undefined;

/**
 * @member {String} Name
 */
RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.prototype['Name'] = undefined;

/**
 * @member {String} VatId
 */
RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.prototype['VatId'] = undefined;

/**
 * @member {String} Zip
 */
RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress.prototype['Zip'] = undefined;






export default RechnungsdruckWebAppControllersApiAutomaticProvisioningControllerCreateAccountContainerUserAddress;

