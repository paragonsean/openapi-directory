/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillbeeInterfacesBillbeeAPIModelCommentApiModel from './BillbeeInterfacesBillbeeAPIModelCommentApiModel';
import BillbeeInterfacesBillbeeAPIModelCustomerApiModel from './BillbeeInterfacesBillbeeAPIModelCustomerApiModel';
import BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel from './BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel';
import BillbeeInterfacesBillbeeAPIModelOrderItem from './BillbeeInterfacesBillbeeAPIModelOrderItem';
import BillbeeInterfacesBillbeeAPIModelOrderUser from './BillbeeInterfacesBillbeeAPIModelOrderUser';
import BillbeeInterfacesBillbeeAPIModelShipment from './BillbeeInterfacesBillbeeAPIModelShipment';
import BillbeeInterfacesBillbeeAPIModelsOrderPayment from './BillbeeInterfacesBillbeeAPIModelsOrderPayment';
import BillbeeInterfacesOrderHistoryEntry from './BillbeeInterfacesOrderHistoryEntry';
import BillbeeInterfacesShippingProductService from './BillbeeInterfacesShippingProductService';

/**
 * The BillbeeInterfacesBillbeeAPIModelOrder model module.
 * @module model/BillbeeInterfacesBillbeeAPIModelOrder
 * @version v1
 */
class BillbeeInterfacesBillbeeAPIModelOrder {
    /**
     * Constructs a new <code>BillbeeInterfacesBillbeeAPIModelOrder</code>.
     * A class that represents the Billbee data model of a single order
     * @alias module:model/BillbeeInterfacesBillbeeAPIModelOrder
     */
    constructor() { 
        
        BillbeeInterfacesBillbeeAPIModelOrder.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BillbeeInterfacesBillbeeAPIModelOrder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BillbeeInterfacesBillbeeAPIModelOrder} obj Optional instance to populate.
     * @return {module:model/BillbeeInterfacesBillbeeAPIModelOrder} The populated <code>BillbeeInterfacesBillbeeAPIModelOrder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BillbeeInterfacesBillbeeAPIModelOrder();

            if (data.hasOwnProperty('AcceptLossOfReturnRight')) {
                obj['AcceptLossOfReturnRight'] = ApiClient.convertToType(data['AcceptLossOfReturnRight'], 'Boolean');
            }
            if (data.hasOwnProperty('AdjustmentCost')) {
                obj['AdjustmentCost'] = ApiClient.convertToType(data['AdjustmentCost'], 'Number');
            }
            if (data.hasOwnProperty('AdjustmentReason')) {
                obj['AdjustmentReason'] = ApiClient.convertToType(data['AdjustmentReason'], 'String');
            }
            if (data.hasOwnProperty('ApiAccountId')) {
                obj['ApiAccountId'] = ApiClient.convertToType(data['ApiAccountId'], 'Number');
            }
            if (data.hasOwnProperty('ApiAccountName')) {
                obj['ApiAccountName'] = ApiClient.convertToType(data['ApiAccountName'], 'String');
            }
            if (data.hasOwnProperty('ArchivedAt')) {
                obj['ArchivedAt'] = ApiClient.convertToType(data['ArchivedAt'], 'Date');
            }
            if (data.hasOwnProperty('BillBeeOrderId')) {
                obj['BillBeeOrderId'] = ApiClient.convertToType(data['BillBeeOrderId'], 'Number');
            }
            if (data.hasOwnProperty('BillBeeParentOrderId')) {
                obj['BillBeeParentOrderId'] = ApiClient.convertToType(data['BillBeeParentOrderId'], 'Number');
            }
            if (data.hasOwnProperty('Buyer')) {
                obj['Buyer'] = BillbeeInterfacesBillbeeAPIModelOrderUser.constructFromObject(data['Buyer']);
            }
            if (data.hasOwnProperty('Comments')) {
                obj['Comments'] = ApiClient.convertToType(data['Comments'], [BillbeeInterfacesBillbeeAPIModelCommentApiModel]);
            }
            if (data.hasOwnProperty('ConfirmedAt')) {
                obj['ConfirmedAt'] = ApiClient.convertToType(data['ConfirmedAt'], 'Date');
            }
            if (data.hasOwnProperty('CreatedAt')) {
                obj['CreatedAt'] = ApiClient.convertToType(data['CreatedAt'], 'Date');
            }
            if (data.hasOwnProperty('Currency')) {
                obj['Currency'] = ApiClient.convertToType(data['Currency'], 'String');
            }
            if (data.hasOwnProperty('CustomInvoiceNote')) {
                obj['CustomInvoiceNote'] = ApiClient.convertToType(data['CustomInvoiceNote'], 'String');
            }
            if (data.hasOwnProperty('Customer')) {
                obj['Customer'] = BillbeeInterfacesBillbeeAPIModelCustomerApiModel.constructFromObject(data['Customer']);
            }
            if (data.hasOwnProperty('CustomerNumber')) {
                obj['CustomerNumber'] = ApiClient.convertToType(data['CustomerNumber'], 'String');
            }
            if (data.hasOwnProperty('CustomerVatId')) {
                obj['CustomerVatId'] = ApiClient.convertToType(data['CustomerVatId'], 'String');
            }
            if (data.hasOwnProperty('DeliverySourceCountryCode')) {
                obj['DeliverySourceCountryCode'] = ApiClient.convertToType(data['DeliverySourceCountryCode'], 'String');
            }
            if (data.hasOwnProperty('DistributionCenter')) {
                obj['DistributionCenter'] = ApiClient.convertToType(data['DistributionCenter'], 'String');
            }
            if (data.hasOwnProperty('History')) {
                obj['History'] = ApiClient.convertToType(data['History'], [BillbeeInterfacesOrderHistoryEntry]);
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('InvoiceAddress')) {
                obj['InvoiceAddress'] = BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.constructFromObject(data['InvoiceAddress']);
            }
            if (data.hasOwnProperty('InvoiceDate')) {
                obj['InvoiceDate'] = ApiClient.convertToType(data['InvoiceDate'], 'Date');
            }
            if (data.hasOwnProperty('InvoiceNumber')) {
                obj['InvoiceNumber'] = ApiClient.convertToType(data['InvoiceNumber'], 'Number');
            }
            if (data.hasOwnProperty('InvoiceNumberPostfix')) {
                obj['InvoiceNumberPostfix'] = ApiClient.convertToType(data['InvoiceNumberPostfix'], 'String');
            }
            if (data.hasOwnProperty('InvoiceNumberPrefix')) {
                obj['InvoiceNumberPrefix'] = ApiClient.convertToType(data['InvoiceNumberPrefix'], 'String');
            }
            if (data.hasOwnProperty('IsCancelationFor')) {
                obj['IsCancelationFor'] = ApiClient.convertToType(data['IsCancelationFor'], 'String');
            }
            if (data.hasOwnProperty('IsFromBillbeeApi')) {
                obj['IsFromBillbeeApi'] = ApiClient.convertToType(data['IsFromBillbeeApi'], 'Boolean');
            }
            if (data.hasOwnProperty('LanguageCode')) {
                obj['LanguageCode'] = ApiClient.convertToType(data['LanguageCode'], 'String');
            }
            if (data.hasOwnProperty('LastModifiedAt')) {
                obj['LastModifiedAt'] = ApiClient.convertToType(data['LastModifiedAt'], 'Date');
            }
            if (data.hasOwnProperty('MerchantVatId')) {
                obj['MerchantVatId'] = ApiClient.convertToType(data['MerchantVatId'], 'String');
            }
            if (data.hasOwnProperty('OrderItems')) {
                obj['OrderItems'] = ApiClient.convertToType(data['OrderItems'], [BillbeeInterfacesBillbeeAPIModelOrderItem]);
            }
            if (data.hasOwnProperty('OrderNumber')) {
                obj['OrderNumber'] = ApiClient.convertToType(data['OrderNumber'], 'String');
            }
            if (data.hasOwnProperty('PaidAmount')) {
                obj['PaidAmount'] = ApiClient.convertToType(data['PaidAmount'], 'Number');
            }
            if (data.hasOwnProperty('PayedAt')) {
                obj['PayedAt'] = ApiClient.convertToType(data['PayedAt'], 'Date');
            }
            if (data.hasOwnProperty('PaymentInstruction')) {
                obj['PaymentInstruction'] = ApiClient.convertToType(data['PaymentInstruction'], 'String');
            }
            if (data.hasOwnProperty('PaymentMethod')) {
                obj['PaymentMethod'] = ApiClient.convertToType(data['PaymentMethod'], 'Number');
            }
            if (data.hasOwnProperty('PaymentReference')) {
                obj['PaymentReference'] = ApiClient.convertToType(data['PaymentReference'], 'String');
            }
            if (data.hasOwnProperty('PaymentTransactionId')) {
                obj['PaymentTransactionId'] = ApiClient.convertToType(data['PaymentTransactionId'], 'String');
            }
            if (data.hasOwnProperty('Payments')) {
                obj['Payments'] = ApiClient.convertToType(data['Payments'], [BillbeeInterfacesBillbeeAPIModelsOrderPayment]);
            }
            if (data.hasOwnProperty('RebateDifference')) {
                obj['RebateDifference'] = ApiClient.convertToType(data['RebateDifference'], 'Number');
            }
            if (data.hasOwnProperty('RestoredAt')) {
                obj['RestoredAt'] = ApiClient.convertToType(data['RestoredAt'], 'Date');
            }
            if (data.hasOwnProperty('Seller')) {
                obj['Seller'] = BillbeeInterfacesBillbeeAPIModelOrderUser.constructFromObject(data['Seller']);
            }
            if (data.hasOwnProperty('SellerComment')) {
                obj['SellerComment'] = ApiClient.convertToType(data['SellerComment'], 'String');
            }
            if (data.hasOwnProperty('ShipWeightKg')) {
                obj['ShipWeightKg'] = ApiClient.convertToType(data['ShipWeightKg'], 'Number');
            }
            if (data.hasOwnProperty('ShippedAt')) {
                obj['ShippedAt'] = ApiClient.convertToType(data['ShippedAt'], 'Date');
            }
            if (data.hasOwnProperty('ShippingAddress')) {
                obj['ShippingAddress'] = BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.constructFromObject(data['ShippingAddress']);
            }
            if (data.hasOwnProperty('ShippingCost')) {
                obj['ShippingCost'] = ApiClient.convertToType(data['ShippingCost'], 'Number');
            }
            if (data.hasOwnProperty('ShippingIds')) {
                obj['ShippingIds'] = ApiClient.convertToType(data['ShippingIds'], [BillbeeInterfacesBillbeeAPIModelShipment]);
            }
            if (data.hasOwnProperty('ShippingProfileId')) {
                obj['ShippingProfileId'] = ApiClient.convertToType(data['ShippingProfileId'], 'String');
            }
            if (data.hasOwnProperty('ShippingProfileName')) {
                obj['ShippingProfileName'] = ApiClient.convertToType(data['ShippingProfileName'], 'String');
            }
            if (data.hasOwnProperty('ShippingProviderId')) {
                obj['ShippingProviderId'] = ApiClient.convertToType(data['ShippingProviderId'], 'Number');
            }
            if (data.hasOwnProperty('ShippingProviderName')) {
                obj['ShippingProviderName'] = ApiClient.convertToType(data['ShippingProviderName'], 'String');
            }
            if (data.hasOwnProperty('ShippingProviderProductId')) {
                obj['ShippingProviderProductId'] = ApiClient.convertToType(data['ShippingProviderProductId'], 'Number');
            }
            if (data.hasOwnProperty('ShippingProviderProductName')) {
                obj['ShippingProviderProductName'] = ApiClient.convertToType(data['ShippingProviderProductName'], 'String');
            }
            if (data.hasOwnProperty('ShippingServices')) {
                obj['ShippingServices'] = ApiClient.convertToType(data['ShippingServices'], [BillbeeInterfacesShippingProductService]);
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], 'Number');
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], ['String']);
            }
            if (data.hasOwnProperty('TaxRate1')) {
                obj['TaxRate1'] = ApiClient.convertToType(data['TaxRate1'], 'Number');
            }
            if (data.hasOwnProperty('TaxRate2')) {
                obj['TaxRate2'] = ApiClient.convertToType(data['TaxRate2'], 'Number');
            }
            if (data.hasOwnProperty('TotalCost')) {
                obj['TotalCost'] = ApiClient.convertToType(data['TotalCost'], 'Number');
            }
            if (data.hasOwnProperty('UpdatedAt')) {
                obj['UpdatedAt'] = ApiClient.convertToType(data['UpdatedAt'], 'Date');
            }
            if (data.hasOwnProperty('VatId')) {
                obj['VatId'] = ApiClient.convertToType(data['VatId'], 'String');
            }
            if (data.hasOwnProperty('VatMode')) {
                obj['VatMode'] = ApiClient.convertToType(data['VatMode'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BillbeeInterfacesBillbeeAPIModelOrder</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BillbeeInterfacesBillbeeAPIModelOrder</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AdjustmentReason'] && !(typeof data['AdjustmentReason'] === 'string' || data['AdjustmentReason'] instanceof String)) {
            throw new Error("Expected the field `AdjustmentReason` to be a primitive type in the JSON string but got " + data['AdjustmentReason']);
        }
        // ensure the json data is a string
        if (data['ApiAccountName'] && !(typeof data['ApiAccountName'] === 'string' || data['ApiAccountName'] instanceof String)) {
            throw new Error("Expected the field `ApiAccountName` to be a primitive type in the JSON string but got " + data['ApiAccountName']);
        }
        // validate the optional field `Buyer`
        if (data['Buyer']) { // data not null
          BillbeeInterfacesBillbeeAPIModelOrderUser.validateJSON(data['Buyer']);
        }
        if (data['Comments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Comments'])) {
                throw new Error("Expected the field `Comments` to be an array in the JSON data but got " + data['Comments']);
            }
            // validate the optional field `Comments` (array)
            for (const item of data['Comments']) {
                BillbeeInterfacesBillbeeAPIModelCommentApiModel.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['Currency'] && !(typeof data['Currency'] === 'string' || data['Currency'] instanceof String)) {
            throw new Error("Expected the field `Currency` to be a primitive type in the JSON string but got " + data['Currency']);
        }
        // ensure the json data is a string
        if (data['CustomInvoiceNote'] && !(typeof data['CustomInvoiceNote'] === 'string' || data['CustomInvoiceNote'] instanceof String)) {
            throw new Error("Expected the field `CustomInvoiceNote` to be a primitive type in the JSON string but got " + data['CustomInvoiceNote']);
        }
        // validate the optional field `Customer`
        if (data['Customer']) { // data not null
          BillbeeInterfacesBillbeeAPIModelCustomerApiModel.validateJSON(data['Customer']);
        }
        // ensure the json data is a string
        if (data['CustomerNumber'] && !(typeof data['CustomerNumber'] === 'string' || data['CustomerNumber'] instanceof String)) {
            throw new Error("Expected the field `CustomerNumber` to be a primitive type in the JSON string but got " + data['CustomerNumber']);
        }
        // ensure the json data is a string
        if (data['CustomerVatId'] && !(typeof data['CustomerVatId'] === 'string' || data['CustomerVatId'] instanceof String)) {
            throw new Error("Expected the field `CustomerVatId` to be a primitive type in the JSON string but got " + data['CustomerVatId']);
        }
        // ensure the json data is a string
        if (data['DeliverySourceCountryCode'] && !(typeof data['DeliverySourceCountryCode'] === 'string' || data['DeliverySourceCountryCode'] instanceof String)) {
            throw new Error("Expected the field `DeliverySourceCountryCode` to be a primitive type in the JSON string but got " + data['DeliverySourceCountryCode']);
        }
        // ensure the json data is a string
        if (data['DistributionCenter'] && !(typeof data['DistributionCenter'] === 'string' || data['DistributionCenter'] instanceof String)) {
            throw new Error("Expected the field `DistributionCenter` to be a primitive type in the JSON string but got " + data['DistributionCenter']);
        }
        if (data['History']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['History'])) {
                throw new Error("Expected the field `History` to be an array in the JSON data but got " + data['History']);
            }
            // validate the optional field `History` (array)
            for (const item of data['History']) {
                BillbeeInterfacesOrderHistoryEntry.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        // validate the optional field `InvoiceAddress`
        if (data['InvoiceAddress']) { // data not null
          BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.validateJSON(data['InvoiceAddress']);
        }
        // ensure the json data is a string
        if (data['InvoiceNumberPostfix'] && !(typeof data['InvoiceNumberPostfix'] === 'string' || data['InvoiceNumberPostfix'] instanceof String)) {
            throw new Error("Expected the field `InvoiceNumberPostfix` to be a primitive type in the JSON string but got " + data['InvoiceNumberPostfix']);
        }
        // ensure the json data is a string
        if (data['InvoiceNumberPrefix'] && !(typeof data['InvoiceNumberPrefix'] === 'string' || data['InvoiceNumberPrefix'] instanceof String)) {
            throw new Error("Expected the field `InvoiceNumberPrefix` to be a primitive type in the JSON string but got " + data['InvoiceNumberPrefix']);
        }
        // ensure the json data is a string
        if (data['IsCancelationFor'] && !(typeof data['IsCancelationFor'] === 'string' || data['IsCancelationFor'] instanceof String)) {
            throw new Error("Expected the field `IsCancelationFor` to be a primitive type in the JSON string but got " + data['IsCancelationFor']);
        }
        // ensure the json data is a string
        if (data['LanguageCode'] && !(typeof data['LanguageCode'] === 'string' || data['LanguageCode'] instanceof String)) {
            throw new Error("Expected the field `LanguageCode` to be a primitive type in the JSON string but got " + data['LanguageCode']);
        }
        // ensure the json data is a string
        if (data['MerchantVatId'] && !(typeof data['MerchantVatId'] === 'string' || data['MerchantVatId'] instanceof String)) {
            throw new Error("Expected the field `MerchantVatId` to be a primitive type in the JSON string but got " + data['MerchantVatId']);
        }
        if (data['OrderItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['OrderItems'])) {
                throw new Error("Expected the field `OrderItems` to be an array in the JSON data but got " + data['OrderItems']);
            }
            // validate the optional field `OrderItems` (array)
            for (const item of data['OrderItems']) {
                BillbeeInterfacesBillbeeAPIModelOrderItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['OrderNumber'] && !(typeof data['OrderNumber'] === 'string' || data['OrderNumber'] instanceof String)) {
            throw new Error("Expected the field `OrderNumber` to be a primitive type in the JSON string but got " + data['OrderNumber']);
        }
        // ensure the json data is a string
        if (data['PaymentInstruction'] && !(typeof data['PaymentInstruction'] === 'string' || data['PaymentInstruction'] instanceof String)) {
            throw new Error("Expected the field `PaymentInstruction` to be a primitive type in the JSON string but got " + data['PaymentInstruction']);
        }
        // ensure the json data is a string
        if (data['PaymentReference'] && !(typeof data['PaymentReference'] === 'string' || data['PaymentReference'] instanceof String)) {
            throw new Error("Expected the field `PaymentReference` to be a primitive type in the JSON string but got " + data['PaymentReference']);
        }
        // ensure the json data is a string
        if (data['PaymentTransactionId'] && !(typeof data['PaymentTransactionId'] === 'string' || data['PaymentTransactionId'] instanceof String)) {
            throw new Error("Expected the field `PaymentTransactionId` to be a primitive type in the JSON string but got " + data['PaymentTransactionId']);
        }
        if (data['Payments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Payments'])) {
                throw new Error("Expected the field `Payments` to be an array in the JSON data but got " + data['Payments']);
            }
            // validate the optional field `Payments` (array)
            for (const item of data['Payments']) {
                BillbeeInterfacesBillbeeAPIModelsOrderPayment.validateJSON(item);
            };
        }
        // validate the optional field `Seller`
        if (data['Seller']) { // data not null
          BillbeeInterfacesBillbeeAPIModelOrderUser.validateJSON(data['Seller']);
        }
        // ensure the json data is a string
        if (data['SellerComment'] && !(typeof data['SellerComment'] === 'string' || data['SellerComment'] instanceof String)) {
            throw new Error("Expected the field `SellerComment` to be a primitive type in the JSON string but got " + data['SellerComment']);
        }
        // validate the optional field `ShippingAddress`
        if (data['ShippingAddress']) { // data not null
          BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel.validateJSON(data['ShippingAddress']);
        }
        if (data['ShippingIds']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ShippingIds'])) {
                throw new Error("Expected the field `ShippingIds` to be an array in the JSON data but got " + data['ShippingIds']);
            }
            // validate the optional field `ShippingIds` (array)
            for (const item of data['ShippingIds']) {
                BillbeeInterfacesBillbeeAPIModelShipment.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['ShippingProfileId'] && !(typeof data['ShippingProfileId'] === 'string' || data['ShippingProfileId'] instanceof String)) {
            throw new Error("Expected the field `ShippingProfileId` to be a primitive type in the JSON string but got " + data['ShippingProfileId']);
        }
        // ensure the json data is a string
        if (data['ShippingProfileName'] && !(typeof data['ShippingProfileName'] === 'string' || data['ShippingProfileName'] instanceof String)) {
            throw new Error("Expected the field `ShippingProfileName` to be a primitive type in the JSON string but got " + data['ShippingProfileName']);
        }
        // ensure the json data is a string
        if (data['ShippingProviderName'] && !(typeof data['ShippingProviderName'] === 'string' || data['ShippingProviderName'] instanceof String)) {
            throw new Error("Expected the field `ShippingProviderName` to be a primitive type in the JSON string but got " + data['ShippingProviderName']);
        }
        // ensure the json data is a string
        if (data['ShippingProviderProductName'] && !(typeof data['ShippingProviderProductName'] === 'string' || data['ShippingProviderProductName'] instanceof String)) {
            throw new Error("Expected the field `ShippingProviderProductName` to be a primitive type in the JSON string but got " + data['ShippingProviderProductName']);
        }
        if (data['ShippingServices']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ShippingServices'])) {
                throw new Error("Expected the field `ShippingServices` to be an array in the JSON data but got " + data['ShippingServices']);
            }
            // validate the optional field `ShippingServices` (array)
            for (const item of data['ShippingServices']) {
                BillbeeInterfacesShippingProductService.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Tags'])) {
            throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
        }
        // ensure the json data is a string
        if (data['VatId'] && !(typeof data['VatId'] === 'string' || data['VatId'] instanceof String)) {
            throw new Error("Expected the field `VatId` to be a primitive type in the JSON string but got " + data['VatId']);
        }

        return true;
    }


}



/**
 * Customer accepts loss due to withdrawal
 * @member {Boolean} AcceptLossOfReturnRight
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['AcceptLossOfReturnRight'] = undefined;

/**
 * @member {Number} AdjustmentCost
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['AdjustmentCost'] = undefined;

/**
 * @member {String} AdjustmentReason
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['AdjustmentReason'] = undefined;

/**
 * Id of the account, this order belongs to
 * @member {Number} ApiAccountId
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ApiAccountId'] = undefined;

/**
 * The name of the account, this order belongs to. Will be ignored on order creation.
 * @member {String} ApiAccountName
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ApiAccountName'] = undefined;

/**
 * If set, the order was already archived at the given date. Further modification is disabled.
 * @member {Date} ArchivedAt
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ArchivedAt'] = undefined;

/**
 * The Order.Id from the Billbee database
 * @member {Number} BillBeeOrderId
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['BillBeeOrderId'] = undefined;

/**
 * The Id of the parent order in the Billbee database
 * @member {Number} BillBeeParentOrderId
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['BillBeeParentOrderId'] = undefined;

/**
 * @member {module:model/BillbeeInterfacesBillbeeAPIModelOrderUser} Buyer
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['Buyer'] = undefined;

/**
 * All messages / comments of the order
 * @member {Array.<module:model/BillbeeInterfacesBillbeeAPIModelCommentApiModel>} Comments
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['Comments'] = undefined;

/**
 * The date on which the order was confirmed
 * @member {Date} ConfirmedAt
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ConfirmedAt'] = undefined;

/**
 * The date on which the order was created
 * @member {Date} CreatedAt
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['CreatedAt'] = undefined;

/**
 * The three letter currency code.
 * @member {String} Currency
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['Currency'] = undefined;

/**
 * An optional multiline text which is printed on the invoice
 * @member {String} CustomInvoiceNote
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['CustomInvoiceNote'] = undefined;

/**
 * @member {module:model/BillbeeInterfacesBillbeeAPIModelCustomerApiModel} Customer
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['Customer'] = undefined;

/**
 * The customer number (not to be confused with the id of the customer)
 * @member {String} CustomerNumber
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['CustomerNumber'] = undefined;

/**
 * The vat-id, that was given by the customer to fulfill this order
 * @member {String} CustomerVatId
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['CustomerVatId'] = undefined;

/**
 * An optional Country ISO2 Code of the country where order is shipped from (FBA)
 * @member {String} DeliverySourceCountryCode
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['DeliverySourceCountryCode'] = undefined;

/**
 * An optional code for the distribution center delivering this order
 * @member {String} DistributionCenter
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['DistributionCenter'] = undefined;

/**
 * @member {Array.<module:model/BillbeeInterfacesOrderHistoryEntry>} History
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['History'] = undefined;

/**
 * Id of the order in the external system (marketplace)
 * @member {String} Id
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['Id'] = undefined;

/**
 * @member {module:model/BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel} InvoiceAddress
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['InvoiceAddress'] = undefined;

/**
 * The date on which the invoice was created
 * @member {Date} InvoiceDate
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['InvoiceDate'] = undefined;

/**
 * The invoice number
 * @member {Number} InvoiceNumber
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['InvoiceNumber'] = undefined;

/**
 * The postfix of the invoice number
 * @member {String} InvoiceNumberPostfix
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['InvoiceNumberPostfix'] = undefined;

/**
 * The prefix of the invoice number
 * @member {String} InvoiceNumberPrefix
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['InvoiceNumberPrefix'] = undefined;

/**
 * An optional Order Id (externalid) for an order if this is a cancel order (shopify only at the moment)
 * @member {String} IsCancelationFor
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['IsCancelationFor'] = undefined;

/**
 * Indicates whether the order was created through the Billbee-Api or not.
 * @member {Boolean} IsFromBillbeeApi
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['IsFromBillbeeApi'] = undefined;

/**
 * The two-letter language code of the customer
 * @member {String} LanguageCode
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['LanguageCode'] = undefined;

/**
 * Date of the last update, the order got
 * @member {Date} LastModifiedAt
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['LastModifiedAt'] = undefined;

/**
 * The vat-id, that should be displayed on the invoice and other order documents
 * @member {String} MerchantVatId
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['MerchantVatId'] = undefined;

/**
 * The list of items purchased like shirt, pant, toys etc
 * @member {Array.<module:model/BillbeeInterfacesBillbeeAPIModelOrderItem>} OrderItems
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['OrderItems'] = undefined;

/**
 * Order number of the order in the external system (marketplace)
 * @member {String} OrderNumber
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['OrderNumber'] = undefined;

/**
 * @member {Number} PaidAmount
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['PaidAmount'] = undefined;

/**
 * The date on which the order was paid
 * @member {Date} PayedAt
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['PayedAt'] = undefined;

/**
 * A textfield optionaly filled with a payment instruction text for printout on the invoice (z.B. Ebay Kauf auf Rechnung)
 * @member {String} PaymentInstruction
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['PaymentInstruction'] = undefined;

/**
 * The payment method
 * @member {module:model/BillbeeInterfacesBillbeeAPIModelOrder.PaymentMethodEnum} PaymentMethod
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['PaymentMethod'] = undefined;

/**
 * A payment reference. Should not be used any more. Please use 'Payments' instead.
 * @member {String} PaymentReference
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['PaymentReference'] = undefined;

/**
 * The id of the payment transaction. For example the transaction id of PayPal payment. Should not be used any more. Please use 'Payments' instead.
 * @member {String} PaymentTransactionId
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['PaymentTransactionId'] = undefined;

/**
 * @member {Array.<module:model/BillbeeInterfacesBillbeeAPIModelsOrderPayment>} Payments
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['Payments'] = undefined;

/**
 * @member {Number} RebateDifference
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['RebateDifference'] = undefined;

/**
 * If set, the order was restored from the archive at the given date.
 * @member {Date} RestoredAt
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['RestoredAt'] = undefined;

/**
 * @member {module:model/BillbeeInterfacesBillbeeAPIModelOrderUser} Seller
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['Seller'] = undefined;

/**
 * An internal seller comment
 * @member {String} SellerComment
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['SellerComment'] = undefined;

/**
 * The total weight of the shipment(s)
 * @member {Number} ShipWeightKg
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ShipWeightKg'] = undefined;

/**
 * The date on which the order was shipped
 * @member {Date} ShippedAt
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ShippedAt'] = undefined;

/**
 * @member {module:model/BillbeeInterfacesBillbeeAPIModelOrderAddressApiModel} ShippingAddress
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ShippingAddress'] = undefined;

/**
 * The shipping cost
 * @member {Number} ShippingCost
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ShippingCost'] = undefined;

/**
 * The shipments of the order
 * @member {Array.<module:model/BillbeeInterfacesBillbeeAPIModelShipment>} ShippingIds
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ShippingIds'] = undefined;

/**
 * Internal Id for the shipping profile for that order
 * @member {String} ShippingProfileId
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ShippingProfileId'] = undefined;

/**
 * Display Name of Shipping profile, if available
 * @member {String} ShippingProfileName
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ShippingProfileName'] = undefined;

/**
 * Internal Id for the used shipping provider
 * @member {Number} ShippingProviderId
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ShippingProviderId'] = undefined;

/**
 * The Name for of used shipping provider
 * @member {String} ShippingProviderName
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ShippingProviderName'] = undefined;

/**
 * Internal Id for the used shipping product
 * @member {Number} ShippingProviderProductId
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ShippingProviderProductId'] = undefined;

/**
 * The Name of the used shipping product
 * @member {String} ShippingProviderProductName
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ShippingProviderProductName'] = undefined;

/**
 * Additional services for the shipment
 * @member {Array.<module:model/BillbeeInterfacesShippingProductService>} ShippingServices
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['ShippingServices'] = undefined;

/**
 * The current state of the order
 * @member {module:model/BillbeeInterfacesBillbeeAPIModelOrder.StateEnum} State
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['State'] = undefined;

/**
 * The Tags of the order
 * @member {Array.<String>} Tags
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['Tags'] = undefined;

/**
 * The regular tax rate
 * @member {Number} TaxRate1
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['TaxRate1'] = undefined;

/**
 * The reduced tax rate
 * @member {Number} TaxRate2
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['TaxRate2'] = undefined;

/**
 * The total cost excluding shipping cost
 * @member {Number} TotalCost
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['TotalCost'] = undefined;

/**
 * The date on which the order was last updated
 * @member {Date} UpdatedAt
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['UpdatedAt'] = undefined;

/**
 * The customers vat id
 * @member {String} VatId
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['VatId'] = undefined;

/**
 * The vat mode of the order
 * @member {module:model/BillbeeInterfacesBillbeeAPIModelOrder.VatModeEnum} VatMode
 */
BillbeeInterfacesBillbeeAPIModelOrder.prototype['VatMode'] = undefined;





/**
 * Allowed values for the <code>PaymentMethod</code> property.
 * @enum {Number}
 * @readonly
 */
BillbeeInterfacesBillbeeAPIModelOrder['PaymentMethodEnum'] = {

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 6
     * @const
     */
    "6": 6,

    /**
     * value: 19
     * @const
     */
    "19": 19,

    /**
     * value: 20
     * @const
     */
    "20": 20,

    /**
     * value: 21
     * @const
     */
    "21": 21,

    /**
     * value: 22
     * @const
     */
    "22": 22,

    /**
     * value: 23
     * @const
     */
    "23": 23,

    /**
     * value: 24
     * @const
     */
    "24": 24,

    /**
     * value: 25
     * @const
     */
    "25": 25,

    /**
     * value: 26
     * @const
     */
    "26": 26,

    /**
     * value: 27
     * @const
     */
    "27": 27,

    /**
     * value: 28
     * @const
     */
    "28": 28,

    /**
     * value: 29
     * @const
     */
    "29": 29,

    /**
     * value: 30
     * @const
     */
    "30": 30,

    /**
     * value: 31
     * @const
     */
    "31": 31,

    /**
     * value: 32
     * @const
     */
    "32": 32,

    /**
     * value: 33
     * @const
     */
    "33": 33,

    /**
     * value: 34
     * @const
     */
    "34": 34,

    /**
     * value: 35
     * @const
     */
    "35": 35,

    /**
     * value: 36
     * @const
     */
    "36": 36,

    /**
     * value: 37
     * @const
     */
    "37": 37,

    /**
     * value: 38
     * @const
     */
    "38": 38,

    /**
     * value: 39
     * @const
     */
    "39": 39,

    /**
     * value: 40
     * @const
     */
    "40": 40,

    /**
     * value: 41
     * @const
     */
    "41": 41,

    /**
     * value: 42
     * @const
     */
    "42": 42,

    /**
     * value: 43
     * @const
     */
    "43": 43,

    /**
     * value: 44
     * @const
     */
    "44": 44,

    /**
     * value: 45
     * @const
     */
    "45": 45,

    /**
     * value: 46
     * @const
     */
    "46": 46,

    /**
     * value: 47
     * @const
     */
    "47": 47,

    /**
     * value: 48
     * @const
     */
    "48": 48,

    /**
     * value: 49
     * @const
     */
    "49": 49,

    /**
     * value: 50
     * @const
     */
    "50": 50,

    /**
     * value: 51
     * @const
     */
    "51": 51,

    /**
     * value: 52
     * @const
     */
    "52": 52,

    /**
     * value: 53
     * @const
     */
    "53": 53,

    /**
     * value: 54
     * @const
     */
    "54": 54,

    /**
     * value: 55
     * @const
     */
    "55": 55,

    /**
     * value: 56
     * @const
     */
    "56": 56,

    /**
     * value: 57
     * @const
     */
    "57": 57,

    /**
     * value: 58
     * @const
     */
    "58": 58,

    /**
     * value: 59
     * @const
     */
    "59": 59,

    /**
     * value: 60
     * @const
     */
    "60": 60,

    /**
     * value: 61
     * @const
     */
    "61": 61,

    /**
     * value: 62
     * @const
     */
    "62": 62,

    /**
     * value: 63
     * @const
     */
    "63": 63,

    /**
     * value: 64
     * @const
     */
    "64": 64,

    /**
     * value: 65
     * @const
     */
    "65": 65,

    /**
     * value: 66
     * @const
     */
    "66": 66,

    /**
     * value: 67
     * @const
     */
    "67": 67,

    /**
     * value: 68
     * @const
     */
    "68": 68,

    /**
     * value: 69
     * @const
     */
    "69": 69,

    /**
     * value: 70
     * @const
     */
    "70": 70,

    /**
     * value: 71
     * @const
     */
    "71": 71,

    /**
     * value: 72
     * @const
     */
    "72": 72,

    /**
     * value: 73
     * @const
     */
    "73": 73,

    /**
     * value: 74
     * @const
     */
    "74": 74,

    /**
     * value: 75
     * @const
     */
    "75": 75,

    /**
     * value: 76
     * @const
     */
    "76": 76,

    /**
     * value: 77
     * @const
     */
    "77": 77,

    /**
     * value: 78
     * @const
     */
    "78": 78,

    /**
     * value: 79
     * @const
     */
    "79": 79,

    /**
     * value: 80
     * @const
     */
    "80": 80,

    /**
     * value: 81
     * @const
     */
    "81": 81,

    /**
     * value: 82
     * @const
     */
    "82": 82,

    /**
     * value: 83
     * @const
     */
    "83": 83,

    /**
     * value: 84
     * @const
     */
    "84": 84,

    /**
     * value: 85
     * @const
     */
    "85": 85,

    /**
     * value: 86
     * @const
     */
    "86": 86,

    /**
     * value: 87
     * @const
     */
    "87": 87,

    /**
     * value: 88
     * @const
     */
    "88": 88,

    /**
     * value: 89
     * @const
     */
    "89": 89,

    /**
     * value: 90
     * @const
     */
    "90": 90,

    /**
     * value: 91
     * @const
     */
    "91": 91,

    /**
     * value: 92
     * @const
     */
    "92": 92,

    /**
     * value: 93
     * @const
     */
    "93": 93,

    /**
     * value: 94
     * @const
     */
    "94": 94,

    /**
     * value: 95
     * @const
     */
    "95": 95,

    /**
     * value: 96
     * @const
     */
    "96": 96,

    /**
     * value: 97
     * @const
     */
    "97": 97,

    /**
     * value: 98
     * @const
     */
    "98": 98,

    /**
     * value: 99
     * @const
     */
    "99": 99,

    /**
     * value: 100
     * @const
     */
    "100": 100,

    /**
     * value: 101
     * @const
     */
    "101": 101,

    /**
     * value: 102
     * @const
     */
    "102": 102,

    /**
     * value: 103
     * @const
     */
    "103": 103,

    /**
     * value: 104
     * @const
     */
    "104": 104,

    /**
     * value: 105
     * @const
     */
    "105": 105,

    /**
     * value: 106
     * @const
     */
    "106": 106,

    /**
     * value: 107
     * @const
     */
    "107": 107,

    /**
     * value: 108
     * @const
     */
    "108": 108,

    /**
     * value: 109
     * @const
     */
    "109": 109,

    /**
     * value: 110
     * @const
     */
    "110": 110,

    /**
     * value: 111
     * @const
     */
    "111": 111,

    /**
     * value: 112
     * @const
     */
    "112": 112,

    /**
     * value: 113
     * @const
     */
    "113": 113,

    /**
     * value: 114
     * @const
     */
    "114": 114,

    /**
     * value: 115
     * @const
     */
    "115": 115,

    /**
     * value: 116
     * @const
     */
    "116": 116,

    /**
     * value: 117
     * @const
     */
    "117": 117,

    /**
     * value: 118
     * @const
     */
    "118": 118,

    /**
     * value: 119
     * @const
     */
    "119": 119,

    /**
     * value: 120
     * @const
     */
    "120": 120,

    /**
     * value: 121
     * @const
     */
    "121": 121,

    /**
     * value: 122
     * @const
     */
    "122": 122,

    /**
     * value: 123
     * @const
     */
    "123": 123,

    /**
     * value: 124
     * @const
     */
    "124": 124,

    /**
     * value: 125
     * @const
     */
    "125": 125,

    /**
     * value: 126
     * @const
     */
    "126": 126,

    /**
     * value: 127
     * @const
     */
    "127": 127,

    /**
     * value: 128
     * @const
     */
    "128": 128,

    /**
     * value: 129
     * @const
     */
    "129": 129,

    /**
     * value: 130
     * @const
     */
    "130": 130,

    /**
     * value: 131
     * @const
     */
    "131": 131,

    /**
     * value: 132
     * @const
     */
    "132": 132,

    /**
     * value: 133
     * @const
     */
    "133": 133,

    /**
     * value: 134
     * @const
     */
    "134": 134,

    /**
     * value: 135
     * @const
     */
    "135": 135,

    /**
     * value: 136
     * @const
     */
    "136": 136,

    /**
     * value: 137
     * @const
     */
    "137": 137,

    /**
     * value: 138
     * @const
     */
    "138": 138
};


/**
 * Allowed values for the <code>State</code> property.
 * @enum {Number}
 * @readonly
 */
BillbeeInterfacesBillbeeAPIModelOrder['StateEnum'] = {

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 5
     * @const
     */
    "5": 5,

    /**
     * value: 6
     * @const
     */
    "6": 6,

    /**
     * value: 7
     * @const
     */
    "7": 7,

    /**
     * value: 8
     * @const
     */
    "8": 8,

    /**
     * value: 9
     * @const
     */
    "9": 9,

    /**
     * value: 10
     * @const
     */
    "10": 10,

    /**
     * value: 11
     * @const
     */
    "11": 11,

    /**
     * value: 12
     * @const
     */
    "12": 12,

    /**
     * value: 13
     * @const
     */
    "13": 13,

    /**
     * value: 14
     * @const
     */
    "14": 14,

    /**
     * value: 15
     * @const
     */
    "15": 15,

    /**
     * value: 16
     * @const
     */
    "16": 16
};


/**
 * Allowed values for the <code>VatMode</code> property.
 * @enum {Number}
 * @readonly
 */
BillbeeInterfacesBillbeeAPIModelOrder['VatModeEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 5
     * @const
     */
    "5": 5
};



export default BillbeeInterfacesBillbeeAPIModelOrder;

