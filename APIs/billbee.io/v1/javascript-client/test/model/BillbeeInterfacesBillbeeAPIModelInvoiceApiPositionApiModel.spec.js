/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillbeeApi);
  }
}(this, function(expect, BillbeeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel', function() {
    it('should create an instance of BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel', function() {
      // uncomment below and update the code to test BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be.a(BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel);
    });

    it('should have the property amount (base name: "Amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

    it('should have the property articleBillbeeId (base name: "ArticleBillbeeId")', function() {
      // uncomment below and update the code to test the property articleBillbeeId
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

    it('should have the property billbeeId (base name: "BillbeeId")', function() {
      // uncomment below and update the code to test the property billbeeId
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

    it('should have the property grossValue (base name: "GrossValue")', function() {
      // uncomment below and update the code to test the property grossValue
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

    it('should have the property netValue (base name: "NetValue")', function() {
      // uncomment below and update the code to test the property netValue
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

    it('should have the property position (base name: "Position")', function() {
      // uncomment below and update the code to test the property position
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

    it('should have the property rebatePercent (base name: "RebatePercent")', function() {
      // uncomment below and update the code to test the property rebatePercent
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "Sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "Title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

    it('should have the property totalGrossValue (base name: "TotalGrossValue")', function() {
      // uncomment below and update the code to test the property totalGrossValue
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

    it('should have the property totalNetValue (base name: "TotalNetValue")', function() {
      // uncomment below and update the code to test the property totalNetValue
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

    it('should have the property totalVatAmount (base name: "TotalVatAmount")', function() {
      // uncomment below and update the code to test the property totalVatAmount
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

    it('should have the property vatRate (base name: "VatRate")', function() {
      // uncomment below and update the code to test the property vatRate
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiPositionApiModel();
      //expect(instance).to.be();
    });

  });

}));
