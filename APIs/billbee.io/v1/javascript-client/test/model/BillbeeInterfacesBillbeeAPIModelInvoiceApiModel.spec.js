/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillbeeApi);
  }
}(this, function(expect, BillbeeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BillbeeInterfacesBillbeeAPIModelInvoiceApiModel', function() {
    it('should create an instance of BillbeeInterfacesBillbeeAPIModelInvoiceApiModel', function() {
      // uncomment below and update the code to test BillbeeInterfacesBillbeeAPIModelInvoiceApiModel
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be.a(BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel);
    });

    it('should have the property additionalFees (base name: "AdditionalFees")', function() {
      // uncomment below and update the code to test the property additionalFees
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property billbeeId (base name: "BillbeeId")', function() {
      // uncomment below and update the code to test the property billbeeId
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "Company")', function() {
      // uncomment below and update the code to test the property company
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "Currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property customerNumber (base name: "CustomerNumber")', function() {
      // uncomment below and update the code to test the property customerNumber
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property customerVatId (base name: "CustomerVatId")', function() {
      // uncomment below and update the code to test the property customerVatId
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property debtorNumber (base name: "DebtorNumber")', function() {
      // uncomment below and update the code to test the property debtorNumber
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "Email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "FirstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property invoiceDate (base name: "InvoiceDate")', function() {
      // uncomment below and update the code to test the property invoiceDate
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property invoiceNumber (base name: "InvoiceNumber")', function() {
      // uncomment below and update the code to test the property invoiceNumber
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "LastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property merchantVatId (base name: "MerchantVatId")', function() {
      // uncomment below and update the code to test the property merchantVatId
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property orderNumber (base name: "OrderNumber")', function() {
      // uncomment below and update the code to test the property orderNumber
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property payDate (base name: "PayDate")', function() {
      // uncomment below and update the code to test the property payDate
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property paymentTypeId (base name: "PaymentTypeId")', function() {
      // uncomment below and update the code to test the property paymentTypeId
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property positions (base name: "Positions")', function() {
      // uncomment below and update the code to test the property positions
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property salutation (base name: "Salutation")', function() {
      // uncomment below and update the code to test the property salutation
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property shippingCountry (base name: "ShippingCountry")', function() {
      // uncomment below and update the code to test the property shippingCountry
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property shopName (base name: "ShopName")', function() {
      // uncomment below and update the code to test the property shopName
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "Title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property totalGross (base name: "TotalGross")', function() {
      // uncomment below and update the code to test the property totalGross
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property totalNet (base name: "TotalNet")', function() {
      // uncomment below and update the code to test the property totalNet
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property transactionId (base name: "TransactionId")', function() {
      // uncomment below and update the code to test the property transactionId
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property vatFlags (base name: "VatFlags")', function() {
      // uncomment below and update the code to test the property vatFlags
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

    it('should have the property vatMode (base name: "VatMode")', function() {
      // uncomment below and update the code to test the property vatMode
      //var instance = new BillbeeApi.BillbeeInterfacesBillbeeAPIModelInvoiceApiModel();
      //expect(instance).to.be();
    });

  });

}));
