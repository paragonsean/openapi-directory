/**
 * Billbee API
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.  ## Endpoint  The Billbee API endpoint base url is https://api.billbee.io/api/v1   ## Activation  You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.  ## Authorization & security  Because you can access private data with the Billbee API, every request has to be sent over https and must  * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header  ## Throttling  Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.  When you exceed these 2 calls, the API will return a HTTP 429 status code  
 *
 * The version of the OpenAPI document: v1
 * Contact: support@billbee.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillbeeApi);
  }
}(this, function(expect, BillbeeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BillbeeApi.RechnungsdruckWebAppControllersApiShipmentWithLabel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RechnungsdruckWebAppControllersApiShipmentWithLabel', function() {
    it('should create an instance of RechnungsdruckWebAppControllersApiShipmentWithLabel', function() {
      // uncomment below and update the code to test RechnungsdruckWebAppControllersApiShipmentWithLabel
      //var instance = new BillbeeApi.RechnungsdruckWebAppControllersApiShipmentWithLabel();
      //expect(instance).to.be.a(BillbeeApi.RechnungsdruckWebAppControllersApiShipmentWithLabel);
    });

    it('should have the property changeStateToSend (base name: "ChangeStateToSend")', function() {
      // uncomment below and update the code to test the property changeStateToSend
      //var instance = new BillbeeApi.RechnungsdruckWebAppControllersApiShipmentWithLabel();
      //expect(instance).to.be();
    });

    it('should have the property clientReference (base name: "ClientReference")', function() {
      // uncomment below and update the code to test the property clientReference
      //var instance = new BillbeeApi.RechnungsdruckWebAppControllersApiShipmentWithLabel();
      //expect(instance).to.be();
    });

    it('should have the property dimension (base name: "Dimension")', function() {
      // uncomment below and update the code to test the property dimension
      //var instance = new BillbeeApi.RechnungsdruckWebAppControllersApiShipmentWithLabel();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "OrderId")', function() {
      // uncomment below and update the code to test the property orderId
      //var instance = new BillbeeApi.RechnungsdruckWebAppControllersApiShipmentWithLabel();
      //expect(instance).to.be();
    });

    it('should have the property printerName (base name: "PrinterName")', function() {
      // uncomment below and update the code to test the property printerName
      //var instance = new BillbeeApi.RechnungsdruckWebAppControllersApiShipmentWithLabel();
      //expect(instance).to.be();
    });

    it('should have the property productId (base name: "ProductId")', function() {
      // uncomment below and update the code to test the property productId
      //var instance = new BillbeeApi.RechnungsdruckWebAppControllersApiShipmentWithLabel();
      //expect(instance).to.be();
    });

    it('should have the property providerId (base name: "ProviderId")', function() {
      // uncomment below and update the code to test the property providerId
      //var instance = new BillbeeApi.RechnungsdruckWebAppControllersApiShipmentWithLabel();
      //expect(instance).to.be();
    });

    it('should have the property shipDate (base name: "ShipDate")', function() {
      // uncomment below and update the code to test the property shipDate
      //var instance = new BillbeeApi.RechnungsdruckWebAppControllersApiShipmentWithLabel();
      //expect(instance).to.be();
    });

    it('should have the property weightInGram (base name: "WeightInGram")', function() {
      // uncomment below and update the code to test the property weightInGram
      //var instance = new BillbeeApi.RechnungsdruckWebAppControllersApiShipmentWithLabel();
      //expect(instance).to.be();
    });

  });

}));
