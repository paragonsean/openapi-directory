# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, sub_type: str=None, type_id: int=None, type_name: str=None, value: str=None):
        """BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel - a model defined in OpenAPI

        :param id: The id of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :param sub_type: The sub_type of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :param type_id: The type_id of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :param type_name: The type_name of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :param value: The value of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        """
        self.openapi_types = {
            'id': int,
            'sub_type': str,
            'type_id': int,
            'type_name': str,
            'value': str
        }

        self.attribute_map = {
            'id': 'Id',
            'sub_type': 'SubType',
            'type_id': 'TypeId',
            'type_name': 'TypeName',
            'value': 'Value'
        }

        self._id = id
        self._sub_type = sub_type
        self._type_id = type_id
        self._type_name = type_name
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Billbee.Interfaces.BillbeeAPI.Models.CustomerMetaDataApiModel of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.


        :return: The id of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.


        :param id: The id of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :type id: int
        """

        self._id = id

    @property
    def sub_type(self):
        """Gets the sub_type of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.


        :return: The sub_type of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :rtype: str
        """
        return self._sub_type

    @sub_type.setter
    def sub_type(self, sub_type):
        """Sets the sub_type of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.


        :param sub_type: The sub_type of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :type sub_type: str
        """

        self._sub_type = sub_type

    @property
    def type_id(self):
        """Gets the type_id of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.


        :return: The type_id of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :rtype: int
        """
        return self._type_id

    @type_id.setter
    def type_id(self, type_id):
        """Sets the type_id of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.


        :param type_id: The type_id of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :type type_id: int
        """

        self._type_id = type_id

    @property
    def type_name(self):
        """Gets the type_name of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.


        :return: The type_name of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :rtype: str
        """
        return self._type_name

    @type_name.setter
    def type_name(self, type_name):
        """Sets the type_name of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.


        :param type_name: The type_name of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :type type_name: str
        """

        self._type_name = type_name

    @property
    def value(self):
        """Gets the value of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.


        :return: The value of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.


        :param value: The value of this BillbeeInterfacesBillbeeAPIModelsCustomerMetaDataApiModel.
        :type value: str
        """

        self._value = value
