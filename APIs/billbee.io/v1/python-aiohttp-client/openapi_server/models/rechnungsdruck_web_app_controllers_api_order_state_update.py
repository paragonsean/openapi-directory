# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RechnungsdruckWebAppControllersApiOrderStateUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, new_state_id: int=None):
        """RechnungsdruckWebAppControllersApiOrderStateUpdate - a model defined in OpenAPI

        :param new_state_id: The new_state_id of this RechnungsdruckWebAppControllersApiOrderStateUpdate.
        """
        self.openapi_types = {
            'new_state_id': int
        }

        self.attribute_map = {
            'new_state_id': 'NewStateId'
        }

        self._new_state_id = new_state_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RechnungsdruckWebAppControllersApiOrderStateUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Rechnungsdruck.WebApp.Controllers.Api.OrderStateUpdate of this RechnungsdruckWebAppControllersApiOrderStateUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def new_state_id(self):
        """Gets the new_state_id of this RechnungsdruckWebAppControllersApiOrderStateUpdate.

        The new state to set

        :return: The new_state_id of this RechnungsdruckWebAppControllersApiOrderStateUpdate.
        :rtype: int
        """
        return self._new_state_id

    @new_state_id.setter
    def new_state_id(self, new_state_id):
        """Sets the new_state_id of this RechnungsdruckWebAppControllersApiOrderStateUpdate.

        The new state to set

        :param new_state_id: The new_state_id of this RechnungsdruckWebAppControllersApiOrderStateUpdate.
        :type new_state_id: int
        """
        allowed_values = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]  # noqa: E501
        if new_state_id not in allowed_values:
            raise ValueError(
                "Invalid value for `new_state_id` ({0}), must be one of {1}"
                .format(new_state_id, allowed_values)
            )

        self._new_state_id = new_state_id
