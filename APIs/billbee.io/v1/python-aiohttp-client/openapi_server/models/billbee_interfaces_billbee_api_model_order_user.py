# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BillbeeInterfacesBillbeeAPIModelOrderUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billbee_shop_id: int=None, billbee_shop_name: str=None, email: str=None, first_name: str=None, full_name: str=None, id: str=None, last_name: str=None, nick: str=None, platform: str=None):
        """BillbeeInterfacesBillbeeAPIModelOrderUser - a model defined in OpenAPI

        :param billbee_shop_id: The billbee_shop_id of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :param billbee_shop_name: The billbee_shop_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :param email: The email of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :param first_name: The first_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :param full_name: The full_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :param id: The id of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :param last_name: The last_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :param nick: The nick of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :param platform: The platform of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        """
        self.openapi_types = {
            'billbee_shop_id': int,
            'billbee_shop_name': str,
            'email': str,
            'first_name': str,
            'full_name': str,
            'id': str,
            'last_name': str,
            'nick': str,
            'platform': str
        }

        self.attribute_map = {
            'billbee_shop_id': 'BillbeeShopId',
            'billbee_shop_name': 'BillbeeShopName',
            'email': 'Email',
            'first_name': 'FirstName',
            'full_name': 'FullName',
            'id': 'Id',
            'last_name': 'LastName',
            'nick': 'Nick',
            'platform': 'Platform'
        }

        self._billbee_shop_id = billbee_shop_id
        self._billbee_shop_name = billbee_shop_name
        self._email = email
        self._first_name = first_name
        self._full_name = full_name
        self._id = id
        self._last_name = last_name
        self._nick = nick
        self._platform = platform

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillbeeInterfacesBillbeeAPIModelOrderUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Billbee.Interfaces.BillbeeAPI.Model.OrderUser of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billbee_shop_id(self):
        """Gets the billbee_shop_id of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The Billbee internal id of the shop connection

        :return: The billbee_shop_id of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :rtype: int
        """
        return self._billbee_shop_id

    @billbee_shop_id.setter
    def billbee_shop_id(self, billbee_shop_id):
        """Sets the billbee_shop_id of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The Billbee internal id of the shop connection

        :param billbee_shop_id: The billbee_shop_id of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :type billbee_shop_id: int
        """

        self._billbee_shop_id = billbee_shop_id

    @property
    def billbee_shop_name(self):
        """Gets the billbee_shop_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The name of shop connection in Billbee

        :return: The billbee_shop_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :rtype: str
        """
        return self._billbee_shop_name

    @billbee_shop_name.setter
    def billbee_shop_name(self, billbee_shop_name):
        """Sets the billbee_shop_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The name of shop connection in Billbee

        :param billbee_shop_name: The billbee_shop_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :type billbee_shop_name: str
        """

        self._billbee_shop_name = billbee_shop_name

    @property
    def email(self):
        """Gets the email of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The email address of this customer

        :return: The email of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The email address of this customer

        :param email: The email of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The first name of this customer

        :return: The first_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The first name of this customer

        :param first_name: The first_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def full_name(self):
        """Gets the full_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The full name (\"firstname lastname\") of this customer

        :return: The full_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The full name (\"firstname lastname\") of this customer

        :param full_name: The full_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def id(self):
        """Gets the id of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The Billbee internal id of this customer

        :return: The id of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The Billbee internal id of this customer

        :param id: The id of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :type id: str
        """

        self._id = id

    @property
    def last_name(self):
        """Gets the last_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The last name of this customer

        :return: The last_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The last name of this customer

        :param last_name: The last_name of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def nick(self):
        """Gets the nick of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The nick name (if available) from the original system

        :return: The nick of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :rtype: str
        """
        return self._nick

    @nick.setter
    def nick(self, nick):
        """Sets the nick of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The nick name (if available) from the original system

        :param nick: The nick of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :type nick: str
        """

        self._nick = nick

    @property
    def platform(self):
        """Gets the platform of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The name of the platform from which this customer originated

        :return: The platform of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :rtype: str
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this BillbeeInterfacesBillbeeAPIModelOrderUser.

        The name of the platform from which this customer originated

        :param platform: The platform of this BillbeeInterfacesBillbeeAPIModelOrderUser.
        :type platform: str
        """

        self._platform = platform
