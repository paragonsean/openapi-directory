# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_html: bool=None, language: str=None, text_to_parse: str=None, trim: bool=None):
        """RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer - a model defined in OpenAPI

        :param is_html: The is_html of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        :param language: The language of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        :param text_to_parse: The text_to_parse of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        :param trim: The trim of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        """
        self.openapi_types = {
            'is_html': bool,
            'language': str,
            'text_to_parse': str,
            'trim': bool
        }

        self.attribute_map = {
            'is_html': 'IsHtml',
            'language': 'Language',
            'text_to_parse': 'TextToParse',
            'trim': 'Trim'
        }

        self._is_html = is_html
        self._language = language
        self._text_to_parse = text_to_parse
        self._trim = trim

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.ParseTextContainer of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_html(self):
        """Gets the is_html of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.

        If true, the string will be handled as html.

        :return: The is_html of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        :rtype: bool
        """
        return self._is_html

    @is_html.setter
    def is_html(self, is_html):
        """Sets the is_html of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.

        If true, the string will be handled as html.

        :param is_html: The is_html of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        :type is_html: bool
        """

        self._is_html = is_html

    @property
    def language(self):
        """Gets the language of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.

        The ISO 639-1 code of the target language. Using default if not set.

        :return: The language of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.

        The ISO 639-1 code of the target language. Using default if not set.

        :param language: The language of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        :type language: str
        """

        self._language = language

    @property
    def text_to_parse(self):
        """Gets the text_to_parse of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.

        The text to parse and replace the placeholders in.

        :return: The text_to_parse of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        :rtype: str
        """
        return self._text_to_parse

    @text_to_parse.setter
    def text_to_parse(self, text_to_parse):
        """Sets the text_to_parse of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.

        The text to parse and replace the placeholders in.

        :param text_to_parse: The text_to_parse of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        :type text_to_parse: str
        """

        self._text_to_parse = text_to_parse

    @property
    def trim(self):
        """Gets the trim of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.

        If true, then the placeholder values are trimmed after usage.

        :return: The trim of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        :rtype: bool
        """
        return self._trim

    @trim.setter
    def trim(self, trim):
        """Sets the trim of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.

        If true, then the placeholder values are trimmed after usage.

        :param trim: The trim of this RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer.
        :type trim: bool
        """

        self._trim = trim
