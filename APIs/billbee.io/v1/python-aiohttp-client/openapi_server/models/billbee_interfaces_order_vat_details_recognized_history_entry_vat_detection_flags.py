# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer_has_vat_id: bool=None, eu_delivery_threshold_exceeded: bool=None, is_distance_sale: bool=None, order_distribution_country_is_empty: bool=None, oss_enabled: bool=None, rates_from: str=None, seller_is_registered_in_dst_country: bool=None, set_igl_when_vat_id_is_available_enabled: bool=None, src_country_is_equal_to_dst_country: bool=None, third_party_country: bool=None, user_profile_country_is_empty: bool=None, vat_id_from: str=None):
        """BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags - a model defined in OpenAPI

        :param customer_has_vat_id: The customer_has_vat_id of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :param eu_delivery_threshold_exceeded: The eu_delivery_threshold_exceeded of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :param is_distance_sale: The is_distance_sale of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :param order_distribution_country_is_empty: The order_distribution_country_is_empty of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :param oss_enabled: The oss_enabled of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :param rates_from: The rates_from of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :param seller_is_registered_in_dst_country: The seller_is_registered_in_dst_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :param set_igl_when_vat_id_is_available_enabled: The set_igl_when_vat_id_is_available_enabled of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :param src_country_is_equal_to_dst_country: The src_country_is_equal_to_dst_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :param third_party_country: The third_party_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :param user_profile_country_is_empty: The user_profile_country_is_empty of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :param vat_id_from: The vat_id_from of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        """
        self.openapi_types = {
            'customer_has_vat_id': bool,
            'eu_delivery_threshold_exceeded': bool,
            'is_distance_sale': bool,
            'order_distribution_country_is_empty': bool,
            'oss_enabled': bool,
            'rates_from': str,
            'seller_is_registered_in_dst_country': bool,
            'set_igl_when_vat_id_is_available_enabled': bool,
            'src_country_is_equal_to_dst_country': bool,
            'third_party_country': bool,
            'user_profile_country_is_empty': bool,
            'vat_id_from': str
        }

        self.attribute_map = {
            'customer_has_vat_id': 'CustomerHasVatId',
            'eu_delivery_threshold_exceeded': 'EuDeliveryThresholdExceeded',
            'is_distance_sale': 'IsDistanceSale',
            'order_distribution_country_is_empty': 'OrderDistributionCountryIsEmpty',
            'oss_enabled': 'OssEnabled',
            'rates_from': 'RatesFrom',
            'seller_is_registered_in_dst_country': 'SellerIsRegisteredInDstCountry',
            'set_igl_when_vat_id_is_available_enabled': 'SetIglWhenVatIdIsAvailableEnabled',
            'src_country_is_equal_to_dst_country': 'SrcCountryIsEqualToDstCountry',
            'third_party_country': 'ThirdPartyCountry',
            'user_profile_country_is_empty': 'UserProfileCountryIsEmpty',
            'vat_id_from': 'VatIdFrom'
        }

        self._customer_has_vat_id = customer_has_vat_id
        self._eu_delivery_threshold_exceeded = eu_delivery_threshold_exceeded
        self._is_distance_sale = is_distance_sale
        self._order_distribution_country_is_empty = order_distribution_country_is_empty
        self._oss_enabled = oss_enabled
        self._rates_from = rates_from
        self._seller_is_registered_in_dst_country = seller_is_registered_in_dst_country
        self._set_igl_when_vat_id_is_available_enabled = set_igl_when_vat_id_is_available_enabled
        self._src_country_is_equal_to_dst_country = src_country_is_equal_to_dst_country
        self._third_party_country = third_party_country
        self._user_profile_country_is_empty = user_profile_country_is_empty
        self._vat_id_from = vat_id_from

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Billbee.Interfaces.Order.VatDetailsRecognizedHistoryEntry.VatDetectionFlags of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer_has_vat_id(self):
        """Gets the customer_has_vat_id of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :return: The customer_has_vat_id of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :rtype: bool
        """
        return self._customer_has_vat_id

    @customer_has_vat_id.setter
    def customer_has_vat_id(self, customer_has_vat_id):
        """Sets the customer_has_vat_id of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :param customer_has_vat_id: The customer_has_vat_id of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :type customer_has_vat_id: bool
        """

        self._customer_has_vat_id = customer_has_vat_id

    @property
    def eu_delivery_threshold_exceeded(self):
        """Gets the eu_delivery_threshold_exceeded of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :return: The eu_delivery_threshold_exceeded of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :rtype: bool
        """
        return self._eu_delivery_threshold_exceeded

    @eu_delivery_threshold_exceeded.setter
    def eu_delivery_threshold_exceeded(self, eu_delivery_threshold_exceeded):
        """Sets the eu_delivery_threshold_exceeded of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :param eu_delivery_threshold_exceeded: The eu_delivery_threshold_exceeded of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :type eu_delivery_threshold_exceeded: bool
        """

        self._eu_delivery_threshold_exceeded = eu_delivery_threshold_exceeded

    @property
    def is_distance_sale(self):
        """Gets the is_distance_sale of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :return: The is_distance_sale of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :rtype: bool
        """
        return self._is_distance_sale

    @is_distance_sale.setter
    def is_distance_sale(self, is_distance_sale):
        """Sets the is_distance_sale of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :param is_distance_sale: The is_distance_sale of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :type is_distance_sale: bool
        """

        self._is_distance_sale = is_distance_sale

    @property
    def order_distribution_country_is_empty(self):
        """Gets the order_distribution_country_is_empty of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :return: The order_distribution_country_is_empty of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :rtype: bool
        """
        return self._order_distribution_country_is_empty

    @order_distribution_country_is_empty.setter
    def order_distribution_country_is_empty(self, order_distribution_country_is_empty):
        """Sets the order_distribution_country_is_empty of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :param order_distribution_country_is_empty: The order_distribution_country_is_empty of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :type order_distribution_country_is_empty: bool
        """

        self._order_distribution_country_is_empty = order_distribution_country_is_empty

    @property
    def oss_enabled(self):
        """Gets the oss_enabled of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :return: The oss_enabled of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :rtype: bool
        """
        return self._oss_enabled

    @oss_enabled.setter
    def oss_enabled(self, oss_enabled):
        """Sets the oss_enabled of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :param oss_enabled: The oss_enabled of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :type oss_enabled: bool
        """

        self._oss_enabled = oss_enabled

    @property
    def rates_from(self):
        """Gets the rates_from of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :return: The rates_from of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :rtype: str
        """
        return self._rates_from

    @rates_from.setter
    def rates_from(self, rates_from):
        """Sets the rates_from of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :param rates_from: The rates_from of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :type rates_from: str
        """

        self._rates_from = rates_from

    @property
    def seller_is_registered_in_dst_country(self):
        """Gets the seller_is_registered_in_dst_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :return: The seller_is_registered_in_dst_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :rtype: bool
        """
        return self._seller_is_registered_in_dst_country

    @seller_is_registered_in_dst_country.setter
    def seller_is_registered_in_dst_country(self, seller_is_registered_in_dst_country):
        """Sets the seller_is_registered_in_dst_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :param seller_is_registered_in_dst_country: The seller_is_registered_in_dst_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :type seller_is_registered_in_dst_country: bool
        """

        self._seller_is_registered_in_dst_country = seller_is_registered_in_dst_country

    @property
    def set_igl_when_vat_id_is_available_enabled(self):
        """Gets the set_igl_when_vat_id_is_available_enabled of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :return: The set_igl_when_vat_id_is_available_enabled of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :rtype: bool
        """
        return self._set_igl_when_vat_id_is_available_enabled

    @set_igl_when_vat_id_is_available_enabled.setter
    def set_igl_when_vat_id_is_available_enabled(self, set_igl_when_vat_id_is_available_enabled):
        """Sets the set_igl_when_vat_id_is_available_enabled of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :param set_igl_when_vat_id_is_available_enabled: The set_igl_when_vat_id_is_available_enabled of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :type set_igl_when_vat_id_is_available_enabled: bool
        """

        self._set_igl_when_vat_id_is_available_enabled = set_igl_when_vat_id_is_available_enabled

    @property
    def src_country_is_equal_to_dst_country(self):
        """Gets the src_country_is_equal_to_dst_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :return: The src_country_is_equal_to_dst_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :rtype: bool
        """
        return self._src_country_is_equal_to_dst_country

    @src_country_is_equal_to_dst_country.setter
    def src_country_is_equal_to_dst_country(self, src_country_is_equal_to_dst_country):
        """Sets the src_country_is_equal_to_dst_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :param src_country_is_equal_to_dst_country: The src_country_is_equal_to_dst_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :type src_country_is_equal_to_dst_country: bool
        """

        self._src_country_is_equal_to_dst_country = src_country_is_equal_to_dst_country

    @property
    def third_party_country(self):
        """Gets the third_party_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :return: The third_party_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :rtype: bool
        """
        return self._third_party_country

    @third_party_country.setter
    def third_party_country(self, third_party_country):
        """Sets the third_party_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :param third_party_country: The third_party_country of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :type third_party_country: bool
        """

        self._third_party_country = third_party_country

    @property
    def user_profile_country_is_empty(self):
        """Gets the user_profile_country_is_empty of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :return: The user_profile_country_is_empty of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :rtype: bool
        """
        return self._user_profile_country_is_empty

    @user_profile_country_is_empty.setter
    def user_profile_country_is_empty(self, user_profile_country_is_empty):
        """Sets the user_profile_country_is_empty of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :param user_profile_country_is_empty: The user_profile_country_is_empty of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :type user_profile_country_is_empty: bool
        """

        self._user_profile_country_is_empty = user_profile_country_is_empty

    @property
    def vat_id_from(self):
        """Gets the vat_id_from of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :return: The vat_id_from of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :rtype: str
        """
        return self._vat_id_from

    @vat_id_from.setter
    def vat_id_from(self, vat_id_from):
        """Sets the vat_id_from of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.


        :param vat_id_from: The vat_id_from of this BillbeeInterfacesOrderVatDetailsRecognizedHistoryEntryVatDetectionFlags.
        :type vat_id_from: str
        """

        self._vat_id_from = vat_id_from
