# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.billbee_interfaces_order_multi_language_string import BillbeeInterfacesOrderMultiLanguageString
from openapi_server import util


class RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alternative_mail: str=None, body: List[BillbeeInterfacesOrderMultiLanguageString]=None, send_mode: int=None, subject: List[BillbeeInterfacesOrderMultiLanguageString]=None):
        """RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel - a model defined in OpenAPI

        :param alternative_mail: The alternative_mail of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        :param body: The body of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        :param send_mode: The send_mode of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        :param subject: The subject of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        """
        self.openapi_types = {
            'alternative_mail': str,
            'body': List[BillbeeInterfacesOrderMultiLanguageString],
            'send_mode': int,
            'subject': List[BillbeeInterfacesOrderMultiLanguageString]
        }

        self.attribute_map = {
            'alternative_mail': 'AlternativeMail',
            'body': 'Body',
            'send_mode': 'SendMode',
            'subject': 'Subject'
        }

        self._alternative_mail = alternative_mail
        self._body = body
        self._send_mode = send_mode
        self._subject = subject

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.SendMessageModel of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alternative_mail(self):
        """Gets the alternative_mail of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.


        :return: The alternative_mail of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        :rtype: str
        """
        return self._alternative_mail

    @alternative_mail.setter
    def alternative_mail(self, alternative_mail):
        """Sets the alternative_mail of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.


        :param alternative_mail: The alternative_mail of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        :type alternative_mail: str
        """

        self._alternative_mail = alternative_mail

    @property
    def body(self):
        """Gets the body of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.


        :return: The body of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        :rtype: List[BillbeeInterfacesOrderMultiLanguageString]
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.


        :param body: The body of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        :type body: List[BillbeeInterfacesOrderMultiLanguageString]
        """

        self._body = body

    @property
    def send_mode(self):
        """Gets the send_mode of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.


        :return: The send_mode of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        :rtype: int
        """
        return self._send_mode

    @send_mode.setter
    def send_mode(self, send_mode):
        """Sets the send_mode of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.


        :param send_mode: The send_mode of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        :type send_mode: int
        """
        allowed_values = [0, 1, 2, 3, 4]  # noqa: E501
        if send_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `send_mode` ({0}), must be one of {1}"
                .format(send_mode, allowed_values)
            )

        self._send_mode = send_mode

    @property
    def subject(self):
        """Gets the subject of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.


        :return: The subject of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        :rtype: List[BillbeeInterfacesOrderMultiLanguageString]
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.


        :param subject: The subject of this RechnungsdruckWebAppControllersApiOrderApiControllerSendMessageModel.
        :type subject: List[BillbeeInterfacesOrderMultiLanguageString]
        """

        self._subject = subject
