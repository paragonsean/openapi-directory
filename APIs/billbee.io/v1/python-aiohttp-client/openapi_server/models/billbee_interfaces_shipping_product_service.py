# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.system_collections_generic_key_value_pair_system_string_system_collections_generic_list_system_collections_generic_key_value_pair_system_int32_system_string import SystemCollectionsGenericKeyValuePairSystemStringSystemCollectionsGenericListSystemCollectionsGenericKeyValuePairSystemInt32SystemString
from openapi_server import util


class BillbeeInterfacesShippingProductService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, can_be_configured: bool=None, display_name: str=None, display_value: str=None, possible_value_lists: List[SystemCollectionsGenericKeyValuePairSystemStringSystemCollectionsGenericListSystemCollectionsGenericKeyValuePairSystemInt32SystemString]=None, requires_user_input: bool=None, service_name: str=None, type_name: str=None):
        """BillbeeInterfacesShippingProductService - a model defined in OpenAPI

        :param can_be_configured: The can_be_configured of this BillbeeInterfacesShippingProductService.
        :param display_name: The display_name of this BillbeeInterfacesShippingProductService.
        :param display_value: The display_value of this BillbeeInterfacesShippingProductService.
        :param possible_value_lists: The possible_value_lists of this BillbeeInterfacesShippingProductService.
        :param requires_user_input: The requires_user_input of this BillbeeInterfacesShippingProductService.
        :param service_name: The service_name of this BillbeeInterfacesShippingProductService.
        :param type_name: The type_name of this BillbeeInterfacesShippingProductService.
        """
        self.openapi_types = {
            'can_be_configured': bool,
            'display_name': str,
            'display_value': str,
            'possible_value_lists': List[SystemCollectionsGenericKeyValuePairSystemStringSystemCollectionsGenericListSystemCollectionsGenericKeyValuePairSystemInt32SystemString],
            'requires_user_input': bool,
            'service_name': str,
            'type_name': str
        }

        self.attribute_map = {
            'can_be_configured': 'CanBeConfigured',
            'display_name': 'DisplayName',
            'display_value': 'DisplayValue',
            'possible_value_lists': 'PossibleValueLists',
            'requires_user_input': 'RequiresUserInput',
            'service_name': 'ServiceName',
            'type_name': 'typeName'
        }

        self._can_be_configured = can_be_configured
        self._display_name = display_name
        self._display_value = display_value
        self._possible_value_lists = possible_value_lists
        self._requires_user_input = requires_user_input
        self._service_name = service_name
        self._type_name = type_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillbeeInterfacesShippingProductService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Billbee.Interfaces.Shipping.ProductService of this BillbeeInterfacesShippingProductService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def can_be_configured(self):
        """Gets the can_be_configured of this BillbeeInterfacesShippingProductService.


        :return: The can_be_configured of this BillbeeInterfacesShippingProductService.
        :rtype: bool
        """
        return self._can_be_configured

    @can_be_configured.setter
    def can_be_configured(self, can_be_configured):
        """Sets the can_be_configured of this BillbeeInterfacesShippingProductService.


        :param can_be_configured: The can_be_configured of this BillbeeInterfacesShippingProductService.
        :type can_be_configured: bool
        """

        self._can_be_configured = can_be_configured

    @property
    def display_name(self):
        """Gets the display_name of this BillbeeInterfacesShippingProductService.


        :return: The display_name of this BillbeeInterfacesShippingProductService.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this BillbeeInterfacesShippingProductService.


        :param display_name: The display_name of this BillbeeInterfacesShippingProductService.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def display_value(self):
        """Gets the display_value of this BillbeeInterfacesShippingProductService.


        :return: The display_value of this BillbeeInterfacesShippingProductService.
        :rtype: str
        """
        return self._display_value

    @display_value.setter
    def display_value(self, display_value):
        """Sets the display_value of this BillbeeInterfacesShippingProductService.


        :param display_value: The display_value of this BillbeeInterfacesShippingProductService.
        :type display_value: str
        """

        self._display_value = display_value

    @property
    def possible_value_lists(self):
        """Gets the possible_value_lists of this BillbeeInterfacesShippingProductService.


        :return: The possible_value_lists of this BillbeeInterfacesShippingProductService.
        :rtype: List[SystemCollectionsGenericKeyValuePairSystemStringSystemCollectionsGenericListSystemCollectionsGenericKeyValuePairSystemInt32SystemString]
        """
        return self._possible_value_lists

    @possible_value_lists.setter
    def possible_value_lists(self, possible_value_lists):
        """Sets the possible_value_lists of this BillbeeInterfacesShippingProductService.


        :param possible_value_lists: The possible_value_lists of this BillbeeInterfacesShippingProductService.
        :type possible_value_lists: List[SystemCollectionsGenericKeyValuePairSystemStringSystemCollectionsGenericListSystemCollectionsGenericKeyValuePairSystemInt32SystemString]
        """

        self._possible_value_lists = possible_value_lists

    @property
    def requires_user_input(self):
        """Gets the requires_user_input of this BillbeeInterfacesShippingProductService.


        :return: The requires_user_input of this BillbeeInterfacesShippingProductService.
        :rtype: bool
        """
        return self._requires_user_input

    @requires_user_input.setter
    def requires_user_input(self, requires_user_input):
        """Sets the requires_user_input of this BillbeeInterfacesShippingProductService.


        :param requires_user_input: The requires_user_input of this BillbeeInterfacesShippingProductService.
        :type requires_user_input: bool
        """

        self._requires_user_input = requires_user_input

    @property
    def service_name(self):
        """Gets the service_name of this BillbeeInterfacesShippingProductService.


        :return: The service_name of this BillbeeInterfacesShippingProductService.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this BillbeeInterfacesShippingProductService.


        :param service_name: The service_name of this BillbeeInterfacesShippingProductService.
        :type service_name: str
        """

        self._service_name = service_name

    @property
    def type_name(self):
        """Gets the type_name of this BillbeeInterfacesShippingProductService.


        :return: The type_name of this BillbeeInterfacesShippingProductService.
        :rtype: str
        """
        return self._type_name

    @type_name.setter
    def type_name(self, type_name):
        """Sets the type_name of this BillbeeInterfacesShippingProductService.


        :param type_name: The type_name of this BillbeeInterfacesShippingProductService.
        :type type_name: str
        """

        self._type_name = type_name
