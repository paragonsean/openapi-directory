# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BillbeeInterfacesBillbeeAPIModelStockArticleApiModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, stock_code: str=None, stock_current: float=None, stock_desired: float=None, stock_id: int=None, stock_warning: float=None, unfulfilled_amount: float=None):
        """BillbeeInterfacesBillbeeAPIModelStockArticleApiModel - a model defined in OpenAPI

        :param name: The name of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :param stock_code: The stock_code of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :param stock_current: The stock_current of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :param stock_desired: The stock_desired of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :param stock_id: The stock_id of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :param stock_warning: The stock_warning of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :param unfulfilled_amount: The unfulfilled_amount of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        """
        self.openapi_types = {
            'name': str,
            'stock_code': str,
            'stock_current': float,
            'stock_desired': float,
            'stock_id': int,
            'stock_warning': float,
            'unfulfilled_amount': float
        }

        self.attribute_map = {
            'name': 'Name',
            'stock_code': 'StockCode',
            'stock_current': 'StockCurrent',
            'stock_desired': 'StockDesired',
            'stock_id': 'StockId',
            'stock_warning': 'StockWarning',
            'unfulfilled_amount': 'UnfulfilledAmount'
        }

        self._name = name
        self._stock_code = stock_code
        self._stock_current = stock_current
        self._stock_desired = stock_desired
        self._stock_id = stock_id
        self._stock_warning = stock_warning
        self._unfulfilled_amount = unfulfilled_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillbeeInterfacesBillbeeAPIModelStockArticleApiModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Billbee.Interfaces.BillbeeAPI.Model.StockArticleApiModel of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :return: The name of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :param name: The name of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :type name: str
        """

        self._name = name

    @property
    def stock_code(self):
        """Gets the stock_code of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :return: The stock_code of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :rtype: str
        """
        return self._stock_code

    @stock_code.setter
    def stock_code(self, stock_code):
        """Sets the stock_code of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :param stock_code: The stock_code of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :type stock_code: str
        """

        self._stock_code = stock_code

    @property
    def stock_current(self):
        """Gets the stock_current of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :return: The stock_current of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :rtype: float
        """
        return self._stock_current

    @stock_current.setter
    def stock_current(self, stock_current):
        """Sets the stock_current of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :param stock_current: The stock_current of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :type stock_current: float
        """

        self._stock_current = stock_current

    @property
    def stock_desired(self):
        """Gets the stock_desired of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :return: The stock_desired of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :rtype: float
        """
        return self._stock_desired

    @stock_desired.setter
    def stock_desired(self, stock_desired):
        """Sets the stock_desired of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :param stock_desired: The stock_desired of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :type stock_desired: float
        """

        self._stock_desired = stock_desired

    @property
    def stock_id(self):
        """Gets the stock_id of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :return: The stock_id of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :rtype: int
        """
        return self._stock_id

    @stock_id.setter
    def stock_id(self, stock_id):
        """Sets the stock_id of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :param stock_id: The stock_id of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :type stock_id: int
        """

        self._stock_id = stock_id

    @property
    def stock_warning(self):
        """Gets the stock_warning of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :return: The stock_warning of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :rtype: float
        """
        return self._stock_warning

    @stock_warning.setter
    def stock_warning(self, stock_warning):
        """Sets the stock_warning of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :param stock_warning: The stock_warning of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :type stock_warning: float
        """

        self._stock_warning = stock_warning

    @property
    def unfulfilled_amount(self):
        """Gets the unfulfilled_amount of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :return: The unfulfilled_amount of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :rtype: float
        """
        return self._unfulfilled_amount

    @unfulfilled_amount.setter
    def unfulfilled_amount(self, unfulfilled_amount):
        """Sets the unfulfilled_amount of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.


        :param unfulfilled_amount: The unfulfilled_amount of this BillbeeInterfacesBillbeeAPIModelStockArticleApiModel.
        :type unfulfilled_amount: float
        """

        self._unfulfilled_amount = unfulfilled_amount
