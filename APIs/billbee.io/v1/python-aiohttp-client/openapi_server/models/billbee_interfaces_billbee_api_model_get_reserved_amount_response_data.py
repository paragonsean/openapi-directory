# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BillbeeInterfacesBillbeeAPIModelGetReservedAmountResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reserved_amount: float=None):
        """BillbeeInterfacesBillbeeAPIModelGetReservedAmountResponseData - a model defined in OpenAPI

        :param reserved_amount: The reserved_amount of this BillbeeInterfacesBillbeeAPIModelGetReservedAmountResponseData.
        """
        self.openapi_types = {
            'reserved_amount': float
        }

        self.attribute_map = {
            'reserved_amount': 'ReservedAmount'
        }

        self._reserved_amount = reserved_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillbeeInterfacesBillbeeAPIModelGetReservedAmountResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Billbee.Interfaces.BillbeeAPI.Model.GetReservedAmountResponseData of this BillbeeInterfacesBillbeeAPIModelGetReservedAmountResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reserved_amount(self):
        """Gets the reserved_amount of this BillbeeInterfacesBillbeeAPIModelGetReservedAmountResponseData.

        The reserve (not fulfilled) qty of the article

        :return: The reserved_amount of this BillbeeInterfacesBillbeeAPIModelGetReservedAmountResponseData.
        :rtype: float
        """
        return self._reserved_amount

    @reserved_amount.setter
    def reserved_amount(self, reserved_amount):
        """Sets the reserved_amount of this BillbeeInterfacesBillbeeAPIModelGetReservedAmountResponseData.

        The reserve (not fulfilled) qty of the article

        :param reserved_amount: The reserved_amount of this BillbeeInterfacesBillbeeAPIModelGetReservedAmountResponseData.
        :type reserved_amount: float
        """

        self._reserved_amount = reserved_amount
