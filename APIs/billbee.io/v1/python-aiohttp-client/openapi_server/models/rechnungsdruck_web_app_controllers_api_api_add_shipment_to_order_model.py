# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, carrier_id: int=None, comment: str=None, order_id: str=None, shipment_type: int=None, shipping_id: str=None, shipping_provider_id: int=None, shipping_provider_product_id: int=None):
        """RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel - a model defined in OpenAPI

        :param carrier_id: The carrier_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :param comment: The comment of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :param order_id: The order_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :param shipment_type: The shipment_type of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :param shipping_id: The shipping_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :param shipping_provider_id: The shipping_provider_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :param shipping_provider_product_id: The shipping_provider_product_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        """
        self.openapi_types = {
            'carrier_id': int,
            'comment': str,
            'order_id': str,
            'shipment_type': int,
            'shipping_id': str,
            'shipping_provider_id': int,
            'shipping_provider_product_id': int
        }

        self.attribute_map = {
            'carrier_id': 'CarrierId',
            'comment': 'Comment',
            'order_id': 'OrderId',
            'shipment_type': 'ShipmentType',
            'shipping_id': 'ShippingId',
            'shipping_provider_id': 'ShippingProviderId',
            'shipping_provider_product_id': 'ShippingProviderProductId'
        }

        self._carrier_id = carrier_id
        self._comment = comment
        self._order_id = order_id
        self._shipment_type = shipment_type
        self._shipping_id = shipping_id
        self._shipping_provider_id = shipping_provider_id
        self._shipping_provider_product_id = shipping_provider_product_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Rechnungsdruck.WebApp.Controllers.Api.ApiAddShipmentToOrderModel of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def carrier_id(self):
        """Gets the carrier_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        Optional the id of a shipping carrier that should be assigend to the shipment  Will override the carrier from the shipment product.  Please use the integer value from this Enumeration:  {Billbee.Interfaces.Shipping.Enums.ShippingCarrier}

        :return: The carrier_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :rtype: int
        """
        return self._carrier_id

    @carrier_id.setter
    def carrier_id(self, carrier_id):
        """Sets the carrier_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        Optional the id of a shipping carrier that should be assigend to the shipment  Will override the carrier from the shipment product.  Please use the integer value from this Enumeration:  {Billbee.Interfaces.Shipping.Enums.ShippingCarrier}

        :param carrier_id: The carrier_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :type carrier_id: int
        """

        self._carrier_id = carrier_id

    @property
    def comment(self):
        """Gets the comment of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        Optional a text stored with the shipment

        :return: The comment of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        Optional a text stored with the shipment

        :param comment: The comment of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :type comment: str
        """

        self._comment = comment

    @property
    def order_id(self):
        """Gets the order_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        Optional a differing order number of the shipment if available

        :return: The order_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        Optional a differing order number of the shipment if available

        :param order_id: The order_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def shipment_type(self):
        """Gets the shipment_type of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        0 if Shipment, 1 if Retoure  {Billbee.Interfaces.Shipping.Enums.ShipmentTypeEnum}

        :return: The shipment_type of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :rtype: int
        """
        return self._shipment_type

    @shipment_type.setter
    def shipment_type(self, shipment_type):
        """Sets the shipment_type of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        0 if Shipment, 1 if Retoure  {Billbee.Interfaces.Shipping.Enums.ShipmentTypeEnum}

        :param shipment_type: The shipment_type of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :type shipment_type: int
        """

        self._shipment_type = shipment_type

    @property
    def shipping_id(self):
        """Gets the shipping_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        The id of the shipment (Sendungsnummer/trackingid)

        :return: The shipping_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :rtype: str
        """
        return self._shipping_id

    @shipping_id.setter
    def shipping_id(self, shipping_id):
        """Sets the shipping_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        The id of the shipment (Sendungsnummer/trackingid)

        :param shipping_id: The shipping_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :type shipping_id: str
        """

        self._shipping_id = shipping_id

    @property
    def shipping_provider_id(self):
        """Gets the shipping_provider_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        Optional the id of a shipping provider existing in the billbee account that should be assigned to the shipment

        :return: The shipping_provider_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :rtype: int
        """
        return self._shipping_provider_id

    @shipping_provider_id.setter
    def shipping_provider_id(self, shipping_provider_id):
        """Sets the shipping_provider_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        Optional the id of a shipping provider existing in the billbee account that should be assigned to the shipment

        :param shipping_provider_id: The shipping_provider_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :type shipping_provider_id: int
        """

        self._shipping_provider_id = shipping_provider_id

    @property
    def shipping_provider_product_id(self):
        """Gets the shipping_provider_product_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        Optional the id of a shipping provider product that should be assigend to the shipment

        :return: The shipping_provider_product_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :rtype: int
        """
        return self._shipping_provider_product_id

    @shipping_provider_product_id.setter
    def shipping_provider_product_id(self, shipping_provider_product_id):
        """Sets the shipping_provider_product_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.

        Optional the id of a shipping provider product that should be assigend to the shipment

        :param shipping_provider_product_id: The shipping_provider_product_id of this RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel.
        :type shipping_provider_product_id: int
        """

        self._shipping_provider_product_id = shipping_provider_product_id
