# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.billbee_interfaces_billbee_api_model_order_item_attribute import BillbeeInterfacesBillbeeAPIModelOrderItemAttribute
from openapi_server.models.billbee_interfaces_billbee_api_model_sold_product import BillbeeInterfacesBillbeeAPIModelSoldProduct
from openapi_server import util


class BillbeeInterfacesBillbeeAPIModelOrderItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: List[BillbeeInterfacesBillbeeAPIModelOrderItemAttribute]=None, billbee_id: int=None, discount: float=None, dont_adjust_stock: bool=None, get_price_from_article_if_any: bool=None, invoice_sku: str=None, is_coupon: bool=None, product: BillbeeInterfacesBillbeeAPIModelSoldProduct=None, quantity: float=None, serial_number: str=None, shipping_profile_id: str=None, tax_amount: float=None, tax_index: int=None, total_price: float=None, transaction_id: str=None, unrebated_total_price: float=None):
        """BillbeeInterfacesBillbeeAPIModelOrderItem - a model defined in OpenAPI

        :param attributes: The attributes of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param billbee_id: The billbee_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param discount: The discount of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param dont_adjust_stock: The dont_adjust_stock of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param get_price_from_article_if_any: The get_price_from_article_if_any of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param invoice_sku: The invoice_sku of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param is_coupon: The is_coupon of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param product: The product of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param quantity: The quantity of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param serial_number: The serial_number of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param shipping_profile_id: The shipping_profile_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param tax_amount: The tax_amount of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param tax_index: The tax_index of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param total_price: The total_price of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param transaction_id: The transaction_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :param unrebated_total_price: The unrebated_total_price of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        """
        self.openapi_types = {
            'attributes': List[BillbeeInterfacesBillbeeAPIModelOrderItemAttribute],
            'billbee_id': int,
            'discount': float,
            'dont_adjust_stock': bool,
            'get_price_from_article_if_any': bool,
            'invoice_sku': str,
            'is_coupon': bool,
            'product': BillbeeInterfacesBillbeeAPIModelSoldProduct,
            'quantity': float,
            'serial_number': str,
            'shipping_profile_id': str,
            'tax_amount': float,
            'tax_index': int,
            'total_price': float,
            'transaction_id': str,
            'unrebated_total_price': float
        }

        self.attribute_map = {
            'attributes': 'Attributes',
            'billbee_id': 'BillbeeId',
            'discount': 'Discount',
            'dont_adjust_stock': 'DontAdjustStock',
            'get_price_from_article_if_any': 'GetPriceFromArticleIfAny',
            'invoice_sku': 'InvoiceSKU',
            'is_coupon': 'IsCoupon',
            'product': 'Product',
            'quantity': 'Quantity',
            'serial_number': 'SerialNumber',
            'shipping_profile_id': 'ShippingProfileId',
            'tax_amount': 'TaxAmount',
            'tax_index': 'TaxIndex',
            'total_price': 'TotalPrice',
            'transaction_id': 'TransactionId',
            'unrebated_total_price': 'UnrebatedTotalPrice'
        }

        self._attributes = attributes
        self._billbee_id = billbee_id
        self._discount = discount
        self._dont_adjust_stock = dont_adjust_stock
        self._get_price_from_article_if_any = get_price_from_article_if_any
        self._invoice_sku = invoice_sku
        self._is_coupon = is_coupon
        self._product = product
        self._quantity = quantity
        self._serial_number = serial_number
        self._shipping_profile_id = shipping_profile_id
        self._tax_amount = tax_amount
        self._tax_index = tax_index
        self._total_price = total_price
        self._transaction_id = transaction_id
        self._unrebated_total_price = unrebated_total_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillbeeInterfacesBillbeeAPIModelOrderItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Billbee.Interfaces.BillbeeAPI.Model.OrderItem of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        A list of product attributes for this position

        :return: The attributes of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: List[BillbeeInterfacesBillbeeAPIModelOrderItemAttribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        A list of product attributes for this position

        :param attributes: The attributes of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type attributes: List[BillbeeInterfacesBillbeeAPIModelOrderItemAttribute]
        """

        self._attributes = attributes

    @property
    def billbee_id(self):
        """Gets the billbee_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        The billbee id of this item

        :return: The billbee_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: int
        """
        return self._billbee_id

    @billbee_id.setter
    def billbee_id(self, billbee_id):
        """Sets the billbee_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        The billbee id of this item

        :param billbee_id: The billbee_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type billbee_id: int
        """

        self._billbee_id = billbee_id

    @property
    def discount(self):
        """Gets the discount of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Sets the discount in percent

        :return: The discount of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: float
        """
        return self._discount

    @discount.setter
    def discount(self, discount):
        """Sets the discount of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Sets the discount in percent

        :param discount: The discount of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type discount: float
        """

        self._discount = discount

    @property
    def dont_adjust_stock(self):
        """Gets the dont_adjust_stock of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        If true, the import of this order won't adjust the stock level at billbee.

        :return: The dont_adjust_stock of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: bool
        """
        return self._dont_adjust_stock

    @dont_adjust_stock.setter
    def dont_adjust_stock(self, dont_adjust_stock):
        """Sets the dont_adjust_stock of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        If true, the import of this order won't adjust the stock level at billbee.

        :param dont_adjust_stock: The dont_adjust_stock of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type dont_adjust_stock: bool
        """

        self._dont_adjust_stock = dont_adjust_stock

    @property
    def get_price_from_article_if_any(self):
        """Gets the get_price_from_article_if_any of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        If true, the price will be overwritten by the known article price in billbee if available

        :return: The get_price_from_article_if_any of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: bool
        """
        return self._get_price_from_article_if_any

    @get_price_from_article_if_any.setter
    def get_price_from_article_if_any(self, get_price_from_article_if_any):
        """Sets the get_price_from_article_if_any of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        If true, the price will be overwritten by the known article price in billbee if available

        :param get_price_from_article_if_any: The get_price_from_article_if_any of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type get_price_from_article_if_any: bool
        """

        self._get_price_from_article_if_any = get_price_from_article_if_any

    @property
    def invoice_sku(self):
        """Gets the invoice_sku of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Contains the SKU from OrderDetail (if available) or from Product

        :return: The invoice_sku of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: str
        """
        return self._invoice_sku

    @invoice_sku.setter
    def invoice_sku(self, invoice_sku):
        """Sets the invoice_sku of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Contains the SKU from OrderDetail (if available) or from Product

        :param invoice_sku: The invoice_sku of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type invoice_sku: str
        """

        self._invoice_sku = invoice_sku

    @property
    def is_coupon(self):
        """Gets the is_coupon of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Determines if it is a coupon, which is interpreted as tax-free payment

        :return: The is_coupon of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: bool
        """
        return self._is_coupon

    @is_coupon.setter
    def is_coupon(self, is_coupon):
        """Sets the is_coupon of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Determines if it is a coupon, which is interpreted as tax-free payment

        :param is_coupon: The is_coupon of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type is_coupon: bool
        """

        self._is_coupon = is_coupon

    @property
    def product(self):
        """Gets the product of this BillbeeInterfacesBillbeeAPIModelOrderItem.


        :return: The product of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: BillbeeInterfacesBillbeeAPIModelSoldProduct
        """
        return self._product

    @product.setter
    def product(self, product):
        """Sets the product of this BillbeeInterfacesBillbeeAPIModelOrderItem.


        :param product: The product of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type product: BillbeeInterfacesBillbeeAPIModelSoldProduct
        """

        self._product = product

    @property
    def quantity(self):
        """Gets the quantity of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        The sold quantity

        :return: The quantity of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        The sold quantity

        :param quantity: The quantity of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def serial_number(self):
        """Gets the serial_number of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Contains the used serial number

        :return: The serial_number of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Contains the used serial number

        :param serial_number: The serial_number of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type serial_number: str
        """

        self._serial_number = serial_number

    @property
    def shipping_profile_id(self):
        """Gets the shipping_profile_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Determines if it is a coupon, which is interpreted as tax-free payment

        :return: The shipping_profile_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: str
        """
        return self._shipping_profile_id

    @shipping_profile_id.setter
    def shipping_profile_id(self, shipping_profile_id):
        """Sets the shipping_profile_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Determines if it is a coupon, which is interpreted as tax-free payment

        :param shipping_profile_id: The shipping_profile_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type shipping_profile_id: str
        """

        self._shipping_profile_id = shipping_profile_id

    @property
    def tax_amount(self):
        """Gets the tax_amount of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        The tax amount in the total price

        :return: The tax_amount of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: float
        """
        return self._tax_amount

    @tax_amount.setter
    def tax_amount(self, tax_amount):
        """Sets the tax_amount of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        The tax amount in the total price

        :param tax_amount: The tax_amount of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type tax_amount: float
        """

        self._tax_amount = tax_amount

    @property
    def tax_index(self):
        """Gets the tax_index of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        The tax index.

        :return: The tax_index of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: int
        """
        return self._tax_index

    @tax_index.setter
    def tax_index(self, tax_index):
        """Sets the tax_index of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        The tax index.

        :param tax_index: The tax_index of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type tax_index: int
        """

        self._tax_index = tax_index

    @property
    def total_price(self):
        """Gets the total_price of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        The total price (unit price * quantity)

        :return: The total_price of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: float
        """
        return self._total_price

    @total_price.setter
    def total_price(self, total_price):
        """Sets the total_price of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        The total price (unit price * quantity)

        :param total_price: The total_price of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type total_price: float
        """

        self._total_price = total_price

    @property
    def transaction_id(self):
        """Gets the transaction_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Id of the individual transaction. Only required by Ebay to detect aggregated orders

        :return: The transaction_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Id of the individual transaction. Only required by Ebay to detect aggregated orders

        :param transaction_id: The transaction_id of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type transaction_id: str
        """

        self._transaction_id = transaction_id

    @property
    def unrebated_total_price(self):
        """Gets the unrebated_total_price of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Is just used for the billbee api

        :return: The unrebated_total_price of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :rtype: float
        """
        return self._unrebated_total_price

    @unrebated_total_price.setter
    def unrebated_total_price(self, unrebated_total_price):
        """Sets the unrebated_total_price of this BillbeeInterfacesBillbeeAPIModelOrderItem.

        Is just used for the billbee api

        :param unrebated_total_price: The unrebated_total_price of this BillbeeInterfacesBillbeeAPIModelOrderItem.
        :type unrebated_total_price: float
        """

        self._unrebated_total_price = unrebated_total_price
