# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.billbee_interfaces_billbee_api_model_product_image import BillbeeInterfacesBillbeeAPIModelProductImage
from openapi_server import util


class BillbeeInterfacesBillbeeAPIModelSoldProduct(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billbee_id: int=None, country_of_origin: str=None, ean: str=None, id: str=None, images: List[BillbeeInterfacesBillbeeAPIModelProductImage]=None, is_digital: bool=None, old_id: str=None, platform_data: str=None, sku: str=None, sku_or_id: str=None, taric_code: str=None, title: str=None, type: int=None, weight: int=None):
        """BillbeeInterfacesBillbeeAPIModelSoldProduct - a model defined in OpenAPI

        :param billbee_id: The billbee_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param country_of_origin: The country_of_origin of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param ean: The ean of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param id: The id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param images: The images of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param is_digital: The is_digital of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param old_id: The old_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param platform_data: The platform_data of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param sku: The sku of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param sku_or_id: The sku_or_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param taric_code: The taric_code of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param title: The title of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param type: The type of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :param weight: The weight of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        """
        self.openapi_types = {
            'billbee_id': int,
            'country_of_origin': str,
            'ean': str,
            'id': str,
            'images': List[BillbeeInterfacesBillbeeAPIModelProductImage],
            'is_digital': bool,
            'old_id': str,
            'platform_data': str,
            'sku': str,
            'sku_or_id': str,
            'taric_code': str,
            'title': str,
            'type': int,
            'weight': int
        }

        self.attribute_map = {
            'billbee_id': 'BillbeeId',
            'country_of_origin': 'CountryOfOrigin',
            'ean': 'EAN',
            'id': 'Id',
            'images': 'Images',
            'is_digital': 'IsDigital',
            'old_id': 'OldId',
            'platform_data': 'PlatformData',
            'sku': 'SKU',
            'sku_or_id': 'SkuOrId',
            'taric_code': 'TARICCode',
            'title': 'Title',
            'type': 'Type',
            'weight': 'Weight'
        }

        self._billbee_id = billbee_id
        self._country_of_origin = country_of_origin
        self._ean = ean
        self._id = id
        self._images = images
        self._is_digital = is_digital
        self._old_id = old_id
        self._platform_data = platform_data
        self._sku = sku
        self._sku_or_id = sku_or_id
        self._taric_code = taric_code
        self._title = title
        self._type = type
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillbeeInterfacesBillbeeAPIModelSoldProduct':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Billbee.Interfaces.BillbeeAPI.Model.SoldProduct of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billbee_id(self):
        """Gets the billbee_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The Billbee internal id of the linked product

        :return: The billbee_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: int
        """
        return self._billbee_id

    @billbee_id.setter
    def billbee_id(self, billbee_id):
        """Sets the billbee_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The Billbee internal id of the linked product

        :param billbee_id: The billbee_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type billbee_id: int
        """

        self._billbee_id = billbee_id

    @property
    def country_of_origin(self):
        """Gets the country_of_origin of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The country where this article was made

        :return: The country_of_origin of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: str
        """
        return self._country_of_origin

    @country_of_origin.setter
    def country_of_origin(self, country_of_origin):
        """Sets the country_of_origin of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The country where this article was made

        :param country_of_origin: The country_of_origin of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type country_of_origin: str
        """

        self._country_of_origin = country_of_origin

    @property
    def ean(self):
        """Gets the ean of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The EAN / GTIN of this product

        :return: The ean of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: str
        """
        return self._ean

    @ean.setter
    def ean(self, ean):
        """Sets the ean of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The EAN / GTIN of this product

        :param ean: The ean of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type ean: str
        """

        self._ean = ean

    @property
    def id(self):
        """Gets the id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The id of this product in the external system

        :return: The id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The id of this product in the external system

        :param id: The id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type id: str
        """

        self._id = id

    @property
    def images(self):
        """Gets the images of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The images of this product

        :return: The images of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: List[BillbeeInterfacesBillbeeAPIModelProductImage]
        """
        return self._images

    @images.setter
    def images(self, images):
        """Sets the images of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The images of this product

        :param images: The images of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type images: List[BillbeeInterfacesBillbeeAPIModelProductImage]
        """

        self._images = images

    @property
    def is_digital(self):
        """Gets the is_digital of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        True if the product is a digital good (download etc.), false if not

        :return: The is_digital of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: bool
        """
        return self._is_digital

    @is_digital.setter
    def is_digital(self, is_digital):
        """Sets the is_digital of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        True if the product is a digital good (download etc.), false if not

        :param is_digital: The is_digital of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type is_digital: bool
        """

        self._is_digital = is_digital

    @property
    def old_id(self):
        """Gets the old_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        This is for migration scenarios when the internal id of a product changes  I.E. Etsy when switching to the new inventory management, the ids for variants will change.

        :return: The old_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: str
        """
        return self._old_id

    @old_id.setter
    def old_id(self, old_id):
        """Sets the old_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        This is for migration scenarios when the internal id of a product changes  I.E. Etsy when switching to the new inventory management, the ids for variants will change.

        :param old_id: The old_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type old_id: str
        """

        self._old_id = old_id

    @property
    def platform_data(self):
        """Gets the platform_data of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        Optional platform specific Data as serialized JSON Object for the product

        :return: The platform_data of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: str
        """
        return self._platform_data

    @platform_data.setter
    def platform_data(self, platform_data):
        """Sets the platform_data of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        Optional platform specific Data as serialized JSON Object for the product

        :param platform_data: The platform_data of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type platform_data: str
        """

        self._platform_data = platform_data

    @property
    def sku(self):
        """Gets the sku of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The SKU of this product

        :return: The sku of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The SKU of this product

        :param sku: The sku of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type sku: str
        """

        self._sku = sku

    @property
    def sku_or_id(self):
        """Gets the sku_or_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The SKU of this product or the id if the SKU is empty

        :return: The sku_or_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: str
        """
        return self._sku_or_id

    @sku_or_id.setter
    def sku_or_id(self, sku_or_id):
        """Sets the sku_or_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The SKU of this product or the id if the SKU is empty

        :param sku_or_id: The sku_or_id of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type sku_or_id: str
        """

        self._sku_or_id = sku_or_id

    @property
    def taric_code(self):
        """Gets the taric_code of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The TARIC code

        :return: The taric_code of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: str
        """
        return self._taric_code

    @taric_code.setter
    def taric_code(self, taric_code):
        """Sets the taric_code of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The TARIC code

        :param taric_code: The taric_code of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type taric_code: str
        """

        self._taric_code = taric_code

    @property
    def title(self):
        """Gets the title of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The name of this product

        :return: The title of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        The name of this product

        :param title: The title of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        Indicates whether the article is 1 = normal or 2 = BOM

        :return: The type of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        Indicates whether the article is 1 = normal or 2 = BOM

        :param type: The type of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type type: int
        """

        self._type = type

    @property
    def weight(self):
        """Gets the weight of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        Weight of one item in gram

        :return: The weight of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this BillbeeInterfacesBillbeeAPIModelSoldProduct.

        Weight of one item in gram

        :param weight: The weight of this BillbeeInterfacesBillbeeAPIModelSoldProduct.
        :type weight: int
        """

        self._weight = weight
