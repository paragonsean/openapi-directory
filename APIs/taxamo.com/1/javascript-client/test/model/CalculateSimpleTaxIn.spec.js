/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Taxamo);
  }
}(this, function(expect, Taxamo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Taxamo.CalculateSimpleTaxIn();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CalculateSimpleTaxIn', function() {
    it('should create an instance of CalculateSimpleTaxIn', function() {
      // uncomment below and update the code to test CalculateSimpleTaxIn
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be.a(Taxamo.CalculateSimpleTaxIn);
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property billingCountryCode (base name: "billing_country_code")', function() {
      // uncomment below and update the code to test the property billingCountryCode
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property buyerCreditCardPrefix (base name: "buyer_credit_card_prefix")', function() {
      // uncomment below and update the code to test the property buyerCreditCardPrefix
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property buyerTaxNumber (base name: "buyer_tax_number")', function() {
      // uncomment below and update the code to test the property buyerTaxNumber
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "currency_code")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property forceCountryCode (base name: "force_country_code")', function() {
      // uncomment below and update the code to test the property forceCountryCode
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property invoiceAddressCity (base name: "invoice_address_city")', function() {
      // uncomment below and update the code to test the property invoiceAddressCity
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property invoiceAddressPostalCode (base name: "invoice_address_postal_code")', function() {
      // uncomment below and update the code to test the property invoiceAddressPostalCode
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property invoiceAddressRegion (base name: "invoice_address_region")', function() {
      // uncomment below and update the code to test the property invoiceAddressRegion
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property orderDate (base name: "order_date")', function() {
      // uncomment below and update the code to test the property orderDate
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property productType (base name: "product_type")', function() {
      // uncomment below and update the code to test the property productType
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property taxDeducted (base name: "tax_deducted")', function() {
      // uncomment below and update the code to test the property taxDeducted
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property totalAmount (base name: "total_amount")', function() {
      // uncomment below and update the code to test the property totalAmount
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

    it('should have the property unitPrice (base name: "unit_price")', function() {
      // uncomment below and update the code to test the property unitPrice
      //var instance = new Taxamo.CalculateSimpleTaxIn();
      //expect(instance).to.be();
    });

  });

}));
