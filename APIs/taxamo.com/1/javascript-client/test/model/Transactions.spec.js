/**
 * Taxamo
 * Taxamoâ€™s elegant suite of APIs and comprehensive reporting dashboard enables digital merchants to easily comply with EU regulatory requirements on tax calculation, evidence collection, tax return creation and data storage.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Taxamo);
  }
}(this, function(expect, Taxamo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Taxamo.Transactions();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Transactions', function() {
    it('should create an instance of Transactions', function() {
      // uncomment below and update the code to test Transactions
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be.a(Taxamo.Transactions);
    });

    it('should have the property additionalCurrencies (base name: "additional_currencies")', function() {
      // uncomment below and update the code to test the property additionalCurrencies
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property billingCountryCode (base name: "billing_country_code")', function() {
      // uncomment below and update the code to test the property billingCountryCode
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property buyerCreditCardPrefix (base name: "buyer_credit_card_prefix")', function() {
      // uncomment below and update the code to test the property buyerCreditCardPrefix
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property buyerEmail (base name: "buyer_email")', function() {
      // uncomment below and update the code to test the property buyerEmail
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property buyerIp (base name: "buyer_ip")', function() {
      // uncomment below and update the code to test the property buyerIp
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property buyerName (base name: "buyer_name")', function() {
      // uncomment below and update the code to test the property buyerName
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property buyerTaxNumber (base name: "buyer_tax_number")', function() {
      // uncomment below and update the code to test the property buyerTaxNumber
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property buyerTaxNumberValid (base name: "buyer_tax_number_valid")', function() {
      // uncomment below and update the code to test the property buyerTaxNumberValid
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property comments (base name: "comments")', function() {
      // uncomment below and update the code to test the property comments
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property confirmTimestamp (base name: "confirm_timestamp")', function() {
      // uncomment below and update the code to test the property confirmTimestamp
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property countries (base name: "countries")', function() {
      // uncomment below and update the code to test the property countries
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property createTimestamp (base name: "create_timestamp")', function() {
      // uncomment below and update the code to test the property createTimestamp
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property currencyCode (base name: "currency_code")', function() {
      // uncomment below and update the code to test the property currencyCode
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property customData (base name: "custom_data")', function() {
      // uncomment below and update the code to test the property customData
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property customFields (base name: "custom_fields")', function() {
      // uncomment below and update the code to test the property customFields
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property customId (base name: "custom_id")', function() {
      // uncomment below and update the code to test the property customId
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property customerId (base name: "customer_id")', function() {
      // uncomment below and update the code to test the property customerId
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property deductedTaxAmount (base name: "deducted_tax_amount")', function() {
      // uncomment below and update the code to test the property deductedTaxAmount
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property evidence (base name: "evidence")', function() {
      // uncomment below and update the code to test the property evidence
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property externalKey (base name: "external_key")', function() {
      // uncomment below and update the code to test the property externalKey
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property forceCountryCode (base name: "force_country_code")', function() {
      // uncomment below and update the code to test the property forceCountryCode
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property fullyInformative (base name: "fully_informative")', function() {
      // uncomment below and update the code to test the property fullyInformative
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property invoiceAddress (base name: "invoice_address")', function() {
      // uncomment below and update the code to test the property invoiceAddress
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property invoiceDate (base name: "invoice_date")', function() {
      // uncomment below and update the code to test the property invoiceDate
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property invoiceImageUrl (base name: "invoice_image_url")', function() {
      // uncomment below and update the code to test the property invoiceImageUrl
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property invoiceNumber (base name: "invoice_number")', function() {
      // uncomment below and update the code to test the property invoiceNumber
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property invoicePlace (base name: "invoice_place")', function() {
      // uncomment below and update the code to test the property invoicePlace
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property key (base name: "key")', function() {
      // uncomment below and update the code to test the property key
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property manual (base name: "manual")', function() {
      // uncomment below and update the code to test the property manual
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property note (base name: "note")', function() {
      // uncomment below and update the code to test the property note
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property orderDate (base name: "order_date")', function() {
      // uncomment below and update the code to test the property orderDate
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property originalTransactionKey (base name: "original_transaction_key")', function() {
      // uncomment below and update the code to test the property originalTransactionKey
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property refundedTaxAmount (base name: "refunded_tax_amount")', function() {
      // uncomment below and update the code to test the property refundedTaxAmount
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property refundedTotalAmount (base name: "refunded_total_amount")', function() {
      // uncomment below and update the code to test the property refundedTotalAmount
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property subAccountId (base name: "sub_account_id")', function() {
      // uncomment below and update the code to test the property subAccountId
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property supplyDate (base name: "supply_date")', function() {
      // uncomment below and update the code to test the property supplyDate
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property taxAmount (base name: "tax_amount")', function() {
      // uncomment below and update the code to test the property taxAmount
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property taxCountryCode (base name: "tax_country_code")', function() {
      // uncomment below and update the code to test the property taxCountryCode
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property taxData (base name: "tax_data")', function() {
      // uncomment below and update the code to test the property taxData
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property taxDeducted (base name: "tax_deducted")', function() {
      // uncomment below and update the code to test the property taxDeducted
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property taxEntityName (base name: "tax_entity_name")', function() {
      // uncomment below and update the code to test the property taxEntityName
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property taxNumberService (base name: "tax_number_service")', function() {
      // uncomment below and update the code to test the property taxNumberService
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property taxSupported (base name: "tax_supported")', function() {
      // uncomment below and update the code to test the property taxSupported
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property taxTimezone (base name: "tax_timezone")', function() {
      // uncomment below and update the code to test the property taxTimezone
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property test (base name: "test")', function() {
      // uncomment below and update the code to test the property test
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property totalAmount (base name: "total_amount")', function() {
      // uncomment below and update the code to test the property totalAmount
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property transactionLines (base name: "transaction_lines")', function() {
      // uncomment below and update the code to test the property transactionLines
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

    it('should have the property verificationToken (base name: "verification_token")', function() {
      // uncomment below and update the code to test the property verificationToken
      //var instance = new Taxamo.Transactions();
      //expect(instance).to.be();
    });

  });

}));
